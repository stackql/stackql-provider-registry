openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Database Migration API
  description: Manage Cloud Database Migration Service resources on Google Cloud Platform.
  version: v1
  x-discovery-doc-revision: '20221211'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://cloud.google.com/database-migration/
servers:
  - url: https://datamigration.googleapis.com
components:
  schemas:
    DatabaseType:
      id: DatabaseType
      type: object
      properties:
        provider:
          enum:
            - DATABASE_PROVIDER_UNSPECIFIED
            - CLOUDSQL
            - RDS
            - AURORA
            - ALLOYDB
          description: The database provider.
          enumDescriptions:
            - The database provider is unknown.
            - CloudSQL runs the database.
            - RDS runs the database.
            - Amazon Aurora.
            - AlloyDB.
          type: string
        engine:
          type: string
          enumDescriptions:
            - The source database engine of the migration job is unknown.
            - The source engine is MySQL.
            - The source engine is PostgreSQL.
            - The source engine is Oracle
          enum:
            - DATABASE_ENGINE_UNSPECIFIED
            - MYSQL
            - POSTGRESQL
            - ORACLE
          description: The database engine.
      description: A message defining the database engine and provider.
    PrivateConnectivity:
      id: PrivateConnectivity
      properties:
        privateConnection:
          type: string
          description: Required. The resource name (URI) of the private connection.
      type: object
      description: Private Connectivity.
    Policy:
      properties:
        version:
          type: integer
          format: int32
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
        bindings:
          items:
            $ref: '#/components/schemas/Binding'
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
        auditConfigs:
          type: array
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: '#/components/schemas/AuditConfig'
        etag:
          type: string
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          format: byte
      type: object
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      id: Policy
    SshScript:
      description: Response message for 'GenerateSshScript' request.
      type: object
      properties:
        script:
          type: string
          description: The ssh configuration script.
      id: SshScript
    ColumnEntity:
      description: Column is not used as an independent entity, it is retrieved as part of a Table entity.
      type: object
      id: ColumnEntity
      properties:
        defaultValue:
          description: Default value of the column
          type: string
        udt:
          type: boolean
          description: Is the column a UDT
        comment:
          type: string
          description: Comment associated with the column
        precision:
          format: int32
          type: integer
          description: Column precision - when relevant
        scale:
          type: integer
          description: Column scale - when relevant
          format: int32
        nullable:
          type: boolean
          description: Is the column nullable
        collation:
          type: string
          description: Collation override - instead of table level collation
        charset:
          description: Charset override - instead of table level charset
          type: string
        arrayLength:
          description: If the column is array, of which length
          format: int32
          type: integer
        customFeatures:
          description: Custom engine specific features
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
        setValues:
          items:
            type: string
          type: array
          description: Specifies the list of values allowed in the column. List is empty if set values is not required
        array:
          type: boolean
          description: Is the column of array type
        ordinalPosition:
          type: integer
          description: Column order in the table
          format: int32
        autoGenerated:
          type: boolean
          description: Is the column auto-generated/identity
        fractionalSecondsPrecision:
          type: integer
          description: Column fractional second precision - used for timestamp based datatypes
          format: int32
        length:
          description: Column length - e.g. varchar (50)
          type: string
          format: int64
        name:
          type: string
          description: Column name
        dataType:
          type: string
          description: Column data type
    ImportRulesJobDetails:
      type: object
      description: Details regarding an Import Rules background job
      id: ImportRulesJobDetails
      properties:
        fileFormat:
          enumDescriptions:
            - Unspecified Rules Format
            - Harbour Bridge Session file
            - ORA2PG config file
          description: The requested file format
          type: string
          enum:
            - IMPORT_RULES_FILE_FORMAT_UNSPECIFIED
            - IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE
            - IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE
        files:
          type: array
          description: File names used for the import rules job
          items:
            type: string
    MigrationJobVerificationError:
      properties:
        errorCode:
          enumDescriptions:
            - An unknown error occurred
            - We failed to connect to one of the connection profile.
            - We failed to authenticate to one of the connection profile.
            - One of the involved connection profiles has an invalid configuration.
            - The versions of the source and the destination are incompatible.
            - The types of the source and the destination are incompatible.
            - No pglogical extension installed on databases, applicable for postgres.
            - pglogical node already exists on databases, applicable for postgres.
            - The value of parameter wal_level is not set to logical.
            - The value of parameter shared_preload_libraries does not include pglogical.
            - The value of parameter max_replication_slots is not sufficient.
            - The value of parameter max_wal_senders is not sufficient.
            - The value of parameter max_worker_processes is not sufficient.
            - Extensions installed are either not supported or having unsupported versions.
            - Unsupported migration type.
            - Invalid RDS logical replication.
            - The gtid_mode is not supported, applicable for MySQL.
            - The table definition is not support due to missing primary key or replica identity.
            - The definer is not supported.
            - Migration is already running at the time of restart request.
            - The source has tables with limited support. E.g. PostgreSQL tables without primary keys.
          description: Output only. An instance of ErrorCode specifying the error that occurred.
          enum:
            - ERROR_CODE_UNSPECIFIED
            - CONNECTION_FAILURE
            - AUTHENTICATION_FAILURE
            - INVALID_CONNECTION_PROFILE_CONFIG
            - VERSION_INCOMPATIBILITY
            - CONNECTION_PROFILE_TYPES_INCOMPATIBILITY
            - NO_PGLOGICAL_INSTALLED
            - PGLOGICAL_NODE_ALREADY_EXISTS
            - INVALID_WAL_LEVEL
            - INVALID_SHARED_PRELOAD_LIBRARY
            - INSUFFICIENT_MAX_REPLICATION_SLOTS
            - INSUFFICIENT_MAX_WAL_SENDERS
            - INSUFFICIENT_MAX_WORKER_PROCESSES
            - UNSUPPORTED_EXTENSIONS
            - UNSUPPORTED_MIGRATION_TYPE
            - INVALID_RDS_LOGICAL_REPLICATION
            - UNSUPPORTED_GTID_MODE
            - UNSUPPORTED_TABLE_DEFINITION
            - UNSUPPORTED_DEFINER
            - CANT_RESTART_RUNNING_MIGRATION
            - TABLES_WITH_LIMITED_SUPPORT
          type: string
          readOnly: true
        errorMessage:
          readOnly: true
          description: Output only. A formatted message with further details about the error and a CTA.
          type: string
        errorDetailMessage:
          description: Output only. A specific detailed error message, if supplied by the engine.
          readOnly: true
          type: string
      id: MigrationJobVerificationError
      type: object
      description: Error message of a verification Migration job.
    AlloyDbConnectionProfile:
      id: AlloyDbConnectionProfile
      type: object
      description: Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster.
      properties:
        settings:
          $ref: '#/components/schemas/AlloyDbSettings'
          description: Immutable. Metadata used to create the destination AlloyDB cluster.
        clusterId:
          type: string
          description: Required. The AlloyDB cluster ID that this connection profile is associated with.
    GenerateSshScriptRequest:
      type: object
      description: Request message for 'GenerateSshScript' request.
      properties:
        vmSelectionConfig:
          $ref: '#/components/schemas/VmSelectionConfig'
          description: The VM selection configuration
        vmPort:
          type: integer
          description: The port that will be open on the bastion host
          format: int32
        vmCreationConfig:
          $ref: '#/components/schemas/VmCreationConfig'
          description: The VM creation configuration
        vm:
          type: string
          description: Required. Bastion VM Instance name to use or to create.
      id: GenerateSshScriptRequest
    DescribeConversionWorkspaceRevisionsResponse:
      type: object
      properties:
        revisions:
          items:
            $ref: '#/components/schemas/ConversionWorkspace'
          type: array
          description: The list of conversion workspace revisions.
      description: Response message for 'DescribeConversionWorkspaceRevisions' request.
      id: DescribeConversionWorkspaceRevisionsResponse
    Binding:
      description: Associates `members`, or principals, with a `role`.
      id: Binding
      type: object
      properties:
        role:
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
        members:
          items:
            type: string
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. '
          type: array
        condition:
          description: The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
    VmCreationConfig:
      id: VmCreationConfig
      type: object
      description: VM creation configuration message
      properties:
        vmMachineType:
          description: Required. VM instance machine type to create.
          type: string
        vmZone:
          type: string
          description: The Google Cloud Platform zone to create the VM in.
        subnet:
          type: string
          description: The subnet name the vm needs to be created in.
    Location:
      id: Location
      description: A resource that represents Google Cloud Platform location.
      properties:
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: Service-specific metadata. For example the available capacity at the given location.
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        displayName:
          type: string
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
      type: object
    SearchBackgroundJobsResponse:
      id: SearchBackgroundJobsResponse
      type: object
      description: Response message for 'SearchBackgroundJobs' request.
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/BackgroundJobLogEntry'
          description: The list of conversion workspace mapping rules.
    ImportMappingRulesRequest:
      type: object
      id: ImportMappingRulesRequest
      properties:
        autoCommit:
          type: boolean
          description: Should the conversion workspace be committed automatically after the import operation.
        rulesFiles:
          items:
            $ref: '#/components/schemas/RulesFile'
          description: One or more rules files
          type: array
        rulesFormat:
          enum:
            - IMPORT_RULES_FILE_FORMAT_UNSPECIFIED
            - IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE
            - IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE
          description: The format of the rules content file.
          enumDescriptions:
            - Unspecified Rules Format
            - Harbour Bridge Session file
            - ORA2PG config file
          type: string
      description: Request message for 'ImportMappingRules' request.
    IndexEntity:
      type: object
      description: Index is not used as an independent entity, it is retrieved as part of a Table entity.
      properties:
        unique:
          description: boolean value indicating whether the index is unique
          type: boolean
        type:
          type: string
          description: Type of index - e.g. B-TREE
        name:
          type: string
          description: The name of the index
        tableColumns:
          items:
            type: string
          description: Table columns used as part of the Index for e.g. B-TREE index should list the columns which constitutes the index.
          type: array
        customFeatures:
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
          description: Custom engine specific features
      id: IndexEntity
    TableEntity:
      id: TableEntity
      type: object
      description: Table's parent is a schema.
      properties:
        constraints:
          items:
            $ref: '#/components/schemas/ConstraintEntity'
          type: array
          description: Table Constraints.
        triggers:
          items:
            $ref: '#/components/schemas/TriggerEntity'
          type: array
          description: Table triggers.
        comment:
          type: string
          description: Comment associated with the table
        indices:
          type: array
          items:
            $ref: '#/components/schemas/IndexEntity'
          description: Table Indices.
        customFeatures:
          description: Custom engine specific features
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
        columns:
          description: Table Columns.
          type: array
          items:
            $ref: '#/components/schemas/ColumnEntity'
    TriggerEntity:
      id: TriggerEntity
      properties:
        triggeringEvents:
          description: The DML, DDL, or database events that fires the trigger, e.g. INSERT, UPDATE
          items:
            type: string
          type: array
        name:
          description: The name of the trigger
          type: string
        sqlCode:
          type: string
          description: The SQL code which creates the trigger
        triggerType:
          type: string
          description: Indicates when the trigger fires, e.g. BEFORE STATEMENT, AFTER EACH ROW
        customFeatures:
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
          description: Custom engine specific features
      description: Trigger is not used as an independent entity, it is retrieved as part of a Table entity.
      type: object
    DatabaseEntity:
      id: DatabaseEntity
      type: object
      properties:
        mappings:
          items:
            $ref: '#/components/schemas/EntityMapping'
          type: array
          description: Details about entity mappings. For source tree entities, this holds the draft entities which were generated by the mapping rules. For draft tree entities, this holds the source entities which were converted to form the draft entity. Destination entities will have no mapping details.
        databasePackage:
          $ref: '#/components/schemas/PackageEntity'
          description: Package
        storedProcedure:
          description: Stored Procedure
          $ref: '#/components/schemas/StoredProcedureEntity'
        shortName:
          description: The short name (e.g. table name) of the entity.
          type: string
        tree:
          type: string
          enumDescriptions:
            - Tree Type Unspecified.
            - Tree of entities loaded from a source database.
            - Tree of entities converted from the source tree using the mapping rules.
            - Tree of entities observed on the destination database.
          description: The type of tree the entity belongs to.
          enum:
            - TREE_TYPE_UNSPECIFIED
            - SOURCE
            - DRAFT
            - DESTINATION
        sequence:
          $ref: '#/components/schemas/SequenceEntity'
          description: Sequence
        synonym:
          description: Synonym
          $ref: '#/components/schemas/SynonymEntity'
        table:
          $ref: '#/components/schemas/TableEntity'
          description: Table.
        view:
          description: View
          $ref: '#/components/schemas/ViewEntity'
        schema:
          description: Schema.
          $ref: '#/components/schemas/SchemaEntity'
        databaseFunction:
          $ref: '#/components/schemas/FunctionEntity'
          description: Function
        entityType:
          enum:
            - DATABASE_ENTITY_TYPE_UNSPECIFIED
            - DATABASE_ENTITY_TYPE_SCHEMA
            - DATABASE_ENTITY_TYPE_TABLE
            - DATABASE_ENTITY_TYPE_COLUMN
            - DATABASE_ENTITY_TYPE_CONSTRAINT
            - DATABASE_ENTITY_TYPE_INDEX
            - DATABASE_ENTITY_TYPE_TRIGGER
            - DATABASE_ENTITY_TYPE_VIEW
            - DATABASE_ENTITY_TYPE_SEQUENCE
            - DATABASE_ENTITY_TYPE_STORED_PROCEDURE
            - DATABASE_ENTITY_TYPE_FUNCTION
            - DATABASE_ENTITY_TYPE_SYNONYM
            - DATABASE_ENTITY_TYPE_DATABASE_PACKAGE
            - DATABASE_ENTITY_TYPE_UDT
          type: string
          description: The type of the database entity (table, view, index, ...).
          enumDescriptions:
            - Unspecified database entity type
            - Schema
            - Table
            - Column
            - Constraint
            - Index
            - Trigger
            - View
            - Sequence
            - Stored Procedure
            - Function
            - Synonym
            - Package
            - UDT
        parentEntity:
          type: string
          description: The full name of the parent entity (e.g. schema name).
      description: The base entity type for all the database related entities The message contains the entity name, the name of its parent, its type and the specific details per its type
    RulesFile:
      description: Details of a single rules file
      id: RulesFile
      properties:
        rulesSourceFilename:
          description: The filename of the rules that needs to be converted. This is used mainly so future logs of the import rules job will contain this detail and can therefore be searched by it later
          type: string
        rulesContent:
          type: string
          description: The text content of the rules that needs to be converted
      type: object
    StaticIpConnectivity:
      properties: {}
      description: The source database will allow incoming connections from the destination database's public IP. You can retrieve the Cloud SQL instance's public IP from the Cloud SQL console or using Cloud SQL APIs. No additional configuration is required.
      type: object
      id: StaticIpConnectivity
    PrivateConnection:
      description: The PrivateConnection resource is used to establish private connectivity with the customer's network.
      type: object
      id: PrivateConnection
      properties:
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The last update time of the resource.
        displayName:
          type: string
          description: The private connection display name.
        createTime:
          type: string
          description: Output only. The create time of the resource.
          readOnly: true
          format: google-datetime
        name:
          description: The resource's name.
          type: string
        error:
          readOnly: true
          $ref: '#/components/schemas/Status'
          description: Output only. The error details in case of state FAILED.
        state:
          type: string
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - CREATED
            - FAILED
            - DELETING
            - FAILED_TO_DELETE
            - DELETED
          description: Output only. The state of the Private Connection.
          enumDescriptions:
            - ''
            - The private connection is in creation state - creating resources.
            - The private connection has been created with all of its resources.
            - The private connection creation has failed.
            - The private connection is being deleted.
            - Delete request has failed, resource is in invalid state.
            - The private connection has been deleted.
        vpcPeeringConfig:
          description: VPC Peering Config.
          $ref: '#/components/schemas/VpcPeeringConfig'
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'The resource labels for private connections to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.'
    CancelOperationRequest:
      id: CancelOperationRequest
      properties: {}
      description: The request message for Operations.CancelOperation.
      type: object
    CommitConversionWorkspaceRequest:
      id: CommitConversionWorkspaceRequest
      description: Request message for 'CommitConversionWorkspace' request.
      properties:
        commitName:
          type: string
          description: Optional name of the commit.
      type: object
    ReverseSshConnectivity:
      type: object
      properties:
        vpc:
          description: The name of the VPC to peer with the Cloud SQL private network.
          type: string
        vmPort:
          format: int32
          type: integer
          description: Required. The forwarding port of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.
        vm:
          type: string
          description: The name of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.
        vmIp:
          type: string
          description: Required. The IP of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.
      id: ReverseSshConnectivity
      description: The details needed to configure a reverse SSH tunnel between the source and destination databases. These details will be used when calling the generateSshScript method (see https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/generateSshScript) to produce the script that will help set up the reverse SSH tunnel, and to set up the VPC peering between the Cloud SQL private network and the VPC.
    ResumeMigrationJobRequest:
      id: ResumeMigrationJobRequest
      properties: {}
      description: Request message for 'ResumeMigrationJob' request.
      type: object
    ListPrivateConnectionsResponse:
      description: Response message for 'ListPrivateConnections' request.
      type: object
      properties:
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
        privateConnections:
          items:
            $ref: '#/components/schemas/PrivateConnection'
          type: array
          description: List of private connections.
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
      id: ListPrivateConnectionsResponse
    StopMigrationJobRequest:
      type: object
      properties: {}
      id: StopMigrationJobRequest
      description: Request message for 'StopMigrationJob' request.
    ListOperationsResponse:
      type: object
      id: ListOperationsResponse
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
      description: The response message for Operations.ListOperations.
    AuditLogConfig:
      type: object
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          type: string
          description: The log type that this config enables.
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
      id: AuditLogConfig
    EntityMappingLogEntry:
      id: EntityMappingLogEntry
      type: object
      properties:
        ruleId:
          type: string
          description: Which rule caused it.
        ruleRevisionId:
          description: Rule revision id
          type: string
        mappingComment:
          description: Comment.
          type: string
      description: A single record of a rule which was used for a mapping.
    ForwardSshTunnelConnectivity:
      type: object
      properties:
        hostname:
          description: Required. Hostname for the SSH tunnel.
          type: string
        port:
          type: integer
          description: Port for the SSH tunnel, default value is 22.
          format: int32
        username:
          description: Required. Username for the SSH tunnel.
          type: string
        privateKey:
          type: string
          description: Input only. SSH private key.
        password:
          description: Input only. SSH password.
          type: string
      description: Forward SSH Tunnel connectivity.
      id: ForwardSshTunnelConnectivity
    PostgreSqlConnectionProfile:
      type: object
      properties:
        passwordSet:
          readOnly: true
          type: boolean
          description: Output only. Indicates If this connection profile password is stored.
        ssl:
          description: SSL configuration for the destination to connect to the source database.
          $ref: '#/components/schemas/SslConfig'
        port:
          format: int32
          type: integer
          description: Required. The network port of the source PostgreSQL database.
        username:
          description: Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.
          type: string
        staticIpConnectivity:
          $ref: '#/components/schemas/StaticIpConnectivity'
          description: Static ip connectivity data (default, no additional details needed).
        password:
          description: Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.
          type: string
        host:
          type: string
          description: Required. The IP or hostname of the source PostgreSQL database.
        cloudSqlId:
          description: If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.
          type: string
        networkArchitecture:
          readOnly: true
          enum:
            - NETWORK_ARCHITECTURE_UNSPECIFIED
            - NETWORK_ARCHITECTURE_OLD_CSQL_PRODUCER
            - NETWORK_ARCHITECTURE_NEW_CSQL_PRODUCER
          type: string
          description: Output only. If the source is a Cloud SQL database, this field indicates the network architecture it's associated with.
          enumDescriptions:
            - ''
            - Instance is in Cloud SQL's old producer network architecture.
            - Instance is in Cloud SQL's new producer network architecture.
        privateServiceConnectConnectivity:
          $ref: '#/components/schemas/PrivateServiceConnectConnectivity'
          description: Private service connect connectivity.
      description: Specifies connection parameters required specifically for PostgreSQL databases.
      id: PostgreSqlConnectionProfile
    SqlIpConfig:
      description: IP Management configuration.
      type: object
      id: SqlIpConfig
      properties:
        authorizedNetworks:
          type: array
          description: The list of external networks that are allowed to connect to the instance using the IP. See https://en.wikipedia.org/wiki/CIDR_notation#CIDR_notation, also known as 'slash' notation (e.g. `192.168.100.0/24`).
          items:
            $ref: '#/components/schemas/SqlAclEntry'
        enableIpv4:
          description: Whether the instance should be assigned an IPv4 address or not.
          type: boolean
        requireSsl:
          description: Whether SSL connections over IP should be enforced or not.
          type: boolean
        privateNetwork:
          type: string
          description: The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set.
    CloudSqlConnectionProfile:
      type: object
      description: Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination database instance.
      id: CloudSqlConnectionProfile
      properties:
        settings:
          description: Immutable. Metadata used to create the destination Cloud SQL database.
          $ref: '#/components/schemas/CloudSqlSettings'
        privateIp:
          description: Output only. The Cloud SQL database instance's private IP.
          type: string
          readOnly: true
        additionalPublicIp:
          description: Output only. The Cloud SQL database instance's additional (outgoing) public IP. Used when the Cloud SQL database availability type is REGIONAL (i.e. multiple zones / highly available).
          readOnly: true
          type: string
        publicIp:
          type: string
          readOnly: true
          description: Output only. The Cloud SQL database instance's public IP.
        cloudSqlId:
          type: string
          description: Output only. The Cloud SQL instance ID that this connection profile is associated with.
          readOnly: true
    SynonymEntity:
      id: SynonymEntity
      description: Synonym's parent is a schema.
      properties:
        sourceEntity:
          description: The name of the entity for which the synonym is being created (the source)
          type: string
        sourceType:
          type: string
          enum:
            - DATABASE_ENTITY_TYPE_UNSPECIFIED
            - DATABASE_ENTITY_TYPE_SCHEMA
            - DATABASE_ENTITY_TYPE_TABLE
            - DATABASE_ENTITY_TYPE_COLUMN
            - DATABASE_ENTITY_TYPE_CONSTRAINT
            - DATABASE_ENTITY_TYPE_INDEX
            - DATABASE_ENTITY_TYPE_TRIGGER
            - DATABASE_ENTITY_TYPE_VIEW
            - DATABASE_ENTITY_TYPE_SEQUENCE
            - DATABASE_ENTITY_TYPE_STORED_PROCEDURE
            - DATABASE_ENTITY_TYPE_FUNCTION
            - DATABASE_ENTITY_TYPE_SYNONYM
            - DATABASE_ENTITY_TYPE_DATABASE_PACKAGE
            - DATABASE_ENTITY_TYPE_UDT
          enumDescriptions:
            - Unspecified database entity type
            - Schema
            - Table
            - Column
            - Constraint
            - Index
            - Trigger
            - View
            - Sequence
            - Stored Procedure
            - Function
            - Synonym
            - Package
            - UDT
          description: The type of the entity for which the synonym is being created (usually a table or a sequence)
        customFeatures:
          type: object
          description: Custom engine specific features
          additionalProperties:
            type: any
            description: Properties of the object.
      type: object
    ConnectionProfile:
      description: A connection profile definition.
      id: ConnectionProfile
      properties:
        state:
          description: The current connection profile state (e.g. DRAFT, READY, or FAILED).
          type: string
          enumDescriptions:
            - The state of the connection profile is unknown.
            - The connection profile is in draft mode and fully editable.
            - The connection profile is being created.
            - The connection profile is ready.
            - The connection profile is being updated.
            - The connection profile is being deleted.
            - The connection profile has been deleted.
            - The last action on the connection profile failed.
          enum:
            - STATE_UNSPECIFIED
            - DRAFT
            - CREATING
            - READY
            - UPDATING
            - DELETING
            - DELETED
            - FAILED
        displayName:
          description: The connection profile display name.
          type: string
        updateTime:
          readOnly: true
          description: 'Output only. The timestamp when the resource was last updated. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".'
          format: google-datetime
          type: string
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: 'Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".'
        alloydb:
          description: An AlloyDB cluster connection profile.
          $ref: '#/components/schemas/AlloyDbConnectionProfile'
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.'
        error:
          $ref: '#/components/schemas/Status'
          readOnly: true
          description: Output only. The error details in case of state FAILED.
        name:
          type: string
          description: The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.
        cloudsql:
          description: A CloudSQL database connection profile.
          $ref: '#/components/schemas/CloudSqlConnectionProfile'
        postgresql:
          $ref: '#/components/schemas/PostgreSqlConnectionProfile'
          description: A PostgreSQL database connection profile.
        provider:
          enum:
            - DATABASE_PROVIDER_UNSPECIFIED
            - CLOUDSQL
            - RDS
            - AURORA
            - ALLOYDB
          enumDescriptions:
            - The database provider is unknown.
            - CloudSQL runs the database.
            - RDS runs the database.
            - Amazon Aurora.
            - AlloyDB.
          type: string
          description: The database provider.
        oracle:
          description: An Oracle database connection profile.
          $ref: '#/components/schemas/OracleConnectionProfile'
        mysql:
          $ref: '#/components/schemas/MySqlConnectionProfile'
          description: A MySQL database connection profile.
      type: object
    SeedConversionWorkspaceRequest:
      id: SeedConversionWorkspaceRequest
      type: object
      description: Request message for 'SeedConversionWorkspace' request.
      properties:
        sourceConnectionProfile:
          type: string
          description: Fully qualified (Uri) name of the source connection profile.
        autoCommit:
          description: Should the conversion workspace be committed automatically after the seed operation.
          type: boolean
        destinationConnectionProfile:
          description: Fully qualified (Uri) name of the destination connection profile.
          type: string
    DatabaseEngineInfo:
      type: object
      description: The type and version of a source or destination DB.
      id: DatabaseEngineInfo
      properties:
        engine:
          description: Required. Engine Type.
          enumDescriptions:
            - The source database engine of the migration job is unknown.
            - The source engine is MySQL.
            - The source engine is PostgreSQL.
            - The source engine is Oracle
          type: string
          enum:
            - DATABASE_ENGINE_UNSPECIFIED
            - MYSQL
            - POSTGRESQL
            - ORACLE
        version:
          type: string
          description: Required. Engine named version, for e.g. 12.c.1
    DumpFlags:
      description: Dump flags definition.
      type: object
      id: DumpFlags
      properties:
        dumpFlags:
          items:
            $ref: '#/components/schemas/DumpFlag'
          description: The flags for the initial dump.
          type: array
    PackageEntity:
      properties:
        packageSqlCode:
          type: string
          description: The SQL code which creates the package
        packageBody:
          description: The SQL code which creates the package body. If the package specification has cursors or subprograms, then the package body is mandatory.
          type: string
        customFeatures:
          additionalProperties:
            type: any
            description: Properties of the object.
          description: Custom engine specific features
          type: object
      description: Package's parent is a schema.
      id: PackageEntity
      type: object
    MySqlConnectionProfile:
      properties:
        password:
          description: Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.
          type: string
        host:
          description: Required. The IP or hostname of the source MySQL database.
          type: string
        cloudSqlId:
          description: If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.
          type: string
        ssl:
          $ref: '#/components/schemas/SslConfig'
          description: SSL configuration for the destination to connect to the source database.
        username:
          description: Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.
          type: string
        passwordSet:
          type: boolean
          readOnly: true
          description: Output only. Indicates If this connection profile password is stored.
        port:
          format: int32
          description: Required. The network port of the source MySQL database.
          type: integer
      type: object
      description: Specifies connection parameters required specifically for MySQL databases.
      id: MySqlConnectionProfile
    Empty:
      type: object
      id: Empty
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    Expr:
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      type: object
      id: Expr
      properties:
        description:
          type: string
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        title:
          type: string
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
    RestartMigrationJobRequest:
      id: RestartMigrationJobRequest
      type: object
      properties: {}
      description: Request message for 'RestartMigrationJob' request.
    AuditConfig:
      properties:
        service:
          type: string
          description: Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
        auditLogConfigs:
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          type: array
          description: The configuration for logging of each type of permission.
      type: object
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      id: AuditConfig
    MigrationJob:
      id: MigrationJob
      type: object
      properties:
        dumpFlags:
          description: The initial dump flags. This field and the "dump_path" field are mutually exclusive.
          $ref: '#/components/schemas/DumpFlags'
        endTime:
          type: string
          description: Output only. If the migration job is completed, the time when it was completed.
          readOnly: true
          format: google-datetime
        updateTime:
          type: string
          readOnly: true
          description: 'Output only. The timestamp when the migration job resource was last updated. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".'
          format: google-datetime
        vpcPeeringConnectivity:
          description: The details of the VPC network that the source database is located in.
          $ref: '#/components/schemas/VpcPeeringConnectivity'
        destination:
          type: string
          description: Required. The resource name (URI) of the destination connection profile.
        displayName:
          description: The migration job display name.
          type: string
        source:
          type: string
          description: Required. The resource name (URI) of the source connection profile.
        conversionWorkspace:
          description: The conversion workspace used by the migration.
          $ref: '#/components/schemas/ConversionWorkspaceInfo'
        error:
          $ref: '#/components/schemas/Status'
          description: Output only. The error details in case of state FAILED.
          readOnly: true
        reverseSshConnectivity:
          $ref: '#/components/schemas/ReverseSshConnectivity'
          description: The details needed to communicate to the source over Reverse SSH tunnel connectivity.
        filter:
          description: This field can be used to select the entities to migrate as part of the migration job. It uses AIP-160 notation to select a subset of the entities configured on the associated conversion-workspace. This field should not be set on migration-jobs that are not associated with a conversion workspace.
          type: string
        createTime:
          description: 'Output only. The timestamp when the migration job resource was created. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".'
          format: google-datetime
          type: string
          readOnly: true
        duration:
          description: 'Output only. The duration of the migration job (in seconds). A duration in seconds with up to nine fractional digits, terminated by ''s''. Example: "3.5s".'
          readOnly: true
          format: google-duration
          type: string
        state:
          type: string
          description: The current migration job state.
          enum:
            - STATE_UNSPECIFIED
            - MAINTENANCE
            - DRAFT
            - CREATING
            - NOT_STARTED
            - RUNNING
            - FAILED
            - COMPLETED
            - DELETING
            - STOPPING
            - STOPPED
            - DELETED
            - UPDATING
            - STARTING
            - RESTARTING
            - RESUMING
          enumDescriptions:
            - The state of the migration job is unknown.
            - The migration job is down for maintenance.
            - The migration job is in draft mode and no resources are created.
            - The migration job is being created.
            - The migration job is created and not started.
            - The migration job is running.
            - The migration job failed.
            - The migration job has been completed.
            - The migration job is being deleted.
            - The migration job is being stopped.
            - The migration job is currently stopped.
            - The migration job has been deleted.
            - The migration job is being updated.
            - The migration job is starting.
            - The migration job is restarting.
            - The migration job is resuming.
        labels:
          description: 'The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.'
          additionalProperties:
            type: string
          type: object
        name:
          description: 'The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/migrationJobs/{migrationJob}.'
          type: string
        type:
          enum:
            - TYPE_UNSPECIFIED
            - ONE_TIME
            - CONTINUOUS
          enumDescriptions:
            - The type of the migration job is unknown.
            - The migration job is a one time migration.
            - The migration job is a continuous migration.
          type: string
          description: Required. The migration job type.
        dumpPath:
          type: string
          description: 'The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]). This field and the "dump_flags" field are mutually exclusive.'
        staticIpConnectivity:
          description: static ip connectivity data (default, no additional details needed).
          $ref: '#/components/schemas/StaticIpConnectivity'
        phase:
          readOnly: true
          description: Output only. The current migration job phase.
          enum:
            - PHASE_UNSPECIFIED
            - FULL_DUMP
            - CDC
            - PROMOTE_IN_PROGRESS
            - WAITING_FOR_SOURCE_WRITES_TO_STOP
            - PREPARING_THE_DUMP
          enumDescriptions:
            - The phase of the migration job is unknown.
            - The migration job is in the full dump phase.
            - The migration job is CDC phase.
            - The migration job is running the promote phase.
            - Only RDS flow - waiting for source writes to stop
            - Only RDS flow - the sources writes stopped, waiting for dump to begin
          type: string
        destinationDatabase:
          description: The database engine type and provider of the destination.
          $ref: '#/components/schemas/DatabaseType'
        sourceDatabase:
          $ref: '#/components/schemas/DatabaseType'
          description: The database engine type and provider of the source.
      description: Represents a Database Migration Service migration job object.
    SqlAclEntry:
      description: An entry for an Access Control list.
      id: SqlAclEntry
      type: object
      properties:
        value:
          description: The allowlisted value for the access control list.
          type: string
        expireTime:
          format: google-datetime
          description: 'The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example: `2012-11-15T16:19:00.094Z`.'
          type: string
        label:
          type: string
          description: A label to identify this entry.
        ttl:
          format: google-duration
          description: Input only. The time-to-leave of this access control entry.
          type: string
    ConversionWorkspace:
      properties:
        latestCommitTime:
          format: google-datetime
          description: Output only. The timestamp when the workspace was committed.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The timestamp when the workspace resource was last updated.
          type: string
          format: google-datetime
          readOnly: true
        destination:
          $ref: '#/components/schemas/DatabaseEngineInfo'
          description: Required. The destination engine details.
        source:
          $ref: '#/components/schemas/DatabaseEngineInfo'
          description: Required. The source engine details.
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The timestamp when the workspace resource was created.
        latestCommitId:
          description: Output only. The latest commit id
          type: string
          readOnly: true
        globalSettings:
          type: object
          additionalProperties:
            type: string
          description: 'A generic list of settings for the workspace. The settings are database pair dependant and can indicate default behavior for the mapping rules engine or turn on or off specific features. Such examples can be: convert_foreign_key_to_interleave=true, skip_triggers=false, ignore_non_table_synonyms=true'
        displayName:
          description: The display name for the workspace
          type: string
        hasUncommittedChanges:
          type: boolean
          readOnly: true
          description: Output only. Whether the workspace has uncommitted changes (changes which were made after the workspace was committed)
        name:
          type: string
          description: 'Full name of the workspace resource, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.'
      id: ConversionWorkspace
      description: The main conversion workspace resource entity.
      type: object
    ListMigrationJobsResponse:
      description: Response message for 'ListMigrationJobs' request.
      properties:
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        migrationJobs:
          description: The list of migration jobs objects.
          items:
            $ref: '#/components/schemas/MigrationJob'
          type: array
      id: ListMigrationJobsResponse
      type: object
    SequenceEntity:
      id: SequenceEntity
      type: object
      description: Sequence's parent is a schema.
      properties:
        startValue:
          format: byte
          type: string
          description: Start number for the sequence represented as bytes to accommodate large numbers
        cycle:
          type: boolean
          description: Indicates whether the sequence value should cycle through
        maxValue:
          format: byte
          type: string
          description: Maximum number for the sequence represented as bytes to accommodate large numbers
        cache:
          type: string
          format: int64
          description: Indicates number of entries to cache / precreate
        customFeatures:
          additionalProperties:
            description: Properties of the object.
            type: any
          type: object
          description: Custom engine specific features
        increment:
          format: int64
          type: string
          description: Increment value for the sequence
        minValue:
          type: string
          format: byte
          description: Minimum number for the sequence represented as bytes to accommodate large numbers
    GoogleCloudClouddmsV1OperationMetadata:
      type: object
      description: Represents the metadata of the long-running operation.
      id: GoogleCloudClouddmsV1OperationMetadata
      properties:
        target:
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
        requestedCancellation:
          readOnly: true
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          type: boolean
        verb:
          readOnly: true
          type: string
          description: Output only. Name of the verb executed by the operation.
        statusMessage:
          readOnly: true
          description: Output only. Human-readable status of the operation, if any.
          type: string
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
        endTime:
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
          type: string
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
    Operation:
      id: Operation
      type: object
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          type: boolean
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
    ListConnectionProfilesResponse:
      description: Response message for 'ListConnectionProfiles' request.
      type: object
      properties:
        connectionProfiles:
          type: array
          description: The response list of connection profiles.
          items:
            $ref: '#/components/schemas/ConnectionProfile'
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
      id: ListConnectionProfilesResponse
    BackgroundJobLogEntry:
      properties:
        completionState:
          enum:
            - JOB_COMPLETION_STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
          enumDescriptions:
            - The status is not specified. This state will be used when job is not yet finished.
            - Success.
            - Error.
          description: Job completion state, i.e. the final state after the job completed.
          type: string
        startTime:
          description: The timestamp when the background job was started.
          format: google-datetime
          type: string
        importRulesJobDetails:
          $ref: '#/components/schemas/ImportRulesJobDetails'
          description: Import rules job details
        id:
          type: string
          description: The background job log entry id
        jobType:
          description: The type of job that was executed.
          type: string
          enum:
            - BACKGROUND_JOB_TYPE_UNSPECIFIED
            - BACKGROUND_JOB_TYPE_SOURCE_SEED
            - BACKGROUND_JOB_TYPE_CONVERT
            - BACKGROUND_JOB_TYPE_APPLY_DESTINATION
            - BACKGROUND_JOB_TYPE_IMPORT_RULES_FILE
          enumDescriptions:
            - Unspecified background job type
            - Job to seed from the source database
            - Job to convert the source database into a draft of the destination database
            - Job to apply the draft tree onto the destination
            - Job to import and convert mapping rules from an external source such as an ora2pg config file
        completionComment:
          description: Job completion comment, such as how many entities were seeded, how many warnings were found during conversion and similar information.
          type: string
        finishTime:
          description: The timestamp when the background job was finished.
          format: google-datetime
          type: string
        seedJobDetails:
          $ref: '#/components/schemas/SeedJobDetails'
          description: Seed job details
        requestAutocommit:
          type: boolean
          description: Whether the client requested the conversion workspace to be committed after a successful completion of the job.
      type: object
      id: BackgroundJobLogEntry
      description: Execution log of a background job.
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      properties:
        permissions:
          description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
      description: Request message for `TestIamPermissions` method.
      type: object
    ConstraintEntity:
      description: Constraint is not used as an independent entity, it is retrieved as part of another entity such as Table or View.
      properties:
        tableName:
          type: string
          description: Table which is associated with the constraint. In case the constraint is defined on a table, this field is left empty as this information is stored in parent_name. However, if constraint is defined on a view, this field stores the table name on which the view is defined.
        name:
          description: The name of the table constraint
          type: string
        referenceColumns:
          description: 'Reference Columns which may be associated with the constraint. eg: if the constraint is a FOREIGN_KEY, this represents the list of full names of referenced columns by the foreign key.'
          items:
            type: string
          type: array
        customFeatures:
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
          description: Custom engine specific features
        type:
          type: string
          description: Type of constraint - e.g. unique, primary key, foreign key (currently only primary key is supported)
        referenceTable:
          description: 'Reference table which may be associated with the constraint. eg: if the constraint is a FOREIGN_KEY, this represents the list of full name of the referenced table by the foreign key.'
          type: string
        tableColumns:
          items:
            type: string
          description: Table columns used as part of the Constraint for e.g. primary key constraint should list the columns which constitutes the key
          type: array
      type: object
      id: ConstraintEntity
    DumpFlag:
      id: DumpFlag
      type: object
      description: Dump flag definition.
      properties:
        value:
          description: The value of the flag.
          type: string
        name:
          description: The name of the flag
          type: string
    PrimaryInstanceSettings:
      properties:
        privateIp:
          type: string
          description: Output only. The private IP address for the Instance. This is the connection endpoint for an end-user application.
          readOnly: true
        id:
          description: Required. The ID of the AlloyDB primary instance. The ID must satisfy the regex expression "[a-z0-9-]+".
          type: string
        databaseFlags:
          description: Database flags to pass to AlloyDB when DMS is creating the AlloyDB cluster and instances. See the AlloyDB documentation for how these can be used.
          type: object
          additionalProperties:
            type: string
        labels:
          type: object
          description: Labels for the AlloyDB primary instance created by DMS. An object containing a list of 'key', 'value' pairs.
          additionalProperties:
            type: string
        machineConfig:
          $ref: '#/components/schemas/MachineConfig'
          description: Configuration for the machines that host the underlying database engine.
      id: PrimaryInstanceSettings
      type: object
      description: Settings for the cluster's primary instance
    VerifyMigrationJobRequest:
      type: object
      description: Request message for 'VerifyMigrationJob' request.
      properties: {}
      id: VerifyMigrationJobRequest
    StartMigrationJobRequest:
      description: Request message for 'StartMigrationJob' request.
      properties: {}
      type: object
      id: StartMigrationJobRequest
    VpcPeeringConfig:
      properties:
        vpcName:
          description: Required. Fully qualified name of the VPC DMS will peer to.
          type: string
        subnet:
          type: string
          description: Required. A free subnet for peering. (CIDR of /29)
      description: The VPC Peering configuration is used to create VPC peering with the consumer's VPC.
      id: VpcPeeringConfig
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        locations:
          items:
            $ref: '#/components/schemas/Location'
          type: array
          description: A list of locations that matches the specified filter in the request.
      type: object
      id: ListLocationsResponse
    RollbackConversionWorkspaceRequest:
      id: RollbackConversionWorkspaceRequest
      description: Request message for 'RollbackConversionWorkspace' request.
      type: object
      properties: {}
    StoredProcedureEntity:
      properties:
        sqlCode:
          type: string
          description: The SQL code which creates the stored procedure
        customFeatures:
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
          description: Custom engine specific features
      description: Stored procedure's parent is a schema.
      id: StoredProcedureEntity
      type: object
    Status:
      properties:
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
        code:
          type: integer
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
        details:
          type: array
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
    UserPassword:
      id: UserPassword
      description: The username/password for a database user. Used for specifying initial users at cluster creation time.
      type: object
      properties:
        password:
          description: The initial password for the user.
          type: string
        user:
          description: The database username.
          type: string
        passwordSet:
          description: Output only. Indicates if the initial_user.password field has been set.
          type: boolean
          readOnly: true
    MachineConfig:
      type: object
      description: MachineConfig describes the configuration of a machine.
      id: MachineConfig
      properties:
        cpuCount:
          type: integer
          description: The number of CPU's in the VM instance.
          format: int32
    ViewEntity:
      type: object
      properties:
        sqlCode:
          type: string
          description: The SQL code which creates the view.
        constraints:
          type: array
          description: View Constraints.
          items:
            $ref: '#/components/schemas/ConstraintEntity'
        customFeatures:
          description: Custom engine specific features
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
      description: View's parent is a schema.
      id: ViewEntity
    EntityMapping:
      type: object
      id: EntityMapping
      properties:
        sourceEntity:
          type: string
          description: Source entity full name. The source entity can also be a column, index or constraint using the same naming notation schema.table.column
        mappingLog:
          type: array
          items:
            $ref: '#/components/schemas/EntityMappingLogEntry'
          description: Entity mapping log entries. Multiple rules can be effective and contribute changes to a converted entity such as, a rule can handle the entity name, another rule can handle an entity type. In addition, rules which did not change the entity are also logged along the with the reason preventing them to do so.
        draftEntity:
          description: Target entity full name. The draft entity can also include a column, index or constraint using the same naming notation schema.table.column
          type: string
      description: Details of the mappings of a database entity.
    VmSelectionConfig:
      type: object
      properties:
        vmZone:
          type: string
          description: Required. The Google Cloud Platform zone the VM is located.
      id: VmSelectionConfig
      description: VM selection configuration message
    ListConversionWorkspacesResponse:
      type: object
      id: ListConversionWorkspacesResponse
      properties:
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        conversionWorkspaces:
          items:
            $ref: '#/components/schemas/ConversionWorkspace'
          type: array
          description: The list of conversion workspace objects.
      description: Response message for 'ListConversionWorkspaces' request.
    PromoteMigrationJobRequest:
      id: PromoteMigrationJobRequest
      description: Request message for 'PromoteMigrationJob' request.
      type: object
      properties: {}
    OracleConnectionProfile:
      properties:
        username:
          type: string
          description: Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.
        forwardSshConnectivity:
          description: Forward SSH tunnel connectivity.
          $ref: '#/components/schemas/ForwardSshTunnelConnectivity'
        databaseService:
          description: Required. Database service for the Oracle connection.
          type: string
        passwordSet:
          description: Output only. Indicates whether a new password is included in the request.
          type: boolean
          readOnly: true
        port:
          description: Required. The network port of the source Oracle database.
          format: int32
          type: integer
        password:
          description: Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.
          type: string
        staticServiceIpConnectivity:
          description: Static Service IP connectivity.
          $ref: '#/components/schemas/StaticServiceIpConnectivity'
        host:
          description: Required. The IP or hostname of the source Oracle database.
          type: string
        privateConnectivity:
          description: Private connectivity.
          $ref: '#/components/schemas/PrivateConnectivity'
      id: OracleConnectionProfile
      description: Specifies connection parameters required specifically for Oracle databases.
      type: object
    FunctionEntity:
      description: Function's parent is a schema.
      id: FunctionEntity
      properties:
        sqlCode:
          description: The SQL code which creates the function
          type: string
        customFeatures:
          description: Custom engine specific features
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
      type: object
    StaticServiceIpConnectivity:
      id: StaticServiceIpConnectivity
      properties: {}
      description: Static IP address connectivity configured on service project.
      type: object
    DescribeDatabaseEntitiesResponse:
      properties:
        databaseEntities:
          type: array
          description: The list of database entities for the conversion workspace.
          items:
            $ref: '#/components/schemas/DatabaseEntity'
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      description: Response message for 'DescribeDatabaseEntities' request.
      id: DescribeDatabaseEntitiesResponse
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      id: SetIamPolicyRequest
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
        updateMask:
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          type: string
          format: google-fieldmask
      type: object
    SslConfig:
      id: SslConfig
      properties:
        clientCertificate:
          description: Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.If this field is used then the 'client_key' field is mandatory.
          type: string
        caCertificate:
          type: string
          description: Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate. The replica will use this certificate to verify it's connecting to the right host.
        clientKey:
          description: Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' field is mandatory.
          type: string
        type:
          description: Output only. The ssl config type according to 'client_key', 'client_certificate' and 'ca_certificate'.
          enumDescriptions:
            - Unspecified.
            - Only 'ca_certificate' specified.
            - Both server ('ca_certificate'), and client ('client_key', 'client_certificate') specified.
          readOnly: true
          enum:
            - SSL_TYPE_UNSPECIFIED
            - SERVER_ONLY
            - SERVER_CLIENT
          type: string
      type: object
      description: SSL configuration information.
    ConversionWorkspaceInfo:
      id: ConversionWorkspaceInfo
      type: object
      properties:
        name:
          type: string
          description: The resource name (URI) of the conversion workspace.
        commitId:
          type: string
          description: The commit ID of the conversion workspace.
      description: A conversion workspace's version.
    CloudSqlSettings:
      description: Settings for creating a Cloud SQL database instance.
      id: CloudSqlSettings
      properties:
        ipConfig:
          description: The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled.
          $ref: '#/components/schemas/SqlIpConfig'
        storageAutoResizeLimit:
          description: The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.
          format: int64
          type: string
        sourceId:
          description: 'The Database Migration Service source connection profile ID, in the format: `projects/my_project_name/locations/us-central1/connectionProfiles/connection_profile_ID`'
          type: string
        databaseFlags:
          type: object
          additionalProperties:
            type: string
          description: 'The database flags passed to the Cloud SQL instance at startup. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.'
        tier:
          description: 'The tier (or machine type) for this instance, for example: `db-n1-standard-1` (MySQL instances) or `db-custom-1-3840` (PostgreSQL instances). For more information, see [Cloud SQL Instance Settings](https://cloud.google.com/sql/docs/mysql/instance-settings).'
          type: string
        rootPasswordSet:
          readOnly: true
          type: boolean
          description: Output only. Indicates If this connection profile root password is stored.
        rootPassword:
          type: string
          description: Input only. Initial root password.
        dataDiskType:
          type: string
          enum:
            - SQL_DATA_DISK_TYPE_UNSPECIFIED
            - PD_SSD
            - PD_HDD
          description: 'The type of storage: `PD_SSD` (default) or `PD_HDD`.'
          enumDescriptions:
            - Unspecified.
            - SSD disk.
            - HDD disk.
        availabilityType:
          enumDescriptions:
            - This is an unknown Availability type.
            - Zonal availablility instance.
            - Regional availability instance.
          enum:
            - SQL_AVAILABILITY_TYPE_UNSPECIFIED
            - ZONAL
            - REGIONAL
          description: 'Optional. Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data availability. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available).'
          type: string
        collation:
          description: The Cloud SQL default instance level collation.
          type: string
        secondaryZone:
          type: string
          description: Optional. The Google Cloud Platform zone where the failover Cloud SQL database instance is located. Used when the Cloud SQL database availability type is REGIONAL (i.e. multiple zones / highly available).
        dataDiskSizeGb:
          format: int64
          type: string
          description: The storage capacity available to the database, in GB. The minimum (and default) size is 10GB.
        databaseVersion:
          enum:
            - SQL_DATABASE_VERSION_UNSPECIFIED
            - MYSQL_5_6
            - MYSQL_5_7
            - POSTGRES_9_6
            - POSTGRES_11
            - POSTGRES_10
            - MYSQL_8_0
            - POSTGRES_12
            - POSTGRES_13
            - POSTGRES_14
          enumDescriptions:
            - Unspecified version.
            - MySQL 5.6.
            - MySQL 5.7.
            - PostgreSQL 9.6.
            - PostgreSQL 11.
            - PostgreSQL 10.
            - MySQL 8.0.
            - PostgreSQL 12.
            - PostgreSQL 13.
            - PostgreSQL 14.
          type: string
          description: The database engine type and version.
        autoStorageIncrease:
          description: '[default: ON] If you enable this setting, Cloud SQL checks your available storage every 30 seconds. If the available storage falls below a threshold size, Cloud SQL automatically adds additional storage capacity. If the available storage repeatedly falls below the threshold size, Cloud SQL continues to add storage until it reaches the maximum of 30 TB.'
          type: boolean
        cmekKeyName:
          type: string
          description: The KMS key name used for the csql instance.
        userLabels:
          additionalProperties:
            type: string
          description: 'The resource labels for a Cloud SQL instance to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "18kg", "count": "3" }`.'
          type: object
        zone:
          type: string
          description: The Google Cloud Platform zone where your Cloud SQL database instance is located.
        activationPolicy:
          enum:
            - SQL_ACTIVATION_POLICY_UNSPECIFIED
            - ALWAYS
            - NEVER
          enumDescriptions:
            - unspecified policy.
            - The instance is always up and running.
            - The instance should never spin up.
          type: string
          description: 'The activation policy specifies when the instance is activated; it is applicable only when the instance state is ''RUNNABLE''. Valid values: ''ALWAYS'': The instance is on, and remains so even in the absence of connection requests. `NEVER`: The instance is off; it is not activated, even if a connection request arrives.'
      type: object
    ApplyConversionWorkspaceRequest:
      id: ApplyConversionWorkspaceRequest
      type: object
      description: Request message for 'ApplyConversionWorkspace' request.
      properties:
        filter:
          description: Filter which entities to apply. Leaving this field empty will apply all of the entities. Supports Google AIP 160 based filtering.
          type: string
        connectionProfile:
          type: string
          description: Fully qualified (Uri) name of the destination connection profile.
    TestIamPermissionsResponse:
      type: object
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          items:
            type: string
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          type: array
    SchemaEntity:
      type: object
      description: Schema typically has no parent entity, but can have a parent entity DatabaseInstance (for database engines which supports it). For some database engines the term schema and user can be used interchangeably when they refer to a namespace or a collection of other database entities. Can store additional information which is schema specific.
      properties:
        customFeatures:
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
          description: Custom engine specific features
      id: SchemaEntity
    PrivateServiceConnectConnectivity:
      properties:
        serviceAttachment:
          type: string
          description: 'Required. A service attachment that exposes a database, and has the following format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment_name}'
      id: PrivateServiceConnectConnectivity
      description: Private Service Connect connectivity (https://cloud.google.com/vpc/docs/private-service-connect#benefits-services)
      type: object
    SeedJobDetails:
      id: SeedJobDetails
      type: object
      properties:
        connectionProfile:
          type: string
          description: The connection profile which was used for the seed job
      description: Details regarding a Seed background job
    AlloyDbSettings:
      properties:
        vpcNetwork:
          type: string
          description: 'Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: "projects/{project_number}/global/networks/{network_id}". This is required to create a cluster.'
        labels:
          type: object
          description: Labels for the AlloyDB cluster created by DMS. An object containing a list of 'key', 'value' pairs.
          additionalProperties:
            type: string
        primaryInstanceSettings:
          $ref: '#/components/schemas/PrimaryInstanceSettings'
        initialUser:
          description: Required. Input only. Initial user to setup during cluster creation. Required.
          $ref: '#/components/schemas/UserPassword'
      id: AlloyDbSettings
      type: object
      description: Settings for creating an AlloyDB cluster.
    ConvertConversionWorkspaceRequest:
      id: ConvertConversionWorkspaceRequest
      properties:
        autoCommit:
          description: Should the conversion workspace be committed automatically after the conversion.
          type: boolean
        filter:
          description: Filter the entities to convert. Leaving this field empty will convert all of the entities. Supports Google AIP-160 style filtering.
          type: string
      type: object
      description: Request message for 'ConvertConversionWorkspace' request.
    VpcPeeringConnectivity:
      type: object
      id: VpcPeeringConnectivity
      properties:
        vpc:
          type: string
          description: The name of the VPC network to peer with the Cloud SQL private network.
      description: The details of the VPC where the source database is located in Google Cloud. We will use this information to set up the VPC peering connection between Cloud SQL and this VPC.
  parameters:
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    connection_profiles:
      id: google.datamigration.connection_profiles
      name: connection_profiles
      title: Connection_profiles
      methods:
        projects_locations_connectionProfiles_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles~1{connectionProfilesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_connectionProfiles_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles~1{connectionProfilesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_connectionProfiles_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles~1{connectionProfilesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_connectionProfiles_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_connectionProfiles_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connection_profiles/methods/projects_locations_connectionProfiles_get'
          - $ref: '#/components/x-stackQL-resources/connection_profiles/methods/projects_locations_connectionProfiles_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/connection_profiles/methods/projects_locations_connectionProfiles_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connection_profiles/methods/projects_locations_connectionProfiles_delete'
    connection_profiles_iam_policies:
      id: google.datamigration.connection_profiles_iam_policies
      name: connection_profiles_iam_policies
      title: Connection_profiles_iam_policies
      methods:
        projects_locations_connectionProfiles_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles~1{connectionProfilesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_connectionProfiles_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles~1{connectionProfilesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_connectionProfiles_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles~1{connectionProfilesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connection_profiles_iam_policies/methods/projects_locations_connectionProfiles_getIamPolicy'
        insert: []
        update: []
        delete: []
    mapping_rules:
      id: google.datamigration.mapping_rules
      name: mapping_rules
      title: Mapping_rules
      methods:
        projects_locations_conversionWorkspaces_mappingRules_import:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}~1mappingRules:import/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    conversion_workspaces:
      id: google.datamigration.conversion_workspaces
      name: conversion_workspaces
      title: Conversion_workspaces
      methods:
        projects_locations_conversionWorkspaces_apply:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:apply/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversionWorkspaces_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversionWorkspaces_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversionWorkspaces_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversionWorkspaces_commit:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:commit/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversionWorkspaces_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversionWorkspaces_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversionWorkspaces_convert:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:convert/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversionWorkspaces_describeConversionWorkspaceRevisions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:describeConversionWorkspaceRevisions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversionWorkspaces_seed:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:seed/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversionWorkspaces_searchBackgroundJobs:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:searchBackgroundJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversionWorkspaces_rollback:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:rollback/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversionWorkspaces_describeDatabaseEntities:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:describeDatabaseEntities/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/conversion_workspaces/methods/projects_locations_conversionWorkspaces_get'
          - $ref: '#/components/x-stackQL-resources/conversion_workspaces/methods/projects_locations_conversionWorkspaces_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/conversion_workspaces/methods/projects_locations_conversionWorkspaces_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/conversion_workspaces/methods/projects_locations_conversionWorkspaces_delete'
    operations:
      id: google.datamigration.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: operations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
    private_connections:
      id: google.datamigration.private_connections
      name: private_connections
      title: Private_connections
      methods:
        projects_locations_privateConnections_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateConnections/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_privateConnections_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateConnections/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_privateConnections_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateConnections~1{privateConnectionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_privateConnections_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateConnections~1{privateConnectionsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_connections/methods/projects_locations_privateConnections_get'
          - $ref: '#/components/x-stackQL-resources/private_connections/methods/projects_locations_privateConnections_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_connections/methods/projects_locations_privateConnections_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_connections/methods/projects_locations_privateConnections_delete'
    migration_jobs:
      id: google.datamigration.migration_jobs
      name: migration_jobs
      title: Migration_jobs
      methods:
        projects_locations_migrationJobs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_migrationJobs_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_migrationJobs_promote:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:promote/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_migrationJobs_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_migrationJobs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_migrationJobs_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_migrationJobs_start:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:start/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_migrationJobs_generateSshScript:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:generateSshScript/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_migrationJobs_stop:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_migrationJobs_resume:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:resume/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_migrationJobs_verify:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:verify/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_migrationJobs_restart:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:restart/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/migration_jobs/methods/projects_locations_migrationJobs_get'
          - $ref: '#/components/x-stackQL-resources/migration_jobs/methods/projects_locations_migrationJobs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/migration_jobs/methods/projects_locations_migrationJobs_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/migration_jobs/methods/projects_locations_migrationJobs_delete'
    migration_jobs_iam_policies:
      id: google.datamigration.migration_jobs_iam_policies
      name: migration_jobs_iam_policies
      title: Migration_jobs_iam_policies
      methods:
        projects_locations_migrationJobs_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_migrationJobs_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_migrationJobs_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/migration_jobs_iam_policies/methods/projects_locations_migrationJobs_getIamPolicy'
        insert: []
        update: []
        delete: []
    locations:
      id: google.datamigration.locations
      name: locations
      title: Locations
      methods:
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: locations
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
    connection_profiles_iam_bindings:
      id: google.datamigration.connection_profiles_iam_bindings
      name: connection_profiles_iam_bindings
      title: connection_profiles_iam_bindings
      methods:
        projects_locations_connectionProfiles_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles~1{connectionProfilesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/connection_profiles_iam_bindings/methods/projects_locations_connectionProfiles_getIamPolicy'
    connection_profiles_iam_audit_configs:
      id: google.datamigration.connection_profiles_iam_audit_configs
      name: connection_profiles_iam_audit_configs
      title: connection_profiles_iam_audit_configs
      methods:
        projects_locations_connectionProfiles_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles~1{connectionProfilesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/connection_profiles_iam_audit_configs/methods/projects_locations_connectionProfiles_getIamPolicy'
    migration_jobs_iam_bindings:
      id: google.datamigration.migration_jobs_iam_bindings
      name: migration_jobs_iam_bindings
      title: migration_jobs_iam_bindings
      methods:
        projects_locations_migrationJobs_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/migration_jobs_iam_bindings/methods/projects_locations_migrationJobs_getIamPolicy'
    migration_jobs_iam_audit_configs:
      id: google.datamigration.migration_jobs_iam_audit_configs
      name: migration_jobs_iam_audit_configs
      title: migration_jobs_iam_audit_configs
      methods:
        projects_locations_migrationJobs_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/migration_jobs_iam_audit_configs/methods/projects_locations_migrationJobs_getIamPolicy'
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
    patch:
      description: Update the configuration of a single connection profile.
      operationId: datamigration.projects.locations.connectionProfiles.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionProfile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: skipValidation
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: exec
    get:
      description: Gets details of a single connection profile.
      operationId: datamigration.projects.locations.connectionProfiles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionProfile'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: select
    delete:
      description: Deletes a single Database Migration Service connection profile. A connection profile can only be deleted if it is not in use by any active migration jobs.
      operationId: datamigration.projects.locations.connectionProfiles.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: datamigration.projects.locations.connectionProfiles.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
      x-stackQL-resource: connection_profiles_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: datamigration.projects.locations.connectionProfiles.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: connection_profiles_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: datamigration.projects.locations.connectionProfiles.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
      x-stackQL-resource: connection_profiles_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles:
    parameters: *ref_1
    post:
      description: Creates a new connection profile in a given project and location.
      operationId: datamigration.projects.locations.connectionProfiles.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionProfile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: skipValidation
          schema:
            type: boolean
        - in: query
          name: connectionProfileId
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of all connection profiles in a given project and location.
      operationId: datamigration.projects.locations.connectionProfiles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionProfilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}/mappingRules:import:
    parameters: *ref_1
    post:
      description: Imports the mapping rules for a given conversion workspace. Supports various formats of external rules files.
      operationId: datamigration.projects.locations.conversionWorkspaces.mappingRules.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportMappingRulesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: mapping_rules
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:apply:
    parameters: *ref_1
    post:
      description: Apply draft tree onto a specific destination database
      operationId: datamigration.projects.locations.conversionWorkspaces.apply
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyConversionWorkspaceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:
    parameters: *ref_1
    delete:
      description: Deletes a single conversion workspace.
      operationId: datamigration.projects.locations.conversionWorkspaces.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-verb: delete
    get:
      description: Gets details of a single conversion workspace.
      operationId: datamigration.projects.locations.conversionWorkspaces.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversionWorkspace'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a single conversion workspace.
      operationId: datamigration.projects.locations.conversionWorkspaces.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversionWorkspace'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:commit:
    parameters: *ref_1
    post:
      description: Marks all the data in the conversion workspace as committed.
      operationId: datamigration.projects.locations.conversionWorkspaces.commit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitConversionWorkspaceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces:
    parameters: *ref_1
    get:
      description: Lists conversion workspaces in a given project and location.
      operationId: datamigration.projects.locations.conversionWorkspaces.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConversionWorkspacesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: conversion_workspaces
      x-stackQL-verb: select
    post:
      description: Creates a new conversion workspace in a given project and location.
      operationId: datamigration.projects.locations.conversionWorkspaces.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversionWorkspace'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: conversionWorkspaceId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:convert:
    parameters: *ref_1
    post:
      description: Creates a draft tree schema for the destination database.
      operationId: datamigration.projects.locations.conversionWorkspaces.convert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConvertConversionWorkspaceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:describeConversionWorkspaceRevisions:
    parameters: *ref_1
    get:
      description: Retrieves a list of committed revisions of a specific conversion workspace.
      operationId: datamigration.projects.locations.conversionWorkspaces.describeConversionWorkspaceRevisions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConversionWorkspaceRevisionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
        - in: query
          name: commitId
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:seed:
    parameters: *ref_1
    post:
      description: Imports a snapshot of the source database into the conversion workspace.
      operationId: datamigration.projects.locations.conversionWorkspaces.seed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeedConversionWorkspaceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:searchBackgroundJobs:
    parameters: *ref_1
    get:
      description: Use this method to search/list the background jobs for a specific conversion workspace. The background jobs are not a resource like conversion workspace or mapping rule, and they can not be created, updated or deleted like one. Instead they are a way to expose the data plane jobs log.
      operationId: datamigration.projects.locations.conversionWorkspaces.searchBackgroundJobs
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchBackgroundJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
        - in: query
          name: completedUntilTime
          schema:
            type: string
        - in: query
          name: maxSize
          schema:
            type: integer
        - in: query
          name: returnMostRecentPerJobType
          schema:
            type: boolean
      x-stackQL-resource: conversion_workspaces
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:rollback:
    parameters: *ref_1
    post:
      description: Rollbacks a conversion workspace to the last committed spanshot.
      operationId: datamigration.projects.locations.conversionWorkspaces.rollback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollbackConversionWorkspaceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:describeDatabaseEntities:
    parameters: *ref_1
    get:
      description: Use this method to describe the database entities tree for a specific conversion workspace and a specific tree type. The DB Entities are not a resource like conversion workspace or mapping rule, and they can not be created, updated or deleted like one. Instead they are simple data objects describing the structure of the client database.
      operationId: datamigration.projects.locations.conversionWorkspaces.describeDatabaseEntities
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatabaseEntitiesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
        - in: query
          name: tree
          schema:
            type: string
        - in: query
          name: uncommitted
          schema:
            type: boolean
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: commitId
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: datamigration.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: datamigration.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: datamigration.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.'
      operationId: datamigration.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/privateConnections:
    parameters: *ref_1
    post:
      description: Creates a new private connection in a given project and location.
      operationId: datamigration.projects.locations.privateConnections.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateConnection'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: privateConnectionId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: private_connections
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of private connections in a given project and location.
      operationId: datamigration.projects.locations.privateConnections.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPrivateConnectionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: private_connections
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single private connection.
      operationId: datamigration.projects.locations.privateConnections.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateConnection'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: private_connections
      x-stackQL-verb: select
    delete:
      description: Deletes a single Database Migration Service private connection.
      operationId: datamigration.projects.locations.privateConnections.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: private_connections
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/migrationJobs:
    parameters: *ref_1
    get:
      description: Lists migration jobs in a given project and location.
      operationId: datamigration.projects.locations.migrationJobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMigrationJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: select
    post:
      description: Creates a new migration job in a given project and location.
      operationId: datamigration.projects.locations.migrationJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationJob'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: migrationJobId
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:promote:
    parameters: *ref_1
    post:
      description: Promote a migration job, stopping replication to the destination and promoting the destination to be a standalone database.
      operationId: datamigration.projects.locations.migrationJobs.promote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromoteMigrationJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:
    parameters: *ref_1
    delete:
      description: Deletes a single migration job.
      operationId: datamigration.projects.locations.migrationJobs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: delete
    get:
      description: Gets details of a single migration job.
      operationId: datamigration.projects.locations.migrationJobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a single migration job.
      operationId: datamigration.projects.locations.migrationJobs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationJob'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:start:
    parameters: *ref_1
    post:
      description: Start an already created migration job.
      operationId: datamigration.projects.locations.migrationJobs.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartMigrationJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: datamigration.projects.locations.migrationJobs.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:generateSshScript:
    parameters: *ref_1
    post:
      description: Generate a SSH configuration script to configure the reverse SSH connectivity.
      operationId: datamigration.projects.locations.migrationJobs.generateSshScript
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateSshScriptRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SshScript'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:stop:
    parameters: *ref_1
    post:
      description: Stops a running migration job.
      operationId: datamigration.projects.locations.migrationJobs.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopMigrationJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:resume:
    parameters: *ref_1
    post:
      description: Resume a migration job that is currently stopped and is resumable (was stopped during CDC phase).
      operationId: datamigration.projects.locations.migrationJobs.resume
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeMigrationJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: datamigration.projects.locations.migrationJobs.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: migration_jobs_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:verify:
    parameters: *ref_1
    post:
      description: Verify a migration job, making sure the destination can reach the source and that all configuration and prerequisites are met.
      operationId: datamigration.projects.locations.migrationJobs.verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyMigrationJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: datamigration.projects.locations.migrationJobs.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:restart:
    parameters: *ref_1
    post:
      description: Restart a stopped or failed migration job, resetting the destination instance to its original state and starting the migration process from scratch.
      operationId: datamigration.projects.locations.migrationJobs.restart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestartMigrationJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: datamigration.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: datamigration.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
