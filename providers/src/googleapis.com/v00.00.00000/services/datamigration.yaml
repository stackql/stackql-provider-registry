openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Database Migration API
  description: Manage Cloud Database Migration Service resources on Google Cloud Platform.
  version: v1
  x-discovery-doc-revision: '20230802'
  x-generated-date: '2023-08-17'
externalDocs:
  url: 'https://cloud.google.com/database-migration/'
servers:
  - url: 'https://datamigration.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    MappingRuleFilter:
      id: MappingRuleFilter
      properties:
        parentEntity:
          description: 'Optional. The rule should be applied to entities whose parent entity (fully qualified name) matches the given value. For example, if the rule applies to a table entity, the expected value should be a schema (schema). If the rule applies to a column or index entity, the expected value can be either a schema (schema) or a table (schema.table)'
          type: string
        entityNameSuffix:
          type: string
          description: Optional. The rule should be applied to entities whose non-qualified name ends with the given suffix.
        entities:
          type: array
          items:
            type: string
          description: Optional. The rule should be applied to specific entities defined by their fully qualified names.
        entityNameContains:
          description: Optional. The rule should be applied to entities whose non-qualified name contains the given string.
          type: string
        entityNamePrefix:
          description: Optional. The rule should be applied to entities whose non-qualified name starts with the given prefix.
          type: string
      type: object
      description: 'A filter defining the entities that a mapping rule should be applied to. When more than one field is specified, the rule is applied only to entities which match all the fields.'
    EntityMappingLogEntry:
      id: EntityMappingLogEntry
      properties:
        ruleRevisionId:
          description: Rule revision ID.
          type: string
        mappingComment:
          description: Comment.
          type: string
        ruleId:
          description: Which rule caused this log entry.
          type: string
      description: A single record of a rule which was used for a mapping.
      type: object
    SequenceEntity:
      type: object
      description: Sequence's parent is a schema.
      id: SequenceEntity
      properties:
        increment:
          format: int64
          description: Increment value for the sequence.
          type: string
        cycle:
          type: boolean
          description: Indicates whether the sequence value should cycle through.
        cache:
          description: Indicates number of entries to cache / precreate.
          format: int64
          type: string
        startValue:
          format: byte
          description: Start number for the sequence represented as bytes to accommodate large. numbers
          type: string
        minValue:
          format: byte
          description: Minimum number for the sequence represented as bytes to accommodate large. numbers
          type: string
        customFeatures:
          description: Custom engine specific features.
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
        maxValue:
          description: Maximum number for the sequence represented as bytes to accommodate large. numbers
          type: string
          format: byte
    IntComparisonFilter:
      properties:
        value:
          type: string
          format: int64
          description: Required. Integer compare value to be used
        valueComparison:
          enum:
            - VALUE_COMPARISON_UNSPECIFIED
            - VALUE_COMPARISON_IF_VALUE_SMALLER_THAN
            - VALUE_COMPARISON_IF_VALUE_SMALLER_EQUAL_THAN
            - VALUE_COMPARISON_IF_VALUE_LARGER_THAN
            - VALUE_COMPARISON_IF_VALUE_LARGER_EQUAL_THAN
          enumDescriptions:
            - Value comparison unspecified.
            - Value is smaller than the Compare value.
            - Value is smaller or equal than the Compare value.
            - Value is larger than the Compare value.
            - Value is larger or equal than the Compare value.
          description: Required. Relation between source value and compare value
          type: string
      description: Filter based on relation between source value and compare value of type integer in ConditionalColumnSetValue
      type: object
      id: IntComparisonFilter
    VmCreationConfig:
      properties:
        subnet:
          type: string
          description: The subnet name the vm needs to be created in.
        vmZone:
          description: The Google Cloud Platform zone to create the VM in.
          type: string
        vmMachineType:
          type: string
          description: Required. VM instance machine type to create.
      type: object
      description: VM creation configuration message
      id: VmCreationConfig
    GenerateSshScriptRequest:
      id: GenerateSshScriptRequest
      properties:
        vm:
          description: Required. Bastion VM Instance name to use or to create.
          type: string
        vmCreationConfig:
          description: The VM creation configuration
          $ref: '#/components/schemas/VmCreationConfig'
        vmPort:
          type: integer
          description: The port that will be open on the bastion host.
          format: int32
        vmSelectionConfig:
          description: The VM selection configuration
          $ref: '#/components/schemas/VmSelectionConfig'
      type: object
      description: Request message for 'GenerateSshScript' request.
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      type: object
      id: SetIamPolicyRequest
      properties:
        policy:
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
          $ref: '#/components/schemas/Policy'
        updateMask:
          format: google-fieldmask
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          type: string
    ConvertRowIdToColumn:
      properties:
        onlyIfNoPrimaryKey:
          description: Required. Only work on tables without primary key defined
          type: boolean
      id: ConvertRowIdToColumn
      type: object
      description: 'Options to configure rule type ConvertROWIDToColumn. The rule is used to add column rowid to destination tables based on an Oracle rowid function/property. The rule filter field can refer to one or more entities. The rule scope can be one of: Table. This rule requires additional filter to be specified beyond the basic rule filter field, which is whether or not to work on tables which already have a primary key defined.'
    MigrationJob:
      id: MigrationJob
      type: object
      description: Represents a Database Migration Service migration job object.
      properties:
        performanceConfig:
          description: Optional. Data dump parallelism settings used by the migration. Currently applicable only for MySQL to Cloud SQL for MySQL migrations only.
          $ref: '#/components/schemas/PerformanceConfig'
        error:
          $ref: '#/components/schemas/Status'
          description: Output only. The error details in case of state FAILED.
          readOnly: true
        phase:
          enumDescriptions:
            - The phase of the migration job is unknown.
            - The migration job is in the full dump phase.
            - The migration job is CDC phase.
            - The migration job is running the promote phase.
            - Only RDS flow - waiting for source writes to stop
            - 'Only RDS flow - the sources writes stopped, waiting for dump to begin'
          description: Output only. The current migration job phase.
          enum:
            - PHASE_UNSPECIFIED
            - FULL_DUMP
            - CDC
            - PROMOTE_IN_PROGRESS
            - WAITING_FOR_SOURCE_WRITES_TO_STOP
            - PREPARING_THE_DUMP
          type: string
          readOnly: true
        cmekKeyName:
          type: string
          description: 'The CMEK (customer-managed encryption key) fully qualified key name used for the migration job. This field supports all migration jobs types except for: * Mysql to Mysql (use the cmek field in the cloudsql connection profile instead). * PostrgeSQL to PostgreSQL (use the cmek field in the cloudsql connection profile instead). * PostgreSQL to AlloyDB (use the kms_key_name field in the alloydb connection profile instead). Each Cloud CMEK key has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME]'
        filter:
          type: string
          description: This field can be used to select the entities to migrate as part of the migration job. It uses AIP-160 notation to select a subset of the entities configured on the associated conversion-workspace. This field should not be set on migration-jobs that are not associated with a conversion workspace.
        type:
          enum:
            - TYPE_UNSPECIFIED
            - ONE_TIME
            - CONTINUOUS
          type: string
          description: Required. The migration job type.
          enumDescriptions:
            - The type of the migration job is unknown.
            - The migration job is a one time migration.
            - The migration job is a continuous migration.
        vpcPeeringConnectivity:
          $ref: '#/components/schemas/VpcPeeringConnectivity'
          description: The details of the VPC network that the source database is located in.
        displayName:
          description: The migration job display name.
          type: string
        duration:
          type: string
          readOnly: true
          format: google-duration
          description: 'Output only. The duration of the migration job (in seconds). A duration in seconds with up to nine fractional digits, terminated by ''s''. Example: "3.5s".'
        source:
          type: string
          description: Required. The resource name (URI) of the source connection profile.
        state:
          description: The current migration job state.
          enum:
            - STATE_UNSPECIFIED
            - MAINTENANCE
            - DRAFT
            - CREATING
            - NOT_STARTED
            - RUNNING
            - FAILED
            - COMPLETED
            - DELETING
            - STOPPING
            - STOPPED
            - DELETED
            - UPDATING
            - STARTING
            - RESTARTING
            - RESUMING
          enumDescriptions:
            - The state of the migration job is unknown.
            - The migration job is down for maintenance.
            - The migration job is in draft mode and no resources are created.
            - The migration job is being created.
            - The migration job is created and not started.
            - The migration job is running.
            - The migration job failed.
            - The migration job has been completed.
            - The migration job is being deleted.
            - The migration job is being stopped.
            - The migration job is currently stopped.
            - The migration job has been deleted.
            - The migration job is being updated.
            - The migration job is starting.
            - The migration job is restarting.
            - The migration job is resuming.
          type: string
        endTime:
          type: string
          readOnly: true
          format: google-datetime
          description: 'Output only. If the migration job is completed, the time when it was completed.'
        reverseSshConnectivity:
          $ref: '#/components/schemas/ReverseSshConnectivity'
          description: The details needed to communicate to the source over Reverse SSH tunnel connectivity.
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: 'Output only. The timestamp when the migration job resource was created. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".'
        updateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: 'Output only. The timestamp when the migration job resource was last updated. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".'
        sourceDatabase:
          $ref: '#/components/schemas/DatabaseType'
          description: The database engine type and provider of the source.
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.'
        destinationDatabase:
          description: The database engine type and provider of the destination.
          $ref: '#/components/schemas/DatabaseType'
        dumpFlags:
          $ref: '#/components/schemas/DumpFlags'
          description: The initial dump flags. This field and the "dump_path" field are mutually exclusive.
        staticIpConnectivity:
          $ref: '#/components/schemas/StaticIpConnectivity'
          description: 'static ip connectivity data (default, no additional details needed).'
        conversionWorkspace:
          description: The conversion workspace used by the migration.
          $ref: '#/components/schemas/ConversionWorkspaceInfo'
        name:
          description: 'The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/migrationJobs/{migrationJob}.'
          type: string
        dumpPath:
          type: string
          description: 'The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]). This field and the "dump_flags" field are mutually exclusive.'
        destination:
          description: Required. The resource name (URI) of the destination connection profile.
          type: string
    ForwardSshTunnelConnectivity:
      id: ForwardSshTunnelConnectivity
      description: Forward SSH Tunnel connectivity.
      properties:
        privateKey:
          type: string
          description: Input only. SSH private key.
        port:
          description: 'Port for the SSH tunnel, default value is 22.'
          format: int32
          type: integer
        password:
          description: Input only. SSH password.
          type: string
        username:
          description: Required. Username for the SSH tunnel.
          type: string
        hostname:
          description: Required. Hostname for the SSH tunnel.
          type: string
      type: object
    DumpFlag:
      type: object
      description: Dump flag definition.
      id: DumpFlag
      properties:
        value:
          type: string
          description: The value of the flag.
        name:
          description: The name of the flag
          type: string
    ViewEntity:
      type: object
      description: View's parent is a schema.
      id: ViewEntity
      properties:
        constraints:
          items:
            $ref: '#/components/schemas/ConstraintEntity'
          type: array
          description: View constraints.
        customFeatures:
          description: Custom engine specific features.
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
        sqlCode:
          type: string
          description: The SQL code which creates the view.
    SchemaEntity:
      description: 'Schema typically has no parent entity, but can have a parent entity DatabaseInstance (for database engines which support it). For some database engines, the terms schema and user can be used interchangeably when they refer to a namespace or a collection of other database entities. Can store additional information which is schema specific.'
      properties:
        customFeatures:
          description: Custom engine specific features.
          additionalProperties:
            description: Properties of the object.
            type: any
          type: object
      type: object
      id: SchemaEntity
    ListOperationsResponse:
      id: ListOperationsResponse
      properties:
        operations:
          type: array
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
      description: The response message for Operations.ListOperations.
    EntityIssue:
      id: EntityIssue
      properties:
        severity:
          description: Severity of the issue
          enum:
            - ISSUE_SEVERITY_UNSPECIFIED
            - ISSUE_SEVERITY_INFO
            - ISSUE_SEVERITY_WARNING
            - ISSUE_SEVERITY_ERROR
          enumDescriptions:
            - Unspecified issue severity
            - Info
            - Warning
            - Error
          type: string
        position:
          $ref: '#/components/schemas/Position'
          description: 'The position of the issue found, if relevant.'
        id:
          description: Unique Issue ID.
          type: string
        type:
          type: string
          enum:
            - ISSUE_TYPE_UNSPECIFIED
            - ISSUE_TYPE_DDL
            - ISSUE_TYPE_APPLY
            - ISSUE_TYPE_CONVERT
          enumDescriptions:
            - Unspecified issue type.
            - Issue originated from the DDL
            - Issue originated during the apply process
            - Issue originated during the convert process
          description: The type of the issue.
        code:
          type: string
          description: Error/Warning code
        ddl:
          description: 'The ddl which caused the issue, if relevant.'
          type: string
        message:
          type: string
          description: Issue detailed message
        entityType:
          enum:
            - DATABASE_ENTITY_TYPE_UNSPECIFIED
            - DATABASE_ENTITY_TYPE_SCHEMA
            - DATABASE_ENTITY_TYPE_TABLE
            - DATABASE_ENTITY_TYPE_COLUMN
            - DATABASE_ENTITY_TYPE_CONSTRAINT
            - DATABASE_ENTITY_TYPE_INDEX
            - DATABASE_ENTITY_TYPE_TRIGGER
            - DATABASE_ENTITY_TYPE_VIEW
            - DATABASE_ENTITY_TYPE_SEQUENCE
            - DATABASE_ENTITY_TYPE_STORED_PROCEDURE
            - DATABASE_ENTITY_TYPE_FUNCTION
            - DATABASE_ENTITY_TYPE_SYNONYM
            - DATABASE_ENTITY_TYPE_DATABASE_PACKAGE
            - DATABASE_ENTITY_TYPE_UDT
            - DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW
            - DATABASE_ENTITY_TYPE_DATABASE
          type: string
          enumDescriptions:
            - Unspecified database entity type.
            - Schema.
            - Table.
            - Column.
            - Constraint.
            - Index.
            - Trigger.
            - View.
            - Sequence.
            - Stored Procedure.
            - Function.
            - Synonym.
            - Package.
            - UDT.
            - Materialized View.
            - Database.
          description: The entity type (if the DDL is for a sub entity).
      type: object
      description: Issue related to the entity.
    ListPrivateConnectionsResponse:
      type: object
      id: ListPrivateConnectionsResponse
      description: Response message for 'ListPrivateConnections' request.
      properties:
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
        privateConnections:
          type: array
          items:
            $ref: '#/components/schemas/PrivateConnection'
          description: List of private connections.
        nextPageToken:
          description: 'A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
    TestIamPermissionsResponse:
      type: object
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          type: array
          items:
            type: string
      description: Response message for `TestIamPermissions` method.
      id: TestIamPermissionsResponse
    SslConfig:
      type: object
      properties:
        clientKey:
          description: Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' field is mandatory.
          type: string
        type:
          enumDescriptions:
            - Unspecified.
            - Only 'ca_certificate' specified.
            - 'Both server (''ca_certificate''), and client (''client_key'', ''client_certificate'') specified.'
          type: string
          readOnly: true
          description: 'Output only. The ssl config type according to ''client_key'', ''client_certificate'' and ''ca_certificate''.'
          enum:
            - SSL_TYPE_UNSPECIFIED
            - SERVER_ONLY
            - SERVER_CLIENT
        caCertificate:
          type: string
          description: Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate. The replica will use this certificate to verify it's connecting to the right host.
        clientCertificate:
          type: string
          description: Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.If this field is used then the 'client_key' field is mandatory.
      id: SslConfig
      description: SSL configuration information.
    MachineConfig:
      id: MachineConfig
      type: object
      properties:
        cpuCount:
          format: int32
          description: The number of CPU's in the VM instance.
          type: integer
      description: MachineConfig describes the configuration of a machine.
    Status:
      id: Status
      properties:
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        code:
          type: integer
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
    AlloyDbSettings:
      description: Settings for creating an AlloyDB cluster.
      id: AlloyDbSettings
      type: object
      properties:
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Labels for the AlloyDB cluster created by DMS. An object containing a list of ''key'', ''value'' pairs.'
        primaryInstanceSettings:
          $ref: '#/components/schemas/PrimaryInstanceSettings'
        vpcNetwork:
          type: string
          description: 'Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: "projects/{project_number}/global/networks/{network_id}". This is required to create a cluster.'
        initialUser:
          $ref: '#/components/schemas/UserPassword'
          description: Required. Input only. Initial user to setup during cluster creation. Required.
        encryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
          description: 'Optional. The encryption config can be specified to encrypt the data disks and other persistent data resources of a cluster with a customer-managed encryption key (CMEK). When this field is not specified, the cluster will then use default encryption scheme to protect the user data.'
    RestartMigrationJobRequest:
      description: Request message for 'RestartMigrationJob' request.
      type: object
      properties:
        skipValidation:
          description: Optional. Restart the migration job without running prior configuration verification. Defaults to `false`.
          type: boolean
      id: RestartMigrationJobRequest
    SourceSqlChange:
      description: 'Options to configure rule type SourceSqlChange. The rule is used to alter the sql code for database entities. The rule filter field can refer to one entity. The rule scope can be: StoredProcedure, Function, Trigger, View'
      properties:
        sqlCode:
          description: 'Required. Sql code for source (stored procedure, function, trigger or view)'
          type: string
      type: object
      id: SourceSqlChange
    ListMigrationJobsResponse:
      type: object
      properties:
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        nextPageToken:
          type: string
          description: 'A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
        migrationJobs:
          type: array
          description: The list of migration jobs objects.
          items:
            $ref: '#/components/schemas/MigrationJob'
      id: ListMigrationJobsResponse
      description: Response message for 'ListMigrationJobs' request.
    VpcPeeringConfig:
      properties:
        vpcName:
          description: Required. Fully qualified name of the VPC that Database Migration Service will peer to.
          type: string
        subnet:
          type: string
          description: Required. A free subnet for peering. (CIDR of /29)
      description: The VPC peering configuration is used to create VPC peering with the consumer's VPC.
      type: object
      id: VpcPeeringConfig
    VerifyMigrationJobRequest:
      properties:
        migrationJob:
          description: Optional. The changed migration job parameters to verify. It will not update the migration job.
          $ref: '#/components/schemas/MigrationJob'
        updateMask:
          format: google-fieldmask
          type: string
          description: Optional. Field mask is used to specify the changed fields to be verified. It will not update the migration job.
      id: VerifyMigrationJobRequest
      type: object
      description: Request message for 'VerifyMigrationJob' request.
    Position:
      description: Issue position.
      properties:
        line:
          format: int32
          type: integer
          description: Issue line number
        length:
          type: integer
          format: int32
          description: Issue length
        column:
          format: int32
          description: Issue column number
          type: integer
        offset:
          description: Issue offset
          format: int32
          type: integer
      id: Position
      type: object
    PackageEntity:
      description: Package's parent is a schema.
      properties:
        packageSqlCode:
          type: string
          description: The SQL code which creates the package.
        customFeatures:
          additionalProperties:
            type: any
            description: Properties of the object.
          description: Custom engine specific features.
          type: object
        packageBody:
          type: string
          description: 'The SQL code which creates the package body. If the package specification has cursors or subprograms, then the package body is mandatory.'
      id: PackageEntity
      type: object
    CloudSqlSettings:
      type: object
      properties:
        databaseFlags:
          type: object
          description: 'The database flags passed to the Cloud SQL instance at startup. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.'
          additionalProperties:
            type: string
        rootPasswordSet:
          readOnly: true
          type: boolean
          description: Output only. Indicates If this connection profile root password is stored.
        storageAutoResizeLimit:
          format: int64
          description: 'The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.'
          type: string
        ipConfig:
          $ref: '#/components/schemas/SqlIpConfig'
          description: The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled.
        sourceId:
          type: string
          description: 'The Database Migration Service source connection profile ID, in the format: `projects/my_project_name/locations/us-central1/connectionProfiles/connection_profile_ID`'
        autoStorageIncrease:
          description: '[default: ON] If you enable this setting, Cloud SQL checks your available storage every 30 seconds. If the available storage falls below a threshold size, Cloud SQL automatically adds additional storage capacity. If the available storage repeatedly falls below the threshold size, Cloud SQL continues to add storage until it reaches the maximum of 30 TB.'
          type: boolean
        edition:
          description: Optional. The edition of the given Cloud SQL instance.
          type: string
          enum:
            - EDITION_UNSPECIFIED
            - ENTERPRISE
            - ENTERPRISE_PLUS
          enumDescriptions:
            - The instance did not specify the edition.
            - The instance is an enterprise edition.
            - The instance is an enterprise plus edition.
        userLabels:
          description: 'The resource labels for a Cloud SQL instance to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "18kg", "count": "3" }`.'
          type: object
          additionalProperties:
            type: string
        databaseVersion:
          enum:
            - SQL_DATABASE_VERSION_UNSPECIFIED
            - MYSQL_5_6
            - MYSQL_5_7
            - POSTGRES_9_6
            - POSTGRES_11
            - POSTGRES_10
            - MYSQL_8_0
            - POSTGRES_12
            - POSTGRES_13
            - POSTGRES_14
            - POSTGRES_15
          type: string
          enumDescriptions:
            - Unspecified version.
            - MySQL 5.6.
            - MySQL 5.7.
            - PostgreSQL 9.6.
            - PostgreSQL 11.
            - PostgreSQL 10.
            - MySQL 8.0.
            - PostgreSQL 12.
            - PostgreSQL 13.
            - PostgreSQL 14.
            - PostgreSQL 15.
          description: The database engine type and version.
        collation:
          description: The Cloud SQL default instance level collation.
          type: string
        dataDiskType:
          enumDescriptions:
            - Unspecified.
            - SSD disk.
            - HDD disk.
          description: 'The type of storage: `PD_SSD` (default) or `PD_HDD`.'
          type: string
          enum:
            - SQL_DATA_DISK_TYPE_UNSPECIFIED
            - PD_SSD
            - PD_HDD
        zone:
          type: string
          description: The Google Cloud Platform zone where your Cloud SQL database instance is located.
        rootPassword:
          type: string
          description: Input only. Initial root password.
        tier:
          type: string
          description: 'The tier (or machine type) for this instance, for example: `db-n1-standard-1` (MySQL instances) or `db-custom-1-3840` (PostgreSQL instances). For more information, see [Cloud SQL Instance Settings](https://cloud.google.com/sql/docs/mysql/instance-settings).'
        secondaryZone:
          type: string
          description: Optional. The Google Cloud Platform zone where the failover Cloud SQL database instance is located. Used when the Cloud SQL database availability type is REGIONAL (i.e. multiple zones / highly available).
        availabilityType:
          type: string
          enumDescriptions:
            - This is an unknown Availability type.
            - Zonal availablility instance.
            - Regional availability instance.
          description: 'Optional. Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data availability. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available).'
          enum:
            - SQL_AVAILABILITY_TYPE_UNSPECIFIED
            - ZONAL
            - REGIONAL
        activationPolicy:
          type: string
          enumDescriptions:
            - unspecified policy.
            - The instance is always up and running.
            - The instance should never spin up.
          enum:
            - SQL_ACTIVATION_POLICY_UNSPECIFIED
            - ALWAYS
            - NEVER
          description: 'The activation policy specifies when the instance is activated; it is applicable only when the instance state is ''RUNNABLE''. Valid values: ''ALWAYS'': The instance is on, and remains so even in the absence of connection requests. `NEVER`: The instance is off; it is not activated, even if a connection request arrives.'
        cmekKeyName:
          type: string
          description: The KMS key name used for the csql instance.
        dataDiskSizeGb:
          format: int64
          description: 'The storage capacity available to the database, in GB. The minimum (and default) size is 10GB.'
          type: string
      description: Settings for creating a Cloud SQL database instance.
      id: CloudSqlSettings
    TableEntity:
      description: Table's parent is a schema.
      id: TableEntity
      properties:
        indices:
          description: Table indices.
          items:
            $ref: '#/components/schemas/IndexEntity'
          type: array
        triggers:
          items:
            $ref: '#/components/schemas/TriggerEntity'
          description: Table triggers.
          type: array
        customFeatures:
          type: object
          description: Custom engine specific features.
          additionalProperties:
            type: any
            description: Properties of the object.
        columns:
          description: Table columns.
          items:
            $ref: '#/components/schemas/ColumnEntity'
          type: array
        comment:
          description: Comment associated with the table.
          type: string
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/ConstraintEntity'
          description: Table constraints.
      type: object
    ListLocationsResponse:
      id: ListLocationsResponse
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          type: string
          description: The standard List next-page token.
      type: object
      description: The response message for Locations.ListLocations.
    ConnectionProfile:
      description: A connection profile definition.
      id: ConnectionProfile
      properties:
        createTime:
          format: google-datetime
          type: string
          description: 'Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".'
          readOnly: true
        name:
          type: string
          description: 'The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.'
        alloydb:
          $ref: '#/components/schemas/AlloyDbConnectionProfile'
          description: An AlloyDB cluster connection profile.
        updateTime:
          readOnly: true
          description: 'Output only. The timestamp when the resource was last updated. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".'
          type: string
          format: google-datetime
        mysql:
          $ref: '#/components/schemas/MySqlConnectionProfile'
          description: A MySQL database connection profile.
        provider:
          description: The database provider.
          enumDescriptions:
            - The database provider is unknown.
            - CloudSQL runs the database.
            - RDS runs the database.
            - Amazon Aurora.
            - AlloyDB.
          enum:
            - DATABASE_PROVIDER_UNSPECIFIED
            - CLOUDSQL
            - RDS
            - AURORA
            - ALLOYDB
          type: string
        state:
          type: string
          enumDescriptions:
            - The state of the connection profile is unknown.
            - The connection profile is in draft mode and fully editable.
            - The connection profile is being created.
            - The connection profile is ready.
            - The connection profile is being updated.
            - The connection profile is being deleted.
            - The connection profile has been deleted.
            - The last action on the connection profile failed.
          description: 'The current connection profile state (e.g. DRAFT, READY, or FAILED).'
          enum:
            - STATE_UNSPECIFIED
            - DRAFT
            - CREATING
            - READY
            - UPDATING
            - DELETING
            - DELETED
            - FAILED
        cloudsql:
          $ref: '#/components/schemas/CloudSqlConnectionProfile'
          description: A CloudSQL database connection profile.
        postgresql:
          description: A PostgreSQL database connection profile.
          $ref: '#/components/schemas/PostgreSqlConnectionProfile'
        oracle:
          $ref: '#/components/schemas/OracleConnectionProfile'
          description: An Oracle database connection profile.
        error:
          $ref: '#/components/schemas/Status'
          description: Output only. The error details in case of state FAILED.
          readOnly: true
        displayName:
          description: The connection profile display name.
          type: string
        labels:
          type: object
          description: 'The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.'
          additionalProperties:
            type: string
      type: object
    ApplyHash:
      description: Apply a hash function on the value.
      id: ApplyHash
      type: object
      properties:
        uuidFromBytes:
          description: Optional. Generate UUID from the data's byte array
          $ref: '#/components/schemas/Empty'
    Operation:
      type: object
      properties:
        response:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
    SingleColumnChange:
      description: 'Options to configure rule type SingleColumnChange. The rule is used to change the properties of a column. The rule filter field can refer to one entity. The rule scope can be one of: Column. When using this rule, if a field is not specified than the destination column''s configuration will be the same as the one in the source column..'
      type: object
      properties:
        collation:
          description: Optional. Collation override - instead of table level collation.
          type: string
        autoGenerated:
          type: boolean
          description: Optional. Is the column auto-generated/identity.
        arrayLength:
          description: 'Optional. The length of the array, only relevant if the column type is an array.'
          format: int32
          type: integer
        setValues:
          type: array
          items:
            type: string
          description: Optional. Specifies the list of values allowed in the column.
        comment:
          type: string
          description: Optional. Comment associated with the column.
        length:
          type: string
          format: int64
          description: Optional. Column length - e.g. 50 as in varchar (50) - when relevant.
        customFeatures:
          description: Optional. Custom engine specific features.
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
        udt:
          description: Optional. Is the column a UDT (User-defined Type).
          type: boolean
        nullable:
          type: boolean
          description: Optional. Is the column nullable.
        dataType:
          type: string
          description: Optional. Column data type name.
        fractionalSecondsPrecision:
          type: integer
          format: int32
          description: Optional. Column fractional seconds precision - e.g. 2 as in timestamp (2) - when relevant.
        scale:
          description: 'Optional. Column scale - e.g. 2 as in double (8,2) - when relevant.'
          format: int32
          type: integer
        charset:
          type: string
          description: Optional. Charset override - instead of table level charset.
        array:
          type: boolean
          description: Optional. Is the column of array type.
        precision:
          format: int32
          type: integer
          description: 'Optional. Column precision - e.g. 8 as in double (8,2) - when relevant.'
      id: SingleColumnChange
    MultiEntityRename:
      id: MultiEntityRename
      properties:
        newNamePattern:
          type: string
          description: 'Optional. The pattern used to generate the new entity''s name. This pattern must include the characters ''{name}'', which will be replaced with the name of the original entity. For example, the pattern ''t_{name}'' for an entity name jobs would be converted to ''t_jobs''. If unspecified, the default value for this field is ''{name}'''
        sourceNameTransformation:
          enumDescriptions:
            - Entity name transformation unspecified.
            - No transformation.
            - Transform to lower case.
            - Transform to upper case.
            - Transform to capitalized case.
          type: string
          enum:
            - ENTITY_NAME_TRANSFORMATION_UNSPECIFIED
            - ENTITY_NAME_TRANSFORMATION_NO_TRANSFORMATION
            - ENTITY_NAME_TRANSFORMATION_LOWER_CASE
            - ENTITY_NAME_TRANSFORMATION_UPPER_CASE
            - ENTITY_NAME_TRANSFORMATION_CAPITALIZED_CASE
          description: 'Optional. Additional transformation that can be done on the source entity name before it is being used by the new_name_pattern, for example lower case. If no transformation is desired, use NO_TRANSFORMATION'
      type: object
      description: 'Options to configure rule type MultiEntityRename. The rule is used to rename multiple entities. The rule filter field can refer to one or more entities. The rule scope can be one of: Database, Schema, Table, Column, Constraint, Index, View, Function, Stored Procedure, Materialized View, Sequence, UDT'
    StaticServiceIpConnectivity:
      properties: {}
      type: object
      description: Static IP address connectivity configured on service project.
      id: StaticServiceIpConnectivity
    EntityMapping:
      description: Details of the mappings of a database entity.
      id: EntityMapping
      type: object
      properties:
        draftEntity:
          type: string
          description: 'Target entity full name. The draft entity can also include a column, index or constraint using the same naming notation schema.table.column.'
        sourceEntity:
          type: string
          description: 'Source entity full name. The source entity can also be a column, index or constraint using the same naming notation schema.table.column.'
        draftType:
          enumDescriptions:
            - Unspecified database entity type.
            - Schema.
            - Table.
            - Column.
            - Constraint.
            - Index.
            - Trigger.
            - View.
            - Sequence.
            - Stored Procedure.
            - Function.
            - Synonym.
            - Package.
            - UDT.
            - Materialized View.
            - Database.
          description: Type of draft entity.
          type: string
          enum:
            - DATABASE_ENTITY_TYPE_UNSPECIFIED
            - DATABASE_ENTITY_TYPE_SCHEMA
            - DATABASE_ENTITY_TYPE_TABLE
            - DATABASE_ENTITY_TYPE_COLUMN
            - DATABASE_ENTITY_TYPE_CONSTRAINT
            - DATABASE_ENTITY_TYPE_INDEX
            - DATABASE_ENTITY_TYPE_TRIGGER
            - DATABASE_ENTITY_TYPE_VIEW
            - DATABASE_ENTITY_TYPE_SEQUENCE
            - DATABASE_ENTITY_TYPE_STORED_PROCEDURE
            - DATABASE_ENTITY_TYPE_FUNCTION
            - DATABASE_ENTITY_TYPE_SYNONYM
            - DATABASE_ENTITY_TYPE_DATABASE_PACKAGE
            - DATABASE_ENTITY_TYPE_UDT
            - DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW
            - DATABASE_ENTITY_TYPE_DATABASE
        sourceType:
          description: Type of source entity.
          type: string
          enumDescriptions:
            - Unspecified database entity type.
            - Schema.
            - Table.
            - Column.
            - Constraint.
            - Index.
            - Trigger.
            - View.
            - Sequence.
            - Stored Procedure.
            - Function.
            - Synonym.
            - Package.
            - UDT.
            - Materialized View.
            - Database.
          enum:
            - DATABASE_ENTITY_TYPE_UNSPECIFIED
            - DATABASE_ENTITY_TYPE_SCHEMA
            - DATABASE_ENTITY_TYPE_TABLE
            - DATABASE_ENTITY_TYPE_COLUMN
            - DATABASE_ENTITY_TYPE_CONSTRAINT
            - DATABASE_ENTITY_TYPE_INDEX
            - DATABASE_ENTITY_TYPE_TRIGGER
            - DATABASE_ENTITY_TYPE_VIEW
            - DATABASE_ENTITY_TYPE_SEQUENCE
            - DATABASE_ENTITY_TYPE_STORED_PROCEDURE
            - DATABASE_ENTITY_TYPE_FUNCTION
            - DATABASE_ENTITY_TYPE_SYNONYM
            - DATABASE_ENTITY_TYPE_DATABASE_PACKAGE
            - DATABASE_ENTITY_TYPE_UDT
            - DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW
            - DATABASE_ENTITY_TYPE_DATABASE
        mappingLog:
          description: 'Entity mapping log entries. Multiple rules can be effective and contribute changes to a converted entity, such as a rule can handle the entity name, another rule can handle an entity type. In addition, rules which did not change the entity are also logged along with the reason preventing them to do so.'
          items:
            $ref: '#/components/schemas/EntityMappingLogEntry'
          type: array
    SqlIpConfig:
      id: SqlIpConfig
      properties:
        allocatedIpRange:
          type: string
          description: 'Optional. The name of the allocated IP address range for the private IP Cloud SQL instance. This name refers to an already allocated IP range address. If set, the instance IP address will be created in the allocated range. Note that this IP address range can''t be modified after the instance is created. If you change the VPC when configuring connectivity settings for the migration job, this field is not relevant.'
        requireSsl:
          type: boolean
          description: Whether SSL connections over IP should be enforced or not.
        enableIpv4:
          type: boolean
          description: Whether the instance should be assigned an IPv4 address or not.
        authorizedNetworks:
          items:
            $ref: '#/components/schemas/SqlAclEntry'
          type: array
          description: 'The list of external networks that are allowed to connect to the instance using the IP. See https://en.wikipedia.org/wiki/CIDR_notation#CIDR_notation, also known as ''slash'' notation (e.g. `192.168.100.0/24`).'
        privateNetwork:
          type: string
          description: 'The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set.'
      type: object
      description: IP Management configuration.
    DatabaseEngineInfo:
      description: The type and version of a source or destination database.
      properties:
        engine:
          description: Required. Engine type.
          type: string
          enumDescriptions:
            - The source database engine of the migration job is unknown.
            - The source engine is MySQL.
            - The source engine is PostgreSQL.
            - The source engine is Oracle.
          enum:
            - DATABASE_ENGINE_UNSPECIFIED
            - MYSQL
            - POSTGRESQL
            - ORACLE
        version:
          description: 'Required. Engine named version, for example 12.c.1.'
          type: string
      id: DatabaseEngineInfo
      type: object
    GenerateTcpProxyScriptRequest:
      id: GenerateTcpProxyScriptRequest
      properties:
        vmSubnet:
          type: string
          description: 'Required. The name of the subnet the Compute instance will use for private connectivity. Must be supplied in the form of projects/{project}/regions/{region}/subnetworks/{subnetwork}. Note: the region for the subnet must match the Compute instance region.'
        vmMachineType:
          description: Required. The type of the Compute instance that will host the proxy.
          type: string
        vmZone:
          description: 'Optional. The Google Cloud Platform zone to create the VM in. The fully qualified name of the zone must be specified, including the region name, for example "us-central1-b". If not specified, uses the "-b" zone of the destination Connection Profile''s region.'
          type: string
        vmName:
          description: Required. The name of the Compute instance that will host the proxy.
          type: string
      description: Request message for 'GenerateTcpProxyScript' request.
      type: object
    PerformanceConfig:
      description: Performance configuration definition.
      type: object
      properties:
        dumpParallelLevel:
          enum:
            - DUMP_PARALLEL_LEVEL_UNSPECIFIED
            - MIN
            - OPTIMAL
            - MAX
          type: string
          description: Initial dump parallelism level.
          enumDescriptions:
            - Unknown dump parallel level. Will be defaulted to OPTIMAL.
            - Minimal parallel level.
            - Optimal parallel level.
            - Maximum parallel level.
      id: PerformanceConfig
    DatabaseEntity:
      description: 'The base entity type for all the database related entities. The message contains the entity name, the name of its parent, the entity type, and the specific details per entity type.'
      properties:
        databaseFunction:
          description: Function.
          $ref: '#/components/schemas/FunctionEntity'
        shortName:
          description: The short name (e.g. table name) of the entity.
          type: string
        storedProcedure:
          $ref: '#/components/schemas/StoredProcedureEntity'
          description: Stored procedure.
        schema:
          description: Schema.
          $ref: '#/components/schemas/SchemaEntity'
        tree:
          enum:
            - TREE_TYPE_UNSPECIFIED
            - SOURCE
            - DRAFT
            - DESTINATION
          enumDescriptions:
            - Tree type unspecified.
            - Tree of entities loaded from a source database.
            - Tree of entities converted from the source tree using the mapping rules.
            - Tree of entities observed on the destination database.
          description: The type of tree the entity belongs to.
          type: string
        sequence:
          description: Sequence.
          $ref: '#/components/schemas/SequenceEntity'
        issues:
          description: Details about the various issues found for the entity.
          items:
            $ref: '#/components/schemas/EntityIssue'
          type: array
        mappings:
          description: 'Details about entity mappings. For source tree entities, this holds the draft entities which were generated by the mapping rules. For draft tree entities, this holds the source entities which were converted to form the draft entity. Destination entities will have no mapping details.'
          type: array
          items:
            $ref: '#/components/schemas/EntityMapping'
        synonym:
          description: Synonym.
          $ref: '#/components/schemas/SynonymEntity'
        udt:
          description: UDT.
          $ref: '#/components/schemas/UDTEntity'
        entityDdl:
          items:
            $ref: '#/components/schemas/EntityDdl'
          description: 'Details about the entity DDL script. Multiple DDL scripts are provided for child entities such as a table entity will have one DDL for the table with additional DDLs for each index, constraint and such.'
          type: array
        materializedView:
          $ref: '#/components/schemas/MaterializedViewEntity'
          description: Materialized view.
        databasePackage:
          $ref: '#/components/schemas/PackageEntity'
          description: Package.
        database:
          description: Database.
          $ref: '#/components/schemas/DatabaseInstanceEntity'
        view:
          $ref: '#/components/schemas/ViewEntity'
          description: View.
        parentEntity:
          description: The full name of the parent entity (e.g. schema name).
          type: string
        entityType:
          type: string
          enum:
            - DATABASE_ENTITY_TYPE_UNSPECIFIED
            - DATABASE_ENTITY_TYPE_SCHEMA
            - DATABASE_ENTITY_TYPE_TABLE
            - DATABASE_ENTITY_TYPE_COLUMN
            - DATABASE_ENTITY_TYPE_CONSTRAINT
            - DATABASE_ENTITY_TYPE_INDEX
            - DATABASE_ENTITY_TYPE_TRIGGER
            - DATABASE_ENTITY_TYPE_VIEW
            - DATABASE_ENTITY_TYPE_SEQUENCE
            - DATABASE_ENTITY_TYPE_STORED_PROCEDURE
            - DATABASE_ENTITY_TYPE_FUNCTION
            - DATABASE_ENTITY_TYPE_SYNONYM
            - DATABASE_ENTITY_TYPE_DATABASE_PACKAGE
            - DATABASE_ENTITY_TYPE_UDT
            - DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW
            - DATABASE_ENTITY_TYPE_DATABASE
          enumDescriptions:
            - Unspecified database entity type.
            - Schema.
            - Table.
            - Column.
            - Constraint.
            - Index.
            - Trigger.
            - View.
            - Sequence.
            - Stored Procedure.
            - Function.
            - Synonym.
            - Package.
            - UDT.
            - Materialized View.
            - Database.
          description: 'The type of the database entity (table, view, index, ...).'
        table:
          description: Table.
          $ref: '#/components/schemas/TableEntity'
      id: DatabaseEntity
      type: object
    Binding:
      description: 'Associates `members`, or principals, with a `role`.'
      properties:
        members:
          type: array
          items:
            type: string
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
        condition:
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          $ref: '#/components/schemas/Expr'
        role:
          type: string
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
      type: object
      id: Binding
    StopMigrationJobRequest:
      description: Request message for 'StopMigrationJob' request.
      type: object
      id: StopMigrationJobRequest
      properties: {}
    MigrationJobVerificationError:
      description: Error message of a verification Migration job.
      properties:
        errorMessage:
          description: Output only. A formatted message with further details about the error and a CTA.
          type: string
          readOnly: true
        errorCode:
          type: string
          description: Output only. An instance of ErrorCode specifying the error that occurred.
          readOnly: true
          enumDescriptions:
            - An unknown error occurred
            - We failed to connect to one of the connection profile.
            - We failed to authenticate to one of the connection profile.
            - One of the involved connection profiles has an invalid configuration.
            - The versions of the source and the destination are incompatible.
            - The types of the source and the destination are incompatible.
            - 'No pglogical extension installed on databases, applicable for postgres.'
            - 'pglogical node already exists on databases, applicable for postgres.'
            - The value of parameter wal_level is not set to logical.
            - The value of parameter shared_preload_libraries does not include pglogical.
            - The value of parameter max_replication_slots is not sufficient.
            - The value of parameter max_wal_senders is not sufficient.
            - The value of parameter max_worker_processes is not sufficient.
            - Extensions installed are either not supported or having unsupported versions.
            - Unsupported migration type.
            - Invalid RDS logical replication.
            - 'The gtid_mode is not supported, applicable for MySQL.'
            - The table definition is not support due to missing primary key or replica identity.
            - The definer is not supported.
            - Migration is already running at the time of restart request.
            - The source already has a replication setup.
            - The source has tables with limited support. E.g. PostgreSQL tables without primary keys.
            - The source uses an unsupported locale.
            - The source uses an unsupported Foreign Data Wrapper configuration.
            - There was an underlying RDBMS error.
            - 'The source DB size in Bytes exceeds a certain threshold. The migration might require an increase of quota, or might not be supported.'
            - The destination DB contains existing databases that are conflicting with those in the source DB.
            - Insufficient privilege to enable the parallelism configuration.
          enum:
            - ERROR_CODE_UNSPECIFIED
            - CONNECTION_FAILURE
            - AUTHENTICATION_FAILURE
            - INVALID_CONNECTION_PROFILE_CONFIG
            - VERSION_INCOMPATIBILITY
            - CONNECTION_PROFILE_TYPES_INCOMPATIBILITY
            - NO_PGLOGICAL_INSTALLED
            - PGLOGICAL_NODE_ALREADY_EXISTS
            - INVALID_WAL_LEVEL
            - INVALID_SHARED_PRELOAD_LIBRARY
            - INSUFFICIENT_MAX_REPLICATION_SLOTS
            - INSUFFICIENT_MAX_WAL_SENDERS
            - INSUFFICIENT_MAX_WORKER_PROCESSES
            - UNSUPPORTED_EXTENSIONS
            - UNSUPPORTED_MIGRATION_TYPE
            - INVALID_RDS_LOGICAL_REPLICATION
            - UNSUPPORTED_GTID_MODE
            - UNSUPPORTED_TABLE_DEFINITION
            - UNSUPPORTED_DEFINER
            - CANT_RESTART_RUNNING_MIGRATION
            - SOURCE_ALREADY_SETUP
            - TABLES_WITH_LIMITED_SUPPORT
            - UNSUPPORTED_DATABASE_LOCALE
            - UNSUPPORTED_DATABASE_FDW_CONFIG
            - ERROR_RDBMS
            - SOURCE_SIZE_EXCEEDS_THRESHOLD
            - EXISTING_CONFLICTING_DATABASES
            - PARALLEL_IMPORT_INSUFFICIENT_PRIVILEGE
        errorDetailMessage:
          type: string
          readOnly: true
          description: 'Output only. A specific detailed error message, if supplied by the engine.'
      id: MigrationJobVerificationError
      type: object
    SinglePackageChange:
      id: SinglePackageChange
      description: 'Options to configure rule type SinglePackageChange. The rule is used to alter the sql code for a package entities. The rule filter field can refer to one entity. The rule scope can be: Package'
      type: object
      properties:
        packageBody:
          type: string
          description: Optional. Sql code for package body
        packageDescription:
          description: Optional. Sql code for package description
          type: string
    DoubleComparisonFilter:
      description: Filter based on relation between source value and compare value of type double in ConditionalColumnSetValue
      properties:
        valueComparison:
          enumDescriptions:
            - Value comparison unspecified.
            - Value is smaller than the Compare value.
            - Value is smaller or equal than the Compare value.
            - Value is larger than the Compare value.
            - Value is larger or equal than the Compare value.
          type: string
          description: Required. Relation between source value and compare value
          enum:
            - VALUE_COMPARISON_UNSPECIFIED
            - VALUE_COMPARISON_IF_VALUE_SMALLER_THAN
            - VALUE_COMPARISON_IF_VALUE_SMALLER_EQUAL_THAN
            - VALUE_COMPARISON_IF_VALUE_LARGER_THAN
            - VALUE_COMPARISON_IF_VALUE_LARGER_EQUAL_THAN
        value:
          description: Required. Double compare value to be used
          format: double
          type: number
      type: object
      id: DoubleComparisonFilter
    EntityDdl:
      description: A single DDL statement for a specific entity
      id: EntityDdl
      type: object
      properties:
        issueId:
          type: array
          description: EntityIssues found for this ddl.
          items:
            type: string
        ddl:
          type: string
          description: The actual ddl code.
        entity:
          type: string
          description: The name of the database entity the ddl refers to.
        ddlType:
          type: string
          description: 'Type of DDL (Create, Alter).'
        entityType:
          enumDescriptions:
            - Unspecified database entity type.
            - Schema.
            - Table.
            - Column.
            - Constraint.
            - Index.
            - Trigger.
            - View.
            - Sequence.
            - Stored Procedure.
            - Function.
            - Synonym.
            - Package.
            - UDT.
            - Materialized View.
            - Database.
          description: The entity type (if the DDL is for a sub entity).
          type: string
          enum:
            - DATABASE_ENTITY_TYPE_UNSPECIFIED
            - DATABASE_ENTITY_TYPE_SCHEMA
            - DATABASE_ENTITY_TYPE_TABLE
            - DATABASE_ENTITY_TYPE_COLUMN
            - DATABASE_ENTITY_TYPE_CONSTRAINT
            - DATABASE_ENTITY_TYPE_INDEX
            - DATABASE_ENTITY_TYPE_TRIGGER
            - DATABASE_ENTITY_TYPE_VIEW
            - DATABASE_ENTITY_TYPE_SEQUENCE
            - DATABASE_ENTITY_TYPE_STORED_PROCEDURE
            - DATABASE_ENTITY_TYPE_FUNCTION
            - DATABASE_ENTITY_TYPE_SYNONYM
            - DATABASE_ENTITY_TYPE_DATABASE_PACKAGE
            - DATABASE_ENTITY_TYPE_UDT
            - DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW
            - DATABASE_ENTITY_TYPE_DATABASE
    FunctionEntity:
      properties:
        customFeatures:
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
          description: Custom engine specific features.
        sqlCode:
          description: The SQL code which creates the function.
          type: string
      type: object
      description: Function's parent is a schema.
      id: FunctionEntity
    Empty:
      id: Empty
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
    VmSelectionConfig:
      type: object
      properties:
        vmZone:
          description: Required. The Google Cloud Platform zone the VM is located.
          type: string
      description: VM selection configuration message
      id: VmSelectionConfig
    Location:
      type: object
      properties:
        displayName:
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
          type: string
        labels:
          type: object
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          additionalProperties:
            type: string
        metadata:
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        name:
          type: string
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
      id: Location
      description: A resource that represents a Google Cloud location.
    SingleEntityRename:
      description: 'Options to configure rule type SingleEntityRename. The rule is used to rename an entity. The rule filter field can refer to only one entity. The rule scope can be one of: Database, Schema, Table, Column, Constraint, Index, View, Function, Stored Procedure, Materialized View, Sequence, UDT, Synonym'
      id: SingleEntityRename
      type: object
      properties:
        newName:
          description: Required. The new name of the destination entity
          type: string
    CloudSqlConnectionProfile:
      properties:
        publicIp:
          description: Output only. The Cloud SQL database instance's public IP.
          readOnly: true
          type: string
        privateIp:
          description: Output only. The Cloud SQL database instance's private IP.
          type: string
          readOnly: true
        settings:
          description: Immutable. Metadata used to create the destination Cloud SQL database.
          $ref: '#/components/schemas/CloudSqlSettings'
        additionalPublicIp:
          description: Output only. The Cloud SQL database instance's additional (outgoing) public IP. Used when the Cloud SQL database availability type is REGIONAL (i.e. multiple zones / highly available).
          readOnly: true
          type: string
        cloudSqlId:
          description: Output only. The Cloud SQL instance ID that this connection profile is associated with.
          type: string
          readOnly: true
      id: CloudSqlConnectionProfile
      description: 'Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination database instance.'
      type: object
    AuditLogConfig:
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      id: AuditLogConfig
      properties:
        logType:
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          description: The log type that this config enables.
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
        exemptedMembers:
          items:
            type: string
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          type: array
      type: object
    StaticIpConnectivity:
      id: StaticIpConnectivity
      description: The source database will allow incoming connections from the public IP of the destination database. You can retrieve the public IP of the Cloud SQL instance from the Cloud SQL console or using Cloud SQL APIs. No additional configuration is required.
      properties: {}
      type: object
    ReverseSshConnectivity:
      description: 'The details needed to configure a reverse SSH tunnel between the source and destination databases. These details will be used when calling the generateSshScript method (see https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/generateSshScript) to produce the script that will help set up the reverse SSH tunnel, and to set up the VPC peering between the Cloud SQL private network and the VPC.'
      id: ReverseSshConnectivity
      properties:
        vpc:
          type: string
          description: The name of the VPC to peer with the Cloud SQL private network.
        vmIp:
          description: Required. The IP of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.
          type: string
        vmPort:
          format: int32
          type: integer
          description: Required. The forwarding port of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.
        vm:
          description: The name of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.
          type: string
      type: object
    SourceTextFilter:
      id: SourceTextFilter
      properties:
        sourceMinLengthFilter:
          format: int64
          description: Optional. The filter will match columns with length greater than or equal to this number.
          type: string
        sourceMaxLengthFilter:
          type: string
          description: Optional. The filter will match columns with length smaller than or equal to this number.
          format: int64
      description: Filter for text-based data types like varchar.
      type: object
    ConvertConversionWorkspaceRequest:
      id: ConvertConversionWorkspaceRequest
      type: object
      description: Request message for 'ConvertConversionWorkspace' request.
      properties:
        convertFullPath:
          type: boolean
          description: 'Optional. Automatically convert the full entity path for each entity specified by the filter. For example, if the filter specifies a table, that table schema (and database if there is one) will also be converted.'
        filter:
          type: string
          description: Optional. Filter the entities to convert. Leaving this field empty will convert all of the entities. Supports Google AIP-160 style filtering.
        autoCommit:
          description: Optional. Specifies whether the conversion workspace is to be committed automatically after the conversion.
          type: boolean
    MultiColumnDatatypeChange:
      description: 'Options to configure rule type MultiColumnDatatypeChange. The rule is used to change the data type and associated properties of multiple columns at once. The rule filter field can refer to one or more entities. The rule scope can be one of:Column. This rule requires additional filters to be specified beyond the basic rule filter field, which is the source data type, but the rule supports additional filtering capabilities such as the minimum and maximum field length. All additional filters which are specified are required to be met in order for the rule to be applied (logical AND between the fields).'
      type: object
      properties:
        overridePrecision:
          format: int32
          description: Optional. Column precision - when relevant - if not specified and relevant uses the source column precision.
          type: integer
        customFeatures:
          additionalProperties:
            description: Properties of the object.
            type: any
          type: object
          description: Optional. Custom engine specific features.
        overrideScale:
          description: Optional. Column scale - when relevant - if not specified and relevant uses the source column scale.
          format: int32
          type: integer
        sourceTextFilter:
          $ref: '#/components/schemas/SourceTextFilter'
          description: Optional. Filter for text-based data types like varchar.
        overrideFractionalSecondsPrecision:
          type: integer
          description: Optional. Column fractional seconds precision - used only for timestamp based datatypes - if not specified and relevant uses the source column fractional seconds precision.
          format: int32
        newDataType:
          type: string
          description: Required. New data type.
        sourceDataTypeFilter:
          type: string
          description: Required. Filter on source data type.
        overrideLength:
          description: Optional. Column length - e.g. varchar (50) - if not specified and relevant uses the source column length.
          format: int64
          type: string
        sourceNumericFilter:
          description: Optional. Filter for fixed point number data types such as NUMERIC/NUMBER.
          $ref: '#/components/schemas/SourceNumericFilter'
      id: MultiColumnDatatypeChange
    DumpFlags:
      description: Dump flags definition.
      properties:
        dumpFlags:
          description: The flags for the initial dump.
          type: array
          items:
            $ref: '#/components/schemas/DumpFlag'
      id: DumpFlags
      type: object
    Policy:
      id: Policy
      type: object
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      properties:
        version:
          type: integer
          format: int32
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: '#/components/schemas/AuditConfig'
          type: array
        etag:
          format: byte
          type: string
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
        bindings:
          items:
            $ref: '#/components/schemas/Binding'
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
          type: array
    PromoteMigrationJobRequest:
      properties: {}
      type: object
      description: Request message for 'PromoteMigrationJob' request.
      id: PromoteMigrationJobRequest
    ResumeMigrationJobRequest:
      properties: {}
      id: ResumeMigrationJobRequest
      description: Request message for 'ResumeMigrationJob' request.
      type: object
    DatabaseType:
      properties:
        engine:
          enum:
            - DATABASE_ENGINE_UNSPECIFIED
            - MYSQL
            - POSTGRESQL
            - ORACLE
          enumDescriptions:
            - The source database engine of the migration job is unknown.
            - The source engine is MySQL.
            - The source engine is PostgreSQL.
            - The source engine is Oracle.
          type: string
          description: The database engine.
        provider:
          enum:
            - DATABASE_PROVIDER_UNSPECIFIED
            - CLOUDSQL
            - RDS
            - AURORA
            - ALLOYDB
          enumDescriptions:
            - The database provider is unknown.
            - CloudSQL runs the database.
            - RDS runs the database.
            - Amazon Aurora.
            - AlloyDB.
          description: The database provider.
          type: string
      description: A message defining the database engine and provider.
      type: object
      id: DatabaseType
    ListConversionWorkspacesResponse:
      id: ListConversionWorkspacesResponse
      properties:
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        conversionWorkspaces:
          items:
            $ref: '#/components/schemas/ConversionWorkspace'
          type: array
          description: The list of conversion workspace objects.
        nextPageToken:
          description: 'A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
      description: Response message for 'ListConversionWorkspaces' request.
      type: object
    DatabaseInstanceEntity:
      type: object
      description: DatabaseInstance acts as a parent entity to other database entities.
      properties:
        customFeatures:
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
          description: Custom engine specific features.
      id: DatabaseInstanceEntity
    ConditionalColumnSetValue:
      type: object
      properties:
        sourceNumericFilter:
          $ref: '#/components/schemas/SourceNumericFilter'
          description: Optional. Optional filter on source column precision and scale. Used for fixed point numbers such as NUMERIC/NUMBER data types.
        sourceTextFilter:
          description: Optional. Optional filter on source column length. Used for text based data types like varchar.
          $ref: '#/components/schemas/SourceTextFilter'
        customFeatures:
          additionalProperties:
            description: Properties of the object.
            type: any
          type: object
          description: Optional. Custom engine specific features.
        valueTransformation:
          $ref: '#/components/schemas/ValueTransformation'
          description: Required. Description of data transformation during migration.
      id: ConditionalColumnSetValue
      description: 'Options to configure rule type ConditionalColumnSetValue. The rule is used to transform the data which is being replicated/migrated. The rule filter field can refer to one or more entities. The rule scope can be one of: Column.'
    StartMigrationJobRequest:
      id: StartMigrationJobRequest
      type: object
      properties:
        skipValidation:
          type: boolean
          description: Optional. Start the migration job without running prior configuration verification. Defaults to `false`.
      description: Request message for 'StartMigrationJob' request.
    MappingRule:
      type: object
      id: MappingRule
      description: Definition of a transformation that is to be applied to a group of entities in the source schema. Several such transformations can be applied to an entity sequentially to define the corresponding entity in the target schema.
      properties:
        revisionCreateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The timestamp that the revision was created.
        multiEntityRename:
          $ref: '#/components/schemas/MultiEntityRename'
          description: Optional. Rule to specify how multiple entities should be renamed.
        conditionalColumnSetValue:
          description: 'Optional. Rule to specify how the data contained in a column should be transformed (such as trimmed, rounded, etc) provided that the data meets certain criteria.'
          $ref: '#/components/schemas/ConditionalColumnSetValue'
        multiColumnDataTypeChange:
          $ref: '#/components/schemas/MultiColumnDatatypeChange'
          description: Optional. Rule to specify how multiple columns should be converted to a different data type.
        sourceSqlChange:
          description: 'Optional. Rule to change the sql code for an entity, for example, function, procedure.'
          $ref: '#/components/schemas/SourceSqlChange'
        displayName:
          type: string
          description: Optional. A human readable name
        setTablePrimaryKey:
          $ref: '#/components/schemas/SetTablePrimaryKey'
          description: Optional. Rule to specify the primary key for a table
        filterTableColumns:
          $ref: '#/components/schemas/FilterTableColumns'
          description: Optional. Rule to specify the list of columns to include or exclude from a table.
        filter:
          $ref: '#/components/schemas/MappingRuleFilter'
          description: Required. The rule filter
        name:
          description: 'Full name of the mapping rule resource, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{set}/mappingRule/{rule}.'
          type: string
        revisionId:
          description: Output only. The revision ID of the mapping rule. A new revision is committed whenever the mapping rule is changed in any way. The format is an 8-character hexadecimal string.
          readOnly: true
          type: string
        singleEntityRename:
          description: Optional. Rule to specify how a single entity should be renamed.
          $ref: '#/components/schemas/SingleEntityRename'
        state:
          enum:
            - STATE_UNSPECIFIED
            - ENABLED
            - DISABLED
            - DELETED
          type: string
          enumDescriptions:
            - The state of the mapping rule is unknown.
            - The rule is enabled.
            - The rule is disabled.
            - The rule is logically deleted.
          description: Optional. The mapping rule state
        ruleOrder:
          description: Required. The order in which the rule is applied. Lower order rules are applied before higher value rules so they may end up being overridden.
          format: int64
          type: string
        ruleScope:
          enum:
            - DATABASE_ENTITY_TYPE_UNSPECIFIED
            - DATABASE_ENTITY_TYPE_SCHEMA
            - DATABASE_ENTITY_TYPE_TABLE
            - DATABASE_ENTITY_TYPE_COLUMN
            - DATABASE_ENTITY_TYPE_CONSTRAINT
            - DATABASE_ENTITY_TYPE_INDEX
            - DATABASE_ENTITY_TYPE_TRIGGER
            - DATABASE_ENTITY_TYPE_VIEW
            - DATABASE_ENTITY_TYPE_SEQUENCE
            - DATABASE_ENTITY_TYPE_STORED_PROCEDURE
            - DATABASE_ENTITY_TYPE_FUNCTION
            - DATABASE_ENTITY_TYPE_SYNONYM
            - DATABASE_ENTITY_TYPE_DATABASE_PACKAGE
            - DATABASE_ENTITY_TYPE_UDT
            - DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW
            - DATABASE_ENTITY_TYPE_DATABASE
          description: Required. The rule scope
          enumDescriptions:
            - Unspecified database entity type.
            - Schema.
            - Table.
            - Column.
            - Constraint.
            - Index.
            - Trigger.
            - View.
            - Sequence.
            - Stored Procedure.
            - Function.
            - Synonym.
            - Package.
            - UDT.
            - Materialized View.
            - Database.
          type: string
        singleColumnChange:
          description: Optional. Rule to specify how a single column is converted.
          $ref: '#/components/schemas/SingleColumnChange'
        convertRowidColumn:
          description: Optional. Rule to specify how multiple tables should be converted with an additional rowid column.
          $ref: '#/components/schemas/ConvertRowIdToColumn'
        singlePackageChange:
          $ref: '#/components/schemas/SinglePackageChange'
          description: Optional. Rule to specify how a single package is converted.
        entityMove:
          description: Optional. Rule to specify how multiple entities should be relocated into a different schema.
          $ref: '#/components/schemas/EntityMove'
    RulesFile:
      description: Details of a single rules file.
      id: RulesFile
      properties:
        rulesSourceFilename:
          type: string
          description: 'Required. The filename of the rules that needs to be converted. The filename is used mainly so that future logs of the import rules job contain it, and can therefore be searched by it.'
        rulesContent:
          description: Required. The text content of the rules that needs to be converted.
          type: string
      type: object
    TcpProxyScript:
      description: Response message for 'GenerateTcpProxyScript' request.
      properties:
        script:
          type: string
          description: The TCP Proxy configuration script.
      type: object
      id: TcpProxyScript
    ApplyJobDetails:
      properties:
        filter:
          description: Output only. AIP-160 based filter used to specify the entities to apply
          type: string
          readOnly: true
        connectionProfile:
          description: Output only. The connection profile which was used for the apply job.
          readOnly: true
          type: string
      type: object
      description: Details regarding an Apply background job.
      id: ApplyJobDetails
    ApplyConversionWorkspaceRequest:
      description: Request message for 'ApplyConversionWorkspace' request.
      id: ApplyConversionWorkspaceRequest
      type: object
      properties:
        filter:
          description: Filter which entities to apply. Leaving this field empty will apply all of the entities. Supports Google AIP 160 based filtering.
          type: string
        connectionProfile:
          description: Optional. Fully qualified (Uri) name of the destination connection profile.
          type: string
        autoCommit:
          type: boolean
          description: Optional. Specifies whether the conversion workspace is to be committed automatically after the apply.
        dryRun:
          description: 'Optional. Only validates the apply process, but doesn''t change the destination database. Only works for PostgreSQL destination connection profile.'
          type: boolean
    DescribeConversionWorkspaceRevisionsResponse:
      description: Response message for 'DescribeConversionWorkspaceRevisions' request.
      properties:
        revisions:
          description: The list of conversion workspace revisions.
          type: array
          items:
            $ref: '#/components/schemas/ConversionWorkspace'
      id: DescribeConversionWorkspaceRevisionsResponse
      type: object
    SetTablePrimaryKey:
      properties:
        primaryKey:
          type: string
          description: Optional. Name for the primary key
        primaryKeyColumns:
          type: array
          items:
            type: string
          description: Required. List of column names for the primary key
      type: object
      id: SetTablePrimaryKey
      description: 'Options to configure rule type SetTablePrimaryKey. The rule is used to specify the columns and name to configure/alter the primary key of a table. The rule filter field can refer to one entity. The rule scope can be one of: Table.'
    CancelOperationRequest:
      properties: {}
      id: CancelOperationRequest
      type: object
      description: The request message for Operations.CancelOperation.
    PrivateServiceConnectConnectivity:
      id: PrivateServiceConnectConnectivity
      type: object
      description: '[Private Service Connect connectivity](https://cloud.google.com/vpc/docs/private-service-connect#service-attachments)'
      properties:
        serviceAttachment:
          description: 'Required. A service attachment that exposes a database, and has the following format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment_name}'
          type: string
    GoogleCloudClouddmsV1OperationMetadata:
      description: Represents the metadata of the long-running operation.
      type: object
      id: GoogleCloudClouddmsV1OperationMetadata
      properties:
        statusMessage:
          readOnly: true
          description: 'Output only. Human-readable status of the operation, if any.'
          type: string
        target:
          type: string
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        requestedCancellation:
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
          readOnly: true
          type: boolean
        verb:
          type: string
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
    RoundToScale:
      properties:
        scale:
          type: integer
          description: Required. Scale value to be used
          format: int32
      id: RoundToScale
      description: 'This allows the data to change scale, for example if the source is 2 digits after the decimal point, specify round to scale value = 2. If for example the value needs to be converted to an integer, use round to scale value = 0.'
      type: object
    SearchBackgroundJobsResponse:
      description: Response message for 'SearchBackgroundJobs' request.
      properties:
        jobs:
          items:
            $ref: '#/components/schemas/BackgroundJobLogEntry'
          type: array
          description: The list of conversion workspace mapping rules.
      type: object
      id: SearchBackgroundJobsResponse
    UserPassword:
      description: The username/password for a database user. Used for specifying initial users at cluster creation time.
      type: object
      properties:
        user:
          description: The database username.
          type: string
        password:
          description: The initial password for the user.
          type: string
        passwordSet:
          readOnly: true
          description: Output only. Indicates if the initial_user.password field has been set.
          type: boolean
      id: UserPassword
    ValueTransformation:
      type: object
      description: Description of data transformation during migration as part of the ConditionalColumnSetValue.
      properties:
        intComparison:
          description: Optional. Filter on relation between source value and compare value of type integer.
          $ref: '#/components/schemas/IntComparisonFilter'
        assignMinValue:
          $ref: '#/components/schemas/Empty'
          description: 'Optional. Set to min_value - if integer or numeric, will use int.minvalue, etc'
        doubleComparison:
          description: Optional. Filter on relation between source value and compare value of type double.
          $ref: '#/components/schemas/DoubleComparisonFilter'
        assignNull:
          description: Optional. Set to null
          $ref: '#/components/schemas/Empty'
        applyHash:
          $ref: '#/components/schemas/ApplyHash'
          description: Optional. Applies a hash function on the data
        roundScale:
          $ref: '#/components/schemas/RoundToScale'
          description: Optional. Allows the data to change scale
        assignSpecificValue:
          $ref: '#/components/schemas/AssignSpecificValue'
          description: Optional. Set to a specific value (value is converted to fit the target data type)
        valueList:
          description: Optional. Value is found in the specified list.
          $ref: '#/components/schemas/ValueListFilter'
        isNull:
          description: Optional. Value is null
          $ref: '#/components/schemas/Empty'
        assignMaxValue:
          description: 'Optional. Set to max_value - if integer or numeric, will use int.maxvalue, etc'
          $ref: '#/components/schemas/Empty'
      id: ValueTransformation
    EntityMove:
      id: EntityMove
      description: 'Options to configure rule type EntityMove. The rule is used to move an entity to a new schema. The rule filter field can refer to one or more entities. The rule scope can be one of: Table, Column, Constraint, Index, View, Function, Stored Procedure, Materialized View, Sequence, UDT'
      properties:
        newSchema:
          type: string
          description: Required. The new schema
      type: object
    OracleConnectionProfile:
      properties:
        passwordSet:
          description: Output only. Indicates whether a new password is included in the request.
          type: boolean
          readOnly: true
        forwardSshConnectivity:
          description: Forward SSH tunnel connectivity.
          $ref: '#/components/schemas/ForwardSshTunnelConnectivity'
        databaseService:
          description: Required. Database service for the Oracle connection.
          type: string
        staticServiceIpConnectivity:
          $ref: '#/components/schemas/StaticServiceIpConnectivity'
          description: Static Service IP connectivity.
        privateConnectivity:
          $ref: '#/components/schemas/PrivateConnectivity'
          description: Private connectivity.
        host:
          type: string
          description: Required. The IP or hostname of the source Oracle database.
        password:
          description: 'Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.'
          type: string
        ssl:
          $ref: '#/components/schemas/SslConfig'
          description: SSL configuration for the connection to the source Oracle database. * Only `SERVER_ONLY` configuration is supported for Oracle SSL. * SSL is supported for Oracle versions 12 and above.
        port:
          type: integer
          format: int32
          description: Required. The network port of the source Oracle database.
        username:
          description: Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.
          type: string
      id: OracleConnectionProfile
      description: Specifies connection parameters required specifically for Oracle databases.
      type: object
    ValueListFilter:
      type: object
      id: ValueListFilter
      properties:
        ignoreCase:
          description: Required. Whether to ignore case when filtering by values. Defaults to false
          type: boolean
        valuePresentList:
          enum:
            - VALUE_PRESENT_IN_LIST_UNSPECIFIED
            - VALUE_PRESENT_IN_LIST_IF_VALUE_LIST
            - VALUE_PRESENT_IN_LIST_IF_VALUE_NOT_LIST
          type: string
          enumDescriptions:
            - Value present in list unspecified
            - If the source value is in the supplied list at value_list
            - If the source value is not in the supplied list at value_list
          description: Required. Indicates whether the filter matches rows with values that are present in the list or those with values not present in it.
        values:
          type: array
          description: Required. The list to be used to filter by
          items:
            type: string
      description: A list of values to filter by in ConditionalColumnSetValue
    PrimaryInstanceSettings:
      type: object
      properties:
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Labels for the AlloyDB primary instance created by DMS. An object containing a list of ''key'', ''value'' pairs.'
        machineConfig:
          $ref: '#/components/schemas/MachineConfig'
          description: Configuration for the machines that host the underlying database engine.
        id:
          type: string
          description: 'Required. The ID of the AlloyDB primary instance. The ID must satisfy the regex expression "[a-z0-9-]+".'
        databaseFlags:
          type: object
          additionalProperties:
            type: string
          description: Database flags to pass to AlloyDB when DMS is creating the AlloyDB cluster and instances. See the AlloyDB documentation for how these can be used.
        privateIp:
          description: Output only. The private IP address for the Instance. This is the connection endpoint for an end-user application.
          type: string
          readOnly: true
      description: Settings for the cluster's primary instance
      id: PrimaryInstanceSettings
    FetchStaticIpsResponse:
      description: Response message for a 'FetchStaticIps' request.
      type: object
      id: FetchStaticIpsResponse
      properties:
        nextPageToken:
          type: string
          description: 'A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
        staticIps:
          type: array
          description: List of static IPs.
          items:
            type: string
    CommitConversionWorkspaceRequest:
      type: object
      description: Request message for 'CommitConversionWorkspace' request.
      id: CommitConversionWorkspaceRequest
      properties:
        commitName:
          description: Optional. Optional name of the commit.
          type: string
    AssignSpecificValue:
      type: object
      properties:
        value:
          type: string
          description: Required. Specific value to be assigned
      id: AssignSpecificValue
      description: Set to a specific value (value is converted to fit the target data type)
    MaterializedViewEntity:
      description: MaterializedView's parent is a schema.
      id: MaterializedViewEntity
      type: object
      properties:
        sqlCode:
          type: string
          description: The SQL code which creates the view.
        customFeatures:
          additionalProperties:
            description: Properties of the object.
            type: any
          type: object
          description: Custom engine specific features.
    AlloyDbConnectionProfile:
      type: object
      description: 'Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster.'
      properties:
        settings:
          $ref: '#/components/schemas/AlloyDbSettings'
          description: Immutable. Metadata used to create the destination AlloyDB cluster.
        clusterId:
          type: string
          description: Required. The AlloyDB cluster ID that this connection profile is associated with.
      id: AlloyDbConnectionProfile
    Expr:
      type: object
      id: Expr
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      properties:
        location:
          type: string
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
        description:
          type: string
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
        title:
          type: string
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
    ConversionWorkspaceInfo:
      properties:
        name:
          description: The resource name (URI) of the conversion workspace.
          type: string
        commitId:
          description: The commit ID of the conversion workspace.
          type: string
      type: object
      id: ConversionWorkspaceInfo
      description: A conversion workspace's version.
    SeedConversionWorkspaceRequest:
      properties:
        destinationConnectionProfile:
          type: string
          description: Optional. Fully qualified (Uri) name of the destination connection profile.
        autoCommit:
          type: boolean
          description: Should the conversion workspace be committed automatically after the seed operation.
        sourceConnectionProfile:
          type: string
          description: Optional. Fully qualified (Uri) name of the source connection profile.
      description: Request message for 'SeedConversionWorkspace' request.
      type: object
      id: SeedConversionWorkspaceRequest
    PostgreSqlConnectionProfile:
      description: Specifies connection parameters required specifically for PostgreSQL databases.
      type: object
      id: PostgreSqlConnectionProfile
      properties:
        password:
          description: 'Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.'
          type: string
        username:
          description: Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.
          type: string
        staticIpConnectivity:
          $ref: '#/components/schemas/StaticIpConnectivity'
          description: 'Static ip connectivity data (default, no additional details needed).'
        port:
          format: int32
          type: integer
          description: Required. The network port of the source PostgreSQL database.
        host:
          description: Required. The IP or hostname of the source PostgreSQL database.
          type: string
        passwordSet:
          type: boolean
          readOnly: true
          description: Output only. Indicates If this connection profile password is stored.
        privateServiceConnectConnectivity:
          description: Private service connect connectivity.
          $ref: '#/components/schemas/PrivateServiceConnectConnectivity'
        ssl:
          description: SSL configuration for the destination to connect to the source database.
          $ref: '#/components/schemas/SslConfig'
        cloudSqlId:
          description: 'If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.'
          type: string
        networkArchitecture:
          description: 'Output only. If the source is a Cloud SQL database, this field indicates the network architecture it''s associated with.'
          readOnly: true
          type: string
          enum:
            - NETWORK_ARCHITECTURE_UNSPECIFIED
            - NETWORK_ARCHITECTURE_OLD_CSQL_PRODUCER
            - NETWORK_ARCHITECTURE_NEW_CSQL_PRODUCER
          enumDescriptions:
            - ''
            - Instance is in Cloud SQL's old producer network architecture.
            - Instance is in Cloud SQL's new producer network architecture.
    RollbackConversionWorkspaceRequest:
      type: object
      description: Request message for 'RollbackConversionWorkspace' request.
      properties: {}
      id: RollbackConversionWorkspaceRequest
    ListMappingRulesResponse:
      properties:
        nextPageToken:
          type: string
          description: 'A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
        mappingRules:
          description: The list of conversion workspace mapping rules.
          items:
            $ref: '#/components/schemas/MappingRule'
          type: array
      type: object
      description: Response message for 'ListMappingRulesRequest' request.
      id: ListMappingRulesResponse
    SshScript:
      description: Response message for 'GenerateSshScript' request.
      id: SshScript
      type: object
      properties:
        script:
          description: The ssh configuration script.
          type: string
    BackgroundJobLogEntry:
      type: object
      description: Execution log of a background job.
      id: BackgroundJobLogEntry
      properties:
        applyJobDetails:
          $ref: '#/components/schemas/ApplyJobDetails'
          readOnly: true
          description: Output only. Apply job details.
        startTime:
          description: The timestamp when the background job was started.
          type: string
          format: google-datetime
        seedJobDetails:
          readOnly: true
          description: Output only. Seed job details.
          $ref: '#/components/schemas/SeedJobDetails'
        importRulesJobDetails:
          readOnly: true
          $ref: '#/components/schemas/ImportRulesJobDetails'
          description: Output only. Import rules job details.
        completionComment:
          description: 'Output only. Job completion comment, such as how many entities were seeded, how many warnings were found during conversion, and similar information.'
          type: string
          readOnly: true
        id:
          type: string
          description: The background job log entry ID.
        completionState:
          enum:
            - JOB_COMPLETION_STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
          type: string
          enumDescriptions:
            - The status is not specified. This state is used when job is not yet finished.
            - Success.
            - Error.
          readOnly: true
          description: 'Output only. Job completion state, i.e. the final state after the job completed.'
        finishTime:
          description: The timestamp when the background job was finished.
          format: google-datetime
          type: string
        jobType:
          enum:
            - BACKGROUND_JOB_TYPE_UNSPECIFIED
            - BACKGROUND_JOB_TYPE_SOURCE_SEED
            - BACKGROUND_JOB_TYPE_CONVERT
            - BACKGROUND_JOB_TYPE_APPLY_DESTINATION
            - BACKGROUND_JOB_TYPE_IMPORT_RULES_FILE
          description: The type of job that was executed.
          enumDescriptions:
            - Unspecified background job type.
            - Job to seed from the source database.
            - Job to convert the source database into a draft of the destination database.
            - Job to apply the draft tree onto the destination.
            - Job to import and convert mapping rules from an external source such as an ora2pg config file.
          type: string
        requestAutocommit:
          description: Output only. Whether the client requested the conversion workspace to be committed after a successful completion of the job.
          type: boolean
          readOnly: true
        convertJobDetails:
          readOnly: true
          $ref: '#/components/schemas/ConvertJobDetails'
          description: Output only. Convert job details.
    ImportMappingRulesRequest:
      properties:
        rulesFormat:
          description: Required. The format of the rules content file.
          enum:
            - IMPORT_RULES_FILE_FORMAT_UNSPECIFIED
            - IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE
            - IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE
          enumDescriptions:
            - Unspecified rules format.
            - HarbourBridge session file.
            - Ora2Pg configuration file.
          type: string
        autoCommit:
          description: Required. Should the conversion workspace be committed automatically after the import operation.
          type: boolean
        rulesFiles:
          type: array
          description: Required. One or more rules files.
          items:
            $ref: '#/components/schemas/RulesFile'
      description: Request message for 'ImportMappingRules' request.
      id: ImportMappingRulesRequest
      type: object
    SourceNumericFilter:
      description: Filter for fixed point number data types such as NUMERIC/NUMBER
      id: SourceNumericFilter
      properties:
        sourceMaxScaleFilter:
          description: Optional. The filter will match columns with scale smaller than or equal to this number.
          format: int32
          type: integer
        numericFilterOption:
          enumDescriptions:
            - Numeric filter option unspecified
            - Numeric filter option that matches all numeric columns.
            - Numeric filter option that matches columns having numeric datatypes with specified precision and scale within the limited range of filter.
            - Numeric filter option that matches only the numeric columns with no precision and scale specified.
          enum:
            - NUMERIC_FILTER_OPTION_UNSPECIFIED
            - NUMERIC_FILTER_OPTION_ALL
            - NUMERIC_FILTER_OPTION_LIMIT
            - NUMERIC_FILTER_OPTION_LIMITLESS
          type: string
          description: Required. Enum to set the option defining the datatypes numeric filter has to be applied to
        sourceMaxPrecisionFilter:
          description: Optional. The filter will match columns with precision smaller than or equal to this number.
          type: integer
          format: int32
        sourceMinScaleFilter:
          description: Optional. The filter will match columns with scale greater than or equal to this number.
          format: int32
          type: integer
        sourceMinPrecisionFilter:
          type: integer
          format: int32
          description: Optional. The filter will match columns with precision greater than or equal to this number.
      type: object
    DescribeDatabaseEntitiesResponse:
      properties:
        databaseEntities:
          description: The list of database entities for the conversion workspace.
          items:
            $ref: '#/components/schemas/DatabaseEntity'
          type: array
        nextPageToken:
          description: 'A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
      id: DescribeDatabaseEntitiesResponse
      type: object
      description: Response message for 'DescribeDatabaseEntities' request.
    ListConnectionProfilesResponse:
      id: ListConnectionProfilesResponse
      type: object
      properties:
        connectionProfiles:
          description: The response list of connection profiles.
          type: array
          items:
            $ref: '#/components/schemas/ConnectionProfile'
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        nextPageToken:
          type: string
          description: 'A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
      description: Response message for 'ListConnectionProfiles' request.
    MySqlConnectionProfile:
      id: MySqlConnectionProfile
      description: Specifies connection parameters required specifically for MySQL databases.
      properties:
        host:
          description: Required. The IP or hostname of the source MySQL database.
          type: string
        ssl:
          $ref: '#/components/schemas/SslConfig'
          description: SSL configuration for the destination to connect to the source database.
        cloudSqlId:
          type: string
          description: 'If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.'
        username:
          type: string
          description: Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.
        passwordSet:
          type: boolean
          readOnly: true
          description: Output only. Indicates If this connection profile password is stored.
        port:
          type: integer
          description: Required. The network port of the source MySQL database.
          format: int32
        password:
          type: string
          description: 'Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.'
      type: object
    StoredProcedureEntity:
      id: StoredProcedureEntity
      type: object
      description: Stored procedure's parent is a schema.
      properties:
        sqlCode:
          type: string
          description: The SQL code which creates the stored procedure.
        customFeatures:
          description: Custom engine specific features.
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
    ConstraintEntity:
      type: object
      description: 'Constraint is not used as an independent entity, it is retrieved as part of another entity such as Table or View.'
      properties:
        referenceColumns:
          items:
            type: string
          type: array
          description: 'Reference columns which may be associated with the constraint. For example, if the constraint is a FOREIGN_KEY, this represents the list of full names of referenced columns by the foreign key.'
        tableName:
          description: 'Table which is associated with the constraint. In case the constraint is defined on a table, this field is left empty as this information is stored in parent_name. However, if constraint is defined on a view, this field stores the table name on which the view is defined.'
          type: string
        customFeatures:
          type: object
          description: Custom engine specific features.
          additionalProperties:
            description: Properties of the object.
            type: any
        referenceTable:
          description: 'Reference table which may be associated with the constraint. For example, if the constraint is a FOREIGN_KEY, this represents the list of full name of the referenced table by the foreign key.'
          type: string
        tableColumns:
          items:
            type: string
          type: array
          description: 'Table columns used as part of the Constraint, for example primary key constraint should list the columns which constitutes the key.'
        name:
          type: string
          description: The name of the table constraint.
        type:
          description: 'Type of constraint, for example unique, primary key, foreign key (currently only primary key is supported).'
          type: string
      id: ConstraintEntity
    SqlAclEntry:
      type: object
      description: An entry for an Access Control list.
      id: SqlAclEntry
      properties:
        expireTime:
          format: google-datetime
          description: 'The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example: `2012-11-15T16:19:00.094Z`.'
          type: string
        value:
          description: The allowlisted value for the access control list.
          type: string
        label:
          description: A label to identify this entry.
          type: string
        ttl:
          type: string
          description: Input only. The time-to-leave of this access control entry.
          format: google-duration
    ConvertJobDetails:
      id: ConvertJobDetails
      properties:
        filter:
          readOnly: true
          description: Output only. AIP-160 based filter used to specify the entities to convert
          type: string
      description: Details regarding a Convert background job.
      type: object
    ConversionWorkspace:
      type: object
      properties:
        hasUncommittedChanges:
          type: boolean
          description: Output only. Whether the workspace has uncommitted changes (changes which were made after the workspace was committed).
          readOnly: true
        latestCommitId:
          description: Output only. The latest commit ID.
          readOnly: true
          type: string
        latestCommitTime:
          description: Output only. The timestamp when the workspace was committed.
          type: string
          format: google-datetime
          readOnly: true
        createTime:
          description: Output only. The timestamp when the workspace resource was created.
          format: google-datetime
          readOnly: true
          type: string
        source:
          $ref: '#/components/schemas/DatabaseEngineInfo'
          description: Required. The source engine details.
        name:
          type: string
          description: 'Full name of the workspace resource, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.'
        globalSettings:
          type: object
          description: 'Optional. A generic list of settings for the workspace. The settings are database pair dependant and can indicate default behavior for the mapping rules engine or turn on or off specific features. Such examples can be: convert_foreign_key_to_interleave=true, skip_triggers=false, ignore_non_table_synonyms=true'
          additionalProperties:
            type: string
        updateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The timestamp when the workspace resource was last updated.
        destination:
          $ref: '#/components/schemas/DatabaseEngineInfo'
          description: Required. The destination engine details.
        displayName:
          description: Optional. The display name for the workspace.
          type: string
      description: The main conversion workspace resource entity.
      id: ConversionWorkspace
    SeedJobDetails:
      description: Details regarding a Seed background job.
      type: object
      id: SeedJobDetails
      properties:
        connectionProfile:
          readOnly: true
          description: Output only. The connection profile which was used for the seed job.
          type: string
    ColumnEntity:
      type: object
      id: ColumnEntity
      properties:
        charset:
          type: string
          description: Charset override - instead of table level charset.
        arrayLength:
          type: integer
          description: 'If the column is array, of which length.'
          format: int32
        ordinalPosition:
          format: int32
          type: integer
          description: Column order in the table.
        length:
          description: Column length - e.g. varchar (50).
          type: string
          format: int64
        nullable:
          type: boolean
          description: Is the column nullable.
        udt:
          type: boolean
          description: Is the column a UDT.
        name:
          type: string
          description: Column name.
        collation:
          type: string
          description: Collation override - instead of table level collation.
        dataType:
          description: Column data type.
          type: string
        scale:
          description: Column scale - when relevant.
          format: int32
          type: integer
        customFeatures:
          description: Custom engine specific features.
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
        comment:
          type: string
          description: Comment associated with the column.
        fractionalSecondsPrecision:
          description: Column fractional second precision - used for timestamp based datatypes.
          format: int32
          type: integer
        array:
          type: boolean
          description: Is the column of array type.
        precision:
          type: integer
          description: Column precision - when relevant.
          format: int32
        defaultValue:
          description: Default value of the column.
          type: string
        autoGenerated:
          description: Is the column auto-generated/identity.
          type: boolean
        setValues:
          type: array
          items:
            type: string
          description: Specifies the list of values allowed in the column. Only used for set data type.
      description: 'Column is not used as an independent entity, it is retrieved as part of a Table entity.'
    TestIamPermissionsRequest:
      properties:
        permissions:
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
          items:
            type: string
          type: array
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
    FilterTableColumns:
      properties:
        includeColumns:
          items:
            type: string
          description: Optional. List of columns to be included for a particular table.
          type: array
        excludeColumns:
          items:
            type: string
          description: Optional. List of columns to be excluded for a particular table.
          type: array
      type: object
      id: FilterTableColumns
      description: 'Options to configure rule type FilterTableColumns. The rule is used to filter the list of columns to include or exclude from a table. The rule filter field can refer to one entity. The rule scope can be: Table Only one of the two lists can be specified for the rule.'
    IndexEntity:
      id: IndexEntity
      properties:
        name:
          description: The name of the index.
          type: string
        type:
          description: 'Type of index, for example B-TREE.'
          type: string
        customFeatures:
          description: Custom engine specific features.
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
        unique:
          description: Boolean value indicating whether the index is unique.
          type: boolean
        tableColumns:
          type: array
          description: 'Table columns used as part of the Index, for example B-TREE index should list the columns which constitutes the index.'
          items:
            type: string
      type: object
      description: 'Index is not used as an independent entity, it is retrieved as part of a Table entity.'
    AuditConfig:
      properties:
        auditLogConfigs:
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          description: The configuration for logging of each type of permission.
          type: array
        service:
          type: string
          description: 'Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.'
      id: AuditConfig
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      type: object
    SynonymEntity:
      type: object
      properties:
        sourceType:
          description: The type of the entity for which the synonym is being created (usually a table or a sequence).
          type: string
          enumDescriptions:
            - Unspecified database entity type.
            - Schema.
            - Table.
            - Column.
            - Constraint.
            - Index.
            - Trigger.
            - View.
            - Sequence.
            - Stored Procedure.
            - Function.
            - Synonym.
            - Package.
            - UDT.
            - Materialized View.
            - Database.
          enum:
            - DATABASE_ENTITY_TYPE_UNSPECIFIED
            - DATABASE_ENTITY_TYPE_SCHEMA
            - DATABASE_ENTITY_TYPE_TABLE
            - DATABASE_ENTITY_TYPE_COLUMN
            - DATABASE_ENTITY_TYPE_CONSTRAINT
            - DATABASE_ENTITY_TYPE_INDEX
            - DATABASE_ENTITY_TYPE_TRIGGER
            - DATABASE_ENTITY_TYPE_VIEW
            - DATABASE_ENTITY_TYPE_SEQUENCE
            - DATABASE_ENTITY_TYPE_STORED_PROCEDURE
            - DATABASE_ENTITY_TYPE_FUNCTION
            - DATABASE_ENTITY_TYPE_SYNONYM
            - DATABASE_ENTITY_TYPE_DATABASE_PACKAGE
            - DATABASE_ENTITY_TYPE_UDT
            - DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW
            - DATABASE_ENTITY_TYPE_DATABASE
        sourceEntity:
          type: string
          description: The name of the entity for which the synonym is being created (the source).
        customFeatures:
          type: object
          description: Custom engine specific features.
          additionalProperties:
            description: Properties of the object.
            type: any
      id: SynonymEntity
      description: Synonym's parent is a schema.
    TriggerEntity:
      properties:
        customFeatures:
          description: Custom engine specific features.
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
        triggeringEvents:
          description: 'The DML, DDL, or database events that fire the trigger, for example INSERT, UPDATE.'
          type: array
          items:
            type: string
        name:
          description: The name of the trigger.
          type: string
        triggerType:
          description: 'Indicates when the trigger fires, for example BEFORE STATEMENT, AFTER EACH ROW.'
          type: string
        sqlCode:
          description: The SQL code which creates the trigger.
          type: string
      id: TriggerEntity
      type: object
      description: 'Trigger is not used as an independent entity, it is retrieved as part of a Table entity.'
    ImportRulesJobDetails:
      properties:
        files:
          readOnly: true
          description: Output only. File names used for the import rules job.
          items:
            type: string
          type: array
        fileFormat:
          readOnly: true
          enum:
            - IMPORT_RULES_FILE_FORMAT_UNSPECIFIED
            - IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE
            - IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE
          description: Output only. The requested file format.
          type: string
          enumDescriptions:
            - Unspecified rules format.
            - HarbourBridge session file.
            - Ora2Pg configuration file.
      description: Details regarding an Import Rules background job.
      type: object
      id: ImportRulesJobDetails
    EncryptionConfig:
      properties:
        kmsKeyName:
          description: 'The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME]'
          type: string
      description: EncryptionConfig describes the encryption config of a cluster that is encrypted with a CMEK (customer-managed encryption key).
      type: object
      id: EncryptionConfig
    UDTEntity:
      id: UDTEntity
      description: UDT's parent is a schema.
      properties:
        customFeatures:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
          description: Custom engine specific features.
        udtBody:
          description: The SQL code which creates the udt body.
          type: string
        udtSqlCode:
          description: The SQL code which creates the udt.
          type: string
      type: object
    PrivateConnectivity:
      properties:
        privateConnection:
          type: string
          description: Required. The resource name (URI) of the private connection.
      type: object
      description: Private Connectivity.
      id: PrivateConnectivity
    PrivateConnection:
      properties:
        createTime:
          readOnly: true
          description: Output only. The create time of the resource.
          type: string
          format: google-datetime
        updateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The last update time of the resource.
        error:
          description: Output only. The error details in case of state FAILED.
          readOnly: true
          $ref: '#/components/schemas/Status'
        labels:
          description: 'The resource labels for private connections to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.'
          additionalProperties:
            type: string
          type: object
        name:
          description: The name of the resource.
          type: string
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - CREATED
            - FAILED
            - DELETING
            - FAILED_TO_DELETE
            - DELETED
          readOnly: true
          description: Output only. The state of the private connection.
          enumDescriptions:
            - ''
            - The private connection is in creation state - creating resources.
            - The private connection has been created with all of its resources.
            - The private connection creation has failed.
            - The private connection is being deleted.
            - 'Delete request has failed, resource is in invalid state.'
            - The private connection has been deleted.
        displayName:
          description: The private connection display name.
          type: string
        vpcPeeringConfig:
          description: VPC peering configuration.
          $ref: '#/components/schemas/VpcPeeringConfig'
      type: object
      id: PrivateConnection
      description: The PrivateConnection resource is used to establish private connectivity with the customer's network.
    VpcPeeringConnectivity:
      properties:
        vpc:
          description: The name of the VPC network to peer with the Cloud SQL private network.
          type: string
      type: object
      description: The details of the VPC where the source database is located in Google Cloud. We will use this information to set up the VPC peering connection between Cloud SQL and this VPC.
      id: VpcPeeringConnectivity
  parameters:
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
  x-stackQL-resources:
    connection_profiles:
      id: google.datamigration.connection_profiles
      name: connection_profiles
      title: Connection Profiles
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles~1{connectionProfilesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles~1{connectionProfilesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles~1{connectionProfilesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.connectionProfiles
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connection_profiles/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/connection_profiles/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connection_profiles/methods/delete'
    connection_profiles_iam_policies:
      id: google.datamigration.connection_profiles_iam_policies
      name: connection_profiles_iam_policies
      title: Connection Profiles Iam Policies
      methods:
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles~1{connectionProfilesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles~1{connectionProfilesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles~1{connectionProfilesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connectionProfiles~1{connectionProfilesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connection_profiles_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    private_connections:
      id: google.datamigration.private_connections
      name: private_connections
      title: Private Connections
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateConnections~1{privateConnectionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateConnections~1{privateConnectionsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateConnections/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.privateConnections
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateConnections/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateConnections/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_connections/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_connections/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_connections/methods/delete'
    private_connections_iam_policies:
      id: google.datamigration.private_connections_iam_policies
      name: private_connections_iam_policies
      title: Private Connections Iam Policies
      methods:
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateConnections~1{privateConnectionsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateConnections~1{privateConnectionsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateConnections~1{privateConnectionsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateConnections~1{privateConnectionsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_connections_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    migration_jobs:
      id: google.datamigration.migration_jobs
      name: migration_jobs
      title: Migration Jobs
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resume:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:resume/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.migrationJobs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_tcp_proxy_script:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:generateTcpProxyScript/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:start/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_ssh_script:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:generateSshScript/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:verify/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restart:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:restart/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        promote:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:promote/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/migration_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/migration_jobs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/migration_jobs/methods/delete'
    migration_jobs_iam_policies:
      id: google.datamigration.migration_jobs_iam_policies
      name: migration_jobs_iam_policies
      title: Migration Jobs Iam Policies
      methods:
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migrationJobs~1{migrationJobsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/migration_jobs_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    conversion_workspaces:
      id: google.datamigration.conversion_workspaces
      name: conversion_workspaces
      title: Conversion Workspaces
      methods:
        describe_conversion_workspace_revisions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:describeConversionWorkspaceRevisions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rollback:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:rollback/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.conversionWorkspaces
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        seed:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:seed/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        describe_database_entities:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:describeDatabaseEntities/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        convert:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:convert/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        apply:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:apply/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        commit:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:commit/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search_background_jobs:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:searchBackgroundJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/conversion_workspaces/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/conversion_workspaces/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/conversion_workspaces/methods/delete'
    conversion_workspaces_iam_policies:
      id: google.datamigration.conversion_workspaces_iam_policies
      name: conversion_workspaces_iam_policies
      title: Conversion Workspaces Iam Policies
      methods:
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/conversion_workspaces_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    mapping_rules:
      id: google.datamigration.mapping_rules
      name: mapping_rules
      title: Mapping Rules
      methods:
        import:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}~1mappingRules:import/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}~1mappingRules~1{mappingRulesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}~1mappingRules~1{mappingRulesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}~1mappingRules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}~1mappingRules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.mappingRules
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversionWorkspaces~1{conversionWorkspacesId}~1mappingRules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mapping_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/mapping_rules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/mapping_rules/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/mapping_rules/methods/delete'
    operations:
      id: google.datamigration.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    locations:
      id: google.datamigration.locations
      name: locations
      title: Locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
    static_ips:
      id: google.datamigration.static_ips
      name: static_ips
      title: Static Ips
      methods:
        fetch_static_ips:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:fetchStaticIps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
    get:
      description: Gets details of a single connection profile.
      operationId: datamigration.projects.locations.connectionProfiles.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionProfile'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes a single Database Migration Service connection profile. A connection profile can only be deleted if it is not in use by any active migration jobs.
      operationId: datamigration.projects.locations.connectionProfiles.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: connection_profiles
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Update the configuration of a single connection profile.
      operationId: datamigration.projects.locations.connectionProfiles.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionProfile'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: skipValidation
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles':
    parameters: *ref_1
    get:
      description: Retrieves a list of all connection profiles in a given project and location.
      operationId: datamigration.projects.locations.connectionProfiles.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionProfilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.connectionProfiles
    post:
      description: Creates a new connection profile in a given project and location.
      operationId: datamigration.projects.locations.connectionProfiles.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionProfile'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: skipValidation
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: connectionProfileId
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: datamigration.projects.locations.connectionProfiles.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
      x-stackQL-resource: connection_profiles_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: datamigration.projects.locations.connectionProfiles.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: connection_profiles_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: datamigration.projects.locations.connectionProfiles.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
      x-stackQL-resource: connection_profiles_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}':
    parameters: *ref_1
    get:
      description: Gets details of a single private connection.
      operationId: datamigration.projects.locations.privateConnections.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateConnection'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: private_connections
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes a single Database Migration Service private connection.
      operationId: datamigration.projects.locations.privateConnections.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: private_connections
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: datamigration.projects.locations.privateConnections.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: private_connections_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: datamigration.projects.locations.privateConnections.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: private_connections_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/privateConnections':
    parameters: *ref_1
    get:
      description: Retrieves a list of private connections in a given project and location.
      operationId: datamigration.projects.locations.privateConnections.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPrivateConnectionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: private_connections
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.privateConnections
    post:
      description: Creates a new private connection in a given project and location.
      operationId: datamigration.projects.locations.privateConnections.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateConnection'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: skipValidation
          schema:
            type: boolean
        - in: query
          name: privateConnectionId
          schema:
            type: string
      x-stackQL-resource: private_connections
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: datamigration.projects.locations.privateConnections.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: private_connections_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single migration job.
      operationId: datamigration.projects.locations.migrationJobs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a single migration job.
      operationId: datamigration.projects.locations.migrationJobs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: migration_jobs
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single migration job.
      operationId: datamigration.projects.locations.migrationJobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:resume':
    parameters: *ref_1
    post:
      description: Resume a migration job that is currently stopped and is resumable (was stopped during CDC phase).
      operationId: datamigration.projects.locations.migrationJobs.resume
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeMigrationJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-method: resume
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: datamigration.projects.locations.migrationJobs.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: migration_jobs_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/migrationJobs':
    parameters: *ref_1
    get:
      description: Lists migration jobs in a given project and location.
      operationId: datamigration.projects.locations.migrationJobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMigrationJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: migration_jobs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.migrationJobs
    post:
      description: Creates a new migration job in a given project and location.
      operationId: datamigration.projects.locations.migrationJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: migrationJobId
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:generateTcpProxyScript':
    parameters: *ref_1
    post:
      description: Generate a TCP Proxy configuration script to configure a cloud-hosted VM running a TCP Proxy.
      operationId: datamigration.projects.locations.migrationJobs.generateTcpProxyScript
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateTcpProxyScriptRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TcpProxyScript'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-method: generate_tcp_proxy_script
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:stop':
    parameters: *ref_1
    post:
      description: Stops a running migration job.
      operationId: datamigration.projects.locations.migrationJobs.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopMigrationJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-method: stop
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:start':
    parameters: *ref_1
    post:
      description: Start an already created migration job.
      operationId: datamigration.projects.locations.migrationJobs.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartMigrationJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-method: start
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:generateSshScript':
    parameters: *ref_1
    post:
      description: Generate a SSH configuration script to configure the reverse SSH connectivity.
      operationId: datamigration.projects.locations.migrationJobs.generateSshScript
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateSshScriptRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SshScript'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-method: generate_ssh_script
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:verify':
    parameters: *ref_1
    post:
      description: 'Verify a migration job, making sure the destination can reach the source and that all configuration and prerequisites are met.'
      operationId: datamigration.projects.locations.migrationJobs.verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyMigrationJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-method: verify
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:restart':
    parameters: *ref_1
    post:
      description: 'Restart a stopped or failed migration job, resetting the destination instance to its original state and starting the migration process from scratch.'
      operationId: datamigration.projects.locations.migrationJobs.restart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestartMigrationJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-method: restart
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: datamigration.projects.locations.migrationJobs.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: datamigration.projects.locations.migrationJobs.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:promote':
    parameters: *ref_1
    post:
      description: 'Promote a migration job, stopping replication to the destination and promoting the destination to be a standalone database.'
      operationId: datamigration.projects.locations.migrationJobs.promote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromoteMigrationJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-method: promote
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:describeConversionWorkspaceRevisions':
    parameters: *ref_1
    get:
      description: Retrieves a list of committed revisions of a specific conversion workspace.
      operationId: datamigration.projects.locations.conversionWorkspaces.describeConversionWorkspaceRevisions
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConversionWorkspaceRevisionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
        - in: query
          name: commitId
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-method: describe_conversion_workspace_revisions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: datamigration.projects.locations.conversionWorkspaces.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: datamigration.projects.locations.conversionWorkspaces.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:rollback':
    parameters: *ref_1
    post:
      description: Rolls back a conversion workspace to the last committed snapshot.
      operationId: datamigration.projects.locations.conversionWorkspaces.rollback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollbackConversionWorkspaceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-method: rollback
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single conversion workspace.
      operationId: datamigration.projects.locations.conversionWorkspaces.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversionWorkspace'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a single conversion workspace.
      operationId: datamigration.projects.locations.conversionWorkspaces.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single conversion workspace.
      operationId: datamigration.projects.locations.conversionWorkspaces.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversionWorkspace'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces':
    parameters: *ref_1
    post:
      description: Creates a new conversion workspace in a given project and location.
      operationId: datamigration.projects.locations.conversionWorkspaces.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversionWorkspace'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: conversionWorkspaceId
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists conversion workspaces in a given project and location.
      operationId: datamigration.projects.locations.conversionWorkspaces.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConversionWorkspacesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.conversionWorkspaces
  '/v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:seed':
    parameters: *ref_1
    post:
      description: Imports a snapshot of the source database into the conversion workspace.
      operationId: datamigration.projects.locations.conversionWorkspaces.seed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeedConversionWorkspaceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-method: seed
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:describeDatabaseEntities':
    parameters: *ref_1
    get:
      description: 'Describes the database entities tree for a specific conversion workspace and a specific tree type. Database entities are not resources like conversion workspaces or mapping rules, and they can''t be created, updated or deleted. Instead, they are simple data objects describing the structure of the client database.'
      operationId: datamigration.projects.locations.conversionWorkspaces.describeDatabaseEntities
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatabaseEntitiesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
        - in: query
          name: tree
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: uncommitted
          schema:
            type: boolean
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: commitId
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: conversion_workspaces
      x-stackQL-method: describe_database_entities
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: datamigration.projects.locations.conversionWorkspaces.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: conversion_workspaces_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:convert':
    parameters: *ref_1
    post:
      description: Creates a draft tree schema for the destination database.
      operationId: datamigration.projects.locations.conversionWorkspaces.convert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConvertConversionWorkspaceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-method: convert
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:apply':
    parameters: *ref_1
    post:
      description: Applies draft tree onto a specific destination database.
      operationId: datamigration.projects.locations.conversionWorkspaces.apply
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyConversionWorkspaceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-method: apply
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:commit':
    parameters: *ref_1
    post:
      description: Marks all the data in the conversion workspace as committed.
      operationId: datamigration.projects.locations.conversionWorkspaces.commit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitConversionWorkspaceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversion_workspaces
      x-stackQL-method: commit
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:searchBackgroundJobs':
    parameters: *ref_1
    get:
      description: 'Searches/lists the background jobs for a specific conversion workspace. The background jobs are not resources like conversion workspaces or mapping rules, and they can''t be created, updated or deleted. Instead, they are a way to expose the data plane jobs log.'
      operationId: datamigration.projects.locations.conversionWorkspaces.searchBackgroundJobs
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchBackgroundJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
        - in: query
          name: completedUntilTime
          schema:
            type: string
        - in: query
          name: returnMostRecentPerJobType
          schema:
            type: boolean
        - in: query
          name: maxSize
          schema:
            type: integer
      x-stackQL-resource: conversion_workspaces
      x-stackQL-method: search_background_jobs
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}/mappingRules:import':
    parameters: *ref_1
    post:
      description: Imports the mapping rules for a given conversion workspace. Supports various formats of external rules files.
      operationId: datamigration.projects.locations.conversionWorkspaces.mappingRules.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportMappingRulesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: mapping_rules
      x-stackQL-method: import
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}/mappingRules/{mappingRulesId}':
    parameters: *ref_1
    get:
      description: Gets the details of a mapping rule.
      operationId: datamigration.projects.locations.conversionWorkspaces.mappingRules.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MappingRule'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
        - in: path
          name: mappingRulesId
          required: true
          schema:
            type: string
      x-stackQL-resource: mapping_rules
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a single mapping rule.
      operationId: datamigration.projects.locations.conversionWorkspaces.mappingRules.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
        - in: path
          name: mappingRulesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: mapping_rules
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}/mappingRules':
    parameters: *ref_1
    post:
      description: Creates a new mapping rule for a given conversion workspace.
      operationId: datamigration.projects.locations.conversionWorkspaces.mappingRules.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MappingRule'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MappingRule'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: mappingRuleId
          schema:
            type: string
      x-stackQL-resource: mapping_rules
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists the mapping rules for a specific conversion workspace.
      operationId: datamigration.projects.locations.conversionWorkspaces.mappingRules.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMappingRulesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversionWorkspacesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: mapping_rules
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.mappingRules
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: datamigration.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: datamigration.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: datamigration.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: datamigration.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: datamigration.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}:fetchStaticIps':
    parameters: *ref_1
    get:
      description: Fetches a set of static IP addresses that need to be allowlisted by the customer when using the static-IP connectivity method.
      operationId: datamigration.projects.locations.fetchStaticIps
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchStaticIpsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: static_ips
      x-stackQL-method: fetch_static_ips
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: datamigration.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
