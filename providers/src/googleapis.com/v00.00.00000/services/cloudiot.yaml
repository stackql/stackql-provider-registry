openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud IoT API
  description: 'Registers and manages IoT (Internet of Things) devices that connect to the Google Cloud Platform. '
  version: v1
  x-discovery-doc-revision: '20221129'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://cloud.google.com/iot
servers:
  - url: https://cloudiot.googleapis.com
components:
  schemas:
    PublicKeyCertificate:
      type: object
      properties:
        x509Details:
          $ref: '#/components/schemas/X509CertificateDetails'
          description: '[Output only] The certificate details. Used only for X.509 certificates.'
        format:
          type: string
          description: The certificate format.
          enumDescriptions:
            - The format has not been specified. This is an invalid default value and must not be used.
            - An X.509v3 certificate ([RFC5280](https://www.ietf.org/rfc/rfc5280.txt)), encoded in base64, and wrapped by `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`.
          enum:
            - UNSPECIFIED_PUBLIC_KEY_CERTIFICATE_FORMAT
            - X509_CERTIFICATE_PEM
        certificate:
          type: string
          description: The certificate data.
      description: A public key certificate format and data.
      id: PublicKeyCertificate
    X509CertificateDetails:
      type: object
      id: X509CertificateDetails
      description: Details of an X.509 certificate. For informational purposes only.
      properties:
        signatureAlgorithm:
          description: The algorithm used to sign the certificate.
          type: string
        subject:
          type: string
          description: The entity the certificate and public key belong to.
        publicKeyType:
          type: string
          description: The type of public key in the certificate.
        issuer:
          type: string
          description: The entity that signed the certificate.
        startTime:
          format: google-datetime
          description: The time the certificate becomes valid.
          type: string
        expiryTime:
          format: google-datetime
          type: string
          description: The time the certificate becomes invalid.
    ListDeviceStatesResponse:
      properties:
        deviceStates:
          type: array
          description: The last few device states. States are listed in descending order of server update time, starting from the most recent one.
          items:
            $ref: '#/components/schemas/DeviceState'
      id: ListDeviceStatesResponse
      description: Response for `ListDeviceStates`.
      type: object
    GatewayConfig:
      id: GatewayConfig
      type: object
      properties:
        lastAccessedGatewayTime:
          description: '[Output only] The most recent time at which the device accessed the gateway specified in `last_accessed_gateway`.'
          type: string
          format: google-datetime
        gatewayType:
          description: Indicates whether the device is a gateway.
          type: string
          enumDescriptions:
            - If unspecified, the device is considered a non-gateway device.
            - The device is a gateway.
            - The device is not a gateway.
          enum:
            - GATEWAY_TYPE_UNSPECIFIED
            - GATEWAY
            - NON_GATEWAY
        gatewayAuthMethod:
          enumDescriptions:
            - No authentication/authorization method specified. No devices are allowed to access the gateway.
            - The device is authenticated through the gateway association only. Device credentials are ignored even if provided.
            - The device is authenticated through its own credentials. Gateway association is not checked.
            - The device is authenticated through both device credentials and gateway association. The device must be bound to the gateway and must provide its own credentials.
          type: string
          enum:
            - GATEWAY_AUTH_METHOD_UNSPECIFIED
            - ASSOCIATION_ONLY
            - DEVICE_AUTH_TOKEN_ONLY
            - ASSOCIATION_AND_DEVICE_AUTH_TOKEN
          description: Indicates how to authorize and/or authenticate devices to access the gateway.
        lastAccessedGatewayId:
          type: string
          description: '[Output only] The ID of the gateway the device accessed most recently.'
      description: Gateway-related configuration and state.
    StateNotificationConfig:
      type: object
      properties:
        pubsubTopicName:
          type: string
          description: A Cloud Pub/Sub topic name. For example, `projects/myProject/topics/deviceEvents`.
      id: StateNotificationConfig
      description: The configuration for notification of new states received from the device.
    BindDeviceToGatewayResponse:
      description: Response for `BindDeviceToGateway`.
      type: object
      id: BindDeviceToGatewayResponse
      properties: {}
    EventNotificationConfig:
      description: The configuration for forwarding telemetry events.
      id: EventNotificationConfig
      properties:
        subfolderMatches:
          description: If the subfolder name matches this string exactly, this configuration will be used. The string must not include the leading '/' character. If empty, all strings are matched. This field is used only for telemetry events; subfolders are not supported for state changes.
          type: string
        pubsubTopicName:
          description: A Cloud Pub/Sub topic name. For example, `projects/myProject/topics/deviceEvents`.
          type: string
      type: object
    TestIamPermissionsResponse:
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          type: array
          items:
            type: string
      type: object
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
    Empty:
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      id: Empty
    RegistryCredential:
      id: RegistryCredential
      description: A server-stored registry credential used to validate device credentials.
      properties:
        publicKeyCertificate:
          description: A public key certificate used to verify the device credentials.
          $ref: '#/components/schemas/PublicKeyCertificate'
      type: object
    Device:
      properties:
        id:
          description: The user-defined device identifier. The device ID must be unique within a device registry.
          type: string
        numId:
          type: string
          format: uint64
          description: '[Output only] A server-defined unique numeric ID for the device. This is a more compact way to identify devices, and it is globally unique.'
        lastConfigAckTime:
          format: google-datetime
          type: string
          description: '[Output only] The last time a cloud-to-device config version acknowledgment was received from the device. This field is only for configurations sent through MQTT.'
        lastEventTime:
          type: string
          format: google-datetime
          description: '[Output only] The last time a telemetry event was received. Timestamps are periodically collected and written to storage; they may be stale by a few minutes.'
        config:
          $ref: '#/components/schemas/DeviceConfig'
          description: The most recent device configuration, which is eventually sent from Cloud IoT Core to the device. If not present on creation, the configuration will be initialized with an empty payload and version value of `1`. To update this field after creation, use the `DeviceManager.ModifyCloudToDeviceConfig` method.
        lastErrorStatus:
          description: '[Output only] The error message of the most recent error, such as a failure to publish to Cloud Pub/Sub. ''last_error_time'' is the timestamp of this field. If no errors have occurred, this field has an empty message and the status code 0 == OK. Otherwise, this field is expected to have a status code other than OK.'
          $ref: '#/components/schemas/Status'
        lastStateTime:
          description: '[Output only] The last time a state event was received. Timestamps are periodically collected and written to storage; they may be stale by a few minutes.'
          format: google-datetime
          type: string
        credentials:
          description: The credentials used to authenticate this device. To allow credential rotation without interruption, multiple device credentials can be bound to this device. No more than 3 credentials can be bound to a single device at a time. When new credentials are added to a device, they are verified against the registry credentials. For details, see the description of the `DeviceRegistry.credentials` field.
          items:
            $ref: '#/components/schemas/DeviceCredential'
          type: array
        lastHeartbeatTime:
          format: google-datetime
          description: '[Output only] The last time an MQTT `PINGREQ` was received. This field applies only to devices connecting through MQTT. MQTT clients usually only send `PINGREQ` messages if the connection is idle, and no other messages have been sent. Timestamps are periodically collected and written to storage; they may be stale by a few minutes.'
          type: string
        blocked:
          description: If a device is blocked, connections or requests from this device will fail. Can be used to temporarily prevent the device from connecting if, for example, the sensor is generating bad data and needs maintenance.
          type: boolean
        logLevel:
          enumDescriptions:
            - No logging specified. If not specified, logging will be disabled.
            - Disables logging.
            - Error events will be logged.
            - Informational events will be logged, such as connections and disconnections.
            - All events will be logged.
          enum:
            - LOG_LEVEL_UNSPECIFIED
            - NONE
            - ERROR
            - INFO
            - DEBUG
          type: string
          description: '**Beta Feature** The logging verbosity for device activity. If unspecified, DeviceRegistry.log_level will be used.'
        lastErrorTime:
          type: string
          format: google-datetime
          description: '[Output only] The time the most recent error occurred, such as a failure to publish to Cloud Pub/Sub. This field is the timestamp of ''last_error_status''.'
        name:
          type: string
          description: The resource path name. For example, `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`. When `name` is populated as a response from the service, it always ends in the device numeric ID.
        state:
          $ref: '#/components/schemas/DeviceState'
          description: '[Output only] The state most recently received from the device. If no state has been reported, this field is not present.'
        metadata:
          additionalProperties:
            type: string
          type: object
          description: The metadata key-value pairs assigned to the device. This metadata is not interpreted or indexed by Cloud IoT Core. It can be used to add contextual information for the device. Keys must conform to the regular expression a-zA-Z+ and be less than 128 bytes in length. Values are free-form strings. Each value must be less than or equal to 32 KB in size. The total size of all keys and values must be less than 256 KB, and the maximum number of key-value pairs is 500.
        gatewayConfig:
          description: Gateway-related configuration and state.
          $ref: '#/components/schemas/GatewayConfig'
        lastConfigSendTime:
          type: string
          description: '[Output only] The last time a cloud-to-device config version was sent to the device.'
          format: google-datetime
      type: object
      description: The device resource.
      id: Device
    Status:
      type: object
      id: Status
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        code:
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
    ListDeviceConfigVersionsResponse:
      id: ListDeviceConfigVersionsResponse
      properties:
        deviceConfigs:
          items:
            $ref: '#/components/schemas/DeviceConfig'
          type: array
          description: The device configuration for the last few versions. Versions are listed in decreasing order, starting from the most recent one.
      description: Response for `ListDeviceConfigVersions`.
      type: object
    ModifyCloudToDeviceConfigRequest:
      properties:
        versionToUpdate:
          type: string
          format: int64
          description: The version number to update. If this value is zero, it will not check the version number of the server and will always update the current version; otherwise, this update will fail if the version number found on the server does not match this version number. This is used to support multiple simultaneous updates without losing data.
        binaryData:
          description: Required. The configuration data for the device.
          type: string
          format: byte
      description: Request for `ModifyCloudToDeviceConfig`.
      id: ModifyCloudToDeviceConfigRequest
      type: object
    Expr:
      id: Expr
      properties:
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        description:
          type: string
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
        location:
          type: string
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
        title:
          type: string
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      type: object
    UnbindDeviceFromGatewayResponse:
      type: object
      description: Response for `UnbindDeviceFromGateway`.
      properties: {}
      id: UnbindDeviceFromGatewayResponse
    Policy:
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      properties:
        bindings:
          type: array
          items:
            $ref: '#/components/schemas/Binding'
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
        etag:
          type: string
          format: byte
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
        version:
          format: int32
          type: integer
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
      id: Policy
      type: object
    ListDeviceRegistriesResponse:
      description: Response for `ListDeviceRegistries`.
      properties:
        deviceRegistries:
          items:
            $ref: '#/components/schemas/DeviceRegistry'
          description: The registries that matched the query.
          type: array
        nextPageToken:
          type: string
          description: If not empty, indicates that there may be more registries that match the request; this value should be passed in a new `ListDeviceRegistriesRequest`.
      type: object
      id: ListDeviceRegistriesResponse
    DeviceRegistry:
      type: object
      id: DeviceRegistry
      properties:
        mqttConfig:
          $ref: '#/components/schemas/MqttConfig'
          description: The MQTT configuration for this device registry.
        eventNotificationConfigs:
          items:
            $ref: '#/components/schemas/EventNotificationConfig'
          type: array
          description: The configuration for notification of telemetry events received from the device. All telemetry events that were successfully published by the device and acknowledged by Cloud IoT Core are guaranteed to be delivered to Cloud Pub/Sub. If multiple configurations match a message, only the first matching configuration is used. If you try to publish a device telemetry event using MQTT without specifying a Cloud Pub/Sub topic for the device's registry, the connection closes automatically. If you try to do so using an HTTP connection, an error is returned. Up to 10 configurations may be provided.
        stateNotificationConfig:
          $ref: '#/components/schemas/StateNotificationConfig'
          description: The configuration for notification of new states received from the device. State updates are guaranteed to be stored in the state history, but notifications to Cloud Pub/Sub are not guaranteed. For example, if permissions are misconfigured or the specified topic doesn't exist, no notification will be published but the state will still be stored in Cloud IoT Core.
        credentials:
          description: 'The credentials used to verify the device credentials. No more than 10 credentials can be bound to a single registry at a time. The verification process occurs at the time of device creation or update. If this field is empty, no verification is performed. Otherwise, the credentials of a newly created device or added credentials of an updated device should be signed with one of these registry credentials. Note, however, that existing devices will never be affected by modifications to this list of credentials: after a device has been successfully created in a registry, it should be able to connect even if its registry credentials are revoked, deleted, or modified.'
          items:
            $ref: '#/components/schemas/RegistryCredential'
          type: array
        id:
          description: The identifier of this device registry. For example, `myRegistry`.
          type: string
        logLevel:
          enum:
            - LOG_LEVEL_UNSPECIFIED
            - NONE
            - ERROR
            - INFO
            - DEBUG
          type: string
          description: '**Beta Feature** The default logging verbosity for activity from devices in this registry. The verbosity level can be overridden by Device.log_level.'
          enumDescriptions:
            - No logging specified. If not specified, logging will be disabled.
            - Disables logging.
            - Error events will be logged.
            - Informational events will be logged, such as connections and disconnections.
            - All events will be logged.
        name:
          type: string
          description: The resource path name. For example, `projects/example-project/locations/us-central1/registries/my-registry`.
        httpConfig:
          description: The DeviceService (HTTP) configuration for this device registry.
          $ref: '#/components/schemas/HttpConfig'
      description: A container for a group of devices.
    UnbindDeviceFromGatewayRequest:
      description: Request for `UnbindDeviceFromGateway`.
      id: UnbindDeviceFromGatewayRequest
      properties:
        gatewayId:
          type: string
          description: Required. The value of `gateway_id` can be either the device numeric ID or the user-defined device identifier.
        deviceId:
          description: Required. The device to disassociate from the specified gateway. The value of `device_id` can be either the device numeric ID or the user-defined device identifier.
          type: string
      type: object
    Binding:
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        members:
          type: array
          items:
            type: string
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. '
        role:
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
        condition:
          description: The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
    GetPolicyOptions:
      id: GetPolicyOptions
      properties:
        requestedPolicyVersion:
          description: Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          format: int32
          type: integer
      description: Encapsulates settings provided to GetIamPolicy.
      type: object
    DeviceConfig:
      type: object
      properties:
        binaryData:
          description: The device configuration data.
          type: string
          format: byte
        deviceAckTime:
          description: '[Output only] The time at which Cloud IoT Core received the acknowledgment from the device, indicating that the device has received this configuration version. If this field is not present, the device has not yet acknowledged that it received this version. Note that when the config was sent to the device, many config versions may have been available in Cloud IoT Core while the device was disconnected, and on connection, only the latest version is sent to the device. Some versions may never be sent to the device, and therefore are never acknowledged. This timestamp is set by Cloud IoT Core.'
          format: google-datetime
          type: string
        version:
          type: string
          format: int64
          description: '[Output only] The version of this update. The version number is assigned by the server, and is always greater than 0 after device creation. The version must be 0 on the `CreateDevice` request if a `config` is specified; the response of `CreateDevice` will always have a value of 1.'
        cloudUpdateTime:
          format: google-datetime
          type: string
          description: '[Output only] The time at which this configuration version was updated in Cloud IoT Core. This timestamp is set by the server.'
      description: The device configuration. Eventually delivered to devices.
      id: DeviceConfig
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          type: array
          description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
      type: object
      id: TestIamPermissionsRequest
    DeviceCredential:
      properties:
        expirationTime:
          type: string
          format: google-datetime
          description: '[Optional] The time at which this credential becomes invalid. This credential will be ignored for new client authentication requests after this timestamp; however, it will not be automatically deleted.'
        publicKey:
          description: A public key used to verify the signature of JSON Web Tokens (JWTs). When adding a new device credential, either via device creation or via modifications, this public key credential may be required to be signed by one of the registry level certificates. More specifically, if the registry contains at least one certificate, any new device credential must be signed by one of the registry certificates. As a result, when the registry contains certificates, only X.509 certificates are accepted as device credentials. However, if the registry does not contain a certificate, self-signed certificates and public keys will be accepted. New device credentials must be different from every registry-level certificate.
          $ref: '#/components/schemas/PublicKeyCredential'
      type: object
      description: A server-stored device credential used for authentication.
      id: DeviceCredential
    SendCommandToDeviceResponse:
      type: object
      id: SendCommandToDeviceResponse
      properties: {}
      description: Response for `SendCommandToDevice`.
    MqttConfig:
      id: MqttConfig
      description: The configuration of MQTT for a device registry.
      properties:
        mqttEnabledState:
          type: string
          enumDescriptions:
            - No MQTT state specified. If not specified, MQTT will be enabled by default.
            - Enables a MQTT connection.
            - Disables a MQTT connection.
          enum:
            - MQTT_STATE_UNSPECIFIED
            - MQTT_ENABLED
            - MQTT_DISABLED
          description: If enabled, allows connections using the MQTT protocol. Otherwise, MQTT connections to this registry will fail.
      type: object
    SetIamPolicyRequest:
      type: object
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
          $ref: '#/components/schemas/Policy'
      id: SetIamPolicyRequest
    DeviceState:
      type: object
      description: The device state, as reported by the device.
      properties:
        updateTime:
          format: google-datetime
          type: string
          description: '[Output only] The time at which this state version was updated in Cloud IoT Core.'
        binaryData:
          format: byte
          type: string
          description: The device state data.
      id: DeviceState
    BindDeviceToGatewayRequest:
      description: Request for `BindDeviceToGateway`.
      properties:
        deviceId:
          type: string
          description: Required. The device to associate with the specified gateway. The value of `device_id` can be either the device numeric ID or the user-defined device identifier.
        gatewayId:
          type: string
          description: Required. The value of `gateway_id` can be either the device numeric ID or the user-defined device identifier.
      type: object
      id: BindDeviceToGatewayRequest
    GetIamPolicyRequest:
      id: GetIamPolicyRequest
      properties:
        options:
          $ref: '#/components/schemas/GetPolicyOptions'
          description: 'OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.'
      description: Request message for `GetIamPolicy` method.
      type: object
    PublicKeyCredential:
      properties:
        format:
          description: The format of the key.
          enumDescriptions:
            - The format has not been specified. This is an invalid default value and must not be used.
            - An RSA public key encoded in base64, and wrapped by `-----BEGIN PUBLIC KEY-----` and `-----END PUBLIC KEY-----`. This can be used to verify `RS256` signatures in JWT tokens ([RFC7518]( https://www.ietf.org/rfc/rfc7518.txt)).
            - As RSA_PEM, but wrapped in an X.509v3 certificate ([RFC5280]( https://www.ietf.org/rfc/rfc5280.txt)), encoded in base64, and wrapped by `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`.
            - Public key for the ECDSA algorithm using P-256 and SHA-256, encoded in base64, and wrapped by `-----BEGIN PUBLIC KEY-----` and `-----END PUBLIC KEY-----`. This can be used to verify JWT tokens with the `ES256` algorithm ([RFC7518](https://www.ietf.org/rfc/rfc7518.txt)). This curve is defined in [OpenSSL](https://www.openssl.org/) as the `prime256v1` curve.
            - As ES256_PEM, but wrapped in an X.509v3 certificate ([RFC5280]( https://www.ietf.org/rfc/rfc5280.txt)), encoded in base64, and wrapped by `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`.
          enum:
            - UNSPECIFIED_PUBLIC_KEY_FORMAT
            - RSA_PEM
            - RSA_X509_PEM
            - ES256_PEM
            - ES256_X509_PEM
          type: string
        key:
          description: The key data.
          type: string
      type: object
      id: PublicKeyCredential
      description: A public key format and data.
    ListDevicesResponse:
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/Device'
          description: The devices that match the request.
        nextPageToken:
          type: string
          description: If not empty, indicates that there may be more devices that match the request; this value should be passed in a new `ListDevicesRequest`.
      type: object
      description: Response for `ListDevices`.
      id: ListDevicesResponse
    HttpConfig:
      id: HttpConfig
      description: The configuration of the HTTP bridge for a device registry.
      type: object
      properties:
        httpEnabledState:
          description: If enabled, allows devices to use DeviceService via the HTTP protocol. Otherwise, any requests to DeviceService will fail for this registry.
          enum:
            - HTTP_STATE_UNSPECIFIED
            - HTTP_ENABLED
            - HTTP_DISABLED
          enumDescriptions:
            - No HTTP state specified. If not specified, DeviceService will be enabled by default.
            - Enables DeviceService (HTTP) service for the registry.
            - Disables DeviceService (HTTP) service for the registry.
          type: string
    SendCommandToDeviceRequest:
      type: object
      id: SendCommandToDeviceRequest
      properties:
        binaryData:
          type: string
          format: byte
          description: Required. The command data to send to the device.
        subfolder:
          description: Optional subfolder for the command. If empty, the command will be delivered to the /devices/{device-id}/commands topic, otherwise it will be delivered to the /devices/{device-id}/commands/{subfolder} topic. Multi-level subfolders are allowed. This field must not have more than 256 characters, and must not contain any MQTT wildcards ("+" or "#") or null characters.
          type: string
      description: Request for `SendCommandToDevice`.
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/cloudiot: Register and manage devices in the Google Cloud IoT service
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    devices:
      id: google.cloudiot.devices
      name: devices
      title: Devices
      methods:
        projects_locations_registries_devices_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}~1devices~1{devicesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_registries_devices_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}~1devices~1{devicesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_registries_devices_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}~1devices~1{devicesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_registries_devices_modifyCloudToDeviceConfig:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}~1devices~1{devicesId}:modifyCloudToDeviceConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_registries_devices_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}~1devices/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: devices
        projects_locations_registries_devices_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}~1devices/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_registries_devices_sendCommandToDevice:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}~1devices~1{devicesId}:sendCommandToDevice/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_registries_groups_devices_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}~1groups~1{groupsId}~1devices/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: devices
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices/methods/projects_locations_registries_devices_get'
          - $ref: '#/components/x-stackQL-resources/devices/methods/projects_locations_registries_groups_devices_list'
          - $ref: '#/components/x-stackQL-resources/devices/methods/projects_locations_registries_devices_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/devices/methods/projects_locations_registries_devices_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/devices/methods/projects_locations_registries_devices_delete'
    states:
      id: google.cloudiot.states
      name: states
      title: States
      methods:
        projects_locations_registries_devices_states_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}~1devices~1{devicesId}~1states/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: deviceStates
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/states/methods/projects_locations_registries_devices_states_list'
        insert: []
        update: []
        delete: []
    config_versions:
      id: google.cloudiot.config_versions
      name: config_versions
      title: Config_versions
      methods:
        projects_locations_registries_devices_configVersions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}~1devices~1{devicesId}~1configVersions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: deviceConfigs
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/config_versions/methods/projects_locations_registries_devices_configVersions_list'
        insert: []
        update: []
        delete: []
    groups_iam_policies:
      id: google.cloudiot.groups_iam_policies
      name: groups_iam_policies
      title: Groups_iam_policies
      methods:
        projects_locations_registries_groups_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}~1groups~1{groupsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_registries_groups_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}~1groups~1{groupsId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_registries_groups_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}~1groups~1{groupsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups_iam_policies/methods/projects_locations_registries_groups_getIamPolicy'
        insert: []
        update: []
        delete: []
    registries:
      id: google.cloudiot.registries
      name: registries
      title: Registries
      methods:
        projects_locations_registries_bindDeviceToGateway:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}:bindDeviceToGateway/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_registries_unbindDeviceFromGateway:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}:unbindDeviceFromGateway/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_registries_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_registries_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_registries_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_registries_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_registries_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: deviceRegistries
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/registries/methods/projects_locations_registries_get'
          - $ref: '#/components/x-stackQL-resources/registries/methods/projects_locations_registries_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/registries/methods/projects_locations_registries_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/registries/methods/projects_locations_registries_delete'
    registries_iam_policies:
      id: google.cloudiot.registries_iam_policies
      name: registries_iam_policies
      title: Registries_iam_policies
      methods:
        projects_locations_registries_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_registries_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_registries_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/registries_iam_policies/methods/projects_locations_registries_getIamPolicy'
        insert: []
        update: []
        delete: []
    groups_iam_bindings:
      id: google.cloudiot.groups_iam_bindings
      name: groups_iam_bindings
      title: groups_iam_bindings
      methods:
        projects_locations_registries_groups_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}~1groups~1{groupsId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/groups_iam_bindings/methods/projects_locations_registries_groups_getIamPolicy'
    registries_iam_bindings:
      id: google.cloudiot.registries_iam_bindings
      name: registries_iam_bindings
      title: registries_iam_bindings
      methods:
        projects_locations_registries_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1registries~1{registriesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/registries_iam_bindings/methods/projects_locations_registries_getIamPolicy'
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/registries/{registriesId}/devices/{devicesId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    patch:
      description: Updates a device.
      operationId: cloudiot.projects.locations.registries.devices.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: exec
    delete:
      description: Deletes a device.
      operationId: cloudiot.projects.locations.registries.devices.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: delete
    get:
      description: Gets details about a device.
      operationId: cloudiot.projects.locations.registries.devices.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: fieldMask
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/registries/{registriesId}/devices/{devicesId}:modifyCloudToDeviceConfig:
    parameters: *ref_1
    post:
      description: Modifies the configuration for the device, which is eventually sent from the Cloud IoT Core servers. Returns the modified configuration version and its metadata.
      operationId: cloudiot.projects.locations.registries.devices.modifyCloudToDeviceConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyCloudToDeviceConfigRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/registries/{registriesId}/devices:
    parameters: *ref_1
    get:
      description: List devices in a device registry.
      operationId: cloudiot.projects.locations.registries.devices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
        - in: query
          name: deviceNumIds
          schema:
            type: string
        - in: query
          name: gatewayListOptions.gatewayType
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: gatewayListOptions.associationsGatewayId
          schema:
            type: string
        - in: query
          name: deviceIds
          schema:
            type: string
        - in: query
          name: fieldMask
          schema:
            type: string
        - in: query
          name: gatewayListOptions.associationsDeviceId
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: select
    post:
      description: Creates a device in a device registry.
      operationId: cloudiot.projects.locations.registries.devices.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/registries/{registriesId}/devices/{devicesId}:sendCommandToDevice:
    parameters: *ref_1
    post:
      description: 'Sends a command to the specified device. In order for a device to be able to receive commands, it must: 1) be connected to Cloud IoT Core using the MQTT protocol, and 2) be subscribed to the group of MQTT topics specified by /devices/{device-id}/commands/#. This subscription will receive commands at the top-level topic /devices/{device-id}/commands as well as commands for subfolders, like /devices/{device-id}/commands/subfolder. Note that subscribing to specific subfolders is not supported. If the command could not be delivered to the device, this method will return an error; in particular, if the device is not subscribed, this method will return FAILED_PRECONDITION. Otherwise, this method will return OK. If the subscription is QoS 1, at least once delivery will be guaranteed; for QoS 0, no acknowledgment will be expected from the device.'
      operationId: cloudiot.projects.locations.registries.devices.sendCommandToDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCommandToDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendCommandToDeviceResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/registries/{registriesId}/devices/{devicesId}/states:
    parameters: *ref_1
    get:
      description: 'Lists the last few versions of the device state in descending order (i.e.: newest first).'
      operationId: cloudiot.projects.locations.registries.devices.states.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeviceStatesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: numStates
          schema:
            type: integer
      x-stackQL-resource: states
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/registries/{registriesId}/devices/{devicesId}/configVersions:
    parameters: *ref_1
    get:
      description: 'Lists the last few versions of the device configuration in descending order (i.e.: newest first).'
      operationId: cloudiot.projects.locations.registries.devices.configVersions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeviceConfigVersionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: numVersions
          schema:
            type: integer
      x-stackQL-resource: config_versions
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/registries/{registriesId}/groups/{groupsId}/devices:
    parameters: *ref_1
    get:
      description: List devices in a device registry.
      operationId: cloudiot.projects.locations.registries.groups.devices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: fieldMask
          schema:
            type: string
        - in: query
          name: deviceIds
          schema:
            type: string
        - in: query
          name: gatewayListOptions.gatewayType
          schema:
            type: string
        - in: query
          name: deviceNumIds
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: gatewayListOptions.associationsGatewayId
          schema:
            type: string
        - in: query
          name: gatewayListOptions.associationsDeviceId
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/registries/{registriesId}/groups/{groupsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.
      operationId: cloudiot.projects.locations.registries.groups.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/registries/{registriesId}/groups/{groupsId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: cloudiot.projects.locations.registries.groups.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/registries/{registriesId}/groups/{groupsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.
      operationId: cloudiot.projects.locations.registries.groups.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/registries/{registriesId}:bindDeviceToGateway:
    parameters: *ref_1
    post:
      description: Associates the device with the gateway.
      operationId: cloudiot.projects.locations.registries.bindDeviceToGateway
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BindDeviceToGatewayRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BindDeviceToGatewayResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: registries
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/registries/{registriesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.
      operationId: cloudiot.projects.locations.registries.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: registries_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/registries/{registriesId}:unbindDeviceFromGateway:
    parameters: *ref_1
    post:
      description: Deletes the association between the device and the gateway.
      operationId: cloudiot.projects.locations.registries.unbindDeviceFromGateway
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnbindDeviceFromGatewayRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnbindDeviceFromGatewayResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: registries
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/registries/{registriesId}:
    parameters: *ref_1
    delete:
      description: Deletes a device registry configuration.
      operationId: cloudiot.projects.locations.registries.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: registries
      x-stackQL-verb: delete
    get:
      description: Gets a device registry configuration.
      operationId: cloudiot.projects.locations.registries.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceRegistry'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: registries
      x-stackQL-verb: select
    patch:
      description: Updates a device registry configuration.
      operationId: cloudiot.projects.locations.registries.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceRegistry'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceRegistry'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: registries
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/registries:
    parameters: *ref_1
    post:
      description: Creates a device registry that contains devices.
      operationId: cloudiot.projects.locations.registries.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceRegistry'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceRegistry'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: registries
      x-stackQL-verb: insert
    get:
      description: Lists device registries.
      operationId: cloudiot.projects.locations.registries.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeviceRegistriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: registries
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/registries/{registriesId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: cloudiot.projects.locations.registries.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: registries_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/registries/{registriesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.
      operationId: cloudiot.projects.locations.registries.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: registriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: registries_iam_policies
      x-stackQL-verb: exec
