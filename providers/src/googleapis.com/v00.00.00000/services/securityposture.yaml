openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Security Posture API
  description: >-
    Defines, assesses, and monitors the overall status of your security in
    Google Cloud. You can use security postures to evaluate your current cloud
    security against defined benchmarks and help maintain the level of security
    that your organization requires. 
  version: v1
  x-discovery-doc-revision: '20250819'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/security-command-center
servers:
  - url: https://securityposture.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    ListPosturesResponse:
      id: ListPosturesResponse
      description: Response message for ListPostures.
      type: object
      properties:
        postures:
          description: The list of Posture resources.
          type: array
          items:
            $ref: '#/components/schemas/Posture'
        nextPageToken:
          description: >-
            A pagination token. To retrieve the next page of results, call the
            method again with this token.
          type: string
        unreachable:
          description: >-
            Locations that were temporarily unavailable and could not be
            reached.
          type: array
          items:
            type: string
    Posture:
      id: Posture
      description: The details of a posture.
      type: object
      properties:
        name:
          description: >-
            Required. Identifier. The name of the posture, in the format
            `organizations/{organization}/locations/global/postures/{posture_id}`.
          type: string
        state:
          description: Required. The state of the posture at the specified `revision_id`.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The posture is deprecated and can no longer be deployed.
            - The posture is a draft and is not ready to deploy.
            - The posture is complete and ready to deploy.
          enum:
            - STATE_UNSPECIFIED
            - DEPRECATED
            - DRAFT
            - ACTIVE
        revisionId:
          description: >-
            Output only. Immutable. An opaque eight-character string that
            identifies the revision of the posture. A posture can have multiple
            revisions; when you deploy a posture, you deploy a specific revision
            of the posture.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time at which the posture was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time at which the posture was last updated.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: Optional. A description of the posture.
          type: string
        policySets:
          description: Required. The PolicySet resources that the posture includes.
          type: array
          items:
            $ref: '#/components/schemas/PolicySet'
        etag:
          description: >-
            Optional. An opaque identifier for the current version of the
            posture at the specified `revision_id`. To prevent concurrent
            updates from overwriting each other, always provide the `etag` when
            you update a posture. You can also provide the `etag` when you
            delete a posture, to help ensure that you're deleting the intended
            version of the posture.
          type: string
        annotations:
          description: >-
            Optional. The user-specified annotations for the posture. For
            details about the values you can use in an annotation, see [AIP-148:
            Standard fields](https://google.aip.dev/148#annotations).
          type: object
          additionalProperties:
            type: string
        reconciling:
          description: Output only. Whether the posture is in the process of being updated.
          readOnly: true
          type: boolean
        categories:
          description: >-
            Output only. The categories that the posture belongs to, as
            determined by the Security Posture API.
          readOnly: true
          type: array
          items:
            type: string
            enumDescriptions:
              - Default value. This value is unused.
              - Artificial intelligence (AI).
              - Amazon Web Services (AWS) policies.
              - Google Cloud policies.
              - Microsoft Azure policies.
            enum:
              - CATEGORY_UNSPECIFIED
              - AI
              - AWS
              - GCP
              - AZURE
    PolicySet:
      id: PolicySet
      description: A group of one or more Policy resources.
      type: object
      properties:
        policySetId:
          description: Required. An identifier for the policy set.
          type: string
        description:
          description: Optional. A description of the policy set.
          type: string
        policies:
          description: >-
            Required. The Policy resources in the policy set. Each policy must
            have a policy_id that's unique within the policy set.
          type: array
          items:
            $ref: '#/components/schemas/Policy'
    Policy:
      id: Policy
      description: The details of a policy, including the constraints that it includes.
      type: object
      properties:
        policyId:
          description: >-
            Required. A user-specified identifier for the policy. In a
            PolicySet, each policy must have a unique identifier.
          type: string
        complianceStandards:
          description: Optional. The compliance standards that the policy helps enforce.
          type: array
          items:
            $ref: '#/components/schemas/ComplianceStandard'
        constraint:
          description: Required. The constraints that the policy includes.
          $ref: '#/components/schemas/Constraint'
        description:
          description: Optional. A description of the policy.
          type: string
    ComplianceStandard:
      id: ComplianceStandard
      description: Information about a compliance standard that the policy helps enforce.
      type: object
      properties:
        standard:
          description: >-
            Optional. The compliance standard that the policy helps enforce. For
            example, `NIST SP 800-53`.
          type: string
        control:
          description: >-
            Optional. The control in the compliance standard that the policy
            helps enforce. For example, `AC-3`.
          type: string
    Constraint:
      id: Constraint
      description: Metadata for a constraint in a Policy.
      type: object
      properties:
        securityHealthAnalyticsModule:
          description: Optional. A built-in detector for Security Health Analytics.
          $ref: '#/components/schemas/SecurityHealthAnalyticsModule'
        securityHealthAnalyticsCustomModule:
          description: Optional. A custom module for Security Health Analytics.
          $ref: '#/components/schemas/SecurityHealthAnalyticsCustomModule'
        orgPolicyConstraint:
          description: Optional. A predefined organization policy constraint.
          $ref: '#/components/schemas/OrgPolicyConstraint'
        orgPolicyConstraintCustom:
          description: Optional. A custom organization policy constraint.
          $ref: '#/components/schemas/OrgPolicyConstraintCustom'
    SecurityHealthAnalyticsModule:
      id: SecurityHealthAnalyticsModule
      description: A built-in detector for Security Health Analytics.
      type: object
      properties:
        moduleName:
          description: >-
            Required. The name of the detector. For example,
            `BIGQUERY_TABLE_CMEK_DISABLED`. This field is also used as the
            finding category for all the asset violation findings that the
            detector returns.
          type: string
        moduleEnablementState:
          description: >-
            Whether the detector is enabled at a specified level of the resource
            hierarchy.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The detector or custom module is enabled.
            - The detector or custom module is disabled.
          enum:
            - ENABLEMENT_STATE_UNSPECIFIED
            - ENABLED
            - DISABLED
    SecurityHealthAnalyticsCustomModule:
      id: SecurityHealthAnalyticsCustomModule
      description: A custom module for Security Health Analytics.
      type: object
      properties:
        id:
          description: >-
            Output only. Immutable. The unique identifier for the custom module.
            Contains 1 to 20 digits.
          readOnly: true
          type: string
        displayName:
          description: >-
            Optional. The display name of the custom module. This value is used
            as the finding category for all the asset violation findings that
            the custom module returns. The display name must contain between 1
            and 128 alphanumeric characters or underscores, and it must start
            with a lowercase letter.
          type: string
        config:
          description: Required. Configuration settings for the custom module.
          $ref: '#/components/schemas/CustomConfig'
        moduleEnablementState:
          description: >-
            Whether the custom module is enabled at a specified level of the
            resource hierarchy.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The detector or custom module is enabled.
            - The detector or custom module is disabled.
          enum:
            - ENABLEMENT_STATE_UNSPECIFIED
            - ENABLED
            - DISABLED
    CustomConfig:
      id: CustomConfig
      description: >-
        A custom module configuration for Security Health Analytics. Use
        `CustomConfig` to create custom detectors that generate custom findings
        for resources that you specify.
      type: object
      properties:
        predicate:
          description: >-
            Required. The Common Expression Language (CEL) expression to
            evaluate. When the expression evaluates to `true` for a resource, a
            finding is generated.
          $ref: '#/components/schemas/Expr'
        customOutput:
          description: >-
            Optional. Definitions of custom source properties to include in
            findings.
          $ref: '#/components/schemas/CustomOutputSpec'
        resourceSelector:
          description: Required. The resource types that the custom module operates on.
          $ref: '#/components/schemas/ResourceSelector'
        severity:
          description: Required. The severity of findings generated by the custom module.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Critical severity.
            - High severity.
            - Medium severity.
            - Low severity.
          enum:
            - SEVERITY_UNSPECIFIED
            - CRITICAL
            - HIGH
            - MEDIUM
            - LOW
        description:
          description: >-
            Optional. A description of the vulnerability or misconfiguration
            that the custom module detects. The description appears in each
            finding. Provide enough information to help an investigator
            understand the finding. The value must be enclosed in quotation
            marks.
          type: string
        recommendation:
          description: >-
            Required. An explanation of the steps that security teams can take
            to resolve the detected issue. The explanation appears in each
            finding.
          type: string
    Expr:
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    CustomOutputSpec:
      id: CustomOutputSpec
      description: Definitions of custom source properties that can appear in findings.
      type: object
      properties:
        properties:
          description: Optional. The custom source properties that can appear in findings.
          type: array
          items:
            $ref: '#/components/schemas/Property'
    Property:
      id: Property
      description: A name-value pair used as a custom source property.
      type: object
      properties:
        name:
          description: Required. The name of the custom source property.
          type: string
        valueExpression:
          description: >-
            Optional. The CEL expression for the value of the custom source
            property. For resource properties, you can return the value of the
            property or a string enclosed in quotation marks.
          $ref: '#/components/schemas/Expr'
    ResourceSelector:
      id: ResourceSelector
      description: A selector for the resource types to run the detector on.
      type: object
      properties:
        resourceTypes:
          description: >-
            Required. The resource types to run the detector on. Each custom
            module can specify up to 5 resource types.
          type: array
          items:
            type: string
    OrgPolicyConstraint:
      id: OrgPolicyConstraint
      description: A predefined organization policy constraint.
      type: object
      properties:
        cannedConstraintId:
          description: Required. A unique identifier for the constraint.
          type: string
        policyRules:
          description: Required. The rules enforced by the constraint.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudSecuritypostureV1PolicyRule'
    GoogleCloudSecuritypostureV1PolicyRule:
      id: GoogleCloudSecuritypostureV1PolicyRule
      description: >-
        A rule that defines the allowed and denied values for an organization
        policy constraint.
      type: object
      properties:
        values:
          description: >-
            The allowed and denied values for a list constraint. Valid only for
            list constraints.
          $ref: >-
            #/components/schemas/GoogleCloudSecuritypostureV1PolicyRuleStringValues
        allowAll:
          description: >-
            Whether to allow any value for a list constraint. Valid only for
            list constraints.
          type: boolean
        denyAll:
          description: >-
            Whether to deny all values for a list constraint. Valid only for
            list constraints.
          type: boolean
        enforce:
          description: >-
            Whether to enforce the constraint. Valid only for boolean
            constraints.
          type: boolean
        condition:
          description: >-
            A condition that determines whether this rule is used to evaluate
            the policy. When set, the google.type.Expr.expression field must
            contain 1 to 10 subexpressions, joined by the `||` or `&&`
            operators. Each subexpression must use the `resource.matchTag()` or
            `resource.matchTagId()` Common Expression Language (CEL) function.
            The `resource.matchTag()` function takes the following arguments: *
            `key_name`: the namespaced name of the tag key, with the
            organization ID and a slash (`/`) as a prefix; for example,
            `123456789012/environment` * `value_name`: the short name of the tag
            value For example: `resource.matchTag('123456789012/environment,
            'prod')` The `resource.matchTagId()` function takes the following
            arguments: * `key_id`: the permanent ID of the tag key; for example,
            `tagKeys/123456789012` * `value_id`: the permanent ID of the tag
            value; for example, `tagValues/567890123456` For example:
            `resource.matchTagId('tagKeys/123456789012',
            'tagValues/567890123456')`
          $ref: '#/components/schemas/Expr'
        parameters:
          description: >-
            Optional. Required for managed constraints if parameters are
            defined. Passes parameter values when policy enforcement is enabled.
            Ensure that parameter value types match those defined in the
            constraint definition. For example: ``` { "allowedLocations":
            ["us-east1", "us-west1"], "allowAll": true } ```
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        resourceTypes:
          description: >-
            Optional. The resource types policies can support, only used for
            managed constraints. Method type is `GOVERN_TAGS`.
          $ref: '#/components/schemas/ResourceTypes'
    GoogleCloudSecuritypostureV1PolicyRuleStringValues:
      id: GoogleCloudSecuritypostureV1PolicyRuleStringValues
      description: >-
        The allowed and denied values for a list constraint. For all
        constraints, these fields can contain literal values. Optionally, you
        can add the `is:` prefix to these values. If the value contains a colon
        (`:`), then the `is:` prefix is required. Some constraints allow you to
        specify a portion of the resource hierarchy, known as a [_hierarchy
        subtree_](https://cloud.google.com/resource-manager/help/organization-policy/hierarchy-subtree),
        that the constraint applies to. To specify a hierarchy subtree, use the
        `under:` prefix, followed by a value with one of these formats: -
        `projects/{project_id}` (for example, `projects/tokyo-rain-123`) -
        `folders/{folder_id}` (for example, `folders/1234567890123`) -
        `organizations/{organization_id}` (for example,
        `organizations/123456789012`) A constraint's `supports_under` field
        indicates whether you can specify a hierarchy subtree. To learn which
        predefined constraints let you specify a hierarchy subtree, see the
        [constraints
        reference](https://cloud.google.com/resource-manager/help/organization-policy/constraints/reference).
      type: object
      properties:
        allowedValues:
          description: The allowed values for the constraint.
          type: array
          items:
            type: string
        deniedValues:
          description: The denied values for the constraint.
          type: array
          items:
            type: string
    ResourceTypes:
      id: ResourceTypes
      description: >-
        Set multiple resource types for one policy, for example: ```
        resourceTypes: included: - compute.googleapis.com/Instance -
        compute.googleapis.com/Disk ``` Constraint definition contains an empty
        resource type in order to support multiple resource types in the policy.
        Only supports managed constraints. Method type is `GOVERN_TAGS`.
      type: object
      properties:
        included:
          description: Optional. The resource types we currently support.
          type: array
          items:
            type: string
    OrgPolicyConstraintCustom:
      id: OrgPolicyConstraintCustom
      description: A custom organization policy constraint.
      type: object
      properties:
        customConstraint:
          description: Required. Metadata for the constraint.
          $ref: '#/components/schemas/GoogleCloudSecuritypostureV1CustomConstraint'
        policyRules:
          description: Required. The rules enforced by the constraint.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudSecuritypostureV1PolicyRule'
    GoogleCloudSecuritypostureV1CustomConstraint:
      id: GoogleCloudSecuritypostureV1CustomConstraint
      description: >-
        A custom, user-defined constraint. You can apply the constraint only to
        the resource types specified in the constraint, and only within the
        organization where the constraint is defined. _When you create a custom
        constraint, it is not enforced automatically._ You must use an
        organization policy to [enforce the
        constraint](https://cloud.google.com/resource-manager/help/organization-policy/constraints/enforce).
      type: object
      properties:
        name:
          description: >-
            Immutable. The name of the constraint, in the format
            `organizations/{organization_id}/customConstraints/custom.{custom_constraint_id}`.
            For example,
            `organizations/123456789012/customConstraints/custom.createOnlyE2TypeVms`.
            Must contain 1 to 62 characters, excluding the prefix
            `organizations/{organization_id}/customConstraints/custom.`.
          type: string
        resourceTypes:
          description: >-
            Immutable. The resource type that the constraint applies to, in the
            format `{canonical_service_name}/{resource_type_name}`. For example,
            `compute.googleapis.com/Instance`.
          type: array
          items:
            type: string
        methodTypes:
          description: The types of operations that the constraint applies to.
          type: array
          items:
            type: string
            enumDescriptions:
              - Default value. This value is unused.
              - Constraint applied when creating the resource.
              - Constraint applied when updating the resource.
              - Not supported. Constraint applied when deleting the resource.
            enum:
              - METHOD_TYPE_UNSPECIFIED
              - CREATE
              - UPDATE
              - DELETE
        condition:
          description: >-
            A Common Expression Language (CEL) condition expression that must
            evaluate to `true` for the constraint to be enforced. The maximum
            length is 1000 characters. For example: +
            `resource.instanceName.matches('(production|test)_(.+_)?[\d]+')`:
            Evaluates to `true` if the resource's `instanceName` attribute
            contains the following: + The prefix `production` or `test` + An
            underscore (`_`) + Optional: One or more characters, followed by an
            underscore (`_`) + One or more digits +
            `resource.management.auto_upgrade == true`: Evaluates to `true` if
            the resource's `management.auto_upgrade` attribute is `true`.
          type: string
        actionType:
          description: Whether to allow or deny the action.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Allow the action.
            - Deny the action.
          enum:
            - ACTION_TYPE_UNSPECIFIED
            - ALLOW
            - DENY
        displayName:
          description: >-
            A display name for the constraint. The maximum length is 200
            characters.
          type: string
        description:
          description: >-
            A description of the constraint. The maximum length is 2000
            characters.
          type: string
        updateTime:
          description: >-
            Output only. The last time at which the constraint was updated or
            created.
          readOnly: true
          type: string
          format: google-datetime
    ListPostureRevisionsResponse:
      id: ListPostureRevisionsResponse
      description: Response message for ListPostureRevisions.
      type: object
      properties:
        revisions:
          description: The list of revisions for the Posture.
          type: array
          items:
            $ref: '#/components/schemas/Posture'
        nextPageToken:
          description: >-
            A pagination token. To retrieve the next page of results, call the
            method again with this token.
          type: string
    ExtractPostureRequest:
      id: ExtractPostureRequest
      description: Request message for ExtractPosture.
      type: object
      properties:
        postureId:
          description: Required. An identifier for the posture.
          type: string
        workload:
          description: >-
            Required. The organization, folder, or project from which policies
            are extracted. Must be within the organization defined in parent.
            Use one of the following formats: *
            `organization/{organization_number}` * `folder/{folder_number}` *
            `project/{project_number}`
          type: string
    ListPostureDeploymentsResponse:
      id: ListPostureDeploymentsResponse
      description: Response message for ListPostureDeployments.
      type: object
      properties:
        postureDeployments:
          description: The list of PostureDeployment resources.
          type: array
          items:
            $ref: '#/components/schemas/PostureDeployment'
        nextPageToken:
          description: >-
            A pagination token. To retrieve the next page of results, call the
            method again with this token.
          type: string
        unreachable:
          description: >-
            Locations that were temporarily unavailable and could not be
            reached.
          type: array
          items:
            type: string
    PostureDeployment:
      id: PostureDeployment
      description: >-
        Details for a Posture deployment on an organization, folder, or project.
        You can deploy at most one posture to each organization, folder, or
        project. The parent resource for a posture deployment is always the
        organization, even if the deployment applies to a folder or project.
      type: object
      properties:
        name:
          description: >-
            Required. Identifier. The name of the posture deployment, in the
            format
            `organizations/{organization}/locations/global/postureDeployments/{deployment_id}`.
          type: string
        targetResource:
          description: >-
            Required. The organization, folder, or project where the posture is
            deployed. Uses one of the following formats: *
            `organizations/{organization_number}` * `folders/{folder_number}` *
            `projects/{project_number}`
          type: string
        state:
          description: Output only. The state of the posture deployment.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The posture deployment is being created.
            - The posture deployment is being deleted.
            - The posture deployment is being updated.
            - The posture deployment is active and in use.
            - The posture deployment could not be created.
            - The posture deployment could not be updated.
            - The posture deployment could not be deleted.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - DELETING
            - UPDATING
            - ACTIVE
            - CREATE_FAILED
            - UPDATE_FAILED
            - DELETE_FAILED
        postureId:
          description: >-
            Required. The posture used in the deployment, in the format
            `organizations/{organization}/locations/global/postures/{posture_id}`.
          type: string
        postureRevisionId:
          description: Required. The revision ID of the posture used in the deployment.
          type: string
        createTime:
          description: Output only. The time at which the posture deployment was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The time at which the posture deployment was last
            updated.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: Optional. A description of the posture deployment.
          type: string
        etag:
          description: >-
            Optional. An opaque identifier for the current version of the
            posture deployment. To prevent concurrent updates from overwriting
            each other, always provide the `etag` when you update a posture
            deployment. You can also provide the `etag` when you delete a
            posture deployment, to help ensure that you're deleting the intended
            posture deployment.
          type: string
        annotations:
          description: >-
            Optional. The user-specified annotations for the posture deployment.
            For details about the values you can use in an annotation, see
            [AIP-148: Standard fields](https://google.aip.dev/148#annotations).
          type: object
          additionalProperties:
            type: string
        reconciling:
          description: >-
            Output only. Whether the posture deployment is in the process of
            being updated.
          readOnly: true
          type: boolean
        desiredPostureId:
          description: >-
            Output only. The posture ID that was specified for the deployment.
            Present only if the posture deployment is in a failed state.
          readOnly: true
          type: string
        desiredPostureRevisionId:
          description: >-
            Output only. The revision ID of the posture that was specified for
            the deployment. Present only if the deployment is in a failed state.
          readOnly: true
          type: string
        failureMessage:
          description: >-
            Output only. A description of why the posture deployment failed.
            Present only if the deployment is in a failed state.
          readOnly: true
          type: string
        categories:
          description: >-
            Output only. The categories that the posture deployment belongs to,
            as determined by the Security Posture API.
          readOnly: true
          type: array
          items:
            type: string
            enumDescriptions:
              - Default value. This value is unused.
              - Artificial intelligence (AI).
              - Amazon Web Services (AWS) policies.
              - Google Cloud policies.
              - Microsoft Azure policies.
            enum:
              - CATEGORY_UNSPECIFIED
              - AI
              - AWS
              - GCP
              - AZURE
    ListPostureTemplatesResponse:
      id: ListPostureTemplatesResponse
      description: Response message for ListPostureTemplates.
      type: object
      properties:
        postureTemplates:
          description: The list of PostureTemplate resources.
          type: array
          items:
            $ref: '#/components/schemas/PostureTemplate'
        nextPageToken:
          description: >-
            A pagination token. To retrieve the next page of results, call the
            method again with this token.
          type: string
    PostureTemplate:
      id: PostureTemplate
      description: The details of a posture template.
      type: object
      properties:
        name:
          description: >-
            Output only. Identifier. The name of the posture template, in the
            format
            `organizations/{organization}/locations/global/postureTemplates/{posture_template}`.
          readOnly: true
          type: string
        revisionId:
          description: >-
            Output only. A string that identifies the revision of the posture
            template.
          readOnly: true
          type: string
        description:
          description: Output only. A description of the posture template.
          readOnly: true
          type: string
        state:
          description: >-
            Output only. The state of the posture template at the specified
            `revision_id`.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The posture template follows the latest controls and standards.
            - >-
              The posture template uses outdated controls and standards. We
              recommend that you use a newer revision of the posture template.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DEPRECATED
        policySets:
          description: >-
            Output only. The PolicySet resources that the posture template
            includes.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PolicySet'
        categories:
          description: >-
            Output only. The categories that the posture template belongs to, as
            determined by the Security Posture API.
          readOnly: true
          type: array
          items:
            type: string
            enumDescriptions:
              - Default value. This value is unused.
              - Artificial intelligence (AI).
              - Amazon Web Services (AWS) policies.
              - Google Cloud policies.
              - Microsoft Azure policies.
            enum:
              - CATEGORY_UNSPECIFIED
              - AI
              - AWS
              - GCP
              - AZURE
    ListReportsResponse:
      id: ListReportsResponse
      description: Response message for ListReports.
      type: object
      properties:
        reports:
          description: The list of Report resources.
          type: array
          items:
            $ref: '#/components/schemas/Report'
        nextPageToken:
          description: >-
            A pagination token. To retrieve the next page of results, call the
            method again with this token.
          type: string
        unreachable:
          description: >-
            Locations that were temporarily unavailable and could not be
            reached.
          type: array
          items:
            type: string
    Report:
      id: Report
      description: Details of a report.
      type: object
      properties:
        iacValidationReport:
          description: Output only. An infrastructure-as-code (IaC) validation report.
          readOnly: true
          $ref: '#/components/schemas/IaCValidationReport'
        name:
          description: >-
            Required. The name of the report, in the format
            `organizations/{organization}/locations/global/reports/{report_id}`.
          type: string
        createTime:
          description: Output only. The time at which the report was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time at which the report was last updated.
          readOnly: true
          type: string
          format: google-datetime
    IaCValidationReport:
      id: IaCValidationReport
      description: Details of an infrastructure-as-code (IaC) validation report.
      type: object
      properties:
        violations:
          description: A list of every Violation found in the IaC configuration.
          type: array
          items:
            $ref: '#/components/schemas/Violation'
        note:
          description: Additional information about the report.
          type: string
    Violation:
      id: Violation
      description: Details of a violation.
      type: object
      properties:
        assetId:
          description: >-
            The full resource name of the asset that caused the violation. For
            details about the format of the full resource name for each asset
            type, see [Resource name
            format](https://cloud.google.com/asset-inventory/docs/resource-name-format).
          type: string
        policyId:
          description: The policy that was violated.
          type: string
        violatedPosture:
          description: >-
            Details for the posture that was violated. This field is present
            only if the violated policy belongs to a deployed posture.
          $ref: '#/components/schemas/PostureDetails'
        severity:
          description: The severity of the violation.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Critical severity.
            - High severity.
            - Medium severity.
            - Low severity.
          enum:
            - SEVERITY_UNSPECIFIED
            - CRITICAL
            - HIGH
            - MEDIUM
            - LOW
        nextSteps:
          description: A description of the steps that you can take to fix the violation.
          type: string
        violatedAsset:
          description: >-
            Details of the Cloud Asset Inventory asset that caused the
            violation.
          $ref: '#/components/schemas/AssetDetails'
        violatedPolicy:
          description: Details of the policy that was violated.
          $ref: '#/components/schemas/PolicyDetails'
    PostureDetails:
      id: PostureDetails
      description: Details of a posture deployment.
      type: object
      properties:
        postureDeployment:
          description: >-
            The name of the posture deployment, in the format
            `organizations/{organization}/locations/global/postureDeployments/{deployment_id}`.
          type: string
        postureDeploymentTargetResource:
          description: >-
            The organization, folder, or project where the posture is deployed.
            Uses one of the following formats: *
            `organizations/{organization_number}` * `folders/{folder_number}` *
            `projects/{project_number}`
          type: string
        posture:
          description: >-
            The posture used in the deployment, in the format
            `organizations/{organization}/locations/global/postures/{posture_id}`.
          type: string
        postureRevisionId:
          description: The revision ID of the posture used in the deployment.
          type: string
        policySet:
          description: >-
            The identifier for the PolicySet that the relevant policy belongs
            to.
          type: string
    AssetDetails:
      id: AssetDetails
      description: Details of a Cloud Asset Inventory asset that caused a violation.
      type: object
      properties:
        asset:
          description: >-
            Information about the Cloud Asset Inventory asset that violated a
            policy. The format of this information can change at any time
            without prior notice. Your application must not depend on this
            information in any way.
          type: string
        assetType:
          description: >-
            The type of Cloud Asset Inventory asset. For a list of asset types,
            see [Supported asset
            types](https://cloud.google.com/asset-inventory/docs/supported-asset-types).
          type: string
    PolicyDetails:
      id: PolicyDetails
      description: Details of a policy that was violated.
      type: object
      properties:
        constraint:
          description: >-
            Information about the constraint that was violated. The format of
            this information can change at any time without prior notice. Your
            application must not depend on this information in any way.
          type: string
        constraintType:
          description: The type of constraint that was violated.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - A custom module for Security Health Analytics.
            - A custom organization policy constraint.
            - A built-in detector for Security Health Analytics.
            - A predefined organization policy constraint.
            - A custom rego policy constraint.
          enum:
            - CONSTRAINT_TYPE_UNSPECIFIED
            - SECURITY_HEALTH_ANALYTICS_CUSTOM_MODULE
            - ORG_POLICY_CUSTOM
            - SECURITY_HEALTH_ANALYTICS_MODULE
            - ORG_POLICY
            - REGO_POLICY
        complianceStandards:
          description: >-
            The compliance standards that the policy maps to. For example,
            `CIS-2.0 1.15`.
          type: array
          items:
            type: string
        description:
          description: A description of the policy.
          type: string
    CreateIaCValidationReportRequest:
      id: CreateIaCValidationReportRequest
      description: Request message for CreateIaCValidationReport.
      type: object
      properties:
        iac:
          description: >-
            Required. The infrastructure-as-code (IaC) configuration to
            validate.
          $ref: '#/components/schemas/IaC'
    IaC:
      id: IaC
      description: Details of an infrastructure-as-code (IaC) configuration.
      type: object
      properties:
        tfPlan:
          description: >-
            Optional. A Terraform plan file, formatted as a stringified JSON
            object. To learn how to generate a Terraform plan file in JSON
            format, see [JSON output
            format](https://developer.hashicorp.com/terraform/internals/json-format)
            in the Terraform documentation.
          type: string
          format: byte
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    OperationMetadata:
      id: OperationMetadata
      description: Metadata for an Operation.
      type: object
      properties:
        createTime:
          description: Output only. The time at which the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time at which the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. The server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. The name of the action executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. The status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Whether a request to cancel the operation has been
            received. For operations that have been cancelled successfully, the
            Operation.error field contains the error code CANCELLED.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. The API version used to start the operation.
          readOnly: true
          type: string
        errorMessage:
          description: >-
            Output only. An error message. Returned when a PostureDeployment
            enters a failure state like UPDATE_FAILED.
          readOnly: true
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    operations:
      id: google.securityposture.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    postures:
      id: google.securityposture.postures
      name: postures
      title: Postures
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1postures/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.postures
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1postures/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1postures~1{posturesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1postures~1{posturesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1postures~1{posturesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        extract:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1postures:extract/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/postures/methods/get'
          - $ref: '#/components/x-stackQL-resources/postures/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/postures/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/postures/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/postures/methods/delete'
    postures_revisions:
      id: google.securityposture.postures_revisions
      name: postures_revisions
      title: Postures_revisions
      methods:
        list_revisions:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1postures~1{posturesId}:listRevisions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.revisions
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/postures_revisions/methods/list_revisions
        insert: []
        update: []
        replace: []
        delete: []
    posture_deployments:
      id: google.securityposture.posture_deployments
      name: posture_deployments
      title: Posture_deployments
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1postureDeployments/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.postureDeployments
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1postureDeployments/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1postureDeployments~1{postureDeploymentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1postureDeployments~1{postureDeploymentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1postureDeployments~1{postureDeploymentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/posture_deployments/methods/get'
          - $ref: '#/components/x-stackQL-resources/posture_deployments/methods/list'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/posture_deployments/methods/create
        update:
          - $ref: '#/components/x-stackQL-resources/posture_deployments/methods/patch'
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/posture_deployments/methods/delete
    posture_templates:
      id: google.securityposture.posture_templates
      name: posture_templates
      title: Posture_templates
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1postureTemplates/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.postureTemplates
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1postureTemplates~1{postureTemplatesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/posture_templates/methods/get'
          - $ref: '#/components/x-stackQL-resources/posture_templates/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    reports:
      id: google.securityposture.reports
      name: reports
      title: Reports
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1reports/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.reports
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1reports~1{reportsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reports/methods/get'
          - $ref: '#/components/x-stackQL-resources/reports/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    reports_ia_cvalidation_report:
      id: google.securityposture.reports_ia_cvalidation_report
      name: reports_ia_cvalidation_report
      title: Reports_ia_cvalidation_report
      methods:
        create_ia_cvalidation_report:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1reports:createIaCValidationReport/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/reports_ia_cvalidation_report/methods/create_ia_cvalidation_report
        update: []
        replace: []
        delete: []
    locations:
      id: google.securityposture.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/organizations/{organizationsId}/locations/{locationsId}/operations:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: securityposture.organizations.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: securityposture.organizations.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: securityposture.organizations.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        `1`, corresponding to `Code.CANCELLED`.
      operationId: securityposture.organizations.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/postures:
    parameters: *ref_1
    get:
      description: >-
        Lists the most recent revisions of all Posture resources in a specified
        organization and location.
      operationId: securityposture.organizations.locations.postures.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPosturesResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Creates a new Posture.
      operationId: securityposture.organizations.locations.postures.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Posture'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: postureId
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/postures/{posturesId}:listRevisions:
    parameters: *ref_1
    get:
      description: Lists all revisions of a single Posture.
      operationId: securityposture.organizations.locations.postures.listRevisions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPostureRevisionsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: posturesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/postures/{posturesId}:
    parameters: *ref_1
    get:
      description: Gets a single revision of a Posture.
      operationId: securityposture.organizations.locations.postures.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posture'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: posturesId
          required: true
          schema:
            type: string
        - in: query
          name: revisionId
          schema:
            type: string
    patch:
      description: >-
        Updates a revision of an existing Posture. If the posture revision that
        you update is currently deployed, then a new revision of the posture is
        created. To prevent concurrent updates from overwriting each other,
        always follow the read-modify-write pattern when you update a posture:
        1. Call GetPosture to get the current version of the posture. 2. Update
        the fields in the posture as needed. 3. Call UpdatePosture to update the
        posture. Ensure that your request includes the `etag` value from the
        GetPosture response. **Important:** If you omit the `etag` when you call
        UpdatePosture, then the updated posture unconditionally overwrites the
        existing posture.
      operationId: securityposture.organizations.locations.postures.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Posture'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: posturesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: revisionId
          schema:
            type: string
    delete:
      description: >-
        Deletes all revisions of a Posture. You can only delete a posture if
        none of its revisions are deployed.
      operationId: securityposture.organizations.locations.postures.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: posturesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/postures:extract:
    parameters: *ref_1
    post:
      description: >-
        Extracts existing policies from an organization, folder, or project, and
        applies them to another organization, folder, or project as a Posture.
        If the other organization, folder, or project already has a posture,
        then the result of the long-running operation is an ALREADY_EXISTS
        error.
      operationId: securityposture.organizations.locations.postures.extract
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractPostureRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/postureDeployments:
    parameters: *ref_1
    get:
      description: Lists every PostureDeployment in a project and location.
      operationId: securityposture.organizations.locations.postureDeployments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPostureDeploymentsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Creates a new PostureDeployment in a given project and location.
      operationId: securityposture.organizations.locations.postureDeployments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostureDeployment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: postureDeploymentId
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/postureDeployments/{postureDeploymentsId}:
    parameters: *ref_1
    get:
      description: Gets details for a PostureDeployment.
      operationId: securityposture.organizations.locations.postureDeployments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostureDeployment'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: postureDeploymentsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates an existing PostureDeployment. To prevent concurrent updates
        from overwriting each other, always follow the read-modify-write pattern
        when you update a posture deployment: 1. Call GetPostureDeployment to
        get the current version of the deployment. 2. Update the fields in the
        deployment as needed. 3. Call UpdatePostureDeployment to update the
        deployment. Ensure that your request includes the `etag` value from the
        GetPostureDeployment response. **Important:** If you omit the `etag`
        when you call UpdatePostureDeployment, then the updated deployment
        unconditionally overwrites the existing deployment.
      operationId: securityposture.organizations.locations.postureDeployments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostureDeployment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: postureDeploymentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a PostureDeployment.
      operationId: securityposture.organizations.locations.postureDeployments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: postureDeploymentsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/postureTemplates:
    parameters: *ref_1
    get:
      description: Lists every PostureTemplate in a given organization and location.
      operationId: securityposture.organizations.locations.postureTemplates.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPostureTemplatesResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/postureTemplates/{postureTemplatesId}:
    parameters: *ref_1
    get:
      description: Gets a single revision of a PostureTemplate.
      operationId: securityposture.organizations.locations.postureTemplates.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostureTemplate'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: postureTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: revisionId
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/reports:
    parameters: *ref_1
    get:
      description: Lists every Report in a given organization and location.
      operationId: securityposture.organizations.locations.reports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/reports/{reportsId}:
    parameters: *ref_1
    get:
      description: Gets details for a Report.
      operationId: securityposture.organizations.locations.reports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/reports:createIaCValidationReport:
    parameters: *ref_1
    post:
      description: >-
        Validates a specified infrastructure-as-code (IaC) configuration, and
        creates a Report with the validation results. Only Terraform
        configurations are supported. Only modified assets are validated.
      operationId: >-
        securityposture.organizations.locations.reports.createIaCValidationReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIaCValidationReportRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: securityposture.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: extraLocationTypes
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: securityposture.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
