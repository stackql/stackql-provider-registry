openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Dataflow API
  description: Manages Google Cloud Dataflow projects on Google Cloud Platform.
  version: v1b3
  x-discovery-doc-revision: '20230812'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/dataflow'
servers:
  - url: 'https://dataflow.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/compute.readonly': View your Google Compute Engine resources
            'https://www.googleapis.com/auth/userinfo.email': See your primary Google Account email address
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
            'https://www.googleapis.com/auth/compute': View and manage your Google Compute Engine resources
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    WorkerThreadScalingReportResponse:
      id: WorkerThreadScalingReportResponse
      type: object
      description: Contains the thread scaling recommendation for a worker from the backend.
      properties:
        recommendedThreadCount:
          format: int32
          description: Recommended number of threads for a worker.
          type: integer
    MetricShortId:
      description: The metric short id is returned to the user alongside an offset into ReportWorkItemStatusRequest
      properties:
        shortId:
          type: string
          format: int64
          description: The service-generated short identifier for the metric.
        metricIndex:
          description: The index of the corresponding metric in the ReportWorkItemStatusRequest. Required.
          format: int32
          type: integer
      id: MetricShortId
      type: object
    DataDiskAssignment:
      description: Data disk assignment for a given VM instance.
      type: object
      properties:
        vmInstance:
          type: string
          description: 'VM instance name the data disks mounted to, for example "myproject-1014-104817-4c2-harness-0".'
        dataDisks:
          items:
            type: string
          type: array
          description: 'Mounted data disks. The order is important a data disk''s 0-based index in this list defines which persistent directory the disk is mounted to, for example the list of { "myproject-1014-104817-4c2-harness-0-disk-0" }, { "myproject-1014-104817-4c2-harness-0-disk-1" }.'
      id: DataDiskAssignment
    FlexTemplateRuntimeEnvironment:
      properties:
        subnetwork:
          type: string
          description: 'Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form "https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK" or "regions/REGION/subnetworks/SUBNETWORK". If the subnetwork is located in a Shared VPC network, you must use the complete URL.'
        sdkContainerImage:
          description: Docker registry location of container image to use for the 'worker harness. Default is the container for the version of the SDK. Note this field is only valid for portable pipelines.
          type: string
        flexrsGoal:
          description: 'Set FlexRS goal for the job. https://cloud.google.com/dataflow/docs/guides/flexrs'
          type: string
          enumDescriptions:
            - Run in the default mode.
            - Optimize for lower execution time.
            - Optimize for lower cost.
          enum:
            - FLEXRS_UNSPECIFIED
            - FLEXRS_SPEED_OPTIMIZED
            - FLEXRS_COST_OPTIMIZED
        kmsKeyName:
          type: string
          description: 'Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/'
        additionalUserLabels:
          description: 'Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1kg", "count": "3" }.'
          additionalProperties:
            type: string
          type: object
        zone:
          type: string
          description: 'The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.'
        saveHeapDumpsToGcsPath:
          type: string
          description: Cloud Storage bucket (directory) to upload heap dumps to. Enabling this field implies that `dump_heap_on_oom` is set to true.
        launcherMachineType:
          description: The machine type to use for launching the job. The default is n1-standard-1.
          type: string
        diskSizeGb:
          description: 'Worker disk size, in gigabytes.'
          type: integer
          format: int32
        workerZone:
          description: 'The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane''s region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.'
          type: string
        enableLauncherVmSerialPortLogging:
          description: If true serial port logging will be enabled for the launcher VM.
          type: boolean
        workerRegion:
          description: 'The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane''s region.'
          type: string
        dumpHeapOnOom:
          type: boolean
          description: 'If true, when processing time is spent almost entirely on garbage collection (GC), saves a heap dump before ending the thread or process. If false, ends the thread or process without saving a heap dump. Does not save a heap dump when the Java Virtual Machine (JVM) has an out of memory error during processing. The location of the heap file is either echoed back to the user, or the user is given the opportunity to download the heap file.'
        numWorkers:
          description: The initial number of Google Compute Engine instances for the job.
          type: integer
          format: int32
        serviceAccountEmail:
          type: string
          description: The email address of the service account to run the job as.
        additionalExperiments:
          type: array
          items:
            type: string
          description: Additional experiment flags for the job.
        stagingLocation:
          description: 'The Cloud Storage path for staging local files. Must be a valid Cloud Storage URL, beginning with `gs://`.'
          type: string
        machineType:
          description: The machine type to use for the job. Defaults to the value from the template if not specified.
          type: string
        maxWorkers:
          format: int32
          description: 'The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.'
          type: integer
        network:
          type: string
          description: 'Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".'
        ipConfiguration:
          type: string
          enumDescriptions:
            - 'The configuration is unknown, or unspecified.'
            - Workers should have public IP addresses.
            - Workers should have private IP addresses.
          description: Configuration for VM IPs.
          enum:
            - WORKER_IP_UNSPECIFIED
            - WORKER_IP_PUBLIC
            - WORKER_IP_PRIVATE
        tempLocation:
          type: string
          description: 'The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.'
        autoscalingAlgorithm:
          enum:
            - AUTOSCALING_ALGORITHM_UNKNOWN
            - AUTOSCALING_ALGORITHM_NONE
            - AUTOSCALING_ALGORITHM_BASIC
          enumDescriptions:
            - 'The algorithm is unknown, or unspecified.'
            - Disable autoscaling.
            - Increase worker count over time to reduce job execution time.
          type: string
          description: The algorithm to use for autoscaling
        enableStreamingEngine:
          description: Whether to enable Streaming Engine for the job.
          type: boolean
      description: The environment values to be set at runtime for flex template.
      type: object
      id: FlexTemplateRuntimeEnvironment
    MemInfo:
      id: MemInfo
      description: Information about the memory usage of a worker or a container within a worker.
      properties:
        currentOoms:
          description: Number of Out of Memory (OOM) events recorded since the previous measurement.
          format: int64
          type: string
        currentRssBytes:
          description: Instantenous memory (RSS) size in bytes.
          type: string
          format: uint64
        currentLimitBytes:
          type: string
          format: uint64
          description: Instantenous memory limit in bytes.
        timestamp:
          format: google-datetime
          type: string
          description: Timestamp of the measurement.
        totalGbMs:
          type: string
          format: uint64
          description: Total memory (RSS) usage since start up in GB * ms.
      type: object
    ShellTask:
      type: object
      description: A task which consists of a shell command for the worker to execute.
      properties:
        command:
          description: The shell command to run.
          type: string
        exitCode:
          type: integer
          description: Exit code for the task.
          format: int32
      id: ShellTask
    WorkItemServiceState:
      id: WorkItemServiceState
      description: The Dataflow service's idea of the current state of a WorkItem being processed by a worker.
      type: object
      properties:
        nextReportIndex:
          description: 'The index value to use for the next report sent by the worker. Note: If the report call fails for whatever reason, the worker should reuse this index for subsequent report attempts.'
          type: string
          format: int64
        splitRequest:
          description: The progress point in the WorkItem where the Dataflow service suggests that the worker truncate the task.
          $ref: '#/components/schemas/ApproximateSplitRequest'
        harnessData:
          description: 'Other data returned by the service, specific to the particular worker harness.'
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
        suggestedStopPoint:
          deprecated: true
          description: DEPRECATED in favor of split_request.
          $ref: '#/components/schemas/ApproximateProgress'
        leaseExpireTime:
          type: string
          description: Time at which the current lease will expire.
          format: google-datetime
        metricShortId:
          description: 'The short ids that workers should use in subsequent metric updates. Workers should strive to use short ids whenever possible, but it is ok to request the short_id again if a worker lost track of it (e.g. if the worker is recovering from a crash). NOTE: it is possible that the response may have short ids for a subset of the metrics.'
          type: array
          items:
            $ref: '#/components/schemas/MetricShortId'
        reportStatusInterval:
          description: New recommended reporting interval.
          type: string
          format: google-duration
        suggestedStopPosition:
          description: 'Obsolete, always empty.'
          deprecated: true
          $ref: '#/components/schemas/Position'
        hotKeyDetection:
          description: 'A hot key is a symptom of poor data distribution in which there are enough elements mapped to a single key to impact pipeline performance. When present, this field includes metadata associated with any hot key.'
          $ref: '#/components/schemas/HotKeyDetection'
        completeWorkStatus:
          description: 'If set, a request to complete the work item with the given status. This will not be set to OK, unless supported by the specific kind of WorkItem. It can be used for the backend to indicate a WorkItem must terminate, e.g., for aborting work.'
          $ref: '#/components/schemas/Status'
    LaunchTemplateParameters:
      id: LaunchTemplateParameters
      description: 'Parameters to provide to the template being launched. Note that the [metadata in the pipeline code] (https://cloud.google.com/dataflow/docs/guides/templates/creating-templates#metadata) determines which runtime parameters are valid.'
      type: object
      properties:
        environment:
          $ref: '#/components/schemas/RuntimeEnvironment'
          description: The runtime environment for the job.
        transformNameMapping:
          description: Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job.
          additionalProperties:
            type: string
          type: object
        jobName:
          type: string
          description: 'Required. The job name to use for the created job. The name must match the regular expression `[a-z]([-a-z0-9]{0,1022}[a-z0-9])?`'
        update:
          type: boolean
          description: 'If set, replace the existing pipeline with the name specified by jobName with this pipeline, preserving state.'
        parameters:
          additionalProperties:
            type: string
          type: object
          description: The runtime parameters to pass to the job.
    WorkerShutdownNoticeResponse:
      type: object
      properties: {}
      description: Service-side response to WorkerMessage issuing shutdown notice.
      id: WorkerShutdownNoticeResponse
    JobMetadata:
      description: Metadata available primarily for filtering jobs. Will be included in the ListJob response and Job SUMMARY view.
      properties:
        pubsubDetails:
          items:
            $ref: '#/components/schemas/PubSubIODetails'
          type: array
          description: Identification of a Pub/Sub source used in the Dataflow job.
        sdkVersion:
          description: The SDK version used to run the job.
          $ref: '#/components/schemas/SdkVersion'
        datastoreDetails:
          items:
            $ref: '#/components/schemas/DatastoreIODetails'
          description: Identification of a Datastore source used in the Dataflow job.
          type: array
        bigTableDetails:
          description: Identification of a Cloud Bigtable source used in the Dataflow job.
          items:
            $ref: '#/components/schemas/BigTableIODetails'
          type: array
        fileDetails:
          items:
            $ref: '#/components/schemas/FileIODetails'
          description: Identification of a File source used in the Dataflow job.
          type: array
        userDisplayProperties:
          type: object
          additionalProperties:
            type: string
          description: List of display properties to help UI filter jobs.
        spannerDetails:
          description: Identification of a Spanner source used in the Dataflow job.
          items:
            $ref: '#/components/schemas/SpannerIODetails'
          type: array
        bigqueryDetails:
          items:
            $ref: '#/components/schemas/BigQueryIODetails'
          description: Identification of a BigQuery source used in the Dataflow job.
          type: array
      type: object
      id: JobMetadata
    Histogram:
      type: object
      properties:
        bucketCounts:
          items:
            type: string
            format: int64
          description: 'Counts of values in each bucket. For efficiency, prefix and trailing buckets with count = 0 are elided. Buckets can store the full range of values of an unsigned long, with ULLONG_MAX falling into the 59th bucket with range [1e19, 2e19).'
          type: array
        firstBucketOffset:
          format: int32
          description: 'Starting index of first stored bucket. The non-inclusive upper-bound of the ith bucket is given by: pow(10,(i-first_bucket_offset)/3) * (1,2,5)[(i-first_bucket_offset)%3]'
          type: integer
      description: 'Histogram of value counts for a distribution. Buckets have an inclusive lower bound and exclusive upper bound and use "1,2,5 bucketing": The first bucket range is from [0,1) and all subsequent bucket boundaries are powers of ten multiplied by 1, 2, or 5. Thus, bucket boundaries are 0, 1, 2, 5, 10, 20, 50, 100, 200, 500, 1000, ... Negative values are not supported.'
      id: Histogram
    MapTask:
      id: MapTask
      type: object
      description: 'MapTask consists of an ordered set of instructions, each of which describes one particular low-level operation for the worker to perform in order to accomplish the MapTask''s WorkItem. Each instruction must appear in the list before any instructions which depends on its output.'
      properties:
        systemName:
          description: System-defined name of this MapTask. Unique across the workflow.
          type: string
        instructions:
          description: The instructions in the MapTask.
          items:
            $ref: '#/components/schemas/ParallelInstruction'
          type: array
        counterPrefix:
          description: Counter prefix that can be used to prefix counters. Not currently used in Dataflow.
          type: string
        stageName:
          type: string
          description: System-defined name of the stage containing this MapTask. Unique across the workflow.
    GetDebugConfigResponse:
      description: Response to a get debug configuration request.
      type: object
      id: GetDebugConfigResponse
      properties:
        config:
          description: The encoded debug configuration for the requested component.
          type: string
    GetTemplateResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
          description: The status of the get template request. Any problems with the request will be indicated in the error_details.
        runtimeMetadata:
          $ref: '#/components/schemas/RuntimeMetadata'
          description: Describes the runtime metadata with SDKInfo and available parameters.
        templateType:
          enum:
            - UNKNOWN
            - LEGACY
            - FLEX
          type: string
          enumDescriptions:
            - Unknown Template Type.
            - Legacy Template.
            - Flex Template.
          description: Template Type.
        metadata:
          $ref: '#/components/schemas/TemplateMetadata'
          description: 'The template metadata describing the template name, available parameters, etc.'
      description: The response to a GetTemplate request.
      id: GetTemplateResponse
    SourceMetadata:
      type: object
      description: 'Metadata about a Source useful for automatically optimizing and tuning the pipeline, etc.'
      properties:
        estimatedSizeBytes:
          type: string
          format: int64
          description: 'An estimate of the total size (in bytes) of the data that would be read from this source. This estimate is in terms of external storage size, before any decompression or other processing done by the reader.'
        infinite:
          description: Specifies that the size of this source is known to be infinite (this is a streaming source).
          type: boolean
        producesSortedKeys:
          description: Whether this source is known to produce key/value pairs with the (encoded) keys in lexicographically sorted order.
          type: boolean
      id: SourceMetadata
    SDKInfo:
      properties:
        language:
          type: string
          enum:
            - UNKNOWN
            - JAVA
            - PYTHON
            - GO
          enumDescriptions:
            - UNKNOWN Language.
            - Java.
            - Python.
            - Go.
          description: Required. The SDK Language.
        version:
          type: string
          description: Optional. The SDK version.
      id: SDKInfo
      description: SDK Information.
      type: object
    WorkerMessageCode:
      properties:
        code:
          description: 'The code is a string intended for consumption by a machine that identifies the type of message being sent. Examples: 1. "HARNESS_STARTED" might be used to indicate the worker harness has started. 2. "GCS_DOWNLOAD_ERROR" might be used to indicate an error downloading a Cloud Storage file as part of the boot process of one of the worker containers. This is a string and not an enum to make it easy to add new codes without waiting for an API change.'
          type: string
        parameters:
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
          description: 'Parameters contains specific information about the code. This is a struct to allow parameters of different types. Examples: 1. For a "HARNESS_STARTED" message parameters might provide the name of the worker and additional data like timing information. 2. For a "GCS_DOWNLOAD_ERROR" parameters might contain fields listing the Cloud Storage objects being downloaded and fields containing errors. In general complex data structures should be avoided. If a worker needs to send a specific and complicated data structure then please consider defining a new proto and adding it to the data oneof in WorkerMessageResponse. Conventions: Parameters should only be used for information that isn''t typically passed as a label. hostname and other worker identifiers should almost always be passed as labels since they will be included on most messages.'
      type: object
      description: 'A message code is used to report status and error messages to the service. The message codes are intended to be machine readable. The service will take care of translating these into user understandable messages if necessary. Example use cases: 1. Worker processes reporting successful startup. 2. Worker processes reporting specific errors (e.g. package staging failure).'
      id: WorkerMessageCode
    LaunchTemplateResponse:
      properties:
        job:
          description: 'The job that was launched, if the request was not a dry run and the job was successfully launched.'
          $ref: '#/components/schemas/Job'
      id: LaunchTemplateResponse
      description: Response to the request to launch a template.
      type: object
    StreamingSetupTask:
      type: object
      id: StreamingSetupTask
      properties:
        drain:
          type: boolean
          description: The user has requested drain.
        receiveWorkPort:
          type: integer
          description: The TCP port on which the worker should listen for messages from other streaming computation workers.
          format: int32
        streamingComputationTopology:
          $ref: '#/components/schemas/TopologyConfig'
          description: The global topology of the streaming Dataflow job.
        workerHarnessPort:
          description: The TCP port used by the worker to communicate with the Dataflow worker harness.
          format: int32
          type: integer
        snapshotConfig:
          $ref: '#/components/schemas/StreamingApplianceSnapshotConfig'
          description: Configures streaming appliance snapshot.
      description: A task which initializes part of a streaming Dataflow job.
    SendDebugCaptureRequest:
      type: object
      description: 'Request to send encoded debug information. Next ID: 8'
      properties:
        workerId:
          description: 'The worker id, i.e., VM hostname.'
          type: string
        data:
          description: The encoded debug information.
          type: string
        location:
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.'
          type: string
        dataFormat:
          enum:
            - DATA_FORMAT_UNSPECIFIED
            - RAW
            - JSON
            - ZLIB
            - BROTLI
          type: string
          description: Format for the data field above (id=5).
          enumDescriptions:
            - 'Format unspecified, parsing is determined based upon page type and legacy encoding. (go/protodosdonts#do-include-an-unspecified-value-in-an-enum)'
            - Raw HTML string.
            - JSON-encoded string.
            - Websafe encoded zlib-compressed string.
            - Websafe encoded brotli-compressed string.
        componentId:
          description: The internal component id for which debug information is sent.
          type: string
      id: SendDebugCaptureRequest
    SourceSplitRequest:
      properties:
        options:
          description: Hints for tuning the splitting process.
          $ref: '#/components/schemas/SourceSplitOptions'
        source:
          $ref: '#/components/schemas/Source'
          description: Specification of the source to be split.
      description: 'Represents the operation to split a high-level Source specification into bundles (parts for parallel processing). At a high level, splitting of a source into bundles happens as follows: SourceSplitRequest is applied to the source. If it returns SOURCE_SPLIT_OUTCOME_USE_CURRENT, no further splitting happens and the source is used "as is". Otherwise, splitting is applied recursively to each produced DerivedSource. As an optimization, for any Source, if its does_not_need_splitting is true, the framework assumes that splitting this source would return SOURCE_SPLIT_OUTCOME_USE_CURRENT, and doesn''t initiate a SourceSplitRequest. This applies both to the initial source being split and to bundles produced from it.'
      id: SourceSplitRequest
      type: object
    SendDebugCaptureResponse:
      description: Response to a send capture request. nothing
      id: SendDebugCaptureResponse
      properties: {}
      type: object
    ComputationTopology:
      id: ComputationTopology
      properties:
        stateFamilies:
          items:
            $ref: '#/components/schemas/StateFamilyConfig'
          type: array
          description: The state family values.
        outputs:
          items:
            $ref: '#/components/schemas/StreamLocation'
          description: The outputs from the computation.
          type: array
        systemStageName:
          type: string
          description: The system stage name.
        computationId:
          type: string
          description: The ID of the computation.
        keyRanges:
          type: array
          description: The key ranges processed by the computation.
          items:
            $ref: '#/components/schemas/KeyRangeLocation'
        inputs:
          items:
            $ref: '#/components/schemas/StreamLocation'
          type: array
          description: The inputs to the computation.
      type: object
      description: All configuration data for a particular Computation.
    ParameterMetadataEnumOption:
      description: ParameterMetadataEnumOption specifies the option shown in the enum form.
      type: object
      id: ParameterMetadataEnumOption
      properties:
        value:
          description: Required. The value of the enum option.
          type: string
        label:
          description: Optional. The label to display for the enum option.
          type: string
        description:
          type: string
          description: Optional. The description to display for the enum option.
    ReportedParallelism:
      description: 'Represents the level of parallelism in a WorkItem''s input, reported by the worker.'
      type: object
      id: ReportedParallelism
      properties:
        isInfinite:
          description: 'Specifies whether the parallelism is infinite. If true, "value" is ignored. Infinite parallelism means the service will assume that the work item can always be split into more non-empty work items by dynamic splitting. This is a work-around for lack of support for infinity by the current JSON-based Java RPC stack.'
          type: boolean
        value:
          format: double
          description: Specifies the level of parallelism in case it is finite.
          type: number
    SourceOperationRequest:
      id: SourceOperationRequest
      properties:
        stageName:
          description: System-defined name of the stage containing the source operation. Unique across the workflow.
          type: string
        getMetadata:
          $ref: '#/components/schemas/SourceGetMetadataRequest'
          description: Information about a request to get metadata about a source.
        split:
          description: Information about a request to split a source.
          $ref: '#/components/schemas/SourceSplitRequest'
        systemName:
          description: System-defined name of the Read instruction for this source. Unique across the workflow.
          type: string
        name:
          description: User-provided name of the Read instruction for this source.
          type: string
        originalName:
          type: string
          description: System-defined name for the Read instruction for this source in the original workflow graph.
      type: object
      description: A work item that represents the different operations that can be performed on a user-defined Source specification.
    StageSummary:
      type: object
      properties:
        endTime:
          format: google-datetime
          description: 'End time of this stage. If the work item is completed, this is the actual end time of the stage. Otherwise, it is the predicted end time.'
          type: string
        state:
          enumDescriptions:
            - The component state is unknown or unspecified.
            - The component is not yet running.
            - The component is currently running.
            - The component succeeded.
            - The component failed.
            - Execution of the component was cancelled.
          type: string
          enum:
            - EXECUTION_STATE_UNKNOWN
            - EXECUTION_STATE_NOT_STARTED
            - EXECUTION_STATE_RUNNING
            - EXECUTION_STATE_SUCCEEDED
            - EXECUTION_STATE_FAILED
            - EXECUTION_STATE_CANCELLED
          description: State of this stage.
        stragglerSummary:
          description: Straggler summary for this stage.
          $ref: '#/components/schemas/StragglerSummary'
        metrics:
          items:
            $ref: '#/components/schemas/MetricUpdate'
          description: Metrics for this stage.
          type: array
        progress:
          description: Progress for this stage. Only applicable to Batch jobs.
          $ref: '#/components/schemas/ProgressTimeseries'
        startTime:
          description: Start time of this stage.
          type: string
          format: google-datetime
        stageId:
          type: string
          description: ID of this stage
      id: StageSummary
      description: Information about a particular execution stage of a job.
    SourceOperationResponse:
      properties:
        split:
          $ref: '#/components/schemas/SourceSplitResponse'
          description: A response to a request to split a source.
        getMetadata:
          $ref: '#/components/schemas/SourceGetMetadataResponse'
          description: A response to a request to get metadata about a source.
      description: 'The result of a SourceOperationRequest, specified in ReportWorkItemStatusRequest.source_operation when the work item is completed.'
      id: SourceOperationResponse
      type: object
    Source:
      properties:
        doesNotNeedSplitting:
          type: boolean
          description: 'Setting this value to true hints to the framework that the source doesn''t need splitting, and using SourceSplitRequest on it would yield SOURCE_SPLIT_OUTCOME_USE_CURRENT. E.g. a file splitter may set this to true when splitting a single file into a set of byte ranges of appropriate size, and set this to false when splitting a filepattern into individual files. However, for efficiency, a file splitter may decide to produce file subranges directly from the filepattern to avoid a splitting round-trip. See SourceSplitRequest for an overview of the splitting process. This field is meaningful only in the Source objects populated by the user (e.g. when filling in a DerivedSource). Source objects supplied by the framework to the user don''t have this field populated.'
        baseSpecs:
          description: 'While splitting, sources may specify the produced bundles as differences against another source, in order to save backend-side memory and allow bigger jobs. For details, see SourceSplitRequest. To support this use case, the full set of parameters of the source is logically obtained by taking the latest explicitly specified value of each parameter in the order: base_specs (later items win), spec (overrides anything in base_specs).'
          type: array
          items:
            additionalProperties:
              description: Properties of the object.
              type: any
            type: object
        codec:
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
          description: The codec to use to decode data read from the source.
        metadata:
          description: 'Optionally, metadata for this source can be supplied right away, avoiding a SourceGetMetadataOperation roundtrip (see SourceOperationRequest). This field is meaningful only in the Source objects populated by the user (e.g. when filling in a DerivedSource). Source objects supplied by the framework to the user don''t have this field populated.'
          $ref: '#/components/schemas/SourceMetadata'
        spec:
          additionalProperties:
            type: any
            description: Properties of the object.
          description: 'The source to read from, plus its parameters.'
          type: object
      id: Source
      type: object
      description: A source that records can be read and decoded from.
    GetDebugConfigRequest:
      type: object
      properties:
        location:
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.'
          type: string
        componentId:
          description: The internal component id for which debug configuration is requested.
          type: string
        workerId:
          type: string
          description: 'The worker id, i.e., VM hostname.'
      id: GetDebugConfigRequest
      description: Request to get updated debug configuration for component.
    CounterStructuredName:
      id: CounterStructuredName
      description: Identifies a counter within a per-job namespace. Counters whose structured names are the same get merged into a single value for the job.
      properties:
        portion:
          description: 'Portion of this counter, either key or value.'
          enumDescriptions:
            - Counter portion has not been set.
            - Counter reports a key.
            - Counter reports a value.
          enum:
            - ALL
            - KEY
            - VALUE
          type: string
        inputIndex:
          format: int32
          type: integer
          description: 'Index of an input collection that''s being read from/written to as a side input. The index identifies a step''s side inputs starting by 1 (e.g. the first side input has input_index 1, the third has input_index 3). Side inputs are identified by a pair of (original_step_name, input_index). This field helps uniquely identify them.'
        name:
          type: string
          description: 'Counter name. Not necessarily globally-unique, but unique within the context of the other fields. Required.'
        componentStepName:
          description: Name of the optimized step being executed by the workers.
          type: string
        origin:
          enum:
            - SYSTEM
            - USER
          description: One of the standard Origins defined above.
          enumDescriptions:
            - Counter was created by the Dataflow system.
            - Counter was created by the user.
          type: string
        executionStepName:
          description: Name of the stage. An execution step contains multiple component steps.
          type: string
        originalStepName:
          type: string
          description: 'System generated name of the original step in the user''s graph, before optimization.'
        originalRequestingStepName:
          type: string
          description: 'The step name requesting an operation, such as GBK. I.e. the ParDo causing a read/write from shuffle to occur, or a read from side inputs.'
        originNamespace:
          description: A string containing a more specific namespace of the counter's origin.
          type: string
        workerId:
          description: ID of a particular worker.
          type: string
      type: object
    IntegerList:
      id: IntegerList
      type: object
      properties:
        elements:
          description: Elements of the list.
          type: array
          items:
            $ref: '#/components/schemas/SplitInt64'
      description: A metric value representing a list of integers.
    FloatingPointList:
      properties:
        elements:
          items:
            format: double
            type: number
          type: array
          description: Elements of the list.
      id: FloatingPointList
      type: object
      description: A metric value representing a list of floating point numbers.
    Step:
      type: object
      id: Step
      properties:
        kind:
          type: string
          description: The kind of step in the Cloud Dataflow job.
        properties:
          description: Named properties associated with the step. Each kind of predefined step has its own required set of properties. Must be provided on Create. Only retrieved with JOB_VIEW_ALL.
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
        name:
          description: The name that identifies the step. This must be unique for each step with respect to all other steps in the Cloud Dataflow job.
          type: string
      description: 'Defines a particular step within a Cloud Dataflow job. A job consists of multiple steps, each of which performs some specific operation as part of the overall job. Data is typically passed from one step to another as part of the job. **Note:** The properties of this object are not stable and might change. Here''s an example of a sequence of steps which together implement a Map-Reduce job: * Read a collection of data from some source, parsing the collection''s elements. * Validate the elements. * Apply a user-defined function to map each element to some value and extract an element-specific key value. * Group elements with the same key into a single element with that key, transforming a multiply-keyed collection into a uniquely-keyed collection. * Write the elements out to some data sink. Note that the Cloud Dataflow service may be used to run many different types of jobs, not just Map-Reduce.'
    LeaseWorkItemRequest:
      type: object
      description: Request to lease WorkItems.
      properties:
        workerCapabilities:
          description: Worker capabilities. WorkItems might be limited to workers with specific capabilities.
          items:
            type: string
          type: array
        location:
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the WorkItem''s job.'
          type: string
        currentWorkerTime:
          type: string
          description: The current timestamp at the worker.
          format: google-datetime
        requestedLeaseDuration:
          description: The initial lease period.
          format: google-duration
          type: string
        workItemTypes:
          description: Filter for WorkItem type.
          type: array
          items:
            type: string
        workerId:
          type: string
          description: Identifies the worker leasing work -- typically the ID of the virtual machine running the worker.
        unifiedWorkerRequest:
          type: object
          description: Untranslated bag-of-bytes WorkRequest from UnifiedWorker.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
      id: LeaseWorkItemRequest
    LaunchFlexTemplateParameter:
      id: LaunchFlexTemplateParameter
      properties:
        update:
          description: 'Set this to true if you are sending a request to update a running streaming job. When set, the job name should be the same as the running job.'
          type: boolean
        containerSpecGcsPath:
          type: string
          description: Cloud Storage path to a file with json serialized ContainerSpec as content.
        containerSpec:
          description: Spec about the container image to launch.
          $ref: '#/components/schemas/ContainerSpec'
        parameters:
          description: 'The parameters for FlexTemplate. Ex. {"num_workers":"5"}'
          additionalProperties:
            type: string
          type: object
        jobName:
          type: string
          description: 'Required. The job name to use for the created job. For update job request, job name should be same as the existing running job.'
        transformNameMappings:
          description: 'Use this to pass transform_name_mappings for streaming update jobs. Ex:{"oldTransformName":"newTransformName",...}'''
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/FlexTemplateRuntimeEnvironment'
          description: The runtime environment for the FlexTemplate job
        launchOptions:
          additionalProperties:
            type: string
          type: object
          description: Launch options for this flex template job. This is a common set of options across languages and templates. This should not be used to pass job parameters.
      type: object
      description: Launch FlexTemplate Parameter.
    ReportWorkItemStatusResponse:
      id: ReportWorkItemStatusResponse
      description: Response from a request to report the status of WorkItems.
      type: object
      properties:
        workItemServiceStates:
          description: 'A set of messages indicating the service-side state for each WorkItem whose status was reported, in the same order as the WorkItemStatus messages in the ReportWorkItemStatusRequest which resulting in this response.'
          type: array
          items:
            $ref: '#/components/schemas/WorkItemServiceState'
        unifiedWorkerResponse:
          description: Untranslated bag-of-bytes WorkProgressUpdateResponse for UnifiedWorker.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    SendWorkerMessagesResponse:
      description: The response to the worker messages.
      id: SendWorkerMessagesResponse
      properties:
        workerMessageResponses:
          description: The servers response to the worker messages.
          items:
            $ref: '#/components/schemas/WorkerMessageResponse'
          type: array
      type: object
    InstructionInput:
      id: InstructionInput
      properties:
        outputNum:
          format: int32
          type: integer
          description: The output index (origin zero) within the producer.
        producerInstructionIndex:
          type: integer
          description: The index (origin zero) of the parallel instruction that produces the output to be consumed by this input. This index is relative to the list of instructions in this input's instruction's containing MapTask.
          format: int32
      type: object
      description: 'An input of an instruction, as a reference to an output of a producer instruction.'
    IntegerMean:
      type: object
      description: A representation of an integer mean metric contribution.
      properties:
        sum:
          $ref: '#/components/schemas/SplitInt64'
          description: The sum of all values being aggregated.
        count:
          $ref: '#/components/schemas/SplitInt64'
          description: The number of values being aggregated.
      id: IntegerMean
    PubsubSnapshotMetadata:
      type: object
      properties:
        topicName:
          description: The name of the Pubsub topic.
          type: string
        expireTime:
          type: string
          description: The expire time of the Pubsub snapshot.
          format: google-datetime
        snapshotName:
          type: string
          description: The name of the Pubsub snapshot.
      description: Represents a Pubsub snapshot.
      id: PubsubSnapshotMetadata
    DisplayData:
      id: DisplayData
      description: Data provided with a pipeline or transform to provide descriptive info.
      type: object
      properties:
        strValue:
          description: Contains value if the data is of string type.
          type: string
        url:
          type: string
          description: An optional full URL.
        boolValue:
          description: Contains value if the data is of a boolean type.
          type: boolean
        timestampValue:
          description: Contains value if the data is of timestamp type.
          type: string
          format: google-datetime
        namespace:
          type: string
          description: The namespace for the key. This is usually a class name or programming language namespace (i.e. python module) which defines the display data. This allows a dax monitoring system to specially handle the data and perform custom rendering.
        javaClassValue:
          type: string
          description: Contains value if the data is of java class type.
        durationValue:
          format: google-duration
          type: string
          description: Contains value if the data is of duration type.
        shortStrValue:
          description: A possible additional shorter value to display. For example a java_class_name_value of com.mypackage.MyDoFn will be stored with MyDoFn as the short_str_value and com.mypackage.MyDoFn as the java_class_name value. short_str_value can be displayed and java_class_name_value will be displayed as a tooltip.
          type: string
        floatValue:
          type: number
          format: float
          description: Contains value if the data is of float type.
        label:
          description: An optional label to display in a dax UI for the element.
          type: string
        int64Value:
          type: string
          format: int64
          description: Contains value if the data is of int64 type.
        key:
          description: The key identifying the display data. This is intended to be used as a label for the display data when viewed in a dax monitoring system.
          type: string
    NameAndKind:
      description: Basic metadata about a counter.
      type: object
      id: NameAndKind
      properties:
        kind:
          enum:
            - INVALID
            - SUM
            - MAX
            - MIN
            - MEAN
            - OR
            - AND
            - SET
            - DISTRIBUTION
            - LATEST_VALUE
          type: string
          description: Counter aggregation kind.
          enumDescriptions:
            - Counter aggregation kind was not set.
            - Aggregated value is the sum of all contributed values.
            - Aggregated value is the max of all contributed values.
            - Aggregated value is the min of all contributed values.
            - Aggregated value is the mean of all contributed values.
            - Aggregated value represents the logical 'or' of all contributed values.
            - Aggregated value represents the logical 'and' of all contributed values.
            - Aggregated value is a set of unique contributed values.
            - Aggregated value captures statistics about a distribution.
            - Aggregated value tracks the latest value of a variable.
        name:
          type: string
          description: Name of the counter.
    JobMetrics:
      id: JobMetrics
      type: object
      description: 'JobMetrics contains a collection of metrics describing the detailed progress of a Dataflow job. Metrics correspond to user-defined and system-defined metrics in the job. For more information, see [Dataflow job metrics] (https://cloud.google.com/dataflow/docs/guides/using-monitoring-intf). This resource captures only the most recent values of each metric; time-series data can be queried for them (under the same metric names) from Cloud Monitoring.'
      properties:
        metrics:
          items:
            $ref: '#/components/schemas/MetricUpdate'
          type: array
          description: All metrics for this job.
        metricTime:
          description: Timestamp as of which metric values are current.
          format: google-datetime
          type: string
    ReadInstruction:
      id: ReadInstruction
      description: 'An instruction that reads records. Takes no inputs, produces one output.'
      type: object
      properties:
        source:
          description: The source to read from.
          $ref: '#/components/schemas/Source'
    PartialGroupByKeyInstruction:
      properties:
        originalCombineValuesInputStoreName:
          type: string
          description: If this instruction includes a combining function this is the name of the intermediate store between the GBK and the CombineValues.
        sideInputs:
          type: array
          items:
            $ref: '#/components/schemas/SideInputInfo'
          description: Zero or more side inputs.
        valueCombiningFn:
          additionalProperties:
            description: Properties of the object.
            type: any
          description: The value combining function to invoke.
          type: object
        input:
          description: Describes the input to the partial group-by-key instruction.
          $ref: '#/components/schemas/InstructionInput'
        inputElementCodec:
          type: object
          description: The codec to use for interpreting an element in the input PTable.
          additionalProperties:
            description: Properties of the object.
            type: any
        originalCombineValuesStepName:
          description: 'If this instruction includes a combining function, this is the name of the CombineValues instruction lifted into this instruction.'
          type: string
      id: PartialGroupByKeyInstruction
      type: object
      description: An instruction that does a partial group-by-key. One input and one output.
    Sink:
      type: object
      properties:
        spec:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
          description: 'The sink to write to, plus its parameters.'
        codec:
          additionalProperties:
            description: Properties of the object.
            type: any
          description: The codec to use to encode data written to the sink.
          type: object
      description: A sink that records can be encoded and written to.
      id: Sink
    MultiOutputInfo:
      description: Information about an output of a multi-output DoFn.
      type: object
      id: MultiOutputInfo
      properties:
        tag:
          description: The id of the tag the user code will emit to this output by; this should correspond to the tag of some SideInputInfo.
          type: string
    ExecutionStageSummary:
      id: ExecutionStageSummary
      properties:
        outputSource:
          description: Output sources for this stage.
          items:
            $ref: '#/components/schemas/StageSource'
          type: array
        componentTransform:
          items:
            $ref: '#/components/schemas/ComponentTransform'
          type: array
          description: Transforms that comprise this execution stage.
        prerequisiteStage:
          type: array
          items:
            type: string
          description: Other stages that must complete before this stage can run.
        componentSource:
          type: array
          description: Collections produced and consumed by component transforms of this stage.
          items:
            $ref: '#/components/schemas/ComponentSource'
        inputSource:
          type: array
          items:
            $ref: '#/components/schemas/StageSource'
          description: Input sources for this stage.
        kind:
          enum:
            - UNKNOWN_KIND
            - PAR_DO_KIND
            - GROUP_BY_KEY_KIND
            - FLATTEN_KIND
            - READ_KIND
            - WRITE_KIND
            - CONSTANT_KIND
            - SINGLETON_KIND
            - SHUFFLE_KIND
          description: Type of transform this stage is executing.
          enumDescriptions:
            - Unrecognized transform type.
            - ParDo transform.
            - Group By Key transform.
            - Flatten transform.
            - Read transform.
            - Write transform.
            - 'Constructs from a constant value, such as with Create.of.'
            - Creates a Singleton view of a collection.
            - 'Opening or closing a shuffle session, often as part of a GroupByKey.'
          type: string
        name:
          type: string
          description: Dataflow service generated name for this stage.
        id:
          description: Dataflow service generated id for this stage.
          type: string
      type: object
      description: 'Description of the composing transforms, names/ids, and input/outputs of a stage of execution. Some composing transforms and sources may have been generated by the Dataflow service during execution planning.'
    FailedLocation:
      description: 'Indicates which [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) failed to respond to a request for data.'
      properties:
        name:
          description: 'The name of the [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that failed to respond.'
          type: string
      type: object
      id: FailedLocation
    InstructionOutput:
      properties:
        name:
          type: string
          description: The user-provided name of this output.
        codec:
          additionalProperties:
            description: Properties of the object.
            type: any
          type: object
          description: The codec to use to encode data being written via this output.
        systemName:
          type: string
          description: System-defined name of this output. Unique across the workflow.
        onlyCountValueBytes:
          type: boolean
          description: 'For system-generated byte and mean byte metrics, certain instructions should only report the value size.'
        originalName:
          type: string
          description: System-defined name for this output in the original workflow graph. Outputs that do not contribute to an original instruction do not set this.
        onlyCountKeyBytes:
          description: 'For system-generated byte and mean byte metrics, certain instructions should only report the key size.'
          type: boolean
      type: object
      description: An output of an instruction.
      id: InstructionOutput
    SourceSplitShard:
      properties:
        source:
          $ref: '#/components/schemas/Source'
          description: DEPRECATED
        derivationMode:
          description: DEPRECATED
          enumDescriptions:
            - 'The source derivation is unknown, or unspecified.'
            - Produce a completely independent Source with no base.
            - Produce a Source based on the Source being split.
            - Produce a Source based on the base of the Source being split.
          type: string
          enum:
            - SOURCE_DERIVATION_MODE_UNKNOWN
            - SOURCE_DERIVATION_MODE_INDEPENDENT
            - SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT
            - SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT
      type: object
      description: DEPRECATED in favor of DerivedSource.
      id: SourceSplitShard
    PubsubLocation:
      description: Identifies a pubsub location to use for transferring data into or out of a streaming Dataflow job.
      properties:
        withAttributes:
          type: boolean
          description: 'If true, then the client has requested to get pubsub attributes.'
        subscription:
          type: string
          description: 'A pubsub subscription, in the form of "pubsub.googleapis.com/subscriptions//"'
        idLabel:
          type: string
          description: 'If set, contains a pubsub label from which to extract record ids. If left empty, record deduplication will be strictly best effort.'
        topic:
          type: string
          description: 'A pubsub topic, in the form of "pubsub.googleapis.com/topics//"'
        dynamicDestinations:
          type: boolean
          description: 'If true, then this location represents dynamic topics.'
        trackingSubscription:
          type: string
          description: 'If set, specifies the pubsub subscription that will be used for tracking custom time timestamps for watermark estimation.'
        dropLateData:
          type: boolean
          description: Indicates whether the pipeline allows late-arriving data.
        timestampLabel:
          type: string
          description: 'If set, contains a pubsub label from which to extract record timestamps. If left empty, record timestamps will be generated upon arrival.'
      id: PubsubLocation
      type: object
    FlattenInstruction:
      description: An instruction that copies its inputs (zero or more) to its (single) output.
      id: FlattenInstruction
      type: object
      properties:
        inputs:
          description: Describes the inputs to the flatten instruction.
          type: array
          items:
            $ref: '#/components/schemas/InstructionInput'
    SdkVersion:
      id: SdkVersion
      description: The version of the SDK used to run the job.
      properties:
        versionDisplayName:
          type: string
          description: A readable string describing the version of the SDK.
        sdkSupportStatus:
          enum:
            - UNKNOWN
            - SUPPORTED
            - STALE
            - DEPRECATED
            - UNSUPPORTED
          enumDescriptions:
            - Cloud Dataflow is unaware of this version.
            - 'This is a known version of an SDK, and is supported.'
            - 'A newer version of the SDK family exists, and an update is recommended.'
            - This version of the SDK is deprecated and will eventually be unsupported.
            - Support for this SDK version has ended and it should no longer be used.
          type: string
          description: The support status for this SDK version.
        version:
          type: string
          description: The version of the SDK used to run the job.
        bugs:
          type: array
          items:
            $ref: '#/components/schemas/SdkBug'
          description: Output only. Known bugs found in this SDK version.
          readOnly: true
      type: object
    Straggler:
      description: Information for a straggler.
      id: Straggler
      type: object
      properties:
        batchStraggler:
          $ref: '#/components/schemas/StragglerInfo'
          description: Batch straggler identification and debugging information.
        streamingStraggler:
          description: Streaming straggler identification and debugging information.
          $ref: '#/components/schemas/StreamingStragglerInfo'
    SourceGetMetadataRequest:
      properties:
        source:
          description: Specification of the source whose metadata should be computed.
          $ref: '#/components/schemas/Source'
      id: SourceGetMetadataRequest
      description: A request to compute the SourceMetadata of a Source.
      type: object
    LaunchFlexTemplateResponse:
      description: Response to the request to launch a job from Flex Template.
      properties:
        job:
          description: 'The job that was launched, if the request was not a dry run and the job was successfully launched.'
          $ref: '#/components/schemas/Job'
      type: object
      id: LaunchFlexTemplateResponse
    JobExecutionDetails:
      description: Information about the execution of a job.
      type: object
      id: JobExecutionDetails
      properties:
        stages:
          items:
            $ref: '#/components/schemas/StageSummary'
          type: array
          description: The stages of the job execution.
        nextPageToken:
          type: string
          description: 'If present, this response does not contain all requested tasks. To obtain the next page of results, repeat the request with page_token set to this value.'
    CounterUpdate:
      description: An update to a Counter sent from a worker.
      properties:
        nameAndKind:
          description: Counter name and aggregation type.
          $ref: '#/components/schemas/NameAndKind'
        distribution:
          description: Distribution data
          $ref: '#/components/schemas/DistributionUpdate'
        integerGauge:
          description: Gauge data
          $ref: '#/components/schemas/IntegerGauge'
        internal:
          description: Value for internally-defined counters used by the Dataflow service.
          type: any
        boolean:
          type: boolean
          description: 'Boolean value for And, Or.'
        cumulative:
          type: boolean
          description: 'True if this counter is reported as the total cumulative aggregate value accumulated since the worker started working on this WorkItem. By default this is false, indicating that this counter is reported as a delta.'
        integerMean:
          description: Integer mean aggregation value for Mean.
          $ref: '#/components/schemas/IntegerMean'
        floatingPoint:
          format: double
          type: number
          description: 'Floating point value for Sum, Max, Min.'
        floatingPointList:
          description: 'List of floating point numbers, for Set.'
          $ref: '#/components/schemas/FloatingPointList'
        shortId:
          description: 'The service-generated short identifier for this counter. The short_id -> (name, metadata) mapping is constant for the lifetime of a job.'
          format: int64
          type: string
        integer:
          description: 'Integer value for Sum, Max, Min.'
          $ref: '#/components/schemas/SplitInt64'
        integerList:
          description: 'List of integers, for Set.'
          $ref: '#/components/schemas/IntegerList'
        structuredNameAndMetadata:
          description: Counter structured name and metadata.
          $ref: '#/components/schemas/CounterStructuredNameAndMetadata'
        stringList:
          $ref: '#/components/schemas/StringList'
          description: 'List of strings, for Set.'
        floatingPointMean:
          description: Floating point mean aggregation value for Mean.
          $ref: '#/components/schemas/FloatingPointMean'
      id: CounterUpdate
      type: object
    WorkItemStatus:
      description: Conveys a worker's progress through the work described by a WorkItem.
      properties:
        errors:
          description: 'Specifies errors which occurred during processing. If errors are provided, and completed = true, then the WorkItem is considered to have failed.'
          type: array
          items:
            $ref: '#/components/schemas/Status'
        completed:
          description: True if the WorkItem was completed (successfully or unsuccessfully).
          type: boolean
        requestedLeaseDuration:
          description: Amount of time the worker requests for its lease.
          format: google-duration
          type: string
        workItemId:
          description: Identifies the WorkItem.
          type: string
        reportIndex:
          description: 'The report index. When a WorkItem is leased, the lease will contain an initial report index. When a WorkItem''s status is reported to the system, the report should be sent with that report index, and the response will contain the index the worker should use for the next report. Reports received with unexpected index values will be rejected by the service. In order to preserve idempotency, the worker should not alter the contents of a report, even if the worker must submit the same report multiple times before getting back a response. The worker should not submit a subsequent report until the response for the previous report had been received from the service.'
          format: int64
          type: string
        reportedProgress:
          description: The worker's progress through this WorkItem.
          $ref: '#/components/schemas/ApproximateReportedProgress'
        sourceFork:
          deprecated: true
          description: DEPRECATED in favor of dynamic_source_split.
          $ref: '#/components/schemas/SourceFork'
        counterUpdates:
          type: array
          items:
            $ref: '#/components/schemas/CounterUpdate'
          description: Worker output counters for this WorkItem.
        stopPosition:
          description: 'A worker may split an active map task in two parts, "primary" and "residual", continuing to process the primary part and returning the residual part into the pool of available work. This event is called a "dynamic split" and is critical to the dynamic work rebalancing feature. The two obtained sub-tasks are called "parts" of the split. The parts, if concatenated, must represent the same input as would be read by the current task if the split did not happen. The exact way in which the original task is decomposed into the two parts is specified either as a position demarcating them (stop_position), or explicitly as two DerivedSources, if this task consumes a user-defined source type (dynamic_source_split). The "current" task is adjusted as a result of the split: after a task with range [A, B) sends a stop_position update at C, its range is considered to be [A, C), e.g.: * Progress should be interpreted relative to the new range, e.g. "75% completed" means "75% of [A, C) completed" * The worker should interpret proposed_stop_position relative to the new range, e.g. "split at 68%" should be interpreted as "split at 68% of [A, C)". * If the worker chooses to split again using stop_position, only stop_positions in [A, C) will be accepted. * Etc. dynamic_source_split has similar semantics: e.g., if a task with source S splits using dynamic_source_split into {P, R} (where P and R must be together equivalent to S), then subsequent progress and proposed_stop_position should be interpreted relative to P, and in a potential subsequent dynamic_source_split into {P'', R''}, P'' and R'' must be together equivalent to P, etc.'
          $ref: '#/components/schemas/Position'
        totalThrottlerWaitTimeSeconds:
          description: Total time the worker spent being throttled by external systems.
          type: number
          format: double
        dynamicSourceSplit:
          $ref: '#/components/schemas/DynamicSourceSplit'
          description: See documentation of stop_position.
        sourceOperationResponse:
          $ref: '#/components/schemas/SourceOperationResponse'
          description: 'If the work item represented a SourceOperationRequest, and the work is completed, contains the result of the operation.'
        metricUpdates:
          type: array
          description: DEPRECATED in favor of counter_updates.
          deprecated: true
          items:
            $ref: '#/components/schemas/MetricUpdate'
        progress:
          description: DEPRECATED in favor of reported_progress.
          deprecated: true
          $ref: '#/components/schemas/ApproximateProgress'
      id: WorkItemStatus
      type: object
    StreamingConfigTask:
      type: object
      description: A task that carries configuration information for streaming computations.
      id: StreamingConfigTask
      properties:
        maxWorkItemCommitBytes:
          type: string
          description: Maximum size for work item commit supported windmill storage layer.
          format: int64
        windmillServiceEndpoint:
          type: string
          description: 'If present, the worker must use this endpoint to communicate with Windmill Service dispatchers, otherwise the worker must continue to use whatever endpoint it had been using.'
        userStepToStateFamilyNameMap:
          type: object
          description: Map from user step names to state families.
          additionalProperties:
            type: string
        windmillServicePort:
          description: 'If present, the worker must use this port to communicate with Windmill Service dispatchers. Only applicable when windmill_service_endpoint is specified.'
          type: string
          format: int64
        commitStreamChunkSizeBytes:
          type: string
          description: Chunk size for commit streams from the harness to windmill.
          format: int64
        getDataStreamChunkSizeBytes:
          description: Chunk size for get data streams from the harness to windmill.
          format: int64
          type: string
        streamingComputationConfigs:
          description: Set of computation configuration information.
          type: array
          items:
            $ref: '#/components/schemas/StreamingComputationConfig'
    HotKeyDetection:
      id: HotKeyDetection
      description: Proto describing a hot key detected on a given WorkItem.
      type: object
      properties:
        systemName:
          description: System-defined name of the step containing this hot key. Unique across the workflow.
          type: string
        hotKeyAge:
          format: google-duration
          type: string
          description: The age of the hot key measured from when it was first detected.
        userStepName:
          description: User-provided name of the step that contains this hot key.
          type: string
    TransformSummary:
      properties:
        id:
          type: string
          description: SDK generated id of this transform instance.
        kind:
          enumDescriptions:
            - Unrecognized transform type.
            - ParDo transform.
            - Group By Key transform.
            - Flatten transform.
            - Read transform.
            - Write transform.
            - 'Constructs from a constant value, such as with Create.of.'
            - Creates a Singleton view of a collection.
            - 'Opening or closing a shuffle session, often as part of a GroupByKey.'
          enum:
            - UNKNOWN_KIND
            - PAR_DO_KIND
            - GROUP_BY_KEY_KIND
            - FLATTEN_KIND
            - READ_KIND
            - WRITE_KIND
            - CONSTANT_KIND
            - SINGLETON_KIND
            - SHUFFLE_KIND
          description: Type of transform.
          type: string
        outputCollectionName:
          type: array
          description: User names for all collection outputs to this transform.
          items:
            type: string
        inputCollectionName:
          description: User names for all collection inputs to this transform.
          type: array
          items:
            type: string
        name:
          description: User provided name for this transform instance.
          type: string
        displayData:
          description: Transform-specific display data.
          type: array
          items:
            $ref: '#/components/schemas/DisplayData'
      type: object
      description: 'Description of the type, names/ids, and input/outputs for a transform.'
      id: TransformSummary
    SendWorkerMessagesRequest:
      properties:
        workerMessages:
          type: array
          items:
            $ref: '#/components/schemas/WorkerMessage'
          description: The WorkerMessages to send.
        location:
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job.'
          type: string
      id: SendWorkerMessagesRequest
      type: object
      description: A request for sending worker messages to the service.
    WorkerPool:
      properties:
        diskSizeGb:
          type: integer
          description: 'Size of root disk for VMs, in GB. If zero or unspecified, the service will attempt to choose a reasonable default.'
          format: int32
        dataDisks:
          description: Data disks that are used by a VM in this workflow.
          items:
            $ref: '#/components/schemas/Disk'
          type: array
        diskType:
          description: 'Type of root disk for VMs. If empty or unspecified, the service will attempt to choose a reasonable default.'
          type: string
        ipConfiguration:
          description: Configuration for VM IPs.
          enumDescriptions:
            - 'The configuration is unknown, or unspecified.'
            - Workers should have public IP addresses.
            - Workers should have private IP addresses.
          type: string
          enum:
            - WORKER_IP_UNSPECIFIED
            - WORKER_IP_PUBLIC
            - WORKER_IP_PRIVATE
        kind:
          type: string
          description: The kind of the worker pool; currently only `harness` and `shuffle` are supported.
        diskSourceImage:
          description: Fully qualified source image for disks.
          type: string
        autoscalingSettings:
          $ref: '#/components/schemas/AutoscalingSettings'
          description: Settings for autoscaling of this WorkerPool.
        machineType:
          type: string
          description: 'Machine type (e.g. "n1-standard-1"). If empty or unspecified, the service will attempt to choose a reasonable default.'
        teardownPolicy:
          description: 'Sets the policy for determining when to turndown worker pool. Allowed values are: `TEARDOWN_ALWAYS`, `TEARDOWN_ON_SUCCESS`, and `TEARDOWN_NEVER`. `TEARDOWN_ALWAYS` means workers are always torn down regardless of whether the job succeeds. `TEARDOWN_ON_SUCCESS` means workers are torn down if the job succeeds. `TEARDOWN_NEVER` means the workers are never torn down. If the workers are not torn down by the service, they will continue to run and use Google Compute Engine VM resources in the user''s project until they are explicitly terminated by the user. Because of this, Google recommends using the `TEARDOWN_ALWAYS` policy except for small, manually supervised test jobs. If unknown or unspecified, the service will attempt to choose a reasonable default.'
          type: string
          enum:
            - TEARDOWN_POLICY_UNKNOWN
            - TEARDOWN_ALWAYS
            - TEARDOWN_ON_SUCCESS
            - TEARDOWN_NEVER
          enumDescriptions:
            - 'The teardown policy isn''t specified, or is unknown.'
            - Always teardown the resource.
            - Teardown the resource on success. This is useful for debugging failures.
            - Never teardown the resource. This is useful for debugging and development.
        network:
          type: string
          description: 'Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".'
        workerHarnessContainerImage:
          type: string
          description: 'Required. Docker container image that executes the Cloud Dataflow worker harness, residing in Google Container Registry. Deprecated for the Fn API path. Use sdk_harness_container_images instead.'
        subnetwork:
          description: 'Subnetwork to which VMs will be assigned, if desired. Expected to be of the form "regions/REGION/subnetworks/SUBNETWORK".'
          type: string
        onHostMaintenance:
          type: string
          description: 'The action to take on host maintenance, as defined by the Google Compute Engine API.'
        defaultPackageSet:
          type: string
          enumDescriptions:
            - 'The default set of packages to stage is unknown, or unspecified.'
            - Indicates that no packages should be staged at the worker unless explicitly specified by the job.
            - Stage packages typically useful to workers written in Java.
            - Stage packages typically useful to workers written in Python.
          enum:
            - DEFAULT_PACKAGE_SET_UNKNOWN
            - DEFAULT_PACKAGE_SET_NONE
            - DEFAULT_PACKAGE_SET_JAVA
            - DEFAULT_PACKAGE_SET_PYTHON
          description: The default package set to install. This allows the service to select a default set of packages which are useful to worker harnesses written in a particular language.
        sdkHarnessContainerImages:
          description: Set of SDK harness containers needed to execute this pipeline. This will only be set in the Fn API path. For non-cross-language pipelines this should have only one entry. Cross-language pipelines will have two or more entries.
          type: array
          items:
            $ref: '#/components/schemas/SdkHarnessContainerImage'
        poolArgs:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: Extra arguments for this worker pool.
          type: object
        taskrunnerSettings:
          description: Settings passed through to Google Compute Engine workers when using the standard Dataflow task runner. Users should ignore this field.
          $ref: '#/components/schemas/TaskRunnerSettings'
        zone:
          type: string
          description: 'Zone to run the worker pools in. If empty or unspecified, the service will attempt to choose a reasonable default.'
        packages:
          description: Packages to be installed on workers.
          type: array
          items:
            $ref: '#/components/schemas/Package'
        metadata:
          additionalProperties:
            type: string
          description: Metadata to set on the Google Compute Engine VMs.
          type: object
        numThreadsPerWorker:
          description: 'The number of threads per worker harness. If empty or unspecified, the service will choose a number of threads (according to the number of cores on the selected machine type for batch, or 1 by convention for streaming).'
          type: integer
          format: int32
        numWorkers:
          type: integer
          format: int32
          description: 'Number of Google Compute Engine workers in this pool needed to execute the job. If zero or unspecified, the service will attempt to choose a reasonable default.'
      id: WorkerPool
      type: object
      description: 'Describes one particular pool of Cloud Dataflow workers to be instantiated by the Cloud Dataflow service in order to perform the computations required by a job. Note that a workflow job may use multiple pools, in order to match the various computational requirements of the various stages of the job.'
    MetricUpdate:
      id: MetricUpdate
      description: Describes the state of a metric.
      type: object
      properties:
        name:
          description: Name of the metric.
          $ref: '#/components/schemas/MetricStructuredName'
        cumulative:
          description: 'True if this metric is reported as the total cumulative aggregate value accumulated since the worker started working on this WorkItem. By default this is false, indicating that this metric is reported as a delta that is not associated with any WorkItem.'
          type: boolean
        meanCount:
          type: any
          description: Worker-computed aggregate value for the "Mean" aggregation kind. This holds the count of the aggregated values and is used in combination with mean_sum above to obtain the actual mean aggregate value. The only possible value type is Long.
        internal:
          type: any
          description: Worker-computed aggregate value for internal use by the Dataflow service.
        gauge:
          description: 'A struct value describing properties of a Gauge. Metrics of gauge type show the value of a metric across time, and is aggregated based on the newest value.'
          type: any
        kind:
          type: string
          description: 'Metric aggregation kind. The possible metric aggregation kinds are "Sum", "Max", "Min", "Mean", "Set", "And", "Or", and "Distribution". The specified aggregation kind is case-insensitive. If omitted, this is not an aggregated value but instead a single metric sample value.'
        updateTime:
          format: google-datetime
          description: Timestamp associated with the metric value. Optional when workers are reporting work progress; it will be filled in responses from the metrics API.
          type: string
        meanSum:
          description: Worker-computed aggregate value for the "Mean" aggregation kind. This holds the sum of the aggregated values and is used in combination with mean_count below to obtain the actual mean aggregate value. The only possible value types are Long and Double.
          type: any
        distribution:
          description: A struct value describing properties of a distribution of numeric values.
          type: any
        set:
          description: 'Worker-computed aggregate value for the "Set" aggregation kind. The only possible value type is a list of Values whose type can be Long, Double, or String, according to the metric''s type. All Values in the list must be of the same type.'
          type: any
        scalar:
          type: any
          description: 'Worker-computed aggregate value for aggregation kinds "Sum", "Max", "Min", "And", and "Or". The possible value types are Long, Double, and Boolean.'
    Job:
      properties:
        startTime:
          type: string
          format: google-datetime
          description: 'The timestamp when the job was started (transitioned to JOB_STATE_PENDING). Flexible resource scheduling jobs are started with some delay after job creation, so start_time is unset before start and is updated when the job is started by the Cloud Dataflow service. For other jobs, start_time always equals to create_time and is immutable and set by the Cloud Dataflow service.'
        replaceJobId:
          type: string
          description: 'If this job is an update of an existing job, this field is the job ID of the job it replaced. When sending a `CreateJobRequest`, you can update a job by specifying it here. The job named here is stopped, and its intermediate state is transferred to this job.'
        satisfiesPzs:
          type: boolean
          description: Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.
        steps:
          type: array
          description: Exactly one of step or steps_location should be specified. The top-level steps that constitute the entire job. Only retrieved with JOB_VIEW_ALL.
          items:
            $ref: '#/components/schemas/Step'
        transformNameMapping:
          additionalProperties:
            type: string
          description: The map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job.
          type: object
        type:
          enum:
            - JOB_TYPE_UNKNOWN
            - JOB_TYPE_BATCH
            - JOB_TYPE_STREAMING
          enumDescriptions:
            - 'The type of the job is unspecified, or unknown.'
            - 'A batch job with a well-defined end point: data is read, data is processed, data is written, and the job is done.'
            - 'A continuously streaming job with no end: data is read, processed, and written continuously.'
          type: string
          description: The type of Cloud Dataflow job.
        location:
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job.'
          type: string
        labels:
          type: object
          description: 'User-defined labels for this job. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \p{Ll}\p{Lo}{0,62} * Values must conform to regexp: [\p{Ll}\p{Lo}\p{N}_-]{0,63} * Both keys and values are additionally constrained to be <= 128 bytes in size.'
          additionalProperties:
            type: string
        replacedByJobId:
          type: string
          description: 'If another job is an update of this job (and thus, this job is in `JOB_STATE_UPDATED`), this field contains the ID of that job.'
        jobMetadata:
          $ref: '#/components/schemas/JobMetadata'
          description: This field is populated by the Dataflow service to support filtering jobs by the metadata values provided here. Populated for ListJobs and all GetJob views SUMMARY and higher.
        name:
          description: 'The user-specified Cloud Dataflow job name. Only one Job with a given name can exist in a project within one region at any given time. Jobs in different regions can have the same name. If a caller attempts to create a Job with the same name as an already-existing Job, the attempt returns the existing Job. The name must match the regular expression `[a-z]([-a-z0-9]{0,1022}[a-z0-9])?`'
          type: string
        id:
          description: 'The unique ID of this job. This field is set by the Cloud Dataflow service when the Job is created, and is immutable for the life of the job.'
          type: string
        stepsLocation:
          type: string
          description: The Cloud Storage location where the steps are stored.
        projectId:
          description: The ID of the Cloud Platform project that the job belongs to.
          type: string
        stageStates:
          description: This field may be mutated by the Cloud Dataflow service; callers cannot mutate it.
          type: array
          items:
            $ref: '#/components/schemas/ExecutionStageState'
        runtimeUpdatableParams:
          $ref: '#/components/schemas/RuntimeUpdatableParams'
          description: This field may ONLY be modified at runtime using the projects.jobs.update method to adjust job behavior. This field has no effect when specified at job creation.
        currentState:
          enumDescriptions:
            - The job's run state isn't specified.
            - '`JOB_STATE_STOPPED` indicates that the job has not yet started to run.'
            - '`JOB_STATE_RUNNING` indicates that the job is currently running.'
            - '`JOB_STATE_DONE` indicates that the job has successfully completed. This is a terminal job state. This state may be set by the Cloud Dataflow service, as a transition from `JOB_STATE_RUNNING`. It may also be set via a Cloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal state.'
            - '`JOB_STATE_FAILED` indicates that the job has failed. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.'
            - '`JOB_STATE_CANCELLED` indicates that the job has been explicitly cancelled. This is a terminal job state. This state may only be set via a Cloud Dataflow `UpdateJob` call, and only if the job has not yet reached another terminal state.'
            - '`JOB_STATE_UPDATED` indicates that the job was successfully updated, meaning that this job was stopped and another job was started, inheriting state from this one. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.'
            - '`JOB_STATE_DRAINING` indicates that the job is in the process of draining. A draining job has stopped pulling from its input sources and is processing any data that remains in-flight. This state may be set via a Cloud Dataflow `UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs that are draining may only transition to `JOB_STATE_DRAINED`, `JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_DRAINED` indicates that the job has been drained. A drained job terminated by stopping pulling from its input sources and processing any data that remained in-flight when draining was requested. This state is a terminal state, may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_DRAINING`.'
            - '`JOB_STATE_PENDING` indicates that the job has been created but is not yet running. Jobs that are pending may only transition to `JOB_STATE_RUNNING`, or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled and is in the process of stopping. Jobs that are cancelling may only transition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_QUEUED` indicates that the job has been created but is being delayed until launch. Jobs that are queued may only transition to `JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`.'
            - '`JOB_STATE_RESOURCE_CLEANING_UP` indicates that the batch job''s associated resources are currently being cleaned up after a successful run. Currently, this is an opt-in feature, please reach out to Cloud support team if you are interested.'
          type: string
          enum:
            - JOB_STATE_UNKNOWN
            - JOB_STATE_STOPPED
            - JOB_STATE_RUNNING
            - JOB_STATE_DONE
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLED
            - JOB_STATE_UPDATED
            - JOB_STATE_DRAINING
            - JOB_STATE_DRAINED
            - JOB_STATE_PENDING
            - JOB_STATE_CANCELLING
            - JOB_STATE_QUEUED
            - JOB_STATE_RESOURCE_CLEANING_UP
          description: 'The current state of the job. Jobs are created in the `JOB_STATE_STOPPED` state unless otherwise specified. A job in the `JOB_STATE_RUNNING` state may asynchronously enter a terminal state. After a job has reached a terminal state, no further state updates may be made. This field may be mutated by the Cloud Dataflow service; callers cannot mutate it.'
        clientRequestId:
          description: 'The client''s unique identifier of the job, re-used across retried attempts. If this field is set, the service will ensure its uniqueness. The request to create a job will fail if the service has knowledge of a previously submitted job with the same client''s ID and job name. The caller may use this field to ensure idempotence of job creation across retried attempts to create a job. By default, the field is empty and, in that case, the service ignores it.'
          type: string
        executionInfo:
          $ref: '#/components/schemas/JobExecutionInfo'
          description: Deprecated.
        createTime:
          description: The timestamp when the job was initially created. Immutable and set by the Cloud Dataflow service.
          format: google-datetime
          type: string
        requestedState:
          description: 'The job''s requested state. `UpdateJob` may be used to switch between the `JOB_STATE_STOPPED` and `JOB_STATE_RUNNING` states, by setting requested_state. `UpdateJob` may also be used to directly set a job''s requested state to `JOB_STATE_CANCELLED` or `JOB_STATE_DONE`, irrevocably terminating the job if it has not already reached a terminal state.'
          enumDescriptions:
            - The job's run state isn't specified.
            - '`JOB_STATE_STOPPED` indicates that the job has not yet started to run.'
            - '`JOB_STATE_RUNNING` indicates that the job is currently running.'
            - '`JOB_STATE_DONE` indicates that the job has successfully completed. This is a terminal job state. This state may be set by the Cloud Dataflow service, as a transition from `JOB_STATE_RUNNING`. It may also be set via a Cloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal state.'
            - '`JOB_STATE_FAILED` indicates that the job has failed. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.'
            - '`JOB_STATE_CANCELLED` indicates that the job has been explicitly cancelled. This is a terminal job state. This state may only be set via a Cloud Dataflow `UpdateJob` call, and only if the job has not yet reached another terminal state.'
            - '`JOB_STATE_UPDATED` indicates that the job was successfully updated, meaning that this job was stopped and another job was started, inheriting state from this one. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.'
            - '`JOB_STATE_DRAINING` indicates that the job is in the process of draining. A draining job has stopped pulling from its input sources and is processing any data that remains in-flight. This state may be set via a Cloud Dataflow `UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs that are draining may only transition to `JOB_STATE_DRAINED`, `JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_DRAINED` indicates that the job has been drained. A drained job terminated by stopping pulling from its input sources and processing any data that remained in-flight when draining was requested. This state is a terminal state, may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_DRAINING`.'
            - '`JOB_STATE_PENDING` indicates that the job has been created but is not yet running. Jobs that are pending may only transition to `JOB_STATE_RUNNING`, or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled and is in the process of stopping. Jobs that are cancelling may only transition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_QUEUED` indicates that the job has been created but is being delayed until launch. Jobs that are queued may only transition to `JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`.'
            - '`JOB_STATE_RESOURCE_CLEANING_UP` indicates that the batch job''s associated resources are currently being cleaned up after a successful run. Currently, this is an opt-in feature, please reach out to Cloud support team if you are interested.'
          type: string
          enum:
            - JOB_STATE_UNKNOWN
            - JOB_STATE_STOPPED
            - JOB_STATE_RUNNING
            - JOB_STATE_DONE
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLED
            - JOB_STATE_UPDATED
            - JOB_STATE_DRAINING
            - JOB_STATE_DRAINED
            - JOB_STATE_PENDING
            - JOB_STATE_CANCELLING
            - JOB_STATE_QUEUED
            - JOB_STATE_RESOURCE_CLEANING_UP
        tempFiles:
          description: 'A set of files the system should be aware of that are used for temporary storage. These temporary files will be removed on job completion. No duplicates are allowed. No file patterns are supported. The supported files are: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}'
          items:
            type: string
          type: array
        pipelineDescription:
          $ref: '#/components/schemas/PipelineDescription'
          description: 'Preliminary field: The format of this data may change at any time. A description of the user pipeline and stages through which it is executed. Created by Cloud Dataflow service. Only retrieved with JOB_VIEW_DESCRIPTION or JOB_VIEW_ALL.'
        currentStateTime:
          description: The timestamp associated with the current state.
          format: google-datetime
          type: string
        createdFromSnapshotId:
          description: 'If this is specified, the job''s initial state is populated from the given snapshot.'
          type: string
        environment:
          description: The environment for the job.
          $ref: '#/components/schemas/Environment'
      type: object
      id: Job
      description: Defines a job to be run by the Cloud Dataflow service. Do not enter confidential information when you supply string values using the API.
    ListSnapshotsResponse:
      properties:
        snapshots:
          type: array
          items:
            $ref: '#/components/schemas/Snapshot'
          description: Returned snapshots.
      description: List of snapshots.
      id: ListSnapshotsResponse
      type: object
    Point:
      type: object
      id: Point
      description: A point in the timeseries.
      properties:
        value:
          type: number
          description: The value of the point.
          format: double
        time:
          format: google-datetime
          type: string
          description: The timestamp of the point.
    Parameter:
      properties:
        key:
          description: Key or name for this parameter.
          type: string
        value:
          description: Value for this parameter.
          type: any
      description: Structured data associated with this message.
      id: Parameter
      type: object
    WorkerMessageResponse:
      type: object
      id: WorkerMessageResponse
      properties:
        workerMetricsResponse:
          description: Service's response to reporting worker metrics (currently empty).
          $ref: '#/components/schemas/ResourceUtilizationReportResponse'
        workerShutdownNoticeResponse:
          $ref: '#/components/schemas/WorkerShutdownNoticeResponse'
          description: Service's response to shutdown notice (currently empty).
        workerThreadScalingReportResponse:
          description: Service's thread scaling recommendation for workers.
          $ref: '#/components/schemas/WorkerThreadScalingReportResponse'
        workerHealthReportResponse:
          description: The service's response to a worker's health report.
          $ref: '#/components/schemas/WorkerHealthReportResponse'
      description: A worker_message response allows the server to pass information to the sender.
    SdkBug:
      id: SdkBug
      type: object
      description: A bug found in the Dataflow SDK.
      properties:
        type:
          readOnly: true
          description: Output only. Describes the impact of this SDK bug.
          enum:
            - TYPE_UNSPECIFIED
            - GENERAL
            - PERFORMANCE
            - DATALOSS
          enumDescriptions:
            - Unknown issue with this SDK.
            - Catch-all for SDK bugs that don't fit in the below categories.
            - Using this version of the SDK may result in degraded performance.
            - Using this version of the SDK may cause data loss.
          type: string
        severity:
          enumDescriptions:
            - A bug of unknown severity.
            - A minor bug that that may reduce reliability or performance for some jobs. Impact will be minimal or non-existent for most jobs.
            - 'A bug that has some likelihood of causing performance degradation, data loss, or job failures.'
            - 'A bug with extremely significant impact. Jobs may fail erroneously, performance may be severely degraded, and data loss may be very likely.'
          readOnly: true
          description: Output only. How severe the SDK bug is.
          enum:
            - SEVERITY_UNSPECIFIED
            - NOTICE
            - WARNING
            - SEVERE
          type: string
        uri:
          readOnly: true
          description: Output only. Link to more information on the bug.
          type: string
    SourceSplitResponse:
      id: SourceSplitResponse
      description: The response to a SourceSplitRequest.
      type: object
      properties:
        outcome:
          enumDescriptions:
            - 'The source split outcome is unknown, or unspecified.'
            - The current source should be processed "as is" without splitting.
            - Splitting produced a list of bundles.
          description: 'Indicates whether splitting happened and produced a list of bundles. If this is USE_CURRENT_SOURCE_AS_IS, the current source should be processed "as is" without splitting. "bundles" is ignored in this case. If this is SPLITTING_HAPPENED, then "bundles" contains a list of bundles into which the source was split.'
          type: string
          enum:
            - SOURCE_SPLIT_OUTCOME_UNKNOWN
            - SOURCE_SPLIT_OUTCOME_USE_CURRENT
            - SOURCE_SPLIT_OUTCOME_SPLITTING_HAPPENED
        bundles:
          items:
            $ref: '#/components/schemas/DerivedSource'
          description: 'If outcome is SPLITTING_HAPPENED, then this is a list of bundles into which the source was split. Otherwise this field is ignored. This list can be empty, which means the source represents an empty input.'
          type: array
        shards:
          type: array
          description: DEPRECATED in favor of bundles.
          items:
            $ref: '#/components/schemas/SourceSplitShard'
          deprecated: true
    ConcatPosition:
      type: object
      properties:
        index:
          type: integer
          description: Index of the inner source.
          format: int32
        position:
          $ref: '#/components/schemas/Position'
          description: Position within the inner source.
      id: ConcatPosition
      description: A position that encapsulates an inner position and an index for the inner position. A ConcatPosition can be used by a reader of a source that encapsulates a set of other sources.
    DeleteSnapshotResponse:
      id: DeleteSnapshotResponse
      description: Response from deleting a snapshot.
      type: object
      properties: {}
    ListJobMessagesResponse:
      type: object
      description: Response to a request to list job messages.
      properties:
        autoscalingEvents:
          type: array
          items:
            $ref: '#/components/schemas/AutoscalingEvent'
          description: Autoscaling events in ascending timestamp order.
        jobMessages:
          description: Messages in ascending timestamp order.
          type: array
          items:
            $ref: '#/components/schemas/JobMessage'
        nextPageToken:
          type: string
          description: The token to obtain the next page of results if there are more.
      id: ListJobMessagesResponse
    WorkerHealthReportResponse:
      description: WorkerHealthReportResponse contains information returned to the worker in response to a health ping.
      properties:
        reportInterval:
          type: string
          format: google-duration
          description: A positive value indicates the worker should change its reporting interval to the specified value. The default value of zero means no change in report rate is requested by the server.
      id: WorkerHealthReportResponse
      type: object
    FileIODetails:
      type: object
      properties:
        filePattern:
          type: string
          description: File Pattern used to access files by the connector.
      description: Metadata for a File connector used by the job.
      id: FileIODetails
    WorkerShutdownNotice:
      id: WorkerShutdownNotice
      type: object
      properties:
        reason:
          description: 'The reason for the worker shutdown. Current possible values are: "UNKNOWN": shutdown reason is unknown. "PREEMPTION": shutdown reason is preemption. Other possible reasons may be added in the future.'
          type: string
      description: Shutdown notification from workers. This is to be sent by the shutdown script of the worker VM so that the backend knows that the VM is being shut down.
    CounterStructuredNameAndMetadata:
      properties:
        name:
          description: Structured name of the counter.
          $ref: '#/components/schemas/CounterStructuredName'
        metadata:
          $ref: '#/components/schemas/CounterMetadata'
          description: Metadata associated with a counter
      type: object
      id: CounterStructuredNameAndMetadata
      description: A single message which encapsulates structured name and metadata for a given counter.
    ParameterMetadata:
      properties:
        enumOptions:
          type: array
          items:
            $ref: '#/components/schemas/ParameterMetadataEnumOption'
          description: Optional. The options shown when ENUM ParameterType is specified.
        customMetadata:
          type: object
          additionalProperties:
            type: string
          description: Optional. Additional metadata for describing this parameter.
        label:
          description: Required. The label to display for the parameter.
          type: string
        parentName:
          description: Optional. Specifies the name of the parent parameter. Used in conjunction with 'parent_trigger_values' to make this parameter conditional (will only be rendered conditionally). Should be mappable to a ParameterMetadata.name field.
          type: string
        name:
          description: Required. The name of the parameter.
          type: string
        isOptional:
          type: boolean
          description: Optional. Whether the parameter is optional. Defaults to false.
        paramType:
          description: Optional. The type of the parameter. Used for selecting input picker.
          type: string
          enum:
            - DEFAULT
            - TEXT
            - GCS_READ_BUCKET
            - GCS_WRITE_BUCKET
            - GCS_READ_FILE
            - GCS_WRITE_FILE
            - GCS_READ_FOLDER
            - GCS_WRITE_FOLDER
            - PUBSUB_TOPIC
            - PUBSUB_SUBSCRIPTION
            - BIGQUERY_TABLE
            - JAVASCRIPT_UDF_FILE
            - SERVICE_ACCOUNT
            - MACHINE_TYPE
            - KMS_KEY_NAME
            - WORKER_REGION
            - WORKER_ZONE
            - BOOLEAN
            - ENUM
            - NUMBER
          enumDescriptions:
            - Default input type.
            - The parameter specifies generic text input.
            - The parameter specifies a Cloud Storage Bucket to read from.
            - The parameter specifies a Cloud Storage Bucket to write to.
            - The parameter specifies a Cloud Storage file path to read from.
            - The parameter specifies a Cloud Storage file path to write to.
            - The parameter specifies a Cloud Storage folder path to read from.
            - The parameter specifies a Cloud Storage folder to write to.
            - The parameter specifies a Pub/Sub Topic.
            - The parameter specifies a Pub/Sub Subscription.
            - The parameter specifies a BigQuery table.
            - The parameter specifies a JavaScript UDF in Cloud Storage.
            - The parameter specifies a Service Account email.
            - The parameter specifies a Machine Type.
            - The parameter specifies a KMS Key name.
            - The parameter specifies a Worker Region.
            - The parameter specifies a Worker Zone.
            - The parameter specifies a boolean input.
            - The parameter specifies an enum input.
            - The parameter specifies a number input.
        regexes:
          items:
            type: string
          type: array
          description: Optional. Regexes that the parameter must match.
        groupName:
          type: string
          description: Optional. Specifies a group name for this parameter to be rendered under. Group header text will be rendered exactly as specified in this field. Only considered when parent_name is NOT provided.
        helpText:
          description: Required. The help text to display for the parameter.
          type: string
        parentTriggerValues:
          type: array
          description: 'Optional. The value(s) of the ''parent_name'' parameter which will trigger this parameter to be shown. If left empty, ANY non-empty value in parent_name will trigger this parameter to be shown. Only considered when this parameter is conditional (when ''parent_name'' has been provided).'
          items:
            type: string
      id: ParameterMetadata
      type: object
      description: Metadata for a specific parameter.
    TemplateMetadata:
      type: object
      description: Metadata describing a template.
      id: TemplateMetadata
      properties:
        name:
          type: string
          description: Required. The name of the template.
        parameters:
          items:
            $ref: '#/components/schemas/ParameterMetadata'
          type: array
          description: The parameters for the template.
        description:
          description: Optional. A description of the template.
          type: string
    JobExecutionStageInfo:
      id: JobExecutionStageInfo
      type: object
      properties:
        stepName:
          items:
            type: string
          type: array
          description: 'The steps associated with the execution stage. Note that stages may have several steps, and that a given step might be run by more than one stage.'
      description: Contains information about how a particular google.dataflow.v1beta3.Step will be executed.
    ResourceUtilizationReportResponse:
      description: Service-side response to WorkerMessage reporting resource utilization.
      properties: {}
      id: ResourceUtilizationReportResponse
      type: object
    RuntimeMetadata:
      type: object
      id: RuntimeMetadata
      description: RuntimeMetadata describing a runtime environment.
      properties:
        parameters:
          type: array
          description: The parameters for the template.
          items:
            $ref: '#/components/schemas/ParameterMetadata'
        sdkInfo:
          description: SDK Info for the template.
          $ref: '#/components/schemas/SDKInfo'
    WorkerDetails:
      properties:
        workItems:
          items:
            $ref: '#/components/schemas/WorkItemDetails'
          description: 'Work items processed by this worker, sorted by time.'
          type: array
        workerName:
          description: Name of this worker
          type: string
      id: WorkerDetails
      description: Information about a worker
      type: object
    SnapshotJobRequest:
      type: object
      id: SnapshotJobRequest
      properties:
        description:
          type: string
          description: User specified description of the snapshot. Maybe empty.
        snapshotSources:
          type: boolean
          description: 'If true, perform snapshots for sources which support this.'
        ttl:
          description: TTL for the snapshot.
          type: string
          format: google-duration
        location:
          description: The location that contains this job.
          type: string
      description: Request to create a snapshot of a job.
    DistributionUpdate:
      id: DistributionUpdate
      type: object
      description: A metric value representing a distribution.
      properties:
        sumOfSquares:
          type: number
          description: Use a double since the sum of squares is likely to overflow int64.
          format: double
        max:
          description: The maximum value present in the distribution.
          $ref: '#/components/schemas/SplitInt64'
        min:
          $ref: '#/components/schemas/SplitInt64'
          description: The minimum value present in the distribution.
        sum:
          description: Use an int64 since we'd prefer the added precision. If overflow is a common problem we can detect it and use an additional int64 or a double.
          $ref: '#/components/schemas/SplitInt64'
        count:
          $ref: '#/components/schemas/SplitInt64'
          description: The count of the number of elements present in the distribution.
        histogram:
          $ref: '#/components/schemas/Histogram'
          description: (Optional) Histogram of value counts for the distribution.
    DerivedSource:
      properties:
        derivationMode:
          enum:
            - SOURCE_DERIVATION_MODE_UNKNOWN
            - SOURCE_DERIVATION_MODE_INDEPENDENT
            - SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT
            - SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT
          type: string
          enumDescriptions:
            - 'The source derivation is unknown, or unspecified.'
            - Produce a completely independent Source with no base.
            - Produce a Source based on the Source being split.
            - Produce a Source based on the base of the Source being split.
          description: What source to base the produced source on (if any).
        source:
          description: Specification of the source.
          $ref: '#/components/schemas/Source'
      description: 'Specification of one of the bundles produced as a result of splitting a Source (e.g. when executing a SourceSplitRequest, or when splitting an active task using WorkItemStatus.dynamic_source_split), relative to the source being split.'
      type: object
      id: DerivedSource
    ApproximateProgress:
      type: object
      properties:
        percentComplete:
          description: Obsolete.
          type: number
          deprecated: true
          format: float
        position:
          $ref: '#/components/schemas/Position'
          description: Obsolete.
          deprecated: true
        remainingTime:
          format: google-duration
          description: Obsolete.
          deprecated: true
          type: string
      id: ApproximateProgress
      description: Obsolete in favor of ApproximateReportedProgress and ApproximateSplitRequest.
    Environment:
      type: object
      description: Describes the environment in which a Dataflow Job runs.
      id: Environment
      properties:
        workerZone:
          description: 'The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane''s region is chosen based on available capacity.'
          type: string
        dataset:
          type: string
          description: 'The dataset for the current project where various workflow related tables are stored. The supported resource type is: Google BigQuery: bigquery.googleapis.com/{dataset}'
        serviceKmsKeyName:
          type: string
          description: 'If set, contains the Cloud KMS key identifier used to encrypt data at rest, AKA a Customer Managed Encryption Key (CMEK). Format: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY'
        workerPools:
          description: The worker pools. At least one "harness" worker pool must be specified in order for the job to have workers.
          type: array
          items:
            $ref: '#/components/schemas/WorkerPool'
        sdkPipelineOptions:
          description: The Cloud Dataflow SDK pipeline options specified by the user. These options are passed through the service and are used to recreate the SDK pipeline options on the worker in a language agnostic and platform independent way.
          additionalProperties:
            description: Properties of the object.
            type: any
          type: object
        serviceOptions:
          description: 'The list of service options to enable. This field should be used for service related experiments only. These experiments, when graduating to GA, should be replaced by dedicated fields or become default (i.e. always on).'
          type: array
          items:
            type: string
        useStreamingEngineResourceBasedBilling:
          readOnly: true
          description: Output only. Whether the job uses the new streaming engine billing model based on resource usage.
          type: boolean
        debugOptions:
          description: Any debugging options to be supplied to the job.
          $ref: '#/components/schemas/DebugOptions'
        flexResourceSchedulingGoal:
          enumDescriptions:
            - Run in the default mode.
            - Optimize for lower execution time.
            - Optimize for lower cost.
          enum:
            - FLEXRS_UNSPECIFIED
            - FLEXRS_SPEED_OPTIMIZED
            - FLEXRS_COST_OPTIMIZED
          type: string
          description: Which Flexible Resource Scheduling mode to run in.
        shuffleMode:
          enum:
            - SHUFFLE_MODE_UNSPECIFIED
            - VM_BASED
            - SERVICE_BASED
          readOnly: true
          description: Output only. The shuffle mode used for the job.
          type: string
          enumDescriptions:
            - Shuffle mode information is not available.
            - Shuffle is done on the worker VMs.
            - Shuffle is done on the service side.
        serviceAccountEmail:
          type: string
          description: Identity to run virtual machines as. Defaults to the default account.
        workerRegion:
          type: string
          description: 'The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane''s region.'
        clusterManagerApiService:
          type: string
          description: 'The type of cluster manager API to use. If unknown or unspecified, the service will attempt to choose a reasonable default. This should be in the form of the API service name, e.g. "compute.googleapis.com".'
        internalExperiments:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: Experimental settings.
          type: object
        userAgent:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
          description: A description of the process that generated the request.
        tempStoragePrefix:
          description: 'The prefix of the resources the system should use for temporary storage. The system will append the suffix "/temp-{JOBNAME} to this resource prefix, where {JOBNAME} is the value of the job_name field. The resulting bucket and object prefix is used as the prefix of the resources used to store temporary data needed during the job execution. NOTE: This will override the value in taskrunner_settings. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}'
          type: string
        experiments:
          items:
            type: string
          type: array
          description: The list of experiments to enable. This field should be used for SDK related experiments and not for service related experiments. The proper field for service related experiments is service_options.
        version:
          additionalProperties:
            description: Properties of the object.
            type: any
          type: object
          description: A structure describing which components and their versions of the service are required in order to run the job.
    RuntimeEnvironment:
      id: RuntimeEnvironment
      properties:
        machineType:
          type: string
          description: Optional. The machine type to use for the job. Defaults to the value from the template if not specified.
        numWorkers:
          format: int32
          description: Optional. The initial number of Google Compute Engine instances for the job. The default value is 11.
          type: integer
        serviceAccountEmail:
          description: Optional. The email address of the service account to run the job as.
          type: string
        additionalExperiments:
          description: 'Optional. Additional experiment flags for the job, specified with the `--experiments` option.'
          items:
            type: string
          type: array
        diskSizeGb:
          type: integer
          format: int32
          description: 'Optional. The disk size, in gigabytes, to use on each remote Compute Engine worker instance.'
        kmsKeyName:
          description: 'Optional. Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/'
          type: string
        additionalUserLabels:
          description: 'Optional. Additional user labels to be specified for the job. Keys and values should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1kg", "count": "3" }.'
          additionalProperties:
            type: string
          type: object
        network:
          type: string
          description: 'Optional. Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".'
        workerZone:
          type: string
          description: 'Optional. The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane''s region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.'
        workerRegion:
          type: string
          description: 'Required. The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane''s region.'
        tempLocation:
          type: string
          description: 'Required. The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.'
        zone:
          description: 'Optional. The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.'
          type: string
        subnetwork:
          type: string
          description: 'Optional. Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form "https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK" or "regions/REGION/subnetworks/SUBNETWORK". If the subnetwork is located in a Shared VPC network, you must use the complete URL.'
        maxWorkers:
          type: integer
          format: int32
          description: 'Optional. The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000. The default value is 1.'
        bypassTempDirValidation:
          type: boolean
          description: Optional. Whether to bypass the safety checks for the job's temporary directory. Use with caution.
        ipConfiguration:
          enumDescriptions:
            - 'The configuration is unknown, or unspecified.'
            - Workers should have public IP addresses.
            - Workers should have private IP addresses.
          description: Optional. Configuration for VM IPs.
          enum:
            - WORKER_IP_UNSPECIFIED
            - WORKER_IP_PUBLIC
            - WORKER_IP_PRIVATE
          type: string
        enableStreamingEngine:
          description: Optional. Whether to enable Streaming Engine for the job.
          type: boolean
      description: The environment values to set at runtime.
      type: object
    CreateJobFromTemplateRequest:
      id: CreateJobFromTemplateRequest
      description: A request to create a Cloud Dataflow job from a template.
      properties:
        jobName:
          type: string
          description: Required. The job name to use for the created job.
        environment:
          description: The runtime environment for the job.
          $ref: '#/components/schemas/RuntimeEnvironment'
        gcsPath:
          type: string
          description: 'Required. A Cloud Storage path to the template from which to create the job. Must be a valid Cloud Storage URL, beginning with `gs://`.'
        parameters:
          type: object
          additionalProperties:
            type: string
          description: The runtime parameters to pass to the job.
        location:
          type: string
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.'
      type: object
    SplitInt64:
      id: SplitInt64
      type: object
      properties:
        highBits:
          format: int32
          type: integer
          description: 'The high order bits, including the sign: n >> 32.'
        lowBits:
          format: uint32
          type: integer
          description: 'The low order bits: n & 0xffffffff.'
      description: 'A representation of an int64, n, that is immune to precision loss when encoded in JSON.'
    DynamicSourceSplit:
      properties:
        residual:
          description: Residual part (returned to the pool of work). Specified relative to the previously-current source.
          $ref: '#/components/schemas/DerivedSource'
        primary:
          description: Primary part (continued to be processed by worker). Specified relative to the previously-current source. Becomes current.
          $ref: '#/components/schemas/DerivedSource'
      id: DynamicSourceSplit
      description: 'When a task splits using WorkItemStatus.dynamic_source_split, this message describes the two parts of the split relative to the description of the current task''s input.'
      type: object
    CPUTime:
      type: object
      properties:
        rate:
          type: number
          description: Average CPU utilization rate (% non-idle cpu / second) since previous sample.
          format: double
        totalMs:
          type: string
          format: uint64
          description: 'Total active CPU time across all cores (ie., non-idle) in milliseconds since start-up.'
        timestamp:
          format: google-datetime
          description: Timestamp of the measurement.
          type: string
      id: CPUTime
      description: Modeled after information exposed by /proc/stat.
    SeqMapTaskOutputInfo:
      properties:
        tag:
          description: The id of the TupleTag the user code will tag the output value by.
          type: string
        sink:
          description: The sink to write the output value to.
          $ref: '#/components/schemas/Sink'
      type: object
      description: Information about an output of a SeqMapTask.
      id: SeqMapTaskOutputInfo
    WorkerLifecycleEvent:
      description: 'A report of an event in a worker''s lifecycle. The proto contains one event, because the worker is expected to asynchronously send each message immediately after the event. Due to this asynchrony, messages may arrive out of order (or missing), and it is up to the consumer to interpret. The timestamp of the event is in the enclosing WorkerMessage proto.'
      type: object
      id: WorkerLifecycleEvent
      properties:
        containerStartTime:
          type: string
          description: The start time of this container. All events will report this so that events can be grouped together across container/VM restarts.
          format: google-datetime
        event:
          type: string
          enum:
            - UNKNOWN_EVENT
            - OS_START
            - CONTAINER_START
            - NETWORK_UP
            - STAGING_FILES_DOWNLOAD_START
            - STAGING_FILES_DOWNLOAD_FINISH
            - SDK_INSTALL_START
            - SDK_INSTALL_FINISH
          enumDescriptions:
            - Invalid event.
            - The time the VM started.
            - Our container code starts running. Multiple containers could be distinguished with WorkerMessage.labels if desired.
            - The worker has a functional external network connection.
            - Started downloading staging files.
            - Finished downloading all staging files.
            - 'For applicable SDKs, started installation of SDK and worker packages.'
            - Finished installing SDK.
          description: The event being reported.
        metadata:
          description: 'Other stats that can accompany an event. E.g. { "downloaded_bytes" : "123456" }'
          type: object
          additionalProperties:
            type: string
    CounterMetadata:
      properties:
        standardUnits:
          type: string
          enum:
            - BYTES
            - BYTES_PER_SEC
            - MILLISECONDS
            - MICROSECONDS
            - NANOSECONDS
            - TIMESTAMP_MSEC
            - TIMESTAMP_USEC
            - TIMESTAMP_NSEC
          description: 'System defined Units, see above enum.'
          enumDescriptions:
            - Counter returns a value in bytes.
            - Counter returns a value in bytes per second.
            - Counter returns a value in milliseconds.
            - Counter returns a value in microseconds.
            - Counter returns a value in nanoseconds.
            - Counter returns a timestamp in milliseconds.
            - Counter returns a timestamp in microseconds.
            - Counter returns a timestamp in nanoseconds.
        kind:
          enumDescriptions:
            - Counter aggregation kind was not set.
            - Aggregated value is the sum of all contributed values.
            - Aggregated value is the max of all contributed values.
            - Aggregated value is the min of all contributed values.
            - Aggregated value is the mean of all contributed values.
            - Aggregated value represents the logical 'or' of all contributed values.
            - Aggregated value represents the logical 'and' of all contributed values.
            - Aggregated value is a set of unique contributed values.
            - Aggregated value captures statistics about a distribution.
            - Aggregated value tracks the latest value of a variable.
          enum:
            - INVALID
            - SUM
            - MAX
            - MIN
            - MEAN
            - OR
            - AND
            - SET
            - DISTRIBUTION
            - LATEST_VALUE
          type: string
          description: Counter aggregation kind.
        otherUnits:
          description: A string referring to the unit type.
          type: string
        description:
          type: string
          description: Human-readable description of the counter semantics.
      description: CounterMetadata includes all static non-name non-value counter attributes.
      id: CounterMetadata
      type: object
    Package:
      description: 'The packages that must be installed in order for a worker to run the steps of the Cloud Dataflow job that will be assigned to its worker pool. This is the mechanism by which the Cloud Dataflow SDK causes code to be loaded onto the workers. For example, the Cloud Dataflow Java SDK might use this to install jars containing the user''s code and all of the various dependencies (libraries, data files, etc.) required in order for that code to run.'
      id: Package
      properties:
        name:
          type: string
          description: The name of the package.
        location:
          type: string
          description: 'The resource to read the package from. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket} bucket.storage.googleapis.com/'
      type: object
    SourceSplitOptions:
      type: object
      properties:
        desiredBundleSizeBytes:
          format: int64
          description: The source should be split into a set of bundles where the estimated size of each is approximately this many bytes.
          type: string
        desiredShardSizeBytes:
          format: int64
          deprecated: true
          description: DEPRECATED in favor of desired_bundle_size_bytes.
          type: string
      description: Hints for splitting a Source into bundles (parts for parallel processing) using SourceSplitRequest.
      id: SourceSplitOptions
    StreamingComputationConfig:
      description: Configuration information for a single streaming computation.
      id: StreamingComputationConfig
      properties:
        systemName:
          type: string
          description: System defined name for this computation.
        transformUserNameToStateFamily:
          description: Map from user name of stateful transforms in this stage to their state family.
          type: object
          additionalProperties:
            type: string
        computationId:
          type: string
          description: Unique identifier for this computation.
        stageName:
          description: Stage name of this computation.
          type: string
        instructions:
          description: Instructions that comprise the computation.
          type: array
          items:
            $ref: '#/components/schemas/ParallelInstruction'
      type: object
    WorkerMessage:
      id: WorkerMessage
      type: object
      description: WorkerMessage provides information to the backend about a worker.
      properties:
        workerLifecycleEvent:
          $ref: '#/components/schemas/WorkerLifecycleEvent'
          description: Record of worker lifecycle events.
        workerMessageCode:
          description: A worker message code.
          $ref: '#/components/schemas/WorkerMessageCode'
        dataSamplingReport:
          $ref: '#/components/schemas/DataSamplingReport'
          description: Optional. Contains metrics related to go/dataflow-data-sampling-telemetry.
        workerHealthReport:
          description: The health of a worker.
          $ref: '#/components/schemas/WorkerHealthReport'
        workerShutdownNotice:
          $ref: '#/components/schemas/WorkerShutdownNotice'
          description: Shutdown notice by workers.
        labels:
          type: object
          description: 'Labels are used to group WorkerMessages. For example, a worker_message about a particular container might have the labels: { "JOB_ID": "2015-04-22", "WORKER_ID": "wordcount-vm-2015…" "CONTAINER_TYPE": "worker", "CONTAINER_ID": "ac1234def"} Label tags typically correspond to Label enum values. However, for ease of development other strings can be used as tags. LABEL_UNSPECIFIED should not be used here.'
          additionalProperties:
            type: string
        workerThreadScalingReport:
          $ref: '#/components/schemas/WorkerThreadScalingReport'
          description: Thread scaling information reported by workers.
        workerMetrics:
          $ref: '#/components/schemas/ResourceUtilizationReport'
          description: Resource metrics reported by workers.
        time:
          description: The timestamp of the worker_message.
          type: string
          format: google-datetime
    WorkerHealthReport:
      description: WorkerHealthReport contains information about the health of a worker. The VM should be identified by the labels attached to the WorkerMessage that this health ping belongs to.
      type: object
      id: WorkerHealthReport
      properties:
        pods:
          items:
            additionalProperties:
              description: Properties of the object.
              type: any
            type: object
          type: array
          description: 'The pods running on the worker. See: http://kubernetes.io/v1.1/docs/api-reference/v1/definitions.html#_v1_pod This field is used by the worker to send the status of the indvidual containers running on each worker.'
        reportInterval:
          type: string
          format: google-duration
          description: The interval at which the worker is sending health reports. The default value of 0 should be interpreted as the field is not being explicitly set by the worker.
        msg:
          type: string
          description: Message describing any unusual health reports.
        vmStartupTime:
          description: The time the VM was booted.
          type: string
          format: google-datetime
        vmIsHealthy:
          description: Whether the VM is currently healthy.
          type: boolean
        vmIsBroken:
          type: boolean
          description: Whether the VM is in a permanently broken state. Broken VMs should be abandoned or deleted ASAP to avoid assigning or completing any work.
        vmBrokenCode:
          description: 'Code to describe a specific reason, if known, that a VM has reported broken state.'
          type: string
    JobExecutionInfo:
      type: object
      id: JobExecutionInfo
      description: Additional information about how a Cloud Dataflow job will be executed that isn't contained in the submitted job.
      properties:
        stages:
          additionalProperties:
            $ref: '#/components/schemas/JobExecutionStageInfo'
          type: object
          description: A mapping from each stage to the information about that stage.
    JobMessage:
      type: object
      id: JobMessage
      description: A particular message pertaining to a Dataflow job.
      properties:
        id:
          description: Deprecated.
          type: string
        time:
          description: The timestamp of the message.
          type: string
          format: google-datetime
        messageImportance:
          description: Importance level of the message.
          enum:
            - JOB_MESSAGE_IMPORTANCE_UNKNOWN
            - JOB_MESSAGE_DEBUG
            - JOB_MESSAGE_DETAILED
            - JOB_MESSAGE_BASIC
            - JOB_MESSAGE_WARNING
            - JOB_MESSAGE_ERROR
          type: string
          enumDescriptions:
            - 'The message importance isn''t specified, or is unknown.'
            - 'The message is at the ''debug'' level: typically only useful for software engineers working on the code the job is running. Typically, Dataflow pipeline runners do not display log messages at this level by default.'
            - 'The message is at the ''detailed'' level: somewhat verbose, but potentially useful to users. Typically, Dataflow pipeline runners do not display log messages at this level by default. These messages are displayed by default in the Dataflow monitoring UI.'
            - 'The message is at the ''basic'' level: useful for keeping track of the execution of a Dataflow pipeline. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI.'
            - 'The message is at the ''warning'' level: indicating a condition pertaining to a job which may require human intervention. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI.'
            - 'The message is at the ''error'' level: indicating a condition preventing a job from succeeding. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI.'
        messageText:
          type: string
          description: The text of the message.
    MountedDataDisk:
      properties:
        dataDisk:
          description: 'The name of the data disk. This name is local to the Google Cloud Platform project and uniquely identifies the disk within that project, for example "myproject-1014-104817-4c2-harness-0-disk-1".'
          type: string
      id: MountedDataDisk
      description: Describes mounted data disk.
      type: object
    ResourceUtilizationReport:
      type: object
      properties:
        memoryInfo:
          description: Memory utilization samples.
          items:
            $ref: '#/components/schemas/MemInfo'
          type: array
        cpuTime:
          description: CPU utilization samples.
          type: array
          items:
            $ref: '#/components/schemas/CPUTime'
        containers:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ResourceUtilizationReport'
          description: 'Per container information. Key: container name.'
      id: ResourceUtilizationReport
      description: 'Worker metrics exported from workers. This contains resource utilization metrics accumulated from a variety of sources. For more information, see go/df-resource-signals.'
    ListJobsResponse:
      type: object
      id: ListJobsResponse
      properties:
        jobs:
          description: A subset of the requested job information.
          items:
            $ref: '#/components/schemas/Job'
          type: array
        failedLocation:
          items:
            $ref: '#/components/schemas/FailedLocation'
          type: array
          description: 'Zero or more messages describing the [regional endpoints] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that failed to respond.'
        nextPageToken:
          description: Set if there may be more results than fit in this response.
          type: string
      description: 'Response to a request to list Cloud Dataflow jobs in a project. This might be a partial response, depending on the page size in the ListJobsRequest. However, if the project does not have any jobs, an instance of ListJobsResponse is not returned and the requests''s response body is empty {}.'
    AutoscalingEvent:
      id: AutoscalingEvent
      properties:
        currentNumWorkers:
          format: int64
          type: string
          description: The current number of workers the job has.
        time:
          format: google-datetime
          type: string
          description: The time this event was emitted to indicate a new target or current num_workers value.
        targetNumWorkers:
          format: int64
          type: string
          description: The target number of workers the worker pool wants to resize to use.
        description:
          $ref: '#/components/schemas/StructuredMessage'
          description: 'A message describing why the system decided to adjust the current number of workers, why it failed, or why the system decided to not make any changes to the number of workers.'
        eventType:
          enum:
            - TYPE_UNKNOWN
            - TARGET_NUM_WORKERS_CHANGED
            - CURRENT_NUM_WORKERS_CHANGED
            - ACTUATION_FAILURE
            - NO_CHANGE
          enumDescriptions:
            - Default type for the enum. Value should never be returned.
            - The TARGET_NUM_WORKERS_CHANGED type should be used when the target worker pool size has changed at the start of an actuation. An event should always be specified as TARGET_NUM_WORKERS_CHANGED if it reflects a change in the target_num_workers.
            - 'The CURRENT_NUM_WORKERS_CHANGED type should be used when actual worker pool size has been changed, but the target_num_workers has not changed.'
            - The ACTUATION_FAILURE type should be used when we want to report an error to the user indicating why the current number of workers in the pool could not be changed. Displayed in the current status and history widgets.
            - 'Used when we want to report to the user a reason why we are not currently adjusting the number of workers. Should specify both target_num_workers, current_num_workers and a decision_message.'
          description: The type of autoscaling event to report.
          type: string
        workerPool:
          description: A short and friendly name for the worker pool this event refers to.
          type: string
      type: object
      description: A structured message reporting an autoscaling decision made by the Dataflow service.
    SdkHarnessContainerImage:
      properties:
        useSingleCorePerContainer:
          type: boolean
          description: 'If true, recommends the Dataflow service to use only one core per SDK container instance with this image. If false (or unset) recommends using more than one core per SDK container instance with this image for efficiency. Note that Dataflow service may choose to override this property if needed.'
        capabilities:
          items:
            type: string
          description: 'The set of capabilities enumerated in the above Environment proto. See also [beam_runner_api.proto](https://github.com/apache/beam/blob/master/model/pipeline/src/main/proto/org/apache/beam/model/pipeline/v1/beam_runner_api.proto)'
          type: array
        environmentId:
          description: Environment ID for the Beam runner API proto Environment that corresponds to the current SDK Harness.
          type: string
        containerImage:
          description: A docker container image that resides in Google Container Registry.
          type: string
      id: SdkHarnessContainerImage
      type: object
      description: Defines an SDK harness container for executing Dataflow pipelines.
    HotKeyDebuggingInfo:
      properties:
        detectedHotKeys:
          additionalProperties:
            $ref: '#/components/schemas/HotKeyInfo'
          description: Debugging information for each detected hot key. Keyed by a hash of the key.
          type: object
      id: HotKeyDebuggingInfo
      type: object
      description: Information useful for debugging a hot key detection.
    WorkerSettings:
      properties:
        workerId:
          type: string
          description: The ID of the worker running this pipeline.
        tempStoragePrefix:
          description: 'The prefix of the resources the system should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}'
          type: string
        reportingEnabled:
          description: Whether to send work progress updates to the service.
          type: boolean
        shuffleServicePath:
          type: string
          description: 'The Shuffle service path relative to the root URL, for example, "shuffle/v1beta1".'
        servicePath:
          description: 'The Cloud Dataflow service path relative to the root URL, for example, "dataflow/v1b3/projects".'
          type: string
        baseUrl:
          description: 'The base URL for accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, "Relative Uniform Resource Locators". If not specified, the default value is "http://www.googleapis.com/"'
          type: string
      type: object
      id: WorkerSettings
      description: Provides data to pass through to the worker harness.
    RuntimeUpdatableParams:
      id: RuntimeUpdatableParams
      properties:
        minNumWorkers:
          description: The minimum number of workers to scale down to. This field is currently only supported for Streaming Engine jobs.
          format: int32
          type: integer
        maxNumWorkers:
          type: integer
          format: int32
          description: The maximum number of workers to cap autoscaling at. This field is currently only supported for Streaming Engine jobs.
      type: object
      description: Additional job parameters that can only be updated during runtime using the projects.jobs.update method. These fields have no effect when specified during job creation.
    StringList:
      properties:
        elements:
          items:
            type: string
          type: array
          description: Elements of the list.
      description: A metric value representing a list of strings.
      type: object
      id: StringList
    CustomSourceLocation:
      type: object
      description: Identifies the location of a custom souce.
      properties:
        stateful:
          type: boolean
          description: Whether this source is stateful.
      id: CustomSourceLocation
    WorkItemDetails:
      description: Information about an individual work item execution.
      properties:
        state:
          enumDescriptions:
            - The component state is unknown or unspecified.
            - The component is not yet running.
            - The component is currently running.
            - The component succeeded.
            - The component failed.
            - Execution of the component was cancelled.
          type: string
          description: State of this work item.
          enum:
            - EXECUTION_STATE_UNKNOWN
            - EXECUTION_STATE_NOT_STARTED
            - EXECUTION_STATE_RUNNING
            - EXECUTION_STATE_SUCCEEDED
            - EXECUTION_STATE_FAILED
            - EXECUTION_STATE_CANCELLED
        endTime:
          format: google-datetime
          type: string
          description: 'End time of this work item attempt. If the work item is completed, this is the actual end time of the work item. Otherwise, it is the predicted end time.'
        startTime:
          format: google-datetime
          description: Start time of this work item attempt.
          type: string
        stragglerInfo:
          $ref: '#/components/schemas/StragglerInfo'
          description: Information about straggler detections for this work item.
        progress:
          $ref: '#/components/schemas/ProgressTimeseries'
          description: Progress of this work item.
        attemptId:
          type: string
          description: Attempt ID of this work item
        taskId:
          type: string
          description: Name of this work item.
        metrics:
          items:
            $ref: '#/components/schemas/MetricUpdate'
          type: array
          description: Metrics for this work item.
      id: WorkItemDetails
      type: object
    ContainerSpec:
      description: Container Spec.
      type: object
      id: ContainerSpec
      properties:
        imageRepositoryPasswordSecretId:
          description: Secret Manager secret id for password to authenticate to private registry.
          type: string
        imageRepositoryCertPath:
          description: Cloud Storage path to self-signed certificate of private registry.
          type: string
        image:
          type: string
          description: 'Name of the docker container image. E.g., gcr.io/project/some-image'
        sdkInfo:
          $ref: '#/components/schemas/SDKInfo'
          description: Required. SDK info of the Flex Template.
        imageRepositoryUsernameSecretId:
          type: string
          description: Secret Manager secret id for username to authenticate to private registry.
        metadata:
          $ref: '#/components/schemas/TemplateMetadata'
          description: Metadata describing a template including description and validation rules.
        defaultEnvironment:
          $ref: '#/components/schemas/FlexTemplateRuntimeEnvironment'
          description: Default runtime environment for the job.
    SourceFork:
      id: SourceFork
      properties:
        residual:
          $ref: '#/components/schemas/SourceSplitShard'
          description: DEPRECATED
        primary:
          description: DEPRECATED
          $ref: '#/components/schemas/SourceSplitShard'
        primarySource:
          description: DEPRECATED
          $ref: '#/components/schemas/DerivedSource'
        residualSource:
          $ref: '#/components/schemas/DerivedSource'
          description: DEPRECATED
      type: object
      description: DEPRECATED in favor of DynamicSourceSplit.
    StreamingApplianceSnapshotConfig:
      description: Streaming appliance snapshot configuration.
      properties:
        importStateEndpoint:
          type: string
          description: Indicates which endpoint is used to import appliance state.
        snapshotId:
          description: 'If set, indicates the snapshot id for the snapshot being performed.'
          type: string
      id: StreamingApplianceSnapshotConfig
      type: object
    SpannerIODetails:
      description: Metadata for a Spanner connector used by the job.
      properties:
        projectId:
          description: ProjectId accessed in the connection.
          type: string
        databaseId:
          type: string
          description: DatabaseId accessed in the connection.
        instanceId:
          type: string
          description: InstanceId accessed in the connection.
      type: object
      id: SpannerIODetails
    AutoscalingSettings:
      properties:
        algorithm:
          type: string
          enum:
            - AUTOSCALING_ALGORITHM_UNKNOWN
            - AUTOSCALING_ALGORITHM_NONE
            - AUTOSCALING_ALGORITHM_BASIC
          enumDescriptions:
            - 'The algorithm is unknown, or unspecified.'
            - Disable autoscaling.
            - Increase worker count over time to reduce job execution time.
          description: The algorithm to use for autoscaling.
        maxNumWorkers:
          description: The maximum number of workers to cap scaling at.
          type: integer
          format: int32
      description: Settings for WorkerPool autoscaling.
      id: AutoscalingSettings
      type: object
    PipelineDescription:
      id: PipelineDescription
      type: object
      properties:
        displayData:
          items:
            $ref: '#/components/schemas/DisplayData'
          type: array
          description: Pipeline level display data.
        executionPipelineStage:
          items:
            $ref: '#/components/schemas/ExecutionStageSummary'
          type: array
          description: Description of each stage of execution of the pipeline.
        originalPipelineTransform:
          items:
            $ref: '#/components/schemas/TransformSummary'
          description: Description of each transform in the pipeline and collections between them.
          type: array
        stepNamesHash:
          description: A hash value of the submitted pipeline portable graph step names if exists.
          type: string
      description: A descriptive representation of submitted pipeline as well as the executed form. This data is provided by the Dataflow service for ease of visualizing the pipeline and interpreting Dataflow provided metrics.
    ApproximateReportedProgress:
      id: ApproximateReportedProgress
      properties:
        consumedParallelism:
          $ref: '#/components/schemas/ReportedParallelism'
          description: 'Total amount of parallelism in the portion of input of this task that has already been consumed and is no longer active. In the first two examples above (see remaining_parallelism), the value should be 29 or 2 respectively. The sum of remaining_parallelism and consumed_parallelism should equal the total amount of parallelism in this work item. If specified, must be finite.'
        fractionConsumed:
          type: number
          description: 'Completion as fraction of the input consumed, from 0.0 (beginning, nothing consumed), to 1.0 (end of the input, entire input consumed).'
          format: double
        position:
          $ref: '#/components/schemas/Position'
          description: A Position within the work to represent a progress.
        remainingParallelism:
          $ref: '#/components/schemas/ReportedParallelism'
          description: 'Total amount of parallelism in the input of this task that remains, (i.e. can be delegated to this task and any new tasks via dynamic splitting). Always at least 1 for non-finished work items and 0 for finished. "Amount of parallelism" refers to how many non-empty parts of the input can be read in parallel. This does not necessarily equal number of records. An input that can be read in parallel down to the individual records is called "perfectly splittable". An example of non-perfectly parallelizable input is a block-compressed file format where a block of records has to be read as a whole, but different blocks can be read in parallel. Examples: * If we are processing record #30 (starting at 1) out of 50 in a perfectly splittable 50-record input, this value should be 21 (20 remaining + 1 current). * If we are reading through block 3 in a block-compressed file consisting of 5 blocks, this value should be 3 (since blocks 4 and 5 can be processed in parallel by new tasks via dynamic splitting and the current task remains processing block 3). * If we are reading through the last block in a block-compressed file, or reading or processing the last record in a perfectly splittable input, this value should be 1, because apart from the current task, no additional remainder can be split off.'
      type: object
      description: A progress measurement of a WorkItem by a worker.
    Position:
      id: Position
      properties:
        end:
          type: boolean
          description: Position is past all other positions. Also useful for the end position of an unbounded range.
        recordIndex:
          description: Position is a record index.
          type: string
          format: int64
        byteOffset:
          description: Position is a byte offset.
          type: string
          format: int64
        key:
          type: string
          description: 'Position is a string key, ordered lexicographically.'
        shufflePosition:
          description: CloudPosition is a base64 encoded BatchShufflePosition (with FIXED sharding).
          type: string
        concatPosition:
          description: CloudPosition is a concat position.
          $ref: '#/components/schemas/ConcatPosition'
      description: 'Position defines a position within a collection of data. The value can be either the end position, a key (used with ordered collections), a byte offset, or a record index.'
      type: object
    BigTableIODetails:
      type: object
      properties:
        tableId:
          description: TableId accessed in the connection.
          type: string
        projectId:
          description: ProjectId accessed in the connection.
          type: string
        instanceId:
          type: string
          description: InstanceId accessed in the connection.
      id: BigTableIODetails
      description: Metadata for a Cloud Bigtable connector used by the job.
    StragglerSummary:
      id: StragglerSummary
      type: object
      properties:
        totalStragglerCount:
          type: string
          description: The total count of stragglers.
          format: int64
        recentStragglers:
          type: array
          description: The most recent stragglers.
          items:
            $ref: '#/components/schemas/Straggler'
        stragglerCauseCount:
          additionalProperties:
            format: int64
            type: string
          description: 'Aggregated counts of straggler causes, keyed by the string representation of the StragglerCause enum.'
          type: object
      description: Summarized straggler identification details.
    ComponentSource:
      properties:
        name:
          type: string
          description: Dataflow service generated name for this source.
        originalTransformOrCollection:
          type: string
          description: User name for the original user transform or collection with which this source is most closely associated.
        userName:
          type: string
          description: Human-readable name for this transform; may be user or system generated.
      id: ComponentSource
      description: Description of an interstitial value between transforms in an execution stage.
      type: object
    DebugOptions:
      type: object
      properties:
        enableHotKeyLogging:
          type: boolean
          description: 'When true, enables the logging of the literal hot key to the user''s Cloud Logging.'
        dataSampling:
          description: Configuration options for sampling elements from a running pipeline.
          $ref: '#/components/schemas/DataSamplingConfig'
      id: DebugOptions
      description: Describes any options that have an effect on the debugging of pipelines.
    FloatingPointMean:
      properties:
        count:
          description: The number of values being aggregated.
          $ref: '#/components/schemas/SplitInt64'
        sum:
          description: The sum of all values being aggregated.
          type: number
          format: double
      id: FloatingPointMean
      type: object
      description: A representation of a floating point mean metric contribution.
    StragglerDebuggingInfo:
      properties:
        hotKey:
          $ref: '#/components/schemas/HotKeyDebuggingInfo'
          description: Hot key debugging details.
      type: object
      id: StragglerDebuggingInfo
      description: 'Information useful for debugging a straggler. Each type will provide specialized debugging information relevant for a particular cause. The StragglerDebuggingInfo will be 1:1 mapping to the StragglerCause enum.'
    Snapshot:
      properties:
        creationTime:
          type: string
          format: google-datetime
          description: The time this snapshot was created.
        projectId:
          description: The project this snapshot belongs to.
          type: string
        region:
          description: 'Cloud region where this snapshot lives in, e.g., "us-central1".'
          type: string
        state:
          enumDescriptions:
            - Unknown state.
            - 'Snapshot intent to create has been persisted, snapshotting of state has not yet started.'
            - Snapshotting is being performed.
            - Snapshot has been created and is ready to be used.
            - Snapshot failed to be created.
            - Snapshot has been deleted.
          enum:
            - UNKNOWN_SNAPSHOT_STATE
            - PENDING
            - RUNNING
            - READY
            - FAILED
            - DELETED
          type: string
          description: State of the snapshot.
        diskSizeBytes:
          description: The disk byte size of the snapshot. Only available for snapshots in READY state.
          format: int64
          type: string
        sourceJobId:
          description: The job this snapshot was created from.
          type: string
        pubsubMetadata:
          items:
            $ref: '#/components/schemas/PubsubSnapshotMetadata'
          description: Pub/Sub snapshot metadata.
          type: array
        ttl:
          description: The time after which this snapshot will be automatically deleted.
          format: google-duration
          type: string
        id:
          description: The unique ID of this snapshot.
          type: string
        description:
          description: User specified description of the snapshot. Maybe empty.
          type: string
      id: Snapshot
      type: object
      description: Represents a snapshot of a job.
    BigQueryIODetails:
      type: object
      properties:
        query:
          type: string
          description: Query used to access data in the connection.
        projectId:
          description: Project accessed in the connection.
          type: string
        table:
          description: Table accessed in the connection.
          type: string
        dataset:
          type: string
          description: Dataset accessed in the connection.
      id: BigQueryIODetails
      description: Metadata for a BigQuery connector used by the job.
    StageExecutionDetails:
      description: Information about the workers and work items within a stage.
      type: object
      properties:
        nextPageToken:
          type: string
          description: 'If present, this response does not contain all requested tasks. To obtain the next page of results, repeat the request with page_token set to this value.'
        workers:
          description: Workers that have done work on the stage.
          items:
            $ref: '#/components/schemas/WorkerDetails'
          type: array
      id: StageExecutionDetails
    Disk:
      id: Disk
      description: Describes the data disk used by a workflow job.
      properties:
        sizeGb:
          description: 'Size of disk in GB. If zero or unspecified, the service will attempt to choose a reasonable default.'
          format: int32
          type: integer
        mountPoint:
          description: Directory in a VM where disk is mounted.
          type: string
        diskType:
          description: 'Disk storage type, as defined by Google Compute Engine. This must be a disk type appropriate to the project and zone in which the workers will run. If unknown or unspecified, the service will attempt to choose a reasonable default. For example, the standard persistent disk type is a resource name typically ending in "pd-standard". If SSD persistent disks are available, the resource name typically ends with "pd-ssd". The actual valid values are defined the Google Compute Engine API, not by the Cloud Dataflow API; consult the Google Compute Engine documentation for more information about determining the set of available disk types for a particular project and zone. Google Compute Engine Disk types are local to a particular project in a particular zone, and so the resource name will typically look something like this: compute.googleapis.com/projects/project-id/zones/zone/diskTypes/pd-standard'
          type: string
      type: object
    StreamingComputationRanges:
      description: Describes full or partial data disk assignment information of the computation ranges.
      type: object
      id: StreamingComputationRanges
      properties:
        rangeAssignments:
          type: array
          items:
            $ref: '#/components/schemas/KeyRangeDataDiskAssignment'
          description: Data disk assignments for ranges from this computation.
        computationId:
          type: string
          description: The ID of the computation.
    StageSource:
      description: Description of an input or output of an execution stage.
      id: StageSource
      type: object
      properties:
        originalTransformOrCollection:
          type: string
          description: User name for the original user transform or collection with which this source is most closely associated.
        sizeBytes:
          format: int64
          description: 'Size of the source, if measurable.'
          type: string
        name:
          type: string
          description: Dataflow service generated name for this source.
        userName:
          type: string
          description: Human-readable name for this source; may be user or system generated.
    ComponentTransform:
      type: object
      properties:
        originalTransform:
          description: User name for the original user transform with which this transform is most closely associated.
          type: string
        userName:
          type: string
          description: Human-readable name for this transform; may be user or system generated.
        name:
          type: string
          description: Dataflow service generated name for this source.
      id: ComponentTransform
      description: Description of a transform executed as part of an execution stage.
    TaskRunnerSettings:
      type: object
      description: Taskrunner configuration settings.
      properties:
        logUploadLocation:
          type: string
          description: 'Indicates where to put logs. If this is not specified, the logs will not be uploaded. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}'
        logToSerialconsole:
          description: Whether to send taskrunner log info to Google Compute Engine VM serial console.
          type: boolean
        baseUrl:
          type: string
          description: 'The base URL for the taskrunner to use when accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, "Relative Uniform Resource Locators". If not specified, the default value is "http://www.googleapis.com/"'
        parallelWorkerSettings:
          $ref: '#/components/schemas/WorkerSettings'
          description: The settings to pass to the parallel worker harness.
        oauthScopes:
          items:
            type: string
          description: The OAuth2 scopes to be requested by the taskrunner in order to access the Cloud Dataflow API.
          type: array
        tempStoragePrefix:
          description: 'The prefix of the resources the taskrunner should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}'
          type: string
        workflowFileName:
          description: The file to store the workflow in.
          type: string
        commandlinesFileName:
          type: string
          description: The file to store preprocessing commands in.
        vmId:
          type: string
          description: The ID string of the VM.
        taskGroup:
          description: The UNIX group ID on the worker VM to use for tasks launched by taskrunner; e.g. "wheel".
          type: string
        baseTaskDir:
          description: The location on the worker for task-specific subdirectories.
          type: string
        harnessCommand:
          type: string
          description: The command to launch the worker harness.
        continueOnException:
          description: Whether to continue taskrunner if an exception is hit.
          type: boolean
        taskUser:
          type: string
          description: The UNIX user ID on the worker VM to use for tasks launched by taskrunner; e.g. "root".
        streamingWorkerMainClass:
          description: The streaming worker main class name.
          type: string
        logDir:
          type: string
          description: The directory on the VM to store logs.
        dataflowApiVersion:
          description: 'The API version of endpoint, e.g. "v1b3"'
          type: string
        alsologtostderr:
          type: boolean
          description: Whether to also send taskrunner log info to stderr.
        languageHint:
          type: string
          description: The suggested backend language.
      id: TaskRunnerSettings
    ExecutionStageState:
      type: object
      id: ExecutionStageState
      description: A message describing the state of a particular execution stage.
      properties:
        executionStageName:
          description: The name of the execution stage.
          type: string
        executionStageState:
          type: string
          enum:
            - JOB_STATE_UNKNOWN
            - JOB_STATE_STOPPED
            - JOB_STATE_RUNNING
            - JOB_STATE_DONE
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLED
            - JOB_STATE_UPDATED
            - JOB_STATE_DRAINING
            - JOB_STATE_DRAINED
            - JOB_STATE_PENDING
            - JOB_STATE_CANCELLING
            - JOB_STATE_QUEUED
            - JOB_STATE_RESOURCE_CLEANING_UP
          description: Executions stage states allow the same set of values as JobState.
          enumDescriptions:
            - The job's run state isn't specified.
            - '`JOB_STATE_STOPPED` indicates that the job has not yet started to run.'
            - '`JOB_STATE_RUNNING` indicates that the job is currently running.'
            - '`JOB_STATE_DONE` indicates that the job has successfully completed. This is a terminal job state. This state may be set by the Cloud Dataflow service, as a transition from `JOB_STATE_RUNNING`. It may also be set via a Cloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal state.'
            - '`JOB_STATE_FAILED` indicates that the job has failed. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.'
            - '`JOB_STATE_CANCELLED` indicates that the job has been explicitly cancelled. This is a terminal job state. This state may only be set via a Cloud Dataflow `UpdateJob` call, and only if the job has not yet reached another terminal state.'
            - '`JOB_STATE_UPDATED` indicates that the job was successfully updated, meaning that this job was stopped and another job was started, inheriting state from this one. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.'
            - '`JOB_STATE_DRAINING` indicates that the job is in the process of draining. A draining job has stopped pulling from its input sources and is processing any data that remains in-flight. This state may be set via a Cloud Dataflow `UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs that are draining may only transition to `JOB_STATE_DRAINED`, `JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_DRAINED` indicates that the job has been drained. A drained job terminated by stopping pulling from its input sources and processing any data that remained in-flight when draining was requested. This state is a terminal state, may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_DRAINING`.'
            - '`JOB_STATE_PENDING` indicates that the job has been created but is not yet running. Jobs that are pending may only transition to `JOB_STATE_RUNNING`, or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled and is in the process of stopping. Jobs that are cancelling may only transition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_QUEUED` indicates that the job has been created but is being delayed until launch. Jobs that are queued may only transition to `JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`.'
            - '`JOB_STATE_RESOURCE_CLEANING_UP` indicates that the batch job''s associated resources are currently being cleaned up after a successful run. Currently, this is an opt-in feature, please reach out to Cloud support team if you are interested.'
        currentStateTime:
          description: The time at which the stage transitioned to this state.
          type: string
          format: google-datetime
    StreamingComputationTask:
      type: object
      id: StreamingComputationTask
      properties:
        dataDisks:
          type: array
          description: Describes the set of data disks this task should apply to.
          items:
            $ref: '#/components/schemas/MountedDataDisk'
        taskType:
          description: A type of streaming computation task.
          type: string
          enumDescriptions:
            - 'The streaming computation task is unknown, or unspecified.'
            - Stop processing specified streaming computation range(s).
            - Start processing specified streaming computation range(s).
          enum:
            - STREAMING_COMPUTATION_TASK_UNKNOWN
            - STREAMING_COMPUTATION_TASK_STOP
            - STREAMING_COMPUTATION_TASK_START
        computationRanges:
          type: array
          description: Contains ranges of a streaming computation this task should apply to.
          items:
            $ref: '#/components/schemas/StreamingComputationRanges'
      description: A task which describes what action should be performed for the specified streaming computation ranges.
    DataSamplingConfig:
      description: Configuration options for sampling elements.
      properties:
        behaviors:
          description: 'List of given sampling behaviors to enable. For example, specifying behaviors = [ALWAYS_ON] samples in-flight elements but does not sample exceptions. Can be used to specify multiple behaviors like, behaviors = [ALWAYS_ON, EXCEPTIONS] for specifying periodic sampling and exception sampling. If DISABLED is in the list, then sampling will be disabled and ignore the other given behaviors. Ordering does not matter.'
          items:
            enumDescriptions:
              - 'If given, has no effect on sampling behavior. Used as an unknown or unset sentinel value.'
              - 'When given, disables element sampling. Has same behavior as not setting the behavior.'
              - 'When given, enables sampling in-flight from all PCollections.'
              - 'When given, enables sampling input elements when a user-defined DoFn causes an exception.'
            type: string
            enum:
              - DATA_SAMPLING_BEHAVIOR_UNSPECIFIED
              - DISABLED
              - ALWAYS_ON
              - EXCEPTIONS
          type: array
      id: DataSamplingConfig
      type: object
    StructuredMessage:
      id: StructuredMessage
      description: 'A rich message format, including a human readable string, a key for identifying the message, and structured data associated with the message for programmatic consumption.'
      properties:
        messageKey:
          description: Identifier for this message type. Used by external systems to internationalize or personalize message.
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
          description: The structured data associated with this message.
        messageText:
          type: string
          description: Human-readable version of message.
      type: object
    ParDoInstruction:
      description: 'An instruction that does a ParDo operation. Takes one main input and zero or more side inputs, and produces zero or more outputs. Runs user code.'
      type: object
      id: ParDoInstruction
      properties:
        multiOutputInfos:
          type: array
          items:
            $ref: '#/components/schemas/MultiOutputInfo'
          description: 'Information about each of the outputs, if user_fn is a MultiDoFn.'
        sideInputs:
          description: Zero or more side inputs.
          type: array
          items:
            $ref: '#/components/schemas/SideInputInfo'
        input:
          $ref: '#/components/schemas/InstructionInput'
          description: The input.
        userFn:
          additionalProperties:
            description: Properties of the object.
            type: any
          description: The user function to invoke.
          type: object
        numOutputs:
          description: The number of outputs.
          type: integer
          format: int32
    SeqMapTask:
      description: Describes a particular function to invoke.
      id: SeqMapTask
      type: object
      properties:
        inputs:
          items:
            $ref: '#/components/schemas/SideInputInfo'
          description: Information about each of the inputs.
          type: array
        name:
          description: The user-provided name of the SeqDo operation.
          type: string
        userFn:
          description: The user function to invoke.
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
        outputInfos:
          description: Information about each of the outputs.
          items:
            $ref: '#/components/schemas/SeqMapTaskOutputInfo'
          type: array
        stageName:
          description: System-defined name of the stage containing the SeqDo operation. Unique across the workflow.
          type: string
        systemName:
          description: System-defined name of the SeqDo operation. Unique across the workflow.
          type: string
    ParallelInstruction:
      description: Describes a particular operation comprising a MapTask.
      type: object
      id: ParallelInstruction
      properties:
        read:
          description: Additional information for Read instructions.
          $ref: '#/components/schemas/ReadInstruction'
        partialGroupByKey:
          description: Additional information for PartialGroupByKey instructions.
          $ref: '#/components/schemas/PartialGroupByKeyInstruction'
        name:
          description: User-provided name of this operation.
          type: string
        originalName:
          description: System-defined name for the operation in the original workflow graph.
          type: string
        systemName:
          type: string
          description: System-defined name of this operation. Unique across the workflow.
        parDo:
          $ref: '#/components/schemas/ParDoInstruction'
          description: Additional information for ParDo instructions.
        outputs:
          items:
            $ref: '#/components/schemas/InstructionOutput'
          type: array
          description: Describes the outputs of the instruction.
        write:
          description: Additional information for Write instructions.
          $ref: '#/components/schemas/WriteInstruction'
        flatten:
          $ref: '#/components/schemas/FlattenInstruction'
          description: Additional information for Flatten instructions.
    Status:
      properties:
        code:
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
          type: integer
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        details:
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
      id: Status
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
    WorkerThreadScalingReport:
      properties:
        currentThreadCount:
          type: integer
          format: int32
          description: Current number of active threads in a worker.
      description: Contains information about the thread scaling information of a worker.
      type: object
      id: WorkerThreadScalingReport
    StreamingSideInputLocation:
      id: StreamingSideInputLocation
      description: Identifies the location of a streaming side input.
      properties:
        tag:
          description: Identifies the particular side input within the streaming Dataflow job.
          type: string
        stateFamily:
          type: string
          description: Identifies the state family where this side input is stored.
      type: object
    SourceGetMetadataResponse:
      properties:
        metadata:
          description: The computed metadata.
          $ref: '#/components/schemas/SourceMetadata'
      type: object
      id: SourceGetMetadataResponse
      description: The result of a SourceGetMetadataOperation.
    HotKeyInfo:
      description: Information about a hot key.
      type: object
      id: HotKeyInfo
      properties:
        hotKeyAge:
          description: The age of the hot key measured from when it was first detected.
          format: google-duration
          type: string
        keyTruncated:
          description: 'If true, then the above key is truncated and cannot be deserialized. This occurs if the key above is populated and the key size is >5MB.'
          type: boolean
        key:
          type: string
          description: 'A detected hot key that is causing limited parallelism. This field will be populated only if the following flag is set to true: "--enable_hot_key_logging".'
    IntegerGauge:
      id: IntegerGauge
      properties:
        timestamp:
          type: string
          format: google-datetime
          description: The time at which this value was measured. Measured as msecs from epoch.
        value:
          $ref: '#/components/schemas/SplitInt64'
          description: The value of the variable represented by this gauge.
      description: A metric value representing temporal values of a variable.
      type: object
    StreamingStragglerInfo:
      id: StreamingStragglerInfo
      properties:
        endTime:
          format: google-datetime
          type: string
          description: End time of this straggler.
        dataWatermarkLag:
          format: google-duration
          type: string
          description: The event-time watermark lag at the time of the straggler detection.
        systemWatermarkLag:
          format: google-duration
          type: string
          description: The system watermark lag at the time of the straggler detection.
        startTime:
          description: Start time of this straggler.
          type: string
          format: google-datetime
        workerName:
          description: Name of the worker where the straggler was detected.
          type: string
      type: object
      description: Information useful for streaming straggler identification and debugging.
    StreamLocation:
      description: 'Describes a stream of data, either as input to be processed or as output of a streaming Dataflow job.'
      type: object
      id: StreamLocation
      properties:
        customSourceLocation:
          $ref: '#/components/schemas/CustomSourceLocation'
          description: The stream is a custom source.
        sideInputLocation:
          description: The stream is a streaming side input.
          $ref: '#/components/schemas/StreamingSideInputLocation'
        pubsubLocation:
          $ref: '#/components/schemas/PubsubLocation'
          description: The stream is a pubsub stream.
        streamingStageLocation:
          $ref: '#/components/schemas/StreamingStageLocation'
          description: The stream is part of another computation within the current streaming Dataflow job.
    KeyRangeLocation:
      properties:
        deliveryEndpoint:
          description: The physical location of this range assignment to be used for streaming computation cross-worker message delivery.
          type: string
        end:
          type: string
          description: The end (exclusive) of the key range.
        deprecatedPersistentDirectory:
          deprecated: true
          type: string
          description: 'DEPRECATED. The location of the persistent state for this range, as a persistent directory in the worker local filesystem.'
        start:
          description: The start (inclusive) of the key range.
          type: string
        dataDisk:
          description: 'The name of the data disk where data for this range is stored. This name is local to the Google Cloud Platform project and uniquely identifies the disk within that project, for example "myproject-1014-104817-4c2-harness-0-disk-1".'
          type: string
      description: Location information for a specific key-range of a sharded computation. Currently we only support UTF-8 character splits to simplify encoding into JSON.
      id: KeyRangeLocation
      type: object
    ApproximateSplitRequest:
      properties:
        fractionConsumed:
          type: number
          description: 'A fraction at which to split the work item, from 0.0 (beginning of the input) to 1.0 (end of the input).'
          format: double
        fractionOfRemainder:
          description: 'The fraction of the remainder of work to split the work item at, from 0.0 (split at the current position) to 1.0 (end of the input).'
          type: number
          format: double
        position:
          description: A Position at which to split the work item.
          $ref: '#/components/schemas/Position'
      description: A suggestion by the service to the worker to dynamically split the WorkItem.
      id: ApproximateSplitRequest
      type: object
    KeyRangeDataDiskAssignment:
      id: KeyRangeDataDiskAssignment
      properties:
        start:
          description: The start (inclusive) of the key range.
          type: string
        end:
          type: string
          description: The end (exclusive) of the key range.
        dataDisk:
          type: string
          description: 'The name of the data disk where data for this range is stored. This name is local to the Google Cloud Platform project and uniquely identifies the disk within that project, for example "myproject-1014-104817-4c2-harness-0-disk-1".'
      description: Data disk assignment information for a specific key-range of a sharded computation. Currently we only support UTF-8 character splits to simplify encoding into JSON.
      type: object
    StateFamilyConfig:
      type: object
      description: State family configuration.
      id: StateFamilyConfig
      properties:
        isRead:
          type: boolean
          description: 'If true, this family corresponds to a read operation.'
        stateFamily:
          description: The state family value.
          type: string
    WorkItem:
      id: WorkItem
      properties:
        streamingComputationTask:
          description: Additional information for StreamingComputationTask WorkItems.
          $ref: '#/components/schemas/StreamingComputationTask'
        leaseExpireTime:
          format: google-datetime
          type: string
          description: Time when the lease on this Work will expire.
        id:
          description: Identifies this WorkItem.
          type: string
          format: int64
        jobId:
          description: Identifies the workflow job this WorkItem belongs to.
          type: string
        reportStatusInterval:
          format: google-duration
          type: string
          description: Recommended reporting interval.
        mapTask:
          description: Additional information for MapTask WorkItems.
          $ref: '#/components/schemas/MapTask'
        seqMapTask:
          description: Additional information for SeqMapTask WorkItems.
          $ref: '#/components/schemas/SeqMapTask'
        streamingSetupTask:
          $ref: '#/components/schemas/StreamingSetupTask'
          description: Additional information for StreamingSetupTask WorkItems.
        projectId:
          description: Identifies the cloud project this WorkItem belongs to.
          type: string
        sourceOperationTask:
          description: Additional information for source operation WorkItems.
          $ref: '#/components/schemas/SourceOperationRequest'
        configuration:
          type: string
          description: Work item-specific configuration as an opaque blob.
        streamingConfigTask:
          $ref: '#/components/schemas/StreamingConfigTask'
          description: Additional information for StreamingConfigTask WorkItems.
        packages:
          type: array
          description: Any required packages that need to be fetched in order to execute this WorkItem.
          items:
            $ref: '#/components/schemas/Package'
        initialReportIndex:
          description: The initial index to use when reporting the status of the WorkItem.
          type: string
          format: int64
        shellTask:
          description: Additional information for ShellTask WorkItems.
          $ref: '#/components/schemas/ShellTask'
      description: WorkItem represents basic information about a WorkItem to be executed in the cloud.
      type: object
    TopologyConfig:
      type: object
      id: TopologyConfig
      description: 'Global topology of the streaming Dataflow job, including all computations and their sharded locations.'
      properties:
        userStageToComputationNameMap:
          type: object
          additionalProperties:
            type: string
          description: Maps user stage names to stable computation names.
        forwardingKeyBits:
          description: The size (in bits) of keys that will be assigned to source messages.
          format: int32
          type: integer
        persistentStateVersion:
          description: Version number for persistent state.
          format: int32
          type: integer
        dataDiskAssignments:
          items:
            $ref: '#/components/schemas/DataDiskAssignment'
          description: The disks assigned to a streaming Dataflow job.
          type: array
        computations:
          description: The computations associated with a streaming Dataflow job.
          items:
            $ref: '#/components/schemas/ComputationTopology'
          type: array
    MetricStructuredName:
      properties:
        context:
          type: object
          additionalProperties:
            type: string
          description: 'Zero or more labeled fields which identify the part of the job this metric is associated with, such as the name of a step or collection. For example, built-in counters associated with steps will have context[''step''] = . Counters associated with PCollections in the SDK will have context[''pcollection''] = .'
        origin:
          description: Origin (namespace) of metric name. May be blank for user-define metrics; will be "dataflow" for metrics defined by the Dataflow service or SDK.
          type: string
        name:
          description: Worker-defined metric name.
          type: string
      description: 'Identifies a metric, by describing the source which generated the metric.'
      id: MetricStructuredName
      type: object
    LaunchFlexTemplateRequest:
      type: object
      properties:
        launchParameter:
          description: Required. Parameter to launch a job form Flex Template.
          $ref: '#/components/schemas/LaunchFlexTemplateParameter'
        validateOnly:
          description: 'If true, the request is validated but not actually executed. Defaults to false.'
          type: boolean
      id: LaunchFlexTemplateRequest
      description: A request to launch a Cloud Dataflow job from a FlexTemplate.
    SideInputInfo:
      type: object
      description: Information about a side input of a DoFn or an input of a SeqDoFn.
      properties:
        kind:
          additionalProperties:
            description: Properties of the object.
            type: any
          type: object
          description: How to interpret the source element(s) as a side input value.
        tag:
          type: string
          description: The id of the tag the user code will access this side input by; this should correspond to the tag of some MultiOutputInfo.
        sources:
          items:
            $ref: '#/components/schemas/Source'
          description: 'The source(s) to read element(s) from to get the value of this side input. If more than one source, then the elements are taken from the sources, in the specified order if order matters. At least one source is required.'
          type: array
      id: SideInputInfo
    DataSamplingReport:
      id: DataSamplingReport
      type: object
      description: Contains per-worker telemetry about the data sampling feature.
      properties:
        elementsSampledBytes:
          format: int64
          type: string
          description: Optional. Delta of bytes sampled from previous report.
        persistenceErrorsCount:
          type: string
          description: Optional. Delta of errors counts from persisting the samples from previous report.
          format: int64
        elementsSampledCount:
          description: Optional. Delta of number of elements sampled from previous report.
          type: string
          format: int64
        translationErrorsCount:
          format: int64
          description: 'Optional. Delta of errors counts from retrieving, or translating the samples from previous report.'
          type: string
        pcollectionsSampledCount:
          format: int64
          type: string
          description: Optional. Delta of number of PCollections sampled from previous report.
        exceptionsSampledCount:
          type: string
          format: int64
          description: Optional. Delta of number of samples taken from user code exceptions from previous report.
        bytesWrittenDelta:
          format: int64
          description: Optional. Delta of bytes written to file from previous report.
          type: string
    PubSubIODetails:
      id: PubSubIODetails
      type: object
      description: Metadata for a Pub/Sub connector used by the job.
      properties:
        subscription:
          type: string
          description: Subscription used in the connection.
        topic:
          description: Topic accessed in the connection.
          type: string
    DatastoreIODetails:
      type: object
      id: DatastoreIODetails
      description: Metadata for a Datastore connector used by the job.
      properties:
        namespace:
          type: string
          description: Namespace used in the connection.
        projectId:
          description: ProjectId accessed in the connection.
          type: string
    LeaseWorkItemResponse:
      type: object
      properties:
        workItems:
          description: A list of the leased WorkItems.
          items:
            $ref: '#/components/schemas/WorkItem'
          type: array
        unifiedWorkerResponse:
          description: Untranslated bag-of-bytes WorkResponse for UnifiedWorker.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
      description: Response to a request to lease WorkItems.
      id: LeaseWorkItemResponse
    WriteInstruction:
      properties:
        input:
          $ref: '#/components/schemas/InstructionInput'
          description: The input.
        sink:
          $ref: '#/components/schemas/Sink'
          description: The sink to write to.
      type: object
      description: 'An instruction that writes records. Takes one input, produces no outputs.'
      id: WriteInstruction
    StragglerInfo:
      description: Information useful for straggler identification and debugging.
      id: StragglerInfo
      type: object
      properties:
        startTime:
          type: string
          description: The time when the work item attempt became a straggler.
          format: google-datetime
        causes:
          type: object
          description: 'The straggler causes, keyed by the string representation of the StragglerCause enum and contains specialized debugging information for each straggler cause.'
          additionalProperties:
            $ref: '#/components/schemas/StragglerDebuggingInfo'
    ReportWorkItemStatusRequest:
      properties:
        location:
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the WorkItem''s job.'
          type: string
        workItemStatuses:
          items:
            $ref: '#/components/schemas/WorkItemStatus'
          type: array
          description: 'The order is unimportant, except that the order of the WorkItemServiceState messages in the ReportWorkItemStatusResponse corresponds to the order of WorkItemStatus messages here.'
        currentWorkerTime:
          description: The current timestamp at the worker.
          format: google-datetime
          type: string
        unifiedWorkerRequest:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: Untranslated bag-of-bytes WorkProgressUpdateRequest from UnifiedWorker.
        workerId:
          type: string
          description: 'The ID of the worker reporting the WorkItem status. If this does not match the ID of the worker which the Dataflow service believes currently has the lease on the WorkItem, the report will be dropped (with an error response).'
      description: Request to report the status of WorkItems.
      id: ReportWorkItemStatusRequest
      type: object
    StreamingStageLocation:
      id: StreamingStageLocation
      type: object
      properties:
        streamId:
          description: Identifies the particular stream within the streaming Dataflow job.
          type: string
      description: 'Identifies the location of a streaming computation stage, for stage-to-stage communication.'
    ProgressTimeseries:
      properties:
        currentProgress:
          format: double
          type: number
          description: 'The current progress of the component, in the range [0,1].'
        dataPoints:
          description: History of progress for the component. Points are sorted by time.
          type: array
          items:
            $ref: '#/components/schemas/Point'
      description: Information about the progress of some component of job execution.
      type: object
      id: ProgressTimeseries
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
  x-stackQL-resources:
    templates:
      id: google.dataflow.templates
      name: templates
      title: Templates
      methods:
        projects_templates_create:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1templates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_templates_launch:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1templates:launch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_templates_get:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1templates:get/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_templates_create:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1templates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_templates_launch:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1templates:launch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_templates_get:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1templates:get/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/templates/methods/projects_locations_templates_get'
          - $ref: '#/components/x-stackQL-resources/templates/methods/projects_templates_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/templates/methods/projects_locations_templates_create'
          - $ref: '#/components/x-stackQL-resources/templates/methods/projects_templates_create'
        update: []
        delete: []
    snapshots:
      id: google.dataflow.snapshots
      name: snapshots
      title: Snapshots
      methods:
        projects_snapshots_get:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1snapshots~1{snapshotId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_snapshots_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1snapshots/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_delete_snapshots:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1snapshots/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_snapshots_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1snapshots/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_snapshots_delete:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1snapshots~1{snapshotId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_snapshots_get:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1snapshots~1{snapshotId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_snapshots_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1snapshots/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_jobs_snapshots_list'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_snapshots_get'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_snapshots_get'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_snapshots_list'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_snapshots_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_snapshots_delete'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_delete_snapshots'
    flex_templates:
      id: google.dataflow.flex_templates
      name: flex_templates
      title: Flex Templates
      methods:
        projects_locations_flex_templates_launch:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1flexTemplates:launch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    messages:
      id: google.dataflow.messages
      name: messages
      title: Messages
      methods:
        projects_locations_jobs_messages_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1messages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobMessages
        _projects_locations_jobs_messages_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1messages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_messages_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1messages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobMessages
        _projects_jobs_messages_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1messages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/messages/methods/projects_locations_jobs_messages_list'
          - $ref: '#/components/x-stackQL-resources/messages/methods/projects_jobs_messages_list'
        insert: []
        update: []
        delete: []
    stages_execution_details:
      id: google.dataflow.stages_execution_details
      name: stages_execution_details
      title: Stages Execution Details
      methods:
        projects_locations_jobs_stages_get_execution_details:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1stages~1{stageId}~1executionDetails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.workers
        _projects_locations_jobs_stages_get_execution_details:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1stages~1{stageId}~1executionDetails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/stages_execution_details/methods/projects_locations_jobs_stages_get_execution_details'
        insert: []
        update: []
        delete: []
    work_items:
      id: google.dataflow.work_items
      name: work_items
      title: Work Items
      methods:
        projects_locations_jobs_work_items_lease:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1workItems:lease/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_work_items_report_status:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1workItems:reportStatus/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_work_items_report_status:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1workItems:reportStatus/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_work_items_lease:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1workItems:lease/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    debug_config:
      id: google.dataflow.debug_config
      name: debug_config
      title: Debug Config
      methods:
        projects_locations_jobs_debug_get_config:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1debug~1getConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_debug_get_config:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1debug~1getConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    debug:
      id: google.dataflow.debug
      name: debug
      title: Debug
      methods:
        projects_locations_jobs_debug_send_capture:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1debug~1sendCapture/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_debug_send_capture:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1debug~1sendCapture/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    jobs_metrics:
      id: google.dataflow.jobs_metrics
      name: jobs_metrics
      title: Jobs Metrics
      methods:
        projects_locations_jobs_get_metrics:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1metrics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_get_metrics:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1metrics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs_metrics/methods/projects_locations_jobs_get_metrics'
          - $ref: '#/components/x-stackQL-resources/jobs_metrics/methods/projects_jobs_get_metrics'
        insert: []
        update: []
        delete: []
    jobs:
      id: google.dataflow.jobs
      name: jobs
      title: Jobs
      methods:
        projects_locations_jobs_update:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_get:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_snapshot:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}:snapshot/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_create:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobs
        _projects_locations_jobs_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_create:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobs
        _projects_jobs_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_update:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_get:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_aggregated:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs:aggregated/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_snapshot:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}:snapshot/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_jobs_get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_jobs_list'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_jobs_get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_jobs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_jobs_create'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_jobs_create'
        update: []
        delete: []
    jobs_execution_details:
      id: google.dataflow.jobs_execution_details
      name: jobs_execution_details
      title: Jobs Execution Details
      methods:
        projects_locations_jobs_get_execution_details:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1executionDetails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.stages
        _projects_locations_jobs_get_execution_details:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1executionDetails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs_execution_details/methods/projects_locations_jobs_get_execution_details'
        insert: []
        update: []
        delete: []
    locations:
      id: google.dataflow.locations
      name: locations
      title: Locations
      methods:
        projects_locations_worker_messages:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1WorkerMessages/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    projects:
      id: google.dataflow.projects
      name: projects
      title: Projects
      methods:
        projects_worker_messages:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1WorkerMessages/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  '/v1b3/projects/{projectId}/templates':
    parameters: &ref_1
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
    post:
      description: Creates a Cloud Dataflow job from a template. Do not enter confidential information when you supply string values using the API.
      operationId: dataflow.projects.templates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobFromTemplateRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-method: projects_templates_create
      x-stackQL-verb: insert
  '/v1b3/projects/{projectId}/templates:launch':
    parameters: *ref_1
    post:
      description: Launch a template.
      operationId: dataflow.projects.templates.launch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaunchTemplateParameters'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchTemplateResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: gcsPath
          schema:
            type: string
        - in: query
          name: dynamicTemplate.gcsPath
          schema:
            type: string
        - in: query
          name: dynamicTemplate.stagingLocation
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: location
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-method: projects_templates_launch
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/templates:get':
    parameters: *ref_1
    get:
      description: Get the template associated with a template.
      operationId: dataflow.projects.templates.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplateResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: gcsPath
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-method: projects_templates_get
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/snapshots/{snapshotId}':
    parameters: *ref_1
    get:
      description: Gets information about a snapshot.
      operationId: dataflow.projects.snapshots.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotId
          required: true
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_snapshots_get
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/snapshots':
    parameters: *ref_1
    get:
      description: Lists snapshots.
      operationId: dataflow.projects.snapshots.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: jobId
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_snapshots_list
      x-stackQL-verb: select
    delete:
      description: Deletes a snapshot.
      operationId: dataflow.projects.deleteSnapshots
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSnapshotResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: snapshotId
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_delete_snapshots
      x-stackQL-verb: delete
  '/v1b3/projects/{projectId}/locations/{location}/templates':
    parameters: *ref_1
    post:
      description: Creates a Cloud Dataflow job from a template. Do not enter confidential information when you supply string values using the API.
      operationId: dataflow.projects.locations.templates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobFromTemplateRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-method: projects_locations_templates_create
      x-stackQL-verb: insert
  '/v1b3/projects/{projectId}/locations/{location}/templates:launch':
    parameters: *ref_1
    post:
      description: Launch a template.
      operationId: dataflow.projects.locations.templates.launch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaunchTemplateParameters'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchTemplateResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: query
          name: dynamicTemplate.gcsPath
          schema:
            type: string
        - in: query
          name: dynamicTemplate.stagingLocation
          schema:
            type: string
        - in: query
          name: gcsPath
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: templates
      x-stackQL-method: projects_locations_templates_launch
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/templates:get':
    parameters: *ref_1
    get:
      description: Get the template associated with a template.
      operationId: dataflow.projects.locations.templates.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplateResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: query
          name: gcsPath
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-method: projects_locations_templates_get
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/locations/{location}/flexTemplates:launch':
    parameters: *ref_1
    post:
      description: Launch a job with a FlexTemplate.
      operationId: dataflow.projects.locations.flexTemplates.launch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaunchFlexTemplateRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchFlexTemplateResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
      x-stackQL-resource: flex_templates
      x-stackQL-method: projects_locations_flex_templates_launch
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/messages':
    parameters: *ref_1
    get:
      description: 'Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.messages.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.messages.list` is not recommended, as you can only request the status of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.locations.jobs.messages.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobMessagesResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: minimumImportance
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: endTime
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
      x-stackQL-resource: messages
      x-stackQL-method: projects_locations_jobs_messages_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.jobMessages
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/stages/{stageId}/executionDetails':
    parameters: *ref_1
    get:
      description: Request detailed information about the execution status of a stage of the job. EXPERIMENTAL. This API is subject to change or removal without notice.
      operationId: dataflow.projects.locations.jobs.stages.getExecutionDetails
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageExecutionDetails'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: path
          name: stageId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: endTime
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
      x-stackQL-resource: stages_execution_details
      x-stackQL-method: projects_locations_jobs_stages_get_execution_details
      x-stackQL-verb: select
      x-stackQL-objectKey: $.workers
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/workItems:lease':
    parameters: *ref_1
    post:
      description: Leases a dataflow WorkItem to run.
      operationId: dataflow.projects.locations.jobs.workItems.lease
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaseWorkItemRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseWorkItemResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: work_items
      x-stackQL-method: projects_locations_jobs_work_items_lease
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/workItems:reportStatus':
    parameters: *ref_1
    post:
      description: Reports the status of dataflow WorkItems leased by a worker.
      operationId: dataflow.projects.locations.jobs.workItems.reportStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportWorkItemStatusRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportWorkItemStatusResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: work_items
      x-stackQL-method: projects_locations_jobs_work_items_report_status
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/snapshots':
    parameters: *ref_1
    get:
      description: Lists snapshots.
      operationId: dataflow.projects.locations.jobs.snapshots.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_locations_jobs_snapshots_list
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/debug/getConfig':
    parameters: *ref_1
    post:
      description: Get encoded debug configuration for component. Not cacheable.
      operationId: dataflow.projects.locations.jobs.debug.getConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDebugConfigRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDebugConfigResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: debug_config
      x-stackQL-method: projects_locations_jobs_debug_get_config
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/debug/sendCapture':
    parameters: *ref_1
    post:
      description: Send encoded debug capture data for component.
      operationId: dataflow.projects.locations.jobs.debug.sendCapture
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendDebugCaptureRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendDebugCaptureResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: debug
      x-stackQL-method: projects_locations_jobs_debug_send_capture
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/metrics':
    parameters: *ref_1
    get:
      description: 'Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.getMetrics` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.getMetrics` is not recommended, as you can only request the status of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.locations.jobs.getMetrics
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMetrics'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
      x-stackQL-resource: jobs_metrics
      x-stackQL-method: projects_locations_jobs_get_metrics
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}':
    parameters: *ref_1
    put:
      description: 'Updates the state of an existing Cloud Dataflow job. To update the state of an existing job, we recommend using `projects.locations.jobs.update` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.update` is not recommended, as you can only update the state of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.locations.jobs.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_jobs_update
      x-stackQL-verb: exec
    get:
      description: 'Gets the state of the specified Cloud Dataflow job. To get the state of a job, we recommend using `projects.locations.jobs.get` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.get` is not recommended, as you can only get the state of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.locations.jobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_jobs_get
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}:snapshot':
    parameters: *ref_1
    post:
      description: Snapshot the state of a streaming job.
      operationId: dataflow.projects.locations.jobs.snapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_jobs_snapshot
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/jobs':
    parameters: *ref_1
    post:
      description: 'Creates a Cloud Dataflow job. To create a job, we recommend using `projects.locations.jobs.create` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.create` is not recommended, as your job will always start in `us-central1`. Do not enter confidential information when you supply string values using the API.'
      operationId: dataflow.projects.locations.jobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: query
          name: replaceJobId
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_jobs_create
      x-stackQL-verb: insert
    get:
      description: 'List the jobs of a project. To list the jobs of a project in a region, we recommend using `projects.locations.jobs.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To list the all jobs across all regions, use `projects.jobs.aggregated`. Using `projects.jobs.list` is not recommended, because you can only get the list of jobs that are running in `us-central1`. `projects.locations.jobs.list` and `projects.jobs.list` support filtering the list of jobs by name. Filtering by name isn''t supported by `projects.jobs.aggregated`.'
      operationId: dataflow.projects.locations.jobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_jobs_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.jobs
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/executionDetails':
    parameters: *ref_1
    get:
      description: Request detailed information about the execution status of the job. EXPERIMENTAL. This API is subject to change or removal without notice.
      operationId: dataflow.projects.locations.jobs.getExecutionDetails
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecutionDetails'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: jobs_execution_details
      x-stackQL-method: projects_locations_jobs_get_execution_details
      x-stackQL-verb: select
      x-stackQL-objectKey: $.stages
  '/v1b3/projects/{projectId}/locations/{location}/snapshots/{snapshotId}':
    parameters: *ref_1
    delete:
      description: Deletes a snapshot.
      operationId: dataflow.projects.locations.snapshots.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSnapshotResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: snapshotId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_locations_snapshots_delete
      x-stackQL-verb: delete
    get:
      description: Gets information about a snapshot.
      operationId: dataflow.projects.locations.snapshots.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: snapshotId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_locations_snapshots_get
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/locations/{location}/snapshots':
    parameters: *ref_1
    get:
      description: Lists snapshots.
      operationId: dataflow.projects.locations.snapshots.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: query
          name: jobId
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_locations_snapshots_list
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/locations/{location}/WorkerMessages':
    parameters: *ref_1
    post:
      description: Send a worker_message to the service.
      operationId: dataflow.projects.locations.workerMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendWorkerMessagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendWorkerMessagesResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_worker_messages
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/jobs':
    parameters: *ref_1
    post:
      description: 'Creates a Cloud Dataflow job. To create a job, we recommend using `projects.locations.jobs.create` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.create` is not recommended, as your job will always start in `us-central1`. Do not enter confidential information when you supply string values using the API.'
      operationId: dataflow.projects.jobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: replaceJobId
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_jobs_create
      x-stackQL-verb: insert
    get:
      description: 'List the jobs of a project. To list the jobs of a project in a region, we recommend using `projects.locations.jobs.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To list the all jobs across all regions, use `projects.jobs.aggregated`. Using `projects.jobs.list` is not recommended, because you can only get the list of jobs that are running in `us-central1`. `projects.locations.jobs.list` and `projects.jobs.list` support filtering the list of jobs by name. Filtering by name isn''t supported by `projects.jobs.aggregated`.'
      operationId: dataflow.projects.jobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: location
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_jobs_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.jobs
  '/v1b3/projects/{projectId}/jobs/{jobId}':
    parameters: *ref_1
    put:
      description: 'Updates the state of an existing Cloud Dataflow job. To update the state of an existing job, we recommend using `projects.locations.jobs.update` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.update` is not recommended, as you can only update the state of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.jobs.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_jobs_update
      x-stackQL-verb: exec
    get:
      description: 'Gets the state of the specified Cloud Dataflow job. To get the state of a job, we recommend using `projects.locations.jobs.get` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.get` is not recommended, as you can only get the state of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.jobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_jobs_get
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/jobs:aggregated':
    parameters: *ref_1
    get:
      description: 'List the jobs of a project across all regions. **Note:** This method doesn''t support filtering the list of jobs by name.'
      operationId: dataflow.projects.jobs.aggregated
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: jobs
      x-stackQL-method: projects_jobs_aggregated
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/jobs/{jobId}/metrics':
    parameters: *ref_1
    get:
      description: 'Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.getMetrics` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.getMetrics` is not recommended, as you can only request the status of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.jobs.getMetrics
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMetrics'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
      x-stackQL-resource: jobs_metrics
      x-stackQL-method: projects_jobs_get_metrics
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/jobs/{jobId}:snapshot':
    parameters: *ref_1
    post:
      description: Snapshot the state of a streaming job.
      operationId: dataflow.projects.jobs.snapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_jobs_snapshot
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/jobs/{jobId}/workItems:reportStatus':
    parameters: *ref_1
    post:
      description: Reports the status of dataflow WorkItems leased by a worker.
      operationId: dataflow.projects.jobs.workItems.reportStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportWorkItemStatusRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportWorkItemStatusResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: work_items
      x-stackQL-method: projects_jobs_work_items_report_status
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/jobs/{jobId}/workItems:lease':
    parameters: *ref_1
    post:
      description: Leases a dataflow WorkItem to run.
      operationId: dataflow.projects.jobs.workItems.lease
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaseWorkItemRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseWorkItemResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: work_items
      x-stackQL-method: projects_jobs_work_items_lease
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/jobs/{jobId}/messages':
    parameters: *ref_1
    get:
      description: 'Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.messages.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.messages.list` is not recommended, as you can only request the status of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.jobs.messages.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobMessagesResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: endTime
          schema:
            type: string
        - in: query
          name: minimumImportance
          schema:
            type: string
      x-stackQL-resource: messages
      x-stackQL-method: projects_jobs_messages_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.jobMessages
  '/v1b3/projects/{projectId}/jobs/{jobId}/debug/getConfig':
    parameters: *ref_1
    post:
      description: Get encoded debug configuration for component. Not cacheable.
      operationId: dataflow.projects.jobs.debug.getConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDebugConfigRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDebugConfigResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: debug_config
      x-stackQL-method: projects_jobs_debug_get_config
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/jobs/{jobId}/debug/sendCapture':
    parameters: *ref_1
    post:
      description: Send encoded debug capture data for component.
      operationId: dataflow.projects.jobs.debug.sendCapture
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendDebugCaptureRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendDebugCaptureResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: debug
      x-stackQL-method: projects_jobs_debug_send_capture
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/WorkerMessages':
    parameters: *ref_1
    post:
      description: Send a worker_message to the service.
      operationId: dataflow.projects.workerMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendWorkerMessagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendWorkerMessagesResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-method: projects_worker_messages
      x-stackQL-verb: exec
