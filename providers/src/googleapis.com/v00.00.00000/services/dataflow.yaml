openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Dataflow API
  description: Manages Google Cloud Dataflow projects on Google Cloud Platform.
  version: v1b3
  x-discovery-doc-revision: '20230812'
  x-generated-date: '2023-08-28'
externalDocs:
  url: 'https://cloud.google.com/dataflow'
servers:
  - url: 'https://dataflow.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/userinfo.email': See your primary Google Account email address
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
            'https://www.googleapis.com/auth/compute.readonly': View your Google Compute Engine resources
            'https://www.googleapis.com/auth/compute': View and manage your Google Compute Engine resources
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    LaunchFlexTemplateRequest:
      type: object
      id: LaunchFlexTemplateRequest
      properties:
        launchParameter:
          description: Required. Parameter to launch a job form Flex Template.
          $ref: '#/components/schemas/LaunchFlexTemplateParameter'
        validateOnly:
          description: 'If true, the request is validated but not actually executed. Defaults to false.'
          type: boolean
      description: A request to launch a Cloud Dataflow job from a FlexTemplate.
    CreateJobFromTemplateRequest:
      properties:
        parameters:
          additionalProperties:
            type: string
          type: object
          description: The runtime parameters to pass to the job.
        jobName:
          type: string
          description: Required. The job name to use for the created job.
        location:
          type: string
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.'
        environment:
          $ref: '#/components/schemas/RuntimeEnvironment'
          description: The runtime environment for the job.
        gcsPath:
          type: string
          description: 'Required. A Cloud Storage path to the template from which to create the job. Must be a valid Cloud Storage URL, beginning with `gs://`.'
      id: CreateJobFromTemplateRequest
      description: A request to create a Cloud Dataflow job from a template.
      type: object
    AutoscalingSettings:
      description: Settings for WorkerPool autoscaling.
      type: object
      id: AutoscalingSettings
      properties:
        maxNumWorkers:
          description: The maximum number of workers to cap scaling at.
          type: integer
          format: int32
        algorithm:
          enumDescriptions:
            - 'The algorithm is unknown, or unspecified.'
            - Disable autoscaling.
            - Increase worker count over time to reduce job execution time.
          description: The algorithm to use for autoscaling.
          enum:
            - AUTOSCALING_ALGORITHM_UNKNOWN
            - AUTOSCALING_ALGORITHM_NONE
            - AUTOSCALING_ALGORITHM_BASIC
          type: string
    WorkerMessageCode:
      id: WorkerMessageCode
      type: object
      description: 'A message code is used to report status and error messages to the service. The message codes are intended to be machine readable. The service will take care of translating these into user understandable messages if necessary. Example use cases: 1. Worker processes reporting successful startup. 2. Worker processes reporting specific errors (e.g. package staging failure).'
      properties:
        parameters:
          description: 'Parameters contains specific information about the code. This is a struct to allow parameters of different types. Examples: 1. For a "HARNESS_STARTED" message parameters might provide the name of the worker and additional data like timing information. 2. For a "GCS_DOWNLOAD_ERROR" parameters might contain fields listing the Cloud Storage objects being downloaded and fields containing errors. In general complex data structures should be avoided. If a worker needs to send a specific and complicated data structure then please consider defining a new proto and adding it to the data oneof in WorkerMessageResponse. Conventions: Parameters should only be used for information that isn''t typically passed as a label. hostname and other worker identifiers should almost always be passed as labels since they will be included on most messages.'
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        code:
          type: string
          description: 'The code is a string intended for consumption by a machine that identifies the type of message being sent. Examples: 1. "HARNESS_STARTED" might be used to indicate the worker harness has started. 2. "GCS_DOWNLOAD_ERROR" might be used to indicate an error downloading a Cloud Storage file as part of the boot process of one of the worker containers. This is a string and not an enum to make it easy to add new codes without waiting for an API change.'
    SourceGetMetadataRequest:
      properties:
        source:
          description: Specification of the source whose metadata should be computed.
          $ref: '#/components/schemas/Source'
      id: SourceGetMetadataRequest
      description: A request to compute the SourceMetadata of a Source.
      type: object
    CustomSourceLocation:
      description: Identifies the location of a custom souce.
      properties:
        stateful:
          type: boolean
          description: Whether this source is stateful.
      id: CustomSourceLocation
      type: object
    ParDoInstruction:
      properties:
        sideInputs:
          description: Zero or more side inputs.
          type: array
          items:
            $ref: '#/components/schemas/SideInputInfo'
        userFn:
          type: object
          description: The user function to invoke.
          additionalProperties:
            description: Properties of the object.
            type: any
        numOutputs:
          format: int32
          type: integer
          description: The number of outputs.
        input:
          description: The input.
          $ref: '#/components/schemas/InstructionInput'
        multiOutputInfos:
          type: array
          items:
            $ref: '#/components/schemas/MultiOutputInfo'
          description: 'Information about each of the outputs, if user_fn is a MultiDoFn.'
      description: 'An instruction that does a ParDo operation. Takes one main input and zero or more side inputs, and produces zero or more outputs. Runs user code.'
      id: ParDoInstruction
      type: object
    HotKeyDetection:
      description: Proto describing a hot key detected on a given WorkItem.
      properties:
        hotKeyAge:
          format: google-duration
          description: The age of the hot key measured from when it was first detected.
          type: string
        systemName:
          type: string
          description: System-defined name of the step containing this hot key. Unique across the workflow.
        userStepName:
          description: User-provided name of the step that contains this hot key.
          type: string
      id: HotKeyDetection
      type: object
    StreamingStragglerInfo:
      description: Information useful for streaming straggler identification and debugging.
      id: StreamingStragglerInfo
      type: object
      properties:
        systemWatermarkLag:
          format: google-duration
          description: The system watermark lag at the time of the straggler detection.
          type: string
        workerName:
          type: string
          description: Name of the worker where the straggler was detected.
        startTime:
          description: Start time of this straggler.
          type: string
          format: google-datetime
        dataWatermarkLag:
          type: string
          format: google-duration
          description: The event-time watermark lag at the time of the straggler detection.
        endTime:
          description: End time of this straggler.
          format: google-datetime
          type: string
    Package:
      properties:
        location:
          description: 'The resource to read the package from. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket} bucket.storage.googleapis.com/'
          type: string
        name:
          description: The name of the package.
          type: string
      description: 'The packages that must be installed in order for a worker to run the steps of the Cloud Dataflow job that will be assigned to its worker pool. This is the mechanism by which the Cloud Dataflow SDK causes code to be loaded onto the workers. For example, the Cloud Dataflow Java SDK might use this to install jars containing the user''s code and all of the various dependencies (libraries, data files, etc.) required in order for that code to run.'
      type: object
      id: Package
    StageSummary:
      description: Information about a particular execution stage of a job.
      properties:
        metrics:
          description: Metrics for this stage.
          type: array
          items:
            $ref: '#/components/schemas/MetricUpdate'
        stragglerSummary:
          $ref: '#/components/schemas/StragglerSummary'
          description: Straggler summary for this stage.
        stageId:
          type: string
          description: ID of this stage
        startTime:
          description: Start time of this stage.
          type: string
          format: google-datetime
        progress:
          description: Progress for this stage. Only applicable to Batch jobs.
          $ref: '#/components/schemas/ProgressTimeseries'
        endTime:
          description: 'End time of this stage. If the work item is completed, this is the actual end time of the stage. Otherwise, it is the predicted end time.'
          format: google-datetime
          type: string
        state:
          enumDescriptions:
            - The component state is unknown or unspecified.
            - The component is not yet running.
            - The component is currently running.
            - The component succeeded.
            - The component failed.
            - Execution of the component was cancelled.
          description: State of this stage.
          type: string
          enum:
            - EXECUTION_STATE_UNKNOWN
            - EXECUTION_STATE_NOT_STARTED
            - EXECUTION_STATE_RUNNING
            - EXECUTION_STATE_SUCCEEDED
            - EXECUTION_STATE_FAILED
            - EXECUTION_STATE_CANCELLED
      type: object
      id: StageSummary
    WorkItemServiceState:
      description: The Dataflow service's idea of the current state of a WorkItem being processed by a worker.
      id: WorkItemServiceState
      type: object
      properties:
        hotKeyDetection:
          $ref: '#/components/schemas/HotKeyDetection'
          description: 'A hot key is a symptom of poor data distribution in which there are enough elements mapped to a single key to impact pipeline performance. When present, this field includes metadata associated with any hot key.'
        leaseExpireTime:
          type: string
          description: Time at which the current lease will expire.
          format: google-datetime
        reportStatusInterval:
          description: New recommended reporting interval.
          type: string
          format: google-duration
        harnessData:
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
          description: 'Other data returned by the service, specific to the particular worker harness.'
        splitRequest:
          description: The progress point in the WorkItem where the Dataflow service suggests that the worker truncate the task.
          $ref: '#/components/schemas/ApproximateSplitRequest'
        suggestedStopPoint:
          deprecated: true
          description: DEPRECATED in favor of split_request.
          $ref: '#/components/schemas/ApproximateProgress'
        suggestedStopPosition:
          deprecated: true
          $ref: '#/components/schemas/Position'
          description: 'Obsolete, always empty.'
        completeWorkStatus:
          description: 'If set, a request to complete the work item with the given status. This will not be set to OK, unless supported by the specific kind of WorkItem. It can be used for the backend to indicate a WorkItem must terminate, e.g., for aborting work.'
          $ref: '#/components/schemas/Status'
        nextReportIndex:
          description: 'The index value to use for the next report sent by the worker. Note: If the report call fails for whatever reason, the worker should reuse this index for subsequent report attempts.'
          format: int64
          type: string
        metricShortId:
          type: array
          description: 'The short ids that workers should use in subsequent metric updates. Workers should strive to use short ids whenever possible, but it is ok to request the short_id again if a worker lost track of it (e.g. if the worker is recovering from a crash). NOTE: it is possible that the response may have short ids for a subset of the metrics.'
          items:
            $ref: '#/components/schemas/MetricShortId'
    ExecutionStageSummary:
      type: object
      id: ExecutionStageSummary
      properties:
        outputSource:
          items:
            $ref: '#/components/schemas/StageSource'
          type: array
          description: Output sources for this stage.
        componentTransform:
          description: Transforms that comprise this execution stage.
          type: array
          items:
            $ref: '#/components/schemas/ComponentTransform'
        name:
          description: Dataflow service generated name for this stage.
          type: string
        componentSource:
          type: array
          description: Collections produced and consumed by component transforms of this stage.
          items:
            $ref: '#/components/schemas/ComponentSource'
        inputSource:
          type: array
          description: Input sources for this stage.
          items:
            $ref: '#/components/schemas/StageSource'
        prerequisiteStage:
          description: Other stages that must complete before this stage can run.
          items:
            type: string
          type: array
        kind:
          type: string
          description: Type of transform this stage is executing.
          enumDescriptions:
            - Unrecognized transform type.
            - ParDo transform.
            - Group By Key transform.
            - Flatten transform.
            - Read transform.
            - Write transform.
            - 'Constructs from a constant value, such as with Create.of.'
            - Creates a Singleton view of a collection.
            - 'Opening or closing a shuffle session, often as part of a GroupByKey.'
          enum:
            - UNKNOWN_KIND
            - PAR_DO_KIND
            - GROUP_BY_KEY_KIND
            - FLATTEN_KIND
            - READ_KIND
            - WRITE_KIND
            - CONSTANT_KIND
            - SINGLETON_KIND
            - SHUFFLE_KIND
        id:
          description: Dataflow service generated id for this stage.
          type: string
      description: 'Description of the composing transforms, names/ids, and input/outputs of a stage of execution. Some composing transforms and sources may have been generated by the Dataflow service during execution planning.'
    IntegerGauge:
      properties:
        timestamp:
          description: The time at which this value was measured. Measured as msecs from epoch.
          format: google-datetime
          type: string
        value:
          $ref: '#/components/schemas/SplitInt64'
          description: The value of the variable represented by this gauge.
      id: IntegerGauge
      type: object
      description: A metric value representing temporal values of a variable.
    SendDebugCaptureResponse:
      id: SendDebugCaptureResponse
      type: object
      description: Response to a send capture request. nothing
      properties: {}
    FlexTemplateRuntimeEnvironment:
      type: object
      properties:
        network:
          description: 'Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".'
          type: string
        stagingLocation:
          description: 'The Cloud Storage path for staging local files. Must be a valid Cloud Storage URL, beginning with `gs://`.'
          type: string
        launcherMachineType:
          type: string
          description: The machine type to use for launching the job. The default is n1-standard-1.
        autoscalingAlgorithm:
          type: string
          description: The algorithm to use for autoscaling
          enum:
            - AUTOSCALING_ALGORITHM_UNKNOWN
            - AUTOSCALING_ALGORITHM_NONE
            - AUTOSCALING_ALGORITHM_BASIC
          enumDescriptions:
            - 'The algorithm is unknown, or unspecified.'
            - Disable autoscaling.
            - Increase worker count over time to reduce job execution time.
        additionalUserLabels:
          description: 'Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1kg", "count": "3" }.'
          type: object
          additionalProperties:
            type: string
        additionalExperiments:
          items:
            type: string
          description: Additional experiment flags for the job.
          type: array
        flexrsGoal:
          description: 'Set FlexRS goal for the job. https://cloud.google.com/dataflow/docs/guides/flexrs'
          type: string
          enum:
            - FLEXRS_UNSPECIFIED
            - FLEXRS_SPEED_OPTIMIZED
            - FLEXRS_COST_OPTIMIZED
          enumDescriptions:
            - Run in the default mode.
            - Optimize for lower execution time.
            - Optimize for lower cost.
        diskSizeGb:
          type: integer
          format: int32
          description: 'Worker disk size, in gigabytes.'
        dumpHeapOnOom:
          description: 'If true, when processing time is spent almost entirely on garbage collection (GC), saves a heap dump before ending the thread or process. If false, ends the thread or process without saving a heap dump. Does not save a heap dump when the Java Virtual Machine (JVM) has an out of memory error during processing. The location of the heap file is either echoed back to the user, or the user is given the opportunity to download the heap file.'
          type: boolean
        tempLocation:
          description: 'The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.'
          type: string
        subnetwork:
          type: string
          description: 'Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form "https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK" or "regions/REGION/subnetworks/SUBNETWORK". If the subnetwork is located in a Shared VPC network, you must use the complete URL.'
        sdkContainerImage:
          type: string
          description: Docker registry location of container image to use for the 'worker harness. Default is the container for the version of the SDK. Note this field is only valid for portable pipelines.
        workerRegion:
          description: 'The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane''s region.'
          type: string
        enableLauncherVmSerialPortLogging:
          type: boolean
          description: If true serial port logging will be enabled for the launcher VM.
        saveHeapDumpsToGcsPath:
          type: string
          description: Cloud Storage bucket (directory) to upload heap dumps to. Enabling this field implies that `dump_heap_on_oom` is set to true.
        numWorkers:
          format: int32
          type: integer
          description: The initial number of Google Compute Engine instances for the job.
        ipConfiguration:
          enumDescriptions:
            - 'The configuration is unknown, or unspecified.'
            - Workers should have public IP addresses.
            - Workers should have private IP addresses.
          description: Configuration for VM IPs.
          type: string
          enum:
            - WORKER_IP_UNSPECIFIED
            - WORKER_IP_PUBLIC
            - WORKER_IP_PRIVATE
        enableStreamingEngine:
          type: boolean
          description: Whether to enable Streaming Engine for the job.
        maxWorkers:
          description: 'The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.'
          type: integer
          format: int32
        kmsKeyName:
          type: string
          description: 'Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/'
        zone:
          type: string
          description: 'The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.'
        serviceAccountEmail:
          description: The email address of the service account to run the job as.
          type: string
        workerZone:
          type: string
          description: 'The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane''s region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.'
        machineType:
          description: The machine type to use for the job. Defaults to the value from the template if not specified.
          type: string
      id: FlexTemplateRuntimeEnvironment
      description: The environment values to be set at runtime for flex template.
    FloatingPointList:
      type: object
      properties:
        elements:
          type: array
          items:
            format: double
            type: number
          description: Elements of the list.
      id: FloatingPointList
      description: A metric value representing a list of floating point numbers.
    SourceMetadata:
      description: 'Metadata about a Source useful for automatically optimizing and tuning the pipeline, etc.'
      id: SourceMetadata
      type: object
      properties:
        producesSortedKeys:
          description: Whether this source is known to produce key/value pairs with the (encoded) keys in lexicographically sorted order.
          type: boolean
        infinite:
          type: boolean
          description: Specifies that the size of this source is known to be infinite (this is a streaming source).
        estimatedSizeBytes:
          type: string
          format: int64
          description: 'An estimate of the total size (in bytes) of the data that would be read from this source. This estimate is in terms of external storage size, before any decompression or other processing done by the reader.'
    IntegerMean:
      id: IntegerMean
      type: object
      properties:
        count:
          description: The number of values being aggregated.
          $ref: '#/components/schemas/SplitInt64'
        sum:
          description: The sum of all values being aggregated.
          $ref: '#/components/schemas/SplitInt64'
      description: A representation of an integer mean metric contribution.
    InstructionOutput:
      type: object
      id: InstructionOutput
      description: An output of an instruction.
      properties:
        name:
          description: The user-provided name of this output.
          type: string
        systemName:
          description: System-defined name of this output. Unique across the workflow.
          type: string
        onlyCountValueBytes:
          type: boolean
          description: 'For system-generated byte and mean byte metrics, certain instructions should only report the value size.'
        codec:
          description: The codec to use to encode data being written via this output.
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
        onlyCountKeyBytes:
          description: 'For system-generated byte and mean byte metrics, certain instructions should only report the key size.'
          type: boolean
        originalName:
          type: string
          description: System-defined name for this output in the original workflow graph. Outputs that do not contribute to an original instruction do not set this.
    SdkHarnessContainerImage:
      properties:
        environmentId:
          type: string
          description: Environment ID for the Beam runner API proto Environment that corresponds to the current SDK Harness.
        containerImage:
          type: string
          description: A docker container image that resides in Google Container Registry.
        useSingleCorePerContainer:
          description: 'If true, recommends the Dataflow service to use only one core per SDK container instance with this image. If false (or unset) recommends using more than one core per SDK container instance with this image for efficiency. Note that Dataflow service may choose to override this property if needed.'
          type: boolean
        capabilities:
          items:
            type: string
          type: array
          description: 'The set of capabilities enumerated in the above Environment proto. See also [beam_runner_api.proto](https://github.com/apache/beam/blob/master/model/pipeline/src/main/proto/org/apache/beam/model/pipeline/v1/beam_runner_api.proto)'
      description: Defines an SDK harness container for executing Dataflow pipelines.
      id: SdkHarnessContainerImage
      type: object
    SpannerIODetails:
      description: Metadata for a Spanner connector used by the job.
      type: object
      properties:
        instanceId:
          type: string
          description: InstanceId accessed in the connection.
        projectId:
          description: ProjectId accessed in the connection.
          type: string
        databaseId:
          description: DatabaseId accessed in the connection.
          type: string
      id: SpannerIODetails
    StructuredMessage:
      description: 'A rich message format, including a human readable string, a key for identifying the message, and structured data associated with the message for programmatic consumption.'
      properties:
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
          description: The structured data associated with this message.
        messageKey:
          description: Identifier for this message type. Used by external systems to internationalize or personalize message.
          type: string
        messageText:
          type: string
          description: Human-readable version of message.
      id: StructuredMessage
      type: object
    RuntimeUpdatableParams:
      properties:
        minNumWorkers:
          format: int32
          description: The minimum number of workers to scale down to. This field is currently only supported for Streaming Engine jobs.
          type: integer
        maxNumWorkers:
          format: int32
          type: integer
          description: The maximum number of workers to cap autoscaling at. This field is currently only supported for Streaming Engine jobs.
      type: object
      description: Additional job parameters that can only be updated during runtime using the projects.jobs.update method. These fields have no effect when specified during job creation.
      id: RuntimeUpdatableParams
    SourceOperationResponse:
      properties:
        split:
          $ref: '#/components/schemas/SourceSplitResponse'
          description: A response to a request to split a source.
        getMetadata:
          $ref: '#/components/schemas/SourceGetMetadataResponse'
          description: A response to a request to get metadata about a source.
      id: SourceOperationResponse
      type: object
      description: 'The result of a SourceOperationRequest, specified in ReportWorkItemStatusRequest.source_operation when the work item is completed.'
    DerivedSource:
      type: object
      properties:
        derivationMode:
          enum:
            - SOURCE_DERIVATION_MODE_UNKNOWN
            - SOURCE_DERIVATION_MODE_INDEPENDENT
            - SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT
            - SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT
          type: string
          enumDescriptions:
            - 'The source derivation is unknown, or unspecified.'
            - Produce a completely independent Source with no base.
            - Produce a Source based on the Source being split.
            - Produce a Source based on the base of the Source being split.
          description: What source to base the produced source on (if any).
        source:
          description: Specification of the source.
          $ref: '#/components/schemas/Source'
      description: 'Specification of one of the bundles produced as a result of splitting a Source (e.g. when executing a SourceSplitRequest, or when splitting an active task using WorkItemStatus.dynamic_source_split), relative to the source being split.'
      id: DerivedSource
    NameAndKind:
      type: object
      id: NameAndKind
      description: Basic metadata about a counter.
      properties:
        name:
          description: Name of the counter.
          type: string
        kind:
          description: Counter aggregation kind.
          enum:
            - INVALID
            - SUM
            - MAX
            - MIN
            - MEAN
            - OR
            - AND
            - SET
            - DISTRIBUTION
            - LATEST_VALUE
          enumDescriptions:
            - Counter aggregation kind was not set.
            - Aggregated value is the sum of all contributed values.
            - Aggregated value is the max of all contributed values.
            - Aggregated value is the min of all contributed values.
            - Aggregated value is the mean of all contributed values.
            - Aggregated value represents the logical 'or' of all contributed values.
            - Aggregated value represents the logical 'and' of all contributed values.
            - Aggregated value is a set of unique contributed values.
            - Aggregated value captures statistics about a distribution.
            - Aggregated value tracks the latest value of a variable.
          type: string
    SourceSplitRequest:
      type: object
      id: SourceSplitRequest
      properties:
        options:
          description: Hints for tuning the splitting process.
          $ref: '#/components/schemas/SourceSplitOptions'
        source:
          description: Specification of the source to be split.
          $ref: '#/components/schemas/Source'
      description: 'Represents the operation to split a high-level Source specification into bundles (parts for parallel processing). At a high level, splitting of a source into bundles happens as follows: SourceSplitRequest is applied to the source. If it returns SOURCE_SPLIT_OUTCOME_USE_CURRENT, no further splitting happens and the source is used "as is". Otherwise, splitting is applied recursively to each produced DerivedSource. As an optimization, for any Source, if its does_not_need_splitting is true, the framework assumes that splitting this source would return SOURCE_SPLIT_OUTCOME_USE_CURRENT, and doesn''t initiate a SourceSplitRequest. This applies both to the initial source being split and to bundles produced from it.'
    ShellTask:
      description: A task which consists of a shell command for the worker to execute.
      properties:
        exitCode:
          type: integer
          description: Exit code for the task.
          format: int32
        command:
          description: The shell command to run.
          type: string
      id: ShellTask
      type: object
    SourceGetMetadataResponse:
      id: SourceGetMetadataResponse
      description: The result of a SourceGetMetadataOperation.
      type: object
      properties:
        metadata:
          description: The computed metadata.
          $ref: '#/components/schemas/SourceMetadata'
    JobMessage:
      properties:
        time:
          type: string
          format: google-datetime
          description: The timestamp of the message.
        id:
          type: string
          description: Deprecated.
        messageImportance:
          enum:
            - JOB_MESSAGE_IMPORTANCE_UNKNOWN
            - JOB_MESSAGE_DEBUG
            - JOB_MESSAGE_DETAILED
            - JOB_MESSAGE_BASIC
            - JOB_MESSAGE_WARNING
            - JOB_MESSAGE_ERROR
          description: Importance level of the message.
          type: string
          enumDescriptions:
            - 'The message importance isn''t specified, or is unknown.'
            - 'The message is at the ''debug'' level: typically only useful for software engineers working on the code the job is running. Typically, Dataflow pipeline runners do not display log messages at this level by default.'
            - 'The message is at the ''detailed'' level: somewhat verbose, but potentially useful to users. Typically, Dataflow pipeline runners do not display log messages at this level by default. These messages are displayed by default in the Dataflow monitoring UI.'
            - 'The message is at the ''basic'' level: useful for keeping track of the execution of a Dataflow pipeline. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI.'
            - 'The message is at the ''warning'' level: indicating a condition pertaining to a job which may require human intervention. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI.'
            - 'The message is at the ''error'' level: indicating a condition preventing a job from succeeding. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI.'
        messageText:
          type: string
          description: The text of the message.
      id: JobMessage
      description: A particular message pertaining to a Dataflow job.
      type: object
    Histogram:
      type: object
      description: 'Histogram of value counts for a distribution. Buckets have an inclusive lower bound and exclusive upper bound and use "1,2,5 bucketing": The first bucket range is from [0,1) and all subsequent bucket boundaries are powers of ten multiplied by 1, 2, or 5. Thus, bucket boundaries are 0, 1, 2, 5, 10, 20, 50, 100, 200, 500, 1000, ... Negative values are not supported.'
      properties:
        bucketCounts:
          items:
            type: string
            format: int64
          description: 'Counts of values in each bucket. For efficiency, prefix and trailing buckets with count = 0 are elided. Buckets can store the full range of values of an unsigned long, with ULLONG_MAX falling into the 59th bucket with range [1e19, 2e19).'
          type: array
        firstBucketOffset:
          format: int32
          description: 'Starting index of first stored bucket. The non-inclusive upper-bound of the ith bucket is given by: pow(10,(i-first_bucket_offset)/3) * (1,2,5)[(i-first_bucket_offset)%3]'
          type: integer
      id: Histogram
    DisplayData:
      properties:
        shortStrValue:
          description: A possible additional shorter value to display. For example a java_class_name_value of com.mypackage.MyDoFn will be stored with MyDoFn as the short_str_value and com.mypackage.MyDoFn as the java_class_name value. short_str_value can be displayed and java_class_name_value will be displayed as a tooltip.
          type: string
        label:
          description: An optional label to display in a dax UI for the element.
          type: string
        floatValue:
          type: number
          format: float
          description: Contains value if the data is of float type.
        javaClassValue:
          description: Contains value if the data is of java class type.
          type: string
        strValue:
          type: string
          description: Contains value if the data is of string type.
        key:
          description: The key identifying the display data. This is intended to be used as a label for the display data when viewed in a dax monitoring system.
          type: string
        int64Value:
          type: string
          format: int64
          description: Contains value if the data is of int64 type.
        timestampValue:
          description: Contains value if the data is of timestamp type.
          type: string
          format: google-datetime
        boolValue:
          type: boolean
          description: Contains value if the data is of a boolean type.
        durationValue:
          type: string
          format: google-duration
          description: Contains value if the data is of duration type.
        url:
          type: string
          description: An optional full URL.
        namespace:
          description: The namespace for the key. This is usually a class name or programming language namespace (i.e. python module) which defines the display data. This allows a dax monitoring system to specially handle the data and perform custom rendering.
          type: string
      description: Data provided with a pipeline or transform to provide descriptive info.
      id: DisplayData
      type: object
    StreamingComputationTask:
      type: object
      id: StreamingComputationTask
      properties:
        computationRanges:
          type: array
          description: Contains ranges of a streaming computation this task should apply to.
          items:
            $ref: '#/components/schemas/StreamingComputationRanges'
        dataDisks:
          items:
            $ref: '#/components/schemas/MountedDataDisk'
          type: array
          description: Describes the set of data disks this task should apply to.
        taskType:
          description: A type of streaming computation task.
          enum:
            - STREAMING_COMPUTATION_TASK_UNKNOWN
            - STREAMING_COMPUTATION_TASK_STOP
            - STREAMING_COMPUTATION_TASK_START
          enumDescriptions:
            - 'The streaming computation task is unknown, or unspecified.'
            - Stop processing specified streaming computation range(s).
            - Start processing specified streaming computation range(s).
          type: string
      description: A task which describes what action should be performed for the specified streaming computation ranges.
    StreamingStageLocation:
      properties:
        streamId:
          description: Identifies the particular stream within the streaming Dataflow job.
          type: string
      description: 'Identifies the location of a streaming computation stage, for stage-to-stage communication.'
      id: StreamingStageLocation
      type: object
    FailedLocation:
      type: object
      description: 'Indicates which [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) failed to respond to a request for data.'
      properties:
        name:
          description: 'The name of the [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that failed to respond.'
          type: string
      id: FailedLocation
    GetDebugConfigResponse:
      properties:
        config:
          description: The encoded debug configuration for the requested component.
          type: string
      id: GetDebugConfigResponse
      description: Response to a get debug configuration request.
      type: object
    Point:
      description: A point in the timeseries.
      id: Point
      properties:
        time:
          type: string
          description: The timestamp of the point.
          format: google-datetime
        value:
          format: double
          description: The value of the point.
          type: number
      type: object
    SendDebugCaptureRequest:
      id: SendDebugCaptureRequest
      type: object
      properties:
        location:
          type: string
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.'
        componentId:
          type: string
          description: The internal component id for which debug information is sent.
        dataFormat:
          type: string
          enum:
            - DATA_FORMAT_UNSPECIFIED
            - RAW
            - JSON
            - ZLIB
            - BROTLI
          enumDescriptions:
            - 'Format unspecified, parsing is determined based upon page type and legacy encoding. (go/protodosdonts#do-include-an-unspecified-value-in-an-enum)'
            - Raw HTML string.
            - JSON-encoded string.
            - Websafe encoded zlib-compressed string.
            - Websafe encoded brotli-compressed string.
          description: Format for the data field above (id=5).
        workerId:
          description: 'The worker id, i.e., VM hostname.'
          type: string
        data:
          type: string
          description: The encoded debug information.
      description: 'Request to send encoded debug information. Next ID: 8'
    ReportedParallelism:
      properties:
        isInfinite:
          description: 'Specifies whether the parallelism is infinite. If true, "value" is ignored. Infinite parallelism means the service will assume that the work item can always be split into more non-empty work items by dynamic splitting. This is a work-around for lack of support for infinity by the current JSON-based Java RPC stack.'
          type: boolean
        value:
          format: double
          type: number
          description: Specifies the level of parallelism in case it is finite.
      id: ReportedParallelism
      description: 'Represents the level of parallelism in a WorkItem''s input, reported by the worker.'
      type: object
    MetricShortId:
      id: MetricShortId
      type: object
      properties:
        metricIndex:
          format: int32
          description: The index of the corresponding metric in the ReportWorkItemStatusRequest. Required.
          type: integer
        shortId:
          format: int64
          type: string
          description: The service-generated short identifier for the metric.
      description: The metric short id is returned to the user alongside an offset into ReportWorkItemStatusRequest
    FlattenInstruction:
      type: object
      description: An instruction that copies its inputs (zero or more) to its (single) output.
      id: FlattenInstruction
      properties:
        inputs:
          items:
            $ref: '#/components/schemas/InstructionInput'
          type: array
          description: Describes the inputs to the flatten instruction.
    ConcatPosition:
      id: ConcatPosition
      description: A position that encapsulates an inner position and an index for the inner position. A ConcatPosition can be used by a reader of a source that encapsulates a set of other sources.
      properties:
        index:
          description: Index of the inner source.
          format: int32
          type: integer
        position:
          $ref: '#/components/schemas/Position'
          description: Position within the inner source.
      type: object
    SourceFork:
      description: DEPRECATED in favor of DynamicSourceSplit.
      id: SourceFork
      type: object
      properties:
        residual:
          description: DEPRECATED
          $ref: '#/components/schemas/SourceSplitShard'
        primarySource:
          description: DEPRECATED
          $ref: '#/components/schemas/DerivedSource'
        residualSource:
          description: DEPRECATED
          $ref: '#/components/schemas/DerivedSource'
        primary:
          $ref: '#/components/schemas/SourceSplitShard'
          description: DEPRECATED
    InstructionInput:
      description: 'An input of an instruction, as a reference to an output of a producer instruction.'
      id: InstructionInput
      properties:
        producerInstructionIndex:
          format: int32
          type: integer
          description: The index (origin zero) of the parallel instruction that produces the output to be consumed by this input. This index is relative to the list of instructions in this input's instruction's containing MapTask.
        outputNum:
          type: integer
          description: The output index (origin zero) within the producer.
          format: int32
      type: object
    SnapshotJobRequest:
      id: SnapshotJobRequest
      type: object
      description: Request to create a snapshot of a job.
      properties:
        snapshotSources:
          description: 'If true, perform snapshots for sources which support this.'
          type: boolean
        location:
          description: The location that contains this job.
          type: string
        ttl:
          description: TTL for the snapshot.
          type: string
          format: google-duration
        description:
          description: User specified description of the snapshot. Maybe empty.
          type: string
    ParameterMetadataEnumOption:
      description: ParameterMetadataEnumOption specifies the option shown in the enum form.
      properties:
        label:
          type: string
          description: Optional. The label to display for the enum option.
        description:
          type: string
          description: Optional. The description to display for the enum option.
        value:
          description: Required. The value of the enum option.
          type: string
      type: object
      id: ParameterMetadataEnumOption
    MemInfo:
      id: MemInfo
      type: object
      description: Information about the memory usage of a worker or a container within a worker.
      properties:
        totalGbMs:
          format: uint64
          description: Total memory (RSS) usage since start up in GB * ms.
          type: string
        currentOoms:
          format: int64
          type: string
          description: Number of Out of Memory (OOM) events recorded since the previous measurement.
        currentRssBytes:
          format: uint64
          description: Instantenous memory (RSS) size in bytes.
          type: string
        currentLimitBytes:
          format: uint64
          description: Instantenous memory limit in bytes.
          type: string
        timestamp:
          description: Timestamp of the measurement.
          format: google-datetime
          type: string
    AutoscalingEvent:
      type: object
      description: A structured message reporting an autoscaling decision made by the Dataflow service.
      properties:
        time:
          description: The time this event was emitted to indicate a new target or current num_workers value.
          type: string
          format: google-datetime
        currentNumWorkers:
          format: int64
          description: The current number of workers the job has.
          type: string
        description:
          $ref: '#/components/schemas/StructuredMessage'
          description: 'A message describing why the system decided to adjust the current number of workers, why it failed, or why the system decided to not make any changes to the number of workers.'
        workerPool:
          description: A short and friendly name for the worker pool this event refers to.
          type: string
        targetNumWorkers:
          description: The target number of workers the worker pool wants to resize to use.
          type: string
          format: int64
        eventType:
          enumDescriptions:
            - Default type for the enum. Value should never be returned.
            - The TARGET_NUM_WORKERS_CHANGED type should be used when the target worker pool size has changed at the start of an actuation. An event should always be specified as TARGET_NUM_WORKERS_CHANGED if it reflects a change in the target_num_workers.
            - 'The CURRENT_NUM_WORKERS_CHANGED type should be used when actual worker pool size has been changed, but the target_num_workers has not changed.'
            - The ACTUATION_FAILURE type should be used when we want to report an error to the user indicating why the current number of workers in the pool could not be changed. Displayed in the current status and history widgets.
            - 'Used when we want to report to the user a reason why we are not currently adjusting the number of workers. Should specify both target_num_workers, current_num_workers and a decision_message.'
          type: string
          enum:
            - TYPE_UNKNOWN
            - TARGET_NUM_WORKERS_CHANGED
            - CURRENT_NUM_WORKERS_CHANGED
            - ACTUATION_FAILURE
            - NO_CHANGE
          description: The type of autoscaling event to report.
      id: AutoscalingEvent
    KeyRangeDataDiskAssignment:
      id: KeyRangeDataDiskAssignment
      type: object
      description: Data disk assignment information for a specific key-range of a sharded computation. Currently we only support UTF-8 character splits to simplify encoding into JSON.
      properties:
        start:
          description: The start (inclusive) of the key range.
          type: string
        end:
          type: string
          description: The end (exclusive) of the key range.
        dataDisk:
          description: 'The name of the data disk where data for this range is stored. This name is local to the Google Cloud Platform project and uniquely identifies the disk within that project, for example "myproject-1014-104817-4c2-harness-0-disk-1".'
          type: string
    PartialGroupByKeyInstruction:
      type: object
      id: PartialGroupByKeyInstruction
      description: An instruction that does a partial group-by-key. One input and one output.
      properties:
        inputElementCodec:
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
          description: The codec to use for interpreting an element in the input PTable.
        sideInputs:
          type: array
          items:
            $ref: '#/components/schemas/SideInputInfo'
          description: Zero or more side inputs.
        valueCombiningFn:
          additionalProperties:
            description: Properties of the object.
            type: any
          type: object
          description: The value combining function to invoke.
        originalCombineValuesStepName:
          description: 'If this instruction includes a combining function, this is the name of the CombineValues instruction lifted into this instruction.'
          type: string
        input:
          description: Describes the input to the partial group-by-key instruction.
          $ref: '#/components/schemas/InstructionInput'
        originalCombineValuesInputStoreName:
          type: string
          description: If this instruction includes a combining function this is the name of the intermediate store between the GBK and the CombineValues.
    ReportWorkItemStatusResponse:
      properties:
        workItemServiceStates:
          description: 'A set of messages indicating the service-side state for each WorkItem whose status was reported, in the same order as the WorkItemStatus messages in the ReportWorkItemStatusRequest which resulting in this response.'
          type: array
          items:
            $ref: '#/components/schemas/WorkItemServiceState'
        unifiedWorkerResponse:
          type: object
          description: Untranslated bag-of-bytes WorkProgressUpdateResponse for UnifiedWorker.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
      id: ReportWorkItemStatusResponse
      type: object
      description: Response from a request to report the status of WorkItems.
    WorkerHealthReportResponse:
      description: WorkerHealthReportResponse contains information returned to the worker in response to a health ping.
      properties:
        reportInterval:
          description: A positive value indicates the worker should change its reporting interval to the specified value. The default value of zero means no change in report rate is requested by the server.
          format: google-duration
          type: string
      type: object
      id: WorkerHealthReportResponse
    ListJobsResponse:
      type: object
      id: ListJobsResponse
      properties:
        jobs:
          items:
            $ref: '#/components/schemas/Job'
          description: A subset of the requested job information.
          type: array
        nextPageToken:
          description: Set if there may be more results than fit in this response.
          type: string
        failedLocation:
          description: 'Zero or more messages describing the [regional endpoints] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that failed to respond.'
          type: array
          items:
            $ref: '#/components/schemas/FailedLocation'
      description: 'Response to a request to list Cloud Dataflow jobs in a project. This might be a partial response, depending on the page size in the ListJobsRequest. However, if the project does not have any jobs, an instance of ListJobsResponse is not returned and the requests''s response body is empty {}.'
    CounterStructuredName:
      properties:
        name:
          type: string
          description: 'Counter name. Not necessarily globally-unique, but unique within the context of the other fields. Required.'
        workerId:
          type: string
          description: ID of a particular worker.
        componentStepName:
          type: string
          description: Name of the optimized step being executed by the workers.
        originalStepName:
          description: 'System generated name of the original step in the user''s graph, before optimization.'
          type: string
        originNamespace:
          description: A string containing a more specific namespace of the counter's origin.
          type: string
        portion:
          type: string
          description: 'Portion of this counter, either key or value.'
          enum:
            - ALL
            - KEY
            - VALUE
          enumDescriptions:
            - Counter portion has not been set.
            - Counter reports a key.
            - Counter reports a value.
        executionStepName:
          type: string
          description: Name of the stage. An execution step contains multiple component steps.
        originalRequestingStepName:
          type: string
          description: 'The step name requesting an operation, such as GBK. I.e. the ParDo causing a read/write from shuffle to occur, or a read from side inputs.'
        inputIndex:
          description: 'Index of an input collection that''s being read from/written to as a side input. The index identifies a step''s side inputs starting by 1 (e.g. the first side input has input_index 1, the third has input_index 3). Side inputs are identified by a pair of (original_step_name, input_index). This field helps uniquely identify them.'
          type: integer
          format: int32
        origin:
          enum:
            - SYSTEM
            - USER
          enumDescriptions:
            - Counter was created by the Dataflow system.
            - Counter was created by the user.
          description: One of the standard Origins defined above.
          type: string
      description: Identifies a counter within a per-job namespace. Counters whose structured names are the same get merged into a single value for the job.
      type: object
      id: CounterStructuredName
    PubsubSnapshotMetadata:
      description: Represents a Pubsub snapshot.
      id: PubsubSnapshotMetadata
      properties:
        snapshotName:
          type: string
          description: The name of the Pubsub snapshot.
        expireTime:
          description: The expire time of the Pubsub snapshot.
          type: string
          format: google-datetime
        topicName:
          type: string
          description: The name of the Pubsub topic.
      type: object
    ContainerSpec:
      id: ContainerSpec
      description: Container Spec.
      type: object
      properties:
        image:
          description: 'Name of the docker container image. E.g., gcr.io/project/some-image'
          type: string
        sdkInfo:
          $ref: '#/components/schemas/SDKInfo'
          description: Required. SDK info of the Flex Template.
        defaultEnvironment:
          description: Default runtime environment for the job.
          $ref: '#/components/schemas/FlexTemplateRuntimeEnvironment'
        imageRepositoryPasswordSecretId:
          description: Secret Manager secret id for password to authenticate to private registry.
          type: string
        metadata:
          description: Metadata describing a template including description and validation rules.
          $ref: '#/components/schemas/TemplateMetadata'
        imageRepositoryCertPath:
          type: string
          description: Cloud Storage path to self-signed certificate of private registry.
        imageRepositoryUsernameSecretId:
          description: Secret Manager secret id for username to authenticate to private registry.
          type: string
    StreamingComputationConfig:
      properties:
        computationId:
          description: Unique identifier for this computation.
          type: string
        transformUserNameToStateFamily:
          additionalProperties:
            type: string
          type: object
          description: Map from user name of stateful transforms in this stage to their state family.
        stageName:
          description: Stage name of this computation.
          type: string
        instructions:
          description: Instructions that comprise the computation.
          items:
            $ref: '#/components/schemas/ParallelInstruction'
          type: array
        systemName:
          description: System defined name for this computation.
          type: string
      id: StreamingComputationConfig
      type: object
      description: Configuration information for a single streaming computation.
    BigQueryIODetails:
      id: BigQueryIODetails
      type: object
      description: Metadata for a BigQuery connector used by the job.
      properties:
        query:
          description: Query used to access data in the connection.
          type: string
        projectId:
          description: Project accessed in the connection.
          type: string
        table:
          description: Table accessed in the connection.
          type: string
        dataset:
          type: string
          description: Dataset accessed in the connection.
    MetricStructuredName:
      type: object
      properties:
        origin:
          type: string
          description: Origin (namespace) of metric name. May be blank for user-define metrics; will be "dataflow" for metrics defined by the Dataflow service or SDK.
        context:
          description: 'Zero or more labeled fields which identify the part of the job this metric is associated with, such as the name of a step or collection. For example, built-in counters associated with steps will have context[''step''] = . Counters associated with PCollections in the SDK will have context[''pcollection''] = .'
          type: object
          additionalProperties:
            type: string
        name:
          description: Worker-defined metric name.
          type: string
      description: 'Identifies a metric, by describing the source which generated the metric.'
      id: MetricStructuredName
    ResourceUtilizationReport:
      description: 'Worker metrics exported from workers. This contains resource utilization metrics accumulated from a variety of sources. For more information, see go/df-resource-signals.'
      properties:
        memoryInfo:
          type: array
          description: Memory utilization samples.
          items:
            $ref: '#/components/schemas/MemInfo'
        cpuTime:
          type: array
          items:
            $ref: '#/components/schemas/CPUTime'
          description: CPU utilization samples.
        containers:
          description: 'Per container information. Key: container name.'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ResourceUtilizationReport'
      id: ResourceUtilizationReport
      type: object
    WorkerThreadScalingReportResponse:
      description: Contains the thread scaling recommendation for a worker from the backend.
      type: object
      id: WorkerThreadScalingReportResponse
      properties:
        recommendedThreadCount:
          description: Recommended number of threads for a worker.
          type: integer
          format: int32
    WorkerDetails:
      type: object
      id: WorkerDetails
      properties:
        workerName:
          description: Name of this worker
          type: string
        workItems:
          items:
            $ref: '#/components/schemas/WorkItemDetails'
          description: 'Work items processed by this worker, sorted by time.'
          type: array
      description: Information about a worker
    Disk:
      type: object
      description: Describes the data disk used by a workflow job.
      properties:
        diskType:
          type: string
          description: 'Disk storage type, as defined by Google Compute Engine. This must be a disk type appropriate to the project and zone in which the workers will run. If unknown or unspecified, the service will attempt to choose a reasonable default. For example, the standard persistent disk type is a resource name typically ending in "pd-standard". If SSD persistent disks are available, the resource name typically ends with "pd-ssd". The actual valid values are defined the Google Compute Engine API, not by the Cloud Dataflow API; consult the Google Compute Engine documentation for more information about determining the set of available disk types for a particular project and zone. Google Compute Engine Disk types are local to a particular project in a particular zone, and so the resource name will typically look something like this: compute.googleapis.com/projects/project-id/zones/zone/diskTypes/pd-standard'
        sizeGb:
          format: int32
          type: integer
          description: 'Size of disk in GB. If zero or unspecified, the service will attempt to choose a reasonable default.'
        mountPoint:
          type: string
          description: Directory in a VM where disk is mounted.
      id: Disk
    Straggler:
      id: Straggler
      type: object
      properties:
        streamingStraggler:
          description: Streaming straggler identification and debugging information.
          $ref: '#/components/schemas/StreamingStragglerInfo'
        batchStraggler:
          description: Batch straggler identification and debugging information.
          $ref: '#/components/schemas/StragglerInfo'
      description: Information for a straggler.
    DebugOptions:
      description: Describes any options that have an effect on the debugging of pipelines.
      id: DebugOptions
      type: object
      properties:
        dataSampling:
          $ref: '#/components/schemas/DataSamplingConfig'
          description: Configuration options for sampling elements from a running pipeline.
        enableHotKeyLogging:
          type: boolean
          description: 'When true, enables the logging of the literal hot key to the user''s Cloud Logging.'
    StragglerSummary:
      type: object
      properties:
        stragglerCauseCount:
          type: object
          additionalProperties:
            format: int64
            type: string
          description: 'Aggregated counts of straggler causes, keyed by the string representation of the StragglerCause enum.'
        totalStragglerCount:
          description: The total count of stragglers.
          format: int64
          type: string
        recentStragglers:
          type: array
          description: The most recent stragglers.
          items:
            $ref: '#/components/schemas/Straggler'
      id: StragglerSummary
      description: Summarized straggler identification details.
    StragglerDebuggingInfo:
      description: 'Information useful for debugging a straggler. Each type will provide specialized debugging information relevant for a particular cause. The StragglerDebuggingInfo will be 1:1 mapping to the StragglerCause enum.'
      type: object
      id: StragglerDebuggingInfo
      properties:
        hotKey:
          description: Hot key debugging details.
          $ref: '#/components/schemas/HotKeyDebuggingInfo'
    StateFamilyConfig:
      properties:
        stateFamily:
          type: string
          description: The state family value.
        isRead:
          description: 'If true, this family corresponds to a read operation.'
          type: boolean
      description: State family configuration.
      type: object
      id: StateFamilyConfig
    MultiOutputInfo:
      id: MultiOutputInfo
      properties:
        tag:
          type: string
          description: The id of the tag the user code will emit to this output by; this should correspond to the tag of some SideInputInfo.
      type: object
      description: Information about an output of a multi-output DoFn.
    StreamingComputationRanges:
      description: Describes full or partial data disk assignment information of the computation ranges.
      type: object
      id: StreamingComputationRanges
      properties:
        computationId:
          type: string
          description: The ID of the computation.
        rangeAssignments:
          description: Data disk assignments for ranges from this computation.
          items:
            $ref: '#/components/schemas/KeyRangeDataDiskAssignment'
          type: array
    Source:
      properties:
        metadata:
          $ref: '#/components/schemas/SourceMetadata'
          description: 'Optionally, metadata for this source can be supplied right away, avoiding a SourceGetMetadataOperation roundtrip (see SourceOperationRequest). This field is meaningful only in the Source objects populated by the user (e.g. when filling in a DerivedSource). Source objects supplied by the framework to the user don''t have this field populated.'
        baseSpecs:
          description: 'While splitting, sources may specify the produced bundles as differences against another source, in order to save backend-side memory and allow bigger jobs. For details, see SourceSplitRequest. To support this use case, the full set of parameters of the source is logically obtained by taking the latest explicitly specified value of each parameter in the order: base_specs (later items win), spec (overrides anything in base_specs).'
          type: array
          items:
            type: object
            additionalProperties:
              description: Properties of the object.
              type: any
        codec:
          description: The codec to use to decode data read from the source.
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
        doesNotNeedSplitting:
          type: boolean
          description: 'Setting this value to true hints to the framework that the source doesn''t need splitting, and using SourceSplitRequest on it would yield SOURCE_SPLIT_OUTCOME_USE_CURRENT. E.g. a file splitter may set this to true when splitting a single file into a set of byte ranges of appropriate size, and set this to false when splitting a filepattern into individual files. However, for efficiency, a file splitter may decide to produce file subranges directly from the filepattern to avoid a splitting round-trip. See SourceSplitRequest for an overview of the splitting process. This field is meaningful only in the Source objects populated by the user (e.g. when filling in a DerivedSource). Source objects supplied by the framework to the user don''t have this field populated.'
        spec:
          additionalProperties:
            description: Properties of the object.
            type: any
          type: object
          description: 'The source to read from, plus its parameters.'
      type: object
      description: A source that records can be read and decoded from.
      id: Source
    MountedDataDisk:
      properties:
        dataDisk:
          description: 'The name of the data disk. This name is local to the Google Cloud Platform project and uniquely identifies the disk within that project, for example "myproject-1014-104817-4c2-harness-0-disk-1".'
          type: string
      type: object
      id: MountedDataDisk
      description: Describes mounted data disk.
    ProgressTimeseries:
      properties:
        dataPoints:
          items:
            $ref: '#/components/schemas/Point'
          type: array
          description: History of progress for the component. Points are sorted by time.
        currentProgress:
          description: 'The current progress of the component, in the range [0,1].'
          type: number
          format: double
      description: Information about the progress of some component of job execution.
      id: ProgressTimeseries
      type: object
    DataDiskAssignment:
      description: Data disk assignment for a given VM instance.
      type: object
      id: DataDiskAssignment
      properties:
        dataDisks:
          description: 'Mounted data disks. The order is important a data disk''s 0-based index in this list defines which persistent directory the disk is mounted to, for example the list of { "myproject-1014-104817-4c2-harness-0-disk-0" }, { "myproject-1014-104817-4c2-harness-0-disk-1" }.'
          items:
            type: string
          type: array
        vmInstance:
          type: string
          description: 'VM instance name the data disks mounted to, for example "myproject-1014-104817-4c2-harness-0".'
    PubsubLocation:
      type: object
      description: Identifies a pubsub location to use for transferring data into or out of a streaming Dataflow job.
      id: PubsubLocation
      properties:
        timestampLabel:
          description: 'If set, contains a pubsub label from which to extract record timestamps. If left empty, record timestamps will be generated upon arrival.'
          type: string
        subscription:
          type: string
          description: 'A pubsub subscription, in the form of "pubsub.googleapis.com/subscriptions//"'
        idLabel:
          description: 'If set, contains a pubsub label from which to extract record ids. If left empty, record deduplication will be strictly best effort.'
          type: string
        trackingSubscription:
          description: 'If set, specifies the pubsub subscription that will be used for tracking custom time timestamps for watermark estimation.'
          type: string
        dynamicDestinations:
          type: boolean
          description: 'If true, then this location represents dynamic topics.'
        withAttributes:
          description: 'If true, then the client has requested to get pubsub attributes.'
          type: boolean
        dropLateData:
          description: Indicates whether the pipeline allows late-arriving data.
          type: boolean
        topic:
          description: 'A pubsub topic, in the form of "pubsub.googleapis.com/topics//"'
          type: string
    SourceSplitResponse:
      id: SourceSplitResponse
      properties:
        shards:
          items:
            $ref: '#/components/schemas/SourceSplitShard'
          description: DEPRECATED in favor of bundles.
          type: array
          deprecated: true
        outcome:
          enum:
            - SOURCE_SPLIT_OUTCOME_UNKNOWN
            - SOURCE_SPLIT_OUTCOME_USE_CURRENT
            - SOURCE_SPLIT_OUTCOME_SPLITTING_HAPPENED
          enumDescriptions:
            - 'The source split outcome is unknown, or unspecified.'
            - The current source should be processed "as is" without splitting.
            - Splitting produced a list of bundles.
          description: 'Indicates whether splitting happened and produced a list of bundles. If this is USE_CURRENT_SOURCE_AS_IS, the current source should be processed "as is" without splitting. "bundles" is ignored in this case. If this is SPLITTING_HAPPENED, then "bundles" contains a list of bundles into which the source was split.'
          type: string
        bundles:
          type: array
          description: 'If outcome is SPLITTING_HAPPENED, then this is a list of bundles into which the source was split. Otherwise this field is ignored. This list can be empty, which means the source represents an empty input.'
          items:
            $ref: '#/components/schemas/DerivedSource'
      description: The response to a SourceSplitRequest.
      type: object
    JobExecutionInfo:
      type: object
      id: JobExecutionInfo
      description: Additional information about how a Cloud Dataflow job will be executed that isn't contained in the submitted job.
      properties:
        stages:
          description: A mapping from each stage to the information about that stage.
          additionalProperties:
            $ref: '#/components/schemas/JobExecutionStageInfo'
          type: object
    StreamingApplianceSnapshotConfig:
      properties:
        snapshotId:
          type: string
          description: 'If set, indicates the snapshot id for the snapshot being performed.'
        importStateEndpoint:
          type: string
          description: Indicates which endpoint is used to import appliance state.
      type: object
      id: StreamingApplianceSnapshotConfig
      description: Streaming appliance snapshot configuration.
    StreamingSideInputLocation:
      properties:
        tag:
          description: Identifies the particular side input within the streaming Dataflow job.
          type: string
        stateFamily:
          type: string
          description: Identifies the state family where this side input is stored.
      type: object
      id: StreamingSideInputLocation
      description: Identifies the location of a streaming side input.
    LeaseWorkItemResponse:
      properties:
        unifiedWorkerResponse:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: Untranslated bag-of-bytes WorkResponse for UnifiedWorker.
        workItems:
          items:
            $ref: '#/components/schemas/WorkItem'
          description: A list of the leased WorkItems.
          type: array
      type: object
      description: Response to a request to lease WorkItems.
      id: LeaseWorkItemResponse
    LaunchTemplateResponse:
      type: object
      id: LaunchTemplateResponse
      description: Response to the request to launch a template.
      properties:
        job:
          description: 'The job that was launched, if the request was not a dry run and the job was successfully launched.'
          $ref: '#/components/schemas/Job'
    TaskRunnerSettings:
      properties:
        logDir:
          type: string
          description: The directory on the VM to store logs.
        dataflowApiVersion:
          type: string
          description: 'The API version of endpoint, e.g. "v1b3"'
        parallelWorkerSettings:
          $ref: '#/components/schemas/WorkerSettings'
          description: The settings to pass to the parallel worker harness.
        taskGroup:
          type: string
          description: The UNIX group ID on the worker VM to use for tasks launched by taskrunner; e.g. "wheel".
        alsologtostderr:
          description: Whether to also send taskrunner log info to stderr.
          type: boolean
        baseUrl:
          type: string
          description: 'The base URL for the taskrunner to use when accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, "Relative Uniform Resource Locators". If not specified, the default value is "http://www.googleapis.com/"'
        harnessCommand:
          description: The command to launch the worker harness.
          type: string
        languageHint:
          description: The suggested backend language.
          type: string
        oauthScopes:
          type: array
          items:
            type: string
          description: The OAuth2 scopes to be requested by the taskrunner in order to access the Cloud Dataflow API.
        tempStoragePrefix:
          type: string
          description: 'The prefix of the resources the taskrunner should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}'
        streamingWorkerMainClass:
          description: The streaming worker main class name.
          type: string
        vmId:
          type: string
          description: The ID string of the VM.
        logToSerialconsole:
          description: Whether to send taskrunner log info to Google Compute Engine VM serial console.
          type: boolean
        workflowFileName:
          description: The file to store the workflow in.
          type: string
        baseTaskDir:
          type: string
          description: The location on the worker for task-specific subdirectories.
        continueOnException:
          type: boolean
          description: Whether to continue taskrunner if an exception is hit.
        commandlinesFileName:
          type: string
          description: The file to store preprocessing commands in.
        logUploadLocation:
          description: 'Indicates where to put logs. If this is not specified, the logs will not be uploaded. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}'
          type: string
        taskUser:
          type: string
          description: The UNIX user ID on the worker VM to use for tasks launched by taskrunner; e.g. "root".
      type: object
      id: TaskRunnerSettings
      description: Taskrunner configuration settings.
    SDKInfo:
      id: SDKInfo
      description: SDK Information.
      properties:
        language:
          enumDescriptions:
            - UNKNOWN Language.
            - Java.
            - Python.
            - Go.
          enum:
            - UNKNOWN
            - JAVA
            - PYTHON
            - GO
          description: Required. The SDK Language.
          type: string
        version:
          description: Optional. The SDK version.
          type: string
      type: object
    LaunchFlexTemplateParameter:
      type: object
      properties:
        containerSpecGcsPath:
          description: Cloud Storage path to a file with json serialized ContainerSpec as content.
          type: string
        parameters:
          additionalProperties:
            type: string
          type: object
          description: 'The parameters for FlexTemplate. Ex. {"num_workers":"5"}'
        update:
          type: boolean
          description: 'Set this to true if you are sending a request to update a running streaming job. When set, the job name should be the same as the running job.'
        jobName:
          description: 'Required. The job name to use for the created job. For update job request, job name should be same as the existing running job.'
          type: string
        transformNameMappings:
          type: object
          additionalProperties:
            type: string
          description: 'Use this to pass transform_name_mappings for streaming update jobs. Ex:{"oldTransformName":"newTransformName",...}'''
        launchOptions:
          description: Launch options for this flex template job. This is a common set of options across languages and templates. This should not be used to pass job parameters.
          additionalProperties:
            type: string
          type: object
        environment:
          description: The runtime environment for the FlexTemplate job
          $ref: '#/components/schemas/FlexTemplateRuntimeEnvironment'
        containerSpec:
          $ref: '#/components/schemas/ContainerSpec'
          description: Spec about the container image to launch.
      description: Launch FlexTemplate Parameter.
      id: LaunchFlexTemplateParameter
    Position:
      type: object
      properties:
        key:
          type: string
          description: 'Position is a string key, ordered lexicographically.'
        shufflePosition:
          description: CloudPosition is a base64 encoded BatchShufflePosition (with FIXED sharding).
          type: string
        recordIndex:
          description: Position is a record index.
          type: string
          format: int64
        end:
          type: boolean
          description: Position is past all other positions. Also useful for the end position of an unbounded range.
        concatPosition:
          $ref: '#/components/schemas/ConcatPosition'
          description: CloudPosition is a concat position.
        byteOffset:
          format: int64
          description: Position is a byte offset.
          type: string
      description: 'Position defines a position within a collection of data. The value can be either the end position, a key (used with ordered collections), a byte offset, or a record index.'
      id: Position
    JobExecutionDetails:
      type: object
      description: Information about the execution of a job.
      id: JobExecutionDetails
      properties:
        nextPageToken:
          type: string
          description: 'If present, this response does not contain all requested tasks. To obtain the next page of results, repeat the request with page_token set to this value.'
        stages:
          description: The stages of the job execution.
          type: array
          items:
            $ref: '#/components/schemas/StageSummary'
    IntegerList:
      type: object
      id: IntegerList
      properties:
        elements:
          description: Elements of the list.
          items:
            $ref: '#/components/schemas/SplitInt64'
          type: array
      description: A metric value representing a list of integers.
    StragglerInfo:
      properties:
        startTime:
          format: google-datetime
          description: The time when the work item attempt became a straggler.
          type: string
        causes:
          type: object
          description: 'The straggler causes, keyed by the string representation of the StragglerCause enum and contains specialized debugging information for each straggler cause.'
          additionalProperties:
            $ref: '#/components/schemas/StragglerDebuggingInfo'
      id: StragglerInfo
      type: object
      description: Information useful for straggler identification and debugging.
    Sink:
      type: object
      description: A sink that records can be encoded and written to.
      id: Sink
      properties:
        codec:
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
          description: The codec to use to encode data written to the sink.
        spec:
          type: object
          description: 'The sink to write to, plus its parameters.'
          additionalProperties:
            description: Properties of the object.
            type: any
    TemplateMetadata:
      type: object
      id: TemplateMetadata
      properties:
        parameters:
          description: The parameters for the template.
          items:
            $ref: '#/components/schemas/ParameterMetadata'
          type: array
        description:
          description: Optional. A description of the template.
          type: string
        name:
          description: Required. The name of the template.
          type: string
      description: Metadata describing a template.
    StringList:
      description: A metric value representing a list of strings.
      type: object
      id: StringList
      properties:
        elements:
          description: Elements of the list.
          type: array
          items:
            type: string
    BigTableIODetails:
      description: Metadata for a Cloud Bigtable connector used by the job.
      type: object
      properties:
        instanceId:
          description: InstanceId accessed in the connection.
          type: string
        tableId:
          type: string
          description: TableId accessed in the connection.
        projectId:
          type: string
          description: ProjectId accessed in the connection.
      id: BigTableIODetails
    SdkVersion:
      id: SdkVersion
      description: The version of the SDK used to run the job.
      type: object
      properties:
        sdkSupportStatus:
          enumDescriptions:
            - Cloud Dataflow is unaware of this version.
            - 'This is a known version of an SDK, and is supported.'
            - 'A newer version of the SDK family exists, and an update is recommended.'
            - This version of the SDK is deprecated and will eventually be unsupported.
            - Support for this SDK version has ended and it should no longer be used.
          description: The support status for this SDK version.
          type: string
          enum:
            - UNKNOWN
            - SUPPORTED
            - STALE
            - DEPRECATED
            - UNSUPPORTED
        version:
          description: The version of the SDK used to run the job.
          type: string
        versionDisplayName:
          description: A readable string describing the version of the SDK.
          type: string
        bugs:
          readOnly: true
          items:
            $ref: '#/components/schemas/SdkBug'
          type: array
          description: Output only. Known bugs found in this SDK version.
    StageExecutionDetails:
      properties:
        workers:
          description: Workers that have done work on the stage.
          items:
            $ref: '#/components/schemas/WorkerDetails'
          type: array
        nextPageToken:
          description: 'If present, this response does not contain all requested tasks. To obtain the next page of results, repeat the request with page_token set to this value.'
          type: string
      id: StageExecutionDetails
      description: Information about the workers and work items within a stage.
      type: object
    WorkerMessageResponse:
      properties:
        workerMetricsResponse:
          $ref: '#/components/schemas/ResourceUtilizationReportResponse'
          description: Service's response to reporting worker metrics (currently empty).
        workerThreadScalingReportResponse:
          $ref: '#/components/schemas/WorkerThreadScalingReportResponse'
          description: Service's thread scaling recommendation for workers.
        workerShutdownNoticeResponse:
          $ref: '#/components/schemas/WorkerShutdownNoticeResponse'
          description: Service's response to shutdown notice (currently empty).
        workerHealthReportResponse:
          description: The service's response to a worker's health report.
          $ref: '#/components/schemas/WorkerHealthReportResponse'
      description: A worker_message response allows the server to pass information to the sender.
      type: object
      id: WorkerMessageResponse
    SourceSplitOptions:
      properties:
        desiredBundleSizeBytes:
          description: The source should be split into a set of bundles where the estimated size of each is approximately this many bytes.
          format: int64
          type: string
        desiredShardSizeBytes:
          type: string
          format: int64
          deprecated: true
          description: DEPRECATED in favor of desired_bundle_size_bytes.
      description: Hints for splitting a Source into bundles (parts for parallel processing) using SourceSplitRequest.
      type: object
      id: SourceSplitOptions
    DataSamplingConfig:
      id: DataSamplingConfig
      type: object
      description: Configuration options for sampling elements.
      properties:
        behaviors:
          type: array
          items:
            enumDescriptions:
              - 'If given, has no effect on sampling behavior. Used as an unknown or unset sentinel value.'
              - 'When given, disables element sampling. Has same behavior as not setting the behavior.'
              - 'When given, enables sampling in-flight from all PCollections.'
              - 'When given, enables sampling input elements when a user-defined DoFn causes an exception.'
            enum:
              - DATA_SAMPLING_BEHAVIOR_UNSPECIFIED
              - DISABLED
              - ALWAYS_ON
              - EXCEPTIONS
            type: string
          description: 'List of given sampling behaviors to enable. For example, specifying behaviors = [ALWAYS_ON] samples in-flight elements but does not sample exceptions. Can be used to specify multiple behaviors like, behaviors = [ALWAYS_ON, EXCEPTIONS] for specifying periodic sampling and exception sampling. If DISABLED is in the list, then sampling will be disabled and ignore the other given behaviors. Ordering does not matter.'
    DataSamplingReport:
      description: Contains per-worker telemetry about the data sampling feature.
      properties:
        elementsSampledBytes:
          format: int64
          type: string
          description: Optional. Delta of bytes sampled from previous report.
        translationErrorsCount:
          description: 'Optional. Delta of errors counts from retrieving, or translating the samples from previous report.'
          format: int64
          type: string
        persistenceErrorsCount:
          description: Optional. Delta of errors counts from persisting the samples from previous report.
          type: string
          format: int64
        elementsSampledCount:
          type: string
          description: Optional. Delta of number of elements sampled from previous report.
          format: int64
        pcollectionsSampledCount:
          format: int64
          type: string
          description: Optional. Delta of number of PCollections sampled from previous report.
        exceptionsSampledCount:
          description: Optional. Delta of number of samples taken from user code exceptions from previous report.
          format: int64
          type: string
        bytesWrittenDelta:
          description: Optional. Delta of bytes written to file from previous report.
          format: int64
          type: string
      type: object
      id: DataSamplingReport
    ApproximateReportedProgress:
      properties:
        consumedParallelism:
          description: 'Total amount of parallelism in the portion of input of this task that has already been consumed and is no longer active. In the first two examples above (see remaining_parallelism), the value should be 29 or 2 respectively. The sum of remaining_parallelism and consumed_parallelism should equal the total amount of parallelism in this work item. If specified, must be finite.'
          $ref: '#/components/schemas/ReportedParallelism'
        position:
          $ref: '#/components/schemas/Position'
          description: A Position within the work to represent a progress.
        fractionConsumed:
          description: 'Completion as fraction of the input consumed, from 0.0 (beginning, nothing consumed), to 1.0 (end of the input, entire input consumed).'
          type: number
          format: double
        remainingParallelism:
          $ref: '#/components/schemas/ReportedParallelism'
          description: 'Total amount of parallelism in the input of this task that remains, (i.e. can be delegated to this task and any new tasks via dynamic splitting). Always at least 1 for non-finished work items and 0 for finished. "Amount of parallelism" refers to how many non-empty parts of the input can be read in parallel. This does not necessarily equal number of records. An input that can be read in parallel down to the individual records is called "perfectly splittable". An example of non-perfectly parallelizable input is a block-compressed file format where a block of records has to be read as a whole, but different blocks can be read in parallel. Examples: * If we are processing record #30 (starting at 1) out of 50 in a perfectly splittable 50-record input, this value should be 21 (20 remaining + 1 current). * If we are reading through block 3 in a block-compressed file consisting of 5 blocks, this value should be 3 (since blocks 4 and 5 can be processed in parallel by new tasks via dynamic splitting and the current task remains processing block 3). * If we are reading through the last block in a block-compressed file, or reading or processing the last record in a perfectly splittable input, this value should be 1, because apart from the current task, no additional remainder can be split off.'
      description: A progress measurement of a WorkItem by a worker.
      id: ApproximateReportedProgress
      type: object
    Job:
      description: Defines a job to be run by the Cloud Dataflow service. Do not enter confidential information when you supply string values using the API.
      id: Job
      properties:
        clientRequestId:
          description: 'The client''s unique identifier of the job, re-used across retried attempts. If this field is set, the service will ensure its uniqueness. The request to create a job will fail if the service has knowledge of a previously submitted job with the same client''s ID and job name. The caller may use this field to ensure idempotence of job creation across retried attempts to create a job. By default, the field is empty and, in that case, the service ignores it.'
          type: string
        stepsLocation:
          type: string
          description: The Cloud Storage location where the steps are stored.
        location:
          type: string
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job.'
        startTime:
          format: google-datetime
          type: string
          description: 'The timestamp when the job was started (transitioned to JOB_STATE_PENDING). Flexible resource scheduling jobs are started with some delay after job creation, so start_time is unset before start and is updated when the job is started by the Cloud Dataflow service. For other jobs, start_time always equals to create_time and is immutable and set by the Cloud Dataflow service.'
        replacedByJobId:
          type: string
          description: 'If another job is an update of this job (and thus, this job is in `JOB_STATE_UPDATED`), this field contains the ID of that job.'
        createTime:
          type: string
          format: google-datetime
          description: The timestamp when the job was initially created. Immutable and set by the Cloud Dataflow service.
        currentStateTime:
          description: The timestamp associated with the current state.
          type: string
          format: google-datetime
        type:
          type: string
          enum:
            - JOB_TYPE_UNKNOWN
            - JOB_TYPE_BATCH
            - JOB_TYPE_STREAMING
          description: The type of Cloud Dataflow job.
          enumDescriptions:
            - 'The type of the job is unspecified, or unknown.'
            - 'A batch job with a well-defined end point: data is read, data is processed, data is written, and the job is done.'
            - 'A continuously streaming job with no end: data is read, processed, and written continuously.'
        steps:
          items:
            $ref: '#/components/schemas/Step'
          description: Exactly one of step or steps_location should be specified. The top-level steps that constitute the entire job. Only retrieved with JOB_VIEW_ALL.
          type: array
        labels:
          type: object
          description: 'User-defined labels for this job. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \p{Ll}\p{Lo}{0,62} * Values must conform to regexp: [\p{Ll}\p{Lo}\p{N}_-]{0,63} * Both keys and values are additionally constrained to be <= 128 bytes in size.'
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/Environment'
          description: The environment for the job.
        executionInfo:
          $ref: '#/components/schemas/JobExecutionInfo'
          description: Deprecated.
        runtimeUpdatableParams:
          description: This field may ONLY be modified at runtime using the projects.jobs.update method to adjust job behavior. This field has no effect when specified at job creation.
          $ref: '#/components/schemas/RuntimeUpdatableParams'
        replaceJobId:
          description: 'If this job is an update of an existing job, this field is the job ID of the job it replaced. When sending a `CreateJobRequest`, you can update a job by specifying it here. The job named here is stopped, and its intermediate state is transferred to this job.'
          type: string
        satisfiesPzs:
          description: Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.
          type: boolean
        tempFiles:
          items:
            type: string
          type: array
          description: 'A set of files the system should be aware of that are used for temporary storage. These temporary files will be removed on job completion. No duplicates are allowed. No file patterns are supported. The supported files are: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}'
        stageStates:
          items:
            $ref: '#/components/schemas/ExecutionStageState'
          description: This field may be mutated by the Cloud Dataflow service; callers cannot mutate it.
          type: array
        pipelineDescription:
          description: 'Preliminary field: The format of this data may change at any time. A description of the user pipeline and stages through which it is executed. Created by Cloud Dataflow service. Only retrieved with JOB_VIEW_DESCRIPTION or JOB_VIEW_ALL.'
          $ref: '#/components/schemas/PipelineDescription'
        currentState:
          enum:
            - JOB_STATE_UNKNOWN
            - JOB_STATE_STOPPED
            - JOB_STATE_RUNNING
            - JOB_STATE_DONE
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLED
            - JOB_STATE_UPDATED
            - JOB_STATE_DRAINING
            - JOB_STATE_DRAINED
            - JOB_STATE_PENDING
            - JOB_STATE_CANCELLING
            - JOB_STATE_QUEUED
            - JOB_STATE_RESOURCE_CLEANING_UP
          enumDescriptions:
            - The job's run state isn't specified.
            - '`JOB_STATE_STOPPED` indicates that the job has not yet started to run.'
            - '`JOB_STATE_RUNNING` indicates that the job is currently running.'
            - '`JOB_STATE_DONE` indicates that the job has successfully completed. This is a terminal job state. This state may be set by the Cloud Dataflow service, as a transition from `JOB_STATE_RUNNING`. It may also be set via a Cloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal state.'
            - '`JOB_STATE_FAILED` indicates that the job has failed. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.'
            - '`JOB_STATE_CANCELLED` indicates that the job has been explicitly cancelled. This is a terminal job state. This state may only be set via a Cloud Dataflow `UpdateJob` call, and only if the job has not yet reached another terminal state.'
            - '`JOB_STATE_UPDATED` indicates that the job was successfully updated, meaning that this job was stopped and another job was started, inheriting state from this one. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.'
            - '`JOB_STATE_DRAINING` indicates that the job is in the process of draining. A draining job has stopped pulling from its input sources and is processing any data that remains in-flight. This state may be set via a Cloud Dataflow `UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs that are draining may only transition to `JOB_STATE_DRAINED`, `JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_DRAINED` indicates that the job has been drained. A drained job terminated by stopping pulling from its input sources and processing any data that remained in-flight when draining was requested. This state is a terminal state, may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_DRAINING`.'
            - '`JOB_STATE_PENDING` indicates that the job has been created but is not yet running. Jobs that are pending may only transition to `JOB_STATE_RUNNING`, or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled and is in the process of stopping. Jobs that are cancelling may only transition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_QUEUED` indicates that the job has been created but is being delayed until launch. Jobs that are queued may only transition to `JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`.'
            - '`JOB_STATE_RESOURCE_CLEANING_UP` indicates that the batch job''s associated resources are currently being cleaned up after a successful run. Currently, this is an opt-in feature, please reach out to Cloud support team if you are interested.'
          type: string
          description: 'The current state of the job. Jobs are created in the `JOB_STATE_STOPPED` state unless otherwise specified. A job in the `JOB_STATE_RUNNING` state may asynchronously enter a terminal state. After a job has reached a terminal state, no further state updates may be made. This field may be mutated by the Cloud Dataflow service; callers cannot mutate it.'
        createdFromSnapshotId:
          type: string
          description: 'If this is specified, the job''s initial state is populated from the given snapshot.'
        name:
          description: 'The user-specified Cloud Dataflow job name. Only one Job with a given name can exist in a project within one region at any given time. Jobs in different regions can have the same name. If a caller attempts to create a Job with the same name as an already-existing Job, the attempt returns the existing Job. The name must match the regular expression `[a-z]([-a-z0-9]{0,1022}[a-z0-9])?`'
          type: string
        projectId:
          type: string
          description: The ID of the Cloud Platform project that the job belongs to.
        transformNameMapping:
          description: The map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job.
          additionalProperties:
            type: string
          type: object
        requestedState:
          enum:
            - JOB_STATE_UNKNOWN
            - JOB_STATE_STOPPED
            - JOB_STATE_RUNNING
            - JOB_STATE_DONE
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLED
            - JOB_STATE_UPDATED
            - JOB_STATE_DRAINING
            - JOB_STATE_DRAINED
            - JOB_STATE_PENDING
            - JOB_STATE_CANCELLING
            - JOB_STATE_QUEUED
            - JOB_STATE_RESOURCE_CLEANING_UP
          type: string
          enumDescriptions:
            - The job's run state isn't specified.
            - '`JOB_STATE_STOPPED` indicates that the job has not yet started to run.'
            - '`JOB_STATE_RUNNING` indicates that the job is currently running.'
            - '`JOB_STATE_DONE` indicates that the job has successfully completed. This is a terminal job state. This state may be set by the Cloud Dataflow service, as a transition from `JOB_STATE_RUNNING`. It may also be set via a Cloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal state.'
            - '`JOB_STATE_FAILED` indicates that the job has failed. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.'
            - '`JOB_STATE_CANCELLED` indicates that the job has been explicitly cancelled. This is a terminal job state. This state may only be set via a Cloud Dataflow `UpdateJob` call, and only if the job has not yet reached another terminal state.'
            - '`JOB_STATE_UPDATED` indicates that the job was successfully updated, meaning that this job was stopped and another job was started, inheriting state from this one. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.'
            - '`JOB_STATE_DRAINING` indicates that the job is in the process of draining. A draining job has stopped pulling from its input sources and is processing any data that remains in-flight. This state may be set via a Cloud Dataflow `UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs that are draining may only transition to `JOB_STATE_DRAINED`, `JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_DRAINED` indicates that the job has been drained. A drained job terminated by stopping pulling from its input sources and processing any data that remained in-flight when draining was requested. This state is a terminal state, may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_DRAINING`.'
            - '`JOB_STATE_PENDING` indicates that the job has been created but is not yet running. Jobs that are pending may only transition to `JOB_STATE_RUNNING`, or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled and is in the process of stopping. Jobs that are cancelling may only transition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_QUEUED` indicates that the job has been created but is being delayed until launch. Jobs that are queued may only transition to `JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`.'
            - '`JOB_STATE_RESOURCE_CLEANING_UP` indicates that the batch job''s associated resources are currently being cleaned up after a successful run. Currently, this is an opt-in feature, please reach out to Cloud support team if you are interested.'
          description: 'The job''s requested state. `UpdateJob` may be used to switch between the `JOB_STATE_STOPPED` and `JOB_STATE_RUNNING` states, by setting requested_state. `UpdateJob` may also be used to directly set a job''s requested state to `JOB_STATE_CANCELLED` or `JOB_STATE_DONE`, irrevocably terminating the job if it has not already reached a terminal state.'
        id:
          type: string
          description: 'The unique ID of this job. This field is set by the Cloud Dataflow service when the Job is created, and is immutable for the life of the job.'
        jobMetadata:
          $ref: '#/components/schemas/JobMetadata'
          description: This field is populated by the Dataflow service to support filtering jobs by the metadata values provided here. Populated for ListJobs and all GetJob views SUMMARY and higher.
      type: object
    SplitInt64:
      properties:
        highBits:
          type: integer
          format: int32
          description: 'The high order bits, including the sign: n >> 32.'
        lowBits:
          description: 'The low order bits: n & 0xffffffff.'
          type: integer
          format: uint32
      type: object
      id: SplitInt64
      description: 'A representation of an int64, n, that is immune to precision loss when encoded in JSON.'
    Environment:
      properties:
        tempStoragePrefix:
          description: 'The prefix of the resources the system should use for temporary storage. The system will append the suffix "/temp-{JOBNAME} to this resource prefix, where {JOBNAME} is the value of the job_name field. The resulting bucket and object prefix is used as the prefix of the resources used to store temporary data needed during the job execution. NOTE: This will override the value in taskrunner_settings. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}'
          type: string
        serviceKmsKeyName:
          description: 'If set, contains the Cloud KMS key identifier used to encrypt data at rest, AKA a Customer Managed Encryption Key (CMEK). Format: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY'
          type: string
        debugOptions:
          description: Any debugging options to be supplied to the job.
          $ref: '#/components/schemas/DebugOptions'
        useStreamingEngineResourceBasedBilling:
          readOnly: true
          description: Output only. Whether the job uses the new streaming engine billing model based on resource usage.
          type: boolean
        serviceOptions:
          type: array
          description: 'The list of service options to enable. This field should be used for service related experiments only. These experiments, when graduating to GA, should be replaced by dedicated fields or become default (i.e. always on).'
          items:
            type: string
        workerPools:
          type: array
          description: The worker pools. At least one "harness" worker pool must be specified in order for the job to have workers.
          items:
            $ref: '#/components/schemas/WorkerPool'
        flexResourceSchedulingGoal:
          description: Which Flexible Resource Scheduling mode to run in.
          type: string
          enumDescriptions:
            - Run in the default mode.
            - Optimize for lower execution time.
            - Optimize for lower cost.
          enum:
            - FLEXRS_UNSPECIFIED
            - FLEXRS_SPEED_OPTIMIZED
            - FLEXRS_COST_OPTIMIZED
        dataset:
          description: 'The dataset for the current project where various workflow related tables are stored. The supported resource type is: Google BigQuery: bigquery.googleapis.com/{dataset}'
          type: string
        shuffleMode:
          readOnly: true
          description: Output only. The shuffle mode used for the job.
          type: string
          enumDescriptions:
            - Shuffle mode information is not available.
            - Shuffle is done on the worker VMs.
            - Shuffle is done on the service side.
          enum:
            - SHUFFLE_MODE_UNSPECIFIED
            - VM_BASED
            - SERVICE_BASED
        version:
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
          description: A structure describing which components and their versions of the service are required in order to run the job.
        clusterManagerApiService:
          type: string
          description: 'The type of cluster manager API to use. If unknown or unspecified, the service will attempt to choose a reasonable default. This should be in the form of the API service name, e.g. "compute.googleapis.com".'
        sdkPipelineOptions:
          type: object
          description: The Cloud Dataflow SDK pipeline options specified by the user. These options are passed through the service and are used to recreate the SDK pipeline options on the worker in a language agnostic and platform independent way.
          additionalProperties:
            type: any
            description: Properties of the object.
        internalExperiments:
          type: object
          description: Experimental settings.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        serviceAccountEmail:
          description: Identity to run virtual machines as. Defaults to the default account.
          type: string
        workerZone:
          type: string
          description: 'The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane''s region is chosen based on available capacity.'
        userAgent:
          description: A description of the process that generated the request.
          additionalProperties:
            description: Properties of the object.
            type: any
          type: object
        experiments:
          description: The list of experiments to enable. This field should be used for SDK related experiments and not for service related experiments. The proper field for service related experiments is service_options.
          type: array
          items:
            type: string
        workerRegion:
          type: string
          description: 'The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane''s region.'
      description: Describes the environment in which a Dataflow Job runs.
      type: object
      id: Environment
    TransformSummary:
      id: TransformSummary
      description: 'Description of the type, names/ids, and input/outputs for a transform.'
      properties:
        name:
          type: string
          description: User provided name for this transform instance.
        kind:
          enumDescriptions:
            - Unrecognized transform type.
            - ParDo transform.
            - Group By Key transform.
            - Flatten transform.
            - Read transform.
            - Write transform.
            - 'Constructs from a constant value, such as with Create.of.'
            - Creates a Singleton view of a collection.
            - 'Opening or closing a shuffle session, often as part of a GroupByKey.'
          type: string
          description: Type of transform.
          enum:
            - UNKNOWN_KIND
            - PAR_DO_KIND
            - GROUP_BY_KEY_KIND
            - FLATTEN_KIND
            - READ_KIND
            - WRITE_KIND
            - CONSTANT_KIND
            - SINGLETON_KIND
            - SHUFFLE_KIND
        id:
          type: string
          description: SDK generated id of this transform instance.
        displayData:
          description: Transform-specific display data.
          type: array
          items:
            $ref: '#/components/schemas/DisplayData'
        inputCollectionName:
          type: array
          items:
            type: string
          description: User names for all collection inputs to this transform.
        outputCollectionName:
          items:
            type: string
          description: User names for all collection outputs to this transform.
          type: array
      type: object
    SdkBug:
      id: SdkBug
      description: A bug found in the Dataflow SDK.
      properties:
        severity:
          enum:
            - SEVERITY_UNSPECIFIED
            - NOTICE
            - WARNING
            - SEVERE
          description: Output only. How severe the SDK bug is.
          type: string
          enumDescriptions:
            - A bug of unknown severity.
            - A minor bug that that may reduce reliability or performance for some jobs. Impact will be minimal or non-existent for most jobs.
            - 'A bug that has some likelihood of causing performance degradation, data loss, or job failures.'
            - 'A bug with extremely significant impact. Jobs may fail erroneously, performance may be severely degraded, and data loss may be very likely.'
          readOnly: true
        type:
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - GENERAL
            - PERFORMANCE
            - DATALOSS
          enumDescriptions:
            - Unknown issue with this SDK.
            - Catch-all for SDK bugs that don't fit in the below categories.
            - Using this version of the SDK may result in degraded performance.
            - Using this version of the SDK may cause data loss.
          readOnly: true
          description: Output only. Describes the impact of this SDK bug.
        uri:
          type: string
          description: Output only. Link to more information on the bug.
          readOnly: true
      type: object
    WorkItemDetails:
      properties:
        taskId:
          description: Name of this work item.
          type: string
        stragglerInfo:
          $ref: '#/components/schemas/StragglerInfo'
          description: Information about straggler detections for this work item.
        endTime:
          format: google-datetime
          description: 'End time of this work item attempt. If the work item is completed, this is the actual end time of the work item. Otherwise, it is the predicted end time.'
          type: string
        attemptId:
          description: Attempt ID of this work item
          type: string
        metrics:
          items:
            $ref: '#/components/schemas/MetricUpdate'
          description: Metrics for this work item.
          type: array
        startTime:
          format: google-datetime
          type: string
          description: Start time of this work item attempt.
        progress:
          description: Progress of this work item.
          $ref: '#/components/schemas/ProgressTimeseries'
        state:
          description: State of this work item.
          type: string
          enumDescriptions:
            - The component state is unknown or unspecified.
            - The component is not yet running.
            - The component is currently running.
            - The component succeeded.
            - The component failed.
            - Execution of the component was cancelled.
          enum:
            - EXECUTION_STATE_UNKNOWN
            - EXECUTION_STATE_NOT_STARTED
            - EXECUTION_STATE_RUNNING
            - EXECUTION_STATE_SUCCEEDED
            - EXECUTION_STATE_FAILED
            - EXECUTION_STATE_CANCELLED
      description: Information about an individual work item execution.
      id: WorkItemDetails
      type: object
    MapTask:
      description: 'MapTask consists of an ordered set of instructions, each of which describes one particular low-level operation for the worker to perform in order to accomplish the MapTask''s WorkItem. Each instruction must appear in the list before any instructions which depends on its output.'
      id: MapTask
      type: object
      properties:
        systemName:
          type: string
          description: System-defined name of this MapTask. Unique across the workflow.
        stageName:
          description: System-defined name of the stage containing this MapTask. Unique across the workflow.
          type: string
        counterPrefix:
          type: string
          description: Counter prefix that can be used to prefix counters. Not currently used in Dataflow.
        instructions:
          items:
            $ref: '#/components/schemas/ParallelInstruction'
          description: The instructions in the MapTask.
          type: array
    ParallelInstruction:
      properties:
        flatten:
          $ref: '#/components/schemas/FlattenInstruction'
          description: Additional information for Flatten instructions.
        systemName:
          description: System-defined name of this operation. Unique across the workflow.
          type: string
        name:
          description: User-provided name of this operation.
          type: string
        read:
          description: Additional information for Read instructions.
          $ref: '#/components/schemas/ReadInstruction'
        outputs:
          description: Describes the outputs of the instruction.
          items:
            $ref: '#/components/schemas/InstructionOutput'
          type: array
        partialGroupByKey:
          $ref: '#/components/schemas/PartialGroupByKeyInstruction'
          description: Additional information for PartialGroupByKey instructions.
        write:
          $ref: '#/components/schemas/WriteInstruction'
          description: Additional information for Write instructions.
        parDo:
          description: Additional information for ParDo instructions.
          $ref: '#/components/schemas/ParDoInstruction'
        originalName:
          type: string
          description: System-defined name for the operation in the original workflow graph.
      description: Describes a particular operation comprising a MapTask.
      type: object
      id: ParallelInstruction
    SourceSplitShard:
      properties:
        derivationMode:
          type: string
          enum:
            - SOURCE_DERIVATION_MODE_UNKNOWN
            - SOURCE_DERIVATION_MODE_INDEPENDENT
            - SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT
            - SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT
          enumDescriptions:
            - 'The source derivation is unknown, or unspecified.'
            - Produce a completely independent Source with no base.
            - Produce a Source based on the Source being split.
            - Produce a Source based on the base of the Source being split.
          description: DEPRECATED
        source:
          description: DEPRECATED
          $ref: '#/components/schemas/Source'
      type: object
      description: DEPRECATED in favor of DerivedSource.
      id: SourceSplitShard
    DistributionUpdate:
      id: DistributionUpdate
      properties:
        histogram:
          $ref: '#/components/schemas/Histogram'
          description: (Optional) Histogram of value counts for the distribution.
        count:
          description: The count of the number of elements present in the distribution.
          $ref: '#/components/schemas/SplitInt64'
        sum:
          $ref: '#/components/schemas/SplitInt64'
          description: Use an int64 since we'd prefer the added precision. If overflow is a common problem we can detect it and use an additional int64 or a double.
        max:
          description: The maximum value present in the distribution.
          $ref: '#/components/schemas/SplitInt64'
        min:
          description: The minimum value present in the distribution.
          $ref: '#/components/schemas/SplitInt64'
        sumOfSquares:
          format: double
          description: Use a double since the sum of squares is likely to overflow int64.
          type: number
      type: object
      description: A metric value representing a distribution.
    WorkerPool:
      id: WorkerPool
      type: object
      properties:
        dataDisks:
          description: Data disks that are used by a VM in this workflow.
          type: array
          items:
            $ref: '#/components/schemas/Disk'
        numThreadsPerWorker:
          type: integer
          description: 'The number of threads per worker harness. If empty or unspecified, the service will choose a number of threads (according to the number of cores on the selected machine type for batch, or 1 by convention for streaming).'
          format: int32
        packages:
          description: Packages to be installed on workers.
          items:
            $ref: '#/components/schemas/Package'
          type: array
        workerHarnessContainerImage:
          description: 'Required. Docker container image that executes the Cloud Dataflow worker harness, residing in Google Container Registry. Deprecated for the Fn API path. Use sdk_harness_container_images instead.'
          type: string
        poolArgs:
          description: Extra arguments for this worker pool.
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        kind:
          type: string
          description: The kind of the worker pool; currently only `harness` and `shuffle` are supported.
        diskSizeGb:
          description: 'Size of root disk for VMs, in GB. If zero or unspecified, the service will attempt to choose a reasonable default.'
          type: integer
          format: int32
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Metadata to set on the Google Compute Engine VMs.
        diskType:
          type: string
          description: 'Type of root disk for VMs. If empty or unspecified, the service will attempt to choose a reasonable default.'
        ipConfiguration:
          enumDescriptions:
            - 'The configuration is unknown, or unspecified.'
            - Workers should have public IP addresses.
            - Workers should have private IP addresses.
          enum:
            - WORKER_IP_UNSPECIFIED
            - WORKER_IP_PUBLIC
            - WORKER_IP_PRIVATE
          type: string
          description: Configuration for VM IPs.
        sdkHarnessContainerImages:
          items:
            $ref: '#/components/schemas/SdkHarnessContainerImage'
          type: array
          description: Set of SDK harness containers needed to execute this pipeline. This will only be set in the Fn API path. For non-cross-language pipelines this should have only one entry. Cross-language pipelines will have two or more entries.
        defaultPackageSet:
          enum:
            - DEFAULT_PACKAGE_SET_UNKNOWN
            - DEFAULT_PACKAGE_SET_NONE
            - DEFAULT_PACKAGE_SET_JAVA
            - DEFAULT_PACKAGE_SET_PYTHON
          description: The default package set to install. This allows the service to select a default set of packages which are useful to worker harnesses written in a particular language.
          enumDescriptions:
            - 'The default set of packages to stage is unknown, or unspecified.'
            - Indicates that no packages should be staged at the worker unless explicitly specified by the job.
            - Stage packages typically useful to workers written in Java.
            - Stage packages typically useful to workers written in Python.
          type: string
        teardownPolicy:
          enum:
            - TEARDOWN_POLICY_UNKNOWN
            - TEARDOWN_ALWAYS
            - TEARDOWN_ON_SUCCESS
            - TEARDOWN_NEVER
          enumDescriptions:
            - 'The teardown policy isn''t specified, or is unknown.'
            - Always teardown the resource.
            - Teardown the resource on success. This is useful for debugging failures.
            - Never teardown the resource. This is useful for debugging and development.
          type: string
          description: 'Sets the policy for determining when to turndown worker pool. Allowed values are: `TEARDOWN_ALWAYS`, `TEARDOWN_ON_SUCCESS`, and `TEARDOWN_NEVER`. `TEARDOWN_ALWAYS` means workers are always torn down regardless of whether the job succeeds. `TEARDOWN_ON_SUCCESS` means workers are torn down if the job succeeds. `TEARDOWN_NEVER` means the workers are never torn down. If the workers are not torn down by the service, they will continue to run and use Google Compute Engine VM resources in the user''s project until they are explicitly terminated by the user. Because of this, Google recommends using the `TEARDOWN_ALWAYS` policy except for small, manually supervised test jobs. If unknown or unspecified, the service will attempt to choose a reasonable default.'
        onHostMaintenance:
          description: 'The action to take on host maintenance, as defined by the Google Compute Engine API.'
          type: string
        diskSourceImage:
          description: Fully qualified source image for disks.
          type: string
        network:
          type: string
          description: 'Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".'
        machineType:
          description: 'Machine type (e.g. "n1-standard-1"). If empty or unspecified, the service will attempt to choose a reasonable default.'
          type: string
        taskrunnerSettings:
          $ref: '#/components/schemas/TaskRunnerSettings'
          description: Settings passed through to Google Compute Engine workers when using the standard Dataflow task runner. Users should ignore this field.
        numWorkers:
          type: integer
          description: 'Number of Google Compute Engine workers in this pool needed to execute the job. If zero or unspecified, the service will attempt to choose a reasonable default.'
          format: int32
        subnetwork:
          description: 'Subnetwork to which VMs will be assigned, if desired. Expected to be of the form "regions/REGION/subnetworks/SUBNETWORK".'
          type: string
        zone:
          type: string
          description: 'Zone to run the worker pools in. If empty or unspecified, the service will attempt to choose a reasonable default.'
        autoscalingSettings:
          description: Settings for autoscaling of this WorkerPool.
          $ref: '#/components/schemas/AutoscalingSettings'
      description: 'Describes one particular pool of Cloud Dataflow workers to be instantiated by the Cloud Dataflow service in order to perform the computations required by a job. Note that a workflow job may use multiple pools, in order to match the various computational requirements of the various stages of the job.'
    KeyRangeLocation:
      description: Location information for a specific key-range of a sharded computation. Currently we only support UTF-8 character splits to simplify encoding into JSON.
      id: KeyRangeLocation
      type: object
      properties:
        end:
          type: string
          description: The end (exclusive) of the key range.
        dataDisk:
          description: 'The name of the data disk where data for this range is stored. This name is local to the Google Cloud Platform project and uniquely identifies the disk within that project, for example "myproject-1014-104817-4c2-harness-0-disk-1".'
          type: string
        deliveryEndpoint:
          type: string
          description: The physical location of this range assignment to be used for streaming computation cross-worker message delivery.
        deprecatedPersistentDirectory:
          description: 'DEPRECATED. The location of the persistent state for this range, as a persistent directory in the worker local filesystem.'
          type: string
          deprecated: true
        start:
          type: string
          description: The start (inclusive) of the key range.
    SourceOperationRequest:
      id: SourceOperationRequest
      description: A work item that represents the different operations that can be performed on a user-defined Source specification.
      type: object
      properties:
        name:
          description: User-provided name of the Read instruction for this source.
          type: string
        getMetadata:
          description: Information about a request to get metadata about a source.
          $ref: '#/components/schemas/SourceGetMetadataRequest'
        stageName:
          description: System-defined name of the stage containing the source operation. Unique across the workflow.
          type: string
        split:
          $ref: '#/components/schemas/SourceSplitRequest'
          description: Information about a request to split a source.
        systemName:
          type: string
          description: System-defined name of the Read instruction for this source. Unique across the workflow.
        originalName:
          type: string
          description: System-defined name for the Read instruction for this source in the original workflow graph.
    GetDebugConfigRequest:
      properties:
        workerId:
          description: 'The worker id, i.e., VM hostname.'
          type: string
        componentId:
          type: string
          description: The internal component id for which debug configuration is requested.
        location:
          type: string
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.'
      id: GetDebugConfigRequest
      type: object
      description: Request to get updated debug configuration for component.
    ComponentSource:
      id: ComponentSource
      properties:
        originalTransformOrCollection:
          type: string
          description: User name for the original user transform or collection with which this source is most closely associated.
        name:
          description: Dataflow service generated name for this source.
          type: string
        userName:
          type: string
          description: Human-readable name for this transform; may be user or system generated.
      description: Description of an interstitial value between transforms in an execution stage.
      type: object
    WorkerMessage:
      type: object
      id: WorkerMessage
      description: WorkerMessage provides information to the backend about a worker.
      properties:
        workerThreadScalingReport:
          $ref: '#/components/schemas/WorkerThreadScalingReport'
          description: Thread scaling information reported by workers.
        workerHealthReport:
          $ref: '#/components/schemas/WorkerHealthReport'
          description: The health of a worker.
        workerMessageCode:
          $ref: '#/components/schemas/WorkerMessageCode'
          description: A worker message code.
        workerMetrics:
          $ref: '#/components/schemas/ResourceUtilizationReport'
          description: Resource metrics reported by workers.
        time:
          format: google-datetime
          type: string
          description: The timestamp of the worker_message.
        dataSamplingReport:
          description: Optional. Contains metrics related to go/dataflow-data-sampling-telemetry.
          $ref: '#/components/schemas/DataSamplingReport'
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Labels are used to group WorkerMessages. For example, a worker_message about a particular container might have the labels: { "JOB_ID": "2015-04-22", "WORKER_ID": "wordcount-vm-2015…" "CONTAINER_TYPE": "worker", "CONTAINER_ID": "ac1234def"} Label tags typically correspond to Label enum values. However, for ease of development other strings can be used as tags. LABEL_UNSPECIFIED should not be used here.'
        workerShutdownNotice:
          description: Shutdown notice by workers.
          $ref: '#/components/schemas/WorkerShutdownNotice'
        workerLifecycleEvent:
          $ref: '#/components/schemas/WorkerLifecycleEvent'
          description: Record of worker lifecycle events.
    HotKeyInfo:
      id: HotKeyInfo
      type: object
      properties:
        key:
          description: 'A detected hot key that is causing limited parallelism. This field will be populated only if the following flag is set to true: "--enable_hot_key_logging".'
          type: string
        hotKeyAge:
          description: The age of the hot key measured from when it was first detected.
          format: google-duration
          type: string
        keyTruncated:
          type: boolean
          description: 'If true, then the above key is truncated and cannot be deserialized. This occurs if the key above is populated and the key size is >5MB.'
      description: Information about a hot key.
    StageSource:
      properties:
        userName:
          description: Human-readable name for this source; may be user or system generated.
          type: string
        sizeBytes:
          type: string
          format: int64
          description: 'Size of the source, if measurable.'
        name:
          description: Dataflow service generated name for this source.
          type: string
        originalTransformOrCollection:
          type: string
          description: User name for the original user transform or collection with which this source is most closely associated.
      description: Description of an input or output of an execution stage.
      type: object
      id: StageSource
    ParameterMetadata:
      description: Metadata for a specific parameter.
      id: ParameterMetadata
      properties:
        name:
          description: Required. The name of the parameter.
          type: string
        parentName:
          type: string
          description: Optional. Specifies the name of the parent parameter. Used in conjunction with 'parent_trigger_values' to make this parameter conditional (will only be rendered conditionally). Should be mappable to a ParameterMetadata.name field.
        label:
          type: string
          description: Required. The label to display for the parameter.
        regexes:
          type: array
          description: Optional. Regexes that the parameter must match.
          items:
            type: string
        groupName:
          description: Optional. Specifies a group name for this parameter to be rendered under. Group header text will be rendered exactly as specified in this field. Only considered when parent_name is NOT provided.
          type: string
        isOptional:
          description: Optional. Whether the parameter is optional. Defaults to false.
          type: boolean
        paramType:
          description: Optional. The type of the parameter. Used for selecting input picker.
          enumDescriptions:
            - Default input type.
            - The parameter specifies generic text input.
            - The parameter specifies a Cloud Storage Bucket to read from.
            - The parameter specifies a Cloud Storage Bucket to write to.
            - The parameter specifies a Cloud Storage file path to read from.
            - The parameter specifies a Cloud Storage file path to write to.
            - The parameter specifies a Cloud Storage folder path to read from.
            - The parameter specifies a Cloud Storage folder to write to.
            - The parameter specifies a Pub/Sub Topic.
            - The parameter specifies a Pub/Sub Subscription.
            - The parameter specifies a BigQuery table.
            - The parameter specifies a JavaScript UDF in Cloud Storage.
            - The parameter specifies a Service Account email.
            - The parameter specifies a Machine Type.
            - The parameter specifies a KMS Key name.
            - The parameter specifies a Worker Region.
            - The parameter specifies a Worker Zone.
            - The parameter specifies a boolean input.
            - The parameter specifies an enum input.
            - The parameter specifies a number input.
          type: string
          enum:
            - DEFAULT
            - TEXT
            - GCS_READ_BUCKET
            - GCS_WRITE_BUCKET
            - GCS_READ_FILE
            - GCS_WRITE_FILE
            - GCS_READ_FOLDER
            - GCS_WRITE_FOLDER
            - PUBSUB_TOPIC
            - PUBSUB_SUBSCRIPTION
            - BIGQUERY_TABLE
            - JAVASCRIPT_UDF_FILE
            - SERVICE_ACCOUNT
            - MACHINE_TYPE
            - KMS_KEY_NAME
            - WORKER_REGION
            - WORKER_ZONE
            - BOOLEAN
            - ENUM
            - NUMBER
        parentTriggerValues:
          type: array
          description: 'Optional. The value(s) of the ''parent_name'' parameter which will trigger this parameter to be shown. If left empty, ANY non-empty value in parent_name will trigger this parameter to be shown. Only considered when this parameter is conditional (when ''parent_name'' has been provided).'
          items:
            type: string
        enumOptions:
          description: Optional. The options shown when ENUM ParameterType is specified.
          type: array
          items:
            $ref: '#/components/schemas/ParameterMetadataEnumOption'
        helpText:
          type: string
          description: Required. The help text to display for the parameter.
        customMetadata:
          description: Optional. Additional metadata for describing this parameter.
          type: object
          additionalProperties:
            type: string
      type: object
    ReportWorkItemStatusRequest:
      type: object
      description: Request to report the status of WorkItems.
      properties:
        workerId:
          description: 'The ID of the worker reporting the WorkItem status. If this does not match the ID of the worker which the Dataflow service believes currently has the lease on the WorkItem, the report will be dropped (with an error response).'
          type: string
        location:
          type: string
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the WorkItem''s job.'
        currentWorkerTime:
          description: The current timestamp at the worker.
          type: string
          format: google-datetime
        workItemStatuses:
          items:
            $ref: '#/components/schemas/WorkItemStatus'
          description: 'The order is unimportant, except that the order of the WorkItemServiceState messages in the ReportWorkItemStatusResponse corresponds to the order of WorkItemStatus messages here.'
          type: array
        unifiedWorkerRequest:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
          description: Untranslated bag-of-bytes WorkProgressUpdateRequest from UnifiedWorker.
      id: ReportWorkItemStatusRequest
    WorkItemStatus:
      type: object
      id: WorkItemStatus
      properties:
        totalThrottlerWaitTimeSeconds:
          description: Total time the worker spent being throttled by external systems.
          type: number
          format: double
        dynamicSourceSplit:
          $ref: '#/components/schemas/DynamicSourceSplit'
          description: See documentation of stop_position.
        sourceOperationResponse:
          $ref: '#/components/schemas/SourceOperationResponse'
          description: 'If the work item represented a SourceOperationRequest, and the work is completed, contains the result of the operation.'
        sourceFork:
          description: DEPRECATED in favor of dynamic_source_split.
          $ref: '#/components/schemas/SourceFork'
          deprecated: true
        stopPosition:
          description: 'A worker may split an active map task in two parts, "primary" and "residual", continuing to process the primary part and returning the residual part into the pool of available work. This event is called a "dynamic split" and is critical to the dynamic work rebalancing feature. The two obtained sub-tasks are called "parts" of the split. The parts, if concatenated, must represent the same input as would be read by the current task if the split did not happen. The exact way in which the original task is decomposed into the two parts is specified either as a position demarcating them (stop_position), or explicitly as two DerivedSources, if this task consumes a user-defined source type (dynamic_source_split). The "current" task is adjusted as a result of the split: after a task with range [A, B) sends a stop_position update at C, its range is considered to be [A, C), e.g.: * Progress should be interpreted relative to the new range, e.g. "75% completed" means "75% of [A, C) completed" * The worker should interpret proposed_stop_position relative to the new range, e.g. "split at 68%" should be interpreted as "split at 68% of [A, C)". * If the worker chooses to split again using stop_position, only stop_positions in [A, C) will be accepted. * Etc. dynamic_source_split has similar semantics: e.g., if a task with source S splits using dynamic_source_split into {P, R} (where P and R must be together equivalent to S), then subsequent progress and proposed_stop_position should be interpreted relative to P, and in a potential subsequent dynamic_source_split into {P'', R''}, P'' and R'' must be together equivalent to P, etc.'
          $ref: '#/components/schemas/Position'
        workItemId:
          type: string
          description: Identifies the WorkItem.
        reportIndex:
          type: string
          format: int64
          description: 'The report index. When a WorkItem is leased, the lease will contain an initial report index. When a WorkItem''s status is reported to the system, the report should be sent with that report index, and the response will contain the index the worker should use for the next report. Reports received with unexpected index values will be rejected by the service. In order to preserve idempotency, the worker should not alter the contents of a report, even if the worker must submit the same report multiple times before getting back a response. The worker should not submit a subsequent report until the response for the previous report had been received from the service.'
        progress:
          deprecated: true
          $ref: '#/components/schemas/ApproximateProgress'
          description: DEPRECATED in favor of reported_progress.
        counterUpdates:
          description: Worker output counters for this WorkItem.
          items:
            $ref: '#/components/schemas/CounterUpdate'
          type: array
        requestedLeaseDuration:
          type: string
          description: Amount of time the worker requests for its lease.
          format: google-duration
        errors:
          description: 'Specifies errors which occurred during processing. If errors are provided, and completed = true, then the WorkItem is considered to have failed.'
          type: array
          items:
            $ref: '#/components/schemas/Status'
        reportedProgress:
          $ref: '#/components/schemas/ApproximateReportedProgress'
          description: The worker's progress through this WorkItem.
        metricUpdates:
          deprecated: true
          items:
            $ref: '#/components/schemas/MetricUpdate'
          type: array
          description: DEPRECATED in favor of counter_updates.
        completed:
          description: True if the WorkItem was completed (successfully or unsuccessfully).
          type: boolean
      description: Conveys a worker's progress through the work described by a WorkItem.
    JobMetadata:
      type: object
      properties:
        spannerDetails:
          description: Identification of a Spanner source used in the Dataflow job.
          items:
            $ref: '#/components/schemas/SpannerIODetails'
          type: array
        bigTableDetails:
          items:
            $ref: '#/components/schemas/BigTableIODetails'
          type: array
          description: Identification of a Cloud Bigtable source used in the Dataflow job.
        pubsubDetails:
          description: Identification of a Pub/Sub source used in the Dataflow job.
          items:
            $ref: '#/components/schemas/PubSubIODetails'
          type: array
        bigqueryDetails:
          description: Identification of a BigQuery source used in the Dataflow job.
          type: array
          items:
            $ref: '#/components/schemas/BigQueryIODetails'
        fileDetails:
          description: Identification of a File source used in the Dataflow job.
          items:
            $ref: '#/components/schemas/FileIODetails'
          type: array
        sdkVersion:
          description: The SDK version used to run the job.
          $ref: '#/components/schemas/SdkVersion'
        userDisplayProperties:
          description: List of display properties to help UI filter jobs.
          type: object
          additionalProperties:
            type: string
        datastoreDetails:
          type: array
          description: Identification of a Datastore source used in the Dataflow job.
          items:
            $ref: '#/components/schemas/DatastoreIODetails'
      id: JobMetadata
      description: Metadata available primarily for filtering jobs. Will be included in the ListJob response and Job SUMMARY view.
    Status:
      id: Status
      properties:
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        code:
          format: int32
          type: integer
          description: 'The status code, which should be an enum value of google.rpc.Code.'
        details:
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
    MetricUpdate:
      description: Describes the state of a metric.
      properties:
        meanSum:
          type: any
          description: Worker-computed aggregate value for the "Mean" aggregation kind. This holds the sum of the aggregated values and is used in combination with mean_count below to obtain the actual mean aggregate value. The only possible value types are Long and Double.
        internal:
          description: Worker-computed aggregate value for internal use by the Dataflow service.
          type: any
        updateTime:
          type: string
          format: google-datetime
          description: Timestamp associated with the metric value. Optional when workers are reporting work progress; it will be filled in responses from the metrics API.
        distribution:
          description: A struct value describing properties of a distribution of numeric values.
          type: any
        cumulative:
          type: boolean
          description: 'True if this metric is reported as the total cumulative aggregate value accumulated since the worker started working on this WorkItem. By default this is false, indicating that this metric is reported as a delta that is not associated with any WorkItem.'
        name:
          $ref: '#/components/schemas/MetricStructuredName'
          description: Name of the metric.
        set:
          type: any
          description: 'Worker-computed aggregate value for the "Set" aggregation kind. The only possible value type is a list of Values whose type can be Long, Double, or String, according to the metric''s type. All Values in the list must be of the same type.'
        gauge:
          description: 'A struct value describing properties of a Gauge. Metrics of gauge type show the value of a metric across time, and is aggregated based on the newest value.'
          type: any
        scalar:
          type: any
          description: 'Worker-computed aggregate value for aggregation kinds "Sum", "Max", "Min", "And", and "Or". The possible value types are Long, Double, and Boolean.'
        meanCount:
          type: any
          description: Worker-computed aggregate value for the "Mean" aggregation kind. This holds the count of the aggregated values and is used in combination with mean_sum above to obtain the actual mean aggregate value. The only possible value type is Long.
        kind:
          type: string
          description: 'Metric aggregation kind. The possible metric aggregation kinds are "Sum", "Max", "Min", "Mean", "Set", "And", "Or", and "Distribution". The specified aggregation kind is case-insensitive. If omitted, this is not an aggregated value but instead a single metric sample value.'
      type: object
      id: MetricUpdate
    StreamLocation:
      properties:
        customSourceLocation:
          $ref: '#/components/schemas/CustomSourceLocation'
          description: The stream is a custom source.
        sideInputLocation:
          $ref: '#/components/schemas/StreamingSideInputLocation'
          description: The stream is a streaming side input.
        streamingStageLocation:
          description: The stream is part of another computation within the current streaming Dataflow job.
          $ref: '#/components/schemas/StreamingStageLocation'
        pubsubLocation:
          $ref: '#/components/schemas/PubsubLocation'
          description: The stream is a pubsub stream.
      id: StreamLocation
      description: 'Describes a stream of data, either as input to be processed or as output of a streaming Dataflow job.'
      type: object
    RuntimeEnvironment:
      id: RuntimeEnvironment
      type: object
      properties:
        maxWorkers:
          description: 'Optional. The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000. The default value is 1.'
          type: integer
          format: int32
        zone:
          description: 'Optional. The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.'
          type: string
        workerRegion:
          type: string
          description: 'Required. The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane''s region.'
        machineType:
          type: string
          description: Optional. The machine type to use for the job. Defaults to the value from the template if not specified.
        kmsKeyName:
          type: string
          description: 'Optional. Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/'
        subnetwork:
          type: string
          description: 'Optional. Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form "https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK" or "regions/REGION/subnetworks/SUBNETWORK". If the subnetwork is located in a Shared VPC network, you must use the complete URL.'
        network:
          type: string
          description: 'Optional. Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".'
        serviceAccountEmail:
          type: string
          description: Optional. The email address of the service account to run the job as.
        numWorkers:
          format: int32
          type: integer
          description: Optional. The initial number of Google Compute Engine instances for the job. The default value is 11.
        additionalExperiments:
          items:
            type: string
          type: array
          description: 'Optional. Additional experiment flags for the job, specified with the `--experiments` option.'
        workerZone:
          description: 'Optional. The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane''s region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.'
          type: string
        ipConfiguration:
          description: Optional. Configuration for VM IPs.
          enumDescriptions:
            - 'The configuration is unknown, or unspecified.'
            - Workers should have public IP addresses.
            - Workers should have private IP addresses.
          enum:
            - WORKER_IP_UNSPECIFIED
            - WORKER_IP_PUBLIC
            - WORKER_IP_PRIVATE
          type: string
        additionalUserLabels:
          additionalProperties:
            type: string
          type: object
          description: 'Optional. Additional user labels to be specified for the job. Keys and values should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1kg", "count": "3" }.'
        bypassTempDirValidation:
          description: Optional. Whether to bypass the safety checks for the job's temporary directory. Use with caution.
          type: boolean
        diskSizeGb:
          description: 'Optional. The disk size, in gigabytes, to use on each remote Compute Engine worker instance.'
          format: int32
          type: integer
        tempLocation:
          type: string
          description: 'Required. The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.'
        enableStreamingEngine:
          type: boolean
          description: Optional. Whether to enable Streaming Engine for the job.
      description: The environment values to set at runtime.
    ListSnapshotsResponse:
      type: object
      properties:
        snapshots:
          items:
            $ref: '#/components/schemas/Snapshot'
          type: array
          description: Returned snapshots.
      id: ListSnapshotsResponse
      description: List of snapshots.
    ComponentTransform:
      properties:
        originalTransform:
          type: string
          description: User name for the original user transform with which this transform is most closely associated.
        name:
          type: string
          description: Dataflow service generated name for this source.
        userName:
          type: string
          description: Human-readable name for this transform; may be user or system generated.
      id: ComponentTransform
      type: object
      description: Description of a transform executed as part of an execution stage.
    Parameter:
      id: Parameter
      type: object
      properties:
        key:
          description: Key or name for this parameter.
          type: string
        value:
          description: Value for this parameter.
          type: any
      description: Structured data associated with this message.
    DatastoreIODetails:
      id: DatastoreIODetails
      type: object
      properties:
        projectId:
          description: ProjectId accessed in the connection.
          type: string
        namespace:
          type: string
          description: Namespace used in the connection.
      description: Metadata for a Datastore connector used by the job.
    WorkerShutdownNoticeResponse:
      id: WorkerShutdownNoticeResponse
      properties: {}
      type: object
      description: Service-side response to WorkerMessage issuing shutdown notice.
    SideInputInfo:
      type: object
      description: Information about a side input of a DoFn or an input of a SeqDoFn.
      id: SideInputInfo
      properties:
        tag:
          description: The id of the tag the user code will access this side input by; this should correspond to the tag of some MultiOutputInfo.
          type: string
        kind:
          type: object
          description: How to interpret the source element(s) as a side input value.
          additionalProperties:
            type: any
            description: Properties of the object.
        sources:
          items:
            $ref: '#/components/schemas/Source'
          type: array
          description: 'The source(s) to read element(s) from to get the value of this side input. If more than one source, then the elements are taken from the sources, in the specified order if order matters. At least one source is required.'
    Snapshot:
      id: Snapshot
      properties:
        projectId:
          type: string
          description: The project this snapshot belongs to.
        diskSizeBytes:
          description: The disk byte size of the snapshot. Only available for snapshots in READY state.
          type: string
          format: int64
        sourceJobId:
          type: string
          description: The job this snapshot was created from.
        description:
          description: User specified description of the snapshot. Maybe empty.
          type: string
        ttl:
          format: google-duration
          type: string
          description: The time after which this snapshot will be automatically deleted.
        id:
          type: string
          description: The unique ID of this snapshot.
        creationTime:
          type: string
          format: google-datetime
          description: The time this snapshot was created.
        region:
          description: 'Cloud region where this snapshot lives in, e.g., "us-central1".'
          type: string
        pubsubMetadata:
          type: array
          description: Pub/Sub snapshot metadata.
          items:
            $ref: '#/components/schemas/PubsubSnapshotMetadata'
        state:
          type: string
          enumDescriptions:
            - Unknown state.
            - 'Snapshot intent to create has been persisted, snapshotting of state has not yet started.'
            - Snapshotting is being performed.
            - Snapshot has been created and is ready to be used.
            - Snapshot failed to be created.
            - Snapshot has been deleted.
          enum:
            - UNKNOWN_SNAPSHOT_STATE
            - PENDING
            - RUNNING
            - READY
            - FAILED
            - DELETED
          description: State of the snapshot.
      type: object
      description: Represents a snapshot of a job.
    DeleteSnapshotResponse:
      type: object
      id: DeleteSnapshotResponse
      description: Response from deleting a snapshot.
      properties: {}
    ResourceUtilizationReportResponse:
      properties: {}
      description: Service-side response to WorkerMessage reporting resource utilization.
      type: object
      id: ResourceUtilizationReportResponse
    FloatingPointMean:
      id: FloatingPointMean
      description: A representation of a floating point mean metric contribution.
      properties:
        count:
          description: The number of values being aggregated.
          $ref: '#/components/schemas/SplitInt64'
        sum:
          type: number
          description: The sum of all values being aggregated.
          format: double
      type: object
    WorkItem:
      type: object
      id: WorkItem
      properties:
        sourceOperationTask:
          $ref: '#/components/schemas/SourceOperationRequest'
          description: Additional information for source operation WorkItems.
        jobId:
          description: Identifies the workflow job this WorkItem belongs to.
          type: string
        reportStatusInterval:
          type: string
          description: Recommended reporting interval.
          format: google-duration
        streamingComputationTask:
          description: Additional information for StreamingComputationTask WorkItems.
          $ref: '#/components/schemas/StreamingComputationTask'
        initialReportIndex:
          format: int64
          type: string
          description: The initial index to use when reporting the status of the WorkItem.
        configuration:
          type: string
          description: Work item-specific configuration as an opaque blob.
        packages:
          items:
            $ref: '#/components/schemas/Package'
          description: Any required packages that need to be fetched in order to execute this WorkItem.
          type: array
        mapTask:
          $ref: '#/components/schemas/MapTask'
          description: Additional information for MapTask WorkItems.
        seqMapTask:
          description: Additional information for SeqMapTask WorkItems.
          $ref: '#/components/schemas/SeqMapTask'
        streamingSetupTask:
          $ref: '#/components/schemas/StreamingSetupTask'
          description: Additional information for StreamingSetupTask WorkItems.
        leaseExpireTime:
          format: google-datetime
          description: Time when the lease on this Work will expire.
          type: string
        id:
          description: Identifies this WorkItem.
          type: string
          format: int64
        streamingConfigTask:
          description: Additional information for StreamingConfigTask WorkItems.
          $ref: '#/components/schemas/StreamingConfigTask'
        projectId:
          type: string
          description: Identifies the cloud project this WorkItem belongs to.
        shellTask:
          description: Additional information for ShellTask WorkItems.
          $ref: '#/components/schemas/ShellTask'
      description: WorkItem represents basic information about a WorkItem to be executed in the cloud.
    JobExecutionStageInfo:
      type: object
      id: JobExecutionStageInfo
      description: Contains information about how a particular google.dataflow.v1beta3.Step will be executed.
      properties:
        stepName:
          type: array
          description: 'The steps associated with the execution stage. Note that stages may have several steps, and that a given step might be run by more than one stage.'
          items:
            type: string
    StreamingConfigTask:
      type: object
      properties:
        windmillServicePort:
          description: 'If present, the worker must use this port to communicate with Windmill Service dispatchers. Only applicable when windmill_service_endpoint is specified.'
          type: string
          format: int64
        streamingComputationConfigs:
          items:
            $ref: '#/components/schemas/StreamingComputationConfig'
          type: array
          description: Set of computation configuration information.
        maxWorkItemCommitBytes:
          format: int64
          type: string
          description: Maximum size for work item commit supported windmill storage layer.
        commitStreamChunkSizeBytes:
          format: int64
          description: Chunk size for commit streams from the harness to windmill.
          type: string
        userStepToStateFamilyNameMap:
          type: object
          additionalProperties:
            type: string
          description: Map from user step names to state families.
        windmillServiceEndpoint:
          description: 'If present, the worker must use this endpoint to communicate with Windmill Service dispatchers, otherwise the worker must continue to use whatever endpoint it had been using.'
          type: string
        getDataStreamChunkSizeBytes:
          type: string
          description: Chunk size for get data streams from the harness to windmill.
          format: int64
      description: A task that carries configuration information for streaming computations.
      id: StreamingConfigTask
    WorkerHealthReport:
      id: WorkerHealthReport
      description: WorkerHealthReport contains information about the health of a worker. The VM should be identified by the labels attached to the WorkerMessage that this health ping belongs to.
      properties:
        msg:
          description: Message describing any unusual health reports.
          type: string
        reportInterval:
          type: string
          description: The interval at which the worker is sending health reports. The default value of 0 should be interpreted as the field is not being explicitly set by the worker.
          format: google-duration
        vmStartupTime:
          description: The time the VM was booted.
          type: string
          format: google-datetime
        vmBrokenCode:
          description: 'Code to describe a specific reason, if known, that a VM has reported broken state.'
          type: string
        vmIsBroken:
          type: boolean
          description: Whether the VM is in a permanently broken state. Broken VMs should be abandoned or deleted ASAP to avoid assigning or completing any work.
        vmIsHealthy:
          description: Whether the VM is currently healthy.
          type: boolean
        pods:
          items:
            type: object
            additionalProperties:
              description: Properties of the object.
              type: any
          description: 'The pods running on the worker. See: http://kubernetes.io/v1.1/docs/api-reference/v1/definitions.html#_v1_pod This field is used by the worker to send the status of the indvidual containers running on each worker.'
          type: array
      type: object
    WorkerShutdownNotice:
      id: WorkerShutdownNotice
      description: Shutdown notification from workers. This is to be sent by the shutdown script of the worker VM so that the backend knows that the VM is being shut down.
      properties:
        reason:
          description: 'The reason for the worker shutdown. Current possible values are: "UNKNOWN": shutdown reason is unknown. "PREEMPTION": shutdown reason is preemption. Other possible reasons may be added in the future.'
          type: string
      type: object
    LaunchFlexTemplateResponse:
      type: object
      id: LaunchFlexTemplateResponse
      description: Response to the request to launch a job from Flex Template.
      properties:
        job:
          description: 'The job that was launched, if the request was not a dry run and the job was successfully launched.'
          $ref: '#/components/schemas/Job'
    HotKeyDebuggingInfo:
      id: HotKeyDebuggingInfo
      type: object
      description: Information useful for debugging a hot key detection.
      properties:
        detectedHotKeys:
          description: Debugging information for each detected hot key. Keyed by a hash of the key.
          additionalProperties:
            $ref: '#/components/schemas/HotKeyInfo'
          type: object
    CounterUpdate:
      properties:
        integerGauge:
          $ref: '#/components/schemas/IntegerGauge'
          description: Gauge data
        nameAndKind:
          $ref: '#/components/schemas/NameAndKind'
          description: Counter name and aggregation type.
        structuredNameAndMetadata:
          $ref: '#/components/schemas/CounterStructuredNameAndMetadata'
          description: Counter structured name and metadata.
        integer:
          description: 'Integer value for Sum, Max, Min.'
          $ref: '#/components/schemas/SplitInt64'
        floatingPoint:
          format: double
          description: 'Floating point value for Sum, Max, Min.'
          type: number
        integerList:
          $ref: '#/components/schemas/IntegerList'
          description: 'List of integers, for Set.'
        integerMean:
          $ref: '#/components/schemas/IntegerMean'
          description: Integer mean aggregation value for Mean.
        internal:
          type: any
          description: Value for internally-defined counters used by the Dataflow service.
        shortId:
          description: 'The service-generated short identifier for this counter. The short_id -> (name, metadata) mapping is constant for the lifetime of a job.'
          type: string
          format: int64
        distribution:
          description: Distribution data
          $ref: '#/components/schemas/DistributionUpdate'
        stringList:
          description: 'List of strings, for Set.'
          $ref: '#/components/schemas/StringList'
        boolean:
          description: 'Boolean value for And, Or.'
          type: boolean
        floatingPointList:
          description: 'List of floating point numbers, for Set.'
          $ref: '#/components/schemas/FloatingPointList'
        cumulative:
          description: 'True if this counter is reported as the total cumulative aggregate value accumulated since the worker started working on this WorkItem. By default this is false, indicating that this counter is reported as a delta.'
          type: boolean
        floatingPointMean:
          $ref: '#/components/schemas/FloatingPointMean'
          description: Floating point mean aggregation value for Mean.
      type: object
      id: CounterUpdate
      description: An update to a Counter sent from a worker.
    ListJobMessagesResponse:
      id: ListJobMessagesResponse
      properties:
        autoscalingEvents:
          type: array
          description: Autoscaling events in ascending timestamp order.
          items:
            $ref: '#/components/schemas/AutoscalingEvent'
        nextPageToken:
          type: string
          description: The token to obtain the next page of results if there are more.
        jobMessages:
          type: array
          items:
            $ref: '#/components/schemas/JobMessage'
          description: Messages in ascending timestamp order.
      description: Response to a request to list job messages.
      type: object
    ExecutionStageState:
      description: A message describing the state of a particular execution stage.
      id: ExecutionStageState
      type: object
      properties:
        currentStateTime:
          type: string
          description: The time at which the stage transitioned to this state.
          format: google-datetime
        executionStageName:
          description: The name of the execution stage.
          type: string
        executionStageState:
          enum:
            - JOB_STATE_UNKNOWN
            - JOB_STATE_STOPPED
            - JOB_STATE_RUNNING
            - JOB_STATE_DONE
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLED
            - JOB_STATE_UPDATED
            - JOB_STATE_DRAINING
            - JOB_STATE_DRAINED
            - JOB_STATE_PENDING
            - JOB_STATE_CANCELLING
            - JOB_STATE_QUEUED
            - JOB_STATE_RESOURCE_CLEANING_UP
          description: Executions stage states allow the same set of values as JobState.
          type: string
          enumDescriptions:
            - The job's run state isn't specified.
            - '`JOB_STATE_STOPPED` indicates that the job has not yet started to run.'
            - '`JOB_STATE_RUNNING` indicates that the job is currently running.'
            - '`JOB_STATE_DONE` indicates that the job has successfully completed. This is a terminal job state. This state may be set by the Cloud Dataflow service, as a transition from `JOB_STATE_RUNNING`. It may also be set via a Cloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal state.'
            - '`JOB_STATE_FAILED` indicates that the job has failed. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.'
            - '`JOB_STATE_CANCELLED` indicates that the job has been explicitly cancelled. This is a terminal job state. This state may only be set via a Cloud Dataflow `UpdateJob` call, and only if the job has not yet reached another terminal state.'
            - '`JOB_STATE_UPDATED` indicates that the job was successfully updated, meaning that this job was stopped and another job was started, inheriting state from this one. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.'
            - '`JOB_STATE_DRAINING` indicates that the job is in the process of draining. A draining job has stopped pulling from its input sources and is processing any data that remains in-flight. This state may be set via a Cloud Dataflow `UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs that are draining may only transition to `JOB_STATE_DRAINED`, `JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_DRAINED` indicates that the job has been drained. A drained job terminated by stopping pulling from its input sources and processing any data that remained in-flight when draining was requested. This state is a terminal state, may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_DRAINING`.'
            - '`JOB_STATE_PENDING` indicates that the job has been created but is not yet running. Jobs that are pending may only transition to `JOB_STATE_RUNNING`, or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled and is in the process of stopping. Jobs that are cancelling may only transition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_QUEUED` indicates that the job has been created but is being delayed until launch. Jobs that are queued may only transition to `JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`.'
            - '`JOB_STATE_RESOURCE_CLEANING_UP` indicates that the batch job''s associated resources are currently being cleaned up after a successful run. Currently, this is an opt-in feature, please reach out to Cloud support team if you are interested.'
    LeaseWorkItemRequest:
      properties:
        requestedLeaseDuration:
          description: The initial lease period.
          type: string
          format: google-duration
        unifiedWorkerRequest:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: Untranslated bag-of-bytes WorkRequest from UnifiedWorker.
          type: object
        currentWorkerTime:
          format: google-datetime
          description: The current timestamp at the worker.
          type: string
        workerId:
          type: string
          description: Identifies the worker leasing work -- typically the ID of the virtual machine running the worker.
        workerCapabilities:
          items:
            type: string
          description: Worker capabilities. WorkItems might be limited to workers with specific capabilities.
          type: array
        location:
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the WorkItem''s job.'
          type: string
        workItemTypes:
          items:
            type: string
          description: Filter for WorkItem type.
          type: array
      id: LeaseWorkItemRequest
      type: object
      description: Request to lease WorkItems.
    CounterStructuredNameAndMetadata:
      properties:
        metadata:
          $ref: '#/components/schemas/CounterMetadata'
          description: Metadata associated with a counter
        name:
          $ref: '#/components/schemas/CounterStructuredName'
          description: Structured name of the counter.
      id: CounterStructuredNameAndMetadata
      type: object
      description: A single message which encapsulates structured name and metadata for a given counter.
    JobMetrics:
      id: JobMetrics
      type: object
      properties:
        metrics:
          type: array
          description: All metrics for this job.
          items:
            $ref: '#/components/schemas/MetricUpdate'
        metricTime:
          format: google-datetime
          type: string
          description: Timestamp as of which metric values are current.
      description: 'JobMetrics contains a collection of metrics describing the detailed progress of a Dataflow job. Metrics correspond to user-defined and system-defined metrics in the job. For more information, see [Dataflow job metrics] (https://cloud.google.com/dataflow/docs/guides/using-monitoring-intf). This resource captures only the most recent values of each metric; time-series data can be queried for them (under the same metric names) from Cloud Monitoring.'
    WorkerLifecycleEvent:
      type: object
      properties:
        containerStartTime:
          description: The start time of this container. All events will report this so that events can be grouped together across container/VM restarts.
          type: string
          format: google-datetime
        metadata:
          type: object
          description: 'Other stats that can accompany an event. E.g. { "downloaded_bytes" : "123456" }'
          additionalProperties:
            type: string
        event:
          enum:
            - UNKNOWN_EVENT
            - OS_START
            - CONTAINER_START
            - NETWORK_UP
            - STAGING_FILES_DOWNLOAD_START
            - STAGING_FILES_DOWNLOAD_FINISH
            - SDK_INSTALL_START
            - SDK_INSTALL_FINISH
          description: The event being reported.
          type: string
          enumDescriptions:
            - Invalid event.
            - The time the VM started.
            - Our container code starts running. Multiple containers could be distinguished with WorkerMessage.labels if desired.
            - The worker has a functional external network connection.
            - Started downloading staging files.
            - Finished downloading all staging files.
            - 'For applicable SDKs, started installation of SDK and worker packages.'
            - Finished installing SDK.
      id: WorkerLifecycleEvent
      description: 'A report of an event in a worker''s lifecycle. The proto contains one event, because the worker is expected to asynchronously send each message immediately after the event. Due to this asynchrony, messages may arrive out of order (or missing), and it is up to the consumer to interpret. The timestamp of the event is in the enclosing WorkerMessage proto.'
    ComputationTopology:
      description: All configuration data for a particular Computation.
      type: object
      id: ComputationTopology
      properties:
        stateFamilies:
          type: array
          description: The state family values.
          items:
            $ref: '#/components/schemas/StateFamilyConfig'
        keyRanges:
          description: The key ranges processed by the computation.
          type: array
          items:
            $ref: '#/components/schemas/KeyRangeLocation'
        outputs:
          type: array
          description: The outputs from the computation.
          items:
            $ref: '#/components/schemas/StreamLocation'
        systemStageName:
          type: string
          description: The system stage name.
        inputs:
          items:
            $ref: '#/components/schemas/StreamLocation'
          description: The inputs to the computation.
          type: array
        computationId:
          description: The ID of the computation.
          type: string
    SeqMapTaskOutputInfo:
      description: Information about an output of a SeqMapTask.
      properties:
        sink:
          $ref: '#/components/schemas/Sink'
          description: The sink to write the output value to.
        tag:
          type: string
          description: The id of the TupleTag the user code will tag the output value by.
      type: object
      id: SeqMapTaskOutputInfo
    GetTemplateResponse:
      properties:
        status:
          $ref: '#/components/schemas/Status'
          description: The status of the get template request. Any problems with the request will be indicated in the error_details.
        templateType:
          enum:
            - UNKNOWN
            - LEGACY
            - FLEX
          enumDescriptions:
            - Unknown Template Type.
            - Legacy Template.
            - Flex Template.
          description: Template Type.
          type: string
        metadata:
          description: 'The template metadata describing the template name, available parameters, etc.'
          $ref: '#/components/schemas/TemplateMetadata'
        runtimeMetadata:
          $ref: '#/components/schemas/RuntimeMetadata'
          description: Describes the runtime metadata with SDKInfo and available parameters.
      type: object
      id: GetTemplateResponse
      description: The response to a GetTemplate request.
    LaunchTemplateParameters:
      properties:
        environment:
          description: The runtime environment for the job.
          $ref: '#/components/schemas/RuntimeEnvironment'
        transformNameMapping:
          type: object
          additionalProperties:
            type: string
          description: Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job.
        update:
          type: boolean
          description: 'If set, replace the existing pipeline with the name specified by jobName with this pipeline, preserving state.'
        jobName:
          description: 'Required. The job name to use for the created job. The name must match the regular expression `[a-z]([-a-z0-9]{0,1022}[a-z0-9])?`'
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
          description: The runtime parameters to pass to the job.
      type: object
      id: LaunchTemplateParameters
      description: 'Parameters to provide to the template being launched. Note that the [metadata in the pipeline code] (https://cloud.google.com/dataflow/docs/guides/templates/creating-templates#metadata) determines which runtime parameters are valid.'
    Step:
      properties:
        kind:
          description: The kind of step in the Cloud Dataflow job.
          type: string
        name:
          type: string
          description: The name that identifies the step. This must be unique for each step with respect to all other steps in the Cloud Dataflow job.
        properties:
          type: object
          description: Named properties associated with the step. Each kind of predefined step has its own required set of properties. Must be provided on Create. Only retrieved with JOB_VIEW_ALL.
          additionalProperties:
            description: Properties of the object.
            type: any
      id: Step
      type: object
      description: 'Defines a particular step within a Cloud Dataflow job. A job consists of multiple steps, each of which performs some specific operation as part of the overall job. Data is typically passed from one step to another as part of the job. **Note:** The properties of this object are not stable and might change. Here''s an example of a sequence of steps which together implement a Map-Reduce job: * Read a collection of data from some source, parsing the collection''s elements. * Validate the elements. * Apply a user-defined function to map each element to some value and extract an element-specific key value. * Group elements with the same key into a single element with that key, transforming a multiply-keyed collection into a uniquely-keyed collection. * Write the elements out to some data sink. Note that the Cloud Dataflow service may be used to run many different types of jobs, not just Map-Reduce.'
    ApproximateProgress:
      id: ApproximateProgress
      description: Obsolete in favor of ApproximateReportedProgress and ApproximateSplitRequest.
      properties:
        remainingTime:
          type: string
          format: google-duration
          description: Obsolete.
          deprecated: true
        percentComplete:
          deprecated: true
          type: number
          description: Obsolete.
          format: float
        position:
          description: Obsolete.
          deprecated: true
          $ref: '#/components/schemas/Position'
      type: object
    WorkerThreadScalingReport:
      properties:
        currentThreadCount:
          description: Current number of active threads in a worker.
          format: int32
          type: integer
      type: object
      description: Contains information about the thread scaling information of a worker.
      id: WorkerThreadScalingReport
    WriteInstruction:
      id: WriteInstruction
      description: 'An instruction that writes records. Takes one input, produces no outputs.'
      properties:
        sink:
          $ref: '#/components/schemas/Sink'
          description: The sink to write to.
        input:
          description: The input.
          $ref: '#/components/schemas/InstructionInput'
      type: object
    CounterMetadata:
      type: object
      description: CounterMetadata includes all static non-name non-value counter attributes.
      id: CounterMetadata
      properties:
        otherUnits:
          description: A string referring to the unit type.
          type: string
        description:
          description: Human-readable description of the counter semantics.
          type: string
        kind:
          enum:
            - INVALID
            - SUM
            - MAX
            - MIN
            - MEAN
            - OR
            - AND
            - SET
            - DISTRIBUTION
            - LATEST_VALUE
          enumDescriptions:
            - Counter aggregation kind was not set.
            - Aggregated value is the sum of all contributed values.
            - Aggregated value is the max of all contributed values.
            - Aggregated value is the min of all contributed values.
            - Aggregated value is the mean of all contributed values.
            - Aggregated value represents the logical 'or' of all contributed values.
            - Aggregated value represents the logical 'and' of all contributed values.
            - Aggregated value is a set of unique contributed values.
            - Aggregated value captures statistics about a distribution.
            - Aggregated value tracks the latest value of a variable.
          type: string
          description: Counter aggregation kind.
        standardUnits:
          description: 'System defined Units, see above enum.'
          enum:
            - BYTES
            - BYTES_PER_SEC
            - MILLISECONDS
            - MICROSECONDS
            - NANOSECONDS
            - TIMESTAMP_MSEC
            - TIMESTAMP_USEC
            - TIMESTAMP_NSEC
          enumDescriptions:
            - Counter returns a value in bytes.
            - Counter returns a value in bytes per second.
            - Counter returns a value in milliseconds.
            - Counter returns a value in microseconds.
            - Counter returns a value in nanoseconds.
            - Counter returns a timestamp in milliseconds.
            - Counter returns a timestamp in microseconds.
            - Counter returns a timestamp in nanoseconds.
          type: string
    ApproximateSplitRequest:
      description: A suggestion by the service to the worker to dynamically split the WorkItem.
      type: object
      id: ApproximateSplitRequest
      properties:
        fractionOfRemainder:
          description: 'The fraction of the remainder of work to split the work item at, from 0.0 (split at the current position) to 1.0 (end of the input).'
          format: double
          type: number
        fractionConsumed:
          description: 'A fraction at which to split the work item, from 0.0 (beginning of the input) to 1.0 (end of the input).'
          format: double
          type: number
        position:
          description: A Position at which to split the work item.
          $ref: '#/components/schemas/Position'
    StreamingSetupTask:
      id: StreamingSetupTask
      type: object
      properties:
        streamingComputationTopology:
          $ref: '#/components/schemas/TopologyConfig'
          description: The global topology of the streaming Dataflow job.
        workerHarnessPort:
          format: int32
          type: integer
          description: The TCP port used by the worker to communicate with the Dataflow worker harness.
        drain:
          description: The user has requested drain.
          type: boolean
        receiveWorkPort:
          format: int32
          type: integer
          description: The TCP port on which the worker should listen for messages from other streaming computation workers.
        snapshotConfig:
          $ref: '#/components/schemas/StreamingApplianceSnapshotConfig'
          description: Configures streaming appliance snapshot.
      description: A task which initializes part of a streaming Dataflow job.
    PipelineDescription:
      type: object
      description: A descriptive representation of submitted pipeline as well as the executed form. This data is provided by the Dataflow service for ease of visualizing the pipeline and interpreting Dataflow provided metrics.
      id: PipelineDescription
      properties:
        executionPipelineStage:
          type: array
          items:
            $ref: '#/components/schemas/ExecutionStageSummary'
          description: Description of each stage of execution of the pipeline.
        displayData:
          type: array
          items:
            $ref: '#/components/schemas/DisplayData'
          description: Pipeline level display data.
        originalPipelineTransform:
          type: array
          items:
            $ref: '#/components/schemas/TransformSummary'
          description: Description of each transform in the pipeline and collections between them.
        stepNamesHash:
          description: A hash value of the submitted pipeline portable graph step names if exists.
          type: string
    WorkerSettings:
      description: Provides data to pass through to the worker harness.
      type: object
      properties:
        shuffleServicePath:
          type: string
          description: 'The Shuffle service path relative to the root URL, for example, "shuffle/v1beta1".'
        reportingEnabled:
          description: Whether to send work progress updates to the service.
          type: boolean
        tempStoragePrefix:
          type: string
          description: 'The prefix of the resources the system should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}'
        servicePath:
          description: 'The Cloud Dataflow service path relative to the root URL, for example, "dataflow/v1b3/projects".'
          type: string
        baseUrl:
          description: 'The base URL for accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, "Relative Uniform Resource Locators". If not specified, the default value is "http://www.googleapis.com/"'
          type: string
        workerId:
          type: string
          description: The ID of the worker running this pipeline.
      id: WorkerSettings
    ReadInstruction:
      type: object
      properties:
        source:
          description: The source to read from.
          $ref: '#/components/schemas/Source'
      id: ReadInstruction
      description: 'An instruction that reads records. Takes no inputs, produces one output.'
    SeqMapTask:
      description: Describes a particular function to invoke.
      id: SeqMapTask
      type: object
      properties:
        stageName:
          description: System-defined name of the stage containing the SeqDo operation. Unique across the workflow.
          type: string
        name:
          type: string
          description: The user-provided name of the SeqDo operation.
        systemName:
          description: System-defined name of the SeqDo operation. Unique across the workflow.
          type: string
        outputInfos:
          type: array
          description: Information about each of the outputs.
          items:
            $ref: '#/components/schemas/SeqMapTaskOutputInfo'
        userFn:
          description: The user function to invoke.
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
        inputs:
          items:
            $ref: '#/components/schemas/SideInputInfo'
          type: array
          description: Information about each of the inputs.
    TopologyConfig:
      properties:
        forwardingKeyBits:
          description: The size (in bits) of keys that will be assigned to source messages.
          format: int32
          type: integer
        dataDiskAssignments:
          description: The disks assigned to a streaming Dataflow job.
          type: array
          items:
            $ref: '#/components/schemas/DataDiskAssignment'
        computations:
          items:
            $ref: '#/components/schemas/ComputationTopology'
          type: array
          description: The computations associated with a streaming Dataflow job.
        persistentStateVersion:
          type: integer
          format: int32
          description: Version number for persistent state.
        userStageToComputationNameMap:
          description: Maps user stage names to stable computation names.
          additionalProperties:
            type: string
          type: object
      description: 'Global topology of the streaming Dataflow job, including all computations and their sharded locations.'
      type: object
      id: TopologyConfig
    RuntimeMetadata:
      properties:
        parameters:
          description: The parameters for the template.
          items:
            $ref: '#/components/schemas/ParameterMetadata'
          type: array
        sdkInfo:
          $ref: '#/components/schemas/SDKInfo'
          description: SDK Info for the template.
      description: RuntimeMetadata describing a runtime environment.
      id: RuntimeMetadata
      type: object
    SendWorkerMessagesResponse:
      id: SendWorkerMessagesResponse
      type: object
      properties:
        workerMessageResponses:
          items:
            $ref: '#/components/schemas/WorkerMessageResponse'
          description: The servers response to the worker messages.
          type: array
      description: The response to the worker messages.
    CPUTime:
      description: Modeled after information exposed by /proc/stat.
      type: object
      properties:
        timestamp:
          format: google-datetime
          description: Timestamp of the measurement.
          type: string
        rate:
          description: Average CPU utilization rate (% non-idle cpu / second) since previous sample.
          format: double
          type: number
        totalMs:
          type: string
          description: 'Total active CPU time across all cores (ie., non-idle) in milliseconds since start-up.'
          format: uint64
      id: CPUTime
    FileIODetails:
      properties:
        filePattern:
          description: File Pattern used to access files by the connector.
          type: string
      id: FileIODetails
      type: object
      description: Metadata for a File connector used by the job.
    PubSubIODetails:
      description: Metadata for a Pub/Sub connector used by the job.
      properties:
        topic:
          type: string
          description: Topic accessed in the connection.
        subscription:
          type: string
          description: Subscription used in the connection.
      type: object
      id: PubSubIODetails
    SendWorkerMessagesRequest:
      id: SendWorkerMessagesRequest
      properties:
        workerMessages:
          description: The WorkerMessages to send.
          type: array
          items:
            $ref: '#/components/schemas/WorkerMessage'
        location:
          type: string
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job.'
      type: object
      description: A request for sending worker messages to the service.
    DynamicSourceSplit:
      properties:
        primary:
          $ref: '#/components/schemas/DerivedSource'
          description: Primary part (continued to be processed by worker). Specified relative to the previously-current source. Becomes current.
        residual:
          $ref: '#/components/schemas/DerivedSource'
          description: Residual part (returned to the pool of work). Specified relative to the previously-current source.
      type: object
      description: 'When a task splits using WorkItemStatus.dynamic_source_split, this message describes the two parts of the split relative to the description of the current task''s input.'
      id: DynamicSourceSplit
  parameters:
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
  x-stackQL-resources:
    projects:
      id: google.dataflow.projects
      name: projects
      title: Projects
      methods:
        projects_worker_messages:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1WorkerMessages/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    snapshots:
      id: google.dataflow.snapshots
      name: snapshots
      title: Snapshots
      methods:
        projects_delete_snapshots:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1snapshots/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_snapshots_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1snapshots/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_snapshots_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1snapshots/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_snapshots_get:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1snapshots~1{snapshotId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_snapshots_delete:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1snapshots~1{snapshotId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_snapshots_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1snapshots/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_snapshots_get:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1snapshots~1{snapshotId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_snapshots_list'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_jobs_snapshots_list'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_snapshots_get'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_snapshots_list'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_snapshots_get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_delete_snapshots'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_snapshots_delete'
    work_items:
      id: google.dataflow.work_items
      name: work_items
      title: Work Items
      methods:
        projects_jobs_work_items_report_status:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1workItems:reportStatus/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_work_items_lease:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1workItems:lease/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_work_items_lease:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1workItems:lease/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_work_items_report_status:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1workItems:reportStatus/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    debug:
      id: google.dataflow.debug
      name: debug
      title: Debug
      methods:
        projects_jobs_debug_send_capture:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1debug~1sendCapture/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_debug_send_capture:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1debug~1sendCapture/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    debug_config:
      id: google.dataflow.debug_config
      name: debug_config
      title: Debug Config
      methods:
        projects_jobs_debug_get_config:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1debug~1getConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_debug_get_config:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1debug~1getConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    messages:
      id: google.dataflow.messages
      name: messages
      title: Messages
      methods:
        projects_jobs_messages_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1messages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobMessages
        _projects_jobs_messages_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1messages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_messages_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1messages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobMessages
        _projects_locations_jobs_messages_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1messages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/messages/methods/projects_jobs_messages_list'
          - $ref: '#/components/x-stackQL-resources/messages/methods/projects_locations_jobs_messages_list'
        insert: []
        update: []
        delete: []
    jobs:
      id: google.dataflow.jobs
      name: jobs
      title: Jobs
      methods:
        projects_jobs_update:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_get:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_snapshot:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}:snapshot/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_aggregated:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs:aggregated/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_create:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobs
        _projects_jobs_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_snapshot:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}:snapshot/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_get:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_update:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobs
        _projects_locations_jobs_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_create:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_jobs_get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_jobs_list'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_jobs_get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_jobs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_jobs_create'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_jobs_create'
        update: []
        delete: []
    jobs_metrics:
      id: google.dataflow.jobs_metrics
      name: jobs_metrics
      title: Jobs Metrics
      methods:
        projects_jobs_get_metrics:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1metrics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_get_metrics:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1metrics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs_metrics/methods/projects_jobs_get_metrics'
          - $ref: '#/components/x-stackQL-resources/jobs_metrics/methods/projects_locations_jobs_get_metrics'
        insert: []
        update: []
        delete: []
    locations:
      id: google.dataflow.locations
      name: locations
      title: Locations
      methods:
        projects_locations_worker_messages:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1WorkerMessages/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    templates:
      id: google.dataflow.templates
      name: templates
      title: Templates
      methods:
        projects_locations_templates_launch:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1templates:launch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_templates_create:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1templates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_templates_get:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1templates:get/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_templates_get:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1templates:get/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_templates_create:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1templates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_templates_launch:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1templates:launch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/templates/methods/projects_locations_templates_get'
          - $ref: '#/components/x-stackQL-resources/templates/methods/projects_templates_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/templates/methods/projects_locations_templates_create'
          - $ref: '#/components/x-stackQL-resources/templates/methods/projects_templates_create'
        update: []
        delete: []
    flex_templates:
      id: google.dataflow.flex_templates
      name: flex_templates
      title: Flex Templates
      methods:
        projects_locations_flex_templates_launch:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1flexTemplates:launch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    stages_execution_details:
      id: google.dataflow.stages_execution_details
      name: stages_execution_details
      title: Stages Execution Details
      methods:
        projects_locations_jobs_stages_get_execution_details:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1stages~1{stageId}~1executionDetails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.workers
        _projects_locations_jobs_stages_get_execution_details:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1stages~1{stageId}~1executionDetails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/stages_execution_details/methods/projects_locations_jobs_stages_get_execution_details'
        insert: []
        update: []
        delete: []
    jobs_execution_details:
      id: google.dataflow.jobs_execution_details
      name: jobs_execution_details
      title: Jobs Execution Details
      methods:
        projects_locations_jobs_get_execution_details:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1executionDetails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.stages
        _projects_locations_jobs_get_execution_details:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1executionDetails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs_execution_details/methods/projects_locations_jobs_get_execution_details'
        insert: []
        update: []
        delete: []
paths:
  '/v1b3/projects/{projectId}/WorkerMessages':
    parameters: &ref_1
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/key'
    post:
      description: Send a worker_message to the service.
      operationId: dataflow.projects.workerMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendWorkerMessagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendWorkerMessagesResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-method: projects_worker_messages
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/snapshots':
    parameters: *ref_1
    delete:
      description: Deletes a snapshot.
      operationId: dataflow.projects.deleteSnapshots
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSnapshotResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: snapshotId
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_delete_snapshots
      x-stackQL-verb: delete
    get:
      description: Lists snapshots.
      operationId: dataflow.projects.snapshots.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: jobId
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_snapshots_list
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/jobs/{jobId}/workItems:reportStatus':
    parameters: *ref_1
    post:
      description: Reports the status of dataflow WorkItems leased by a worker.
      operationId: dataflow.projects.jobs.workItems.reportStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportWorkItemStatusRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportWorkItemStatusResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: work_items
      x-stackQL-method: projects_jobs_work_items_report_status
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/jobs/{jobId}/workItems:lease':
    parameters: *ref_1
    post:
      description: Leases a dataflow WorkItem to run.
      operationId: dataflow.projects.jobs.workItems.lease
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaseWorkItemRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseWorkItemResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: work_items
      x-stackQL-method: projects_jobs_work_items_lease
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/jobs/{jobId}/debug/sendCapture':
    parameters: *ref_1
    post:
      description: Send encoded debug capture data for component.
      operationId: dataflow.projects.jobs.debug.sendCapture
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendDebugCaptureRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendDebugCaptureResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: debug
      x-stackQL-method: projects_jobs_debug_send_capture
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/jobs/{jobId}/debug/getConfig':
    parameters: *ref_1
    post:
      description: Get encoded debug configuration for component. Not cacheable.
      operationId: dataflow.projects.jobs.debug.getConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDebugConfigRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDebugConfigResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: debug_config
      x-stackQL-method: projects_jobs_debug_get_config
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/jobs/{jobId}/messages':
    parameters: *ref_1
    get:
      description: 'Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.messages.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.messages.list` is not recommended, as you can only request the status of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.jobs.messages.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobMessagesResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: minimumImportance
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: endTime
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: messages
      x-stackQL-method: projects_jobs_messages_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.jobMessages
  '/v1b3/projects/{projectId}/jobs/{jobId}':
    parameters: *ref_1
    put:
      description: 'Updates the state of an existing Cloud Dataflow job. To update the state of an existing job, we recommend using `projects.locations.jobs.update` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.update` is not recommended, as you can only update the state of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.jobs.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_jobs_update
      x-stackQL-verb: exec
    get:
      description: 'Gets the state of the specified Cloud Dataflow job. To get the state of a job, we recommend using `projects.locations.jobs.get` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.get` is not recommended, as you can only get the state of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.jobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_jobs_get
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/jobs/{jobId}:snapshot':
    parameters: *ref_1
    post:
      description: Snapshot the state of a streaming job.
      operationId: dataflow.projects.jobs.snapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_jobs_snapshot
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/jobs/{jobId}/metrics':
    parameters: *ref_1
    get:
      description: 'Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.getMetrics` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.getMetrics` is not recommended, as you can only request the status of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.jobs.getMetrics
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMetrics'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
      x-stackQL-resource: jobs_metrics
      x-stackQL-method: projects_jobs_get_metrics
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/jobs:aggregated':
    parameters: *ref_1
    get:
      description: 'List the jobs of a project across all regions. **Note:** This method doesn''t support filtering the list of jobs by name.'
      operationId: dataflow.projects.jobs.aggregated
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_jobs_aggregated
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/jobs':
    parameters: *ref_1
    post:
      description: 'Creates a Cloud Dataflow job. To create a job, we recommend using `projects.locations.jobs.create` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.create` is not recommended, as your job will always start in `us-central1`. Do not enter confidential information when you supply string values using the API.'
      operationId: dataflow.projects.jobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: replaceJobId
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_jobs_create
      x-stackQL-verb: insert
    get:
      description: 'List the jobs of a project. To list the jobs of a project in a region, we recommend using `projects.locations.jobs.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To list the all jobs across all regions, use `projects.jobs.aggregated`. Using `projects.jobs.list` is not recommended, because you can only get the list of jobs that are running in `us-central1`. `projects.locations.jobs.list` and `projects.jobs.list` support filtering the list of jobs by name. Filtering by name isn''t supported by `projects.jobs.aggregated`.'
      operationId: dataflow.projects.jobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_jobs_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.jobs
  '/v1b3/projects/{projectId}/locations/{location}/WorkerMessages':
    parameters: *ref_1
    post:
      description: Send a worker_message to the service.
      operationId: dataflow.projects.locations.workerMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendWorkerMessagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendWorkerMessagesResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_worker_messages
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/templates:launch':
    parameters: *ref_1
    post:
      description: Launch a template.
      operationId: dataflow.projects.locations.templates.launch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaunchTemplateParameters'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchTemplateResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: query
          name: dynamicTemplate.stagingLocation
          schema:
            type: string
        - in: query
          name: gcsPath
          schema:
            type: string
        - in: query
          name: dynamicTemplate.gcsPath
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: templates
      x-stackQL-method: projects_locations_templates_launch
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/templates':
    parameters: *ref_1
    post:
      description: Creates a Cloud Dataflow job from a template. Do not enter confidential information when you supply string values using the API.
      operationId: dataflow.projects.locations.templates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobFromTemplateRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-method: projects_locations_templates_create
      x-stackQL-verb: insert
  '/v1b3/projects/{projectId}/locations/{location}/templates:get':
    parameters: *ref_1
    get:
      description: Get the template associated with a template.
      operationId: dataflow.projects.locations.templates.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplateResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: query
          name: gcsPath
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-method: projects_locations_templates_get
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/locations/{location}/flexTemplates:launch':
    parameters: *ref_1
    post:
      description: Launch a job with a FlexTemplate.
      operationId: dataflow.projects.locations.flexTemplates.launch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaunchFlexTemplateRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchFlexTemplateResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
      x-stackQL-resource: flex_templates
      x-stackQL-method: projects_locations_flex_templates_launch
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/messages':
    parameters: *ref_1
    get:
      description: 'Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.messages.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.messages.list` is not recommended, as you can only request the status of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.locations.jobs.messages.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobMessagesResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: endTime
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: minimumImportance
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: messages
      x-stackQL-method: projects_locations_jobs_messages_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.jobMessages
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/snapshots':
    parameters: *ref_1
    get:
      description: Lists snapshots.
      operationId: dataflow.projects.locations.jobs.snapshots.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_locations_jobs_snapshots_list
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/workItems:lease':
    parameters: *ref_1
    post:
      description: Leases a dataflow WorkItem to run.
      operationId: dataflow.projects.locations.jobs.workItems.lease
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaseWorkItemRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseWorkItemResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: work_items
      x-stackQL-method: projects_locations_jobs_work_items_lease
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/workItems:reportStatus':
    parameters: *ref_1
    post:
      description: Reports the status of dataflow WorkItems leased by a worker.
      operationId: dataflow.projects.locations.jobs.workItems.reportStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportWorkItemStatusRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportWorkItemStatusResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: work_items
      x-stackQL-method: projects_locations_jobs_work_items_report_status
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/stages/{stageId}/executionDetails':
    parameters: *ref_1
    get:
      description: Request detailed information about the execution status of a stage of the job. EXPERIMENTAL. This API is subject to change or removal without notice.
      operationId: dataflow.projects.locations.jobs.stages.getExecutionDetails
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageExecutionDetails'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: path
          name: stageId
          required: true
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: endTime
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: stages_execution_details
      x-stackQL-method: projects_locations_jobs_stages_get_execution_details
      x-stackQL-verb: select
      x-stackQL-objectKey: $.workers
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/debug/sendCapture':
    parameters: *ref_1
    post:
      description: Send encoded debug capture data for component.
      operationId: dataflow.projects.locations.jobs.debug.sendCapture
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendDebugCaptureRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendDebugCaptureResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: debug
      x-stackQL-method: projects_locations_jobs_debug_send_capture
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/debug/getConfig':
    parameters: *ref_1
    post:
      description: Get encoded debug configuration for component. Not cacheable.
      operationId: dataflow.projects.locations.jobs.debug.getConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDebugConfigRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDebugConfigResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: debug_config
      x-stackQL-method: projects_locations_jobs_debug_get_config
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}:snapshot':
    parameters: *ref_1
    post:
      description: Snapshot the state of a streaming job.
      operationId: dataflow.projects.locations.jobs.snapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_jobs_snapshot
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}':
    parameters: *ref_1
    get:
      description: 'Gets the state of the specified Cloud Dataflow job. To get the state of a job, we recommend using `projects.locations.jobs.get` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.get` is not recommended, as you can only get the state of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.locations.jobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_jobs_get
      x-stackQL-verb: select
    put:
      description: 'Updates the state of an existing Cloud Dataflow job. To update the state of an existing job, we recommend using `projects.locations.jobs.update` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.update` is not recommended, as you can only update the state of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.locations.jobs.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_jobs_update
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/executionDetails':
    parameters: *ref_1
    get:
      description: Request detailed information about the execution status of the job. EXPERIMENTAL. This API is subject to change or removal without notice.
      operationId: dataflow.projects.locations.jobs.getExecutionDetails
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecutionDetails'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: jobs_execution_details
      x-stackQL-method: projects_locations_jobs_get_execution_details
      x-stackQL-verb: select
      x-stackQL-objectKey: $.stages
  '/v1b3/projects/{projectId}/locations/{location}/jobs':
    parameters: *ref_1
    get:
      description: 'List the jobs of a project. To list the jobs of a project in a region, we recommend using `projects.locations.jobs.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To list the all jobs across all regions, use `projects.jobs.aggregated`. Using `projects.jobs.list` is not recommended, because you can only get the list of jobs that are running in `us-central1`. `projects.locations.jobs.list` and `projects.jobs.list` support filtering the list of jobs by name. Filtering by name isn''t supported by `projects.jobs.aggregated`.'
      operationId: dataflow.projects.locations.jobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_jobs_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.jobs
    post:
      description: 'Creates a Cloud Dataflow job. To create a job, we recommend using `projects.locations.jobs.create` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.create` is not recommended, as your job will always start in `us-central1`. Do not enter confidential information when you supply string values using the API.'
      operationId: dataflow.projects.locations.jobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: replaceJobId
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_jobs_create
      x-stackQL-verb: insert
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/metrics':
    parameters: *ref_1
    get:
      description: 'Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.getMetrics` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.getMetrics` is not recommended, as you can only request the status of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.locations.jobs.getMetrics
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMetrics'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
      x-stackQL-resource: jobs_metrics
      x-stackQL-method: projects_locations_jobs_get_metrics
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/locations/{location}/snapshots/{snapshotId}':
    parameters: *ref_1
    get:
      description: Gets information about a snapshot.
      operationId: dataflow.projects.locations.snapshots.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: snapshotId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_locations_snapshots_get
      x-stackQL-verb: select
    delete:
      description: Deletes a snapshot.
      operationId: dataflow.projects.locations.snapshots.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSnapshotResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: snapshotId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_locations_snapshots_delete
      x-stackQL-verb: delete
  '/v1b3/projects/{projectId}/locations/{location}/snapshots':
    parameters: *ref_1
    get:
      description: Lists snapshots.
      operationId: dataflow.projects.locations.snapshots.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: query
          name: jobId
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_locations_snapshots_list
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/templates:get':
    parameters: *ref_1
    get:
      description: Get the template associated with a template.
      operationId: dataflow.projects.templates.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplateResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: gcsPath
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-method: projects_templates_get
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/templates':
    parameters: *ref_1
    post:
      description: Creates a Cloud Dataflow job from a template. Do not enter confidential information when you supply string values using the API.
      operationId: dataflow.projects.templates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobFromTemplateRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-method: projects_templates_create
      x-stackQL-verb: insert
  '/v1b3/projects/{projectId}/templates:launch':
    parameters: *ref_1
    post:
      description: Launch a template.
      operationId: dataflow.projects.templates.launch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaunchTemplateParameters'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchTemplateResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: dynamicTemplate.gcsPath
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: gcsPath
          schema:
            type: string
        - in: query
          name: dynamicTemplate.stagingLocation
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-method: projects_templates_launch
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/snapshots/{snapshotId}':
    parameters: *ref_1
    get:
      description: Gets information about a snapshot.
      operationId: dataflow.projects.snapshots.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotId
          required: true
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_snapshots_get
      x-stackQL-verb: select
