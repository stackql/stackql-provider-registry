openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Dataflow API
  description: Manages Google Cloud Dataflow projects on Google Cloud Platform.
  version: v1b3
  x-discovery-doc-revision: '20230812'
  x-generated-date: '2023-08-17'
externalDocs:
  url: 'https://cloud.google.com/dataflow'
servers:
  - url: 'https://dataflow.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
            'https://www.googleapis.com/auth/compute.readonly': View your Google Compute Engine resources
            'https://www.googleapis.com/auth/compute': View and manage your Google Compute Engine resources
            'https://www.googleapis.com/auth/userinfo.email': See your primary Google Account email address
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    TransformSummary:
      id: TransformSummary
      properties:
        name:
          type: string
          description: User provided name for this transform instance.
        outputCollectionName:
          items:
            type: string
          description: User names for all collection outputs to this transform.
          type: array
        id:
          type: string
          description: SDK generated id of this transform instance.
        kind:
          description: Type of transform.
          enumDescriptions:
            - Unrecognized transform type.
            - ParDo transform.
            - Group By Key transform.
            - Flatten transform.
            - Read transform.
            - Write transform.
            - 'Constructs from a constant value, such as with Create.of.'
            - Creates a Singleton view of a collection.
            - 'Opening or closing a shuffle session, often as part of a GroupByKey.'
          enum:
            - UNKNOWN_KIND
            - PAR_DO_KIND
            - GROUP_BY_KEY_KIND
            - FLATTEN_KIND
            - READ_KIND
            - WRITE_KIND
            - CONSTANT_KIND
            - SINGLETON_KIND
            - SHUFFLE_KIND
          type: string
        displayData:
          items:
            $ref: '#/components/schemas/DisplayData'
          description: Transform-specific display data.
          type: array
        inputCollectionName:
          items:
            type: string
          type: array
          description: User names for all collection inputs to this transform.
      description: 'Description of the type, names/ids, and input/outputs for a transform.'
      type: object
    StragglerSummary:
      properties:
        totalStragglerCount:
          description: The total count of stragglers.
          format: int64
          type: string
        stragglerCauseCount:
          additionalProperties:
            type: string
            format: int64
          description: 'Aggregated counts of straggler causes, keyed by the string representation of the StragglerCause enum.'
          type: object
        recentStragglers:
          description: The most recent stragglers.
          type: array
          items:
            $ref: '#/components/schemas/Straggler'
      description: Summarized straggler identification details.
      id: StragglerSummary
      type: object
    MetricShortId:
      id: MetricShortId
      properties:
        shortId:
          description: The service-generated short identifier for the metric.
          type: string
          format: int64
        metricIndex:
          description: The index of the corresponding metric in the ReportWorkItemStatusRequest. Required.
          type: integer
          format: int32
      description: The metric short id is returned to the user alongside an offset into ReportWorkItemStatusRequest
      type: object
    SourceSplitShard:
      description: DEPRECATED in favor of DerivedSource.
      type: object
      properties:
        derivationMode:
          enumDescriptions:
            - 'The source derivation is unknown, or unspecified.'
            - Produce a completely independent Source with no base.
            - Produce a Source based on the Source being split.
            - Produce a Source based on the base of the Source being split.
          type: string
          description: DEPRECATED
          enum:
            - SOURCE_DERIVATION_MODE_UNKNOWN
            - SOURCE_DERIVATION_MODE_INDEPENDENT
            - SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT
            - SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT
        source:
          description: DEPRECATED
          $ref: '#/components/schemas/Source'
      id: SourceSplitShard
    StragglerDebuggingInfo:
      id: StragglerDebuggingInfo
      properties:
        hotKey:
          $ref: '#/components/schemas/HotKeyDebuggingInfo'
          description: Hot key debugging details.
      type: object
      description: 'Information useful for debugging a straggler. Each type will provide specialized debugging information relevant for a particular cause. The StragglerDebuggingInfo will be 1:1 mapping to the StragglerCause enum.'
    MultiOutputInfo:
      properties:
        tag:
          description: The id of the tag the user code will emit to this output by; this should correspond to the tag of some SideInputInfo.
          type: string
      type: object
      id: MultiOutputInfo
      description: Information about an output of a multi-output DoFn.
    SourceGetMetadataResponse:
      id: SourceGetMetadataResponse
      description: The result of a SourceGetMetadataOperation.
      type: object
      properties:
        metadata:
          description: The computed metadata.
          $ref: '#/components/schemas/SourceMetadata'
    StragglerInfo:
      properties:
        causes:
          type: object
          description: 'The straggler causes, keyed by the string representation of the StragglerCause enum and contains specialized debugging information for each straggler cause.'
          additionalProperties:
            $ref: '#/components/schemas/StragglerDebuggingInfo'
        startTime:
          type: string
          format: google-datetime
          description: The time when the work item attempt became a straggler.
      description: Information useful for straggler identification and debugging.
      type: object
      id: StragglerInfo
    StreamingSideInputLocation:
      description: Identifies the location of a streaming side input.
      id: StreamingSideInputLocation
      type: object
      properties:
        tag:
          description: Identifies the particular side input within the streaming Dataflow job.
          type: string
        stateFamily:
          type: string
          description: Identifies the state family where this side input is stored.
    ParameterMetadata:
      id: ParameterMetadata
      type: object
      properties:
        name:
          type: string
          description: Required. The name of the parameter.
        isOptional:
          description: Optional. Whether the parameter is optional. Defaults to false.
          type: boolean
        helpText:
          type: string
          description: Required. The help text to display for the parameter.
        paramType:
          enum:
            - DEFAULT
            - TEXT
            - GCS_READ_BUCKET
            - GCS_WRITE_BUCKET
            - GCS_READ_FILE
            - GCS_WRITE_FILE
            - GCS_READ_FOLDER
            - GCS_WRITE_FOLDER
            - PUBSUB_TOPIC
            - PUBSUB_SUBSCRIPTION
            - BIGQUERY_TABLE
            - JAVASCRIPT_UDF_FILE
            - SERVICE_ACCOUNT
            - MACHINE_TYPE
            - KMS_KEY_NAME
            - WORKER_REGION
            - WORKER_ZONE
            - BOOLEAN
            - ENUM
            - NUMBER
          type: string
          description: Optional. The type of the parameter. Used for selecting input picker.
          enumDescriptions:
            - Default input type.
            - The parameter specifies generic text input.
            - The parameter specifies a Cloud Storage Bucket to read from.
            - The parameter specifies a Cloud Storage Bucket to write to.
            - The parameter specifies a Cloud Storage file path to read from.
            - The parameter specifies a Cloud Storage file path to write to.
            - The parameter specifies a Cloud Storage folder path to read from.
            - The parameter specifies a Cloud Storage folder to write to.
            - The parameter specifies a Pub/Sub Topic.
            - The parameter specifies a Pub/Sub Subscription.
            - The parameter specifies a BigQuery table.
            - The parameter specifies a JavaScript UDF in Cloud Storage.
            - The parameter specifies a Service Account email.
            - The parameter specifies a Machine Type.
            - The parameter specifies a KMS Key name.
            - The parameter specifies a Worker Region.
            - The parameter specifies a Worker Zone.
            - The parameter specifies a boolean input.
            - The parameter specifies an enum input.
            - The parameter specifies a number input.
        enumOptions:
          description: Optional. The options shown when ENUM ParameterType is specified.
          type: array
          items:
            $ref: '#/components/schemas/ParameterMetadataEnumOption'
        label:
          description: Required. The label to display for the parameter.
          type: string
        customMetadata:
          type: object
          additionalProperties:
            type: string
          description: Optional. Additional metadata for describing this parameter.
        regexes:
          type: array
          items:
            type: string
          description: Optional. Regexes that the parameter must match.
        groupName:
          description: Optional. Specifies a group name for this parameter to be rendered under. Group header text will be rendered exactly as specified in this field. Only considered when parent_name is NOT provided.
          type: string
        parentTriggerValues:
          description: 'Optional. The value(s) of the ''parent_name'' parameter which will trigger this parameter to be shown. If left empty, ANY non-empty value in parent_name will trigger this parameter to be shown. Only considered when this parameter is conditional (when ''parent_name'' has been provided).'
          type: array
          items:
            type: string
        parentName:
          type: string
          description: Optional. Specifies the name of the parent parameter. Used in conjunction with 'parent_trigger_values' to make this parameter conditional (will only be rendered conditionally). Should be mappable to a ParameterMetadata.name field.
      description: Metadata for a specific parameter.
    WorkerLifecycleEvent:
      description: 'A report of an event in a worker''s lifecycle. The proto contains one event, because the worker is expected to asynchronously send each message immediately after the event. Due to this asynchrony, messages may arrive out of order (or missing), and it is up to the consumer to interpret. The timestamp of the event is in the enclosing WorkerMessage proto.'
      type: object
      id: WorkerLifecycleEvent
      properties:
        event:
          enum:
            - UNKNOWN_EVENT
            - OS_START
            - CONTAINER_START
            - NETWORK_UP
            - STAGING_FILES_DOWNLOAD_START
            - STAGING_FILES_DOWNLOAD_FINISH
            - SDK_INSTALL_START
            - SDK_INSTALL_FINISH
          description: The event being reported.
          enumDescriptions:
            - Invalid event.
            - The time the VM started.
            - Our container code starts running. Multiple containers could be distinguished with WorkerMessage.labels if desired.
            - The worker has a functional external network connection.
            - Started downloading staging files.
            - Finished downloading all staging files.
            - 'For applicable SDKs, started installation of SDK and worker packages.'
            - Finished installing SDK.
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
          description: 'Other stats that can accompany an event. E.g. { "downloaded_bytes" : "123456" }'
        containerStartTime:
          type: string
          format: google-datetime
          description: The start time of this container. All events will report this so that events can be grouped together across container/VM restarts.
    AutoscalingSettings:
      description: Settings for WorkerPool autoscaling.
      properties:
        maxNumWorkers:
          format: int32
          type: integer
          description: The maximum number of workers to cap scaling at.
        algorithm:
          enumDescriptions:
            - 'The algorithm is unknown, or unspecified.'
            - Disable autoscaling.
            - Increase worker count over time to reduce job execution time.
          description: The algorithm to use for autoscaling.
          enum:
            - AUTOSCALING_ALGORITHM_UNKNOWN
            - AUTOSCALING_ALGORITHM_NONE
            - AUTOSCALING_ALGORITHM_BASIC
          type: string
      id: AutoscalingSettings
      type: object
    LaunchFlexTemplateResponse:
      description: Response to the request to launch a job from Flex Template.
      type: object
      properties:
        job:
          description: 'The job that was launched, if the request was not a dry run and the job was successfully launched.'
          $ref: '#/components/schemas/Job'
      id: LaunchFlexTemplateResponse
    ListJobsResponse:
      id: ListJobsResponse
      properties:
        jobs:
          items:
            $ref: '#/components/schemas/Job'
          description: A subset of the requested job information.
          type: array
        nextPageToken:
          type: string
          description: Set if there may be more results than fit in this response.
        failedLocation:
          description: 'Zero or more messages describing the [regional endpoints] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that failed to respond.'
          items:
            $ref: '#/components/schemas/FailedLocation'
          type: array
      type: object
      description: 'Response to a request to list Cloud Dataflow jobs in a project. This might be a partial response, depending on the page size in the ListJobsRequest. However, if the project does not have any jobs, an instance of ListJobsResponse is not returned and the requests''s response body is empty {}.'
    TemplateMetadata:
      type: object
      properties:
        parameters:
          items:
            $ref: '#/components/schemas/ParameterMetadata'
          type: array
          description: The parameters for the template.
        description:
          description: Optional. A description of the template.
          type: string
        name:
          description: Required. The name of the template.
          type: string
      description: Metadata describing a template.
      id: TemplateMetadata
    TopologyConfig:
      type: object
      properties:
        forwardingKeyBits:
          description: The size (in bits) of keys that will be assigned to source messages.
          format: int32
          type: integer
        computations:
          type: array
          description: The computations associated with a streaming Dataflow job.
          items:
            $ref: '#/components/schemas/ComputationTopology'
        userStageToComputationNameMap:
          type: object
          description: Maps user stage names to stable computation names.
          additionalProperties:
            type: string
        persistentStateVersion:
          description: Version number for persistent state.
          type: integer
          format: int32
        dataDiskAssignments:
          description: The disks assigned to a streaming Dataflow job.
          items:
            $ref: '#/components/schemas/DataDiskAssignment'
          type: array
      id: TopologyConfig
      description: 'Global topology of the streaming Dataflow job, including all computations and their sharded locations.'
    RuntimeMetadata:
      type: object
      description: RuntimeMetadata describing a runtime environment.
      properties:
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ParameterMetadata'
          description: The parameters for the template.
        sdkInfo:
          description: SDK Info for the template.
          $ref: '#/components/schemas/SDKInfo'
      id: RuntimeMetadata
    SDKInfo:
      description: SDK Information.
      type: object
      properties:
        language:
          type: string
          enumDescriptions:
            - UNKNOWN Language.
            - Java.
            - Python.
            - Go.
          description: Required. The SDK Language.
          enum:
            - UNKNOWN
            - JAVA
            - PYTHON
            - GO
        version:
          type: string
          description: Optional. The SDK version.
      id: SDKInfo
    WorkerShutdownNotice:
      type: object
      description: Shutdown notification from workers. This is to be sent by the shutdown script of the worker VM so that the backend knows that the VM is being shut down.
      properties:
        reason:
          description: 'The reason for the worker shutdown. Current possible values are: "UNKNOWN": shutdown reason is unknown. "PREEMPTION": shutdown reason is preemption. Other possible reasons may be added in the future.'
          type: string
      id: WorkerShutdownNotice
    JobExecutionInfo:
      description: Additional information about how a Cloud Dataflow job will be executed that isn't contained in the submitted job.
      properties:
        stages:
          description: A mapping from each stage to the information about that stage.
          additionalProperties:
            $ref: '#/components/schemas/JobExecutionStageInfo'
          type: object
      id: JobExecutionInfo
      type: object
    StreamingComputationRanges:
      properties:
        rangeAssignments:
          description: Data disk assignments for ranges from this computation.
          items:
            $ref: '#/components/schemas/KeyRangeDataDiskAssignment'
          type: array
        computationId:
          type: string
          description: The ID of the computation.
      description: Describes full or partial data disk assignment information of the computation ranges.
      id: StreamingComputationRanges
      type: object
    LaunchFlexTemplateRequest:
      properties:
        launchParameter:
          $ref: '#/components/schemas/LaunchFlexTemplateParameter'
          description: Required. Parameter to launch a job form Flex Template.
        validateOnly:
          description: 'If true, the request is validated but not actually executed. Defaults to false.'
          type: boolean
      type: object
      id: LaunchFlexTemplateRequest
      description: A request to launch a Cloud Dataflow job from a FlexTemplate.
    WorkItem:
      id: WorkItem
      properties:
        initialReportIndex:
          type: string
          format: int64
          description: The initial index to use when reporting the status of the WorkItem.
        reportStatusInterval:
          description: Recommended reporting interval.
          type: string
          format: google-duration
        projectId:
          type: string
          description: Identifies the cloud project this WorkItem belongs to.
        configuration:
          type: string
          description: Work item-specific configuration as an opaque blob.
        shellTask:
          $ref: '#/components/schemas/ShellTask'
          description: Additional information for ShellTask WorkItems.
        streamingComputationTask:
          description: Additional information for StreamingComputationTask WorkItems.
          $ref: '#/components/schemas/StreamingComputationTask'
        streamingConfigTask:
          $ref: '#/components/schemas/StreamingConfigTask'
          description: Additional information for StreamingConfigTask WorkItems.
        sourceOperationTask:
          description: Additional information for source operation WorkItems.
          $ref: '#/components/schemas/SourceOperationRequest'
        jobId:
          type: string
          description: Identifies the workflow job this WorkItem belongs to.
        id:
          description: Identifies this WorkItem.
          type: string
          format: int64
        streamingSetupTask:
          description: Additional information for StreamingSetupTask WorkItems.
          $ref: '#/components/schemas/StreamingSetupTask'
        packages:
          items:
            $ref: '#/components/schemas/Package'
          type: array
          description: Any required packages that need to be fetched in order to execute this WorkItem.
        leaseExpireTime:
          type: string
          description: Time when the lease on this Work will expire.
          format: google-datetime
        mapTask:
          description: Additional information for MapTask WorkItems.
          $ref: '#/components/schemas/MapTask'
        seqMapTask:
          description: Additional information for SeqMapTask WorkItems.
          $ref: '#/components/schemas/SeqMapTask'
      description: WorkItem represents basic information about a WorkItem to be executed in the cloud.
      type: object
    IntegerList:
      properties:
        elements:
          description: Elements of the list.
          items:
            $ref: '#/components/schemas/SplitInt64'
          type: array
      description: A metric value representing a list of integers.
      type: object
      id: IntegerList
    ReportedParallelism:
      description: 'Represents the level of parallelism in a WorkItem''s input, reported by the worker.'
      properties:
        value:
          type: number
          description: Specifies the level of parallelism in case it is finite.
          format: double
        isInfinite:
          description: 'Specifies whether the parallelism is infinite. If true, "value" is ignored. Infinite parallelism means the service will assume that the work item can always be split into more non-empty work items by dynamic splitting. This is a work-around for lack of support for infinity by the current JSON-based Java RPC stack.'
          type: boolean
      type: object
      id: ReportedParallelism
    SdkHarnessContainerImage:
      type: object
      id: SdkHarnessContainerImage
      description: Defines an SDK harness container for executing Dataflow pipelines.
      properties:
        capabilities:
          type: array
          description: 'The set of capabilities enumerated in the above Environment proto. See also [beam_runner_api.proto](https://github.com/apache/beam/blob/master/model/pipeline/src/main/proto/org/apache/beam/model/pipeline/v1/beam_runner_api.proto)'
          items:
            type: string
        useSingleCorePerContainer:
          description: 'If true, recommends the Dataflow service to use only one core per SDK container instance with this image. If false (or unset) recommends using more than one core per SDK container instance with this image for efficiency. Note that Dataflow service may choose to override this property if needed.'
          type: boolean
        environmentId:
          description: Environment ID for the Beam runner API proto Environment that corresponds to the current SDK Harness.
          type: string
        containerImage:
          description: A docker container image that resides in Google Container Registry.
          type: string
    ReportWorkItemStatusRequest:
      properties:
        currentWorkerTime:
          description: The current timestamp at the worker.
          format: google-datetime
          type: string
        unifiedWorkerRequest:
          type: object
          description: Untranslated bag-of-bytes WorkProgressUpdateRequest from UnifiedWorker.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        workerId:
          description: 'The ID of the worker reporting the WorkItem status. If this does not match the ID of the worker which the Dataflow service believes currently has the lease on the WorkItem, the report will be dropped (with an error response).'
          type: string
        location:
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the WorkItem''s job.'
          type: string
        workItemStatuses:
          items:
            $ref: '#/components/schemas/WorkItemStatus'
          description: 'The order is unimportant, except that the order of the WorkItemServiceState messages in the ReportWorkItemStatusResponse corresponds to the order of WorkItemStatus messages here.'
          type: array
      type: object
      description: Request to report the status of WorkItems.
      id: ReportWorkItemStatusRequest
    ApproximateReportedProgress:
      type: object
      properties:
        consumedParallelism:
          $ref: '#/components/schemas/ReportedParallelism'
          description: 'Total amount of parallelism in the portion of input of this task that has already been consumed and is no longer active. In the first two examples above (see remaining_parallelism), the value should be 29 or 2 respectively. The sum of remaining_parallelism and consumed_parallelism should equal the total amount of parallelism in this work item. If specified, must be finite.'
        remainingParallelism:
          description: 'Total amount of parallelism in the input of this task that remains, (i.e. can be delegated to this task and any new tasks via dynamic splitting). Always at least 1 for non-finished work items and 0 for finished. "Amount of parallelism" refers to how many non-empty parts of the input can be read in parallel. This does not necessarily equal number of records. An input that can be read in parallel down to the individual records is called "perfectly splittable". An example of non-perfectly parallelizable input is a block-compressed file format where a block of records has to be read as a whole, but different blocks can be read in parallel. Examples: * If we are processing record #30 (starting at 1) out of 50 in a perfectly splittable 50-record input, this value should be 21 (20 remaining + 1 current). * If we are reading through block 3 in a block-compressed file consisting of 5 blocks, this value should be 3 (since blocks 4 and 5 can be processed in parallel by new tasks via dynamic splitting and the current task remains processing block 3). * If we are reading through the last block in a block-compressed file, or reading or processing the last record in a perfectly splittable input, this value should be 1, because apart from the current task, no additional remainder can be split off.'
          $ref: '#/components/schemas/ReportedParallelism'
        fractionConsumed:
          format: double
          type: number
          description: 'Completion as fraction of the input consumed, from 0.0 (beginning, nothing consumed), to 1.0 (end of the input, entire input consumed).'
        position:
          $ref: '#/components/schemas/Position'
          description: A Position within the work to represent a progress.
      id: ApproximateReportedProgress
      description: A progress measurement of a WorkItem by a worker.
    Snapshot:
      id: Snapshot
      type: object
      properties:
        creationTime:
          description: The time this snapshot was created.
          format: google-datetime
          type: string
        ttl:
          format: google-duration
          type: string
          description: The time after which this snapshot will be automatically deleted.
        pubsubMetadata:
          description: Pub/Sub snapshot metadata.
          type: array
          items:
            $ref: '#/components/schemas/PubsubSnapshotMetadata'
        id:
          description: The unique ID of this snapshot.
          type: string
        diskSizeBytes:
          description: The disk byte size of the snapshot. Only available for snapshots in READY state.
          format: int64
          type: string
        sourceJobId:
          description: The job this snapshot was created from.
          type: string
        description:
          type: string
          description: User specified description of the snapshot. Maybe empty.
        projectId:
          description: The project this snapshot belongs to.
          type: string
        region:
          type: string
          description: 'Cloud region where this snapshot lives in, e.g., "us-central1".'
        state:
          description: State of the snapshot.
          enum:
            - UNKNOWN_SNAPSHOT_STATE
            - PENDING
            - RUNNING
            - READY
            - FAILED
            - DELETED
          enumDescriptions:
            - Unknown state.
            - 'Snapshot intent to create has been persisted, snapshotting of state has not yet started.'
            - Snapshotting is being performed.
            - Snapshot has been created and is ready to be used.
            - Snapshot failed to be created.
            - Snapshot has been deleted.
          type: string
      description: Represents a snapshot of a job.
    WorkerMessageResponse:
      properties:
        workerHealthReportResponse:
          description: The service's response to a worker's health report.
          $ref: '#/components/schemas/WorkerHealthReportResponse'
        workerMetricsResponse:
          $ref: '#/components/schemas/ResourceUtilizationReportResponse'
          description: Service's response to reporting worker metrics (currently empty).
        workerThreadScalingReportResponse:
          description: Service's thread scaling recommendation for workers.
          $ref: '#/components/schemas/WorkerThreadScalingReportResponse'
        workerShutdownNoticeResponse:
          $ref: '#/components/schemas/WorkerShutdownNoticeResponse'
          description: Service's response to shutdown notice (currently empty).
      description: A worker_message response allows the server to pass information to the sender.
      id: WorkerMessageResponse
      type: object
    SeqMapTaskOutputInfo:
      description: Information about an output of a SeqMapTask.
      id: SeqMapTaskOutputInfo
      type: object
      properties:
        tag:
          type: string
          description: The id of the TupleTag the user code will tag the output value by.
        sink:
          description: The sink to write the output value to.
          $ref: '#/components/schemas/Sink'
    StreamingComputationTask:
      description: A task which describes what action should be performed for the specified streaming computation ranges.
      type: object
      properties:
        taskType:
          enum:
            - STREAMING_COMPUTATION_TASK_UNKNOWN
            - STREAMING_COMPUTATION_TASK_STOP
            - STREAMING_COMPUTATION_TASK_START
          enumDescriptions:
            - 'The streaming computation task is unknown, or unspecified.'
            - Stop processing specified streaming computation range(s).
            - Start processing specified streaming computation range(s).
          type: string
          description: A type of streaming computation task.
        computationRanges:
          items:
            $ref: '#/components/schemas/StreamingComputationRanges'
          type: array
          description: Contains ranges of a streaming computation this task should apply to.
        dataDisks:
          type: array
          description: Describes the set of data disks this task should apply to.
          items:
            $ref: '#/components/schemas/MountedDataDisk'
      id: StreamingComputationTask
    FloatingPointMean:
      properties:
        count:
          description: The number of values being aggregated.
          $ref: '#/components/schemas/SplitInt64'
        sum:
          description: The sum of all values being aggregated.
          type: number
          format: double
      id: FloatingPointMean
      type: object
      description: A representation of a floating point mean metric contribution.
    ExecutionStageSummary:
      properties:
        kind:
          enumDescriptions:
            - Unrecognized transform type.
            - ParDo transform.
            - Group By Key transform.
            - Flatten transform.
            - Read transform.
            - Write transform.
            - 'Constructs from a constant value, such as with Create.of.'
            - Creates a Singleton view of a collection.
            - 'Opening or closing a shuffle session, often as part of a GroupByKey.'
          type: string
          description: Type of transform this stage is executing.
          enum:
            - UNKNOWN_KIND
            - PAR_DO_KIND
            - GROUP_BY_KEY_KIND
            - FLATTEN_KIND
            - READ_KIND
            - WRITE_KIND
            - CONSTANT_KIND
            - SINGLETON_KIND
            - SHUFFLE_KIND
        inputSource:
          type: array
          description: Input sources for this stage.
          items:
            $ref: '#/components/schemas/StageSource'
        outputSource:
          items:
            $ref: '#/components/schemas/StageSource'
          description: Output sources for this stage.
          type: array
        prerequisiteStage:
          description: Other stages that must complete before this stage can run.
          items:
            type: string
          type: array
        id:
          type: string
          description: Dataflow service generated id for this stage.
        componentTransform:
          description: Transforms that comprise this execution stage.
          items:
            $ref: '#/components/schemas/ComponentTransform'
          type: array
        name:
          description: Dataflow service generated name for this stage.
          type: string
        componentSource:
          type: array
          items:
            $ref: '#/components/schemas/ComponentSource'
          description: Collections produced and consumed by component transforms of this stage.
      id: ExecutionStageSummary
      description: 'Description of the composing transforms, names/ids, and input/outputs of a stage of execution. Some composing transforms and sources may have been generated by the Dataflow service during execution planning.'
      type: object
    SideInputInfo:
      type: object
      id: SideInputInfo
      properties:
        kind:
          type: object
          description: How to interpret the source element(s) as a side input value.
          additionalProperties:
            description: Properties of the object.
            type: any
        sources:
          description: 'The source(s) to read element(s) from to get the value of this side input. If more than one source, then the elements are taken from the sources, in the specified order if order matters. At least one source is required.'
          type: array
          items:
            $ref: '#/components/schemas/Source'
        tag:
          description: The id of the tag the user code will access this side input by; this should correspond to the tag of some MultiOutputInfo.
          type: string
      description: Information about a side input of a DoFn or an input of a SeqDoFn.
    StreamingStragglerInfo:
      description: Information useful for streaming straggler identification and debugging.
      properties:
        startTime:
          description: Start time of this straggler.
          format: google-datetime
          type: string
        systemWatermarkLag:
          type: string
          description: The system watermark lag at the time of the straggler detection.
          format: google-duration
        dataWatermarkLag:
          type: string
          format: google-duration
          description: The event-time watermark lag at the time of the straggler detection.
        endTime:
          format: google-datetime
          description: End time of this straggler.
          type: string
        workerName:
          type: string
          description: Name of the worker where the straggler was detected.
      id: StreamingStragglerInfo
      type: object
    ComputationTopology:
      type: object
      properties:
        computationId:
          description: The ID of the computation.
          type: string
        systemStageName:
          type: string
          description: The system stage name.
        stateFamilies:
          type: array
          description: The state family values.
          items:
            $ref: '#/components/schemas/StateFamilyConfig'
        outputs:
          type: array
          description: The outputs from the computation.
          items:
            $ref: '#/components/schemas/StreamLocation'
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/StreamLocation'
          description: The inputs to the computation.
        keyRanges:
          items:
            $ref: '#/components/schemas/KeyRangeLocation'
          description: The key ranges processed by the computation.
          type: array
      description: All configuration data for a particular Computation.
      id: ComputationTopology
    Source:
      properties:
        metadata:
          description: 'Optionally, metadata for this source can be supplied right away, avoiding a SourceGetMetadataOperation roundtrip (see SourceOperationRequest). This field is meaningful only in the Source objects populated by the user (e.g. when filling in a DerivedSource). Source objects supplied by the framework to the user don''t have this field populated.'
          $ref: '#/components/schemas/SourceMetadata'
        baseSpecs:
          type: array
          description: 'While splitting, sources may specify the produced bundles as differences against another source, in order to save backend-side memory and allow bigger jobs. For details, see SourceSplitRequest. To support this use case, the full set of parameters of the source is logically obtained by taking the latest explicitly specified value of each parameter in the order: base_specs (later items win), spec (overrides anything in base_specs).'
          items:
            type: object
            additionalProperties:
              description: Properties of the object.
              type: any
        codec:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
          description: The codec to use to decode data read from the source.
        spec:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
          description: 'The source to read from, plus its parameters.'
        doesNotNeedSplitting:
          description: 'Setting this value to true hints to the framework that the source doesn''t need splitting, and using SourceSplitRequest on it would yield SOURCE_SPLIT_OUTCOME_USE_CURRENT. E.g. a file splitter may set this to true when splitting a single file into a set of byte ranges of appropriate size, and set this to false when splitting a filepattern into individual files. However, for efficiency, a file splitter may decide to produce file subranges directly from the filepattern to avoid a splitting round-trip. See SourceSplitRequest for an overview of the splitting process. This field is meaningful only in the Source objects populated by the user (e.g. when filling in a DerivedSource). Source objects supplied by the framework to the user don''t have this field populated.'
          type: boolean
      type: object
      description: A source that records can be read and decoded from.
      id: Source
    InstructionInput:
      description: 'An input of an instruction, as a reference to an output of a producer instruction.'
      properties:
        producerInstructionIndex:
          type: integer
          format: int32
          description: The index (origin zero) of the parallel instruction that produces the output to be consumed by this input. This index is relative to the list of instructions in this input's instruction's containing MapTask.
        outputNum:
          type: integer
          format: int32
          description: The output index (origin zero) within the producer.
      type: object
      id: InstructionInput
    WorkerPool:
      id: WorkerPool
      type: object
      properties:
        defaultPackageSet:
          enumDescriptions:
            - 'The default set of packages to stage is unknown, or unspecified.'
            - Indicates that no packages should be staged at the worker unless explicitly specified by the job.
            - Stage packages typically useful to workers written in Java.
            - Stage packages typically useful to workers written in Python.
          enum:
            - DEFAULT_PACKAGE_SET_UNKNOWN
            - DEFAULT_PACKAGE_SET_NONE
            - DEFAULT_PACKAGE_SET_JAVA
            - DEFAULT_PACKAGE_SET_PYTHON
          description: The default package set to install. This allows the service to select a default set of packages which are useful to worker harnesses written in a particular language.
          type: string
        diskSizeGb:
          description: 'Size of root disk for VMs, in GB. If zero or unspecified, the service will attempt to choose a reasonable default.'
          format: int32
          type: integer
        zone:
          type: string
          description: 'Zone to run the worker pools in. If empty or unspecified, the service will attempt to choose a reasonable default.'
        taskrunnerSettings:
          $ref: '#/components/schemas/TaskRunnerSettings'
          description: Settings passed through to Google Compute Engine workers when using the standard Dataflow task runner. Users should ignore this field.
        workerHarnessContainerImage:
          description: 'Required. Docker container image that executes the Cloud Dataflow worker harness, residing in Google Container Registry. Deprecated for the Fn API path. Use sdk_harness_container_images instead.'
          type: string
        diskType:
          type: string
          description: 'Type of root disk for VMs. If empty or unspecified, the service will attempt to choose a reasonable default.'
        sdkHarnessContainerImages:
          items:
            $ref: '#/components/schemas/SdkHarnessContainerImage'
          type: array
          description: Set of SDK harness containers needed to execute this pipeline. This will only be set in the Fn API path. For non-cross-language pipelines this should have only one entry. Cross-language pipelines will have two or more entries.
        kind:
          type: string
          description: The kind of the worker pool; currently only `harness` and `shuffle` are supported.
        machineType:
          type: string
          description: 'Machine type (e.g. "n1-standard-1"). If empty or unspecified, the service will attempt to choose a reasonable default.'
        onHostMaintenance:
          type: string
          description: 'The action to take on host maintenance, as defined by the Google Compute Engine API.'
        numThreadsPerWorker:
          description: 'The number of threads per worker harness. If empty or unspecified, the service will choose a number of threads (according to the number of cores on the selected machine type for batch, or 1 by convention for streaming).'
          format: int32
          type: integer
        teardownPolicy:
          enumDescriptions:
            - 'The teardown policy isn''t specified, or is unknown.'
            - Always teardown the resource.
            - Teardown the resource on success. This is useful for debugging failures.
            - Never teardown the resource. This is useful for debugging and development.
          enum:
            - TEARDOWN_POLICY_UNKNOWN
            - TEARDOWN_ALWAYS
            - TEARDOWN_ON_SUCCESS
            - TEARDOWN_NEVER
          type: string
          description: 'Sets the policy for determining when to turndown worker pool. Allowed values are: `TEARDOWN_ALWAYS`, `TEARDOWN_ON_SUCCESS`, and `TEARDOWN_NEVER`. `TEARDOWN_ALWAYS` means workers are always torn down regardless of whether the job succeeds. `TEARDOWN_ON_SUCCESS` means workers are torn down if the job succeeds. `TEARDOWN_NEVER` means the workers are never torn down. If the workers are not torn down by the service, they will continue to run and use Google Compute Engine VM resources in the user''s project until they are explicitly terminated by the user. Because of this, Google recommends using the `TEARDOWN_ALWAYS` policy except for small, manually supervised test jobs. If unknown or unspecified, the service will attempt to choose a reasonable default.'
        diskSourceImage:
          type: string
          description: Fully qualified source image for disks.
        subnetwork:
          type: string
          description: 'Subnetwork to which VMs will be assigned, if desired. Expected to be of the form "regions/REGION/subnetworks/SUBNETWORK".'
        numWorkers:
          description: 'Number of Google Compute Engine workers in this pool needed to execute the job. If zero or unspecified, the service will attempt to choose a reasonable default.'
          format: int32
          type: integer
        poolArgs:
          description: Extra arguments for this worker pool.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        dataDisks:
          type: array
          description: Data disks that are used by a VM in this workflow.
          items:
            $ref: '#/components/schemas/Disk'
        metadata:
          description: Metadata to set on the Google Compute Engine VMs.
          type: object
          additionalProperties:
            type: string
        ipConfiguration:
          enumDescriptions:
            - 'The configuration is unknown, or unspecified.'
            - Workers should have public IP addresses.
            - Workers should have private IP addresses.
          enum:
            - WORKER_IP_UNSPECIFIED
            - WORKER_IP_PUBLIC
            - WORKER_IP_PRIVATE
          type: string
          description: Configuration for VM IPs.
        autoscalingSettings:
          $ref: '#/components/schemas/AutoscalingSettings'
          description: Settings for autoscaling of this WorkerPool.
        network:
          description: 'Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".'
          type: string
        packages:
          type: array
          description: Packages to be installed on workers.
          items:
            $ref: '#/components/schemas/Package'
      description: 'Describes one particular pool of Cloud Dataflow workers to be instantiated by the Cloud Dataflow service in order to perform the computations required by a job. Note that a workflow job may use multiple pools, in order to match the various computational requirements of the various stages of the job.'
    SourceMetadata:
      properties:
        infinite:
          description: Specifies that the size of this source is known to be infinite (this is a streaming source).
          type: boolean
        estimatedSizeBytes:
          type: string
          format: int64
          description: 'An estimate of the total size (in bytes) of the data that would be read from this source. This estimate is in terms of external storage size, before any decompression or other processing done by the reader.'
        producesSortedKeys:
          type: boolean
          description: Whether this source is known to produce key/value pairs with the (encoded) keys in lexicographically sorted order.
      type: object
      id: SourceMetadata
      description: 'Metadata about a Source useful for automatically optimizing and tuning the pipeline, etc.'
    DynamicSourceSplit:
      description: 'When a task splits using WorkItemStatus.dynamic_source_split, this message describes the two parts of the split relative to the description of the current task''s input.'
      id: DynamicSourceSplit
      properties:
        residual:
          $ref: '#/components/schemas/DerivedSource'
          description: Residual part (returned to the pool of work). Specified relative to the previously-current source.
        primary:
          description: Primary part (continued to be processed by worker). Specified relative to the previously-current source. Becomes current.
          $ref: '#/components/schemas/DerivedSource'
      type: object
    Environment:
      description: Describes the environment in which a Dataflow Job runs.
      properties:
        sdkPipelineOptions:
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
          description: The Cloud Dataflow SDK pipeline options specified by the user. These options are passed through the service and are used to recreate the SDK pipeline options on the worker in a language agnostic and platform independent way.
        shuffleMode:
          enumDescriptions:
            - Shuffle mode information is not available.
            - Shuffle is done on the worker VMs.
            - Shuffle is done on the service side.
          description: Output only. The shuffle mode used for the job.
          readOnly: true
          enum:
            - SHUFFLE_MODE_UNSPECIFIED
            - VM_BASED
            - SERVICE_BASED
          type: string
        dataset:
          type: string
          description: 'The dataset for the current project where various workflow related tables are stored. The supported resource type is: Google BigQuery: bigquery.googleapis.com/{dataset}'
        workerRegion:
          description: 'The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane''s region.'
          type: string
        tempStoragePrefix:
          type: string
          description: 'The prefix of the resources the system should use for temporary storage. The system will append the suffix "/temp-{JOBNAME} to this resource prefix, where {JOBNAME} is the value of the job_name field. The resulting bucket and object prefix is used as the prefix of the resources used to store temporary data needed during the job execution. NOTE: This will override the value in taskrunner_settings. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}'
        userAgent:
          description: A description of the process that generated the request.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        internalExperiments:
          description: Experimental settings.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        serviceAccountEmail:
          type: string
          description: Identity to run virtual machines as. Defaults to the default account.
        version:
          type: object
          description: A structure describing which components and their versions of the service are required in order to run the job.
          additionalProperties:
            description: Properties of the object.
            type: any
        flexResourceSchedulingGoal:
          type: string
          description: Which Flexible Resource Scheduling mode to run in.
          enum:
            - FLEXRS_UNSPECIFIED
            - FLEXRS_SPEED_OPTIMIZED
            - FLEXRS_COST_OPTIMIZED
          enumDescriptions:
            - Run in the default mode.
            - Optimize for lower execution time.
            - Optimize for lower cost.
        workerZone:
          type: string
          description: 'The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane''s region is chosen based on available capacity.'
        debugOptions:
          description: Any debugging options to be supplied to the job.
          $ref: '#/components/schemas/DebugOptions'
        serviceKmsKeyName:
          type: string
          description: 'If set, contains the Cloud KMS key identifier used to encrypt data at rest, AKA a Customer Managed Encryption Key (CMEK). Format: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY'
        useStreamingEngineResourceBasedBilling:
          description: Output only. Whether the job uses the new streaming engine billing model based on resource usage.
          readOnly: true
          type: boolean
        workerPools:
          items:
            $ref: '#/components/schemas/WorkerPool'
          type: array
          description: The worker pools. At least one "harness" worker pool must be specified in order for the job to have workers.
        serviceOptions:
          description: 'The list of service options to enable. This field should be used for service related experiments only. These experiments, when graduating to GA, should be replaced by dedicated fields or become default (i.e. always on).'
          type: array
          items:
            type: string
        clusterManagerApiService:
          description: 'The type of cluster manager API to use. If unknown or unspecified, the service will attempt to choose a reasonable default. This should be in the form of the API service name, e.g. "compute.googleapis.com".'
          type: string
        experiments:
          items:
            type: string
          type: array
          description: The list of experiments to enable. This field should be used for SDK related experiments and not for service related experiments. The proper field for service related experiments is service_options.
      id: Environment
      type: object
    HotKeyDetection:
      type: object
      id: HotKeyDetection
      description: Proto describing a hot key detected on a given WorkItem.
      properties:
        hotKeyAge:
          description: The age of the hot key measured from when it was first detected.
          format: google-duration
          type: string
        systemName:
          description: System-defined name of the step containing this hot key. Unique across the workflow.
          type: string
        userStepName:
          type: string
          description: User-provided name of the step that contains this hot key.
    ReadInstruction:
      type: object
      properties:
        source:
          description: The source to read from.
          $ref: '#/components/schemas/Source'
      description: 'An instruction that reads records. Takes no inputs, produces one output.'
      id: ReadInstruction
    StateFamilyConfig:
      id: StateFamilyConfig
      type: object
      properties:
        stateFamily:
          description: The state family value.
          type: string
        isRead:
          description: 'If true, this family corresponds to a read operation.'
          type: boolean
      description: State family configuration.
    DataSamplingReport:
      id: DataSamplingReport
      properties:
        bytesWrittenDelta:
          description: Optional. Delta of bytes written to file from previous report.
          type: string
          format: int64
        persistenceErrorsCount:
          description: Optional. Delta of errors counts from persisting the samples from previous report.
          type: string
          format: int64
        translationErrorsCount:
          format: int64
          type: string
          description: 'Optional. Delta of errors counts from retrieving, or translating the samples from previous report.'
        elementsSampledCount:
          type: string
          description: Optional. Delta of number of elements sampled from previous report.
          format: int64
        exceptionsSampledCount:
          type: string
          description: Optional. Delta of number of samples taken from user code exceptions from previous report.
          format: int64
        pcollectionsSampledCount:
          type: string
          format: int64
          description: Optional. Delta of number of PCollections sampled from previous report.
        elementsSampledBytes:
          format: int64
          type: string
          description: Optional. Delta of bytes sampled from previous report.
      type: object
      description: Contains per-worker telemetry about the data sampling feature.
    IntegerMean:
      properties:
        count:
          $ref: '#/components/schemas/SplitInt64'
          description: The number of values being aggregated.
        sum:
          $ref: '#/components/schemas/SplitInt64'
          description: The sum of all values being aggregated.
      type: object
      description: A representation of an integer mean metric contribution.
      id: IntegerMean
    DataSamplingConfig:
      type: object
      properties:
        behaviors:
          description: 'List of given sampling behaviors to enable. For example, specifying behaviors = [ALWAYS_ON] samples in-flight elements but does not sample exceptions. Can be used to specify multiple behaviors like, behaviors = [ALWAYS_ON, EXCEPTIONS] for specifying periodic sampling and exception sampling. If DISABLED is in the list, then sampling will be disabled and ignore the other given behaviors. Ordering does not matter.'
          items:
            type: string
            enumDescriptions:
              - 'If given, has no effect on sampling behavior. Used as an unknown or unset sentinel value.'
              - 'When given, disables element sampling. Has same behavior as not setting the behavior.'
              - 'When given, enables sampling in-flight from all PCollections.'
              - 'When given, enables sampling input elements when a user-defined DoFn causes an exception.'
            enum:
              - DATA_SAMPLING_BEHAVIOR_UNSPECIFIED
              - DISABLED
              - ALWAYS_ON
              - EXCEPTIONS
          type: array
      description: Configuration options for sampling elements.
      id: DataSamplingConfig
    DeleteSnapshotResponse:
      properties: {}
      id: DeleteSnapshotResponse
      description: Response from deleting a snapshot.
      type: object
    AutoscalingEvent:
      id: AutoscalingEvent
      description: A structured message reporting an autoscaling decision made by the Dataflow service.
      properties:
        currentNumWorkers:
          type: string
          format: int64
          description: The current number of workers the job has.
        targetNumWorkers:
          format: int64
          type: string
          description: The target number of workers the worker pool wants to resize to use.
        description:
          description: 'A message describing why the system decided to adjust the current number of workers, why it failed, or why the system decided to not make any changes to the number of workers.'
          $ref: '#/components/schemas/StructuredMessage'
        workerPool:
          type: string
          description: A short and friendly name for the worker pool this event refers to.
        eventType:
          enum:
            - TYPE_UNKNOWN
            - TARGET_NUM_WORKERS_CHANGED
            - CURRENT_NUM_WORKERS_CHANGED
            - ACTUATION_FAILURE
            - NO_CHANGE
          enumDescriptions:
            - Default type for the enum. Value should never be returned.
            - The TARGET_NUM_WORKERS_CHANGED type should be used when the target worker pool size has changed at the start of an actuation. An event should always be specified as TARGET_NUM_WORKERS_CHANGED if it reflects a change in the target_num_workers.
            - 'The CURRENT_NUM_WORKERS_CHANGED type should be used when actual worker pool size has been changed, but the target_num_workers has not changed.'
            - The ACTUATION_FAILURE type should be used when we want to report an error to the user indicating why the current number of workers in the pool could not be changed. Displayed in the current status and history widgets.
            - 'Used when we want to report to the user a reason why we are not currently adjusting the number of workers. Should specify both target_num_workers, current_num_workers and a decision_message.'
          description: The type of autoscaling event to report.
          type: string
        time:
          format: google-datetime
          type: string
          description: The time this event was emitted to indicate a new target or current num_workers value.
      type: object
    Straggler:
      id: Straggler
      type: object
      properties:
        streamingStraggler:
          $ref: '#/components/schemas/StreamingStragglerInfo'
          description: Streaming straggler identification and debugging information.
        batchStraggler:
          $ref: '#/components/schemas/StragglerInfo'
          description: Batch straggler identification and debugging information.
      description: Information for a straggler.
    WorkItemStatus:
      description: Conveys a worker's progress through the work described by a WorkItem.
      properties:
        totalThrottlerWaitTimeSeconds:
          description: Total time the worker spent being throttled by external systems.
          format: double
          type: number
        requestedLeaseDuration:
          type: string
          format: google-duration
          description: Amount of time the worker requests for its lease.
        sourceOperationResponse:
          $ref: '#/components/schemas/SourceOperationResponse'
          description: 'If the work item represented a SourceOperationRequest, and the work is completed, contains the result of the operation.'
        errors:
          items:
            $ref: '#/components/schemas/Status'
          type: array
          description: 'Specifies errors which occurred during processing. If errors are provided, and completed = true, then the WorkItem is considered to have failed.'
        dynamicSourceSplit:
          $ref: '#/components/schemas/DynamicSourceSplit'
          description: See documentation of stop_position.
        stopPosition:
          $ref: '#/components/schemas/Position'
          description: 'A worker may split an active map task in two parts, "primary" and "residual", continuing to process the primary part and returning the residual part into the pool of available work. This event is called a "dynamic split" and is critical to the dynamic work rebalancing feature. The two obtained sub-tasks are called "parts" of the split. The parts, if concatenated, must represent the same input as would be read by the current task if the split did not happen. The exact way in which the original task is decomposed into the two parts is specified either as a position demarcating them (stop_position), or explicitly as two DerivedSources, if this task consumes a user-defined source type (dynamic_source_split). The "current" task is adjusted as a result of the split: after a task with range [A, B) sends a stop_position update at C, its range is considered to be [A, C), e.g.: * Progress should be interpreted relative to the new range, e.g. "75% completed" means "75% of [A, C) completed" * The worker should interpret proposed_stop_position relative to the new range, e.g. "split at 68%" should be interpreted as "split at 68% of [A, C)". * If the worker chooses to split again using stop_position, only stop_positions in [A, C) will be accepted. * Etc. dynamic_source_split has similar semantics: e.g., if a task with source S splits using dynamic_source_split into {P, R} (where P and R must be together equivalent to S), then subsequent progress and proposed_stop_position should be interpreted relative to P, and in a potential subsequent dynamic_source_split into {P'', R''}, P'' and R'' must be together equivalent to P, etc.'
        sourceFork:
          $ref: '#/components/schemas/SourceFork'
          description: DEPRECATED in favor of dynamic_source_split.
          deprecated: true
        reportedProgress:
          $ref: '#/components/schemas/ApproximateReportedProgress'
          description: The worker's progress through this WorkItem.
        counterUpdates:
          type: array
          description: Worker output counters for this WorkItem.
          items:
            $ref: '#/components/schemas/CounterUpdate'
        progress:
          deprecated: true
          $ref: '#/components/schemas/ApproximateProgress'
          description: DEPRECATED in favor of reported_progress.
        reportIndex:
          format: int64
          description: 'The report index. When a WorkItem is leased, the lease will contain an initial report index. When a WorkItem''s status is reported to the system, the report should be sent with that report index, and the response will contain the index the worker should use for the next report. Reports received with unexpected index values will be rejected by the service. In order to preserve idempotency, the worker should not alter the contents of a report, even if the worker must submit the same report multiple times before getting back a response. The worker should not submit a subsequent report until the response for the previous report had been received from the service.'
          type: string
        workItemId:
          type: string
          description: Identifies the WorkItem.
        completed:
          description: True if the WorkItem was completed (successfully or unsuccessfully).
          type: boolean
        metricUpdates:
          type: array
          items:
            $ref: '#/components/schemas/MetricUpdate'
          deprecated: true
          description: DEPRECATED in favor of counter_updates.
      type: object
      id: WorkItemStatus
    WorkerShutdownNoticeResponse:
      description: Service-side response to WorkerMessage issuing shutdown notice.
      type: object
      properties: {}
      id: WorkerShutdownNoticeResponse
    NameAndKind:
      properties:
        kind:
          type: string
          description: Counter aggregation kind.
          enumDescriptions:
            - Counter aggregation kind was not set.
            - Aggregated value is the sum of all contributed values.
            - Aggregated value is the max of all contributed values.
            - Aggregated value is the min of all contributed values.
            - Aggregated value is the mean of all contributed values.
            - Aggregated value represents the logical 'or' of all contributed values.
            - Aggregated value represents the logical 'and' of all contributed values.
            - Aggregated value is a set of unique contributed values.
            - Aggregated value captures statistics about a distribution.
            - Aggregated value tracks the latest value of a variable.
          enum:
            - INVALID
            - SUM
            - MAX
            - MIN
            - MEAN
            - OR
            - AND
            - SET
            - DISTRIBUTION
            - LATEST_VALUE
        name:
          description: Name of the counter.
          type: string
      description: Basic metadata about a counter.
      type: object
      id: NameAndKind
    InstructionOutput:
      description: An output of an instruction.
      type: object
      properties:
        onlyCountValueBytes:
          description: 'For system-generated byte and mean byte metrics, certain instructions should only report the value size.'
          type: boolean
        name:
          type: string
          description: The user-provided name of this output.
        onlyCountKeyBytes:
          type: boolean
          description: 'For system-generated byte and mean byte metrics, certain instructions should only report the key size.'
        systemName:
          description: System-defined name of this output. Unique across the workflow.
          type: string
        codec:
          type: object
          description: The codec to use to encode data being written via this output.
          additionalProperties:
            description: Properties of the object.
            type: any
        originalName:
          description: System-defined name for this output in the original workflow graph. Outputs that do not contribute to an original instruction do not set this.
          type: string
      id: InstructionOutput
    BigTableIODetails:
      id: BigTableIODetails
      properties:
        instanceId:
          description: InstanceId accessed in the connection.
          type: string
        tableId:
          description: TableId accessed in the connection.
          type: string
        projectId:
          type: string
          description: ProjectId accessed in the connection.
      description: Metadata for a Cloud Bigtable connector used by the job.
      type: object
    FlexTemplateRuntimeEnvironment:
      type: object
      description: The environment values to be set at runtime for flex template.
      id: FlexTemplateRuntimeEnvironment
      properties:
        workerZone:
          type: string
          description: 'The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane''s region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.'
        flexrsGoal:
          enumDescriptions:
            - Run in the default mode.
            - Optimize for lower execution time.
            - Optimize for lower cost.
          type: string
          enum:
            - FLEXRS_UNSPECIFIED
            - FLEXRS_SPEED_OPTIMIZED
            - FLEXRS_COST_OPTIMIZED
          description: 'Set FlexRS goal for the job. https://cloud.google.com/dataflow/docs/guides/flexrs'
        machineType:
          description: The machine type to use for the job. Defaults to the value from the template if not specified.
          type: string
        zone:
          description: 'The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.'
          type: string
        additionalUserLabels:
          type: object
          description: 'Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1kg", "count": "3" }.'
          additionalProperties:
            type: string
        additionalExperiments:
          items:
            type: string
          description: Additional experiment flags for the job.
          type: array
        enableStreamingEngine:
          description: Whether to enable Streaming Engine for the job.
          type: boolean
        autoscalingAlgorithm:
          type: string
          enum:
            - AUTOSCALING_ALGORITHM_UNKNOWN
            - AUTOSCALING_ALGORITHM_NONE
            - AUTOSCALING_ALGORITHM_BASIC
          enumDescriptions:
            - 'The algorithm is unknown, or unspecified.'
            - Disable autoscaling.
            - Increase worker count over time to reduce job execution time.
          description: The algorithm to use for autoscaling
        workerRegion:
          type: string
          description: 'The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane''s region.'
        network:
          type: string
          description: 'Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".'
        launcherMachineType:
          description: The machine type to use for launching the job. The default is n1-standard-1.
          type: string
        stagingLocation:
          type: string
          description: 'The Cloud Storage path for staging local files. Must be a valid Cloud Storage URL, beginning with `gs://`.'
        sdkContainerImage:
          description: Docker registry location of container image to use for the 'worker harness. Default is the container for the version of the SDK. Note this field is only valid for portable pipelines.
          type: string
        maxWorkers:
          format: int32
          description: 'The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.'
          type: integer
        saveHeapDumpsToGcsPath:
          type: string
          description: Cloud Storage bucket (directory) to upload heap dumps to. Enabling this field implies that `dump_heap_on_oom` is set to true.
        diskSizeGb:
          format: int32
          type: integer
          description: 'Worker disk size, in gigabytes.'
        subnetwork:
          type: string
          description: 'Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form "https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK" or "regions/REGION/subnetworks/SUBNETWORK". If the subnetwork is located in a Shared VPC network, you must use the complete URL.'
        enableLauncherVmSerialPortLogging:
          description: If true serial port logging will be enabled for the launcher VM.
          type: boolean
        tempLocation:
          type: string
          description: 'The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.'
        serviceAccountEmail:
          description: The email address of the service account to run the job as.
          type: string
        dumpHeapOnOom:
          description: 'If true, when processing time is spent almost entirely on garbage collection (GC), saves a heap dump before ending the thread or process. If false, ends the thread or process without saving a heap dump. Does not save a heap dump when the Java Virtual Machine (JVM) has an out of memory error during processing. The location of the heap file is either echoed back to the user, or the user is given the opportunity to download the heap file.'
          type: boolean
        ipConfiguration:
          enumDescriptions:
            - 'The configuration is unknown, or unspecified.'
            - Workers should have public IP addresses.
            - Workers should have private IP addresses.
          description: Configuration for VM IPs.
          enum:
            - WORKER_IP_UNSPECIFIED
            - WORKER_IP_PUBLIC
            - WORKER_IP_PRIVATE
          type: string
        numWorkers:
          type: integer
          format: int32
          description: The initial number of Google Compute Engine instances for the job.
        kmsKeyName:
          type: string
          description: 'Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/'
    JobExecutionDetails:
      id: JobExecutionDetails
      type: object
      description: Information about the execution of a job.
      properties:
        nextPageToken:
          description: 'If present, this response does not contain all requested tasks. To obtain the next page of results, repeat the request with page_token set to this value.'
          type: string
        stages:
          description: The stages of the job execution.
          type: array
          items:
            $ref: '#/components/schemas/StageSummary'
    Position:
      description: 'Position defines a position within a collection of data. The value can be either the end position, a key (used with ordered collections), a byte offset, or a record index.'
      type: object
      id: Position
      properties:
        byteOffset:
          format: int64
          description: Position is a byte offset.
          type: string
        key:
          description: 'Position is a string key, ordered lexicographically.'
          type: string
        recordIndex:
          description: Position is a record index.
          format: int64
          type: string
        concatPosition:
          $ref: '#/components/schemas/ConcatPosition'
          description: CloudPosition is a concat position.
        end:
          type: boolean
          description: Position is past all other positions. Also useful for the end position of an unbounded range.
        shufflePosition:
          type: string
          description: CloudPosition is a base64 encoded BatchShufflePosition (with FIXED sharding).
    SourceOperationRequest:
      type: object
      description: A work item that represents the different operations that can be performed on a user-defined Source specification.
      id: SourceOperationRequest
      properties:
        getMetadata:
          $ref: '#/components/schemas/SourceGetMetadataRequest'
          description: Information about a request to get metadata about a source.
        split:
          description: Information about a request to split a source.
          $ref: '#/components/schemas/SourceSplitRequest'
        originalName:
          type: string
          description: System-defined name for the Read instruction for this source in the original workflow graph.
        systemName:
          type: string
          description: System-defined name of the Read instruction for this source. Unique across the workflow.
        name:
          description: User-provided name of the Read instruction for this source.
          type: string
        stageName:
          description: System-defined name of the stage containing the source operation. Unique across the workflow.
          type: string
    HotKeyInfo:
      properties:
        hotKeyAge:
          type: string
          format: google-duration
          description: The age of the hot key measured from when it was first detected.
        keyTruncated:
          type: boolean
          description: 'If true, then the above key is truncated and cannot be deserialized. This occurs if the key above is populated and the key size is >5MB.'
        key:
          type: string
          description: 'A detected hot key that is causing limited parallelism. This field will be populated only if the following flag is set to true: "--enable_hot_key_logging".'
      description: Information about a hot key.
      type: object
      id: HotKeyInfo
    CounterStructuredNameAndMetadata:
      description: A single message which encapsulates structured name and metadata for a given counter.
      properties:
        name:
          description: Structured name of the counter.
          $ref: '#/components/schemas/CounterStructuredName'
        metadata:
          description: Metadata associated with a counter
          $ref: '#/components/schemas/CounterMetadata'
      type: object
      id: CounterStructuredNameAndMetadata
    FlattenInstruction:
      type: object
      description: An instruction that copies its inputs (zero or more) to its (single) output.
      id: FlattenInstruction
      properties:
        inputs:
          type: array
          description: Describes the inputs to the flatten instruction.
          items:
            $ref: '#/components/schemas/InstructionInput'
    StreamingSetupTask:
      properties:
        streamingComputationTopology:
          description: The global topology of the streaming Dataflow job.
          $ref: '#/components/schemas/TopologyConfig'
        drain:
          type: boolean
          description: The user has requested drain.
        workerHarnessPort:
          type: integer
          format: int32
          description: The TCP port used by the worker to communicate with the Dataflow worker harness.
        receiveWorkPort:
          description: The TCP port on which the worker should listen for messages from other streaming computation workers.
          type: integer
          format: int32
        snapshotConfig:
          description: Configures streaming appliance snapshot.
          $ref: '#/components/schemas/StreamingApplianceSnapshotConfig'
      id: StreamingSetupTask
      type: object
      description: A task which initializes part of a streaming Dataflow job.
    BigQueryIODetails:
      id: BigQueryIODetails
      type: object
      properties:
        query:
          type: string
          description: Query used to access data in the connection.
        projectId:
          type: string
          description: Project accessed in the connection.
        table:
          type: string
          description: Table accessed in the connection.
        dataset:
          type: string
          description: Dataset accessed in the connection.
      description: Metadata for a BigQuery connector used by the job.
    CustomSourceLocation:
      description: Identifies the location of a custom souce.
      id: CustomSourceLocation
      type: object
      properties:
        stateful:
          description: Whether this source is stateful.
          type: boolean
    PartialGroupByKeyInstruction:
      description: An instruction that does a partial group-by-key. One input and one output.
      id: PartialGroupByKeyInstruction
      properties:
        input:
          description: Describes the input to the partial group-by-key instruction.
          $ref: '#/components/schemas/InstructionInput'
        inputElementCodec:
          description: The codec to use for interpreting an element in the input PTable.
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
        originalCombineValuesInputStoreName:
          type: string
          description: If this instruction includes a combining function this is the name of the intermediate store between the GBK and the CombineValues.
        sideInputs:
          type: array
          items:
            $ref: '#/components/schemas/SideInputInfo'
          description: Zero or more side inputs.
        originalCombineValuesStepName:
          description: 'If this instruction includes a combining function, this is the name of the CombineValues instruction lifted into this instruction.'
          type: string
        valueCombiningFn:
          description: The value combining function to invoke.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
      type: object
    WorkerHealthReportResponse:
      id: WorkerHealthReportResponse
      type: object
      properties:
        reportInterval:
          format: google-duration
          description: A positive value indicates the worker should change its reporting interval to the specified value. The default value of zero means no change in report rate is requested by the server.
          type: string
      description: WorkerHealthReportResponse contains information returned to the worker in response to a health ping.
    JobMetrics:
      id: JobMetrics
      type: object
      properties:
        metricTime:
          format: google-datetime
          type: string
          description: Timestamp as of which metric values are current.
        metrics:
          items:
            $ref: '#/components/schemas/MetricUpdate'
          description: All metrics for this job.
          type: array
      description: 'JobMetrics contains a collection of metrics describing the detailed progress of a Dataflow job. Metrics correspond to user-defined and system-defined metrics in the job. For more information, see [Dataflow job metrics] (https://cloud.google.com/dataflow/docs/guides/using-monitoring-intf). This resource captures only the most recent values of each metric; time-series data can be queried for them (under the same metric names) from Cloud Monitoring.'
    ParDoInstruction:
      type: object
      properties:
        numOutputs:
          description: The number of outputs.
          format: int32
          type: integer
        sideInputs:
          type: array
          items:
            $ref: '#/components/schemas/SideInputInfo'
          description: Zero or more side inputs.
        userFn:
          description: The user function to invoke.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        multiOutputInfos:
          items:
            $ref: '#/components/schemas/MultiOutputInfo'
          description: 'Information about each of the outputs, if user_fn is a MultiDoFn.'
          type: array
        input:
          $ref: '#/components/schemas/InstructionInput'
          description: The input.
      description: 'An instruction that does a ParDo operation. Takes one main input and zero or more side inputs, and produces zero or more outputs. Runs user code.'
      id: ParDoInstruction
    ReportWorkItemStatusResponse:
      description: Response from a request to report the status of WorkItems.
      id: ReportWorkItemStatusResponse
      properties:
        unifiedWorkerResponse:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: Untranslated bag-of-bytes WorkProgressUpdateResponse for UnifiedWorker.
        workItemServiceStates:
          type: array
          description: 'A set of messages indicating the service-side state for each WorkItem whose status was reported, in the same order as the WorkItemStatus messages in the ReportWorkItemStatusRequest which resulting in this response.'
          items:
            $ref: '#/components/schemas/WorkItemServiceState'
      type: object
    Job:
      properties:
        environment:
          $ref: '#/components/schemas/Environment'
          description: The environment for the job.
        stageStates:
          items:
            $ref: '#/components/schemas/ExecutionStageState'
          description: This field may be mutated by the Cloud Dataflow service; callers cannot mutate it.
          type: array
        pipelineDescription:
          $ref: '#/components/schemas/PipelineDescription'
          description: 'Preliminary field: The format of this data may change at any time. A description of the user pipeline and stages through which it is executed. Created by Cloud Dataflow service. Only retrieved with JOB_VIEW_DESCRIPTION or JOB_VIEW_ALL.'
        tempFiles:
          description: 'A set of files the system should be aware of that are used for temporary storage. These temporary files will be removed on job completion. No duplicates are allowed. No file patterns are supported. The supported files are: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}'
          items:
            type: string
          type: array
        projectId:
          description: The ID of the Cloud Platform project that the job belongs to.
          type: string
        requestedState:
          enum:
            - JOB_STATE_UNKNOWN
            - JOB_STATE_STOPPED
            - JOB_STATE_RUNNING
            - JOB_STATE_DONE
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLED
            - JOB_STATE_UPDATED
            - JOB_STATE_DRAINING
            - JOB_STATE_DRAINED
            - JOB_STATE_PENDING
            - JOB_STATE_CANCELLING
            - JOB_STATE_QUEUED
            - JOB_STATE_RESOURCE_CLEANING_UP
          enumDescriptions:
            - The job's run state isn't specified.
            - '`JOB_STATE_STOPPED` indicates that the job has not yet started to run.'
            - '`JOB_STATE_RUNNING` indicates that the job is currently running.'
            - '`JOB_STATE_DONE` indicates that the job has successfully completed. This is a terminal job state. This state may be set by the Cloud Dataflow service, as a transition from `JOB_STATE_RUNNING`. It may also be set via a Cloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal state.'
            - '`JOB_STATE_FAILED` indicates that the job has failed. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.'
            - '`JOB_STATE_CANCELLED` indicates that the job has been explicitly cancelled. This is a terminal job state. This state may only be set via a Cloud Dataflow `UpdateJob` call, and only if the job has not yet reached another terminal state.'
            - '`JOB_STATE_UPDATED` indicates that the job was successfully updated, meaning that this job was stopped and another job was started, inheriting state from this one. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.'
            - '`JOB_STATE_DRAINING` indicates that the job is in the process of draining. A draining job has stopped pulling from its input sources and is processing any data that remains in-flight. This state may be set via a Cloud Dataflow `UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs that are draining may only transition to `JOB_STATE_DRAINED`, `JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_DRAINED` indicates that the job has been drained. A drained job terminated by stopping pulling from its input sources and processing any data that remained in-flight when draining was requested. This state is a terminal state, may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_DRAINING`.'
            - '`JOB_STATE_PENDING` indicates that the job has been created but is not yet running. Jobs that are pending may only transition to `JOB_STATE_RUNNING`, or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled and is in the process of stopping. Jobs that are cancelling may only transition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_QUEUED` indicates that the job has been created but is being delayed until launch. Jobs that are queued may only transition to `JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`.'
            - '`JOB_STATE_RESOURCE_CLEANING_UP` indicates that the batch job''s associated resources are currently being cleaned up after a successful run. Currently, this is an opt-in feature, please reach out to Cloud support team if you are interested.'
          description: 'The job''s requested state. `UpdateJob` may be used to switch between the `JOB_STATE_STOPPED` and `JOB_STATE_RUNNING` states, by setting requested_state. `UpdateJob` may also be used to directly set a job''s requested state to `JOB_STATE_CANCELLED` or `JOB_STATE_DONE`, irrevocably terminating the job if it has not already reached a terminal state.'
          type: string
        replaceJobId:
          description: 'If this job is an update of an existing job, this field is the job ID of the job it replaced. When sending a `CreateJobRequest`, you can update a job by specifying it here. The job named here is stopped, and its intermediate state is transferred to this job.'
          type: string
        jobMetadata:
          description: This field is populated by the Dataflow service to support filtering jobs by the metadata values provided here. Populated for ListJobs and all GetJob views SUMMARY and higher.
          $ref: '#/components/schemas/JobMetadata'
        clientRequestId:
          description: 'The client''s unique identifier of the job, re-used across retried attempts. If this field is set, the service will ensure its uniqueness. The request to create a job will fail if the service has knowledge of a previously submitted job with the same client''s ID and job name. The caller may use this field to ensure idempotence of job creation across retried attempts to create a job. By default, the field is empty and, in that case, the service ignores it.'
          type: string
        name:
          description: 'The user-specified Cloud Dataflow job name. Only one Job with a given name can exist in a project within one region at any given time. Jobs in different regions can have the same name. If a caller attempts to create a Job with the same name as an already-existing Job, the attempt returns the existing Job. The name must match the regular expression `[a-z]([-a-z0-9]{0,1022}[a-z0-9])?`'
          type: string
        startTime:
          format: google-datetime
          type: string
          description: 'The timestamp when the job was started (transitioned to JOB_STATE_PENDING). Flexible resource scheduling jobs are started with some delay after job creation, so start_time is unset before start and is updated when the job is started by the Cloud Dataflow service. For other jobs, start_time always equals to create_time and is immutable and set by the Cloud Dataflow service.'
        location:
          type: string
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job.'
        currentStateTime:
          format: google-datetime
          type: string
          description: The timestamp associated with the current state.
        type:
          description: The type of Cloud Dataflow job.
          enumDescriptions:
            - 'The type of the job is unspecified, or unknown.'
            - 'A batch job with a well-defined end point: data is read, data is processed, data is written, and the job is done.'
            - 'A continuously streaming job with no end: data is read, processed, and written continuously.'
          enum:
            - JOB_TYPE_UNKNOWN
            - JOB_TYPE_BATCH
            - JOB_TYPE_STREAMING
          type: string
        currentState:
          description: 'The current state of the job. Jobs are created in the `JOB_STATE_STOPPED` state unless otherwise specified. A job in the `JOB_STATE_RUNNING` state may asynchronously enter a terminal state. After a job has reached a terminal state, no further state updates may be made. This field may be mutated by the Cloud Dataflow service; callers cannot mutate it.'
          enumDescriptions:
            - The job's run state isn't specified.
            - '`JOB_STATE_STOPPED` indicates that the job has not yet started to run.'
            - '`JOB_STATE_RUNNING` indicates that the job is currently running.'
            - '`JOB_STATE_DONE` indicates that the job has successfully completed. This is a terminal job state. This state may be set by the Cloud Dataflow service, as a transition from `JOB_STATE_RUNNING`. It may also be set via a Cloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal state.'
            - '`JOB_STATE_FAILED` indicates that the job has failed. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.'
            - '`JOB_STATE_CANCELLED` indicates that the job has been explicitly cancelled. This is a terminal job state. This state may only be set via a Cloud Dataflow `UpdateJob` call, and only if the job has not yet reached another terminal state.'
            - '`JOB_STATE_UPDATED` indicates that the job was successfully updated, meaning that this job was stopped and another job was started, inheriting state from this one. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.'
            - '`JOB_STATE_DRAINING` indicates that the job is in the process of draining. A draining job has stopped pulling from its input sources and is processing any data that remains in-flight. This state may be set via a Cloud Dataflow `UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs that are draining may only transition to `JOB_STATE_DRAINED`, `JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_DRAINED` indicates that the job has been drained. A drained job terminated by stopping pulling from its input sources and processing any data that remained in-flight when draining was requested. This state is a terminal state, may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_DRAINING`.'
            - '`JOB_STATE_PENDING` indicates that the job has been created but is not yet running. Jobs that are pending may only transition to `JOB_STATE_RUNNING`, or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled and is in the process of stopping. Jobs that are cancelling may only transition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_QUEUED` indicates that the job has been created but is being delayed until launch. Jobs that are queued may only transition to `JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`.'
            - '`JOB_STATE_RESOURCE_CLEANING_UP` indicates that the batch job''s associated resources are currently being cleaned up after a successful run. Currently, this is an opt-in feature, please reach out to Cloud support team if you are interested.'
          enum:
            - JOB_STATE_UNKNOWN
            - JOB_STATE_STOPPED
            - JOB_STATE_RUNNING
            - JOB_STATE_DONE
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLED
            - JOB_STATE_UPDATED
            - JOB_STATE_DRAINING
            - JOB_STATE_DRAINED
            - JOB_STATE_PENDING
            - JOB_STATE_CANCELLING
            - JOB_STATE_QUEUED
            - JOB_STATE_RESOURCE_CLEANING_UP
          type: string
        satisfiesPzs:
          description: Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.
          type: boolean
        labels:
          description: 'User-defined labels for this job. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \p{Ll}\p{Lo}{0,62} * Values must conform to regexp: [\p{Ll}\p{Lo}\p{N}_-]{0,63} * Both keys and values are additionally constrained to be <= 128 bytes in size.'
          additionalProperties:
            type: string
          type: object
        stepsLocation:
          type: string
          description: The Cloud Storage location where the steps are stored.
        replacedByJobId:
          description: 'If another job is an update of this job (and thus, this job is in `JOB_STATE_UPDATED`), this field contains the ID of that job.'
          type: string
        id:
          type: string
          description: 'The unique ID of this job. This field is set by the Cloud Dataflow service when the Job is created, and is immutable for the life of the job.'
        createdFromSnapshotId:
          description: 'If this is specified, the job''s initial state is populated from the given snapshot.'
          type: string
        runtimeUpdatableParams:
          description: This field may ONLY be modified at runtime using the projects.jobs.update method to adjust job behavior. This field has no effect when specified at job creation.
          $ref: '#/components/schemas/RuntimeUpdatableParams'
        steps:
          items:
            $ref: '#/components/schemas/Step'
          type: array
          description: Exactly one of step or steps_location should be specified. The top-level steps that constitute the entire job. Only retrieved with JOB_VIEW_ALL.
        transformNameMapping:
          description: The map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job.
          type: object
          additionalProperties:
            type: string
        createTime:
          description: The timestamp when the job was initially created. Immutable and set by the Cloud Dataflow service.
          format: google-datetime
          type: string
        executionInfo:
          description: Deprecated.
          $ref: '#/components/schemas/JobExecutionInfo'
      description: Defines a job to be run by the Cloud Dataflow service. Do not enter confidential information when you supply string values using the API.
      id: Job
      type: object
    CreateJobFromTemplateRequest:
      properties:
        jobName:
          type: string
          description: Required. The job name to use for the created job.
        environment:
          description: The runtime environment for the job.
          $ref: '#/components/schemas/RuntimeEnvironment'
        location:
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.'
          type: string
        parameters:
          additionalProperties:
            type: string
          description: The runtime parameters to pass to the job.
          type: object
        gcsPath:
          type: string
          description: 'Required. A Cloud Storage path to the template from which to create the job. Must be a valid Cloud Storage URL, beginning with `gs://`.'
      description: A request to create a Cloud Dataflow job from a template.
      id: CreateJobFromTemplateRequest
      type: object
    ApproximateProgress:
      description: Obsolete in favor of ApproximateReportedProgress and ApproximateSplitRequest.
      id: ApproximateProgress
      properties:
        position:
          $ref: '#/components/schemas/Position'
          deprecated: true
          description: Obsolete.
        remainingTime:
          description: Obsolete.
          format: google-duration
          deprecated: true
          type: string
        percentComplete:
          format: float
          type: number
          description: Obsolete.
          deprecated: true
      type: object
    Sink:
      id: Sink
      description: A sink that records can be encoded and written to.
      properties:
        spec:
          description: 'The sink to write to, plus its parameters.'
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
        codec:
          description: The codec to use to encode data written to the sink.
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
      type: object
    FailedLocation:
      type: object
      description: 'Indicates which [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) failed to respond to a request for data.'
      properties:
        name:
          type: string
          description: 'The name of the [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that failed to respond.'
      id: FailedLocation
    LeaseWorkItemResponse:
      properties:
        workItems:
          type: array
          description: A list of the leased WorkItems.
          items:
            $ref: '#/components/schemas/WorkItem'
        unifiedWorkerResponse:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: Untranslated bag-of-bytes WorkResponse for UnifiedWorker.
          type: object
      id: LeaseWorkItemResponse
      type: object
      description: Response to a request to lease WorkItems.
    ConcatPosition:
      properties:
        position:
          description: Position within the inner source.
          $ref: '#/components/schemas/Position'
        index:
          type: integer
          description: Index of the inner source.
          format: int32
      id: ConcatPosition
      type: object
      description: A position that encapsulates an inner position and an index for the inner position. A ConcatPosition can be used by a reader of a source that encapsulates a set of other sources.
    ApproximateSplitRequest:
      properties:
        fractionConsumed:
          format: double
          description: 'A fraction at which to split the work item, from 0.0 (beginning of the input) to 1.0 (end of the input).'
          type: number
        position:
          $ref: '#/components/schemas/Position'
          description: A Position at which to split the work item.
        fractionOfRemainder:
          format: double
          type: number
          description: 'The fraction of the remainder of work to split the work item at, from 0.0 (split at the current position) to 1.0 (end of the input).'
      id: ApproximateSplitRequest
      description: A suggestion by the service to the worker to dynamically split the WorkItem.
      type: object
    MapTask:
      id: MapTask
      properties:
        counterPrefix:
          description: Counter prefix that can be used to prefix counters. Not currently used in Dataflow.
          type: string
        systemName:
          description: System-defined name of this MapTask. Unique across the workflow.
          type: string
        stageName:
          description: System-defined name of the stage containing this MapTask. Unique across the workflow.
          type: string
        instructions:
          items:
            $ref: '#/components/schemas/ParallelInstruction'
          description: The instructions in the MapTask.
          type: array
      description: 'MapTask consists of an ordered set of instructions, each of which describes one particular low-level operation for the worker to perform in order to accomplish the MapTask''s WorkItem. Each instruction must appear in the list before any instructions which depends on its output.'
      type: object
    CounterUpdate:
      type: object
      id: CounterUpdate
      properties:
        boolean:
          type: boolean
          description: 'Boolean value for And, Or.'
        integerMean:
          description: Integer mean aggregation value for Mean.
          $ref: '#/components/schemas/IntegerMean'
        stringList:
          description: 'List of strings, for Set.'
          $ref: '#/components/schemas/StringList'
        structuredNameAndMetadata:
          description: Counter structured name and metadata.
          $ref: '#/components/schemas/CounterStructuredNameAndMetadata'
        cumulative:
          description: 'True if this counter is reported as the total cumulative aggregate value accumulated since the worker started working on this WorkItem. By default this is false, indicating that this counter is reported as a delta.'
          type: boolean
        floatingPointList:
          $ref: '#/components/schemas/FloatingPointList'
          description: 'List of floating point numbers, for Set.'
        integerGauge:
          $ref: '#/components/schemas/IntegerGauge'
          description: Gauge data
        integerList:
          $ref: '#/components/schemas/IntegerList'
          description: 'List of integers, for Set.'
        distribution:
          description: Distribution data
          $ref: '#/components/schemas/DistributionUpdate'
        floatingPointMean:
          $ref: '#/components/schemas/FloatingPointMean'
          description: Floating point mean aggregation value for Mean.
        shortId:
          type: string
          format: int64
          description: 'The service-generated short identifier for this counter. The short_id -> (name, metadata) mapping is constant for the lifetime of a job.'
        floatingPoint:
          type: number
          format: double
          description: 'Floating point value for Sum, Max, Min.'
        integer:
          description: 'Integer value for Sum, Max, Min.'
          $ref: '#/components/schemas/SplitInt64'
        nameAndKind:
          description: Counter name and aggregation type.
          $ref: '#/components/schemas/NameAndKind'
        internal:
          type: any
          description: Value for internally-defined counters used by the Dataflow service.
      description: An update to a Counter sent from a worker.
    PubsubLocation:
      description: Identifies a pubsub location to use for transferring data into or out of a streaming Dataflow job.
      type: object
      id: PubsubLocation
      properties:
        topic:
          type: string
          description: 'A pubsub topic, in the form of "pubsub.googleapis.com/topics//"'
        dynamicDestinations:
          type: boolean
          description: 'If true, then this location represents dynamic topics.'
        idLabel:
          type: string
          description: 'If set, contains a pubsub label from which to extract record ids. If left empty, record deduplication will be strictly best effort.'
        withAttributes:
          description: 'If true, then the client has requested to get pubsub attributes.'
          type: boolean
        subscription:
          type: string
          description: 'A pubsub subscription, in the form of "pubsub.googleapis.com/subscriptions//"'
        dropLateData:
          description: Indicates whether the pipeline allows late-arriving data.
          type: boolean
        trackingSubscription:
          type: string
          description: 'If set, specifies the pubsub subscription that will be used for tracking custom time timestamps for watermark estimation.'
        timestampLabel:
          description: 'If set, contains a pubsub label from which to extract record timestamps. If left empty, record timestamps will be generated upon arrival.'
          type: string
    ComponentSource:
      id: ComponentSource
      description: Description of an interstitial value between transforms in an execution stage.
      properties:
        name:
          type: string
          description: Dataflow service generated name for this source.
        userName:
          description: Human-readable name for this transform; may be user or system generated.
          type: string
        originalTransformOrCollection:
          description: User name for the original user transform or collection with which this source is most closely associated.
          type: string
      type: object
    LaunchTemplateResponse:
      id: LaunchTemplateResponse
      type: object
      properties:
        job:
          description: 'The job that was launched, if the request was not a dry run and the job was successfully launched.'
          $ref: '#/components/schemas/Job'
      description: Response to the request to launch a template.
    StreamingConfigTask:
      id: StreamingConfigTask
      properties:
        windmillServiceEndpoint:
          description: 'If present, the worker must use this endpoint to communicate with Windmill Service dispatchers, otherwise the worker must continue to use whatever endpoint it had been using.'
          type: string
        windmillServicePort:
          description: 'If present, the worker must use this port to communicate with Windmill Service dispatchers. Only applicable when windmill_service_endpoint is specified.'
          format: int64
          type: string
        streamingComputationConfigs:
          type: array
          items:
            $ref: '#/components/schemas/StreamingComputationConfig'
          description: Set of computation configuration information.
        commitStreamChunkSizeBytes:
          type: string
          description: Chunk size for commit streams from the harness to windmill.
          format: int64
        maxWorkItemCommitBytes:
          type: string
          format: int64
          description: Maximum size for work item commit supported windmill storage layer.
        getDataStreamChunkSizeBytes:
          type: string
          format: int64
          description: Chunk size for get data streams from the harness to windmill.
        userStepToStateFamilyNameMap:
          description: Map from user step names to state families.
          type: object
          additionalProperties:
            type: string
      description: A task that carries configuration information for streaming computations.
      type: object
    KeyRangeLocation:
      type: object
      id: KeyRangeLocation
      properties:
        deprecatedPersistentDirectory:
          description: 'DEPRECATED. The location of the persistent state for this range, as a persistent directory in the worker local filesystem.'
          type: string
          deprecated: true
        dataDisk:
          type: string
          description: 'The name of the data disk where data for this range is stored. This name is local to the Google Cloud Platform project and uniquely identifies the disk within that project, for example "myproject-1014-104817-4c2-harness-0-disk-1".'
        start:
          description: The start (inclusive) of the key range.
          type: string
        end:
          type: string
          description: The end (exclusive) of the key range.
        deliveryEndpoint:
          type: string
          description: The physical location of this range assignment to be used for streaming computation cross-worker message delivery.
      description: Location information for a specific key-range of a sharded computation. Currently we only support UTF-8 character splits to simplify encoding into JSON.
    PubsubSnapshotMetadata:
      description: Represents a Pubsub snapshot.
      properties:
        expireTime:
          description: The expire time of the Pubsub snapshot.
          type: string
          format: google-datetime
        snapshotName:
          type: string
          description: The name of the Pubsub snapshot.
        topicName:
          description: The name of the Pubsub topic.
          type: string
      type: object
      id: PubsubSnapshotMetadata
    MetricUpdate:
      properties:
        internal:
          type: any
          description: Worker-computed aggregate value for internal use by the Dataflow service.
        meanSum:
          type: any
          description: Worker-computed aggregate value for the "Mean" aggregation kind. This holds the sum of the aggregated values and is used in combination with mean_count below to obtain the actual mean aggregate value. The only possible value types are Long and Double.
        meanCount:
          type: any
          description: Worker-computed aggregate value for the "Mean" aggregation kind. This holds the count of the aggregated values and is used in combination with mean_sum above to obtain the actual mean aggregate value. The only possible value type is Long.
        cumulative:
          type: boolean
          description: 'True if this metric is reported as the total cumulative aggregate value accumulated since the worker started working on this WorkItem. By default this is false, indicating that this metric is reported as a delta that is not associated with any WorkItem.'
        updateTime:
          type: string
          format: google-datetime
          description: Timestamp associated with the metric value. Optional when workers are reporting work progress; it will be filled in responses from the metrics API.
        set:
          type: any
          description: 'Worker-computed aggregate value for the "Set" aggregation kind. The only possible value type is a list of Values whose type can be Long, Double, or String, according to the metric''s type. All Values in the list must be of the same type.'
        distribution:
          type: any
          description: A struct value describing properties of a distribution of numeric values.
        name:
          description: Name of the metric.
          $ref: '#/components/schemas/MetricStructuredName'
        kind:
          type: string
          description: 'Metric aggregation kind. The possible metric aggregation kinds are "Sum", "Max", "Min", "Mean", "Set", "And", "Or", and "Distribution". The specified aggregation kind is case-insensitive. If omitted, this is not an aggregated value but instead a single metric sample value.'
        scalar:
          type: any
          description: 'Worker-computed aggregate value for aggregation kinds "Sum", "Max", "Min", "And", and "Or". The possible value types are Long, Double, and Boolean.'
        gauge:
          description: 'A struct value describing properties of a Gauge. Metrics of gauge type show the value of a metric across time, and is aggregated based on the newest value.'
          type: any
      type: object
      id: MetricUpdate
      description: Describes the state of a metric.
    WriteInstruction:
      properties:
        sink:
          $ref: '#/components/schemas/Sink'
          description: The sink to write to.
        input:
          $ref: '#/components/schemas/InstructionInput'
          description: The input.
      description: 'An instruction that writes records. Takes one input, produces no outputs.'
      type: object
      id: WriteInstruction
    LaunchFlexTemplateParameter:
      properties:
        containerSpecGcsPath:
          type: string
          description: Cloud Storage path to a file with json serialized ContainerSpec as content.
        update:
          type: boolean
          description: 'Set this to true if you are sending a request to update a running streaming job. When set, the job name should be the same as the running job.'
        transformNameMappings:
          description: 'Use this to pass transform_name_mappings for streaming update jobs. Ex:{"oldTransformName":"newTransformName",...}'''
          additionalProperties:
            type: string
          type: object
        launchOptions:
          type: object
          additionalProperties:
            type: string
          description: Launch options for this flex template job. This is a common set of options across languages and templates. This should not be used to pass job parameters.
        containerSpec:
          $ref: '#/components/schemas/ContainerSpec'
          description: Spec about the container image to launch.
        parameters:
          additionalProperties:
            type: string
          description: 'The parameters for FlexTemplate. Ex. {"num_workers":"5"}'
          type: object
        environment:
          $ref: '#/components/schemas/FlexTemplateRuntimeEnvironment'
          description: The runtime environment for the FlexTemplate job
        jobName:
          type: string
          description: 'Required. The job name to use for the created job. For update job request, job name should be same as the existing running job.'
      id: LaunchFlexTemplateParameter
      type: object
      description: Launch FlexTemplate Parameter.
    WorkItemDetails:
      properties:
        endTime:
          format: google-datetime
          description: 'End time of this work item attempt. If the work item is completed, this is the actual end time of the work item. Otherwise, it is the predicted end time.'
          type: string
        attemptId:
          description: Attempt ID of this work item
          type: string
        progress:
          description: Progress of this work item.
          $ref: '#/components/schemas/ProgressTimeseries'
        taskId:
          description: Name of this work item.
          type: string
        state:
          description: State of this work item.
          enumDescriptions:
            - The component state is unknown or unspecified.
            - The component is not yet running.
            - The component is currently running.
            - The component succeeded.
            - The component failed.
            - Execution of the component was cancelled.
          type: string
          enum:
            - EXECUTION_STATE_UNKNOWN
            - EXECUTION_STATE_NOT_STARTED
            - EXECUTION_STATE_RUNNING
            - EXECUTION_STATE_SUCCEEDED
            - EXECUTION_STATE_FAILED
            - EXECUTION_STATE_CANCELLED
        stragglerInfo:
          $ref: '#/components/schemas/StragglerInfo'
          description: Information about straggler detections for this work item.
        startTime:
          type: string
          format: google-datetime
          description: Start time of this work item attempt.
        metrics:
          items:
            $ref: '#/components/schemas/MetricUpdate'
          description: Metrics for this work item.
          type: array
      description: Information about an individual work item execution.
      id: WorkItemDetails
      type: object
    StreamLocation:
      description: 'Describes a stream of data, either as input to be processed or as output of a streaming Dataflow job.'
      properties:
        streamingStageLocation:
          $ref: '#/components/schemas/StreamingStageLocation'
          description: The stream is part of another computation within the current streaming Dataflow job.
        pubsubLocation:
          description: The stream is a pubsub stream.
          $ref: '#/components/schemas/PubsubLocation'
        customSourceLocation:
          $ref: '#/components/schemas/CustomSourceLocation'
          description: The stream is a custom source.
        sideInputLocation:
          description: The stream is a streaming side input.
          $ref: '#/components/schemas/StreamingSideInputLocation'
      type: object
      id: StreamLocation
    StructuredMessage:
      id: StructuredMessage
      type: object
      description: 'A rich message format, including a human readable string, a key for identifying the message, and structured data associated with the message for programmatic consumption.'
      properties:
        messageText:
          description: Human-readable version of message.
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          description: The structured data associated with this message.
          type: array
        messageKey:
          description: Identifier for this message type. Used by external systems to internationalize or personalize message.
          type: string
    SnapshotJobRequest:
      properties:
        location:
          type: string
          description: The location that contains this job.
        description:
          type: string
          description: User specified description of the snapshot. Maybe empty.
        ttl:
          type: string
          format: google-duration
          description: TTL for the snapshot.
        snapshotSources:
          description: 'If true, perform snapshots for sources which support this.'
          type: boolean
      description: Request to create a snapshot of a job.
      type: object
      id: SnapshotJobRequest
    ParameterMetadataEnumOption:
      properties:
        description:
          description: Optional. The description to display for the enum option.
          type: string
        label:
          type: string
          description: Optional. The label to display for the enum option.
        value:
          type: string
          description: Required. The value of the enum option.
      id: ParameterMetadataEnumOption
      description: ParameterMetadataEnumOption specifies the option shown in the enum form.
      type: object
    Step:
      id: Step
      properties:
        properties:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
          description: Named properties associated with the step. Each kind of predefined step has its own required set of properties. Must be provided on Create. Only retrieved with JOB_VIEW_ALL.
        name:
          type: string
          description: The name that identifies the step. This must be unique for each step with respect to all other steps in the Cloud Dataflow job.
        kind:
          type: string
          description: The kind of step in the Cloud Dataflow job.
      type: object
      description: 'Defines a particular step within a Cloud Dataflow job. A job consists of multiple steps, each of which performs some specific operation as part of the overall job. Data is typically passed from one step to another as part of the job. **Note:** The properties of this object are not stable and might change. Here''s an example of a sequence of steps which together implement a Map-Reduce job: * Read a collection of data from some source, parsing the collection''s elements. * Validate the elements. * Apply a user-defined function to map each element to some value and extract an element-specific key value. * Group elements with the same key into a single element with that key, transforming a multiply-keyed collection into a uniquely-keyed collection. * Write the elements out to some data sink. Note that the Cloud Dataflow service may be used to run many different types of jobs, not just Map-Reduce.'
    DisplayData:
      description: Data provided with a pipeline or transform to provide descriptive info.
      properties:
        url:
          type: string
          description: An optional full URL.
        int64Value:
          type: string
          description: Contains value if the data is of int64 type.
          format: int64
        javaClassValue:
          description: Contains value if the data is of java class type.
          type: string
        label:
          type: string
          description: An optional label to display in a dax UI for the element.
        durationValue:
          format: google-duration
          type: string
          description: Contains value if the data is of duration type.
        namespace:
          description: The namespace for the key. This is usually a class name or programming language namespace (i.e. python module) which defines the display data. This allows a dax monitoring system to specially handle the data and perform custom rendering.
          type: string
        key:
          description: The key identifying the display data. This is intended to be used as a label for the display data when viewed in a dax monitoring system.
          type: string
        timestampValue:
          type: string
          description: Contains value if the data is of timestamp type.
          format: google-datetime
        floatValue:
          type: number
          format: float
          description: Contains value if the data is of float type.
        boolValue:
          type: boolean
          description: Contains value if the data is of a boolean type.
        shortStrValue:
          description: A possible additional shorter value to display. For example a java_class_name_value of com.mypackage.MyDoFn will be stored with MyDoFn as the short_str_value and com.mypackage.MyDoFn as the java_class_name value. short_str_value can be displayed and java_class_name_value will be displayed as a tooltip.
          type: string
        strValue:
          description: Contains value if the data is of string type.
          type: string
      type: object
      id: DisplayData
    WorkerHealthReport:
      id: WorkerHealthReport
      type: object
      properties:
        vmStartupTime:
          format: google-datetime
          description: The time the VM was booted.
          type: string
        vmIsBroken:
          type: boolean
          description: Whether the VM is in a permanently broken state. Broken VMs should be abandoned or deleted ASAP to avoid assigning or completing any work.
        vmBrokenCode:
          description: 'Code to describe a specific reason, if known, that a VM has reported broken state.'
          type: string
        msg:
          description: Message describing any unusual health reports.
          type: string
        pods:
          description: 'The pods running on the worker. See: http://kubernetes.io/v1.1/docs/api-reference/v1/definitions.html#_v1_pod This field is used by the worker to send the status of the indvidual containers running on each worker.'
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object.
          type: array
        reportInterval:
          format: google-duration
          type: string
          description: The interval at which the worker is sending health reports. The default value of 0 should be interpreted as the field is not being explicitly set by the worker.
        vmIsHealthy:
          type: boolean
          description: Whether the VM is currently healthy.
      description: WorkerHealthReport contains information about the health of a worker. The VM should be identified by the labels attached to the WorkerMessage that this health ping belongs to.
    ShellTask:
      type: object
      properties:
        exitCode:
          type: integer
          description: Exit code for the task.
          format: int32
        command:
          type: string
          description: The shell command to run.
      description: A task which consists of a shell command for the worker to execute.
      id: ShellTask
    PipelineDescription:
      id: PipelineDescription
      description: A descriptive representation of submitted pipeline as well as the executed form. This data is provided by the Dataflow service for ease of visualizing the pipeline and interpreting Dataflow provided metrics.
      properties:
        originalPipelineTransform:
          description: Description of each transform in the pipeline and collections between them.
          type: array
          items:
            $ref: '#/components/schemas/TransformSummary'
        displayData:
          items:
            $ref: '#/components/schemas/DisplayData'
          description: Pipeline level display data.
          type: array
        stepNamesHash:
          type: string
          description: A hash value of the submitted pipeline portable graph step names if exists.
        executionPipelineStage:
          description: Description of each stage of execution of the pipeline.
          type: array
          items:
            $ref: '#/components/schemas/ExecutionStageSummary'
      type: object
    SourceOperationResponse:
      id: SourceOperationResponse
      type: object
      description: 'The result of a SourceOperationRequest, specified in ReportWorkItemStatusRequest.source_operation when the work item is completed.'
      properties:
        getMetadata:
          $ref: '#/components/schemas/SourceGetMetadataResponse'
          description: A response to a request to get metadata about a source.
        split:
          description: A response to a request to split a source.
          $ref: '#/components/schemas/SourceSplitResponse'
    Disk:
      id: Disk
      properties:
        mountPoint:
          description: Directory in a VM where disk is mounted.
          type: string
        sizeGb:
          type: integer
          description: 'Size of disk in GB. If zero or unspecified, the service will attempt to choose a reasonable default.'
          format: int32
        diskType:
          description: 'Disk storage type, as defined by Google Compute Engine. This must be a disk type appropriate to the project and zone in which the workers will run. If unknown or unspecified, the service will attempt to choose a reasonable default. For example, the standard persistent disk type is a resource name typically ending in "pd-standard". If SSD persistent disks are available, the resource name typically ends with "pd-ssd". The actual valid values are defined the Google Compute Engine API, not by the Cloud Dataflow API; consult the Google Compute Engine documentation for more information about determining the set of available disk types for a particular project and zone. Google Compute Engine Disk types are local to a particular project in a particular zone, and so the resource name will typically look something like this: compute.googleapis.com/projects/project-id/zones/zone/diskTypes/pd-standard'
          type: string
      description: Describes the data disk used by a workflow job.
      type: object
    Status:
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
      properties:
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        code:
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
        details:
          type: array
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
    MemInfo:
      description: Information about the memory usage of a worker or a container within a worker.
      properties:
        currentLimitBytes:
          description: Instantenous memory limit in bytes.
          format: uint64
          type: string
        timestamp:
          description: Timestamp of the measurement.
          format: google-datetime
          type: string
        currentRssBytes:
          type: string
          format: uint64
          description: Instantenous memory (RSS) size in bytes.
        totalGbMs:
          format: uint64
          description: Total memory (RSS) usage since start up in GB * ms.
          type: string
        currentOoms:
          description: Number of Out of Memory (OOM) events recorded since the previous measurement.
          format: int64
          type: string
      id: MemInfo
      type: object
    Package:
      type: object
      properties:
        location:
          description: 'The resource to read the package from. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket} bucket.storage.googleapis.com/'
          type: string
        name:
          description: The name of the package.
          type: string
      description: 'The packages that must be installed in order for a worker to run the steps of the Cloud Dataflow job that will be assigned to its worker pool. This is the mechanism by which the Cloud Dataflow SDK causes code to be loaded onto the workers. For example, the Cloud Dataflow Java SDK might use this to install jars containing the user''s code and all of the various dependencies (libraries, data files, etc.) required in order for that code to run.'
      id: Package
    StreamingStageLocation:
      id: StreamingStageLocation
      properties:
        streamId:
          type: string
          description: Identifies the particular stream within the streaming Dataflow job.
      description: 'Identifies the location of a streaming computation stage, for stage-to-stage communication.'
      type: object
    SendWorkerMessagesResponse:
      type: object
      properties:
        workerMessageResponses:
          description: The servers response to the worker messages.
          items:
            $ref: '#/components/schemas/WorkerMessageResponse'
          type: array
      id: SendWorkerMessagesResponse
      description: The response to the worker messages.
    SpannerIODetails:
      type: object
      id: SpannerIODetails
      description: Metadata for a Spanner connector used by the job.
      properties:
        instanceId:
          description: InstanceId accessed in the connection.
          type: string
        projectId:
          type: string
          description: ProjectId accessed in the connection.
        databaseId:
          description: DatabaseId accessed in the connection.
          type: string
    SourceSplitResponse:
      id: SourceSplitResponse
      type: object
      description: The response to a SourceSplitRequest.
      properties:
        outcome:
          type: string
          enum:
            - SOURCE_SPLIT_OUTCOME_UNKNOWN
            - SOURCE_SPLIT_OUTCOME_USE_CURRENT
            - SOURCE_SPLIT_OUTCOME_SPLITTING_HAPPENED
          description: 'Indicates whether splitting happened and produced a list of bundles. If this is USE_CURRENT_SOURCE_AS_IS, the current source should be processed "as is" without splitting. "bundles" is ignored in this case. If this is SPLITTING_HAPPENED, then "bundles" contains a list of bundles into which the source was split.'
          enumDescriptions:
            - 'The source split outcome is unknown, or unspecified.'
            - The current source should be processed "as is" without splitting.
            - Splitting produced a list of bundles.
        shards:
          description: DEPRECATED in favor of bundles.
          type: array
          items:
            $ref: '#/components/schemas/SourceSplitShard'
          deprecated: true
        bundles:
          items:
            $ref: '#/components/schemas/DerivedSource'
          type: array
          description: 'If outcome is SPLITTING_HAPPENED, then this is a list of bundles into which the source was split. Otherwise this field is ignored. This list can be empty, which means the source represents an empty input.'
    CPUTime:
      type: object
      properties:
        rate:
          type: number
          format: double
          description: Average CPU utilization rate (% non-idle cpu / second) since previous sample.
        timestamp:
          type: string
          format: google-datetime
          description: Timestamp of the measurement.
        totalMs:
          type: string
          format: uint64
          description: 'Total active CPU time across all cores (ie., non-idle) in milliseconds since start-up.'
      id: CPUTime
      description: Modeled after information exposed by /proc/stat.
    ResourceUtilizationReportResponse:
      properties: {}
      type: object
      id: ResourceUtilizationReportResponse
      description: Service-side response to WorkerMessage reporting resource utilization.
    Parameter:
      description: Structured data associated with this message.
      id: Parameter
      type: object
      properties:
        value:
          description: Value for this parameter.
          type: any
        key:
          description: Key or name for this parameter.
          type: string
    WorkerMessage:
      type: object
      properties:
        workerThreadScalingReport:
          description: Thread scaling information reported by workers.
          $ref: '#/components/schemas/WorkerThreadScalingReport'
        workerLifecycleEvent:
          description: Record of worker lifecycle events.
          $ref: '#/components/schemas/WorkerLifecycleEvent'
        workerMetrics:
          $ref: '#/components/schemas/ResourceUtilizationReport'
          description: Resource metrics reported by workers.
        workerShutdownNotice:
          $ref: '#/components/schemas/WorkerShutdownNotice'
          description: Shutdown notice by workers.
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Labels are used to group WorkerMessages. For example, a worker_message about a particular container might have the labels: { "JOB_ID": "2015-04-22", "WORKER_ID": "wordcount-vm-2015…" "CONTAINER_TYPE": "worker", "CONTAINER_ID": "ac1234def"} Label tags typically correspond to Label enum values. However, for ease of development other strings can be used as tags. LABEL_UNSPECIFIED should not be used here.'
        workerMessageCode:
          description: A worker message code.
          $ref: '#/components/schemas/WorkerMessageCode'
        dataSamplingReport:
          description: Optional. Contains metrics related to go/dataflow-data-sampling-telemetry.
          $ref: '#/components/schemas/DataSamplingReport'
        time:
          description: The timestamp of the worker_message.
          format: google-datetime
          type: string
        workerHealthReport:
          description: The health of a worker.
          $ref: '#/components/schemas/WorkerHealthReport'
      id: WorkerMessage
      description: WorkerMessage provides information to the backend about a worker.
    DerivedSource:
      properties:
        derivationMode:
          enumDescriptions:
            - 'The source derivation is unknown, or unspecified.'
            - Produce a completely independent Source with no base.
            - Produce a Source based on the Source being split.
            - Produce a Source based on the base of the Source being split.
          description: What source to base the produced source on (if any).
          enum:
            - SOURCE_DERIVATION_MODE_UNKNOWN
            - SOURCE_DERIVATION_MODE_INDEPENDENT
            - SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT
            - SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT
          type: string
        source:
          $ref: '#/components/schemas/Source'
          description: Specification of the source.
      id: DerivedSource
      type: object
      description: 'Specification of one of the bundles produced as a result of splitting a Source (e.g. when executing a SourceSplitRequest, or when splitting an active task using WorkItemStatus.dynamic_source_split), relative to the source being split.'
    IntegerGauge:
      type: object
      description: A metric value representing temporal values of a variable.
      properties:
        value:
          description: The value of the variable represented by this gauge.
          $ref: '#/components/schemas/SplitInt64'
        timestamp:
          format: google-datetime
          type: string
          description: The time at which this value was measured. Measured as msecs from epoch.
      id: IntegerGauge
    StringList:
      properties:
        elements:
          type: array
          items:
            type: string
          description: Elements of the list.
      id: StringList
      description: A metric value representing a list of strings.
      type: object
    GetDebugConfigRequest:
      description: Request to get updated debug configuration for component.
      type: object
      id: GetDebugConfigRequest
      properties:
        componentId:
          description: The internal component id for which debug configuration is requested.
          type: string
        workerId:
          description: 'The worker id, i.e., VM hostname.'
          type: string
        location:
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.'
          type: string
    StreamingApplianceSnapshotConfig:
      id: StreamingApplianceSnapshotConfig
      type: object
      properties:
        importStateEndpoint:
          description: Indicates which endpoint is used to import appliance state.
          type: string
        snapshotId:
          description: 'If set, indicates the snapshot id for the snapshot being performed.'
          type: string
      description: Streaming appliance snapshot configuration.
    HotKeyDebuggingInfo:
      type: object
      id: HotKeyDebuggingInfo
      description: Information useful for debugging a hot key detection.
      properties:
        detectedHotKeys:
          type: object
          description: Debugging information for each detected hot key. Keyed by a hash of the key.
          additionalProperties:
            $ref: '#/components/schemas/HotKeyInfo'
    KeyRangeDataDiskAssignment:
      description: Data disk assignment information for a specific key-range of a sharded computation. Currently we only support UTF-8 character splits to simplify encoding into JSON.
      properties:
        dataDisk:
          description: 'The name of the data disk where data for this range is stored. This name is local to the Google Cloud Platform project and uniquely identifies the disk within that project, for example "myproject-1014-104817-4c2-harness-0-disk-1".'
          type: string
        end:
          type: string
          description: The end (exclusive) of the key range.
        start:
          description: The start (inclusive) of the key range.
          type: string
      id: KeyRangeDataDiskAssignment
      type: object
    SourceSplitRequest:
      type: object
      properties:
        source:
          description: Specification of the source to be split.
          $ref: '#/components/schemas/Source'
        options:
          description: Hints for tuning the splitting process.
          $ref: '#/components/schemas/SourceSplitOptions'
      description: 'Represents the operation to split a high-level Source specification into bundles (parts for parallel processing). At a high level, splitting of a source into bundles happens as follows: SourceSplitRequest is applied to the source. If it returns SOURCE_SPLIT_OUTCOME_USE_CURRENT, no further splitting happens and the source is used "as is". Otherwise, splitting is applied recursively to each produced DerivedSource. As an optimization, for any Source, if its does_not_need_splitting is true, the framework assumes that splitting this source would return SOURCE_SPLIT_OUTCOME_USE_CURRENT, and doesn''t initiate a SourceSplitRequest. This applies both to the initial source being split and to bundles produced from it.'
      id: SourceSplitRequest
    LeaseWorkItemRequest:
      id: LeaseWorkItemRequest
      type: object
      description: Request to lease WorkItems.
      properties:
        workerId:
          type: string
          description: Identifies the worker leasing work -- typically the ID of the virtual machine running the worker.
        unifiedWorkerRequest:
          type: object
          description: Untranslated bag-of-bytes WorkRequest from UnifiedWorker.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        workItemTypes:
          type: array
          description: Filter for WorkItem type.
          items:
            type: string
        currentWorkerTime:
          type: string
          format: google-datetime
          description: The current timestamp at the worker.
        location:
          type: string
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the WorkItem''s job.'
        workerCapabilities:
          items:
            type: string
          description: Worker capabilities. WorkItems might be limited to workers with specific capabilities.
          type: array
        requestedLeaseDuration:
          type: string
          format: google-duration
          description: The initial lease period.
    WorkerThreadScalingReport:
      type: object
      properties:
        currentThreadCount:
          description: Current number of active threads in a worker.
          type: integer
          format: int32
      id: WorkerThreadScalingReport
      description: Contains information about the thread scaling information of a worker.
    StageExecutionDetails:
      description: Information about the workers and work items within a stage.
      properties:
        nextPageToken:
          type: string
          description: 'If present, this response does not contain all requested tasks. To obtain the next page of results, repeat the request with page_token set to this value.'
        workers:
          type: array
          items:
            $ref: '#/components/schemas/WorkerDetails'
          description: Workers that have done work on the stage.
      id: StageExecutionDetails
      type: object
    WorkerMessageCode:
      type: object
      properties:
        code:
          type: string
          description: 'The code is a string intended for consumption by a machine that identifies the type of message being sent. Examples: 1. "HARNESS_STARTED" might be used to indicate the worker harness has started. 2. "GCS_DOWNLOAD_ERROR" might be used to indicate an error downloading a Cloud Storage file as part of the boot process of one of the worker containers. This is a string and not an enum to make it easy to add new codes without waiting for an API change.'
        parameters:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
          description: 'Parameters contains specific information about the code. This is a struct to allow parameters of different types. Examples: 1. For a "HARNESS_STARTED" message parameters might provide the name of the worker and additional data like timing information. 2. For a "GCS_DOWNLOAD_ERROR" parameters might contain fields listing the Cloud Storage objects being downloaded and fields containing errors. In general complex data structures should be avoided. If a worker needs to send a specific and complicated data structure then please consider defining a new proto and adding it to the data oneof in WorkerMessageResponse. Conventions: Parameters should only be used for information that isn''t typically passed as a label. hostname and other worker identifiers should almost always be passed as labels since they will be included on most messages.'
      id: WorkerMessageCode
      description: 'A message code is used to report status and error messages to the service. The message codes are intended to be machine readable. The service will take care of translating these into user understandable messages if necessary. Example use cases: 1. Worker processes reporting successful startup. 2. Worker processes reporting specific errors (e.g. package staging failure).'
    SeqMapTask:
      id: SeqMapTask
      properties:
        systemName:
          type: string
          description: System-defined name of the SeqDo operation. Unique across the workflow.
        userFn:
          description: The user function to invoke.
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
        name:
          type: string
          description: The user-provided name of the SeqDo operation.
        stageName:
          description: System-defined name of the stage containing the SeqDo operation. Unique across the workflow.
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/SideInputInfo'
          type: array
          description: Information about each of the inputs.
        outputInfos:
          items:
            $ref: '#/components/schemas/SeqMapTaskOutputInfo'
          type: array
          description: Information about each of the outputs.
      description: Describes a particular function to invoke.
      type: object
    PubSubIODetails:
      type: object
      description: Metadata for a Pub/Sub connector used by the job.
      properties:
        subscription:
          type: string
          description: Subscription used in the connection.
        topic:
          description: Topic accessed in the connection.
          type: string
      id: PubSubIODetails
    WorkerDetails:
      type: object
      description: Information about a worker
      properties:
        workerName:
          description: Name of this worker
          type: string
        workItems:
          items:
            $ref: '#/components/schemas/WorkItemDetails'
          type: array
          description: 'Work items processed by this worker, sorted by time.'
      id: WorkerDetails
    CounterMetadata:
      description: CounterMetadata includes all static non-name non-value counter attributes.
      properties:
        kind:
          enumDescriptions:
            - Counter aggregation kind was not set.
            - Aggregated value is the sum of all contributed values.
            - Aggregated value is the max of all contributed values.
            - Aggregated value is the min of all contributed values.
            - Aggregated value is the mean of all contributed values.
            - Aggregated value represents the logical 'or' of all contributed values.
            - Aggregated value represents the logical 'and' of all contributed values.
            - Aggregated value is a set of unique contributed values.
            - Aggregated value captures statistics about a distribution.
            - Aggregated value tracks the latest value of a variable.
          enum:
            - INVALID
            - SUM
            - MAX
            - MIN
            - MEAN
            - OR
            - AND
            - SET
            - DISTRIBUTION
            - LATEST_VALUE
          description: Counter aggregation kind.
          type: string
        otherUnits:
          type: string
          description: A string referring to the unit type.
        description:
          description: Human-readable description of the counter semantics.
          type: string
        standardUnits:
          enumDescriptions:
            - Counter returns a value in bytes.
            - Counter returns a value in bytes per second.
            - Counter returns a value in milliseconds.
            - Counter returns a value in microseconds.
            - Counter returns a value in nanoseconds.
            - Counter returns a timestamp in milliseconds.
            - Counter returns a timestamp in microseconds.
            - Counter returns a timestamp in nanoseconds.
          description: 'System defined Units, see above enum.'
          enum:
            - BYTES
            - BYTES_PER_SEC
            - MILLISECONDS
            - MICROSECONDS
            - NANOSECONDS
            - TIMESTAMP_MSEC
            - TIMESTAMP_USEC
            - TIMESTAMP_NSEC
          type: string
      id: CounterMetadata
      type: object
    SendDebugCaptureRequest:
      type: object
      properties:
        workerId:
          type: string
          description: 'The worker id, i.e., VM hostname.'
        location:
          type: string
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.'
        data:
          type: string
          description: The encoded debug information.
        componentId:
          type: string
          description: The internal component id for which debug information is sent.
        dataFormat:
          enumDescriptions:
            - 'Format unspecified, parsing is determined based upon page type and legacy encoding. (go/protodosdonts#do-include-an-unspecified-value-in-an-enum)'
            - Raw HTML string.
            - JSON-encoded string.
            - Websafe encoded zlib-compressed string.
            - Websafe encoded brotli-compressed string.
          type: string
          enum:
            - DATA_FORMAT_UNSPECIFIED
            - RAW
            - JSON
            - ZLIB
            - BROTLI
          description: Format for the data field above (id=5).
      description: 'Request to send encoded debug information. Next ID: 8'
      id: SendDebugCaptureRequest
    GetDebugConfigResponse:
      description: Response to a get debug configuration request.
      properties:
        config:
          type: string
          description: The encoded debug configuration for the requested component.
      id: GetDebugConfigResponse
      type: object
    Point:
      type: object
      id: Point
      properties:
        time:
          type: string
          format: google-datetime
          description: The timestamp of the point.
        value:
          type: number
          description: The value of the point.
          format: double
      description: A point in the timeseries.
    SdkVersion:
      type: object
      id: SdkVersion
      properties:
        versionDisplayName:
          description: A readable string describing the version of the SDK.
          type: string
        sdkSupportStatus:
          enumDescriptions:
            - Cloud Dataflow is unaware of this version.
            - 'This is a known version of an SDK, and is supported.'
            - 'A newer version of the SDK family exists, and an update is recommended.'
            - This version of the SDK is deprecated and will eventually be unsupported.
            - Support for this SDK version has ended and it should no longer be used.
          type: string
          description: The support status for this SDK version.
          enum:
            - UNKNOWN
            - SUPPORTED
            - STALE
            - DEPRECATED
            - UNSUPPORTED
        bugs:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SdkBug'
          description: Output only. Known bugs found in this SDK version.
        version:
          description: The version of the SDK used to run the job.
          type: string
      description: The version of the SDK used to run the job.
    Histogram:
      description: 'Histogram of value counts for a distribution. Buckets have an inclusive lower bound and exclusive upper bound and use "1,2,5 bucketing": The first bucket range is from [0,1) and all subsequent bucket boundaries are powers of ten multiplied by 1, 2, or 5. Thus, bucket boundaries are 0, 1, 2, 5, 10, 20, 50, 100, 200, 500, 1000, ... Negative values are not supported.'
      properties:
        firstBucketOffset:
          type: integer
          description: 'Starting index of first stored bucket. The non-inclusive upper-bound of the ith bucket is given by: pow(10,(i-first_bucket_offset)/3) * (1,2,5)[(i-first_bucket_offset)%3]'
          format: int32
        bucketCounts:
          items:
            type: string
            format: int64
          type: array
          description: 'Counts of values in each bucket. For efficiency, prefix and trailing buckets with count = 0 are elided. Buckets can store the full range of values of an unsigned long, with ULLONG_MAX falling into the 59th bucket with range [1e19, 2e19).'
      id: Histogram
      type: object
    JobExecutionStageInfo:
      type: object
      description: Contains information about how a particular google.dataflow.v1beta3.Step will be executed.
      properties:
        stepName:
          description: 'The steps associated with the execution stage. Note that stages may have several steps, and that a given step might be run by more than one stage.'
          type: array
          items:
            type: string
      id: JobExecutionStageInfo
    SourceGetMetadataRequest:
      properties:
        source:
          $ref: '#/components/schemas/Source'
          description: Specification of the source whose metadata should be computed.
      type: object
      description: A request to compute the SourceMetadata of a Source.
      id: SourceGetMetadataRequest
    SdkBug:
      properties:
        uri:
          description: Output only. Link to more information on the bug.
          readOnly: true
          type: string
        type:
          enumDescriptions:
            - Unknown issue with this SDK.
            - Catch-all for SDK bugs that don't fit in the below categories.
            - Using this version of the SDK may result in degraded performance.
            - Using this version of the SDK may cause data loss.
          enum:
            - TYPE_UNSPECIFIED
            - GENERAL
            - PERFORMANCE
            - DATALOSS
          type: string
          readOnly: true
          description: Output only. Describes the impact of this SDK bug.
        severity:
          enumDescriptions:
            - A bug of unknown severity.
            - A minor bug that that may reduce reliability or performance for some jobs. Impact will be minimal or non-existent for most jobs.
            - 'A bug that has some likelihood of causing performance degradation, data loss, or job failures.'
            - 'A bug with extremely significant impact. Jobs may fail erroneously, performance may be severely degraded, and data loss may be very likely.'
          readOnly: true
          type: string
          enum:
            - SEVERITY_UNSPECIFIED
            - NOTICE
            - WARNING
            - SEVERE
          description: Output only. How severe the SDK bug is.
      id: SdkBug
      description: A bug found in the Dataflow SDK.
      type: object
    SendDebugCaptureResponse:
      type: object
      properties: {}
      id: SendDebugCaptureResponse
      description: Response to a send capture request. nothing
    DatastoreIODetails:
      description: Metadata for a Datastore connector used by the job.
      properties:
        projectId:
          description: ProjectId accessed in the connection.
          type: string
        namespace:
          description: Namespace used in the connection.
          type: string
      id: DatastoreIODetails
      type: object
    WorkItemServiceState:
      properties:
        leaseExpireTime:
          format: google-datetime
          type: string
          description: Time at which the current lease will expire.
        hotKeyDetection:
          $ref: '#/components/schemas/HotKeyDetection'
          description: 'A hot key is a symptom of poor data distribution in which there are enough elements mapped to a single key to impact pipeline performance. When present, this field includes metadata associated with any hot key.'
        metricShortId:
          items:
            $ref: '#/components/schemas/MetricShortId'
          type: array
          description: 'The short ids that workers should use in subsequent metric updates. Workers should strive to use short ids whenever possible, but it is ok to request the short_id again if a worker lost track of it (e.g. if the worker is recovering from a crash). NOTE: it is possible that the response may have short ids for a subset of the metrics.'
        reportStatusInterval:
          format: google-duration
          description: New recommended reporting interval.
          type: string
        splitRequest:
          $ref: '#/components/schemas/ApproximateSplitRequest'
          description: The progress point in the WorkItem where the Dataflow service suggests that the worker truncate the task.
        nextReportIndex:
          format: int64
          description: 'The index value to use for the next report sent by the worker. Note: If the report call fails for whatever reason, the worker should reuse this index for subsequent report attempts.'
          type: string
        harnessData:
          additionalProperties:
            description: Properties of the object.
            type: any
          description: 'Other data returned by the service, specific to the particular worker harness.'
          type: object
        suggestedStopPoint:
          $ref: '#/components/schemas/ApproximateProgress'
          description: DEPRECATED in favor of split_request.
          deprecated: true
        suggestedStopPosition:
          description: 'Obsolete, always empty.'
          deprecated: true
          $ref: '#/components/schemas/Position'
        completeWorkStatus:
          $ref: '#/components/schemas/Status'
          description: 'If set, a request to complete the work item with the given status. This will not be set to OK, unless supported by the specific kind of WorkItem. It can be used for the backend to indicate a WorkItem must terminate, e.g., for aborting work.'
      description: The Dataflow service's idea of the current state of a WorkItem being processed by a worker.
      id: WorkItemServiceState
      type: object
    GetTemplateResponse:
      properties:
        metadata:
          description: 'The template metadata describing the template name, available parameters, etc.'
          $ref: '#/components/schemas/TemplateMetadata'
        templateType:
          type: string
          description: Template Type.
          enum:
            - UNKNOWN
            - LEGACY
            - FLEX
          enumDescriptions:
            - Unknown Template Type.
            - Legacy Template.
            - Flex Template.
        runtimeMetadata:
          $ref: '#/components/schemas/RuntimeMetadata'
          description: Describes the runtime metadata with SDKInfo and available parameters.
        status:
          $ref: '#/components/schemas/Status'
          description: The status of the get template request. Any problems with the request will be indicated in the error_details.
      description: The response to a GetTemplate request.
      type: object
      id: GetTemplateResponse
    WorkerThreadScalingReportResponse:
      type: object
      id: WorkerThreadScalingReportResponse
      description: Contains the thread scaling recommendation for a worker from the backend.
      properties:
        recommendedThreadCount:
          description: Recommended number of threads for a worker.
          format: int32
          type: integer
    JobMessage:
      description: A particular message pertaining to a Dataflow job.
      type: object
      id: JobMessage
      properties:
        time:
          format: google-datetime
          description: The timestamp of the message.
          type: string
        id:
          type: string
          description: Deprecated.
        messageImportance:
          type: string
          enum:
            - JOB_MESSAGE_IMPORTANCE_UNKNOWN
            - JOB_MESSAGE_DEBUG
            - JOB_MESSAGE_DETAILED
            - JOB_MESSAGE_BASIC
            - JOB_MESSAGE_WARNING
            - JOB_MESSAGE_ERROR
          description: Importance level of the message.
          enumDescriptions:
            - 'The message importance isn''t specified, or is unknown.'
            - 'The message is at the ''debug'' level: typically only useful for software engineers working on the code the job is running. Typically, Dataflow pipeline runners do not display log messages at this level by default.'
            - 'The message is at the ''detailed'' level: somewhat verbose, but potentially useful to users. Typically, Dataflow pipeline runners do not display log messages at this level by default. These messages are displayed by default in the Dataflow monitoring UI.'
            - 'The message is at the ''basic'' level: useful for keeping track of the execution of a Dataflow pipeline. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI.'
            - 'The message is at the ''warning'' level: indicating a condition pertaining to a job which may require human intervention. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI.'
            - 'The message is at the ''error'' level: indicating a condition preventing a job from succeeding. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI.'
        messageText:
          type: string
          description: The text of the message.
    SourceFork:
      id: SourceFork
      type: object
      properties:
        residualSource:
          $ref: '#/components/schemas/DerivedSource'
          description: DEPRECATED
        residual:
          description: DEPRECATED
          $ref: '#/components/schemas/SourceSplitShard'
        primary:
          description: DEPRECATED
          $ref: '#/components/schemas/SourceSplitShard'
        primarySource:
          description: DEPRECATED
          $ref: '#/components/schemas/DerivedSource'
      description: DEPRECATED in favor of DynamicSourceSplit.
    MetricStructuredName:
      description: 'Identifies a metric, by describing the source which generated the metric.'
      properties:
        origin:
          description: Origin (namespace) of metric name. May be blank for user-define metrics; will be "dataflow" for metrics defined by the Dataflow service or SDK.
          type: string
        context:
          type: object
          additionalProperties:
            type: string
          description: 'Zero or more labeled fields which identify the part of the job this metric is associated with, such as the name of a step or collection. For example, built-in counters associated with steps will have context[''step''] = . Counters associated with PCollections in the SDK will have context[''pcollection''] = .'
        name:
          description: Worker-defined metric name.
          type: string
      id: MetricStructuredName
      type: object
    ParallelInstruction:
      description: Describes a particular operation comprising a MapTask.
      properties:
        write:
          description: Additional information for Write instructions.
          $ref: '#/components/schemas/WriteInstruction'
        originalName:
          type: string
          description: System-defined name for the operation in the original workflow graph.
        partialGroupByKey:
          description: Additional information for PartialGroupByKey instructions.
          $ref: '#/components/schemas/PartialGroupByKeyInstruction'
        parDo:
          $ref: '#/components/schemas/ParDoInstruction'
          description: Additional information for ParDo instructions.
        read:
          $ref: '#/components/schemas/ReadInstruction'
          description: Additional information for Read instructions.
        name:
          type: string
          description: User-provided name of this operation.
        outputs:
          description: Describes the outputs of the instruction.
          items:
            $ref: '#/components/schemas/InstructionOutput'
          type: array
        systemName:
          type: string
          description: System-defined name of this operation. Unique across the workflow.
        flatten:
          $ref: '#/components/schemas/FlattenInstruction'
          description: Additional information for Flatten instructions.
      id: ParallelInstruction
      type: object
    StageSource:
      id: StageSource
      properties:
        name:
          description: Dataflow service generated name for this source.
          type: string
        sizeBytes:
          type: string
          description: 'Size of the source, if measurable.'
          format: int64
        userName:
          type: string
          description: Human-readable name for this source; may be user or system generated.
        originalTransformOrCollection:
          type: string
          description: User name for the original user transform or collection with which this source is most closely associated.
      type: object
      description: Description of an input or output of an execution stage.
    DataDiskAssignment:
      description: Data disk assignment for a given VM instance.
      type: object
      id: DataDiskAssignment
      properties:
        dataDisks:
          description: 'Mounted data disks. The order is important a data disk''s 0-based index in this list defines which persistent directory the disk is mounted to, for example the list of { "myproject-1014-104817-4c2-harness-0-disk-0" }, { "myproject-1014-104817-4c2-harness-0-disk-1" }.'
          items:
            type: string
          type: array
        vmInstance:
          description: 'VM instance name the data disks mounted to, for example "myproject-1014-104817-4c2-harness-0".'
          type: string
    MountedDataDisk:
      id: MountedDataDisk
      description: Describes mounted data disk.
      type: object
      properties:
        dataDisk:
          type: string
          description: 'The name of the data disk. This name is local to the Google Cloud Platform project and uniquely identifies the disk within that project, for example "myproject-1014-104817-4c2-harness-0-disk-1".'
    SendWorkerMessagesRequest:
      description: A request for sending worker messages to the service.
      type: object
      id: SendWorkerMessagesRequest
      properties:
        location:
          type: string
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job.'
        workerMessages:
          items:
            $ref: '#/components/schemas/WorkerMessage'
          type: array
          description: The WorkerMessages to send.
    ResourceUtilizationReport:
      id: ResourceUtilizationReport
      properties:
        memoryInfo:
          items:
            $ref: '#/components/schemas/MemInfo'
          description: Memory utilization samples.
          type: array
        containers:
          type: object
          description: 'Per container information. Key: container name.'
          additionalProperties:
            $ref: '#/components/schemas/ResourceUtilizationReport'
        cpuTime:
          items:
            $ref: '#/components/schemas/CPUTime'
          description: CPU utilization samples.
          type: array
      description: 'Worker metrics exported from workers. This contains resource utilization metrics accumulated from a variety of sources. For more information, see go/df-resource-signals.'
      type: object
    ComponentTransform:
      description: Description of a transform executed as part of an execution stage.
      type: object
      properties:
        name:
          description: Dataflow service generated name for this source.
          type: string
        originalTransform:
          type: string
          description: User name for the original user transform with which this transform is most closely associated.
        userName:
          type: string
          description: Human-readable name for this transform; may be user or system generated.
      id: ComponentTransform
    RuntimeUpdatableParams:
      type: object
      properties:
        maxNumWorkers:
          type: integer
          format: int32
          description: The maximum number of workers to cap autoscaling at. This field is currently only supported for Streaming Engine jobs.
        minNumWorkers:
          type: integer
          format: int32
          description: The minimum number of workers to scale down to. This field is currently only supported for Streaming Engine jobs.
      description: Additional job parameters that can only be updated during runtime using the projects.jobs.update method. These fields have no effect when specified during job creation.
      id: RuntimeUpdatableParams
    DistributionUpdate:
      description: A metric value representing a distribution.
      id: DistributionUpdate
      properties:
        count:
          $ref: '#/components/schemas/SplitInt64'
          description: The count of the number of elements present in the distribution.
        sumOfSquares:
          format: double
          description: Use a double since the sum of squares is likely to overflow int64.
          type: number
        histogram:
          $ref: '#/components/schemas/Histogram'
          description: (Optional) Histogram of value counts for the distribution.
        max:
          description: The maximum value present in the distribution.
          $ref: '#/components/schemas/SplitInt64'
        min:
          description: The minimum value present in the distribution.
          $ref: '#/components/schemas/SplitInt64'
        sum:
          $ref: '#/components/schemas/SplitInt64'
          description: Use an int64 since we'd prefer the added precision. If overflow is a common problem we can detect it and use an additional int64 or a double.
      type: object
    ListJobMessagesResponse:
      properties:
        nextPageToken:
          description: The token to obtain the next page of results if there are more.
          type: string
        autoscalingEvents:
          type: array
          description: Autoscaling events in ascending timestamp order.
          items:
            $ref: '#/components/schemas/AutoscalingEvent'
        jobMessages:
          type: array
          items:
            $ref: '#/components/schemas/JobMessage'
          description: Messages in ascending timestamp order.
      id: ListJobMessagesResponse
      type: object
      description: Response to a request to list job messages.
    ExecutionStageState:
      properties:
        executionStageState:
          enum:
            - JOB_STATE_UNKNOWN
            - JOB_STATE_STOPPED
            - JOB_STATE_RUNNING
            - JOB_STATE_DONE
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLED
            - JOB_STATE_UPDATED
            - JOB_STATE_DRAINING
            - JOB_STATE_DRAINED
            - JOB_STATE_PENDING
            - JOB_STATE_CANCELLING
            - JOB_STATE_QUEUED
            - JOB_STATE_RESOURCE_CLEANING_UP
          description: Executions stage states allow the same set of values as JobState.
          enumDescriptions:
            - The job's run state isn't specified.
            - '`JOB_STATE_STOPPED` indicates that the job has not yet started to run.'
            - '`JOB_STATE_RUNNING` indicates that the job is currently running.'
            - '`JOB_STATE_DONE` indicates that the job has successfully completed. This is a terminal job state. This state may be set by the Cloud Dataflow service, as a transition from `JOB_STATE_RUNNING`. It may also be set via a Cloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal state.'
            - '`JOB_STATE_FAILED` indicates that the job has failed. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.'
            - '`JOB_STATE_CANCELLED` indicates that the job has been explicitly cancelled. This is a terminal job state. This state may only be set via a Cloud Dataflow `UpdateJob` call, and only if the job has not yet reached another terminal state.'
            - '`JOB_STATE_UPDATED` indicates that the job was successfully updated, meaning that this job was stopped and another job was started, inheriting state from this one. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.'
            - '`JOB_STATE_DRAINING` indicates that the job is in the process of draining. A draining job has stopped pulling from its input sources and is processing any data that remains in-flight. This state may be set via a Cloud Dataflow `UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs that are draining may only transition to `JOB_STATE_DRAINED`, `JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_DRAINED` indicates that the job has been drained. A drained job terminated by stopping pulling from its input sources and processing any data that remained in-flight when draining was requested. This state is a terminal state, may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_DRAINING`.'
            - '`JOB_STATE_PENDING` indicates that the job has been created but is not yet running. Jobs that are pending may only transition to `JOB_STATE_RUNNING`, or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled and is in the process of stopping. Jobs that are cancelling may only transition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.'
            - '`JOB_STATE_QUEUED` indicates that the job has been created but is being delayed until launch. Jobs that are queued may only transition to `JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`.'
            - '`JOB_STATE_RESOURCE_CLEANING_UP` indicates that the batch job''s associated resources are currently being cleaned up after a successful run. Currently, this is an opt-in feature, please reach out to Cloud support team if you are interested.'
          type: string
        currentStateTime:
          type: string
          description: The time at which the stage transitioned to this state.
          format: google-datetime
        executionStageName:
          type: string
          description: The name of the execution stage.
      type: object
      id: ExecutionStageState
      description: A message describing the state of a particular execution stage.
    LaunchTemplateParameters:
      id: LaunchTemplateParameters
      type: object
      properties:
        transformNameMapping:
          description: Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/RuntimeEnvironment'
          description: The runtime environment for the job.
        parameters:
          description: The runtime parameters to pass to the job.
          type: object
          additionalProperties:
            type: string
        update:
          description: 'If set, replace the existing pipeline with the name specified by jobName with this pipeline, preserving state.'
          type: boolean
        jobName:
          description: 'Required. The job name to use for the created job. The name must match the regular expression `[a-z]([-a-z0-9]{0,1022}[a-z0-9])?`'
          type: string
      description: 'Parameters to provide to the template being launched. Note that the [metadata in the pipeline code] (https://cloud.google.com/dataflow/docs/guides/templates/creating-templates#metadata) determines which runtime parameters are valid.'
    ProgressTimeseries:
      description: Information about the progress of some component of job execution.
      type: object
      properties:
        dataPoints:
          type: array
          description: History of progress for the component. Points are sorted by time.
          items:
            $ref: '#/components/schemas/Point'
        currentProgress:
          format: double
          description: 'The current progress of the component, in the range [0,1].'
          type: number
      id: ProgressTimeseries
    DebugOptions:
      type: object
      description: Describes any options that have an effect on the debugging of pipelines.
      id: DebugOptions
      properties:
        dataSampling:
          $ref: '#/components/schemas/DataSamplingConfig'
          description: Configuration options for sampling elements from a running pipeline.
        enableHotKeyLogging:
          description: 'When true, enables the logging of the literal hot key to the user''s Cloud Logging.'
          type: boolean
    TaskRunnerSettings:
      properties:
        alsologtostderr:
          type: boolean
          description: Whether to also send taskrunner log info to stderr.
        taskUser:
          type: string
          description: The UNIX user ID on the worker VM to use for tasks launched by taskrunner; e.g. "root".
        streamingWorkerMainClass:
          type: string
          description: The streaming worker main class name.
        commandlinesFileName:
          type: string
          description: The file to store preprocessing commands in.
        logToSerialconsole:
          description: Whether to send taskrunner log info to Google Compute Engine VM serial console.
          type: boolean
        continueOnException:
          description: Whether to continue taskrunner if an exception is hit.
          type: boolean
        oauthScopes:
          type: array
          items:
            type: string
          description: The OAuth2 scopes to be requested by the taskrunner in order to access the Cloud Dataflow API.
        logDir:
          description: The directory on the VM to store logs.
          type: string
        harnessCommand:
          type: string
          description: The command to launch the worker harness.
        workflowFileName:
          description: The file to store the workflow in.
          type: string
        baseTaskDir:
          type: string
          description: The location on the worker for task-specific subdirectories.
        dataflowApiVersion:
          description: 'The API version of endpoint, e.g. "v1b3"'
          type: string
        parallelWorkerSettings:
          $ref: '#/components/schemas/WorkerSettings'
          description: The settings to pass to the parallel worker harness.
        languageHint:
          type: string
          description: The suggested backend language.
        baseUrl:
          description: 'The base URL for the taskrunner to use when accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, "Relative Uniform Resource Locators". If not specified, the default value is "http://www.googleapis.com/"'
          type: string
        taskGroup:
          description: The UNIX group ID on the worker VM to use for tasks launched by taskrunner; e.g. "wheel".
          type: string
        vmId:
          description: The ID string of the VM.
          type: string
        logUploadLocation:
          type: string
          description: 'Indicates where to put logs. If this is not specified, the logs will not be uploaded. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}'
        tempStoragePrefix:
          type: string
          description: 'The prefix of the resources the taskrunner should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}'
      id: TaskRunnerSettings
      description: Taskrunner configuration settings.
      type: object
    FileIODetails:
      id: FileIODetails
      properties:
        filePattern:
          description: File Pattern used to access files by the connector.
          type: string
      description: Metadata for a File connector used by the job.
      type: object
    RuntimeEnvironment:
      description: The environment values to set at runtime.
      id: RuntimeEnvironment
      type: object
      properties:
        bypassTempDirValidation:
          type: boolean
          description: Optional. Whether to bypass the safety checks for the job's temporary directory. Use with caution.
        ipConfiguration:
          enumDescriptions:
            - 'The configuration is unknown, or unspecified.'
            - Workers should have public IP addresses.
            - Workers should have private IP addresses.
          description: Optional. Configuration for VM IPs.
          enum:
            - WORKER_IP_UNSPECIFIED
            - WORKER_IP_PUBLIC
            - WORKER_IP_PRIVATE
          type: string
        workerZone:
          description: 'Optional. The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane''s region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.'
          type: string
        additionalExperiments:
          description: 'Optional. Additional experiment flags for the job, specified with the `--experiments` option.'
          type: array
          items:
            type: string
        maxWorkers:
          type: integer
          description: 'Optional. The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000. The default value is 1.'
          format: int32
        subnetwork:
          type: string
          description: 'Optional. Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form "https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK" or "regions/REGION/subnetworks/SUBNETWORK". If the subnetwork is located in a Shared VPC network, you must use the complete URL.'
        additionalUserLabels:
          type: object
          description: 'Optional. Additional user labels to be specified for the job. Keys and values should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1kg", "count": "3" }.'
          additionalProperties:
            type: string
        enableStreamingEngine:
          description: Optional. Whether to enable Streaming Engine for the job.
          type: boolean
        numWorkers:
          description: Optional. The initial number of Google Compute Engine instances for the job. The default value is 11.
          type: integer
          format: int32
        workerRegion:
          type: string
          description: 'Required. The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane''s region.'
        kmsKeyName:
          description: 'Optional. Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/'
          type: string
        network:
          description: 'Optional. Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".'
          type: string
        machineType:
          type: string
          description: Optional. The machine type to use for the job. Defaults to the value from the template if not specified.
        diskSizeGb:
          format: int32
          description: 'Optional. The disk size, in gigabytes, to use on each remote Compute Engine worker instance.'
          type: integer
        zone:
          type: string
          description: 'Optional. The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.'
        tempLocation:
          type: string
          description: 'Required. The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.'
        serviceAccountEmail:
          type: string
          description: Optional. The email address of the service account to run the job as.
    SplitInt64:
      description: 'A representation of an int64, n, that is immune to precision loss when encoded in JSON.'
      type: object
      properties:
        highBits:
          description: 'The high order bits, including the sign: n >> 32.'
          type: integer
          format: int32
        lowBits:
          type: integer
          format: uint32
          description: 'The low order bits: n & 0xffffffff.'
      id: SplitInt64
    WorkerSettings:
      description: Provides data to pass through to the worker harness.
      properties:
        servicePath:
          description: 'The Cloud Dataflow service path relative to the root URL, for example, "dataflow/v1b3/projects".'
          type: string
        workerId:
          type: string
          description: The ID of the worker running this pipeline.
        tempStoragePrefix:
          description: 'The prefix of the resources the system should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}'
          type: string
        baseUrl:
          description: 'The base URL for accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, "Relative Uniform Resource Locators". If not specified, the default value is "http://www.googleapis.com/"'
          type: string
        reportingEnabled:
          type: boolean
          description: Whether to send work progress updates to the service.
        shuffleServicePath:
          type: string
          description: 'The Shuffle service path relative to the root URL, for example, "shuffle/v1beta1".'
      type: object
      id: WorkerSettings
    FloatingPointList:
      properties:
        elements:
          items:
            format: double
            type: number
          type: array
          description: Elements of the list.
      id: FloatingPointList
      type: object
      description: A metric value representing a list of floating point numbers.
    JobMetadata:
      type: object
      id: JobMetadata
      properties:
        datastoreDetails:
          items:
            $ref: '#/components/schemas/DatastoreIODetails'
          description: Identification of a Datastore source used in the Dataflow job.
          type: array
        fileDetails:
          items:
            $ref: '#/components/schemas/FileIODetails'
          description: Identification of a File source used in the Dataflow job.
          type: array
        sdkVersion:
          description: The SDK version used to run the job.
          $ref: '#/components/schemas/SdkVersion'
        pubsubDetails:
          description: Identification of a Pub/Sub source used in the Dataflow job.
          items:
            $ref: '#/components/schemas/PubSubIODetails'
          type: array
        bigTableDetails:
          items:
            $ref: '#/components/schemas/BigTableIODetails'
          type: array
          description: Identification of a Cloud Bigtable source used in the Dataflow job.
        userDisplayProperties:
          type: object
          description: List of display properties to help UI filter jobs.
          additionalProperties:
            type: string
        spannerDetails:
          description: Identification of a Spanner source used in the Dataflow job.
          type: array
          items:
            $ref: '#/components/schemas/SpannerIODetails'
        bigqueryDetails:
          type: array
          items:
            $ref: '#/components/schemas/BigQueryIODetails'
          description: Identification of a BigQuery source used in the Dataflow job.
      description: Metadata available primarily for filtering jobs. Will be included in the ListJob response and Job SUMMARY view.
    StageSummary:
      id: StageSummary
      type: object
      properties:
        stragglerSummary:
          description: Straggler summary for this stage.
          $ref: '#/components/schemas/StragglerSummary'
        startTime:
          description: Start time of this stage.
          format: google-datetime
          type: string
        progress:
          $ref: '#/components/schemas/ProgressTimeseries'
          description: Progress for this stage. Only applicable to Batch jobs.
        state:
          enumDescriptions:
            - The component state is unknown or unspecified.
            - The component is not yet running.
            - The component is currently running.
            - The component succeeded.
            - The component failed.
            - Execution of the component was cancelled.
          description: State of this stage.
          enum:
            - EXECUTION_STATE_UNKNOWN
            - EXECUTION_STATE_NOT_STARTED
            - EXECUTION_STATE_RUNNING
            - EXECUTION_STATE_SUCCEEDED
            - EXECUTION_STATE_FAILED
            - EXECUTION_STATE_CANCELLED
          type: string
        metrics:
          description: Metrics for this stage.
          items:
            $ref: '#/components/schemas/MetricUpdate'
          type: array
        stageId:
          type: string
          description: ID of this stage
        endTime:
          type: string
          description: 'End time of this stage. If the work item is completed, this is the actual end time of the stage. Otherwise, it is the predicted end time.'
          format: google-datetime
      description: Information about a particular execution stage of a job.
    ListSnapshotsResponse:
      id: ListSnapshotsResponse
      properties:
        snapshots:
          description: Returned snapshots.
          type: array
          items:
            $ref: '#/components/schemas/Snapshot'
      type: object
      description: List of snapshots.
    StreamingComputationConfig:
      type: object
      id: StreamingComputationConfig
      properties:
        systemName:
          type: string
          description: System defined name for this computation.
        computationId:
          description: Unique identifier for this computation.
          type: string
        transformUserNameToStateFamily:
          description: Map from user name of stateful transforms in this stage to their state family.
          additionalProperties:
            type: string
          type: object
        stageName:
          description: Stage name of this computation.
          type: string
        instructions:
          description: Instructions that comprise the computation.
          items:
            $ref: '#/components/schemas/ParallelInstruction'
          type: array
      description: Configuration information for a single streaming computation.
    CounterStructuredName:
      type: object
      description: Identifies a counter within a per-job namespace. Counters whose structured names are the same get merged into a single value for the job.
      properties:
        executionStepName:
          type: string
          description: Name of the stage. An execution step contains multiple component steps.
        originalRequestingStepName:
          type: string
          description: 'The step name requesting an operation, such as GBK. I.e. the ParDo causing a read/write from shuffle to occur, or a read from side inputs.'
        name:
          description: 'Counter name. Not necessarily globally-unique, but unique within the context of the other fields. Required.'
          type: string
        componentStepName:
          type: string
          description: Name of the optimized step being executed by the workers.
        portion:
          description: 'Portion of this counter, either key or value.'
          enum:
            - ALL
            - KEY
            - VALUE
          enumDescriptions:
            - Counter portion has not been set.
            - Counter reports a key.
            - Counter reports a value.
          type: string
        inputIndex:
          type: integer
          description: 'Index of an input collection that''s being read from/written to as a side input. The index identifies a step''s side inputs starting by 1 (e.g. the first side input has input_index 1, the third has input_index 3). Side inputs are identified by a pair of (original_step_name, input_index). This field helps uniquely identify them.'
          format: int32
        originalStepName:
          description: 'System generated name of the original step in the user''s graph, before optimization.'
          type: string
        origin:
          enumDescriptions:
            - Counter was created by the Dataflow system.
            - Counter was created by the user.
          description: One of the standard Origins defined above.
          enum:
            - SYSTEM
            - USER
          type: string
        originNamespace:
          type: string
          description: A string containing a more specific namespace of the counter's origin.
        workerId:
          type: string
          description: ID of a particular worker.
      id: CounterStructuredName
    ContainerSpec:
      properties:
        imageRepositoryPasswordSecretId:
          description: Secret Manager secret id for password to authenticate to private registry.
          type: string
        metadata:
          $ref: '#/components/schemas/TemplateMetadata'
          description: Metadata describing a template including description and validation rules.
        imageRepositoryUsernameSecretId:
          type: string
          description: Secret Manager secret id for username to authenticate to private registry.
        imageRepositoryCertPath:
          type: string
          description: Cloud Storage path to self-signed certificate of private registry.
        image:
          type: string
          description: 'Name of the docker container image. E.g., gcr.io/project/some-image'
        defaultEnvironment:
          description: Default runtime environment for the job.
          $ref: '#/components/schemas/FlexTemplateRuntimeEnvironment'
        sdkInfo:
          description: Required. SDK info of the Flex Template.
          $ref: '#/components/schemas/SDKInfo'
      type: object
      description: Container Spec.
      id: ContainerSpec
    SourceSplitOptions:
      type: object
      description: Hints for splitting a Source into bundles (parts for parallel processing) using SourceSplitRequest.
      properties:
        desiredBundleSizeBytes:
          type: string
          format: int64
          description: The source should be split into a set of bundles where the estimated size of each is approximately this many bytes.
        desiredShardSizeBytes:
          type: string
          format: int64
          description: DEPRECATED in favor of desired_bundle_size_bytes.
          deprecated: true
      id: SourceSplitOptions
  parameters:
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
  x-stackQL-resources:
    templates:
      id: google.dataflow.templates
      name: templates
      title: Templates
      methods:
        projects_templates_launch:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1templates:launch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_templates_create:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1templates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_templates_get:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1templates:get/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_templates_create:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1templates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_templates_launch:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1templates:launch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_templates_get:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1templates:get/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/templates/methods/projects_templates_get'
          - $ref: '#/components/x-stackQL-resources/templates/methods/projects_locations_templates_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/templates/methods/projects_templates_create'
          - $ref: '#/components/x-stackQL-resources/templates/methods/projects_locations_templates_create'
        update: []
        delete: []
    jobs:
      id: google.dataflow.jobs
      name: jobs
      title: Jobs
      methods:
        projects_jobs_create:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobs
        _projects_jobs_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_get:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_update:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_snapshot:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}:snapshot/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_aggregated:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs:aggregated/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_get:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_update:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobs
        _projects_locations_jobs_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_create:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_snapshot:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}:snapshot/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_jobs_list'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_jobs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_jobs_create'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_jobs_create'
        update: []
        delete: []
    jobs_metrics:
      id: google.dataflow.jobs_metrics
      name: jobs_metrics
      title: Jobs Metrics
      methods:
        projects_jobs_get_metrics:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1metrics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_get_metrics:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1metrics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs_metrics/methods/projects_jobs_get_metrics'
          - $ref: '#/components/x-stackQL-resources/jobs_metrics/methods/projects_locations_jobs_get_metrics'
        insert: []
        update: []
        delete: []
    messages:
      id: google.dataflow.messages
      name: messages
      title: Messages
      methods:
        projects_jobs_messages_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1messages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobMessages
        _projects_jobs_messages_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1messages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_messages_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1messages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobMessages
        _projects_locations_jobs_messages_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1messages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/messages/methods/projects_jobs_messages_list'
          - $ref: '#/components/x-stackQL-resources/messages/methods/projects_locations_jobs_messages_list'
        insert: []
        update: []
        delete: []
    work_items:
      id: google.dataflow.work_items
      name: work_items
      title: Work Items
      methods:
        projects_jobs_work_items_report_status:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1workItems:reportStatus/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_jobs_work_items_lease:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1workItems:lease/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_work_items_lease:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1workItems:lease/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_work_items_report_status:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1workItems:reportStatus/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    debug:
      id: google.dataflow.debug
      name: debug
      title: Debug
      methods:
        projects_jobs_debug_send_capture:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1debug~1sendCapture/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_debug_send_capture:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1debug~1sendCapture/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    debug_config:
      id: google.dataflow.debug_config
      name: debug_config
      title: Debug Config
      methods:
        projects_jobs_debug_get_config:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1jobs~1{jobId}~1debug~1getConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_debug_get_config:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1debug~1getConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    locations:
      id: google.dataflow.locations
      name: locations
      title: Locations
      methods:
        projects_locations_worker_messages:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1WorkerMessages/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    snapshots:
      id: google.dataflow.snapshots
      name: snapshots
      title: Snapshots
      methods:
        projects_locations_jobs_snapshots_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1snapshots/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_snapshots_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1snapshots/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_snapshots_get:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1snapshots~1{snapshotId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_snapshots_delete:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1snapshots~1{snapshotId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_snapshots_get:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1snapshots~1{snapshotId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_snapshots_list:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1snapshots/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_delete_snapshots:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1snapshots/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_jobs_snapshots_list'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_snapshots_list'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_snapshots_get'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_snapshots_get'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_snapshots_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_snapshots_delete'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_delete_snapshots'
    stages_execution_details:
      id: google.dataflow.stages_execution_details
      name: stages_execution_details
      title: Stages Execution Details
      methods:
        projects_locations_jobs_stages_get_execution_details:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1stages~1{stageId}~1executionDetails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.workers
        _projects_locations_jobs_stages_get_execution_details:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1stages~1{stageId}~1executionDetails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/stages_execution_details/methods/projects_locations_jobs_stages_get_execution_details'
        insert: []
        update: []
        delete: []
    jobs_execution_details:
      id: google.dataflow.jobs_execution_details
      name: jobs_execution_details
      title: Jobs Execution Details
      methods:
        projects_locations_jobs_get_execution_details:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1executionDetails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.stages
        _projects_locations_jobs_get_execution_details:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1jobs~1{jobId}~1executionDetails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs_execution_details/methods/projects_locations_jobs_get_execution_details'
        insert: []
        update: []
        delete: []
    flex_templates:
      id: google.dataflow.flex_templates
      name: flex_templates
      title: Flex Templates
      methods:
        projects_locations_flex_templates_launch:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1locations~1{location}~1flexTemplates:launch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    projects:
      id: google.dataflow.projects
      name: projects
      title: Projects
      methods:
        projects_worker_messages:
          operation:
            $ref: '#/paths/~1v1b3~1projects~1{projectId}~1WorkerMessages/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  '/v1b3/projects/{projectId}/templates:launch':
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
    post:
      description: Launch a template.
      operationId: dataflow.projects.templates.launch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaunchTemplateParameters'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchTemplateResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: dynamicTemplate.gcsPath
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: gcsPath
          schema:
            type: string
        - in: query
          name: dynamicTemplate.stagingLocation
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-method: projects_templates_launch
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/templates':
    parameters: *ref_1
    post:
      description: Creates a Cloud Dataflow job from a template. Do not enter confidential information when you supply string values using the API.
      operationId: dataflow.projects.templates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobFromTemplateRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-method: projects_templates_create
      x-stackQL-verb: insert
  '/v1b3/projects/{projectId}/templates:get':
    parameters: *ref_1
    get:
      description: Get the template associated with a template.
      operationId: dataflow.projects.templates.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplateResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: gcsPath
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-method: projects_templates_get
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/jobs':
    parameters: *ref_1
    post:
      description: 'Creates a Cloud Dataflow job. To create a job, we recommend using `projects.locations.jobs.create` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.create` is not recommended, as your job will always start in `us-central1`. Do not enter confidential information when you supply string values using the API.'
      operationId: dataflow.projects.jobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: replaceJobId
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_jobs_create
      x-stackQL-verb: insert
    get:
      description: 'List the jobs of a project. To list the jobs of a project in a region, we recommend using `projects.locations.jobs.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To list the all jobs across all regions, use `projects.jobs.aggregated`. Using `projects.jobs.list` is not recommended, because you can only get the list of jobs that are running in `us-central1`. `projects.locations.jobs.list` and `projects.jobs.list` support filtering the list of jobs by name. Filtering by name isn''t supported by `projects.jobs.aggregated`.'
      operationId: dataflow.projects.jobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: jobs
      x-stackQL-method: projects_jobs_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.jobs
  '/v1b3/projects/{projectId}/jobs/{jobId}':
    parameters: *ref_1
    get:
      description: 'Gets the state of the specified Cloud Dataflow job. To get the state of a job, we recommend using `projects.locations.jobs.get` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.get` is not recommended, as you can only get the state of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.jobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_jobs_get
      x-stackQL-verb: exec
    put:
      description: 'Updates the state of an existing Cloud Dataflow job. To update the state of an existing job, we recommend using `projects.locations.jobs.update` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.update` is not recommended, as you can only update the state of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.jobs.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_jobs_update
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/jobs/{jobId}:snapshot':
    parameters: *ref_1
    post:
      description: Snapshot the state of a streaming job.
      operationId: dataflow.projects.jobs.snapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_jobs_snapshot
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/jobs/{jobId}/metrics':
    parameters: *ref_1
    get:
      description: 'Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.getMetrics` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.getMetrics` is not recommended, as you can only request the status of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.jobs.getMetrics
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMetrics'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
      x-stackQL-resource: jobs_metrics
      x-stackQL-method: projects_jobs_get_metrics
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/jobs:aggregated':
    parameters: *ref_1
    get:
      description: 'List the jobs of a project across all regions. **Note:** This method doesn''t support filtering the list of jobs by name.'
      operationId: dataflow.projects.jobs.aggregated
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_jobs_aggregated
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/jobs/{jobId}/messages':
    parameters: *ref_1
    get:
      description: 'Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.messages.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.messages.list` is not recommended, as you can only request the status of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.jobs.messages.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobMessagesResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: minimumImportance
          schema:
            type: string
        - in: query
          name: endTime
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: startTime
          schema:
            type: string
      x-stackQL-resource: messages
      x-stackQL-method: projects_jobs_messages_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.jobMessages
  '/v1b3/projects/{projectId}/jobs/{jobId}/workItems:reportStatus':
    parameters: *ref_1
    post:
      description: Reports the status of dataflow WorkItems leased by a worker.
      operationId: dataflow.projects.jobs.workItems.reportStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportWorkItemStatusRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportWorkItemStatusResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: work_items
      x-stackQL-method: projects_jobs_work_items_report_status
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/jobs/{jobId}/workItems:lease':
    parameters: *ref_1
    post:
      description: Leases a dataflow WorkItem to run.
      operationId: dataflow.projects.jobs.workItems.lease
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaseWorkItemRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseWorkItemResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: work_items
      x-stackQL-method: projects_jobs_work_items_lease
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/jobs/{jobId}/debug/sendCapture':
    parameters: *ref_1
    post:
      description: Send encoded debug capture data for component.
      operationId: dataflow.projects.jobs.debug.sendCapture
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendDebugCaptureRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendDebugCaptureResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: debug
      x-stackQL-method: projects_jobs_debug_send_capture
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/jobs/{jobId}/debug/getConfig':
    parameters: *ref_1
    post:
      description: Get encoded debug configuration for component. Not cacheable.
      operationId: dataflow.projects.jobs.debug.getConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDebugConfigRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDebugConfigResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: debug_config
      x-stackQL-method: projects_jobs_debug_get_config
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/WorkerMessages':
    parameters: *ref_1
    post:
      description: Send a worker_message to the service.
      operationId: dataflow.projects.locations.workerMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendWorkerMessagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendWorkerMessagesResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_worker_messages
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/debug/sendCapture':
    parameters: *ref_1
    post:
      description: Send encoded debug capture data for component.
      operationId: dataflow.projects.locations.jobs.debug.sendCapture
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendDebugCaptureRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendDebugCaptureResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: debug
      x-stackQL-method: projects_locations_jobs_debug_send_capture
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/debug/getConfig':
    parameters: *ref_1
    post:
      description: Get encoded debug configuration for component. Not cacheable.
      operationId: dataflow.projects.locations.jobs.debug.getConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDebugConfigRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDebugConfigResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: debug_config
      x-stackQL-method: projects_locations_jobs_debug_get_config
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/snapshots':
    parameters: *ref_1
    get:
      description: Lists snapshots.
      operationId: dataflow.projects.locations.jobs.snapshots.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_locations_jobs_snapshots_list
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/messages':
    parameters: *ref_1
    get:
      description: 'Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.messages.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.messages.list` is not recommended, as you can only request the status of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.locations.jobs.messages.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobMessagesResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: minimumImportance
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
        - in: query
          name: endTime
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: messages
      x-stackQL-method: projects_locations_jobs_messages_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.jobMessages
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/stages/{stageId}/executionDetails':
    parameters: *ref_1
    get:
      description: Request detailed information about the execution status of a stage of the job. EXPERIMENTAL. This API is subject to change or removal without notice.
      operationId: dataflow.projects.locations.jobs.stages.getExecutionDetails
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageExecutionDetails'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: path
          name: stageId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: endTime
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: startTime
          schema:
            type: string
      x-stackQL-resource: stages_execution_details
      x-stackQL-method: projects_locations_jobs_stages_get_execution_details
      x-stackQL-verb: select
      x-stackQL-objectKey: $.workers
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/workItems:lease':
    parameters: *ref_1
    post:
      description: Leases a dataflow WorkItem to run.
      operationId: dataflow.projects.locations.jobs.workItems.lease
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaseWorkItemRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseWorkItemResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: work_items
      x-stackQL-method: projects_locations_jobs_work_items_lease
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/workItems:reportStatus':
    parameters: *ref_1
    post:
      description: Reports the status of dataflow WorkItems leased by a worker.
      operationId: dataflow.projects.locations.jobs.workItems.reportStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportWorkItemStatusRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportWorkItemStatusResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: work_items
      x-stackQL-method: projects_locations_jobs_work_items_report_status
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/executionDetails':
    parameters: *ref_1
    get:
      description: Request detailed information about the execution status of the job. EXPERIMENTAL. This API is subject to change or removal without notice.
      operationId: dataflow.projects.locations.jobs.getExecutionDetails
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecutionDetails'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: jobs_execution_details
      x-stackQL-method: projects_locations_jobs_get_execution_details
      x-stackQL-verb: select
      x-stackQL-objectKey: $.stages
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/metrics':
    parameters: *ref_1
    get:
      description: 'Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.getMetrics` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.getMetrics` is not recommended, as you can only request the status of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.locations.jobs.getMetrics
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMetrics'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
      x-stackQL-resource: jobs_metrics
      x-stackQL-method: projects_locations_jobs_get_metrics
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}':
    parameters: *ref_1
    get:
      description: 'Gets the state of the specified Cloud Dataflow job. To get the state of a job, we recommend using `projects.locations.jobs.get` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.get` is not recommended, as you can only get the state of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.locations.jobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_jobs_get
      x-stackQL-verb: exec
    put:
      description: 'Updates the state of an existing Cloud Dataflow job. To update the state of an existing job, we recommend using `projects.locations.jobs.update` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.update` is not recommended, as you can only update the state of jobs that are running in `us-central1`.'
      operationId: dataflow.projects.locations.jobs.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_jobs_update
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/jobs':
    parameters: *ref_1
    get:
      description: 'List the jobs of a project. To list the jobs of a project in a region, we recommend using `projects.locations.jobs.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To list the all jobs across all regions, use `projects.jobs.aggregated`. Using `projects.jobs.list` is not recommended, because you can only get the list of jobs that are running in `us-central1`. `projects.locations.jobs.list` and `projects.jobs.list` support filtering the list of jobs by name. Filtering by name isn''t supported by `projects.jobs.aggregated`.'
      operationId: dataflow.projects.locations.jobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_jobs_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.jobs
    post:
      description: 'Creates a Cloud Dataflow job. To create a job, we recommend using `projects.locations.jobs.create` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.create` is not recommended, as your job will always start in `us-central1`. Do not enter confidential information when you supply string values using the API.'
      operationId: dataflow.projects.locations.jobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: query
          name: replaceJobId
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_jobs_create
      x-stackQL-verb: insert
  '/v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}:snapshot':
    parameters: *ref_1
    post:
      description: Snapshot the state of a streaming job.
      operationId: dataflow.projects.locations.jobs.snapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_jobs_snapshot
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/templates':
    parameters: *ref_1
    post:
      description: Creates a Cloud Dataflow job from a template. Do not enter confidential information when you supply string values using the API.
      operationId: dataflow.projects.locations.templates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobFromTemplateRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-method: projects_locations_templates_create
      x-stackQL-verb: insert
  '/v1b3/projects/{projectId}/locations/{location}/templates:launch':
    parameters: *ref_1
    post:
      description: Launch a template.
      operationId: dataflow.projects.locations.templates.launch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaunchTemplateParameters'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchTemplateResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: query
          name: dynamicTemplate.stagingLocation
          schema:
            type: string
        - in: query
          name: dynamicTemplate.gcsPath
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: gcsPath
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-method: projects_locations_templates_launch
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/locations/{location}/templates:get':
    parameters: *ref_1
    get:
      description: Get the template associated with a template.
      operationId: dataflow.projects.locations.templates.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplateResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: gcsPath
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-method: projects_locations_templates_get
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/locations/{location}/snapshots':
    parameters: *ref_1
    get:
      description: Lists snapshots.
      operationId: dataflow.projects.locations.snapshots.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: query
          name: jobId
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_locations_snapshots_list
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/locations/{location}/snapshots/{snapshotId}':
    parameters: *ref_1
    get:
      description: Gets information about a snapshot.
      operationId: dataflow.projects.locations.snapshots.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: snapshotId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_locations_snapshots_get
      x-stackQL-verb: select
    delete:
      description: Deletes a snapshot.
      operationId: dataflow.projects.locations.snapshots.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSnapshotResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: snapshotId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_locations_snapshots_delete
      x-stackQL-verb: delete
  '/v1b3/projects/{projectId}/locations/{location}/flexTemplates:launch':
    parameters: *ref_1
    post:
      description: Launch a job with a FlexTemplate.
      operationId: dataflow.projects.locations.flexTemplates.launch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaunchFlexTemplateRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchFlexTemplateResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
      x-stackQL-resource: flex_templates
      x-stackQL-method: projects_locations_flex_templates_launch
      x-stackQL-verb: exec
  '/v1b3/projects/{projectId}/snapshots/{snapshotId}':
    parameters: *ref_1
    get:
      description: Gets information about a snapshot.
      operationId: dataflow.projects.snapshots.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotId
          required: true
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_snapshots_get
      x-stackQL-verb: select
  '/v1b3/projects/{projectId}/snapshots':
    parameters: *ref_1
    get:
      description: Lists snapshots.
      operationId: dataflow.projects.snapshots.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: jobId
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_snapshots_list
      x-stackQL-verb: select
    delete:
      description: Deletes a snapshot.
      operationId: dataflow.projects.deleteSnapshots
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSnapshotResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: snapshotId
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: projects_delete_snapshots
      x-stackQL-verb: delete
  '/v1b3/projects/{projectId}/WorkerMessages':
    parameters: *ref_1
    post:
      description: Send a worker_message to the service.
      operationId: dataflow.projects.workerMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendWorkerMessagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/compute.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
          Oauth2c:
            - 'https://www.googleapis.com/auth/userinfo.email'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendWorkerMessagesResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-method: projects_worker_messages
      x-stackQL-verb: exec
