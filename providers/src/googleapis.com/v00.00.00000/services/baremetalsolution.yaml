openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Bare Metal Solution API
  description: Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
  version: v2
  x-discovery-doc-revision: '20230724'
  x-generated-date: '2023-08-01'
externalDocs:
  url: 'https://cloud.google.com/bare-metal'
servers:
  - url: 'https://baremetalsolution.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    InstanceConfig:
      id: InstanceConfig
      type: object
      description: Configuration parameters for a new instance.
      properties:
        clientNetwork:
          description: Client network address. Filled if InstanceConfig.multivlan_config is false.
          deprecated: true
          $ref: '#/components/schemas/NetworkAddress'
        accountNetworksEnabled:
          description: If true networks can be from different projects of the same vendor account.
          type: boolean
        name:
          type: string
          readOnly: true
          description: Output only. The name of the instance config.
        id:
          description: A transient unique identifier to idenfity an instance within an ProvisioningConfig request.
          type: string
        sshKeyNames:
          items:
            type: string
          type: array
          description: List of names of ssh keys used to provision the instance.
        osImage:
          type: string
          description: 'OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)'
        logicalInterfaces:
          description: List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.
          items:
            $ref: '#/components/schemas/GoogleCloudBaremetalsolutionV2LogicalInterface'
          type: array
        networkConfig:
          description: The type of network configuration on the instance.
          type: string
          enum:
            - NETWORKCONFIG_UNSPECIFIED
            - SINGLE_VLAN
            - MULTI_VLAN
          enumDescriptions:
            - The unspecified network configuration.
            - Instance part of single client network and single private network.
            - Instance part of multiple (or single) client networks and private networks.
        hyperthreading:
          type: boolean
          description: Whether the instance should be provisioned with Hyperthreading enabled.
        userNote:
          description: 'User note field, it can be used by customers to add additional information for the BMS Ops team .'
          type: string
        instanceType:
          type: string
          description: 'Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)'
        privateNetwork:
          description: 'Private network address, if any. Filled if InstanceConfig.multivlan_config is false.'
          $ref: '#/components/schemas/NetworkAddress'
          deprecated: true
        networkTemplate:
          type: string
          description: Server network template name. Filled if InstanceConfig.multivlan_config is true.
    ProvisioningConfig:
      type: object
      id: ProvisioningConfig
      properties:
        networks:
          type: array
          description: Networks to be created.
          items:
            $ref: '#/components/schemas/NetworkConfig'
        cloudConsoleUri:
          description: Output only. URI to Cloud Console UI view of this provisioning config.
          type: string
          readOnly: true
        updateTime:
          format: google-datetime
          type: string
          description: Output only. Last update timestamp.
          readOnly: true
        vpcScEnabled:
          type: boolean
          description: 'If true, VPC SC is enabled for the cluster.'
        statusMessage:
          type: string
          description: Optional status messages associated with the FAILED state.
        customId:
          description: Optional. The user-defined identifier of the provisioning config.
          type: string
        volumes:
          items:
            $ref: '#/components/schemas/VolumeConfig'
          description: Volumes to be created.
          type: array
        handoverServiceAccount:
          description: A service account to enable customers to access instance credentials upon handover.
          type: string
        email:
          type: string
          description: Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.
          deprecated: true
        location:
          type: string
          description: Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.
        name:
          description: Output only. The system-generated name of the provisioning config. This follows the UUID format.
          readOnly: true
          type: string
        ticketId:
          description: A generated ticket id to track provisioning request.
          type: string
        state:
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - DRAFT
            - SUBMITTED
            - PROVISIONING
            - PROVISIONED
            - VALIDATED
            - CANCELLED
            - FAILED
          enumDescriptions:
            - State wasn't specified.
            - ProvisioningConfig is a draft and can be freely modified.
            - ProvisioningConfig was already submitted and cannot be modified.
            - ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.
            - 'ProvisioningConfig was provisioned, meaning the resources exist.'
            - ProvisioningConfig was validated. A validation tool will be run to set this state.
            - ProvisioningConfig was canceled.
            - 'The request is submitted for provisioning, with error return.'
          type: string
          description: Output only. State of ProvisioningConfig.
        instances:
          type: array
          description: Instances to be created.
          items:
            $ref: '#/components/schemas/InstanceConfig'
      description: A provisioning configuration.
    ProvisioningQuota:
      id: ProvisioningQuota
      description: A provisioning quota for a given project.
      properties:
        assetType:
          enum:
            - ASSET_TYPE_UNSPECIFIED
            - ASSET_TYPE_SERVER
            - ASSET_TYPE_STORAGE
            - ASSET_TYPE_NETWORK
          description: The asset type of this provisioning quota.
          type: string
          enumDescriptions:
            - The unspecified type.
            - The server asset type.
            - The storage asset type.
            - The network asset type.
        location:
          description: The specific location of the provisioining quota.
          type: string
        networkBandwidth:
          format: int64
          description: 'Network bandwidth, Gbps'
          type: string
        storageGib:
          type: string
          description: Storage size (GB).
          format: int64
        name:
          type: string
          description: Output only. The name of the provisioning quota.
          readOnly: true
        availableCount:
          description: The available count of the provisioning quota.
          format: int32
          type: integer
        serverCount:
          format: int64
          type: string
          description: Server count.
        instanceQuota:
          $ref: '#/components/schemas/InstanceQuota'
          description: Instance quota.
        gcpService:
          type: string
          description: The gcp service of the provisioning quota.
      type: object
    NetworkUsage:
      properties:
        network:
          $ref: '#/components/schemas/Network'
          description: Network.
        usedIps:
          items:
            type: string
          type: array
          description: All used IP addresses in this network.
      id: NetworkUsage
      type: object
      description: Network with all used IP addresses.
    NetworkConfig:
      properties:
        type:
          enum:
            - TYPE_UNSPECIFIED
            - CLIENT
            - PRIVATE
          enumDescriptions:
            - Unspecified value.
            - 'Client network, that is a network peered to a GCP VPC.'
            - 'Private network, that is a network local to the BMS POD.'
          description: 'The type of this network, either Client or Private.'
          type: string
        vlanSameProject:
          type: boolean
          description: Whether the VLAN attachment pair is located in the same project.
        userNote:
          description: 'User note field, it can be used by customers to add additional information for the BMS Ops team .'
          type: string
        serviceCidr:
          type: string
          enum:
            - SERVICE_CIDR_UNSPECIFIED
            - DISABLED
            - HIGH_26
            - HIGH_27
            - HIGH_28
          description: 'Service CIDR, if any.'
          enumDescriptions:
            - Unspecified value.
            - Services are disabled for the given network.
            - Use the highest /26 block of the network to host services.
            - Use the highest /27 block of the network to host services.
            - Use the highest /28 block of the network to host services.
        jumboFramesEnabled:
          description: The JumboFramesEnabled option for customer to set.
          type: boolean
        name:
          readOnly: true
          type: string
          description: Output only. The name of the network config.
        id:
          type: string
          description: A transient unique identifier to identify a volume within an ProvisioningConfig request.
        bandwidth:
          description: Interconnect bandwidth. Set only when type is CLIENT.
          enum:
            - BANDWIDTH_UNSPECIFIED
            - BW_1_GBPS
            - BW_2_GBPS
            - BW_5_GBPS
            - BW_10_GBPS
          enumDescriptions:
            - Unspecified value.
            - 1 Gbps.
            - 2 Gbps.
            - 5 Gbps.
            - 10 Gbps.
          type: string
        cidr:
          type: string
          description: CIDR range of the network.
        vlanAttachments:
          description: 'List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).'
          items:
            $ref: '#/components/schemas/IntakeVlanAttachment'
          type: array
        gcpService:
          description: 'The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.'
          type: string
      type: object
      description: Configuration parameters for a new network.
      id: NetworkConfig
    AllowedClient:
      description: Represents an 'access point' for the share.
      id: AllowedClient
      properties:
        noRootSquash:
          type: boolean
          description: 'Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.'
        allowedClientsCidr:
          description: The subnet of IP addresses permitted to access the share.
          type: string
        shareIp:
          type: string
          readOnly: true
          description: Output only. The IP address of the share on this network. Assigned automatically during provisioning based on the network's services_cidr.
        mountPermissions:
          enum:
            - MOUNT_PERMISSIONS_UNSPECIFIED
            - READ
            - READ_WRITE
          type: string
          description: Mount permissions.
          enumDescriptions:
            - Permissions were not specified.
            - NFS share can be mount with read-only permissions.
            - NFS share can be mount with read-write permissions.
        allowDev:
          type: boolean
          description: Allow dev flag. Which controls whether to allow creation of devices.
        nfsPath:
          type: string
          readOnly: true
          description: 'Output only. The path to access NFS, in format shareIP:/InstanceID InstanceID is the generated ID instead of customer provided name. example like "10.0.0.0:/g123456789-nfs001"'
        network:
          type: string
          description: The network the access point sits on.
        allowSuid:
          description: Allow the setuid flag.
          type: boolean
      type: object
    Operation:
      type: object
      properties:
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        metadata:
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        response:
          type: object
          description: 'The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
      description: This resource represents a long-running operation that is the result of a network API call.
      id: Operation
    ListSSHKeysResponse:
      description: Message for response of ListSSHKeys.
      id: ListSSHKeysResponse
      type: object
      properties:
        sshKeys:
          type: array
          description: The SSH keys registered in the project.
          items:
            $ref: '#/components/schemas/SSHKey'
        nextPageToken:
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
          type: string
    ResetInstanceResponse:
      type: object
      id: ResetInstanceResponse
      properties: {}
      description: Response message from resetting a server.
    VolumeSnapshot:
      description: A snapshot of a volume. Only boot volumes can have snapshots.
      type: object
      properties:
        type:
          readOnly: true
          enum:
            - SNAPSHOT_TYPE_UNSPECIFIED
            - AD_HOC
            - SCHEDULED
          enumDescriptions:
            - Type is not specified.
            - Snapshot was taken manually by user.
            - Snapshot was taken automatically as a part of a snapshot schedule.
          type: string
          description: Output only. The type of the snapshot which indicates whether it was scheduled or manual/ad-hoc.
        id:
          description: 'Output only. An identifier for the snapshot, generated by the backend.'
          readOnly: true
          type: string
        storageVolume:
          type: string
          description: Output only. The name of the volume which this snapshot belongs to.
          readOnly: true
        description:
          type: string
          description: The description of the snapshot.
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The creation time of the snapshot.
        name:
          description: The name of the snapshot.
          type: string
      id: VolumeSnapshot
    Network:
      description: A Network.
      type: object
      id: Network
      properties:
        vrf:
          description: The vrf for the Network.
          $ref: '#/components/schemas/VRF'
        name:
          type: string
          description: 'Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`'
          readOnly: true
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs.
          type: object
        id:
          description: 'An identifier for the `Network`, generated by the backend.'
          type: string
        servicesCidr:
          description: IP range for reserved for services (e.g. NFS).
          type: string
        gatewayIp:
          description: Output only. Gateway ip address.
          type: string
          readOnly: true
        state:
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - PROVISIONED
            - DEPROVISIONING
            - UPDATING
          enumDescriptions:
            - The Network is in an unknown state.
            - The Network is provisioning.
            - The Network has been provisioned.
            - The Network is being deprovisioned.
            - The Network is being updated.
          type: string
          description: The Network state.
        jumboFramesEnabled:
          description: Whether network uses standard frames or jumbo ones.
          type: boolean
        reservations:
          items:
            $ref: '#/components/schemas/NetworkAddressReservation'
          description: 'List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server.'
          type: array
        cidr:
          type: string
          description: The cidr of the Network.
        ipAddress:
          type: string
          description: IP address configured.
        type:
          type: string
          description: The type of this network.
          enum:
            - TYPE_UNSPECIFIED
            - CLIENT
            - PRIVATE
          enumDescriptions:
            - Unspecified value.
            - 'Client network, a network peered to a Google Cloud VPC.'
            - 'Private network, a network local to the Bare Metal Solution environment.'
        macAddress:
          items:
            type: string
          type: array
          description: List of physical interfaces.
        vlanId:
          description: The vlan id of the Network.
          type: string
        pod:
          type: string
          readOnly: true
          description: Output only. Pod name.
        mountPoints:
          type: array
          items:
            $ref: '#/components/schemas/NetworkMountPoint'
          description: Input only. List of mount points to attach the network to.
    RenameNetworkRequest:
      description: Message requesting rename of a server.
      type: object
      id: RenameNetworkRequest
      properties:
        newNetworkId:
          description: Required. The new `id` of the network.
          type: string
    RenameInstanceRequest:
      properties:
        newInstanceId:
          description: Required. The new `id` of the instance.
          type: string
      description: Message requesting rename of a server.
      id: RenameInstanceRequest
      type: object
    SnapshotReservationDetail:
      type: object
      properties:
        reservedSpaceUsedPercent:
          type: integer
          format: int32
          description: The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.
        reservedSpaceRemainingGib:
          format: int64
          description: 'The amount, in GiB, of available space in this storage volume''s reserved snapshot space.'
          type: string
        reservedSpaceGib:
          type: string
          format: int64
          description: 'The space on this storage volume reserved for snapshots, shown in GiB.'
        reservedSpacePercent:
          format: int32
          description: Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.
          type: integer
      id: SnapshotReservationDetail
      description: Details about snapshot space reservation and usage on the storage volume.
    StopInstanceRequest:
      type: object
      properties: {}
      description: Message requesting to stop a server.
      id: StopInstanceRequest
    ResizeVolumeRequest:
      type: object
      properties:
        sizeGib:
          type: string
          format: int64
          description: 'New Volume size, in GiB.'
      id: ResizeVolumeRequest
      description: Request for emergency resize Volume.
    EnableInteractiveSerialConsoleRequest:
      id: EnableInteractiveSerialConsoleRequest
      type: object
      description: Message for enabling the interactive serial console on an instance.
      properties: {}
    VlanAttachment:
      properties:
        routerIp:
          type: string
          description: The router IP of the attachment.
        peerIp:
          description: The peer IP of the attachment.
          type: string
        peerVlanId:
          format: int64
          type: string
          description: The peer vlan ID of the attachment.
        interconnectAttachment:
          description: 'Optional. The name of the vlan attachment within vrf. This is of the form projects/{project_number}/regions/{region}/interconnectAttachments/{interconnect_attachment}'
          type: string
        pairingKey:
          description: Input only. Pairing key.
          type: string
        qosPolicy:
          description: The QOS policy applied to this VLAN attachment. This value should be preferred to using qos at vrf level.
          $ref: '#/components/schemas/QosPolicy'
        id:
          type: string
          description: Immutable. The identifier of the attachment within vrf.
      id: VlanAttachment
      type: object
      description: VLAN attachment details.
    RestoreVolumeSnapshotRequest:
      id: RestoreVolumeSnapshotRequest
      type: object
      properties: {}
      description: Message for restoring a volume snapshot.
    StartInstanceRequest:
      type: object
      id: StartInstanceRequest
      description: Message requesting to start a server.
      properties: {}
    EvictLunRequest:
      properties: {}
      type: object
      id: EvictLunRequest
      description: Request for skip lun cooloff and delete it.
    SSHKey:
      type: object
      properties:
        name:
          description: 'Output only. The name of this SSH key. Currently, the only valid value for the location is "global".'
          readOnly: true
          type: string
        publicKey:
          type: string
          description: The public SSH key. This must be in OpenSSH .authorized_keys format.
      id: SSHKey
      description: 'An SSH key, used for authorizing with the interactive serial console feature.'
    Status:
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        details:
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        code:
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
      id: Status
    LunRange:
      type: object
      id: LunRange
      properties:
        quantity:
          description: Number of LUNs to create.
          format: int32
          type: integer
        sizeGb:
          format: int32
          description: 'The requested size of each LUN, in GB.'
          type: integer
      description: A LUN(Logical Unit Number) range.
    LogicalNetworkInterface:
      description: Each logical network interface is effectively a network and IP pair.
      properties:
        id:
          type: string
          description: 'An identifier for the `Network`, generated by the backend.'
        network:
          description: Name of the network
          type: string
        defaultGateway:
          type: boolean
          description: Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance.
        ipAddress:
          description: IP address in the network
          type: string
        networkType:
          enumDescriptions:
            - Unspecified value.
            - 'Client network, a network peered to a Google Cloud VPC.'
            - 'Private network, a network local to the Bare Metal Solution environment.'
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - CLIENT
            - PRIVATE
          description: Type of network.
      id: LogicalNetworkInterface
      type: object
    Lun:
      id: Lun
      description: A storage volume logical unit number (LUN).
      properties:
        id:
          description: 'An identifier for the LUN, generated by the backend.'
          type: string
        shareable:
          description: Display if this LUN can be shared between multiple physical servers.
          type: boolean
        name:
          readOnly: true
          type: string
          description: Output only. The name of the LUN.
        instances:
          description: Output only. Instances this Lun is attached to.
          items:
            type: string
          readOnly: true
          type: array
        sizeGb:
          format: int64
          type: string
          description: 'The size of this LUN, in gigabytes.'
        state:
          description: The state of this storage volume.
          enumDescriptions:
            - The LUN is in an unknown state.
            - The LUN is being created.
            - The LUN is being updated.
            - The LUN is ready for use.
            - The LUN has been requested to be deleted.
            - The LUN is in cool off state. It will be deleted after `expire_time`.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - UPDATING
            - READY
            - DELETING
            - COOL_OFF
        bootLun:
          type: boolean
          description: Display if this LUN is a boot LUN.
        wwid:
          description: The WWID for this LUN.
          type: string
        multiprotocolType:
          description: The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.
          enumDescriptions:
            - Server has no OS specified.
            - Server with Linux OS.
          enum:
            - MULTIPROTOCOL_TYPE_UNSPECIFIED
            - LINUX
          type: string
        storageVolume:
          description: Display the storage volume for this LUN.
          type: string
        expireTime:
          type: string
          format: google-datetime
          description: Output only. Time after which LUN will be fully deleted. It is filled only for LUNs in COOL_OFF state.
          readOnly: true
        storageType:
          enumDescriptions:
            - The storage type for this LUN is unknown.
            - This storage type for this LUN is SSD.
            - This storage type for this LUN is HDD.
          description: The storage type for this LUN.
          type: string
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
      type: object
    GoogleCloudBaremetalsolutionV2LogicalInterface:
      id: GoogleCloudBaremetalsolutionV2LogicalInterface
      properties:
        name:
          description: Interface name. This is of syntax or and forms part of the network template name.
          type: string
        logicalNetworkInterfaces:
          description: List of logical network interfaces within a logical interface.
          items:
            $ref: '#/components/schemas/LogicalNetworkInterface'
          type: array
        interfaceIndex:
          deprecated: true
          format: int32
          description: The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated.
          type: integer
      type: object
      description: 'Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.'
    StartInstanceResponse:
      description: Response message from starting a server.
      id: StartInstanceResponse
      type: object
      properties: {}
    ListNetworksResponse:
      id: ListNetworksResponse
      properties:
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        networks:
          description: The list of networks.
          items:
            $ref: '#/components/schemas/Network'
          type: array
      type: object
      description: Response message containing the list of networks.
    NfsExport:
      id: NfsExport
      description: A NFS export entry.
      properties:
        noRootSquash:
          description: 'Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.'
          type: boolean
        permissions:
          enum:
            - PERMISSIONS_UNSPECIFIED
            - READ_ONLY
            - READ_WRITE
          description: Export permissions.
          enumDescriptions:
            - Unspecified value.
            - Read-only permission.
            - Read-write permission.
          type: string
        allowSuid:
          description: Allow the setuid flag.
          type: boolean
        cidr:
          description: A CIDR range.
          type: string
        machineId:
          type: string
          description: 'Either a single machine, identified by an ID, or a comma-separated list of machine IDs.'
        allowDev:
          type: boolean
          description: Allow dev flag in NfsShare AllowedClientsRequest.
        networkId:
          type: string
          description: Network to use to publish the export.
      type: object
    ListVolumeSnapshotsResponse:
      description: Response message containing the list of volume snapshots.
      id: ListVolumeSnapshotsResponse
      properties:
        volumeSnapshots:
          items:
            $ref: '#/components/schemas/VolumeSnapshot'
          type: array
          description: The list of snapshots.
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
      type: object
    ListNetworkUsageResponse:
      type: object
      description: Response with Networks with IPs
      properties:
        networks:
          description: Networks with IPs.
          items:
            $ref: '#/components/schemas/NetworkUsage'
          type: array
      id: ListNetworkUsageResponse
    NetworkAddressReservation:
      properties:
        startAddress:
          type: string
          description: 'The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2.'
        endAddress:
          description: 'The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2.'
          type: string
        note:
          type: string
          description: 'A note about this reservation, intended for human consumption.'
      type: object
      description: A reservation of one or more addresses in a network.
      id: NetworkAddressReservation
    ListInstancesResponse:
      properties:
        instances:
          items:
            $ref: '#/components/schemas/Instance'
          type: array
          description: The list of servers.
        nextPageToken:
          type: string
          description: A token identifying a page of results from the server.
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
      description: Response message for the list of servers.
      id: ListInstancesResponse
      type: object
    DisableInteractiveSerialConsoleRequest:
      type: object
      description: Message for disabling the interactive serial console on an instance.
      properties: {}
      id: DisableInteractiveSerialConsoleRequest
    ListLunsResponse:
      description: Response message containing the list of storage volume luns.
      id: ListLunsResponse
      properties:
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        luns:
          type: array
          description: The list of luns.
          items:
            $ref: '#/components/schemas/Lun'
      type: object
    NfsShare:
      id: NfsShare
      properties:
        name:
          description: Immutable. The name of the NFS share.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs.
          type: object
        state:
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONED
            - CREATING
            - UPDATING
            - DELETING
          type: string
          description: Output only. The state of the NFS share.
          readOnly: true
          enumDescriptions:
            - The share is in an unknown state.
            - The share has been provisioned.
            - The NFS Share is being created.
            - The NFS Share is being updated.
            - The NFS Share has been requested to be deleted.
        storageType:
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
          enumDescriptions:
            - The storage type for this volume is unknown.
            - The storage type for this volume is SSD.
            - This storage type for this volume is HDD.
          description: Immutable. The storage type of the underlying volume.
          type: string
        volume:
          readOnly: true
          description: Output only. The underlying volume of the share. Created automatically during provisioning.
          type: string
        nfsShareId:
          description: 'Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.'
          type: string
          readOnly: true
        id:
          description: 'Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future.'
          type: string
          readOnly: true
        requestedSizeGib:
          type: string
          description: 'The requested size, in GiB.'
          format: int64
        allowedClients:
          type: array
          items:
            $ref: '#/components/schemas/AllowedClient'
          description: List of allowed access points.
      type: object
      description: An NFS share.
    InstanceQuota:
      id: InstanceQuota
      properties:
        instanceType:
          deprecated: true
          type: string
          description: 'Instance type. Deprecated: use gcp_service.'
        availableMachineCount:
          type: integer
          description: Number of machines than can be created for the given location and instance_type.
          format: int32
        name:
          readOnly: true
          type: string
          description: Output only. The name of the instance quota.
        location:
          description: Location where the quota applies.
          type: string
        gcpService:
          description: The gcp service of the provisioning quota.
          type: string
      description: A resource budget.
      type: object
    QosPolicy:
      properties:
        bandwidthGbps:
          format: double
          type: number
          description: 'The bandwidth permitted by the QOS policy, in gbps.'
      description: QOS policy parameters.
      id: QosPolicy
      type: object
    Volume:
      type: object
      id: Volume
      description: A storage volume.
      properties:
        originallyRequestedSizeGib:
          description: 'Originally requested size, in GiB.'
          format: int64
          type: string
        id:
          type: string
          description: 'An identifier for the `Volume`, generated by the backend.'
        protocol:
          enum:
            - PROTOCOL_UNSPECIFIED
            - FIBRE_CHANNEL
            - NFS
          type: string
          enumDescriptions:
            - Value is not specified.
            - Fibre Channel protocol.
            - NFS protocol means Volume is a NFS Share volume. Such volumes cannot be manipulated via Volumes API.
          description: Output only. Storage protocol for the Volume.
          readOnly: true
        maxSizeGib:
          type: string
          format: int64
          description: 'Maximum size volume can be expanded to in case of evergency, in GiB.'
        currentSizeGib:
          type: string
          description: 'The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.'
          format: int64
        pod:
          description: Immutable. Pod name.
          type: string
        autoGrownSizeGib:
          format: int64
          description: 'The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.'
          type: string
        snapshotSchedulePolicy:
          description: 'The name of the snapshot schedule policy in use for this volume, if any.'
          type: string
        name:
          description: 'Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`'
          readOnly: true
          type: string
        emergencySizeGib:
          type: string
          format: int64
          description: 'Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value.'
        instances:
          type: array
          items:
            type: string
          readOnly: true
          description: Output only. Instances this Volume is attached to. This field is set only in Get requests.
        storageType:
          description: The storage type for this volume.
          type: string
          enumDescriptions:
            - The storage type for this volume is unknown.
            - The storage type for this volume is SSD.
            - This storage type for this volume is HDD.
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
        snapshotAutoDeleteBehavior:
          type: string
          description: The behavior to use when snapshot reserved space is full.
          enum:
            - SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED
            - DISABLED
            - OLDEST_FIRST
            - NEWEST_FIRST
          enumDescriptions:
            - The unspecified behavior.
            - 'Don''t delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.'
            - Delete the oldest snapshots first.
            - Delete the newest snapshots first.
        remainingSpaceGib:
          description: 'The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.'
          format: int64
          type: string
        attached:
          type: boolean
          description: Output only. Is the Volume attached at at least one instance. This field is a lightweight counterpart of `instances` field. It is filled in List responses as well.
          readOnly: true
        requestedSizeGib:
          format: int64
          description: 'The requested size of this storage volume, in GiB.'
          type: string
        expireTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. Time after which volume will be fully deleted. It is filled only for volumes in COOLOFF state.
        state:
          type: string
          enumDescriptions:
            - The storage volume is in an unknown state.
            - The storage volume is being created.
            - The storage volume is ready for use.
            - The storage volume has been requested to be deleted.
            - The storage volume is being updated.
            - The storage volume is in cool off state. It will be deleted after `expire_time`.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
            - COOL_OFF
          description: The state of this storage volume.
        bootVolume:
          type: boolean
          description: Output only. Whether this volume is a boot volume. A boot volume is one which contains a boot LUN.
          readOnly: true
        snapshotReservationDetail:
          $ref: '#/components/schemas/SnapshotReservationDetail'
          description: Details about snapshot space reservation and usage on the storage volume.
        storageAggregatePool:
          type: string
          description: Input only. Name of the storage aggregate pool to allocate the volume in. Can be used only for VOLUME_PERFORMANCE_TIER_ASSIGNED volumes.
        workloadProfile:
          description: The workload profile for the volume.
          type: string
          enum:
            - WORKLOAD_PROFILE_UNSPECIFIED
            - GENERIC
            - HANA
          enumDescriptions:
            - The workload profile is in an unknown state.
            - The workload profile is generic.
            - The workload profile is hana.
        labels:
          type: object
          description: Labels as key value pairs.
          additionalProperties:
            type: string
        notes:
          type: string
          description: Input only. User-specified notes for new Volume. Used to provision Volumes that require manual intervention.
        snapshotEnabled:
          type: boolean
          description: Whether snapshots are enabled.
        performanceTier:
          enumDescriptions:
            - Value is not specified.
            - 'Regular volumes, shared aggregates.'
            - Assigned aggregates.
            - High throughput aggregates.
          enum:
            - VOLUME_PERFORMANCE_TIER_UNSPECIFIED
            - VOLUME_PERFORMANCE_TIER_SHARED
            - VOLUME_PERFORMANCE_TIER_ASSIGNED
            - VOLUME_PERFORMANCE_TIER_HT
          description: Immutable. Performance tier of the Volume. Default is SHARED.
          type: string
    NetworkMountPoint:
      type: object
      id: NetworkMountPoint
      description: Mount point for a network.
      properties:
        instance:
          description: Instance to attach network to.
          type: string
        ipAddress:
          type: string
          description: Ip address of the server.
        logicalInterface:
          type: string
          description: Logical interface to detach from.
        defaultGateway:
          type: boolean
          description: Network should be a default gateway.
    ListVolumesResponse:
      properties:
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/Volume'
          description: The list of storage volumes.
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        nextPageToken:
          type: string
          description: A token identifying a page of results from the server.
      description: Response message containing the list of storage volumes.
      id: ListVolumesResponse
      type: object
    NetworkAddress:
      description: A network.
      properties:
        networkId:
          description: 'Id of the network to use, within the same ProvisioningConfig request.'
          type: string
        address:
          description: IPv4 address to be assigned to the server.
          type: string
        existingNetworkId:
          type: string
          description: Name of the existing network to use.
      type: object
      id: NetworkAddress
    StopInstanceResponse:
      id: StopInstanceResponse
      type: object
      properties: {}
      description: Response message from stopping a server.
    ResetInstanceRequest:
      type: object
      id: ResetInstanceRequest
      description: Message requesting to reset a server.
      properties: {}
    EvictVolumeRequest:
      type: object
      description: Request for skip volume cooloff and delete it.
      id: EvictVolumeRequest
      properties: {}
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        locations:
          type: array
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Location'
      id: ListLocationsResponse
      type: object
    Instance:
      description: A server.
      properties:
        firmwareVersion:
          description: Output only. The firmware version for the instance.
          readOnly: true
          type: string
        workloadProfile:
          type: string
          enumDescriptions:
            - The workload profile is in an unknown state.
            - The workload profile is generic.
            - The workload profile is hana.
          description: The workload profile for the instance.
          enum:
            - WORKLOAD_PROFILE_UNSPECIFIED
            - WORKLOAD_PROFILE_GENERIC
            - WORKLOAD_PROFILE_HANA
        labels:
          description: Labels as key value pairs.
          type: object
          additionalProperties:
            type: string
        name:
          description: 'Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`'
          type: string
        id:
          readOnly: true
          type: string
          description: 'Output only. An identifier for the `Instance`, generated by the backend.'
        networks:
          type: array
          readOnly: true
          description: Output only. List of networks associated with this server.
          items:
            $ref: '#/components/schemas/Network'
        createTime:
          description: Output only. Create a time stamp.
          type: string
          readOnly: true
          format: google-datetime
        machineType:
          type: string
          description: 'Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)'
        hyperthreadingEnabled:
          description: 'True if you enable hyperthreading for the server, otherwise false. The default value is false.'
          type: boolean
        logicalInterfaces:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudBaremetalsolutionV2LogicalInterface'
          description: 'List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.'
        luns:
          type: array
          items:
            $ref: '#/components/schemas/Lun'
          description: Immutable. List of LUNs associated with this server.
        volumes:
          description: Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses.
          type: array
          items:
            $ref: '#/components/schemas/Volume'
        state:
          description: Output only. The state of the server.
          type: string
          enumDescriptions:
            - The server is in an unknown state.
            - The server is being provisioned.
            - The server is running.
            - The server has been deleted.
            - The server is being updated.
            - The server is starting.
            - The server is stopping.
            - The server is shutdown.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - DELETED
            - UPDATING
            - STARTING
            - STOPPING
            - SHUTDOWN
          readOnly: true
        loginInfo:
          type: string
          readOnly: true
          description: Output only. Text field about info for logging in.
        osImage:
          description: The OS image currently installed on the server.
          type: string
        updateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. Update a time stamp.
        pod:
          type: string
          description: 'Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.'
        networkTemplate:
          description: 'Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of "bond" or "nic".'
          type: string
        interactiveSerialConsoleEnabled:
          description: 'Output only. True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.'
          type: boolean
          readOnly: true
      type: object
      id: Instance
    RenameNfsShareRequest:
      description: Message requesting rename of a server.
      type: object
      properties:
        newNfsshareId:
          type: string
          description: Required. The new `id` of the nfsshare.
      id: RenameNfsShareRequest
    RenameVolumeRequest:
      type: object
      properties:
        newVolumeId:
          type: string
          description: Required. The new `id` of the volume.
      description: Message requesting rename of a server.
      id: RenameVolumeRequest
    DetachLunRequest:
      properties:
        lun:
          type: string
          description: Required. Name of the Lun to detach.
        skipReboot:
          description: 'If true, performs lun unmapping without instance reboot.'
          type: boolean
      id: DetachLunRequest
      description: Message for detach specific LUN from an Instance.
      type: object
    SubmitProvisioningConfigResponse:
      description: Response for SubmitProvisioningConfig.
      properties:
        provisioningConfig:
          description: The submitted provisioning config.
          $ref: '#/components/schemas/ProvisioningConfig'
      id: SubmitProvisioningConfigResponse
      type: object
    ListNfsSharesResponse:
      description: Response message containing the list of NFS shares.
      properties:
        nfsShares:
          type: array
          description: The list of NFS shares.
          items:
            $ref: '#/components/schemas/NfsShare'
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        nextPageToken:
          type: string
          description: A token identifying a page of results from the server.
      type: object
      id: ListNfsSharesResponse
    VolumeConfig:
      id: VolumeConfig
      description: Configuration parameters for a new volume.
      properties:
        sizeGb:
          type: integer
          format: int32
          description: 'The requested size of this volume, in GB.'
        type:
          description: The type of this Volume.
          enum:
            - TYPE_UNSPECIFIED
            - FLASH
            - DISK
          enumDescriptions:
            - The unspecified type.
            - This Volume is on flash.
            - This Volume is on disk.
          type: string
        id:
          type: string
          description: A transient unique identifier to identify a volume within an ProvisioningConfig request.
        storageAggregatePool:
          type: string
          description: Input only. Name of the storage aggregate pool to allocate the volume in. Can be used only for VOLUME_PERFORMANCE_TIER_ASSIGNED volumes.
        machineIds:
          items:
            type: string
          description: Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.
          type: array
        userNote:
          description: 'User note field, it can be used by customers to add additional information for the BMS Ops team .'
          type: string
        snapshotsEnabled:
          type: boolean
          description: Whether snapshots should be enabled.
        nfsExports:
          type: array
          description: NFS exports. Set only when protocol is PROTOCOL_NFS.
          items:
            $ref: '#/components/schemas/NfsExport'
        protocol:
          enum:
            - PROTOCOL_UNSPECIFIED
            - PROTOCOL_FC
            - PROTOCOL_NFS
          type: string
          description: Volume protocol.
          enumDescriptions:
            - Unspecified value.
            - Fibre channel.
            - Network file system.
        lunRanges:
          items:
            $ref: '#/components/schemas/LunRange'
          description: LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.
          type: array
        performanceTier:
          description: Performance tier of the Volume. Default is SHARED.
          type: string
          enumDescriptions:
            - Value is not specified.
            - 'Regular volumes, shared aggregates.'
            - Assigned aggregates.
            - High throughput aggregates.
          enum:
            - VOLUME_PERFORMANCE_TIER_UNSPECIFIED
            - VOLUME_PERFORMANCE_TIER_SHARED
            - VOLUME_PERFORMANCE_TIER_ASSIGNED
            - VOLUME_PERFORMANCE_TIER_HT
        name:
          readOnly: true
          description: Output only. The name of the volume config.
          type: string
        gcpService:
          type: string
          description: 'The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.'
      type: object
    Empty:
      id: Empty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      type: object
    VRF:
      description: A network VRF.
      type: object
      properties:
        vlanAttachments:
          items:
            $ref: '#/components/schemas/VlanAttachment'
          type: array
          description: The list of VLAN attachments for the VRF.
        qosPolicy:
          $ref: '#/components/schemas/QosPolicy'
          description: 'The QOS policy applied to this VRF. The value is only meaningful when all the vlan attachments have the same QoS. This field should not be used for new integrations, use vlan attachment level qos instead. The field is left for backward-compatibility.'
        state:
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - PROVISIONED
          enumDescriptions:
            - The unspecified state.
            - The vrf is provisioning.
            - The vrf is provisioned.
          description: The possible state of VRF.
          type: string
        name:
          description: The name of the VRF.
          type: string
      id: VRF
    IntakeVlanAttachment:
      properties:
        id:
          type: string
          description: Identifier of the VLAN attachment.
        pairingKey:
          description: Attachment pairing key.
          type: string
      id: IntakeVlanAttachment
      description: A GCP vlan attachment.
      type: object
    Location:
      type: object
      properties:
        metadata:
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        displayName:
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
          type: string
        labels:
          type: object
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          additionalProperties:
            type: string
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
      id: Location
      description: A resource that represents a Google Cloud location.
    SubmitProvisioningConfigRequest:
      properties:
        provisioningConfig:
          description: Required. The ProvisioningConfig to create.
          $ref: '#/components/schemas/ProvisioningConfig'
        email:
          type: string
          description: Optional. Email provided to send a confirmation with provisioning config to.
      description: Request for SubmitProvisioningConfig.
      type: object
      id: SubmitProvisioningConfigRequest
    ListProvisioningQuotasResponse:
      properties:
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
        provisioningQuotas:
          description: The provisioning quotas registered in this project.
          type: array
          items:
            $ref: '#/components/schemas/ProvisioningQuota'
      description: Response message for the list of provisioning quotas.
      id: ListProvisioningQuotasResponse
      type: object
  parameters:
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
  x-stackQL-resources:
    locations:
      id: google.baremetalsolution.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
    networks:
      id: google.baremetalsolution.networks
      name: networks
      title: Networks
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks~1{networksId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks~1{networksId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rename:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks~1{networksId}:rename/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/networks/methods/list'
        insert: []
        update: []
        delete: []
    networks_network_usage:
      id: google.baremetalsolution.networks_network_usage
      name: networks_network_usage
      title: Networks Network Usage
      methods:
        list_network_usage:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks:listNetworkUsage/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/networks_network_usage/methods/list_network_usage'
        insert: []
        update: []
        delete: []
    instances:
      id: google.baremetalsolution.instances
      name: instances
      title: Instances
      methods:
        disable_interactive_serial_console:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:disableInteractiveSerialConsole/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:reset/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:start/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        detach_lun:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:detachLun/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rename:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:rename/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        enable_interactive_serial_console:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:enableInteractiveSerialConsole/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/list'
        insert: []
        update: []
        delete: []
    operations:
      id: google.baremetalsolution.operations
      name: operations
      title: Operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    volumes:
      id: google.baremetalsolution.volumes
      name: volumes
      title: Volumes
      methods:
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rename:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}:rename/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        evict:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}:evict/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resize:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}:resize/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/list'
        insert: []
        update: []
        delete: []
    snapshots:
      id: google.baremetalsolution.snapshots
      name: snapshots
      title: Snapshots
      methods:
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots~1{snapshotsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots~1{snapshotsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restore_volume_snapshot:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots~1{snapshotsId}:restoreVolumeSnapshot/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/get'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/delete'
    luns:
      id: google.baremetalsolution.luns
      name: luns
      title: Luns
      methods:
        evict:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1luns~1{lunsId}:evict/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1luns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1luns~1{lunsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/luns/methods/list'
          - $ref: '#/components/x-stackQL-resources/luns/methods/get'
        insert: []
        update: []
        delete: []
    provisioning_configs:
      id: google.baremetalsolution.provisioning_configs
      name: provisioning_configs
      title: Provisioning Configs
      methods:
        submit:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs:submit/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs~1{provisioningConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs~1{provisioningConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provisioning_configs/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/provisioning_configs/methods/create'
        update: []
        delete: []
    nfs_shares:
      id: google.baremetalsolution.nfs_shares
      name: nfs_shares
      title: Nfs Shares
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares~1{nfsSharesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares~1{nfsSharesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares~1{nfsSharesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rename:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares~1{nfsSharesId}:rename/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/nfs_shares/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/nfs_shares/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/nfs_shares/methods/delete'
    provisioning_quotas:
      id: google.baremetalsolution.provisioning_quotas
      name: provisioning_quotas
      title: Provisioning Quotas
      methods:
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningQuotas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provisioning_quotas/methods/list'
        insert: []
        update: []
        delete: []
    ssh_keys:
      id: google.baremetalsolution.ssh_keys
      name: ssh_keys
      title: Ssh Keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1sshKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1sshKeys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1sshKeys~1{sshKeysId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ssh_keys/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/ssh_keys/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/ssh_keys/methods/delete'
paths:
  '/v2/projects/{projectsId}/locations':
    parameters: &ref_1
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
    get:
      description: Lists information about the supported locations for this service.
      operationId: baremetalsolution.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}':
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: baremetalsolution.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}':
    parameters: *ref_1
    patch:
      description: Update details of a single network.
      operationId: baremetalsolution.projects.locations.networks.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networksId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: networks
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Get details of a single network.
      operationId: baremetalsolution.projects.locations.networks.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networksId
          required: true
          schema:
            type: string
      x-stackQL-resource: networks
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/networks':
    parameters: *ref_1
    get:
      description: List network in a given project and location.
      operationId: baremetalsolution.projects.locations.networks.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworksResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: networks
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}:rename':
    parameters: *ref_1
    post:
      description: 'RenameNetwork sets a new name for a network. Use with caution, previous names become immediately invalidated.'
      operationId: baremetalsolution.projects.locations.networks.rename
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameNetworkRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networksId
          required: true
          schema:
            type: string
      x-stackQL-resource: networks
      x-stackQL-method: rename
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage':
    parameters: *ref_1
    get:
      description: List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.
      operationId: baremetalsolution.projects.locations.networks.listNetworkUsage
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkUsageResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: networks_network_usage
      x-stackQL-method: list_network_usage
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disableInteractiveSerialConsole':
    parameters: *ref_1
    post:
      description: Disable the interactive serial console feature on an instance.
      operationId: baremetalsolution.projects.locations.instances.disableInteractiveSerialConsole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableInteractiveSerialConsoleRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: disable_interactive_serial_console
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset':
    parameters: *ref_1
    post:
      description: 'Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.'
      operationId: baremetalsolution.projects.locations.instances.reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetInstanceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: reset
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start':
    parameters: *ref_1
    post:
      description: Starts a server that was shutdown.
      operationId: baremetalsolution.projects.locations.instances.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartInstanceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: start
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/instances':
    parameters: *ref_1
    get:
      description: List servers in a given project and location.
      operationId: baremetalsolution.projects.locations.instances.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop':
    parameters: *ref_1
    post:
      description: Stop a running server.
      operationId: baremetalsolution.projects.locations.instances.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopInstanceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: stop
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}':
    parameters: *ref_1
    patch:
      description: Update details of a single server.
      operationId: baremetalsolution.projects.locations.instances.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Get details about a single server.
      operationId: baremetalsolution.projects.locations.instances.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun':
    parameters: *ref_1
    post:
      description: Detach LUN from Instance.
      operationId: baremetalsolution.projects.locations.instances.detachLun
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachLunRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: detach_lun
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:rename':
    parameters: *ref_1
    post:
      description: 'RenameInstance sets a new name for an instance. Use with caution, previous names become immediately invalidated.'
      operationId: baremetalsolution.projects.locations.instances.rename
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameInstanceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: rename
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:enableInteractiveSerialConsole':
    parameters: *ref_1
    post:
      description: Enable the interactive serial console feature on an instance.
      operationId: baremetalsolution.projects.locations.instances.enableInteractiveSerialConsole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableInteractiveSerialConsoleRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: enable_interactive_serial_console
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Get details about an operation.
      operationId: baremetalsolution.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}':
    parameters: *ref_1
    get:
      description: Get details of a single storage volume.
      operationId: baremetalsolution.projects.locations.volumes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-method: get
      x-stackQL-verb: exec
    patch:
      description: Update details of a single storage volume.
      operationId: baremetalsolution.projects.locations.volumes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:rename':
    parameters: *ref_1
    post:
      description: 'RenameVolume sets a new name for a volume. Use with caution, previous names become immediately invalidated.'
      operationId: baremetalsolution.projects.locations.volumes.rename
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameVolumeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-method: rename
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:evict':
    parameters: *ref_1
    post:
      description: Skips volume's cooloff and deletes it now. Volume must be in cooloff state.
      operationId: baremetalsolution.projects.locations.volumes.evict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvictVolumeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-method: evict
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize':
    parameters: *ref_1
    post:
      description: Emergency Volume resize.
      operationId: baremetalsolution.projects.locations.volumes.resize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResizeVolumeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-method: resize
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/volumes':
    parameters: *ref_1
    get:
      description: List storage volumes in a given project and location.
      operationId: baremetalsolution.projects.locations.volumes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVolumesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: volumes
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}':
    parameters: *ref_1
    get:
      description: Returns the specified snapshot resource. Returns INVALID_ARGUMENT if called for a non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshot'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a volume snapshot. Returns INVALID_ARGUMENT if called for a non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots':
    parameters: *ref_1
    get:
      description: Retrieves the list of snapshots for the specified volume. Returns a response with an empty list of snapshots if called for a non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVolumeSnapshotsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: list
      x-stackQL-verb: select
    post:
      description: Takes a snapshot of a boot volume. Returns INVALID_ARGUMENT if called for a non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeSnapshot'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshot'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restoreVolumeSnapshot':
    parameters: *ref_1
    post:
      description: Uses the specified snapshot to restore its parent volume. Returns INVALID_ARGUMENT if called for a non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreVolumeSnapshotRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: restore_volume_snapshot
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}:evict':
    parameters: *ref_1
    post:
      description: Skips lun's cooloff and deletes it now. Lun must be in cooloff state.
      operationId: baremetalsolution.projects.locations.volumes.luns.evict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvictLunRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: lunsId
          required: true
          schema:
            type: string
      x-stackQL-resource: luns
      x-stackQL-method: evict
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns':
    parameters: *ref_1
    get:
      description: List storage volume luns for given storage volume.
      operationId: baremetalsolution.projects.locations.volumes.luns.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: luns
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}':
    parameters: *ref_1
    get:
      description: Get details of a single storage logical unit number(LUN).
      operationId: baremetalsolution.projects.locations.volumes.luns.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: lunsId
          required: true
          schema:
            type: string
      x-stackQL-resource: luns
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit':
    parameters: *ref_1
    post:
      description: Submit a provisiong configuration for a given project.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.submit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitProvisioningConfigRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitProvisioningConfigResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: provisioning_configs
      x-stackQL-method: submit
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}':
    parameters: *ref_1
    get:
      description: Get ProvisioningConfig by name.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: provisioningConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: provisioning_configs
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Update existing ProvisioningConfig.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: provisioningConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: email
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: provisioning_configs
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs':
    parameters: *ref_1
    post:
      description: Create new ProvisioningConfig.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: email
          schema:
            type: string
      x-stackQL-resource: provisioning_configs
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}':
    parameters: *ref_1
    patch:
      description: Update details of a single NFS share.
      operationId: baremetalsolution.projects.locations.nfsShares.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NfsShare'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Delete an NFS share. The underlying volume is automatically deleted.
      operationId: baremetalsolution.projects.locations.nfsShares.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Get details of a single NFS share.
      operationId: baremetalsolution.projects.locations.nfsShares.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NfsShare'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/nfsShares':
    parameters: *ref_1
    post:
      description: Create an NFS share.
      operationId: baremetalsolution.projects.locations.nfsShares.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NfsShare'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: List NFS shares.
      operationId: baremetalsolution.projects.locations.nfsShares.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNfsSharesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}:rename':
    parameters: *ref_1
    post:
      description: 'RenameNfsShare sets a new name for an nfsshare. Use with caution, previous names become immediately invalidated.'
      operationId: baremetalsolution.projects.locations.nfsShares.rename
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameNfsShareRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NfsShare'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-method: rename
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas':
    parameters: *ref_1
    get:
      description: List the budget details to provision resources on a given project.
      operationId: baremetalsolution.projects.locations.provisioningQuotas.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvisioningQuotasResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: provisioning_quotas
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}/sshKeys':
    parameters: *ref_1
    get:
      description: Lists the public SSH keys registered for the specified project. These SSH keys are used only for the interactive serial console feature.
      operationId: baremetalsolution.projects.locations.sshKeys.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSSHKeysResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: ssh_keys
      x-stackQL-method: list
      x-stackQL-verb: select
    post:
      description: Register a public SSH key in the specified project for use with the interactive serial console feature.
      operationId: baremetalsolution.projects.locations.sshKeys.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSHKey'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: sshKeyId
          schema:
            type: string
      x-stackQL-resource: ssh_keys
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v2/projects/{projectsId}/locations/{locationsId}/sshKeys/{sshKeysId}':
    parameters: *ref_1
    delete:
      description: Deletes a public SSH key registered in the specified project.
      operationId: baremetalsolution.projects.locations.sshKeys.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sshKeysId
          required: true
          schema:
            type: string
      x-stackQL-resource: ssh_keys
      x-stackQL-method: delete
      x-stackQL-verb: delete
