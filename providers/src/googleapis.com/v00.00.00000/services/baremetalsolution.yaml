openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Bare Metal Solution API
  description: >-
    Provides ways to manage Bare Metal Solution hardware installed in a regional
    extension located near a Google Cloud data center.
  version: v2
  x-discovery-doc-revision: '20240909'
  x-generated-date: '2024-09-19'
externalDocs:
  url: https://cloud.google.com/bare-metal
servers:
  - url: https://baremetalsolution.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListInstancesResponse:
      id: ListInstancesResponse
      description: Response message for the list of servers.
      type: object
      properties:
        instances:
          description: The list of servers.
          type: array
          items:
            $ref: '#/components/schemas/Instance'
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Instance:
      id: Instance
      description: A server.
      type: object
      properties:
        name:
          description: >-
            Immutable. The resource name of this `Instance`. Resource names are
            schemeless URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. Format:
            `projects/{project}/locations/{location}/instances/{instance}`
          type: string
        id:
          description: >-
            Output only. An identifier for the `Instance`, generated by the
            backend.
          readOnly: true
          type: string
        createTime:
          description: Output only. Create a time stamp.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Update a time stamp.
          readOnly: true
          type: string
          format: google-datetime
        machineType:
          description: >-
            Immutable. The server type. [Available server
            types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
          type: string
        state:
          description: Output only. The state of the server.
          readOnly: true
          type: string
          enumDescriptions:
            - The server is in an unknown state.
            - The server is being provisioned.
            - The server is running.
            - The server has been deleted.
            - The server is being updated.
            - The server is starting.
            - The server is stopping.
            - The server is shutdown.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - DELETED
            - UPDATING
            - STARTING
            - STOPPING
            - SHUTDOWN
        hyperthreadingEnabled:
          description: >-
            True if you enable hyperthreading for the server, otherwise false.
            The default value is false.
          type: boolean
        labels:
          description: Labels as key value pairs.
          type: object
          additionalProperties:
            type: string
        luns:
          description: Immutable. List of LUNs associated with this server.
          type: array
          items:
            $ref: '#/components/schemas/Lun'
        volumes:
          description: >-
            Input only. List of Volumes to attach to this Instance on creation.
            This field won't be populated in Get/List responses.
          type: array
          items:
            $ref: '#/components/schemas/Volume'
        networks:
          description: Output only. List of networks associated with this server.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Network'
        interactiveSerialConsoleEnabled:
          description: >-
            Output only. True if the interactive serial console feature is
            enabled for the instance, false otherwise. The default value is
            false.
          readOnly: true
          type: boolean
        osImage:
          description: The OS image currently installed on the server.
          type: string
        pod:
          description: >-
            Immutable. Pod name. Pod is an independent part of infrastructure.
            Instance can only be connected to the assets (networks, volumes)
            allocated in the same pod.
          type: string
        networkTemplate:
          description: >-
            Instance network template name. For eg, bondaa-bondaa, bondab-nic,
            etc. Generally, the template name follows the syntax of "bond" or
            "nic".
          type: string
        logicalInterfaces:
          description: >-
            List of logical interfaces for the instance. The number of logical
            interfaces will be the same as number of hardware bond/nic on the
            chosen network template. For the non-multivlan configurations (for
            eg, existing servers) that use existing default network template
            (bondaa-bondaa), both the Instance.networks field and the
            Instance.logical_interfaces fields will be filled to ensure backward
            compatibility. For the others, only Instance.logical_interfaces will
            be filled.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudBaremetalsolutionV2LogicalInterface
        loginInfo:
          description: Output only. Text field about info for logging in.
          readOnly: true
          type: string
        workloadProfile:
          description: The workload profile for the instance.
          type: string
          enumDescriptions:
            - The workload profile is in an unknown state.
            - The workload profile is generic.
            - The workload profile is hana.
          enum:
            - WORKLOAD_PROFILE_UNSPECIFIED
            - WORKLOAD_PROFILE_GENERIC
            - WORKLOAD_PROFILE_HANA
        firmwareVersion:
          description: Output only. The firmware version for the instance.
          readOnly: true
          type: string
        sshKeys:
          description: Optional. List of SSH Keys used during instance provisioning.
          type: array
          items:
            type: string
        kmsKeyVersion:
          description: >-
            Optional. Name of the KMS crypto key version used to encrypt the
            initial passwords. The key has to have ASYMMETRIC_DECRYPT purpose.
            Format is
            `projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}`.
          type: string
    Lun:
      id: Lun
      description: A storage volume logical unit number (LUN).
      type: object
      properties:
        name:
          description: Output only. The name of the LUN.
          readOnly: true
          type: string
        id:
          description: An identifier for the LUN, generated by the backend.
          type: string
        state:
          description: The state of this storage volume.
          type: string
          enumDescriptions:
            - The LUN is in an unknown state.
            - The LUN is being created.
            - The LUN is being updated.
            - The LUN is ready for use.
            - The LUN has been requested to be deleted.
            - >-
              The LUN is in cool off state. It will be deleted after
              `expire_time`.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - UPDATING
            - READY
            - DELETING
            - COOL_OFF
        sizeGb:
          description: The size of this LUN, in GiB.
          type: string
          format: int64
        multiprotocolType:
          description: >-
            The LUN multiprotocol type ensures the characteristics of the LUN
            are optimized for each operating system.
          type: string
          enumDescriptions:
            - Server has no OS specified.
            - Server with Linux OS.
          enum:
            - MULTIPROTOCOL_TYPE_UNSPECIFIED
            - LINUX
        storageVolume:
          description: Display the storage volume for this LUN.
          type: string
        shareable:
          description: Display if this LUN can be shared between multiple physical servers.
          type: boolean
        bootLun:
          description: Display if this LUN is a boot LUN.
          type: boolean
        storageType:
          description: The storage type for this LUN.
          type: string
          enumDescriptions:
            - The storage type for this LUN is unknown.
            - This storage type for this LUN is SSD.
            - This storage type for this LUN is HDD.
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
        wwid:
          description: The WWID for this LUN.
          type: string
        expireTime:
          description: >-
            Output only. Time after which LUN will be fully deleted. It is
            filled only for LUNs in COOL_OFF state.
          readOnly: true
          type: string
          format: google-datetime
        instances:
          description: Output only. Instances this Lun is attached to.
          readOnly: true
          type: array
          items:
            type: string
    Volume:
      id: Volume
      description: A storage volume.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of this `Volume`. Resource names are
            schemeless URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. Format:
            `projects/{project}/locations/{location}/volumes/{volume}`
          readOnly: true
          type: string
        id:
          description: An identifier for the `Volume`, generated by the backend.
          type: string
        storageType:
          description: The storage type for this volume.
          type: string
          enumDescriptions:
            - The storage type for this volume is unknown.
            - The storage type for this volume is SSD.
            - This storage type for this volume is HDD.
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
        state:
          description: The state of this storage volume.
          type: string
          enumDescriptions:
            - The storage volume is in an unknown state.
            - The storage volume is being created.
            - The storage volume is ready for use.
            - The storage volume has been requested to be deleted.
            - The storage volume is being updated.
            - >-
              The storage volume is in cool off state. It will be deleted after
              `expire_time`.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
            - COOL_OFF
        requestedSizeGib:
          description: The requested size of this storage volume, in GiB.
          type: string
          format: int64
        originallyRequestedSizeGib:
          description: Originally requested size, in GiB.
          type: string
          format: int64
        currentSizeGib:
          description: >-
            The current size of this storage volume, in GiB, including space
            reserved for snapshots. This size might be different than the
            requested size if the storage volume has been configured with auto
            grow or auto shrink.
          type: string
          format: int64
        emergencySizeGib:
          description: >-
            Additional emergency size that was requested for this Volume, in
            GiB. current_size_gib includes this value.
          type: string
          format: int64
        maxSizeGib:
          description: Maximum size volume can be expanded to in case of evergency, in GiB.
          type: string
          format: int64
        autoGrownSizeGib:
          description: >-
            The size, in GiB, that this storage volume has expanded as a result
            of an auto grow policy. In the absence of auto-grow, the value is 0.
          type: string
          format: int64
        remainingSpaceGib:
          description: >-
            The space remaining in the storage volume for new LUNs, in GiB,
            excluding space reserved for snapshots.
          type: string
          format: int64
        snapshotReservationDetail:
          description: >-
            Details about snapshot space reservation and usage on the storage
            volume.
          $ref: '#/components/schemas/SnapshotReservationDetail'
        snapshotAutoDeleteBehavior:
          description: The behavior to use when snapshot reserved space is full.
          type: string
          enumDescriptions:
            - The unspecified behavior.
            - >-
              Don't delete any snapshots. This disables new snapshot creation,
              as long as the snapshot reserved space is full.
            - Delete the oldest snapshots first.
            - Delete the newest snapshots first.
          enum:
            - SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED
            - DISABLED
            - OLDEST_FIRST
            - NEWEST_FIRST
        labels:
          description: Labels as key value pairs.
          type: object
          additionalProperties:
            type: string
        snapshotEnabled:
          description: Whether snapshots are enabled.
          type: boolean
        pod:
          description: >-
            Immutable. Pod name. Pod is an independent part of infrastructure.
            Volume can only be connected to the instances allocated in the same
            pod.
          type: string
        protocol:
          description: Output only. Storage protocol for the Volume.
          readOnly: true
          type: string
          enumDescriptions:
            - Value is not specified.
            - Fibre Channel protocol.
            - >-
              NFS protocol means Volume is a NFS Share volume. Such volumes
              cannot be manipulated via Volumes API.
          enum:
            - PROTOCOL_UNSPECIFIED
            - FIBRE_CHANNEL
            - NFS
        bootVolume:
          description: >-
            Output only. Whether this volume is a boot volume. A boot volume is
            one which contains a boot LUN.
          readOnly: true
          type: boolean
        performanceTier:
          description: Immutable. Performance tier of the Volume. Default is SHARED.
          type: string
          enumDescriptions:
            - Value is not specified.
            - Regular volumes, shared aggregates.
            - Assigned aggregates.
            - High throughput aggregates.
            - QoS 2.0 high performance storage.
          enum:
            - VOLUME_PERFORMANCE_TIER_UNSPECIFIED
            - VOLUME_PERFORMANCE_TIER_SHARED
            - VOLUME_PERFORMANCE_TIER_ASSIGNED
            - VOLUME_PERFORMANCE_TIER_HT
            - VOLUME_PERFORMANCE_TIER_QOS2_PERFORMANCE
        notes:
          description: >-
            Input only. User-specified notes for new Volume. Used to provision
            Volumes that require manual intervention.
          type: string
        workloadProfile:
          description: The workload profile for the volume.
          type: string
          enumDescriptions:
            - The workload profile is in an unknown state.
            - The workload profile is generic.
            - The workload profile is hana.
          enum:
            - WORKLOAD_PROFILE_UNSPECIFIED
            - GENERIC
            - HANA
        expireTime:
          description: >-
            Output only. Time after which volume will be fully deleted. It is
            filled only for volumes in COOLOFF state.
          readOnly: true
          type: string
          format: google-datetime
        instances:
          description: >-
            Output only. Instances this Volume is attached to. This field is set
            only in Get requests.
          readOnly: true
          type: array
          items:
            type: string
        attached:
          description: >-
            Output only. Is the Volume attached at at least one instance. This
            field is a lightweight counterpart of `instances` field. It is
            filled in List responses as well.
          readOnly: true
          type: boolean
    SnapshotReservationDetail:
      id: SnapshotReservationDetail
      description: >-
        Details about snapshot space reservation and usage on the storage
        volume.
      type: object
      properties:
        reservedSpaceGib:
          description: >-
            The space on this storage volume reserved for snapshots, shown in
            GiB.
          type: string
          format: int64
        reservedSpaceUsedPercent:
          description: >-
            The percent of snapshot space on this storage volume actually being
            used by the snapshot copies. This value might be higher than 100% if
            the snapshot copies have overflowed into the data portion of the
            storage volume.
          type: integer
          format: int32
        reservedSpaceRemainingGib:
          description: >-
            The amount, in GiB, of available space in this storage volume's
            reserved snapshot space.
          type: string
          format: int64
        reservedSpacePercent:
          description: >-
            Percent of the total Volume size reserved for snapshot copies.
            Enabling snapshots requires reserving 20% or more of the storage
            volume space for snapshots. Maximum reserved space for snapshots is
            40%. Setting this field will effectively set snapshot_enabled to
            true.
          type: integer
          format: int32
    Network:
      id: Network
      description: A Network.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of this `Network`. Resource names are
            schemeless URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. Format:
            `projects/{project}/locations/{location}/networks/{network}`
          readOnly: true
          type: string
        id:
          description: An identifier for the `Network`, generated by the backend.
          type: string
        type:
          description: The type of this network.
          type: string
          enumDescriptions:
            - Unspecified value.
            - Client network, a network peered to a Google Cloud VPC.
            - >-
              Private network, a network local to the Bare Metal Solution
              environment.
          enum:
            - TYPE_UNSPECIFIED
            - CLIENT
            - PRIVATE
        ipAddress:
          description: IP address configured.
          type: string
        macAddress:
          description: List of physical interfaces.
          type: array
          items:
            type: string
        state:
          description: The Network state.
          type: string
          enumDescriptions:
            - The Network is in an unknown state.
            - The Network is provisioning.
            - The Network has been provisioned.
            - The Network is being deprovisioned.
            - The Network is being updated.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - PROVISIONED
            - DEPROVISIONING
            - UPDATING
        vlanId:
          description: The vlan id of the Network.
          type: string
        cidr:
          description: The cidr of the Network.
          type: string
        vrf:
          description: >-
            The Vrf for the Network. Use this only if a new Vrf needs to be
            created.
          $ref: '#/components/schemas/VRF'
        vrfAttachment:
          description: >-
            Optional. The name of a pre-existing Vrf that the network should be
            attached to. Format is `vrfs/{vrf}`.
          type: string
        labels:
          description: Labels as key value pairs.
          type: object
          additionalProperties:
            type: string
        servicesCidr:
          description: IP range for reserved for services (e.g. NFS).
          type: string
        reservations:
          description: >-
            List of IP address reservations in this network. When updating this
            field, an error will be generated if a reservation conflicts with an
            IP address already allocated to a physical server.
          type: array
          items:
            $ref: '#/components/schemas/NetworkAddressReservation'
        pod:
          description: >-
            Immutable. Pod name. Pod is an independent part of infrastructure.
            Network can only be connected to the assets (instances, nfsshares)
            allocated in the same pod.
          type: string
        mountPoints:
          description: Input only. List of mount points to attach the network to.
          type: array
          items:
            $ref: '#/components/schemas/NetworkMountPoint'
        jumboFramesEnabled:
          description: Whether network uses standard frames or jumbo ones.
          type: boolean
        gatewayIp:
          description: Output only. Gateway ip address.
          readOnly: true
          type: string
    VRF:
      id: VRF
      description: A network VRF.
      type: object
      properties:
        name:
          description: The name of the VRF.
          type: string
        state:
          description: The possible state of VRF.
          type: string
          enumDescriptions:
            - The unspecified state.
            - The vrf is provisioning.
            - The vrf is provisioned.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - PROVISIONED
        qosPolicy:
          description: >-
            The QOS policy applied to this VRF. The value is only meaningful
            when all the vlan attachments have the same QoS. This field should
            not be used for new integrations, use vlan attachment level qos
            instead. The field is left for backward-compatibility.
          $ref: '#/components/schemas/QosPolicy'
        vlanAttachments:
          description: The list of VLAN attachments for the VRF.
          type: array
          items:
            $ref: '#/components/schemas/VlanAttachment'
    QosPolicy:
      id: QosPolicy
      description: QOS policy parameters.
      type: object
      properties:
        bandwidthGbps:
          description: The bandwidth permitted by the QOS policy, in gbps.
          type: number
          format: double
    VlanAttachment:
      id: VlanAttachment
      description: VLAN attachment details.
      type: object
      properties:
        peerVlanId:
          description: The peer vlan ID of the attachment.
          type: string
          format: int64
        peerIp:
          description: The peer IP of the attachment.
          type: string
        routerIp:
          description: The router IP of the attachment.
          type: string
        pairingKey:
          description: Input only. Pairing key.
          type: string
        qosPolicy:
          description: >-
            The QOS policy applied to this VLAN attachment. This value should be
            preferred to using qos at vrf level.
          $ref: '#/components/schemas/QosPolicy'
        id:
          description: Immutable. The identifier of the attachment within vrf.
          type: string
        interconnectAttachment:
          description: >-
            Optional. The name of the vlan attachment within vrf. This is of the
            form
            projects/{project_number}/regions/{region}/interconnectAttachments/{interconnect_attachment}
          type: string
    NetworkAddressReservation:
      id: NetworkAddressReservation
      description: A reservation of one or more addresses in a network.
      type: object
      properties:
        startAddress:
          description: >-
            The first address of this reservation block. Must be specified as a
            single IPv4 address, e.g. 10.1.2.2.
          type: string
        endAddress:
          description: >-
            The last address of this reservation block, inclusive. I.e., for
            cases when reservations are only single addresses, end_address and
            start_address will be the same. Must be specified as a single IPv4
            address, e.g. 10.1.2.2.
          type: string
        note:
          description: A note about this reservation, intended for human consumption.
          type: string
    NetworkMountPoint:
      id: NetworkMountPoint
      description: Mount point for a network.
      type: object
      properties:
        instance:
          description: Instance to attach network to.
          type: string
        logicalInterface:
          description: Logical interface to detach from.
          type: string
        defaultGateway:
          description: Network should be a default gateway.
          type: boolean
        ipAddress:
          description: Ip address of the server.
          type: string
    GoogleCloudBaremetalsolutionV2LogicalInterface:
      id: GoogleCloudBaremetalsolutionV2LogicalInterface
      description: >-
        Each logical interface represents a logical abstraction of the
        underlying physical interface (for eg. bond, nic) of the instance. Each
        logical interface can effectively map to multiple network-IP pairs and
        still be mapped to one underlying physical interface.
      type: object
      properties:
        logicalNetworkInterfaces:
          description: List of logical network interfaces within a logical interface.
          type: array
          items:
            $ref: '#/components/schemas/LogicalNetworkInterface'
        name:
          description: >-
            Interface name. This is of syntax or and forms part of the network
            template name.
          type: string
        interfaceIndex:
          description: >-
            The index of the logical interface mapping to the index of the
            hardware bond or nic on the chosen network template. This field is
            deprecated.
          deprecated: true
          type: integer
          format: int32
    LogicalNetworkInterface:
      id: LogicalNetworkInterface
      description: Each logical network interface is effectively a network and IP pair.
      type: object
      properties:
        network:
          description: Name of the network
          type: string
        ipAddress:
          description: IP address in the network
          type: string
        defaultGateway:
          description: >-
            Whether this interface is the default gateway for the instance. Only
            one interface can be the default gateway for the instance.
          type: boolean
        networkType:
          description: Type of network.
          type: string
          enumDescriptions:
            - Unspecified value.
            - Client network, a network peered to a Google Cloud VPC.
            - >-
              Private network, a network local to the Bare Metal Solution
              environment.
          enum:
            - TYPE_UNSPECIFIED
            - CLIENT
            - PRIVATE
        id:
          description: An identifier for the `Network`, generated by the backend.
          type: string
    LoadInstanceAuthInfoResponse:
      id: LoadInstanceAuthInfoResponse
      description: Response for LoadInstanceAuthInfo.
      type: object
      properties:
        userAccounts:
          description: Map of username to the user account info.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserAccount'
        sshKeys:
          description: List of ssh keys.
          type: array
          items:
            $ref: '#/components/schemas/SSHKey'
    UserAccount:
      id: UserAccount
      description: User account provisioned for the customer.
      type: object
      properties:
        encryptedPassword:
          description: Encrypted initial password value.
          type: string
        kmsKeyVersion:
          description: KMS CryptoKey Version used to encrypt the password.
          type: string
    SSHKey:
      id: SSHKey
      description: >-
        An SSH key, used for authorizing with the interactive serial console
        feature.
      type: object
      properties:
        name:
          description: >-
            Output only. The name of this SSH key. Currently, the only valid
            value for the location is "global".
          readOnly: true
          type: string
        publicKey:
          description: The public SSH key. This must be in OpenSSH .authorized_keys format.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    ReimageInstanceRequest:
      id: ReimageInstanceRequest
      description: Message requesting to perform reimage operation on a server.
      type: object
      properties:
        osImage:
          description: >-
            Required. The OS image code of the image which will be used in the
            reimage operation.
          type: string
        kmsKeyVersion:
          description: >-
            Optional. Name of the KMS crypto key version used to encrypt the
            initial passwords. The key has to have ASYMMETRIC_DECRYPT purpose.
            Format is
            `projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}`.
          type: string
        sshKeys:
          description: Optional. List of SSH Keys used during reimaging an instance.
          type: array
          items:
            type: string
    EnableHyperthreadingRequest:
      id: EnableHyperthreadingRequest
      description: >-
        Message requesting to perform enable hyperthreading operation on a
        server.
      type: object
      properties: {}
    DisableHyperthreadingRequest:
      id: DisableHyperthreadingRequest
      description: >-
        Message requesting to perform disable hyperthreading operation on a
        server.
      type: object
      properties: {}
    RenameInstanceRequest:
      id: RenameInstanceRequest
      description: Message requesting rename of a server.
      type: object
      properties:
        newInstanceId:
          description: Required. The new `id` of the instance.
          type: string
    ResetInstanceRequest:
      id: ResetInstanceRequest
      description: Message requesting to reset a server.
      type: object
      properties: {}
    StartInstanceRequest:
      id: StartInstanceRequest
      description: Message requesting to start a server.
      type: object
      properties: {}
    StopInstanceRequest:
      id: StopInstanceRequest
      description: Message requesting to stop a server.
      type: object
      properties: {}
    EnableInteractiveSerialConsoleRequest:
      id: EnableInteractiveSerialConsoleRequest
      description: Message for enabling the interactive serial console on an instance.
      type: object
      properties: {}
    DisableInteractiveSerialConsoleRequest:
      id: DisableInteractiveSerialConsoleRequest
      description: Message for disabling the interactive serial console on an instance.
      type: object
      properties: {}
    DetachLunRequest:
      id: DetachLunRequest
      description: Message for detach specific LUN from an Instance.
      type: object
      properties:
        lun:
          description: Required. Name of the Lun to detach.
          type: string
        skipReboot:
          description: If true, performs lun unmapping without instance reboot.
          type: boolean
    ListSSHKeysResponse:
      id: ListSSHKeysResponse
      description: Message for response of ListSSHKeys.
      type: object
      properties:
        sshKeys:
          description: The SSH keys registered in the project.
          type: array
          items:
            $ref: '#/components/schemas/SSHKey'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    ListVolumesResponse:
      id: ListVolumesResponse
      description: Response message containing the list of storage volumes.
      type: object
      properties:
        volumes:
          description: The list of storage volumes.
          type: array
          items:
            $ref: '#/components/schemas/Volume'
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    RenameVolumeRequest:
      id: RenameVolumeRequest
      description: Message requesting rename of a server.
      type: object
      properties:
        newVolumeId:
          description: Required. The new `id` of the volume.
          type: string
    EvictVolumeRequest:
      id: EvictVolumeRequest
      description: Request for skip volume cooloff and delete it.
      type: object
      properties: {}
    ResizeVolumeRequest:
      id: ResizeVolumeRequest
      description: Request for emergency resize Volume.
      type: object
      properties:
        sizeGib:
          description: New Volume size, in GiB.
          type: string
          format: int64
    ListNetworksResponse:
      id: ListNetworksResponse
      description: Response message containing the list of networks.
      type: object
      properties:
        networks:
          description: The list of networks.
          type: array
          items:
            $ref: '#/components/schemas/Network'
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    ListNetworkUsageResponse:
      id: ListNetworkUsageResponse
      description: Response with Networks with IPs
      type: object
      properties:
        networks:
          description: Networks with IPs.
          type: array
          items:
            $ref: '#/components/schemas/NetworkUsage'
    NetworkUsage:
      id: NetworkUsage
      description: Network with all used IP addresses.
      type: object
      properties:
        network:
          description: Network.
          $ref: '#/components/schemas/Network'
        usedIps:
          description: All used IP addresses in this network.
          type: array
          items:
            type: string
    VolumeSnapshot:
      id: VolumeSnapshot
      description: A snapshot of a volume. Only boot volumes can have snapshots.
      type: object
      properties:
        name:
          description: The name of the snapshot.
          type: string
        id:
          description: >-
            Output only. An identifier for the snapshot, generated by the
            backend.
          readOnly: true
          type: string
        description:
          description: The description of the snapshot.
          type: string
        createTime:
          description: Output only. The creation time of the snapshot.
          readOnly: true
          type: string
          format: google-datetime
        storageVolume:
          description: Output only. The name of the volume which this snapshot belongs to.
          readOnly: true
          type: string
        type:
          description: >-
            Output only. The type of the snapshot which indicates whether it was
            scheduled or manual/ad-hoc.
          readOnly: true
          type: string
          enumDescriptions:
            - Type is not specified.
            - Snapshot was taken manually by user.
            - Snapshot was taken automatically as a part of a snapshot schedule.
          enum:
            - SNAPSHOT_TYPE_UNSPECIFIED
            - AD_HOC
            - SCHEDULED
    RestoreVolumeSnapshotRequest:
      id: RestoreVolumeSnapshotRequest
      description: Message for restoring a volume snapshot.
      type: object
      properties: {}
    ListVolumeSnapshotsResponse:
      id: ListVolumeSnapshotsResponse
      description: Response message containing the list of volume snapshots.
      type: object
      properties:
        volumeSnapshots:
          description: The list of snapshots.
          type: array
          items:
            $ref: '#/components/schemas/VolumeSnapshot'
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    ListLunsResponse:
      id: ListLunsResponse
      description: Response message containing the list of storage volume luns.
      type: object
      properties:
        luns:
          description: The list of luns.
          type: array
          items:
            $ref: '#/components/schemas/Lun'
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    EvictLunRequest:
      id: EvictLunRequest
      description: Request for skip lun cooloff and delete it.
      type: object
      properties: {}
    NfsShare:
      id: NfsShare
      description: An NFS share.
      type: object
      properties:
        name:
          description: Immutable. The name of the NFS share.
          type: string
        nfsShareId:
          description: >-
            Output only. An identifier for the NFS share, generated by the
            backend. This field will be deprecated in the future, use `id`
            instead.
          readOnly: true
          type: string
        id:
          description: >-
            Output only. An identifier for the NFS share, generated by the
            backend. This is the same value as nfs_share_id and will replace it
            in the future.
          readOnly: true
          type: string
        state:
          description: Output only. The state of the NFS share.
          readOnly: true
          type: string
          enumDescriptions:
            - The share is in an unknown state.
            - The share has been provisioned.
            - The NFS Share is being created.
            - The NFS Share is being updated.
            - The NFS Share has been requested to be deleted.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONED
            - CREATING
            - UPDATING
            - DELETING
        volume:
          description: >-
            Output only. The underlying volume of the share. Created
            automatically during provisioning.
          readOnly: true
          type: string
        allowedClients:
          description: List of allowed access points.
          type: array
          items:
            $ref: '#/components/schemas/AllowedClient'
        labels:
          description: Labels as key value pairs.
          type: object
          additionalProperties:
            type: string
        requestedSizeGib:
          description: The requested size, in GiB.
          type: string
          format: int64
        storageType:
          description: Immutable. The storage type of the underlying volume.
          type: string
          enumDescriptions:
            - The storage type for this volume is unknown.
            - The storage type for this volume is SSD.
            - This storage type for this volume is HDD.
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
        pod:
          description: >-
            Immutable. Pod name. Pod is an independent part of infrastructure.
            NFSShare can only be connected to the assets (networks, instances)
            allocated in the same pod.
          type: string
    AllowedClient:
      id: AllowedClient
      description: Represents an 'access point' for the share.
      type: object
      properties:
        network:
          description: The network the access point sits on.
          type: string
        shareIp:
          description: >-
            Output only. The IP address of the share on this network. Assigned
            automatically during provisioning based on the network's
            services_cidr.
          readOnly: true
          type: string
        allowedClientsCidr:
          description: The subnet of IP addresses permitted to access the share.
          type: string
        mountPermissions:
          description: Mount permissions.
          type: string
          enumDescriptions:
            - Permissions were not specified.
            - NFS share can be mount with read-only permissions.
            - NFS share can be mount with read-write permissions.
          enum:
            - MOUNT_PERMISSIONS_UNSPECIFIED
            - READ
            - READ_WRITE
        allowDev:
          description: Allow dev flag. Which controls whether to allow creation of devices.
          type: boolean
        allowSuid:
          description: Allow the setuid flag.
          type: boolean
        noRootSquash:
          description: >-
            Disable root squashing, which is a feature of NFS. Root squash is a
            special mapping of the remote superuser (root) identity when using
            identity authentication.
          type: boolean
        nfsPath:
          description: >-
            Output only. The path to access NFS, in format shareIP:/InstanceID
            InstanceID is the generated ID instead of customer provided name.
            example like "10.0.0.0:/g123456789-nfs001"
          readOnly: true
          type: string
    ListNfsSharesResponse:
      id: ListNfsSharesResponse
      description: Response message containing the list of NFS shares.
      type: object
      properties:
        nfsShares:
          description: The list of NFS shares.
          type: array
          items:
            $ref: '#/components/schemas/NfsShare'
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    RenameNfsShareRequest:
      id: RenameNfsShareRequest
      description: Message requesting rename of a server.
      type: object
      properties:
        newNfsshareId:
          description: Required. The new `id` of the nfsshare.
          type: string
    ListProvisioningQuotasResponse:
      id: ListProvisioningQuotasResponse
      description: Response message for the list of provisioning quotas.
      type: object
      properties:
        provisioningQuotas:
          description: The provisioning quotas registered in this project.
          type: array
          items:
            $ref: '#/components/schemas/ProvisioningQuota'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    ProvisioningQuota:
      id: ProvisioningQuota
      description: A provisioning quota for a given project.
      type: object
      properties:
        name:
          description: Output only. The name of the provisioning quota.
          readOnly: true
          type: string
        assetType:
          description: The asset type of this provisioning quota.
          type: string
          enumDescriptions:
            - The unspecified type.
            - The server asset type.
            - The storage asset type.
            - The network asset type.
          enum:
            - ASSET_TYPE_UNSPECIFIED
            - ASSET_TYPE_SERVER
            - ASSET_TYPE_STORAGE
            - ASSET_TYPE_NETWORK
        gcpService:
          description: The gcp service of the provisioning quota.
          type: string
        location:
          description: The specific location of the provisioining quota.
          type: string
        availableCount:
          description: The available count of the provisioning quota.
          type: integer
          format: int32
        instanceQuota:
          description: Instance quota.
          $ref: '#/components/schemas/InstanceQuota'
        serverCount:
          description: Server count.
          type: string
          format: int64
        networkBandwidth:
          description: Network bandwidth, Gbps
          type: string
          format: int64
        storageGib:
          description: Storage size (GB).
          type: string
          format: int64
    InstanceQuota:
      id: InstanceQuota
      description: A resource budget.
      type: object
      properties:
        name:
          description: Output only. The name of the instance quota.
          readOnly: true
          type: string
        instanceType:
          description: 'Instance type. Deprecated: use gcp_service.'
          deprecated: true
          type: string
        gcpService:
          description: The gcp service of the provisioning quota.
          type: string
        location:
          description: Location where the quota applies.
          type: string
        availableMachineCount:
          description: >-
            Number of machines than can be created for the given location and
            instance_type.
          type: integer
          format: int32
    SubmitProvisioningConfigRequest:
      id: SubmitProvisioningConfigRequest
      description: Request for SubmitProvisioningConfig.
      type: object
      properties:
        provisioningConfig:
          description: Required. The ProvisioningConfig to create.
          $ref: '#/components/schemas/ProvisioningConfig'
        email:
          description: >-
            Optional. Email provided to send a confirmation with provisioning
            config to.
          type: string
    ProvisioningConfig:
      id: ProvisioningConfig
      description: A provisioning configuration.
      type: object
      properties:
        name:
          description: >-
            Output only. The system-generated name of the provisioning config.
            This follows the UUID format.
          readOnly: true
          type: string
        instances:
          description: Instances to be created.
          type: array
          items:
            $ref: '#/components/schemas/InstanceConfig'
        networks:
          description: Networks to be created.
          type: array
          items:
            $ref: '#/components/schemas/NetworkConfig'
        volumes:
          description: Volumes to be created.
          type: array
          items:
            $ref: '#/components/schemas/VolumeConfig'
        ticketId:
          description: A generated ticket id to track provisioning request.
          type: string
        handoverServiceAccount:
          description: >-
            A service account to enable customers to access instance credentials
            upon handover.
          type: string
        email:
          description: >-
            Email provided to send a confirmation with provisioning config to.
            Deprecated in favour of email field in request messages.
          deprecated: true
          type: string
        state:
          description: Output only. State of ProvisioningConfig.
          readOnly: true
          type: string
          enumDescriptions:
            - State wasn't specified.
            - ProvisioningConfig is a draft and can be freely modified.
            - ProvisioningConfig was already submitted and cannot be modified.
            - >-
              ProvisioningConfig was in the provisioning state. Initially this
              state comes from the work order table in big query when SNOW is
              used. Later this field can be set by the work order API.
            - ProvisioningConfig was provisioned, meaning the resources exist.
            - >-
              ProvisioningConfig was validated. A validation tool will be run to
              set this state.
            - ProvisioningConfig was canceled.
            - The request is submitted for provisioning, with error return.
          enum:
            - STATE_UNSPECIFIED
            - DRAFT
            - SUBMITTED
            - PROVISIONING
            - PROVISIONED
            - VALIDATED
            - CANCELLED
            - FAILED
        location:
          description: >-
            Optional. Location name of this ProvisioningConfig. It is optional
            only for Intake UI transition period.
          type: string
        updateTime:
          description: Output only. Last update timestamp.
          readOnly: true
          type: string
          format: google-datetime
        cloudConsoleUri:
          description: >-
            Output only. URI to Cloud Console UI view of this provisioning
            config.
          readOnly: true
          type: string
        vpcScEnabled:
          description: If true, VPC SC is enabled for the cluster.
          type: boolean
        statusMessage:
          description: Optional status messages associated with the FAILED state.
          type: string
        customId:
          description: Optional. The user-defined identifier of the provisioning config.
          type: string
        pod:
          description: >-
            Optional. Pod name. Pod is an independent part of infrastructure.
            Instance can be connected to the assets (networks, volumes,
            nfsshares) allocated in the same pod only.
          type: string
    InstanceConfig:
      id: InstanceConfig
      description: Configuration parameters for a new instance.
      type: object
      properties:
        name:
          description: The name of the instance config.
          type: string
        id:
          description: >-
            A transient unique identifier to idenfity an instance within an
            ProvisioningConfig request.
          deprecated: true
          type: string
        instanceType:
          description: >-
            Instance type. [Available
            types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
          type: string
        hyperthreading:
          description: >-
            Whether the instance should be provisioned with Hyperthreading
            enabled.
          type: boolean
        osImage:
          description: >-
            OS image to initialize the instance. [Available
            images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
          type: string
        clientNetwork:
          description: >-
            Client network address. Filled if InstanceConfig.multivlan_config is
            false.
          deprecated: true
          $ref: '#/components/schemas/NetworkAddress'
        privateNetwork:
          description: >-
            Private network address, if any. Filled if
            InstanceConfig.multivlan_config is false.
          deprecated: true
          $ref: '#/components/schemas/NetworkAddress'
        userNote:
          description: >-
            User note field, it can be used by customers to add additional
            information for the BMS Ops team .
          type: string
        accountNetworksEnabled:
          description: >-
            If true networks can be from different projects of the same vendor
            account.
          type: boolean
        networkConfig:
          description: The type of network configuration on the instance.
          type: string
          enumDescriptions:
            - The unspecified network configuration.
            - Instance part of single client network and single private network.
            - >-
              Instance part of multiple (or single) client networks and private
              networks.
          enum:
            - NETWORKCONFIG_UNSPECIFIED
            - SINGLE_VLAN
            - MULTI_VLAN
        networkTemplate:
          description: >-
            Server network template name. Filled if
            InstanceConfig.multivlan_config is true.
          type: string
        logicalInterfaces:
          description: >-
            List of logical interfaces for the instance. The number of logical
            interfaces will be the same as number of hardware bond/nic on the
            chosen network template. Filled if InstanceConfig.multivlan_config
            is true.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudBaremetalsolutionV2LogicalInterface
        sshKeyNames:
          description: Optional. List of names of ssh keys used to provision the instance.
          type: array
          items:
            type: string
        kmsKeyVersion:
          description: >-
            Name of the KMS crypto key version used to encrypt the initial
            passwords. The key has to have ASYMMETRIC_DECRYPT purpose.
          type: string
    NetworkAddress:
      id: NetworkAddress
      description: A network.
      type: object
      properties:
        networkId:
          description: >-
            Id of the network to use, within the same ProvisioningConfig
            request.
          type: string
        address:
          description: IPv4 address to be assigned to the server.
          type: string
        existingNetworkId:
          description: Name of the existing network to use.
          type: string
    NetworkConfig:
      id: NetworkConfig
      description: Configuration parameters for a new network.
      type: object
      properties:
        name:
          description: Output only. The name of the network config.
          readOnly: true
          type: string
        id:
          description: >-
            A transient unique identifier to identify a volume within an
            ProvisioningConfig request.
          type: string
        type:
          description: The type of this network, either Client or Private.
          type: string
          enumDescriptions:
            - Unspecified value.
            - Client network, that is a network peered to a GCP VPC.
            - Private network, that is a network local to the BMS POD.
          enum:
            - TYPE_UNSPECIFIED
            - CLIENT
            - PRIVATE
        bandwidth:
          description: Interconnect bandwidth. Set only when type is CLIENT.
          type: string
          enumDescriptions:
            - Unspecified value.
            - 1 Gbps.
            - 2 Gbps.
            - 5 Gbps.
            - 10 Gbps.
          enum:
            - BANDWIDTH_UNSPECIFIED
            - BW_1_GBPS
            - BW_2_GBPS
            - BW_5_GBPS
            - BW_10_GBPS
        vlanAttachments:
          description: >-
            List of VLAN attachments. As of now there are always 2 attachments,
            but it is going to change in the future (multi vlan). Use only one
            of vlan_attachments or vrf
          type: array
          items:
            $ref: '#/components/schemas/IntakeVlanAttachment'
        vrf:
          description: >-
            Optional. The name of a pre-existing Vrf that the network should be
            attached to. Format is `vrfs/{vrf}`. If vrf is specified,
            vlan_attachments must be empty.
          type: string
        cidr:
          description: CIDR range of the network.
          type: string
        serviceCidr:
          description: Service CIDR, if any.
          type: string
          enumDescriptions:
            - Unspecified value.
            - Services are disabled for the given network.
            - Use the highest /26 block of the network to host services.
            - Use the highest /27 block of the network to host services.
            - Use the highest /28 block of the network to host services.
          enum:
            - SERVICE_CIDR_UNSPECIFIED
            - DISABLED
            - HIGH_26
            - HIGH_27
            - HIGH_28
        userNote:
          description: >-
            User note field, it can be used by customers to add additional
            information for the BMS Ops team .
          type: string
        gcpService:
          description: >-
            The GCP service of the network. Available gcp_service are in
            https://cloud.google.com/bare-metal/docs/bms-planning.
          type: string
        vlanSameProject:
          description: Whether the VLAN attachment pair is located in the same project.
          type: boolean
        jumboFramesEnabled:
          description: The JumboFramesEnabled option for customer to set.
          type: boolean
    IntakeVlanAttachment:
      id: IntakeVlanAttachment
      description: A GCP vlan attachment.
      type: object
      properties:
        id:
          description: Identifier of the VLAN attachment.
          type: string
        pairingKey:
          description: Attachment pairing key.
          type: string
    VolumeConfig:
      id: VolumeConfig
      description: Configuration parameters for a new volume.
      type: object
      properties:
        name:
          description: Output only. The name of the volume config.
          readOnly: true
          type: string
        id:
          description: >-
            A transient unique identifier to identify a volume within an
            ProvisioningConfig request.
          type: string
        snapshotsEnabled:
          description: Whether snapshots should be enabled.
          type: boolean
        type:
          description: The type of this Volume.
          type: string
          enumDescriptions:
            - The unspecified type.
            - This Volume is on flash.
            - This Volume is on disk.
          enum:
            - TYPE_UNSPECIFIED
            - FLASH
            - DISK
        protocol:
          description: Volume protocol.
          type: string
          enumDescriptions:
            - Unspecified value.
            - Fibre channel.
            - Network file system.
          enum:
            - PROTOCOL_UNSPECIFIED
            - PROTOCOL_FC
            - PROTOCOL_NFS
        sizeGb:
          description: The requested size of this volume, in GB.
          type: integer
          format: int32
        lunRanges:
          description: LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.
          type: array
          items:
            $ref: '#/components/schemas/LunRange'
        machineIds:
          description: >-
            Machine ids connected to this volume. Set only when protocol is
            PROTOCOL_FC.
          type: array
          items:
            type: string
        nfsExports:
          description: NFS exports. Set only when protocol is PROTOCOL_NFS.
          type: array
          items:
            $ref: '#/components/schemas/NfsExport'
        userNote:
          description: >-
            User note field, it can be used by customers to add additional
            information for the BMS Ops team .
          type: string
        gcpService:
          description: >-
            The GCP service of the storage volume. Available gcp_service are in
            https://cloud.google.com/bare-metal/docs/bms-planning.
          type: string
        performanceTier:
          description: Performance tier of the Volume. Default is SHARED.
          type: string
          enumDescriptions:
            - Value is not specified.
            - Regular volumes, shared aggregates.
            - Assigned aggregates.
            - High throughput aggregates.
            - QoS 2.0 high performance storage.
          enum:
            - VOLUME_PERFORMANCE_TIER_UNSPECIFIED
            - VOLUME_PERFORMANCE_TIER_SHARED
            - VOLUME_PERFORMANCE_TIER_ASSIGNED
            - VOLUME_PERFORMANCE_TIER_HT
            - VOLUME_PERFORMANCE_TIER_QOS2_PERFORMANCE
    LunRange:
      id: LunRange
      description: A LUN(Logical Unit Number) range.
      type: object
      properties:
        quantity:
          description: Number of LUNs to create.
          type: integer
          format: int32
        sizeGb:
          description: The requested size of each LUN, in GB.
          type: integer
          format: int32
    NfsExport:
      id: NfsExport
      description: A NFS export entry.
      type: object
      properties:
        networkId:
          description: Network to use to publish the export.
          type: string
        machineId:
          description: >-
            Either a single machine, identified by an ID, or a comma-separated
            list of machine IDs.
          type: string
        cidr:
          description: A CIDR range.
          type: string
        permissions:
          description: Export permissions.
          type: string
          enumDescriptions:
            - Unspecified value.
            - Read-only permission.
            - Read-write permission.
          enum:
            - PERMISSIONS_UNSPECIFIED
            - READ_ONLY
            - READ_WRITE
        noRootSquash:
          description: >-
            Disable root squashing, which is a feature of NFS. Root squash is a
            special mapping of the remote superuser (root) identity when using
            identity authentication.
          type: boolean
        allowSuid:
          description: Allow the setuid flag.
          type: boolean
        allowDev:
          description: Allow dev flag in NfsShare AllowedClientsRequest.
          type: boolean
    SubmitProvisioningConfigResponse:
      id: SubmitProvisioningConfigResponse
      description: Response for SubmitProvisioningConfig.
      type: object
      properties:
        provisioningConfig:
          description: The submitted provisioning config.
          $ref: '#/components/schemas/ProvisioningConfig'
    RenameNetworkRequest:
      id: RenameNetworkRequest
      description: Message requesting rename of a server.
      type: object
      properties:
        newNetworkId:
          description: Required. The new `id` of the network.
          type: string
    ListOSImagesResponse:
      id: ListOSImagesResponse
      description: Request for getting all available OS images.
      type: object
      properties:
        osImages:
          description: The OS images available.
          type: array
          items:
            $ref: '#/components/schemas/OSImage'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    OSImage:
      id: OSImage
      description: Operation System image.
      type: object
      properties:
        name:
          description: Output only. OS Image's unique name.
          readOnly: true
          type: string
        code:
          description: OS Image code.
          type: string
        description:
          description: OS Image description.
          type: string
        applicableInstanceTypes:
          description: >-
            Instance types this image is applicable to. [Available
            types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
          type: array
          items:
            type: string
        supportedNetworkTemplates:
          description: Network templates that can be used with this OS Image.
          type: array
          items:
            type: string
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    ResetInstanceResponse:
      id: ResetInstanceResponse
      description: Response message from resetting a server.
      type: object
      properties: {}
    ServerNetworkTemplate:
      id: ServerNetworkTemplate
      description: Network template.
      type: object
      properties:
        name:
          description: >-
            Output only. Template's unique name. The full resource name follows
            the pattern:
            `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}`
            Generally, the {server_network_template} follows the syntax of
            "bond" or "nic".
          readOnly: true
          type: string
        applicableInstanceTypes:
          description: Instance types this template is applicable to.
          type: array
          items:
            type: string
        logicalInterfaces:
          description: Logical interfaces.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface
    GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface:
      id: GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface
      description: Logical interface.
      type: object
      properties:
        name:
          description: >-
            Interface name. This is not a globally unique identifier. Name is
            unique only inside the ServerNetworkTemplate. This is of syntax or
            and forms part of the network template name.
          type: string
        type:
          description: Interface type.
          type: string
          enumDescriptions:
            - Unspecified value.
            - Bond interface type.
            - NIC interface type.
          enum:
            - INTERFACE_TYPE_UNSPECIFIED
            - BOND
            - NIC
        required:
          description: If true, interface must have network connected.
          type: boolean
    StartInstanceResponse:
      id: StartInstanceResponse
      description: Response message from starting a server.
      type: object
      properties: {}
    StopInstanceResponse:
      id: StopInstanceResponse
      description: Response message from stopping a server.
      type: object
      properties: {}
    EnableInteractiveSerialConsoleResponse:
      id: EnableInteractiveSerialConsoleResponse
      description: Message for response of EnableInteractiveSerialConsole.
      type: object
      properties: {}
    DisableInteractiveSerialConsoleResponse:
      id: DisableInteractiveSerialConsoleResponse
      description: Message for response of DisableInteractiveSerialConsole.
      type: object
      properties: {}
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.baremetalsolution.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    instances:
      id: google.baremetalsolution.instances
      name: instances
      title: Instances
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.instances
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        load_auth_info:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:loadAuthInfo/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reimage:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:reimage/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        enable_hyperthreading:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:enableHyperthreading/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        disable_hyperthreading:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:disableHyperthreading/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rename:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:rename/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:reset/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:start/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:stop/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        enable_interactive_serial_console:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:enableInteractiveSerialConsole/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        disable_interactive_serial_console:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:disableInteractiveSerialConsole/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        detach_lun:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:detachLun/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/instances/methods/patch'
        replace: []
        delete: []
    ssh_keys:
      id: google.baremetalsolution.ssh_keys
      name: ssh_keys
      title: Ssh_keys
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1sshKeys/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sshKeys
        create:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1sshKeys/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1sshKeys~1{sshKeysId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ssh_keys/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/ssh_keys/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/ssh_keys/methods/delete'
    volumes:
      id: google.baremetalsolution.volumes
      name: volumes
      title: Volumes
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.volumes
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rename:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}:rename/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        evict:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}:evict/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resize:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}:resize/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/get'
          - $ref: '#/components/x-stackQL-resources/volumes/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/patch'
        replace: []
        delete: []
    snapshots:
      id: google.baremetalsolution.snapshots
      name: snapshots
      title: Snapshots
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.volumeSnapshots
        restore_volume_snapshot:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots~1{snapshotsId}:restoreVolumeSnapshot/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots~1{snapshotsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots~1{snapshotsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/get'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/delete'
    luns:
      id: google.baremetalsolution.luns
      name: luns
      title: Luns
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1luns~1{lunsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1luns/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.luns
        evict:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1luns~1{lunsId}:evict/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/luns/methods/get'
          - $ref: '#/components/x-stackQL-resources/luns/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    networks:
      id: google.baremetalsolution.networks
      name: networks
      title: Networks
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.networks
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks~1{networksId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks~1{networksId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rename:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks~1{networksId}:rename/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/networks/methods/get'
          - $ref: '#/components/x-stackQL-resources/networks/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/networks/methods/patch'
        replace: []
        delete: []
    networks_network_usage:
      id: google.baremetalsolution.networks_network_usage
      name: networks_network_usage
      title: Networks_network_usage
      methods:
        list_network_usage:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks:listNetworkUsage/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/networks_network_usage/methods/list_network_usage
        insert: []
        update: []
        replace: []
        delete: []
    nfs_shares:
      id: google.baremetalsolution.nfs_shares
      name: nfs_shares
      title: Nfs_shares
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares~1{nfsSharesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares~1{nfsSharesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares~1{nfsSharesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.nfsShares
        create:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rename:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares~1{nfsSharesId}:rename/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/nfs_shares/methods/get'
          - $ref: '#/components/x-stackQL-resources/nfs_shares/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/nfs_shares/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/nfs_shares/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/nfs_shares/methods/delete'
    provisioning_quotas:
      id: google.baremetalsolution.provisioning_quotas
      name: provisioning_quotas
      title: Provisioning_quotas
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningQuotas/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.provisioningQuotas
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provisioning_quotas/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    provisioning_configs:
      id: google.baremetalsolution.provisioning_configs
      name: provisioning_configs
      title: Provisioning_configs
      methods:
        submit:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs:submit/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs~1{provisioningConfigsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs~1{provisioningConfigsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provisioning_configs/methods/get'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/provisioning_configs/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/provisioning_configs/methods/patch
        replace: []
        delete: []
    operations:
      id: google.baremetalsolution.operations
      name: operations
      title: Operations
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    os_images:
      id: google.baremetalsolution.os_images
      name: os_images
      title: Os_images
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1osImages/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.osImages
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1osImages~1{osImagesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/os_images/methods/get'
          - $ref: '#/components/x-stackQL-resources/os_images/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v2/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: baremetalsolution.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: baremetalsolution.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances:
    parameters: *ref_1
    get:
      description: List servers in a given project and location.
      operationId: baremetalsolution.projects.locations.instances.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:
    parameters: *ref_1
    get:
      description: Get details about a single server.
      operationId: baremetalsolution.projects.locations.instances.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
    patch:
      description: Update details of a single server.
      operationId: baremetalsolution.projects.locations.instances.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:loadAuthInfo:
    parameters: *ref_1
    get:
      description: Load auth info for a server.
      operationId: baremetalsolution.projects.locations.instances.loadAuthInfo
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadInstanceAuthInfoResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reimage:
    parameters: *ref_1
    post:
      description: Perform reimage operation on a single server.
      operationId: baremetalsolution.projects.locations.instances.reimage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReimageInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:enableHyperthreading:
    parameters: *ref_1
    post:
      description: Perform enable hyperthreading operation on a single server.
      operationId: baremetalsolution.projects.locations.instances.enableHyperthreading
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableHyperthreadingRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disableHyperthreading:
    parameters: *ref_1
    post:
      description: Perform disable hyperthreading operation on a single server.
      operationId: baremetalsolution.projects.locations.instances.disableHyperthreading
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableHyperthreadingRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:rename:
    parameters: *ref_1
    post:
      description: >-
        RenameInstance sets a new name for an instance. Use with caution,
        previous names become immediately invalidated.
      operationId: baremetalsolution.projects.locations.instances.rename
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset:
    parameters: *ref_1
    post:
      description: >-
        Perform an ungraceful, hard reset on a server. Equivalent to shutting
        the power off and then turning it back on.
      operationId: baremetalsolution.projects.locations.instances.reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start:
    parameters: *ref_1
    post:
      description: Starts a server that was shutdown.
      operationId: baremetalsolution.projects.locations.instances.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop:
    parameters: *ref_1
    post:
      description: Stop a running server.
      operationId: baremetalsolution.projects.locations.instances.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:enableInteractiveSerialConsole:
    parameters: *ref_1
    post:
      description: Enable the interactive serial console feature on an instance.
      operationId: >-
        baremetalsolution.projects.locations.instances.enableInteractiveSerialConsole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableInteractiveSerialConsoleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disableInteractiveSerialConsole:
    parameters: *ref_1
    post:
      description: Disable the interactive serial console feature on an instance.
      operationId: >-
        baremetalsolution.projects.locations.instances.disableInteractiveSerialConsole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableInteractiveSerialConsoleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun:
    parameters: *ref_1
    post:
      description: Detach LUN from Instance.
      operationId: baremetalsolution.projects.locations.instances.detachLun
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachLunRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/sshKeys:
    parameters: *ref_1
    get:
      description: >-
        Lists the public SSH keys registered for the specified project. These
        SSH keys are used only for the interactive serial console feature.
      operationId: baremetalsolution.projects.locations.sshKeys.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSSHKeysResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: >-
        Register a public SSH key in the specified project for use with the
        interactive serial console feature.
      operationId: baremetalsolution.projects.locations.sshKeys.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSHKey'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: sshKeyId
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/sshKeys/{sshKeysId}:
    parameters: *ref_1
    delete:
      description: Deletes a public SSH key registered in the specified project.
      operationId: baremetalsolution.projects.locations.sshKeys.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sshKeysId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/volumes:
    parameters: *ref_1
    get:
      description: List storage volumes in a given project and location.
      operationId: baremetalsolution.projects.locations.volumes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVolumesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:
    parameters: *ref_1
    get:
      description: Get details of a single storage volume.
      operationId: baremetalsolution.projects.locations.volumes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
    patch:
      description: Update details of a single storage volume.
      operationId: baremetalsolution.projects.locations.volumes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:rename:
    parameters: *ref_1
    post:
      description: >-
        RenameVolume sets a new name for a volume. Use with caution, previous
        names become immediately invalidated.
      operationId: baremetalsolution.projects.locations.volumes.rename
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameVolumeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:evict:
    parameters: *ref_1
    post:
      description: >-
        Skips volume's cooloff and deletes it now. Volume must be in cooloff
        state.
      operationId: baremetalsolution.projects.locations.volumes.evict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvictVolumeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize:
    parameters: *ref_1
    post:
      description: Emergency Volume resize.
      operationId: baremetalsolution.projects.locations.volumes.resize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResizeVolumeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots:
    parameters: *ref_1
    post:
      description: >-
        Takes a snapshot of a boot volume. Returns INVALID_ARGUMENT if called
        for a non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeSnapshot'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshot'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
    get:
      description: >-
        Retrieves the list of snapshots for the specified volume. Returns a
        response with an empty list of snapshots if called for a non-boot
        volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVolumeSnapshotsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restoreVolumeSnapshot:
    parameters: *ref_1
    post:
      description: >-
        Uses the specified snapshot to restore its parent volume. Returns
        INVALID_ARGUMENT if called for a non-boot volume.
      operationId: >-
        baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreVolumeSnapshotRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a volume snapshot. Returns INVALID_ARGUMENT if called for a
        non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Returns the specified snapshot resource. Returns INVALID_ARGUMENT if
        called for a non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshot'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}:
    parameters: *ref_1
    get:
      description: Get details of a single storage logical unit number(LUN).
      operationId: baremetalsolution.projects.locations.volumes.luns.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: lunsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns:
    parameters: *ref_1
    get:
      description: List storage volume luns for given storage volume.
      operationId: baremetalsolution.projects.locations.volumes.luns.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}:evict:
    parameters: *ref_1
    post:
      description: Skips lun's cooloff and deletes it now. Lun must be in cooloff state.
      operationId: baremetalsolution.projects.locations.volumes.luns.evict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvictLunRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: lunsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/networks:
    parameters: *ref_1
    get:
      description: List network in a given project and location.
      operationId: baremetalsolution.projects.locations.networks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworksResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage:
    parameters: *ref_1
    get:
      description: >-
        List all Networks (and used IPs for each Network) in the vendor account
        associated with the specified project.
      operationId: baremetalsolution.projects.locations.networks.listNetworkUsage
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkUsageResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}:
    parameters: *ref_1
    get:
      description: Get details of a single network.
      operationId: baremetalsolution.projects.locations.networks.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networksId
          required: true
          schema:
            type: string
    patch:
      description: Update details of a single network.
      operationId: baremetalsolution.projects.locations.networks.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networksId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}:rename:
    parameters: *ref_1
    post:
      description: >-
        RenameNetwork sets a new name for a network. Use with caution, previous
        names become immediately invalidated.
      operationId: baremetalsolution.projects.locations.networks.rename
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameNetworkRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networksId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}:
    parameters: *ref_1
    get:
      description: Get details of a single NFS share.
      operationId: baremetalsolution.projects.locations.nfsShares.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NfsShare'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
    patch:
      description: Update details of a single NFS share.
      operationId: baremetalsolution.projects.locations.nfsShares.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NfsShare'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete an NFS share. The underlying volume is automatically deleted.
      operationId: baremetalsolution.projects.locations.nfsShares.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/nfsShares:
    parameters: *ref_1
    get:
      description: List NFS shares.
      operationId: baremetalsolution.projects.locations.nfsShares.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNfsSharesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Create an NFS share.
      operationId: baremetalsolution.projects.locations.nfsShares.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NfsShare'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}:rename:
    parameters: *ref_1
    post:
      description: >-
        RenameNfsShare sets a new name for an nfsshare. Use with caution,
        previous names become immediately invalidated.
      operationId: baremetalsolution.projects.locations.nfsShares.rename
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameNfsShareRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NfsShare'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas:
    parameters: *ref_1
    get:
      description: List the budget details to provision resources on a given project.
      operationId: baremetalsolution.projects.locations.provisioningQuotas.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvisioningQuotasResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit:
    parameters: *ref_1
    post:
      description: Submit a provisiong configuration for a given project.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.submit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitProvisioningConfigRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitProvisioningConfigResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}:
    parameters: *ref_1
    get:
      description: Get ProvisioningConfig by name.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: provisioningConfigsId
          required: true
          schema:
            type: string
    patch:
      description: Update existing ProvisioningConfig.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: provisioningConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: email
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:
    parameters: *ref_1
    post:
      description: Create new ProvisioningConfig.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: email
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: Get details about an operation.
      operationId: baremetalsolution.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/osImages:
    parameters: *ref_1
    get:
      description: Retrieves the list of OS images which are currently approved.
      operationId: baremetalsolution.projects.locations.osImages.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOSImagesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/osImages/{osImagesId}:
    parameters: *ref_1
    get:
      description: Get details of a single OS image.
      operationId: baremetalsolution.projects.locations.osImages.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSImage'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: osImagesId
          required: true
          schema:
            type: string
