components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        enum:
          - '1'
          - '2'
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AllowedClient:
      description: Represents an 'access point' for the share.
      id: AllowedClient
      properties:
        allowDev:
          description: Allow dev flag. Which controls whether to allow creation of devices.
          type: boolean
        allowSuid:
          description: Allow the setuid flag.
          type: boolean
        allowedClientsCidr:
          description: The subnet of IP addresses permitted to access the share.
          type: string
        mountPermissions:
          description: Mount permissions.
          enum:
            - MOUNT_PERMISSIONS_UNSPECIFIED
            - READ
            - READ_WRITE
          enumDescriptions:
            - Permissions were not specified.
            - NFS share can be mount with read-only permissions.
            - NFS share can be mount with read-write permissions.
          type: string
        network:
          description: The network the access point sits on.
          type: string
        noRootSquash:
          description: Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.
          type: boolean
        shareIp:
          description: The IP address of the share on this network.
          type: string
      type: object
    DetachLunRequest:
      description: Message for detach specific LUN from an Instance.
      id: DetachLunRequest
      properties:
        lun:
          description: Required. Name of the Lun to detach.
          type: string
        skipReboot:
          description: If true, performs lun unmapping without instance reboot.
          type: boolean
      type: object
    FetchInstanceProvisioningSettingsResponse:
      description: Response with all provisioning settings.
      id: FetchInstanceProvisioningSettingsResponse
      properties:
        images:
          description: The OS images available.
          items:
            $ref: '#/components/schemas/OSImage'
          type: array
      type: object
    GoogleCloudBaremetalsolutionV2LogicalInterface:
      description: Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.
      id: GoogleCloudBaremetalsolutionV2LogicalInterface
      properties:
        interfaceIndex:
          description: The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated.
          format: int32
          type: integer
        logicalNetworkInterfaces:
          description: List of logical network interfaces within a logical interface.
          items:
            $ref: '#/components/schemas/LogicalNetworkInterface'
          type: array
        name:
          description: Interface name. This is of syntax or and forms part of the network template name.
          type: string
      type: object
    GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface:
      description: Logical interface.
      id: GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface
      properties:
        name:
          description: Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate. This is of syntax or and forms part of the network template name.
          type: string
        required:
          description: If true, interface must have network connected.
          type: boolean
        type:
          description: Interface type.
          enum:
            - INTERFACE_TYPE_UNSPECIFIED
            - BOND
            - NIC
          enumDescriptions:
            - Unspecified value.
            - Bond interface type.
            - NIC interface type.
          type: string
      type: object
    Instance:
      description: A server.
      id: Instance
      properties:
        createTime:
          description: Output only. Create a time stamp.
          format: google-datetime
          readOnly: true
          type: string
        hyperthreadingEnabled:
          description: True if you enable hyperthreading for the server, otherwise false. The default value is false.
          type: boolean
        id:
          description: An identifier for the `Instance`, generated by the backend.
          type: string
        interactiveSerialConsoleEnabled:
          description: True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.
          type: boolean
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs.
          type: object
        logicalInterfaces:
          description: List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.
          items:
            $ref: '#/components/schemas/GoogleCloudBaremetalsolutionV2LogicalInterface'
          type: array
        luns:
          description: List of LUNs associated with this server.
          items:
            $ref: '#/components/schemas/Lun'
          type: array
        machineType:
          description: The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
          type: string
        name:
          description: 'Output only. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`'
          readOnly: true
          type: string
        networkTemplate:
          description: Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of "bond" or "nic".
          type: string
        networks:
          description: List of networks associated with this server.
          items:
            $ref: '#/components/schemas/Network'
          type: array
        osImage:
          description: The OS image currently installed on the server.
          type: string
        pod:
          description: Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.
          type: string
        state:
          description: The state of the server.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - DELETED
          enumDescriptions:
            - The server is in an unknown state.
            - The server is being provisioned.
            - The server is running.
            - The server has been deleted.
          type: string
        updateTime:
          description: Output only. Update a time stamp.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    InstanceConfig:
      description: Configuration parameters for a new instance.
      id: InstanceConfig
      properties:
        accountNetworksEnabled:
          description: If true networks can be from different projects of the same vendor account.
          type: boolean
        clientNetwork:
          $ref: '#/components/schemas/NetworkAddress'
          description: Client network address. Filled if InstanceConfig.multivlan_config is false.
        hyperthreading:
          description: Whether the instance should be provisioned with Hyperthreading enabled.
          type: boolean
        id:
          description: A transient unique identifier to idenfity an instance within an ProvisioningConfig request.
          type: string
        instanceType:
          description: Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
          type: string
        logicalInterfaces:
          description: List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.
          items:
            $ref: '#/components/schemas/GoogleCloudBaremetalsolutionV2LogicalInterface'
          type: array
        name:
          description: Output only. The name of the instance config.
          readOnly: true
          type: string
        networkConfig:
          description: The type of network configuration on the instance.
          enum:
            - NETWORKCONFIG_UNSPECIFIED
            - SINGLE_VLAN
            - MULTI_VLAN
          enumDescriptions:
            - The unspecified network configuration.
            - Instance part of single client network and single private network.
            - Instance part of multiple (or single) client networks and private networks.
          type: string
        networkTemplate:
          description: Server network template name. Filled if InstanceConfig.multivlan_config is true.
          type: string
        osImage:
          description: OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
          type: string
        privateNetwork:
          $ref: '#/components/schemas/NetworkAddress'
          description: Private network address, if any. Filled if InstanceConfig.multivlan_config is false.
        userNote:
          description: User note field, it can be used by customers to add additional information for the BMS Ops team .
          type: string
      type: object
    InstanceQuota:
      description: A resource budget.
      id: InstanceQuota
      properties:
        availableMachineCount:
          description: Number of machines than can be created for the given location and instance_type.
          format: int32
          type: integer
        instanceType:
          description: Instance type.
          type: string
        location:
          description: Location where the quota applies.
          type: string
        name:
          description: Output only. The name of the instance quota.
          readOnly: true
          type: string
      type: object
    IntakeVlanAttachment:
      description: A GCP vlan attachment.
      id: IntakeVlanAttachment
      properties:
        id:
          description: Identifier of the VLAN attachment.
          type: string
        pairingKey:
          description: Attachment pairing key.
          type: string
      type: object
    ListInstancesResponse:
      description: Response message for the list of servers.
      id: ListInstancesResponse
      properties:
        instances:
          description: The list of servers.
          items:
            $ref: '#/components/schemas/Instance'
          type: array
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      id: ListLocationsResponse
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Location'
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListLunsResponse:
      description: Response message containing the list of storage volume luns.
      id: ListLunsResponse
      properties:
        luns:
          description: The list of luns.
          items:
            $ref: '#/components/schemas/Lun'
          type: array
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListNetworkUsageResponse:
      description: Response with Networks with IPs
      id: ListNetworkUsageResponse
      properties:
        networks:
          description: Networks with IPs.
          items:
            $ref: '#/components/schemas/NetworkUsage'
          type: array
      type: object
    ListNetworksResponse:
      description: Response message containing the list of networks.
      id: ListNetworksResponse
      properties:
        networks:
          description: The list of networks.
          items:
            $ref: '#/components/schemas/Network'
          type: array
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListNfsSharesResponse:
      description: Response message containing the list of NFS shares.
      id: ListNfsSharesResponse
      properties:
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        nfsShares:
          description: The list of NFS shares.
          items:
            $ref: '#/components/schemas/NfsShare'
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListProvisioningQuotasResponse:
      description: Response message for the list of provisioning quotas.
      id: ListProvisioningQuotasResponse
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        provisioningQuotas:
          description: The provisioning quotas registered in this project.
          items:
            $ref: '#/components/schemas/ProvisioningQuota'
          type: array
      type: object
    ListVolumesResponse:
      description: Response message containing the list of storage volumes.
      id: ListVolumesResponse
      properties:
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        volumes:
          description: The list of storage volumes.
          items:
            $ref: '#/components/schemas/Volume'
          type: array
      type: object
    Location:
      description: A resource that represents Google Cloud Platform location.
      id: Location
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      type: object
    LogicalNetworkInterface:
      description: Each logical network interface is effectively a network and IP pair.
      id: LogicalNetworkInterface
      properties:
        defaultGateway:
          description: Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance.
          type: boolean
        id:
          description: An identifier for the `Network`, generated by the backend.
          type: string
        ipAddress:
          description: IP address in the network
          type: string
        network:
          description: Name of the network
          type: string
        networkType:
          description: Type of network.
          enum:
            - TYPE_UNSPECIFIED
            - CLIENT
            - PRIVATE
          enumDescriptions:
            - Unspecified value.
            - Client network, a network peered to a Google Cloud VPC.
            - Private network, a network local to the Bare Metal Solution environment.
          type: string
      type: object
    Lun:
      description: A storage volume logical unit number (LUN).
      id: Lun
      properties:
        bootLun:
          description: Display if this LUN is a boot LUN.
          type: boolean
        id:
          description: An identifier for the LUN, generated by the backend.
          type: string
        multiprotocolType:
          description: The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.
          enum:
            - MULTIPROTOCOL_TYPE_UNSPECIFIED
            - LINUX
          enumDescriptions:
            - Server has no OS specified.
            - Server with Linux OS.
          type: string
        name:
          description: Output only. The name of the LUN.
          readOnly: true
          type: string
        shareable:
          description: Display if this LUN can be shared between multiple physical servers.
          type: boolean
        sizeGb:
          description: The size of this LUN, in gigabytes.
          format: int64
          type: string
        state:
          description: The state of this storage volume.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - UPDATING
            - READY
            - DELETING
          enumDescriptions:
            - The LUN is in an unknown state.
            - The LUN is being created.
            - The LUN is being updated.
            - The LUN is ready for use.
            - The LUN has been requested to be deleted.
          type: string
        storageType:
          description: The storage type for this LUN.
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
          enumDescriptions:
            - The storage type for this LUN is unknown.
            - This storage type for this LUN is SSD.
            - This storage type for this LUN is HDD.
          type: string
        storageVolume:
          description: Display the storage volume for this LUN.
          type: string
        wwid:
          description: The WWID for this LUN.
          type: string
      type: object
    LunRange:
      description: A LUN(Logical Unit Number) range.
      id: LunRange
      properties:
        quantity:
          description: Number of LUNs to create.
          format: int32
          type: integer
        sizeGb:
          description: The requested size of each LUN, in GB.
          format: int32
          type: integer
      type: object
    Network:
      description: A Network.
      id: Network
      properties:
        cidr:
          description: The cidr of the Network.
          type: string
        id:
          description: An identifier for the `Network`, generated by the backend.
          type: string
        ipAddress:
          description: IP address configured.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs.
          type: object
        macAddress:
          description: List of physical interfaces.
          items:
            type: string
          type: array
        name:
          description: 'Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`'
          readOnly: true
          type: string
        reservations:
          description: List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server.
          items:
            $ref: '#/components/schemas/NetworkAddressReservation'
          type: array
        servicesCidr:
          description: IP range for reserved for services (e.g. NFS).
          type: string
        state:
          description: The Network state.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - PROVISIONED
            - DEPROVISIONING
          enumDescriptions:
            - The Network is in an unknown state.
            - The Network is provisioning.
            - The Network has been provisioned.
            - The Network is being deprovisioned.
          type: string
        type:
          description: The type of this network.
          enum:
            - TYPE_UNSPECIFIED
            - CLIENT
            - PRIVATE
          enumDescriptions:
            - Unspecified value.
            - Client network, a network peered to a Google Cloud VPC.
            - Private network, a network local to the Bare Metal Solution environment.
          type: string
        vlanId:
          description: The vlan id of the Network.
          type: string
        vrf:
          $ref: '#/components/schemas/VRF'
          description: The vrf for the Network.
      type: object
    NetworkAddress:
      description: A network.
      id: NetworkAddress
      properties:
        address:
          description: IPv4 address to be assigned to the server.
          type: string
        existingNetworkId:
          description: Name of the existing network to use.
          type: string
        networkId:
          description: Id of the network to use, within the same ProvisioningConfig request.
          type: string
      type: object
    NetworkAddressReservation:
      description: A reservation of one or more addresses in a network.
      id: NetworkAddressReservation
      properties:
        endAddress:
          description: The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2.
          type: string
        note:
          description: A note about this reservation, intended for human consumption.
          type: string
        startAddress:
          description: The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2.
          type: string
      type: object
    NetworkConfig:
      description: Configuration parameters for a new network.
      id: NetworkConfig
      properties:
        bandwidth:
          description: Interconnect bandwidth. Set only when type is CLIENT.
          enum:
            - BANDWIDTH_UNSPECIFIED
            - BW_1_GBPS
            - BW_2_GBPS
            - BW_5_GBPS
            - BW_10_GBPS
          enumDescriptions:
            - Unspecified value.
            - 1 Gbps.
            - 2 Gbps.
            - 5 Gbps.
            - 10 Gbps.
          type: string
        cidr:
          description: CIDR range of the network.
          type: string
        gcpService:
          description: The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.
          type: string
        id:
          description: A transient unique identifier to identify a volume within an ProvisioningConfig request.
          type: string
        jumboFramesEnabled:
          description: The JumboFramesEnabled option for customer to set.
          type: boolean
        name:
          description: Output only. The name of the network config.
          readOnly: true
          type: string
        serviceCidr:
          description: Service CIDR, if any.
          enum:
            - SERVICE_CIDR_UNSPECIFIED
            - DISABLED
            - HIGH_26
            - HIGH_27
            - HIGH_28
          enumDescriptions:
            - Unspecified value.
            - Services are disabled for the given network.
            - Use the highest /26 block of the network to host services.
            - Use the highest /27 block of the network to host services.
            - Use the highest /28 block of the network to host services.
          type: string
        type:
          description: The type of this network, either Client or Private.
          enum:
            - TYPE_UNSPECIFIED
            - CLIENT
            - PRIVATE
          enumDescriptions:
            - Unspecified value.
            - Client network, that is a network peered to a GCP VPC.
            - Private network, that is a network local to the BMS POD.
          type: string
        userNote:
          description: User note field, it can be used by customers to add additional information for the BMS Ops team .
          type: string
        vlanAttachments:
          description: List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).
          items:
            $ref: '#/components/schemas/IntakeVlanAttachment'
          type: array
        vlanSameProject:
          description: Whether the VLAN attachment pair is located in the same project.
          type: boolean
      type: object
    NetworkUsage:
      description: Network with all used IP addresses.
      id: NetworkUsage
      properties:
        network:
          $ref: '#/components/schemas/Network'
          description: Network.
        usedIps:
          description: All used IP addresses in this network.
          items:
            type: string
          type: array
      type: object
    NfsExport:
      description: A NFS export entry.
      id: NfsExport
      properties:
        allowDev:
          description: Allow dev flag in NfsShare AllowedClientsRequest.
          type: boolean
        allowSuid:
          description: Allow the setuid flag.
          type: boolean
        cidr:
          description: A CIDR range.
          type: string
        machineId:
          description: Either a single machine, identified by an ID, or a comma-separated list of machine IDs.
          type: string
        networkId:
          description: Network to use to publish the export.
          type: string
        noRootSquash:
          description: Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.
          type: boolean
        permissions:
          description: Export permissions.
          enum:
            - PERMISSIONS_UNSPECIFIED
            - READ_ONLY
            - READ_WRITE
          enumDescriptions:
            - Unspecified value.
            - Read-only permission.
            - Read-write permission.
          type: string
      type: object
    NfsShare:
      description: An NFS share.
      id: NfsShare
      properties:
        allowedClients:
          description: List of allowed access points.
          items:
            $ref: '#/components/schemas/AllowedClient'
          type: array
        id:
          description: Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future.
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs.
          type: object
        name:
          description: Output only. The name of the NFS share.
          readOnly: true
          type: string
        nfsShareId:
          description: Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.
          readOnly: true
          type: string
        requestedSizeGib:
          description: The requested size, in GiB.
          format: int64
          type: string
        state:
          description: The state of the NFS share.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONED
            - CREATING
            - UPDATING
            - DELETING
          enumDescriptions:
            - The share is in an unknown state.
            - The share has been provisioned.
            - The NFS Share is being created.
            - The NFS Share is being updated.
            - The NFS Share has been requested to be deleted.
          type: string
        volume:
          description: The volume containing the share.
          type: string
      type: object
    OSImage:
      description: Operation System image.
      id: OSImage
      properties:
        applicableInstanceTypes:
          description: Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
          items:
            type: string
          type: array
        code:
          description: OS Image code.
          type: string
        description:
          description: OS Image description.
          type: string
        name:
          description: Output only. OS Image's unique name.
          readOnly: true
          type: string
        supportedNetworkTemplates:
          description: Network templates that can be used with this OS Image.
          items:
            $ref: '#/components/schemas/ServerNetworkTemplate'
          type: array
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      id: Operation
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    OperationMetadata:
      description: Represents the metadata from a long-running operation.
      id: OperationMetadata
      properties:
        apiVersion:
          description: Output only. API version used with the operation.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        requestedCancellation:
          description: Output only. Identifies whether the user requested the cancellation of the operation. Operations that have been successfully cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the action executed by the operation.
          readOnly: true
          type: string
      type: object
    ProvisioningConfig:
      description: A provisioning configuration.
      id: ProvisioningConfig
      properties:
        cloudConsoleUri:
          description: Output only. URI to Cloud Console UI view of this provisioning config.
          readOnly: true
          type: string
        email:
          description: Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.
          type: string
        handoverServiceAccount:
          description: A service account to enable customers to access instance credentials upon handover.
          type: string
        instances:
          description: Instances to be created.
          items:
            $ref: '#/components/schemas/InstanceConfig'
          type: array
        location:
          description: Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.
          type: string
        name:
          description: Output only. The name of the provisioning config.
          readOnly: true
          type: string
        networks:
          description: Networks to be created.
          items:
            $ref: '#/components/schemas/NetworkConfig'
          type: array
        state:
          description: Output only. State of ProvisioningConfig.
          enum:
            - STATE_UNSPECIFIED
            - DRAFT
            - SUBMITTED
            - PROVISIONING
            - PROVISIONED
            - VALIDATED
            - CANCELLED
            - FAILED
          enumDescriptions:
            - State wasn't specified.
            - ProvisioningConfig is a draft and can be freely modified.
            - ProvisioningConfig was already submitted and cannot be modified.
            - ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.
            - ProvisioningConfig was provisioned, meaning the resources exist.
            - ProvisioningConfig was validated. A validation tool will be run to set this state.
            - ProvisioningConfig was canceled.
            - The request is submitted for provisioning, with error return.
          readOnly: true
          type: string
        statusMessage:
          description: Optional status messages associated with the FAILED state.
          type: string
        ticketId:
          description: A generated ticket id to track provisioning request.
          type: string
        updateTime:
          description: Output only. Last update timestamp.
          format: google-datetime
          readOnly: true
          type: string
        volumes:
          description: Volumes to be created.
          items:
            $ref: '#/components/schemas/VolumeConfig'
          type: array
        vpcScEnabled:
          description: If true, VPC SC is enabled for the cluster.
          type: boolean
      type: object
    ProvisioningQuota:
      description: A provisioning quota for a given project.
      id: ProvisioningQuota
      properties:
        assetType:
          description: The asset type of this provisioning quota.
          enum:
            - ASSET_TYPE_UNSPECIFIED
            - ASSET_TYPE_SERVER
            - ASSET_TYPE_STORAGE
            - ASSET_TYPE_NETWORK
          enumDescriptions:
            - The unspecified type.
            - The server asset type.
            - The storage asset type.
            - The network asset type.
          type: string
        availableCount:
          description: The available count of the provisioning quota.
          format: int32
          type: integer
        gcpService:
          description: The gcp service of the provisioning quota.
          type: string
        instanceQuota:
          $ref: '#/components/schemas/InstanceQuota'
          description: Instance quota.
        location:
          description: The specific location of the provisioining quota.
          type: string
        name:
          description: Output only. The name of the provisioning quota.
          readOnly: true
          type: string
        networkBandwidth:
          description: Network bandwidth, Gbps
          format: int64
          type: string
        serverCount:
          description: Server count.
          format: int64
          type: string
        storageGib:
          description: Storage size (GB).
          format: int64
          type: string
      type: object
    QosPolicy:
      description: QOS policy parameters.
      id: QosPolicy
      properties:
        bandwidthGbps:
          description: The bandwidth permitted by the QOS policy, in gbps.
          format: double
          type: number
      type: object
    ResetInstanceRequest:
      description: Message requesting to reset a server.
      id: ResetInstanceRequest
      properties: {}
      type: object
    ResizeVolumeRequest:
      description: Request for emergency resize Volume.
      id: ResizeVolumeRequest
      properties:
        sizeGib:
          description: New Volume size, in GiB.
          format: int64
          type: string
      type: object
    ServerNetworkTemplate:
      description: Network template.
      id: ServerNetworkTemplate
      properties:
        applicableInstanceTypes:
          description: Instance types this template is applicable to.
          items:
            type: string
          type: array
        logicalInterfaces:
          description: Logical interfaces.
          items:
            $ref: '#/components/schemas/GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface'
          type: array
        name:
          description: 'Output only. Template''s unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of "bond" or "nic".'
          readOnly: true
          type: string
      type: object
    SnapshotReservationDetail:
      description: Details about snapshot space reservation and usage on the storage volume.
      id: SnapshotReservationDetail
      properties:
        reservedSpaceGib:
          description: The space on this storage volume reserved for snapshots, shown in GiB.
          format: int64
          type: string
        reservedSpacePercent:
          description: Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.
          format: int32
          type: integer
        reservedSpaceRemainingGib:
          description: The amount, in GiB, of available space in this storage volume's reserved snapshot space.
          format: int64
          type: string
        reservedSpaceUsedPercent:
          description: The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.
          format: int32
          type: integer
      type: object
    StartInstanceRequest:
      description: Message requesting to start a server.
      id: StartInstanceRequest
      properties: {}
      type: object
    Status:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    StopInstanceRequest:
      description: Message requesting to stop a server.
      id: StopInstanceRequest
      properties: {}
      type: object
    SubmitProvisioningConfigRequest:
      description: Request for SubmitProvisioningConfig.
      id: SubmitProvisioningConfigRequest
      properties:
        email:
          description: Optional. Email provided to send a confirmation with provisioning config to.
          type: string
        provisioningConfig:
          $ref: '#/components/schemas/ProvisioningConfig'
          description: Required. The ProvisioningConfig to create.
      type: object
    SubmitProvisioningConfigResponse:
      description: Response for SubmitProvisioningConfig.
      id: SubmitProvisioningConfigResponse
      properties:
        provisioningConfig:
          $ref: '#/components/schemas/ProvisioningConfig'
          description: The submitted provisioning config.
      type: object
    VRF:
      description: A network VRF.
      id: VRF
      properties:
        name:
          description: The name of the VRF.
          type: string
        qosPolicy:
          $ref: '#/components/schemas/QosPolicy'
          description: The QOS policy applied to this VRF.
        state:
          description: The possible state of VRF.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - PROVISIONED
          enumDescriptions:
            - The unspecified state.
            - The vrf is provisioning.
            - The vrf is provisioned.
          type: string
        vlanAttachments:
          description: The list of VLAN attachments for the VRF.
          items:
            $ref: '#/components/schemas/VlanAttachment'
          type: array
      type: object
    VlanAttachment:
      description: VLAN attachment details.
      id: VlanAttachment
      properties:
        peerIp:
          description: The peer IP of the attachment.
          type: string
        peerVlanId:
          description: The peer vlan ID of the attachment.
          format: int64
          type: string
        routerIp:
          description: The router IP of the attachment.
          type: string
      type: object
    Volume:
      description: A storage volume.
      id: Volume
      properties:
        autoGrownSizeGib:
          description: The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.
          format: int64
          type: string
        currentSizeGib:
          description: The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.
          format: int64
          type: string
        emergencySizeGib:
          description: Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value.
          format: int64
          type: string
        id:
          description: An identifier for the `Volume`, generated by the backend.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs.
          type: object
        maxSizeGib:
          description: Maximum size volume can be expanded to in case of evergency, in GiB.
          format: int64
          type: string
        name:
          description: 'Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`'
          readOnly: true
          type: string
        originallyRequestedSizeGib:
          description: Originally requested size, in GiB.
          format: int64
          type: string
        pod:
          description: Immutable. Pod name.
          type: string
        remainingSpaceGib:
          description: The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.
          format: int64
          type: string
        requestedSizeGib:
          description: The requested size of this storage volume, in GiB.
          format: int64
          type: string
        snapshotAutoDeleteBehavior:
          description: The behavior to use when snapshot reserved space is full.
          enum:
            - SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED
            - DISABLED
            - OLDEST_FIRST
            - NEWEST_FIRST
          enumDescriptions:
            - The unspecified behavior.
            - Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.
            - Delete the oldest snapshots first.
            - Delete the newest snapshots first.
          type: string
        snapshotEnabled:
          description: Whether snapshots are enabled.
          type: boolean
        snapshotReservationDetail:
          $ref: '#/components/schemas/SnapshotReservationDetail'
          description: Details about snapshot space reservation and usage on the storage volume.
        snapshotSchedulePolicy:
          description: The name of the snapshot schedule policy in use for this volume, if any.
          type: string
        state:
          description: The state of this storage volume.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
          enumDescriptions:
            - The storage volume is in an unknown state.
            - The storage volume is being created.
            - The storage volume is ready for use.
            - The storage volume has been requested to be deleted.
          type: string
        storageType:
          description: The storage type for this volume.
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
          enumDescriptions:
            - The storage type for this volume is unknown.
            - The storage type for this volume is SSD.
            - This storage type for this volume is HDD.
          type: string
      type: object
    VolumeConfig:
      description: Configuration parameters for a new volume.
      id: VolumeConfig
      properties:
        gcpService:
          description: The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.
          type: string
        id:
          description: A transient unique identifier to identify a volume within an ProvisioningConfig request.
          type: string
        lunRanges:
          description: LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.
          items:
            $ref: '#/components/schemas/LunRange'
          type: array
        machineIds:
          description: Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.
          items:
            type: string
          type: array
        name:
          description: Output only. The name of the volume config.
          readOnly: true
          type: string
        nfsExports:
          description: NFS exports. Set only when protocol is PROTOCOL_NFS.
          items:
            $ref: '#/components/schemas/NfsExport'
          type: array
        protocol:
          description: Volume protocol.
          enum:
            - PROTOCOL_UNSPECIFIED
            - PROTOCOL_FC
            - PROTOCOL_NFS
          enumDescriptions:
            - Unspecified value.
            - Fibre channel.
            - Network file system.
          type: string
        sizeGb:
          description: The requested size of this volume, in GB.
          format: int32
          type: integer
        snapshotsEnabled:
          description: Whether snapshots should be enabled.
          type: boolean
        type:
          description: The type of this Volume.
          enum:
            - TYPE_UNSPECIFIED
            - FLASH
            - DISK
          enumDescriptions:
            - The unspecified type.
            - This Volume is on flash.
            - This Volume is on disk.
          type: string
        userNote:
          description: User note field, it can be used by customers to add additional information for the BMS Ops team .
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
  x-stackQL-resources:
    locations:
      id: google.baremetalsolution.locations
      name: locations
      title: Locations
      methods:
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: locations
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
    instance_provisioning_settings:
      id: google.baremetalsolution.instance_provisioning_settings
      name: instance_provisioning_settings
      title: Instance_provisioning_settings
      methods:
        projects_locations_instanceProvisioningSettings_fetch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instanceProvisioningSettings:fetch/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instance_provisioning_settings/methods/projects_locations_instanceProvisioningSettings_fetch'
        insert: []
        update: []
        delete: []
    instances:
      id: google.baremetalsolution.instances
      name: instances
      title: Instances
      methods:
        projects_locations_instances_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_detachLun:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:detachLun/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_reset:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:reset/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_start:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:start/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_stop:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/projects_locations_instances_get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/projects_locations_instances_list'
        insert: []
        update: []
        delete: []
    networks:
      id: google.baremetalsolution.networks
      name: networks
      title: Networks
      methods:
        projects_locations_networks_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_networks_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks~1{networksId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_networks_patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks~1{networksId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/networks/methods/projects_locations_networks_get'
          - $ref: '#/components/x-stackQL-resources/networks/methods/projects_locations_networks_list'
        insert: []
        update: []
        delete: []
    networks_network_usage:
      id: google.baremetalsolution.networks_network_usage
      name: networks_network_usage
      title: Networks_network_usage
      methods:
        projects_locations_networks_listNetworkUsage:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks:listNetworkUsage/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: networks
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/networks_network_usage/methods/projects_locations_networks_listNetworkUsage'
        insert: []
        update: []
        delete: []
    nfs_shares:
      id: google.baremetalsolution.nfs_shares
      name: nfs_shares
      title: Nfs_shares
      methods:
        projects_locations_nfsShares_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_nfsShares_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares~1{nfsSharesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_nfsShares_patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares~1{nfsSharesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/nfs_shares/methods/projects_locations_nfsShares_get'
          - $ref: '#/components/x-stackQL-resources/nfs_shares/methods/projects_locations_nfsShares_list'
        insert: []
        update: []
        delete: []
    operations:
      id: google.baremetalsolution.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
        insert: []
        update: []
        delete: []
    provisioning_configs:
      id: google.baremetalsolution.provisioning_configs
      name: provisioning_configs
      title: Provisioning_configs
      methods:
        projects_locations_provisioningConfigs_create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_provisioningConfigs_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs~1{provisioningConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_provisioningConfigs_patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs~1{provisioningConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_provisioningConfigs_submit:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs:submit/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provisioning_configs/methods/projects_locations_provisioningConfigs_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/provisioning_configs/methods/projects_locations_provisioningConfigs_create'
        update: []
        delete: []
    provisioning_quotas:
      id: google.baremetalsolution.provisioning_quotas
      name: provisioning_quotas
      title: Provisioning_quotas
      methods:
        projects_locations_provisioningQuotas_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningQuotas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: provisioningQuotas
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provisioning_quotas/methods/projects_locations_provisioningQuotas_list'
        insert: []
        update: []
        delete: []
    volumes:
      id: google.baremetalsolution.volumes
      name: volumes
      title: Volumes
      methods:
        projects_locations_volumes_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_resize:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}:resize/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/projects_locations_volumes_get'
          - $ref: '#/components/x-stackQL-resources/volumes/methods/projects_locations_volumes_list'
        insert: []
        update: []
        delete: []
    luns:
      id: google.baremetalsolution.luns
      name: luns
      title: Luns
      methods:
        projects_locations_volumes_luns_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1luns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_luns_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1luns~1{lunsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/luns/methods/projects_locations_volumes_luns_get'
          - $ref: '#/components/x-stackQL-resources/luns/methods/projects_locations_volumes_luns_list'
        insert: []
        update: []
        delete: []
externalDocs:
  url: https://cloud.google.com/bare-metal
info:
  description: Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
  title: Bare Metal Solution API
  version: v2
openapi: 3.1.0
paths:
  /v2/projects/{projectsId}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: baremetalsolution.projects.locations.list
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - locations
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
  /v2/projects/{projectsId}/locations/{locationsId}:
    get:
      description: Gets information about a location.
      operationId: baremetalsolution.projects.locations.get
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - locations
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
  /v2/projects/{projectsId}/locations/{locationsId}/instanceProvisioningSettings:fetch:
    get:
      description: Get instance provisioning settings for a given project. This is hidden method used by UI only.
      operationId: baremetalsolution.projects.locations.instanceProvisioningSettings.fetch
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchInstanceProvisioningSettingsResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - instance_provisioning_settings
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
  /v2/projects/{projectsId}/locations/{locationsId}/instances:
    get:
      description: List servers in a given project and location.
      operationId: baremetalsolution.projects.locations.instances.list
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - instances
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:
    get:
      description: Get details about a single server.
      operationId: baremetalsolution.projects.locations.instances.get
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - instances
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
    patch:
      description: Update details of a single server.
      operationId: baremetalsolution.projects.locations.instances.patch
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - instances
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun:
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
    post:
      description: Detach LUN from Instance.
      operationId: baremetalsolution.projects.locations.instances.detachLun
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachLunRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - instances
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset:
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
    post:
      description: Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.
      operationId: baremetalsolution.projects.locations.instances.reset
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetInstanceRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - instances
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start:
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
    post:
      description: Starts a server that was shutdown.
      operationId: baremetalsolution.projects.locations.instances.start
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartInstanceRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - instances
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop:
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
    post:
      description: Stop a running server.
      operationId: baremetalsolution.projects.locations.instances.stop
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopInstanceRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - instances
  /v2/projects/{projectsId}/locations/{locationsId}/networks:
    get:
      description: List network in a given project and location.
      operationId: baremetalsolution.projects.locations.networks.list
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworksResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - networks
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
  /v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}:
    get:
      description: Get details of a single network.
      operationId: baremetalsolution.projects.locations.networks.get
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networksId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - networks
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
    patch:
      description: Update details of a single network.
      operationId: baremetalsolution.projects.locations.networks.patch
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networksId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - networks
  /v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage:
    get:
      description: List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.
      operationId: baremetalsolution.projects.locations.networks.listNetworkUsage
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkUsageResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - networks_network_usage
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
  /v2/projects/{projectsId}/locations/{locationsId}/nfsShares:
    get:
      description: List NFS shares.
      operationId: baremetalsolution.projects.locations.nfsShares.list
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNfsSharesResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - nfs_shares
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
  /v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}:
    get:
      description: Get details of a single NFS share.
      operationId: baremetalsolution.projects.locations.nfsShares.get
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NfsShare'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - nfs_shares
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
    patch:
      description: Update details of a single NFS share.
      operationId: baremetalsolution.projects.locations.nfsShares.patch
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NfsShare'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - nfs_shares
  /v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    get:
      description: Get details about an operation. This method used only to work around CCFE lack of passthrough LRO support (b/221498758).
      operationId: baremetalsolution.projects.locations.operations.get
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - operations
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
    post:
      description: Create new ProvisioningConfig.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.create
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: email
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningConfig'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfig'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - provisioning_configs
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}:
    get:
      description: Get ProvisioningConfig by name.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.get
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: provisioningConfigsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfig'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - provisioning_configs
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
    patch:
      description: Update existing ProvisioningConfig.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.patch
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: provisioningConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: email
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningConfig'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfig'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - provisioning_configs
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit:
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
    post:
      description: Submit a provisiong configuration for a given project.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.submit
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitProvisioningConfigRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitProvisioningConfigResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - provisioning_configs
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas:
    get:
      description: List the budget details to provision resources on a given project.
      operationId: baremetalsolution.projects.locations.provisioningQuotas.list
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvisioningQuotasResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - provisioning_quotas
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
  /v2/projects/{projectsId}/locations/{locationsId}/volumes:
    get:
      description: List storage volumes in a given project and location.
      operationId: baremetalsolution.projects.locations.volumes.list
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVolumesResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - volumes
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:
    get:
      description: Get details of a single storage volume.
      operationId: baremetalsolution.projects.locations.volumes.get
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - volumes
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
    patch:
      description: Update details of a single storage volume.
      operationId: baremetalsolution.projects.locations.volumes.patch
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - volumes
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns:
    get:
      description: List storage volume luns for given storage volume.
      operationId: baremetalsolution.projects.locations.volumes.luns.list
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLunsResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - luns
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}:
    get:
      description: Get details of a single storage logical unit number(LUN).
      operationId: baremetalsolution.projects.locations.volumes.luns.get
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: lunsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lun'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - luns
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize:
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
    post:
      description: Emergency Volume resize.
      operationId: baremetalsolution.projects.locations.volumes.resize
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResizeVolumeRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - volumes
servers:
  - url: https://baremetalsolution.googleapis.com
