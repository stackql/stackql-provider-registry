openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Bare Metal Solution API
  description: Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
  version: v2
  x-discovery-doc-revision: '20230104'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://cloud.google.com/bare-metal
servers:
  - url: https://baremetalsolution.googleapis.com
components:
  schemas:
    ListNetworkUsageResponse:
      description: Response with Networks with IPs
      properties:
        networks:
          description: Networks with IPs.
          items:
            $ref: '#/components/schemas/NetworkUsage'
          type: array
      id: ListNetworkUsageResponse
      type: object
    GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface:
      properties:
        required:
          type: boolean
          description: If true, interface must have network connected.
        type:
          enum:
            - INTERFACE_TYPE_UNSPECIFIED
            - BOND
            - NIC
          description: Interface type.
          type: string
          enumDescriptions:
            - Unspecified value.
            - Bond interface type.
            - NIC interface type.
        name:
          type: string
          description: Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate. This is of syntax or and forms part of the network template name.
      type: object
      description: Logical interface.
      id: GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface
    RestoreVolumeSnapshotRequest:
      properties: {}
      description: Message for restoring a volume snapshot.
      type: object
      id: RestoreVolumeSnapshotRequest
    Lun:
      description: A storage volume logical unit number (LUN).
      properties:
        shareable:
          description: Display if this LUN can be shared between multiple physical servers.
          type: boolean
        wwid:
          description: The WWID for this LUN.
          type: string
        multiprotocolType:
          enumDescriptions:
            - Server has no OS specified.
            - Server with Linux OS.
          enum:
            - MULTIPROTOCOL_TYPE_UNSPECIFIED
            - LINUX
          description: The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.
          type: string
        name:
          description: Output only. The name of the LUN.
          type: string
          readOnly: true
        id:
          type: string
          description: An identifier for the LUN, generated by the backend.
        bootLun:
          type: boolean
          description: Display if this LUN is a boot LUN.
        state:
          enumDescriptions:
            - The LUN is in an unknown state.
            - The LUN is being created.
            - The LUN is being updated.
            - The LUN is ready for use.
            - The LUN has been requested to be deleted.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - UPDATING
            - READY
            - DELETING
          description: The state of this storage volume.
          type: string
        storageType:
          description: The storage type for this LUN.
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
          type: string
          enumDescriptions:
            - The storage type for this LUN is unknown.
            - This storage type for this LUN is SSD.
            - This storage type for this LUN is HDD.
        storageVolume:
          description: Display the storage volume for this LUN.
          type: string
        sizeGb:
          type: string
          description: The size of this LUN, in gigabytes.
          format: int64
      id: Lun
      type: object
    ProvisioningConfig:
      description: A provisioning configuration.
      id: ProvisioningConfig
      properties:
        instances:
          items:
            $ref: '#/components/schemas/InstanceConfig'
          type: array
          description: Instances to be created.
        networks:
          items:
            $ref: '#/components/schemas/NetworkConfig'
          description: Networks to be created.
          type: array
        volumes:
          items:
            $ref: '#/components/schemas/VolumeConfig'
          description: Volumes to be created.
          type: array
        vpcScEnabled:
          type: boolean
          description: If true, VPC SC is enabled for the cluster.
        updateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. Last update timestamp.
        email:
          type: string
          description: Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.
        location:
          type: string
          description: Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.
        statusMessage:
          description: Optional status messages associated with the FAILED state.
          type: string
        state:
          enumDescriptions:
            - State wasn't specified.
            - ProvisioningConfig is a draft and can be freely modified.
            - ProvisioningConfig was already submitted and cannot be modified.
            - ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.
            - ProvisioningConfig was provisioned, meaning the resources exist.
            - ProvisioningConfig was validated. A validation tool will be run to set this state.
            - ProvisioningConfig was canceled.
            - The request is submitted for provisioning, with error return.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - DRAFT
            - SUBMITTED
            - PROVISIONING
            - PROVISIONED
            - VALIDATED
            - CANCELLED
            - FAILED
          type: string
          description: Output only. State of ProvisioningConfig.
        handoverServiceAccount:
          description: A service account to enable customers to access instance credentials upon handover.
          type: string
        name:
          description: Output only. The system-generated name of the provisioning config. This follows the UUID format.
          readOnly: true
          type: string
        ticketId:
          description: A generated ticket id to track provisioning request.
          type: string
        cloudConsoleUri:
          type: string
          readOnly: true
          description: Output only. URI to Cloud Console UI view of this provisioning config.
        customId:
          description: Optional. The user-defined identifier of the provisioning config.
          type: string
      type: object
    OSImage:
      type: object
      description: Operation System image.
      properties:
        applicableInstanceTypes:
          items:
            type: string
          description: Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
          type: array
        supportedNetworkTemplates:
          description: Network templates that can be used with this OS Image.
          items:
            $ref: '#/components/schemas/ServerNetworkTemplate'
          type: array
        description:
          type: string
          description: OS Image description.
        name:
          readOnly: true
          description: Output only. OS Image's unique name.
          type: string
        code:
          type: string
          description: OS Image code.
      id: OSImage
    Location:
      type: object
      properties:
        labels:
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
          additionalProperties:
            type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        metadata:
          type: object
          description: Service-specific metadata. For example the available capacity at the given location.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
      id: Location
      description: A resource that represents Google Cloud Platform location.
    ResizeVolumeRequest:
      properties:
        sizeGib:
          description: New Volume size, in GiB.
          type: string
          format: int64
      description: Request for emergency resize Volume.
      type: object
      id: ResizeVolumeRequest
    ListProvisioningQuotasResponse:
      type: object
      id: ListProvisioningQuotasResponse
      description: Response message for the list of provisioning quotas.
      properties:
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
        provisioningQuotas:
          description: The provisioning quotas registered in this project.
          type: array
          items:
            $ref: '#/components/schemas/ProvisioningQuota'
    FetchInstanceProvisioningSettingsResponse:
      id: FetchInstanceProvisioningSettingsResponse
      description: Response with all provisioning settings.
      type: object
      properties:
        images:
          items:
            $ref: '#/components/schemas/OSImage'
          type: array
          description: The OS images available.
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        response:
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          type: boolean
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
      id: Operation
      type: object
    ListVolumesResponse:
      properties:
        volumes:
          type: array
          description: The list of storage volumes.
          items:
            $ref: '#/components/schemas/Volume'
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
      type: object
      id: ListVolumesResponse
      description: Response message containing the list of storage volumes.
    QosPolicy:
      properties:
        bandwidthGbps:
          format: double
          type: number
          description: The bandwidth permitted by the QOS policy, in gbps.
      description: QOS policy parameters.
      type: object
      id: QosPolicy
    ListInstancesResponse:
      properties:
        instances:
          type: array
          description: The list of servers.
          items:
            $ref: '#/components/schemas/Instance'
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        nextPageToken:
          type: string
          description: A token identifying a page of results from the server.
      description: Response message for the list of servers.
      type: object
      id: ListInstancesResponse
    NfsShare:
      id: NfsShare
      description: An NFS share.
      properties:
        allowedClients:
          items:
            $ref: '#/components/schemas/AllowedClient'
          description: List of allowed access points.
          type: array
        name:
          description: Immutable. The name of the NFS share.
          type: string
        storageType:
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
          enumDescriptions:
            - The storage type for this volume is unknown.
            - The storage type for this volume is SSD.
            - This storage type for this volume is HDD.
          description: Immutable. The storage type of the underlying volume.
          type: string
        labels:
          description: Labels as key value pairs.
          additionalProperties:
            type: string
          type: object
        volume:
          description: Output only. The underlying volume of the share. Created automatically during provisioning.
          readOnly: true
          type: string
        nfsShareId:
          type: string
          readOnly: true
          description: Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.
        requestedSizeGib:
          type: string
          description: The requested size, in GiB.
          format: int64
        id:
          description: Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future.
          readOnly: true
          type: string
        state:
          description: Output only. The state of the NFS share.
          type: string
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONED
            - CREATING
            - UPDATING
            - DELETING
          enumDescriptions:
            - The share is in an unknown state.
            - The share has been provisioned.
            - The NFS Share is being created.
            - The NFS Share is being updated.
            - The NFS Share has been requested to be deleted.
      type: object
    ListNetworksResponse:
      properties:
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        networks:
          items:
            $ref: '#/components/schemas/Network'
          description: The list of networks.
          type: array
      description: Response message containing the list of networks.
      type: object
      id: ListNetworksResponse
    DisableInteractiveSerialConsoleRequest:
      type: object
      description: Message for disabling the interactive serial console on an instance.
      properties: {}
      id: DisableInteractiveSerialConsoleRequest
    GoogleCloudBaremetalsolutionV2LogicalInterface:
      type: object
      id: GoogleCloudBaremetalsolutionV2LogicalInterface
      description: Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.
      properties:
        name:
          description: Interface name. This is of syntax or and forms part of the network template name.
          type: string
        interfaceIndex:
          description: The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated.
          type: integer
          format: int32
        logicalNetworkInterfaces:
          type: array
          description: List of logical network interfaces within a logical interface.
          items:
            $ref: '#/components/schemas/LogicalNetworkInterface'
    Volume:
      description: A storage volume.
      id: Volume
      type: object
      properties:
        state:
          type: string
          enumDescriptions:
            - The storage volume is in an unknown state.
            - The storage volume is being created.
            - The storage volume is ready for use.
            - The storage volume has been requested to be deleted.
            - The storage volume is being updated.
          description: The state of this storage volume.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
        id:
          type: string
          description: An identifier for the `Volume`, generated by the backend.
        maxSizeGib:
          type: string
          description: Maximum size volume can be expanded to in case of evergency, in GiB.
          format: int64
        notes:
          type: string
          description: Input only. User-specified notes for new Volume. Used to provision Volumes that require manual intervention.
        workloadProfile:
          type: string
          description: The workload profile for the volume.
          enum:
            - WORKLOAD_PROFILE_UNSPECIFIED
            - GENERIC
            - HANA
          enumDescriptions:
            - The workload profile is in an unknown state.
            - The workload profile is generic.
            - The workload profile is hana.
        snapshotReservationDetail:
          description: Details about snapshot space reservation and usage on the storage volume.
          $ref: '#/components/schemas/SnapshotReservationDetail'
        bootVolume:
          type: boolean
          description: Output only. Whether this volume is a boot volume. A boot volume is one which contains a boot LUN.
          readOnly: true
        requestedSizeGib:
          description: The requested size of this storage volume, in GiB.
          type: string
          format: int64
        protocol:
          enumDescriptions:
            - Value is not specified.
            - Fibre Channel protocol.
            - NFS protocol means Volume is a NFS Share volume. Such volumes cannot be manipulated via Volumes API.
          description: Output only. Storage protocol for the Volume.
          type: string
          readOnly: true
          enum:
            - PROTOCOL_UNSPECIFIED
            - FIBRE_CHANNEL
            - NFS
        performanceTier:
          description: Immutable. Performance tier of the Volume. Default is SHARED.
          type: string
          enum:
            - VOLUME_PERFORMANCE_TIER_UNSPECIFIED
            - VOLUME_PERFORMANCE_TIER_SHARED
            - VOLUME_PERFORMANCE_TIER_ASSIGNED
            - VOLUME_PERFORMANCE_TIER_HT
          enumDescriptions:
            - Value is not specified.
            - Regular volumes, shared aggregates.
            - Assigned aggregates.
            - High throughput aggregates.
        storageType:
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
          type: string
          description: The storage type for this volume.
          enumDescriptions:
            - The storage type for this volume is unknown.
            - The storage type for this volume is SSD.
            - This storage type for this volume is HDD.
        currentSizeGib:
          type: string
          description: The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.
          format: int64
        autoGrownSizeGib:
          description: The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.
          type: string
          format: int64
        emergencySizeGib:
          type: string
          description: Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value.
          format: int64
        name:
          readOnly: true
          description: 'Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`'
          type: string
        originallyRequestedSizeGib:
          type: string
          format: int64
          description: Originally requested size, in GiB.
        pod:
          type: string
          description: Immutable. Pod name.
        snapshotSchedulePolicy:
          type: string
          description: The name of the snapshot schedule policy in use for this volume, if any.
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs.
          type: object
        remainingSpaceGib:
          description: The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.
          type: string
          format: int64
        snapshotAutoDeleteBehavior:
          type: string
          enum:
            - SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED
            - DISABLED
            - OLDEST_FIRST
            - NEWEST_FIRST
          enumDescriptions:
            - The unspecified behavior.
            - Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.
            - Delete the oldest snapshots first.
            - Delete the newest snapshots first.
          description: The behavior to use when snapshot reserved space is full.
        snapshotEnabled:
          type: boolean
          description: Whether snapshots are enabled.
    AllowedClient:
      properties:
        allowedClientsCidr:
          type: string
          description: The subnet of IP addresses permitted to access the share.
        network:
          description: The network the access point sits on.
          type: string
        noRootSquash:
          description: Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.
          type: boolean
        allowSuid:
          type: boolean
          description: Allow the setuid flag.
        nfsPath:
          readOnly: true
          description: Output only. The path to access NFS, in format shareIP:/InstanceID InstanceID is the generated ID instead of customer provided name. example like "10.0.0.0:/g123456789-nfs001"
          type: string
        allowDev:
          type: boolean
          description: Allow dev flag. Which controls whether to allow creation of devices.
        shareIp:
          readOnly: true
          type: string
          description: Output only. The IP address of the share on this network. Assigned automatically during provisioning based on the network's services_cidr.
        mountPermissions:
          enum:
            - MOUNT_PERMISSIONS_UNSPECIFIED
            - READ
            - READ_WRITE
          description: Mount permissions.
          enumDescriptions:
            - Permissions were not specified.
            - NFS share can be mount with read-only permissions.
            - NFS share can be mount with read-write permissions.
          type: string
      description: Represents an 'access point' for the share.
      type: object
      id: AllowedClient
    Empty:
      type: object
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
    NetworkAddressReservation:
      id: NetworkAddressReservation
      type: object
      properties:
        note:
          description: A note about this reservation, intended for human consumption.
          type: string
        startAddress:
          description: The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2.
          type: string
        endAddress:
          type: string
          description: The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2.
      description: A reservation of one or more addresses in a network.
    ListVolumeSnapshotsResponse:
      properties:
        volumeSnapshots:
          type: array
          description: The list of snapshots.
          items:
            $ref: '#/components/schemas/VolumeSnapshot'
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
      type: object
      id: ListVolumeSnapshotsResponse
      description: Response message containing the list of volume snapshots.
    ListLocationsResponse:
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        locations:
          items:
            $ref: '#/components/schemas/Location'
          type: array
          description: A list of locations that matches the specified filter in the request.
      id: ListLocationsResponse
      type: object
      description: The response message for Locations.ListLocations.
    Instance:
      id: Instance
      properties:
        labels:
          type: object
          description: Labels as key value pairs.
          additionalProperties:
            type: string
        osImage:
          description: The OS image currently installed on the server.
          type: string
        hyperthreadingEnabled:
          type: boolean
          description: True if you enable hyperthreading for the server, otherwise false. The default value is false.
        luns:
          type: array
          description: Immutable. List of LUNs associated with this server.
          items:
            $ref: '#/components/schemas/Lun'
        pod:
          type: string
          description: Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.
        id:
          type: string
          description: Output only. An identifier for the `Instance`, generated by the backend.
          readOnly: true
        loginInfo:
          description: Output only. Text field about info for logging in.
          type: string
          readOnly: true
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - DELETED
            - UPDATING
            - STARTING
            - STOPPING
            - SHUTDOWN
          enumDescriptions:
            - The server is in an unknown state.
            - The server is being provisioned.
            - The server is running.
            - The server has been deleted.
            - The server is being updated.
            - The server is starting.
            - The server is stopping.
            - The server is shutdown.
          description: Output only. The state of the server.
          readOnly: true
        networkTemplate:
          description: Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of "bond" or "nic".
          type: string
        createTime:
          description: Output only. Create a time stamp.
          type: string
          readOnly: true
          format: google-datetime
        logicalInterfaces:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudBaremetalsolutionV2LogicalInterface'
          description: List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.
        name:
          description: 'Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`'
          type: string
        interactiveSerialConsoleEnabled:
          description: Output only. True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.
          type: boolean
          readOnly: true
        networks:
          type: array
          items:
            $ref: '#/components/schemas/Network'
          readOnly: true
          description: Output only. List of networks associated with this server.
        volumes:
          description: Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses.
          type: array
          items:
            $ref: '#/components/schemas/Volume'
        machineType:
          description: Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
          type: string
        workloadProfile:
          description: The workload profile for the instance.
          type: string
          enum:
            - WORKLOAD_PROFILE_UNSPECIFIED
            - WORKLOAD_PROFILE_GENERIC
            - WORKLOAD_PROFILE_HANA
          enumDescriptions:
            - The workload profile is in an unknown state.
            - The workload profile is generic.
            - The workload profile is hana.
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. Update a time stamp.
      type: object
      description: A server.
    ListLunsResponse:
      properties:
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        luns:
          description: The list of luns.
          items:
            $ref: '#/components/schemas/Lun'
          type: array
      description: Response message containing the list of storage volume luns.
      id: ListLunsResponse
      type: object
    VlanAttachment:
      description: VLAN attachment details.
      properties:
        routerIp:
          description: The router IP of the attachment.
          type: string
        qosPolicy:
          $ref: '#/components/schemas/QosPolicy'
          description: The QOS policy applied to this VLAN attachment. This value should be preferred to using qos at vrf level.
        peerVlanId:
          description: The peer vlan ID of the attachment.
          type: string
          format: int64
        peerIp:
          type: string
          description: The peer IP of the attachment.
        id:
          type: string
          description: Immutable. The identifier of the attachment within vrf.
        pairingKey:
          type: string
          description: Input only. Pairing key.
      type: object
      id: VlanAttachment
    Network:
      type: object
      id: Network
      properties:
        jumboFramesEnabled:
          type: boolean
          description: Whether network uses standard frames or jumbo ones.
        labels:
          type: object
          additionalProperties:
            type: string
          description: Labels as key value pairs.
        vrf:
          description: The vrf for the Network.
          $ref: '#/components/schemas/VRF'
        mountPoints:
          items:
            $ref: '#/components/schemas/NetworkMountPoint'
          description: Input only. List of mount points to attach the network to.
          type: array
        reservations:
          description: List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server.
          type: array
          items:
            $ref: '#/components/schemas/NetworkAddressReservation'
        servicesCidr:
          type: string
          description: IP range for reserved for services (e.g. NFS).
        type:
          description: The type of this network.
          enum:
            - TYPE_UNSPECIFIED
            - CLIENT
            - PRIVATE
          enumDescriptions:
            - Unspecified value.
            - Client network, a network peered to a Google Cloud VPC.
            - Private network, a network local to the Bare Metal Solution environment.
          type: string
        state:
          description: The Network state.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - PROVISIONED
            - DEPROVISIONING
            - UPDATING
          enumDescriptions:
            - The Network is in an unknown state.
            - The Network is provisioning.
            - The Network has been provisioned.
            - The Network is being deprovisioned.
            - The Network is being updated.
          type: string
        vlanId:
          description: The vlan id of the Network.
          type: string
        pod:
          description: Output only. Pod name.
          readOnly: true
          type: string
        id:
          type: string
          description: An identifier for the `Network`, generated by the backend.
        macAddress:
          description: List of physical interfaces.
          items:
            type: string
          type: array
        gatewayIp:
          readOnly: true
          type: string
          description: Output only. Gateway ip address.
        name:
          type: string
          description: 'Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`'
          readOnly: true
        ipAddress:
          type: string
          description: IP address configured.
        cidr:
          type: string
          description: The cidr of the Network.
      description: A Network.
    ListNfsSharesResponse:
      description: Response message containing the list of NFS shares.
      properties:
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        nfsShares:
          type: array
          description: The list of NFS shares.
          items:
            $ref: '#/components/schemas/NfsShare'
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
      type: object
      id: ListNfsSharesResponse
    NetworkUsage:
      properties:
        network:
          $ref: '#/components/schemas/Network'
          description: Network.
        usedIps:
          description: All used IP addresses in this network.
          items:
            type: string
          type: array
      id: NetworkUsage
      description: Network with all used IP addresses.
      type: object
    ServerNetworkTemplate:
      description: Network template.
      properties:
        name:
          type: string
          description: 'Output only. Template''s unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of "bond" or "nic".'
          readOnly: true
        logicalInterfaces:
          description: Logical interfaces.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface'
        applicableInstanceTypes:
          type: array
          description: Instance types this template is applicable to.
          items:
            type: string
      id: ServerNetworkTemplate
      type: object
    SnapshotReservationDetail:
      id: SnapshotReservationDetail
      description: Details about snapshot space reservation and usage on the storage volume.
      properties:
        reservedSpaceRemainingGib:
          type: string
          format: int64
          description: The amount, in GiB, of available space in this storage volume's reserved snapshot space.
        reservedSpaceUsedPercent:
          description: The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.
          type: integer
          format: int32
        reservedSpaceGib:
          format: int64
          description: The space on this storage volume reserved for snapshots, shown in GiB.
          type: string
        reservedSpacePercent:
          format: int32
          description: Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.
          type: integer
      type: object
    VolumeConfig:
      properties:
        sizeGb:
          format: int32
          type: integer
          description: The requested size of this volume, in GB.
        userNote:
          type: string
          description: User note field, it can be used by customers to add additional information for the BMS Ops team .
        lunRanges:
          type: array
          items:
            $ref: '#/components/schemas/LunRange'
          description: LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.
        gcpService:
          description: The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.
          type: string
        machineIds:
          description: Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.
          items:
            type: string
          type: array
        type:
          description: The type of this Volume.
          type: string
          enumDescriptions:
            - The unspecified type.
            - This Volume is on flash.
            - This Volume is on disk.
          enum:
            - TYPE_UNSPECIFIED
            - FLASH
            - DISK
        snapshotsEnabled:
          type: boolean
          description: Whether snapshots should be enabled.
        name:
          readOnly: true
          description: Output only. The name of the volume config.
          type: string
        protocol:
          type: string
          description: Volume protocol.
          enumDescriptions:
            - Unspecified value.
            - Fibre channel.
            - Network file system.
          enum:
            - PROTOCOL_UNSPECIFIED
            - PROTOCOL_FC
            - PROTOCOL_NFS
        performanceTier:
          enum:
            - VOLUME_PERFORMANCE_TIER_UNSPECIFIED
            - VOLUME_PERFORMANCE_TIER_SHARED
            - VOLUME_PERFORMANCE_TIER_ASSIGNED
            - VOLUME_PERFORMANCE_TIER_HT
          description: Performance tier of the Volume. Default is SHARED.
          type: string
          enumDescriptions:
            - Value is not specified.
            - Regular volumes, shared aggregates.
            - Assigned aggregates.
            - High throughput aggregates.
        nfsExports:
          type: array
          description: NFS exports. Set only when protocol is PROTOCOL_NFS.
          items:
            $ref: '#/components/schemas/NfsExport'
        id:
          type: string
          description: A transient unique identifier to identify a volume within an ProvisioningConfig request.
      id: VolumeConfig
      description: Configuration parameters for a new volume.
      type: object
    StopInstanceRequest:
      id: StopInstanceRequest
      description: Message requesting to stop a server.
      properties: {}
      type: object
    SSHKey:
      id: SSHKey
      description: An SSH key, used for authorizing with the interactive serial console feature.
      type: object
      properties:
        publicKey:
          description: The public SSH key. This must be in OpenSSH .authorized_keys format.
          type: string
        name:
          description: Output only. The name of this SSH key. Currently, the only valid value for the location is "global".
          type: string
          readOnly: true
    DetachLunRequest:
      id: DetachLunRequest
      description: Message for detach specific LUN from an Instance.
      type: object
      properties:
        skipReboot:
          description: If true, performs lun unmapping without instance reboot.
          type: boolean
        lun:
          type: string
          description: Required. Name of the Lun to detach.
    ListSSHKeysResponse:
      type: object
      description: Message for response of ListSSHKeys.
      id: ListSSHKeysResponse
      properties:
        sshKeys:
          description: The SSH keys registered in the project.
          items:
            $ref: '#/components/schemas/SSHKey'
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
    IntakeVlanAttachment:
      properties:
        id:
          description: Identifier of the VLAN attachment.
          type: string
        pairingKey:
          description: Attachment pairing key.
          type: string
      description: A GCP vlan attachment.
      type: object
      id: IntakeVlanAttachment
    NetworkMountPoint:
      type: object
      properties:
        defaultGateway:
          type: boolean
          description: Network should be a default gateway.
        logicalInterface:
          type: string
          description: Logical interface to detach from.
        ipAddress:
          type: string
          description: Ip address of the server.
        instance:
          type: string
          description: Instance to attach network to.
      description: Mount point for a network.
      id: NetworkMountPoint
    InstanceQuota:
      properties:
        name:
          readOnly: true
          type: string
          description: Output only. The name of the instance quota.
        availableMachineCount:
          format: int32
          type: integer
          description: Number of machines than can be created for the given location and instance_type.
        gcpService:
          description: The gcp service of the provisioning quota.
          type: string
        instanceType:
          description: 'Instance type. Deprecated: use gcp_service.'
          type: string
        location:
          type: string
          description: Location where the quota applies.
      description: A resource budget.
      type: object
      id: InstanceQuota
    Status:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
        code:
          type: integer
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
      type: object
      id: Status
    LunRange:
      description: A LUN(Logical Unit Number) range.
      id: LunRange
      type: object
      properties:
        quantity:
          type: integer
          format: int32
          description: Number of LUNs to create.
        sizeGb:
          format: int32
          type: integer
          description: The requested size of each LUN, in GB.
    SubmitProvisioningConfigResponse:
      description: Response for SubmitProvisioningConfig.
      id: SubmitProvisioningConfigResponse
      properties:
        provisioningConfig:
          description: The submitted provisioning config.
          $ref: '#/components/schemas/ProvisioningConfig'
      type: object
    NetworkConfig:
      properties:
        type:
          enum:
            - TYPE_UNSPECIFIED
            - CLIENT
            - PRIVATE
          type: string
          description: The type of this network, either Client or Private.
          enumDescriptions:
            - Unspecified value.
            - Client network, that is a network peered to a GCP VPC.
            - Private network, that is a network local to the BMS POD.
        id:
          type: string
          description: A transient unique identifier to identify a volume within an ProvisioningConfig request.
        vlanSameProject:
          description: Whether the VLAN attachment pair is located in the same project.
          type: boolean
        serviceCidr:
          type: string
          enum:
            - SERVICE_CIDR_UNSPECIFIED
            - DISABLED
            - HIGH_26
            - HIGH_27
            - HIGH_28
          description: Service CIDR, if any.
          enumDescriptions:
            - Unspecified value.
            - Services are disabled for the given network.
            - Use the highest /26 block of the network to host services.
            - Use the highest /27 block of the network to host services.
            - Use the highest /28 block of the network to host services.
        bandwidth:
          enumDescriptions:
            - Unspecified value.
            - 1 Gbps.
            - 2 Gbps.
            - 5 Gbps.
            - 10 Gbps.
          description: Interconnect bandwidth. Set only when type is CLIENT.
          type: string
          enum:
            - BANDWIDTH_UNSPECIFIED
            - BW_1_GBPS
            - BW_2_GBPS
            - BW_5_GBPS
            - BW_10_GBPS
        jumboFramesEnabled:
          description: The JumboFramesEnabled option for customer to set.
          type: boolean
        userNote:
          description: User note field, it can be used by customers to add additional information for the BMS Ops team .
          type: string
        gcpService:
          type: string
          description: The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.
        vlanAttachments:
          description: List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).
          type: array
          items:
            $ref: '#/components/schemas/IntakeVlanAttachment'
        cidr:
          type: string
          description: CIDR range of the network.
        name:
          type: string
          description: Output only. The name of the network config.
          readOnly: true
      id: NetworkConfig
      description: Configuration parameters for a new network.
      type: object
    InstanceConfig:
      properties:
        clientNetwork:
          $ref: '#/components/schemas/NetworkAddress'
          description: Client network address. Filled if InstanceConfig.multivlan_config is false.
        logicalInterfaces:
          items:
            $ref: '#/components/schemas/GoogleCloudBaremetalsolutionV2LogicalInterface'
          description: List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.
          type: array
        networkTemplate:
          description: Server network template name. Filled if InstanceConfig.multivlan_config is true.
          type: string
        privateNetwork:
          $ref: '#/components/schemas/NetworkAddress'
          description: Private network address, if any. Filled if InstanceConfig.multivlan_config is false.
        id:
          description: A transient unique identifier to idenfity an instance within an ProvisioningConfig request.
          type: string
        instanceType:
          type: string
          description: Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
        name:
          description: Output only. The name of the instance config.
          readOnly: true
          type: string
        userNote:
          type: string
          description: User note field, it can be used by customers to add additional information for the BMS Ops team .
        hyperthreading:
          type: boolean
          description: Whether the instance should be provisioned with Hyperthreading enabled.
        networkConfig:
          type: string
          enum:
            - NETWORKCONFIG_UNSPECIFIED
            - SINGLE_VLAN
            - MULTI_VLAN
          enumDescriptions:
            - The unspecified network configuration.
            - Instance part of single client network and single private network.
            - Instance part of multiple (or single) client networks and private networks.
          description: The type of network configuration on the instance.
        osImage:
          description: OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
          type: string
        accountNetworksEnabled:
          type: boolean
          description: If true networks can be from different projects of the same vendor account.
      type: object
      id: InstanceConfig
      description: Configuration parameters for a new instance.
    StartInstanceRequest:
      id: StartInstanceRequest
      properties: {}
      description: Message requesting to start a server.
      type: object
    EnableInteractiveSerialConsoleRequest:
      description: Message for enabling the interactive serial console on an instance.
      type: object
      properties: {}
      id: EnableInteractiveSerialConsoleRequest
    NfsExport:
      properties:
        noRootSquash:
          description: Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.
          type: boolean
        permissions:
          enumDescriptions:
            - Unspecified value.
            - Read-only permission.
            - Read-write permission.
          enum:
            - PERMISSIONS_UNSPECIFIED
            - READ_ONLY
            - READ_WRITE
          description: Export permissions.
          type: string
        allowDev:
          type: boolean
          description: Allow dev flag in NfsShare AllowedClientsRequest.
        allowSuid:
          type: boolean
          description: Allow the setuid flag.
        machineId:
          type: string
          description: Either a single machine, identified by an ID, or a comma-separated list of machine IDs.
        cidr:
          type: string
          description: A CIDR range.
        networkId:
          description: Network to use to publish the export.
          type: string
      type: object
      description: A NFS export entry.
      id: NfsExport
    NetworkAddress:
      id: NetworkAddress
      properties:
        address:
          description: IPv4 address to be assigned to the server.
          type: string
        networkId:
          type: string
          description: Id of the network to use, within the same ProvisioningConfig request.
        existingNetworkId:
          type: string
          description: Name of the existing network to use.
      description: A network.
      type: object
    SubmitProvisioningConfigRequest:
      properties:
        provisioningConfig:
          description: Required. The ProvisioningConfig to create.
          $ref: '#/components/schemas/ProvisioningConfig'
        email:
          type: string
          description: Optional. Email provided to send a confirmation with provisioning config to.
      type: object
      id: SubmitProvisioningConfigRequest
      description: Request for SubmitProvisioningConfig.
    LogicalNetworkInterface:
      properties:
        networkType:
          description: Type of network.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - CLIENT
            - PRIVATE
          enumDescriptions:
            - Unspecified value.
            - Client network, a network peered to a Google Cloud VPC.
            - Private network, a network local to the Bare Metal Solution environment.
        defaultGateway:
          description: Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance.
          type: boolean
        id:
          type: string
          description: An identifier for the `Network`, generated by the backend.
        network:
          description: Name of the network
          type: string
        ipAddress:
          description: IP address in the network
          type: string
      id: LogicalNetworkInterface
      type: object
      description: Each logical network interface is effectively a network and IP pair.
    VolumeSnapshot:
      type: object
      description: A snapshot of a volume. Only boot volumes can have snapshots.
      id: VolumeSnapshot
      properties:
        storageVolume:
          readOnly: true
          type: string
          description: Output only. The name of the volume which this snapshot belongs to.
        description:
          description: The description of the snapshot.
          type: string
        createTime:
          description: Output only. The creation time of the snapshot.
          readOnly: true
          type: string
          format: google-datetime
        type:
          description: Output only. The type of the snapshot which indicates whether it was scheduled or manual/ad-hoc.
          enumDescriptions:
            - Type is not specified.
            - Snapshot was taken manually by user.
            - Snapshot was taken automatically as a part of a snapshot schedule.
          enum:
            - SNAPSHOT_TYPE_UNSPECIFIED
            - AD_HOC
            - SCHEDULED
          readOnly: true
          type: string
        name:
          type: string
          description: The name of the snapshot.
        id:
          description: Output only. An identifier for the snapshot, generated by the backend.
          readOnly: true
          type: string
    VRF:
      type: object
      description: A network VRF.
      properties:
        name:
          description: The name of the VRF.
          type: string
        vlanAttachments:
          type: array
          items:
            $ref: '#/components/schemas/VlanAttachment'
          description: The list of VLAN attachments for the VRF.
        qosPolicy:
          description: The QOS policy applied to this VRF. The value is only meaningful when all the vlan attachments have the same QoS. This field should not be used for new integrations, use vlan attachment level qos instead. The field is left for backward-compatibility.
          $ref: '#/components/schemas/QosPolicy'
        state:
          description: The possible state of VRF.
          enumDescriptions:
            - The unspecified state.
            - The vrf is provisioning.
            - The vrf is provisioned.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - PROVISIONED
          type: string
      id: VRF
    ResetInstanceRequest:
      description: Message requesting to reset a server.
      properties: {}
      type: object
      id: ResetInstanceRequest
    ProvisioningQuota:
      description: A provisioning quota for a given project.
      type: object
      id: ProvisioningQuota
      properties:
        serverCount:
          type: string
          description: Server count.
          format: int64
        instanceQuota:
          description: Instance quota.
          $ref: '#/components/schemas/InstanceQuota'
        location:
          type: string
          description: The specific location of the provisioining quota.
        assetType:
          enum:
            - ASSET_TYPE_UNSPECIFIED
            - ASSET_TYPE_SERVER
            - ASSET_TYPE_STORAGE
            - ASSET_TYPE_NETWORK
          type: string
          description: The asset type of this provisioning quota.
          enumDescriptions:
            - The unspecified type.
            - The server asset type.
            - The storage asset type.
            - The network asset type.
        name:
          type: string
          readOnly: true
          description: Output only. The name of the provisioning quota.
        gcpService:
          type: string
          description: The gcp service of the provisioning quota.
        storageGib:
          type: string
          description: Storage size (GB).
          format: int64
        availableCount:
          format: int32
          type: integer
          description: The available count of the provisioning quota.
        networkBandwidth:
          type: string
          description: Network bandwidth, Gbps
          format: int64
  parameters:
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    networks:
      id: google.baremetalsolution.networks
      name: networks
      title: Networks
      methods:
        projects_locations_networks_patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks~1{networksId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_networks_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks~1{networksId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_networks_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/networks/methods/projects_locations_networks_get'
          - $ref: '#/components/x-stackQL-resources/networks/methods/projects_locations_networks_list'
        insert: []
        update: []
        delete: []
    networks_network_usage:
      id: google.baremetalsolution.networks_network_usage
      name: networks_network_usage
      title: Networks_network_usage
      methods:
        projects_locations_networks_listNetworkUsage:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks:listNetworkUsage/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: networks
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/networks_network_usage/methods/projects_locations_networks_listNetworkUsage'
        insert: []
        update: []
        delete: []
    instance_provisioning_settings:
      id: google.baremetalsolution.instance_provisioning_settings
      name: instance_provisioning_settings
      title: Instance_provisioning_settings
      methods:
        projects_locations_instanceProvisioningSettings_fetch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instanceProvisioningSettings:fetch/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instance_provisioning_settings/methods/projects_locations_instanceProvisioningSettings_fetch'
        insert: []
        update: []
        delete: []
    snapshots:
      id: google.baremetalsolution.snapshots
      name: snapshots
      title: Snapshots
      methods:
        projects_locations_volumes_snapshots_restoreVolumeSnapshot:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots~1{snapshotsId}:restoreVolumeSnapshot/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_snapshots_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_snapshots_create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_snapshots_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots~1{snapshotsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_snapshots_delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots~1{snapshotsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_volumes_snapshots_get'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_volumes_snapshots_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_volumes_snapshots_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_volumes_snapshots_delete'
    luns:
      id: google.baremetalsolution.luns
      name: luns
      title: Luns
      methods:
        projects_locations_volumes_luns_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1luns~1{lunsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_luns_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1luns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/luns/methods/projects_locations_volumes_luns_get'
          - $ref: '#/components/x-stackQL-resources/luns/methods/projects_locations_volumes_luns_list'
        insert: []
        update: []
        delete: []
    volumes:
      id: google.baremetalsolution.volumes
      name: volumes
      title: Volumes
      methods:
        projects_locations_volumes_patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_resize:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}:resize/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/projects_locations_volumes_get'
          - $ref: '#/components/x-stackQL-resources/volumes/methods/projects_locations_volumes_list'
        insert: []
        update: []
        delete: []
    nfs_shares:
      id: google.baremetalsolution.nfs_shares
      name: nfs_shares
      title: Nfs_shares
      methods:
        projects_locations_nfsShares_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares~1{nfsSharesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_nfsShares_delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares~1{nfsSharesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_nfsShares_patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares~1{nfsSharesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_nfsShares_create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_nfsShares_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/nfs_shares/methods/projects_locations_nfsShares_get'
          - $ref: '#/components/x-stackQL-resources/nfs_shares/methods/projects_locations_nfsShares_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/nfs_shares/methods/projects_locations_nfsShares_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/nfs_shares/methods/projects_locations_nfsShares_delete'
    provisioning_configs:
      id: google.baremetalsolution.provisioning_configs
      name: provisioning_configs
      title: Provisioning_configs
      methods:
        projects_locations_provisioningConfigs_patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs~1{provisioningConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_provisioningConfigs_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs~1{provisioningConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_provisioningConfigs_create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_provisioningConfigs_submit:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs:submit/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provisioning_configs/methods/projects_locations_provisioningConfigs_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/provisioning_configs/methods/projects_locations_provisioningConfigs_create'
        update: []
        delete: []
    provisioning_quotas:
      id: google.baremetalsolution.provisioning_quotas
      name: provisioning_quotas
      title: Provisioning_quotas
      methods:
        projects_locations_provisioningQuotas_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningQuotas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: provisioningQuotas
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provisioning_quotas/methods/projects_locations_provisioningQuotas_list'
        insert: []
        update: []
        delete: []
    instances:
      id: google.baremetalsolution.instances
      name: instances
      title: Instances
      methods:
        projects_locations_instances_patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_detachLun:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:detachLun/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_reset:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:reset/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_enableInteractiveSerialConsole:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:enableInteractiveSerialConsole/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_start:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:start/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_stop:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_disableInteractiveSerialConsole:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:disableInteractiveSerialConsole/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/projects_locations_instances_get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/projects_locations_instances_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/projects_locations_instances_create'
        update: []
        delete: []
    operations:
      id: google.baremetalsolution.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
        insert: []
        update: []
        delete: []
    ssh_keys:
      id: google.baremetalsolution.ssh_keys
      name: ssh_keys
      title: Ssh_keys
      methods:
        projects_locations_sshKeys_delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1sshKeys~1{sshKeysId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sshKeys_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1sshKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: sshKeys
        projects_locations_sshKeys_create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1sshKeys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ssh_keys/methods/projects_locations_sshKeys_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/ssh_keys/methods/projects_locations_sshKeys_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/ssh_keys/methods/projects_locations_sshKeys_delete'
    locations:
      id: google.baremetalsolution.locations
      name: locations
      title: Locations
      methods:
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: locations
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
paths:
  /v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
    patch:
      description: Update details of a single network.
      operationId: baremetalsolution.projects.locations.networks.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networksId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: networks
      x-stackQL-verb: exec
    get:
      description: Get details of a single network.
      operationId: baremetalsolution.projects.locations.networks.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networksId
          required: true
          schema:
            type: string
      x-stackQL-resource: networks
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/networks:
    parameters: *ref_1
    get:
      description: List network in a given project and location.
      operationId: baremetalsolution.projects.locations.networks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworksResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: networks
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage:
    parameters: *ref_1
    get:
      description: List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.
      operationId: baremetalsolution.projects.locations.networks.listNetworkUsage
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkUsageResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: networks_network_usage
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/instanceProvisioningSettings:fetch:
    parameters: *ref_1
    get:
      description: Get instance provisioning settings for a given project. This is hidden method used by UI only.
      operationId: baremetalsolution.projects.locations.instanceProvisioningSettings.fetch
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchInstanceProvisioningSettingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: instance_provisioning_settings
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restoreVolumeSnapshot:
    parameters: *ref_1
    post:
      description: Uses the specified snapshot to restore its parent volume. Returns INVALID_ARGUMENT if called for a non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreVolumeSnapshotRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots:
    parameters: *ref_1
    get:
      description: Retrieves the list of snapshots for the specified volume. Returns a response with an empty list of snapshots if called for a non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVolumeSnapshotsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-verb: select
    post:
      description: Takes a snapshot of a boot volume. Returns INVALID_ARGUMENT if called for a non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeSnapshot'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshot'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-verb: insert
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:
    parameters: *ref_1
    get:
      description: Returns the specified snapshot resource. Returns INVALID_ARGUMENT if called for a non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshot'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-verb: select
    delete:
      description: Deletes a volume snapshot. Returns INVALID_ARGUMENT if called for a non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-verb: delete
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}:
    parameters: *ref_1
    get:
      description: Get details of a single storage logical unit number(LUN).
      operationId: baremetalsolution.projects.locations.volumes.luns.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: lunsId
          required: true
          schema:
            type: string
      x-stackQL-resource: luns
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns:
    parameters: *ref_1
    get:
      description: List storage volume luns for given storage volume.
      operationId: baremetalsolution.projects.locations.volumes.luns.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: luns
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:
    parameters: *ref_1
    patch:
      description: Update details of a single storage volume.
      operationId: baremetalsolution.projects.locations.volumes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: exec
    get:
      description: Get details of a single storage volume.
      operationId: baremetalsolution.projects.locations.volumes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/volumes:
    parameters: *ref_1
    get:
      description: List storage volumes in a given project and location.
      operationId: baremetalsolution.projects.locations.volumes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVolumesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize:
    parameters: *ref_1
    post:
      description: Emergency Volume resize.
      operationId: baremetalsolution.projects.locations.volumes.resize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResizeVolumeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}:
    parameters: *ref_1
    get:
      description: Get details of a single NFS share.
      operationId: baremetalsolution.projects.locations.nfsShares.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NfsShare'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-verb: select
    delete:
      description: Delete an NFS share. The underlying volume is automatically deleted.
      operationId: baremetalsolution.projects.locations.nfsShares.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-verb: delete
    patch:
      description: Update details of a single NFS share.
      operationId: baremetalsolution.projects.locations.nfsShares.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NfsShare'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/nfsShares:
    parameters: *ref_1
    post:
      description: Create an NFS share.
      operationId: baremetalsolution.projects.locations.nfsShares.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NfsShare'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-verb: insert
    get:
      description: List NFS shares.
      operationId: baremetalsolution.projects.locations.nfsShares.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNfsSharesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}:
    parameters: *ref_1
    patch:
      description: Update existing ProvisioningConfig.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: provisioningConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: email
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: provisioning_configs
      x-stackQL-verb: exec
    get:
      description: Get ProvisioningConfig by name.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: provisioningConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: provisioning_configs
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:
    parameters: *ref_1
    post:
      description: Create new ProvisioningConfig.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: email
          schema:
            type: string
      x-stackQL-resource: provisioning_configs
      x-stackQL-verb: insert
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit:
    parameters: *ref_1
    post:
      description: Submit a provisiong configuration for a given project.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.submit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitProvisioningConfigRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitProvisioningConfigResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: provisioning_configs
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas:
    parameters: *ref_1
    get:
      description: List the budget details to provision resources on a given project.
      operationId: baremetalsolution.projects.locations.provisioningQuotas.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvisioningQuotasResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: provisioning_quotas
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:
    parameters: *ref_1
    patch:
      description: Update details of a single server.
      operationId: baremetalsolution.projects.locations.instances.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
    get:
      description: Get details about a single server.
      operationId: baremetalsolution.projects.locations.instances.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun:
    parameters: *ref_1
    post:
      description: Detach LUN from Instance.
      operationId: baremetalsolution.projects.locations.instances.detachLun
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachLunRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset:
    parameters: *ref_1
    post:
      description: Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.
      operationId: baremetalsolution.projects.locations.instances.reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/instances:
    parameters: *ref_1
    post:
      description: Create an Instance.
      operationId: baremetalsolution.projects.locations.instances.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: insert
    get:
      description: List servers in a given project and location.
      operationId: baremetalsolution.projects.locations.instances.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: instances
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:enableInteractiveSerialConsole:
    parameters: *ref_1
    post:
      description: Enable the interactive serial console feature on an instance.
      operationId: baremetalsolution.projects.locations.instances.enableInteractiveSerialConsole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableInteractiveSerialConsoleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start:
    parameters: *ref_1
    post:
      description: Starts a server that was shutdown.
      operationId: baremetalsolution.projects.locations.instances.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop:
    parameters: *ref_1
    post:
      description: Stop a running server.
      operationId: baremetalsolution.projects.locations.instances.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disableInteractiveSerialConsole:
    parameters: *ref_1
    post:
      description: Disable the interactive serial console feature on an instance.
      operationId: baremetalsolution.projects.locations.instances.disableInteractiveSerialConsole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableInteractiveSerialConsoleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: Get details about an operation. This method used only to work around CCFE lack of passthrough LRO support (b/221498758).
      operationId: baremetalsolution.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/sshKeys/{sshKeysId}:
    parameters: *ref_1
    delete:
      description: Deletes a public SSH key registered in the specified project.
      operationId: baremetalsolution.projects.locations.sshKeys.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sshKeysId
          required: true
          schema:
            type: string
      x-stackQL-resource: ssh_keys
      x-stackQL-verb: delete
  /v2/projects/{projectsId}/locations/{locationsId}/sshKeys:
    parameters: *ref_1
    get:
      description: Lists the public SSH keys registered for the specified project. These SSH keys are used only for the interactive serial console feature.
      operationId: baremetalsolution.projects.locations.sshKeys.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSSHKeysResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: ssh_keys
      x-stackQL-verb: select
    post:
      description: Register a public SSH key in the specified project for use with the interactive serial console feature.
      operationId: baremetalsolution.projects.locations.sshKeys.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSHKey'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: sshKeyId
          schema:
            type: string
      x-stackQL-resource: ssh_keys
      x-stackQL-verb: insert
  /v2/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: baremetalsolution.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: baremetalsolution.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
