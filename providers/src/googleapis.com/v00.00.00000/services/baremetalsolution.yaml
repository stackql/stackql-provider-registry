openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Bare Metal Solution API
  description: Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
  version: v2
  x-discovery-doc-revision: '20221201'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://cloud.google.com/bare-metal
servers:
  - url: https://baremetalsolution.googleapis.com
components:
  schemas:
    VlanAttachment:
      type: object
      properties:
        peerVlanId:
          format: int64
          description: The peer vlan ID of the attachment.
          type: string
        qosPolicy:
          $ref: '#/components/schemas/QosPolicy'
          description: The QOS policy applied to this VLAN attachment. This value should be preferred to using qos at vrf level.
        peerIp:
          type: string
          description: The peer IP of the attachment.
        id:
          description: Immutable. The identifier of the attachment within vrf.
          type: string
        pairingKey:
          description: Input only. Pairing key.
          type: string
        routerIp:
          type: string
          description: The router IP of the attachment.
      description: VLAN attachment details.
      id: VlanAttachment
    DetachLunRequest:
      description: Message for detach specific LUN from an Instance.
      type: object
      id: DetachLunRequest
      properties:
        lun:
          description: Required. Name of the Lun to detach.
          type: string
        skipReboot:
          description: If true, performs lun unmapping without instance reboot.
          type: boolean
    Empty:
      id: Empty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
      properties: {}
    ListLunsResponse:
      description: Response message containing the list of storage volume luns.
      type: object
      properties:
        luns:
          items:
            $ref: '#/components/schemas/Lun'
          description: The list of luns.
          type: array
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
      id: ListLunsResponse
    InstanceConfig:
      type: object
      id: InstanceConfig
      properties:
        networkTemplate:
          type: string
          description: Server network template name. Filled if InstanceConfig.multivlan_config is true.
        clientNetwork:
          $ref: '#/components/schemas/NetworkAddress'
          description: Client network address. Filled if InstanceConfig.multivlan_config is false.
        privateNetwork:
          $ref: '#/components/schemas/NetworkAddress'
          description: Private network address, if any. Filled if InstanceConfig.multivlan_config is false.
        networkConfig:
          description: The type of network configuration on the instance.
          type: string
          enum:
            - NETWORKCONFIG_UNSPECIFIED
            - SINGLE_VLAN
            - MULTI_VLAN
          enumDescriptions:
            - The unspecified network configuration.
            - Instance part of single client network and single private network.
            - Instance part of multiple (or single) client networks and private networks.
        id:
          description: A transient unique identifier to idenfity an instance within an ProvisioningConfig request.
          type: string
        hyperthreading:
          type: boolean
          description: Whether the instance should be provisioned with Hyperthreading enabled.
        accountNetworksEnabled:
          type: boolean
          description: If true networks can be from different projects of the same vendor account.
        name:
          description: Output only. The name of the instance config.
          readOnly: true
          type: string
        osImage:
          type: string
          description: OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
        instanceType:
          description: Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
          type: string
        logicalInterfaces:
          items:
            $ref: '#/components/schemas/GoogleCloudBaremetalsolutionV2LogicalInterface'
          type: array
          description: List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.
        userNote:
          description: User note field, it can be used by customers to add additional information for the BMS Ops team .
          type: string
      description: Configuration parameters for a new instance.
    ListNfsSharesResponse:
      properties:
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        nfsShares:
          type: array
          description: The list of NFS shares.
          items:
            $ref: '#/components/schemas/NfsShare'
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
      description: Response message containing the list of NFS shares.
      type: object
      id: ListNfsSharesResponse
    ListInstancesResponse:
      properties:
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        instances:
          type: array
          description: The list of servers.
          items:
            $ref: '#/components/schemas/Instance'
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
      type: object
      description: Response message for the list of servers.
      id: ListInstancesResponse
    VolumeConfig:
      id: VolumeConfig
      type: object
      properties:
        gcpService:
          type: string
          description: The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.
        performanceTier:
          enumDescriptions:
            - Value is not specified.
            - Regular volumes, shared aggregates.
            - Assigned aggregates.
            - High throughput aggregates.
          enum:
            - VOLUME_PERFORMANCE_TIER_UNSPECIFIED
            - VOLUME_PERFORMANCE_TIER_SHARED
            - VOLUME_PERFORMANCE_TIER_ASSIGNED
            - VOLUME_PERFORMANCE_TIER_HT
          type: string
          description: Performance tier of the Volume. Default is SHARED.
        snapshotsEnabled:
          description: Whether snapshots should be enabled.
          type: boolean
        userNote:
          description: User note field, it can be used by customers to add additional information for the BMS Ops team .
          type: string
        machineIds:
          type: array
          items:
            type: string
          description: Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.
        type:
          enum:
            - TYPE_UNSPECIFIED
            - FLASH
            - DISK
          description: The type of this Volume.
          enumDescriptions:
            - The unspecified type.
            - This Volume is on flash.
            - This Volume is on disk.
          type: string
        id:
          description: A transient unique identifier to identify a volume within an ProvisioningConfig request.
          type: string
        nfsExports:
          type: array
          description: NFS exports. Set only when protocol is PROTOCOL_NFS.
          items:
            $ref: '#/components/schemas/NfsExport'
        lunRanges:
          items:
            $ref: '#/components/schemas/LunRange'
          description: LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.
          type: array
        sizeGb:
          format: int32
          type: integer
          description: The requested size of this volume, in GB.
        protocol:
          type: string
          description: Volume protocol.
          enum:
            - PROTOCOL_UNSPECIFIED
            - PROTOCOL_FC
            - PROTOCOL_NFS
          enumDescriptions:
            - Unspecified value.
            - Fibre channel.
            - Network file system.
        name:
          description: Output only. The name of the volume config.
          type: string
          readOnly: true
      description: Configuration parameters for a new volume.
    ListProvisioningQuotasResponse:
      id: ListProvisioningQuotasResponse
      properties:
        provisioningQuotas:
          items:
            $ref: '#/components/schemas/ProvisioningQuota'
          description: The provisioning quotas registered in this project.
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      description: Response message for the list of provisioning quotas.
      type: object
    ServerNetworkTemplate:
      description: Network template.
      id: ServerNetworkTemplate
      properties:
        applicableInstanceTypes:
          items:
            type: string
          type: array
          description: Instance types this template is applicable to.
        name:
          type: string
          description: 'Output only. Template''s unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of "bond" or "nic".'
          readOnly: true
        logicalInterfaces:
          items:
            $ref: '#/components/schemas/GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface'
          description: Logical interfaces.
          type: array
      type: object
    LunRange:
      description: A LUN(Logical Unit Number) range.
      id: LunRange
      properties:
        quantity:
          type: integer
          format: int32
          description: Number of LUNs to create.
        sizeGb:
          format: int32
          description: The requested size of each LUN, in GB.
          type: integer
      type: object
    FetchInstanceProvisioningSettingsResponse:
      type: object
      properties:
        images:
          items:
            $ref: '#/components/schemas/OSImage'
          description: The OS images available.
          type: array
      id: FetchInstanceProvisioningSettingsResponse
      description: Response with all provisioning settings.
    NetworkMountPoint:
      description: Mount point for a network.
      type: object
      id: NetworkMountPoint
      properties:
        instance:
          description: Instance to attach network to.
          type: string
        defaultGateway:
          description: Network should be a default gateway.
          type: boolean
        logicalInterface:
          type: string
          description: Logical interface to detach from.
        ipAddress:
          description: Ip address of the server.
          type: string
    ListSSHKeysResponse:
      type: object
      id: ListSSHKeysResponse
      description: Message for response of ListSSHKeys.
      properties:
        sshKeys:
          items:
            $ref: '#/components/schemas/SSHKey'
          type: array
          description: The SSH keys registered in the project.
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
    Location:
      type: object
      description: A resource that represents Google Cloud Platform location.
      id: Location
      properties:
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          type: string
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          type: string
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
        labels:
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          additionalProperties:
            type: string
          type: object
    ListVolumeSnapshotsResponse:
      properties:
        volumeSnapshots:
          items:
            $ref: '#/components/schemas/VolumeSnapshot'
          description: The list of snapshots.
          type: array
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
      id: ListVolumeSnapshotsResponse
      description: Response message containing the list of volume snapshots.
      type: object
    NetworkAddressReservation:
      properties:
        startAddress:
          description: The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2.
          type: string
        note:
          description: A note about this reservation, intended for human consumption.
          type: string
        endAddress:
          type: string
          description: The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2.
      type: object
      description: A reservation of one or more addresses in a network.
      id: NetworkAddressReservation
    SubmitProvisioningConfigRequest:
      type: object
      description: Request for SubmitProvisioningConfig.
      id: SubmitProvisioningConfigRequest
      properties:
        provisioningConfig:
          description: Required. The ProvisioningConfig to create.
          $ref: '#/components/schemas/ProvisioningConfig'
        email:
          description: Optional. Email provided to send a confirmation with provisioning config to.
          type: string
    AllowedClient:
      id: AllowedClient
      type: object
      properties:
        network:
          type: string
          description: The network the access point sits on.
        allowSuid:
          type: boolean
          description: Allow the setuid flag.
        mountPermissions:
          description: Mount permissions.
          enum:
            - MOUNT_PERMISSIONS_UNSPECIFIED
            - READ
            - READ_WRITE
          enumDescriptions:
            - Permissions were not specified.
            - NFS share can be mount with read-only permissions.
            - NFS share can be mount with read-write permissions.
          type: string
        noRootSquash:
          description: Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.
          type: boolean
        allowDev:
          description: Allow dev flag. Which controls whether to allow creation of devices.
          type: boolean
        nfsPath:
          readOnly: true
          description: Output only. The path to access NFS, in format shareIP:/InstanceID InstanceID is the generated ID instead of customer provided name. example like "10.0.0.0:/g123456789-nfs001"
          type: string
        allowedClientsCidr:
          type: string
          description: The subnet of IP addresses permitted to access the share.
        shareIp:
          type: string
          readOnly: true
          description: Output only. The IP address of the share on this network. Assigned automatically during provisioning based on the network's services_cidr.
      description: Represents an 'access point' for the share.
    OSImage:
      id: OSImage
      properties:
        applicableInstanceTypes:
          items:
            type: string
          description: Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
          type: array
        code:
          description: OS Image code.
          type: string
        supportedNetworkTemplates:
          items:
            $ref: '#/components/schemas/ServerNetworkTemplate'
          description: Network templates that can be used with this OS Image.
          type: array
        name:
          description: Output only. OS Image's unique name.
          readOnly: true
          type: string
        description:
          description: OS Image description.
          type: string
      description: Operation System image.
      type: object
    ResizeVolumeRequest:
      id: ResizeVolumeRequest
      description: Request for emergency resize Volume.
      type: object
      properties:
        sizeGib:
          type: string
          description: New Volume size, in GiB.
          format: int64
    DisableInteractiveSerialConsoleRequest:
      description: Message for disabling the interactive serial console on an instance.
      type: object
      id: DisableInteractiveSerialConsoleRequest
      properties: {}
    NetworkAddress:
      type: object
      properties:
        networkId:
          type: string
          description: Id of the network to use, within the same ProvisioningConfig request.
        existingNetworkId:
          type: string
          description: Name of the existing network to use.
        address:
          type: string
          description: IPv4 address to be assigned to the server.
      id: NetworkAddress
      description: A network.
    OperationMetadata:
      type: object
      description: Represents the metadata from a long-running operation.
      id: OperationMetadata
      properties:
        apiVersion:
          description: Output only. API version used with the operation.
          readOnly: true
          type: string
        endTime:
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          type: string
          readOnly: true
        verb:
          description: Output only. Name of the action executed by the operation.
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        createTime:
          format: google-datetime
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
        requestedCancellation:
          description: Output only. Identifies whether the user requested the cancellation of the operation. Operations that have been successfully cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          type: boolean
          readOnly: true
    SSHKey:
      description: An SSH key, used for authorizing with the interactive serial console feature.
      properties:
        publicKey:
          description: The public SSH key. This must be in OpenSSH .authorized_keys format.
          type: string
        name:
          type: string
          readOnly: true
          description: Output only. The name of this SSH key. Currently, the only valid value for the location is "global".
      id: SSHKey
      type: object
    ListNetworkUsageResponse:
      id: ListNetworkUsageResponse
      properties:
        networks:
          description: Networks with IPs.
          type: array
          items:
            $ref: '#/components/schemas/NetworkUsage'
      type: object
      description: Response with Networks with IPs
    Lun:
      type: object
      properties:
        id:
          description: An identifier for the LUN, generated by the backend.
          type: string
        storageType:
          type: string
          enumDescriptions:
            - The storage type for this LUN is unknown.
            - This storage type for this LUN is SSD.
            - This storage type for this LUN is HDD.
          description: The storage type for this LUN.
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
        wwid:
          description: The WWID for this LUN.
          type: string
        sizeGb:
          description: The size of this LUN, in gigabytes.
          format: int64
          type: string
        multiprotocolType:
          enum:
            - MULTIPROTOCOL_TYPE_UNSPECIFIED
            - LINUX
          description: The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.
          enumDescriptions:
            - Server has no OS specified.
            - Server with Linux OS.
          type: string
        name:
          description: Output only. The name of the LUN.
          type: string
          readOnly: true
        shareable:
          description: Display if this LUN can be shared between multiple physical servers.
          type: boolean
        state:
          type: string
          enumDescriptions:
            - The LUN is in an unknown state.
            - The LUN is being created.
            - The LUN is being updated.
            - The LUN is ready for use.
            - The LUN has been requested to be deleted.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - UPDATING
            - READY
            - DELETING
          description: The state of this storage volume.
        bootLun:
          description: Display if this LUN is a boot LUN.
          type: boolean
        storageVolume:
          type: string
          description: Display the storage volume for this LUN.
      description: A storage volume logical unit number (LUN).
      id: Lun
    QosPolicy:
      properties:
        bandwidthGbps:
          format: double
          description: The bandwidth permitted by the QOS policy, in gbps.
          type: number
      description: QOS policy parameters.
      type: object
      id: QosPolicy
    RestoreVolumeSnapshotRequest:
      description: Message for restoring a volume snapshot.
      id: RestoreVolumeSnapshotRequest
      properties: {}
      type: object
    NfsExport:
      type: object
      properties:
        cidr:
          description: A CIDR range.
          type: string
        networkId:
          type: string
          description: Network to use to publish the export.
        noRootSquash:
          description: Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.
          type: boolean
        allowDev:
          type: boolean
          description: Allow dev flag in NfsShare AllowedClientsRequest.
        permissions:
          type: string
          enum:
            - PERMISSIONS_UNSPECIFIED
            - READ_ONLY
            - READ_WRITE
          enumDescriptions:
            - Unspecified value.
            - Read-only permission.
            - Read-write permission.
          description: Export permissions.
        allowSuid:
          description: Allow the setuid flag.
          type: boolean
        machineId:
          description: Either a single machine, identified by an ID, or a comma-separated list of machine IDs.
          type: string
      description: A NFS export entry.
      id: NfsExport
    ListNetworksResponse:
      properties:
        networks:
          type: array
          items:
            $ref: '#/components/schemas/Network'
          description: The list of networks.
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
      id: ListNetworksResponse
      description: Response message containing the list of networks.
      type: object
    NetworkConfig:
      properties:
        cidr:
          description: CIDR range of the network.
          type: string
        name:
          type: string
          readOnly: true
          description: Output only. The name of the network config.
        gcpService:
          description: The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.
          type: string
        type:
          description: The type of this network, either Client or Private.
          enum:
            - TYPE_UNSPECIFIED
            - CLIENT
            - PRIVATE
          type: string
          enumDescriptions:
            - Unspecified value.
            - Client network, that is a network peered to a GCP VPC.
            - Private network, that is a network local to the BMS POD.
        jumboFramesEnabled:
          type: boolean
          description: The JumboFramesEnabled option for customer to set.
        id:
          type: string
          description: A transient unique identifier to identify a volume within an ProvisioningConfig request.
        userNote:
          description: User note field, it can be used by customers to add additional information for the BMS Ops team .
          type: string
        vlanAttachments:
          items:
            $ref: '#/components/schemas/IntakeVlanAttachment'
          description: List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).
          type: array
        vlanSameProject:
          type: boolean
          description: Whether the VLAN attachment pair is located in the same project.
        serviceCidr:
          type: string
          enumDescriptions:
            - Unspecified value.
            - Services are disabled for the given network.
            - Use the highest /26 block of the network to host services.
            - Use the highest /27 block of the network to host services.
            - Use the highest /28 block of the network to host services.
          enum:
            - SERVICE_CIDR_UNSPECIFIED
            - DISABLED
            - HIGH_26
            - HIGH_27
            - HIGH_28
          description: Service CIDR, if any.
        bandwidth:
          enum:
            - BANDWIDTH_UNSPECIFIED
            - BW_1_GBPS
            - BW_2_GBPS
            - BW_5_GBPS
            - BW_10_GBPS
          description: Interconnect bandwidth. Set only when type is CLIENT.
          type: string
          enumDescriptions:
            - Unspecified value.
            - 1 Gbps.
            - 2 Gbps.
            - 5 Gbps.
            - 10 Gbps.
      id: NetworkConfig
      type: object
      description: Configuration parameters for a new network.
    StopInstanceRequest:
      type: object
      id: StopInstanceRequest
      properties: {}
      description: Message requesting to stop a server.
    InstanceQuota:
      type: object
      properties:
        availableMachineCount:
          format: int32
          type: integer
          description: Number of machines than can be created for the given location and instance_type.
        location:
          type: string
          description: Location where the quota applies.
        name:
          description: Output only. The name of the instance quota.
          readOnly: true
          type: string
        gcpService:
          description: The gcp service of the provisioning quota.
          type: string
        instanceType:
          description: 'Instance type. Deprecated: use gcp_service.'
          type: string
      description: A resource budget.
      id: InstanceQuota
    IntakeVlanAttachment:
      type: object
      properties:
        pairingKey:
          description: Attachment pairing key.
          type: string
        id:
          type: string
          description: Identifier of the VLAN attachment.
      id: IntakeVlanAttachment
      description: A GCP vlan attachment.
    NetworkUsage:
      type: object
      properties:
        network:
          $ref: '#/components/schemas/Network'
          description: Network.
        usedIps:
          type: array
          description: All used IP addresses in this network.
          items:
            type: string
      id: NetworkUsage
      description: Network with all used IP addresses.
    VolumeSnapshot:
      type: object
      description: A snapshot of a volume. Only boot volumes can have snapshots.
      id: VolumeSnapshot
      properties:
        type:
          readOnly: true
          type: string
          description: Output only. The type of the snapshot which indicates whether it was scheduled or manual/ad-hoc.
          enum:
            - SNAPSHOT_TYPE_UNSPECIFIED
            - AD_HOC
            - SCHEDULED
          enumDescriptions:
            - Type is not specified.
            - Snapshot was taken manually by user.
            - Snapshot was taken automatically as a part of a snapshot schedule.
        storageVolume:
          type: string
          description: Output only. The name of the volume which this snapshot belongs to.
          readOnly: true
        id:
          description: Output only. An identifier for the snapshot, generated by the backend.
          type: string
          readOnly: true
        name:
          type: string
          description: The name of the snapshot.
        createTime:
          readOnly: true
          type: string
          description: Output only. The creation time of the snapshot.
          format: google-datetime
        description:
          description: The description of the snapshot.
          type: string
    Instance:
      description: A server.
      type: object
      properties:
        name:
          type: string
          description: 'Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`'
        createTime:
          description: Output only. Create a time stamp.
          format: google-datetime
          readOnly: true
          type: string
        updateTime:
          readOnly: true
          description: Output only. Update a time stamp.
          type: string
          format: google-datetime
        pod:
          description: Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.
          type: string
        id:
          readOnly: true
          type: string
          description: Output only. An identifier for the `Instance`, generated by the backend.
        networks:
          items:
            $ref: '#/components/schemas/Network'
          description: Output only. List of networks associated with this server.
          type: array
          readOnly: true
        machineType:
          type: string
          description: Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
        loginInfo:
          type: string
          description: Output only. Text field about info for logging in.
          readOnly: true
        volumes:
          type: array
          description: Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses.
          items:
            $ref: '#/components/schemas/Volume'
        workloadProfile:
          type: string
          description: The workload profile for the instance.
          enumDescriptions:
            - The workload profile is in an unknown state.
            - The workload profile is generic.
            - The workload profile is hana.
          enum:
            - WORKLOAD_PROFILE_UNSPECIFIED
            - WORKLOAD_PROFILE_GENERIC
            - WORKLOAD_PROFILE_HANA
        networkTemplate:
          type: string
          description: Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of "bond" or "nic".
        state:
          enumDescriptions:
            - The server is in an unknown state.
            - The server is being provisioned.
            - The server is running.
            - The server has been deleted.
            - The server is being updated.
            - The server is starting.
            - The server is stopping.
            - The server is shutdown.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - DELETED
            - UPDATING
            - STARTING
            - STOPPING
            - SHUTDOWN
          description: Output only. The state of the server.
          type: string
        interactiveSerialConsoleEnabled:
          readOnly: true
          description: Output only. True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.
          type: boolean
        labels:
          type: object
          additionalProperties:
            type: string
          description: Labels as key value pairs.
        hyperthreadingEnabled:
          type: boolean
          description: True if you enable hyperthreading for the server, otherwise false. The default value is false.
        logicalInterfaces:
          type: array
          description: List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.
          items:
            $ref: '#/components/schemas/GoogleCloudBaremetalsolutionV2LogicalInterface'
        luns:
          items:
            $ref: '#/components/schemas/Lun'
          description: Immutable. List of LUNs associated with this server.
          type: array
        osImage:
          type: string
          description: The OS image currently installed on the server.
      id: Instance
    NfsShare:
      type: object
      id: NfsShare
      properties:
        name:
          type: string
          description: Immutable. The name of the NFS share.
        storageType:
          enumDescriptions:
            - The storage type for this volume is unknown.
            - The storage type for this volume is SSD.
            - This storage type for this volume is HDD.
          type: string
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
          description: Immutable. The storage type of the underlying volume.
        state:
          type: string
          description: Output only. The state of the NFS share.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONED
            - CREATING
            - UPDATING
            - DELETING
          readOnly: true
          enumDescriptions:
            - The share is in an unknown state.
            - The share has been provisioned.
            - The NFS Share is being created.
            - The NFS Share is being updated.
            - The NFS Share has been requested to be deleted.
        labels:
          type: object
          description: Labels as key value pairs.
          additionalProperties:
            type: string
        id:
          description: Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future.
          type: string
          readOnly: true
        volume:
          readOnly: true
          type: string
          description: Output only. The underlying volume of the share. Created automatically during provisioning.
        nfsShareId:
          readOnly: true
          type: string
          description: Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.
        requestedSizeGib:
          description: The requested size, in GiB.
          format: int64
          type: string
        allowedClients:
          description: List of allowed access points.
          type: array
          items:
            $ref: '#/components/schemas/AllowedClient'
      description: An NFS share.
    StartInstanceRequest:
      id: StartInstanceRequest
      properties: {}
      type: object
      description: Message requesting to start a server.
    SnapshotReservationDetail:
      type: object
      properties:
        reservedSpaceUsedPercent:
          format: int32
          type: integer
          description: The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.
        reservedSpacePercent:
          description: Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.
          type: integer
          format: int32
        reservedSpaceRemainingGib:
          description: The amount, in GiB, of available space in this storage volume's reserved snapshot space.
          type: string
          format: int64
        reservedSpaceGib:
          type: string
          format: int64
          description: The space on this storage volume reserved for snapshots, shown in GiB.
      id: SnapshotReservationDetail
      description: Details about snapshot space reservation and usage on the storage volume.
    ProvisioningConfig:
      type: object
      description: A provisioning configuration.
      properties:
        cloudConsoleUri:
          type: string
          readOnly: true
          description: Output only. URI to Cloud Console UI view of this provisioning config.
        location:
          description: Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.
          type: string
        networks:
          items:
            $ref: '#/components/schemas/NetworkConfig'
          description: Networks to be created.
          type: array
        instances:
          description: Instances to be created.
          items:
            $ref: '#/components/schemas/InstanceConfig'
          type: array
        customId:
          type: string
          description: Optional. The user-defined identifier of the provisioning config.
        updateTime:
          description: Output only. Last update timestamp.
          format: google-datetime
          readOnly: true
          type: string
        ticketId:
          description: A generated ticket id to track provisioning request.
          type: string
        state:
          description: Output only. State of ProvisioningConfig.
          readOnly: true
          type: string
          enumDescriptions:
            - State wasn't specified.
            - ProvisioningConfig is a draft and can be freely modified.
            - ProvisioningConfig was already submitted and cannot be modified.
            - ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.
            - ProvisioningConfig was provisioned, meaning the resources exist.
            - ProvisioningConfig was validated. A validation tool will be run to set this state.
            - ProvisioningConfig was canceled.
            - The request is submitted for provisioning, with error return.
          enum:
            - STATE_UNSPECIFIED
            - DRAFT
            - SUBMITTED
            - PROVISIONING
            - PROVISIONED
            - VALIDATED
            - CANCELLED
            - FAILED
        vpcScEnabled:
          description: If true, VPC SC is enabled for the cluster.
          type: boolean
        email:
          description: Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.
          type: string
        name:
          description: Output only. The system-generated name of the provisioning config. This follows the UUID format.
          type: string
          readOnly: true
        handoverServiceAccount:
          description: A service account to enable customers to access instance credentials upon handover.
          type: string
        statusMessage:
          type: string
          description: Optional status messages associated with the FAILED state.
        volumes:
          type: array
          description: Volumes to be created.
          items:
            $ref: '#/components/schemas/VolumeConfig'
      id: ProvisioningConfig
    ProvisioningQuota:
      properties:
        networkBandwidth:
          type: string
          description: Network bandwidth, Gbps
          format: int64
        serverCount:
          format: int64
          type: string
          description: Server count.
        availableCount:
          type: integer
          description: The available count of the provisioning quota.
          format: int32
        storageGib:
          format: int64
          type: string
          description: Storage size (GB).
        name:
          readOnly: true
          type: string
          description: Output only. The name of the provisioning quota.
        gcpService:
          type: string
          description: The gcp service of the provisioning quota.
        instanceQuota:
          description: Instance quota.
          $ref: '#/components/schemas/InstanceQuota'
        assetType:
          enum:
            - ASSET_TYPE_UNSPECIFIED
            - ASSET_TYPE_SERVER
            - ASSET_TYPE_STORAGE
            - ASSET_TYPE_NETWORK
          description: The asset type of this provisioning quota.
          enumDescriptions:
            - The unspecified type.
            - The server asset type.
            - The storage asset type.
            - The network asset type.
          type: string
        location:
          type: string
          description: The specific location of the provisioining quota.
      description: A provisioning quota for a given project.
      id: ProvisioningQuota
      type: object
    GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface:
      type: object
      id: GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface
      properties:
        name:
          description: Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate. This is of syntax or and forms part of the network template name.
          type: string
        type:
          enumDescriptions:
            - Unspecified value.
            - Bond interface type.
            - NIC interface type.
          enum:
            - INTERFACE_TYPE_UNSPECIFIED
            - BOND
            - NIC
          type: string
          description: Interface type.
        required:
          description: If true, interface must have network connected.
          type: boolean
      description: Logical interface.
    ResetInstanceRequest:
      properties: {}
      id: ResetInstanceRequest
      type: object
      description: Message requesting to reset a server.
    Status:
      id: Status
      properties:
        details:
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
        code:
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
    VRF:
      properties:
        state:
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - PROVISIONED
          type: string
          description: The possible state of VRF.
          enumDescriptions:
            - The unspecified state.
            - The vrf is provisioning.
            - The vrf is provisioned.
        qosPolicy:
          $ref: '#/components/schemas/QosPolicy'
          description: The QOS policy applied to this VRF. The value is only meaningful when all the vlan attachments have the same QoS. This field should not be used for new integrations, use vlan attachment level qos instead. The field is left for backward-compatibility.
        vlanAttachments:
          type: array
          description: The list of VLAN attachments for the VRF.
          items:
            $ref: '#/components/schemas/VlanAttachment'
        name:
          type: string
          description: The name of the VRF.
      type: object
      description: A network VRF.
      id: VRF
    LogicalNetworkInterface:
      type: object
      properties:
        defaultGateway:
          type: boolean
          description: Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance.
        id:
          type: string
          description: An identifier for the `Network`, generated by the backend.
        networkType:
          enum:
            - TYPE_UNSPECIFIED
            - CLIENT
            - PRIVATE
          description: Type of network.
          type: string
          enumDescriptions:
            - Unspecified value.
            - Client network, a network peered to a Google Cloud VPC.
            - Private network, a network local to the Bare Metal Solution environment.
        network:
          type: string
          description: Name of the network
        ipAddress:
          type: string
          description: IP address in the network
      description: Each logical network interface is effectively a network and IP pair.
      id: LogicalNetworkInterface
    ListLocationsResponse:
      type: object
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Location'
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      id: ListLocationsResponse
    Volume:
      properties:
        workloadProfile:
          enumDescriptions:
            - The workload profile is in an unknown state.
            - The workload profile is generic.
            - The workload profile is hana.
          description: The workload profile for the volume.
          type: string
          enum:
            - WORKLOAD_PROFILE_UNSPECIFIED
            - GENERIC
            - HANA
        requestedSizeGib:
          type: string
          description: The requested size of this storage volume, in GiB.
          format: int64
        autoGrownSizeGib:
          format: int64
          type: string
          description: The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.
        performanceTier:
          description: Immutable. Performance tier of the Volume. Default is SHARED.
          enum:
            - VOLUME_PERFORMANCE_TIER_UNSPECIFIED
            - VOLUME_PERFORMANCE_TIER_SHARED
            - VOLUME_PERFORMANCE_TIER_ASSIGNED
            - VOLUME_PERFORMANCE_TIER_HT
          type: string
          enumDescriptions:
            - Value is not specified.
            - Regular volumes, shared aggregates.
            - Assigned aggregates.
            - High throughput aggregates.
        snapshotSchedulePolicy:
          type: string
          description: The name of the snapshot schedule policy in use for this volume, if any.
        labels:
          type: object
          additionalProperties:
            type: string
          description: Labels as key value pairs.
        protocol:
          type: string
          enum:
            - PROTOCOL_UNSPECIFIED
            - FIBRE_CHANNEL
            - NFS
          readOnly: true
          enumDescriptions:
            - Value is not specified.
            - Fibre Channel protocol.
            - NFS protocol means Volume is a NFS Share volume. Such volumes cannot be manipulated via Volumes API.
          description: Output only. Storage protocol for the Volume.
        originallyRequestedSizeGib:
          format: int64
          description: Originally requested size, in GiB.
          type: string
        snapshotAutoDeleteBehavior:
          type: string
          enum:
            - SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED
            - DISABLED
            - OLDEST_FIRST
            - NEWEST_FIRST
          enumDescriptions:
            - The unspecified behavior.
            - Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.
            - Delete the oldest snapshots first.
            - Delete the newest snapshots first.
          description: The behavior to use when snapshot reserved space is full.
        snapshotReservationDetail:
          description: Details about snapshot space reservation and usage on the storage volume.
          $ref: '#/components/schemas/SnapshotReservationDetail'
        storageType:
          enumDescriptions:
            - The storage type for this volume is unknown.
            - The storage type for this volume is SSD.
            - This storage type for this volume is HDD.
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
          type: string
          description: The storage type for this volume.
        remainingSpaceGib:
          format: int64
          type: string
          description: The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.
        state:
          description: The state of this storage volume.
          type: string
          enumDescriptions:
            - The storage volume is in an unknown state.
            - The storage volume is being created.
            - The storage volume is ready for use.
            - The storage volume has been requested to be deleted.
            - The storage volume is being updated.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
        emergencySizeGib:
          type: string
          format: int64
          description: Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value.
        pod:
          type: string
          description: Immutable. Pod name.
        notes:
          type: string
          description: Input only. User-specified notes for new Volume. Used to provision Volumes that require manual intervention.
        id:
          description: An identifier for the `Volume`, generated by the backend.
          type: string
        currentSizeGib:
          type: string
          description: The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.
          format: int64
        maxSizeGib:
          format: int64
          description: Maximum size volume can be expanded to in case of evergency, in GiB.
          type: string
        bootVolume:
          type: boolean
          readOnly: true
          description: Output only. Whether this volume is a boot volume. A boot volume is one which contains a boot LUN.
        name:
          readOnly: true
          description: 'Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`'
          type: string
        snapshotEnabled:
          description: Whether snapshots are enabled.
          type: boolean
      description: A storage volume.
      id: Volume
      type: object
    ListVolumesResponse:
      id: ListVolumesResponse
      properties:
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        volumes:
          items:
            $ref: '#/components/schemas/Volume'
          description: The list of storage volumes.
          type: array
      description: Response message containing the list of storage volumes.
      type: object
    Network:
      id: Network
      properties:
        id:
          type: string
          description: An identifier for the `Network`, generated by the backend.
        labels:
          description: Labels as key value pairs.
          type: object
          additionalProperties:
            type: string
        jumboFramesEnabled:
          description: Whether network uses standard frames or jumbo ones.
          type: boolean
        cidr:
          type: string
          description: The cidr of the Network.
        reservations:
          items:
            $ref: '#/components/schemas/NetworkAddressReservation'
          type: array
          description: List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server.
        name:
          type: string
          description: 'Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`'
          readOnly: true
        gatewayIp:
          readOnly: true
          description: Output only. Gateway ip address.
          type: string
        macAddress:
          description: List of physical interfaces.
          type: array
          items:
            type: string
        vlanId:
          type: string
          description: The vlan id of the Network.
        vrf:
          description: The vrf for the Network.
          $ref: '#/components/schemas/VRF'
        servicesCidr:
          description: IP range for reserved for services (e.g. NFS).
          type: string
        state:
          enumDescriptions:
            - The Network is in an unknown state.
            - The Network is provisioning.
            - The Network has been provisioned.
            - The Network is being deprovisioned.
            - The Network is being updated.
          description: The Network state.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - PROVISIONED
            - DEPROVISIONING
            - UPDATING
          type: string
        ipAddress:
          type: string
          description: IP address configured.
        type:
          type: string
          enumDescriptions:
            - Unspecified value.
            - Client network, a network peered to a Google Cloud VPC.
            - Private network, a network local to the Bare Metal Solution environment.
          description: The type of this network.
          enum:
            - TYPE_UNSPECIFIED
            - CLIENT
            - PRIVATE
        pod:
          type: string
          description: Output only. Pod name.
          readOnly: true
        mountPoints:
          type: array
          description: Input only. List of mount points to attach the network to.
          items:
            $ref: '#/components/schemas/NetworkMountPoint'
      description: A Network.
      type: object
    SubmitProvisioningConfigResponse:
      properties:
        provisioningConfig:
          description: The submitted provisioning config.
          $ref: '#/components/schemas/ProvisioningConfig'
      description: Response for SubmitProvisioningConfig.
      type: object
      id: SubmitProvisioningConfigResponse
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
        response:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
      id: Operation
      type: object
    EnableInteractiveSerialConsoleRequest:
      properties: {}
      id: EnableInteractiveSerialConsoleRequest
      description: Message for enabling the interactive serial console on an instance.
      type: object
    GoogleCloudBaremetalsolutionV2LogicalInterface:
      type: object
      properties:
        logicalNetworkInterfaces:
          type: array
          description: List of logical network interfaces within a logical interface.
          items:
            $ref: '#/components/schemas/LogicalNetworkInterface'
        name:
          type: string
          description: Interface name. This is of syntax or and forms part of the network template name.
        interfaceIndex:
          format: int32
          type: integer
          description: The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated.
      description: Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.
      id: GoogleCloudBaremetalsolutionV2LogicalInterface
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    locations:
      id: google.baremetalsolution.locations
      name: locations
      title: Locations
      methods:
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: locations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
    networks:
      id: google.baremetalsolution.networks
      name: networks
      title: Networks
      methods:
        projects_locations_networks_patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks~1{networksId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_networks_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks~1{networksId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_networks_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/networks/methods/projects_locations_networks_get'
          - $ref: '#/components/x-stackQL-resources/networks/methods/projects_locations_networks_list'
        insert: []
        update: []
        delete: []
    networks__network_usage:
      id: google.baremetalsolution.networks__network_usage
      name: networks__network_usage
      title: Networks__network_usage
      methods:
        projects_locations_networks_listNetworkUsage:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1networks:listNetworkUsage/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: networks
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/networks__network_usage/methods/projects_locations_networks_listNetworkUsage'
        insert: []
        update: []
        delete: []
    provisioning_configs:
      id: google.baremetalsolution.provisioning_configs
      name: provisioning_configs
      title: Provisioning_configs
      methods:
        projects_locations_provisioningConfigs_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs~1{provisioningConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_provisioningConfigs_patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs~1{provisioningConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_provisioningConfigs_submit:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs:submit/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_provisioningConfigs_create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provisioning_configs/methods/projects_locations_provisioningConfigs_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/provisioning_configs/methods/projects_locations_provisioningConfigs_create'
        update: []
        delete: []
    instance_provisioning_settings:
      id: google.baremetalsolution.instance_provisioning_settings
      name: instance_provisioning_settings
      title: Instance_provisioning_settings
      methods:
        projects_locations_instanceProvisioningSettings_fetch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instanceProvisioningSettings:fetch/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instance_provisioning_settings/methods/projects_locations_instanceProvisioningSettings_fetch'
        insert: []
        update: []
        delete: []
    volumes:
      id: google.baremetalsolution.volumes
      name: volumes
      title: Volumes
      methods:
        projects_locations_volumes_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_resize:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}:resize/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/projects_locations_volumes_get'
          - $ref: '#/components/x-stackQL-resources/volumes/methods/projects_locations_volumes_list'
        insert: []
        update: []
        delete: []
    snapshots:
      id: google.baremetalsolution.snapshots
      name: snapshots
      title: Snapshots
      methods:
        projects_locations_volumes_snapshots_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_snapshots_create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_snapshots_restoreVolumeSnapshot:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots~1{snapshotsId}:restoreVolumeSnapshot/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_snapshots_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots~1{snapshotsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_snapshots_delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots~1{snapshotsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_volumes_snapshots_get'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_volumes_snapshots_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_volumes_snapshots_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/projects_locations_volumes_snapshots_delete'
    luns:
      id: google.baremetalsolution.luns
      name: luns
      title: Luns
      methods:
        projects_locations_volumes_luns_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1luns~1{lunsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_volumes_luns_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1luns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/luns/methods/projects_locations_volumes_luns_get'
          - $ref: '#/components/x-stackQL-resources/luns/methods/projects_locations_volumes_luns_list'
        insert: []
        update: []
        delete: []
    provisioning_quotas:
      id: google.baremetalsolution.provisioning_quotas
      name: provisioning_quotas
      title: Provisioning_quotas
      methods:
        projects_locations_provisioningQuotas_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1provisioningQuotas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: provisioningQuotas
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provisioning_quotas/methods/projects_locations_provisioningQuotas_list'
        insert: []
        update: []
        delete: []
    operations:
      id: google.baremetalsolution.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
        insert: []
        update: []
        delete: []
    ssh_keys:
      id: google.baremetalsolution.ssh_keys
      name: ssh_keys
      title: Ssh_keys
      methods:
        projects_locations_sshKeys_create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1sshKeys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sshKeys_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1sshKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: sshKeys
        projects_locations_sshKeys_delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1sshKeys~1{sshKeysId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ssh_keys/methods/projects_locations_sshKeys_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/ssh_keys/methods/projects_locations_sshKeys_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/ssh_keys/methods/projects_locations_sshKeys_delete'
    instances:
      id: google.baremetalsolution.instances
      name: instances
      title: Instances
      methods:
        projects_locations_instances_disableInteractiveSerialConsole:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:disableInteractiveSerialConsole/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_start:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:start/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_reset:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:reset/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_stop:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_enableInteractiveSerialConsole:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:enableInteractiveSerialConsole/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_detachLun:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:detachLun/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/projects_locations_instances_get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/projects_locations_instances_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/projects_locations_instances_create'
        update: []
        delete: []
    nfs_shares:
      id: google.baremetalsolution.nfs_shares
      name: nfs_shares
      title: Nfs_shares
      methods:
        projects_locations_nfsShares_create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_nfsShares_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_nfsShares_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares~1{nfsSharesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_nfsShares_patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares~1{nfsSharesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_nfsShares_delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nfsShares~1{nfsSharesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/nfs_shares/methods/projects_locations_nfsShares_get'
          - $ref: '#/components/x-stackQL-resources/nfs_shares/methods/projects_locations_nfsShares_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/nfs_shares/methods/projects_locations_nfsShares_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/nfs_shares/methods/projects_locations_nfsShares_delete'
paths:
  /v2/projects/{projectsId}/locations/{locationsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
    get:
      description: Gets information about a location.
      operationId: baremetalsolution.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: baremetalsolution.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}:
    parameters: *ref_1
    patch:
      description: Update details of a single network.
      operationId: baremetalsolution.projects.locations.networks.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networksId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: networks
      x-stackQL-verb: exec
    get:
      description: Get details of a single network.
      operationId: baremetalsolution.projects.locations.networks.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networksId
          required: true
          schema:
            type: string
      x-stackQL-resource: networks
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage:
    parameters: *ref_1
    get:
      description: List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.
      operationId: baremetalsolution.projects.locations.networks.listNetworkUsage
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkUsageResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: networks__network_usage
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/networks:
    parameters: *ref_1
    get:
      description: List network in a given project and location.
      operationId: baremetalsolution.projects.locations.networks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworksResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: networks
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}:
    parameters: *ref_1
    get:
      description: Get ProvisioningConfig by name.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: provisioningConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: provisioning_configs
      x-stackQL-verb: select
    patch:
      description: Update existing ProvisioningConfig.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: provisioningConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: email
          schema:
            type: string
      x-stackQL-resource: provisioning_configs
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit:
    parameters: *ref_1
    post:
      description: Submit a provisiong configuration for a given project.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.submit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitProvisioningConfigRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitProvisioningConfigResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: provisioning_configs
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:
    parameters: *ref_1
    post:
      description: Create new ProvisioningConfig.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: email
          schema:
            type: string
      x-stackQL-resource: provisioning_configs
      x-stackQL-verb: insert
  /v2/projects/{projectsId}/locations/{locationsId}/instanceProvisioningSettings:fetch:
    parameters: *ref_1
    get:
      description: Get instance provisioning settings for a given project. This is hidden method used by UI only.
      operationId: baremetalsolution.projects.locations.instanceProvisioningSettings.fetch
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchInstanceProvisioningSettingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: instance_provisioning_settings
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:
    parameters: *ref_1
    get:
      description: Get details of a single storage volume.
      operationId: baremetalsolution.projects.locations.volumes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: select
    patch:
      description: Update details of a single storage volume.
      operationId: baremetalsolution.projects.locations.volumes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize:
    parameters: *ref_1
    post:
      description: Emergency Volume resize.
      operationId: baremetalsolution.projects.locations.volumes.resize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResizeVolumeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/volumes:
    parameters: *ref_1
    get:
      description: List storage volumes in a given project and location.
      operationId: baremetalsolution.projects.locations.volumes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVolumesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots:
    parameters: *ref_1
    get:
      description: Retrieves the list of snapshots for the specified volume. Returns a response with an empty list of snapshots if called for a non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVolumeSnapshotsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-verb: select
    post:
      description: Takes a snapshot of a boot volume. Returns INVALID_ARGUMENT if called for a non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeSnapshot'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshot'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-verb: insert
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restoreVolumeSnapshot:
    parameters: *ref_1
    post:
      description: Uses the specified snapshot to restore its parent volume. Returns INVALID_ARGUMENT if called for a non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreVolumeSnapshotRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:
    parameters: *ref_1
    get:
      description: Returns the specified snapshot resource. Returns INVALID_ARGUMENT if called for a non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshot'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-verb: select
    delete:
      description: Deletes a volume snapshot. Returns INVALID_ARGUMENT if called for a non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-verb: delete
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}:
    parameters: *ref_1
    get:
      description: Get details of a single storage logical unit number(LUN).
      operationId: baremetalsolution.projects.locations.volumes.luns.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: lunsId
          required: true
          schema:
            type: string
      x-stackQL-resource: luns
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns:
    parameters: *ref_1
    get:
      description: List storage volume luns for given storage volume.
      operationId: baremetalsolution.projects.locations.volumes.luns.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: luns
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas:
    parameters: *ref_1
    get:
      description: List the budget details to provision resources on a given project.
      operationId: baremetalsolution.projects.locations.provisioningQuotas.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvisioningQuotasResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: provisioning_quotas
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: Get details about an operation. This method used only to work around CCFE lack of passthrough LRO support (b/221498758).
      operationId: baremetalsolution.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/sshKeys:
    parameters: *ref_1
    post:
      description: Register a public SSH key in the specified project for use with the interactive serial console feature.
      operationId: baremetalsolution.projects.locations.sshKeys.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSHKey'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: sshKeyId
          schema:
            type: string
      x-stackQL-resource: ssh_keys
      x-stackQL-verb: insert
    get:
      description: Lists the public SSH keys registered for the specified project. These SSH keys are used only for the interactive serial console feature.
      operationId: baremetalsolution.projects.locations.sshKeys.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSSHKeysResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: ssh_keys
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/sshKeys/{sshKeysId}:
    parameters: *ref_1
    delete:
      description: Deletes a public SSH key registered in the specified project.
      operationId: baremetalsolution.projects.locations.sshKeys.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sshKeysId
          required: true
          schema:
            type: string
      x-stackQL-resource: ssh_keys
      x-stackQL-verb: delete
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disableInteractiveSerialConsole:
    parameters: *ref_1
    post:
      description: Disable the interactive serial console feature on an instance.
      operationId: baremetalsolution.projects.locations.instances.disableInteractiveSerialConsole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableInteractiveSerialConsoleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start:
    parameters: *ref_1
    post:
      description: Starts a server that was shutdown.
      operationId: baremetalsolution.projects.locations.instances.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:
    parameters: *ref_1
    patch:
      description: Update details of a single server.
      operationId: baremetalsolution.projects.locations.instances.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
    get:
      description: Get details about a single server.
      operationId: baremetalsolution.projects.locations.instances.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/instances:
    parameters: *ref_1
    post:
      description: Create an Instance.
      operationId: baremetalsolution.projects.locations.instances.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: insert
    get:
      description: List servers in a given project and location.
      operationId: baremetalsolution.projects.locations.instances.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset:
    parameters: *ref_1
    post:
      description: Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.
      operationId: baremetalsolution.projects.locations.instances.reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop:
    parameters: *ref_1
    post:
      description: Stop a running server.
      operationId: baremetalsolution.projects.locations.instances.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:enableInteractiveSerialConsole:
    parameters: *ref_1
    post:
      description: Enable the interactive serial console feature on an instance.
      operationId: baremetalsolution.projects.locations.instances.enableInteractiveSerialConsole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableInteractiveSerialConsoleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun:
    parameters: *ref_1
    post:
      description: Detach LUN from Instance.
      operationId: baremetalsolution.projects.locations.instances.detachLun
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachLunRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/nfsShares:
    parameters: *ref_1
    post:
      description: Create an NFS share.
      operationId: baremetalsolution.projects.locations.nfsShares.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NfsShare'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-verb: insert
    get:
      description: List NFS shares.
      operationId: baremetalsolution.projects.locations.nfsShares.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNfsSharesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}:
    parameters: *ref_1
    get:
      description: Get details of a single NFS share.
      operationId: baremetalsolution.projects.locations.nfsShares.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NfsShare'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-verb: select
    patch:
      description: Update details of a single NFS share.
      operationId: baremetalsolution.projects.locations.nfsShares.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NfsShare'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-verb: exec
    delete:
      description: Delete an NFS share. The underlying volume is automatically deleted.
      operationId: baremetalsolution.projects.locations.nfsShares.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-verb: delete
