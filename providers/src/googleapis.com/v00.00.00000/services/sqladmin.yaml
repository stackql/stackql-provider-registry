openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud SQL Admin API
  description: API for Cloud SQL database instance management
  version: v1
  x-discovery-doc-revision: '20250807'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://developers.google.com/cloud-sql/
servers:
  - url: https://sqladmin.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
            https://www.googleapis.com/auth/sqlservice.admin: Manage your Google SQL Service instances
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    Operation:
      id: Operation
      description: >-
        An Operation resource. For successful operations that return an
        Operation resource, only the fields relevant to the operation are
        populated in the resource.
      type: object
      properties:
        kind:
          description: This is always `sql#operation`.
          type: string
        targetLink:
          type: string
        status:
          description: The status of an operation.
          type: string
          enumDescriptions:
            - The state of the operation is unknown.
            - The operation has been queued, but has not started yet.
            - The operation is running.
            - The operation completed.
          enum:
            - SQL_OPERATION_STATUS_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
        user:
          description: The email address of the user who initiated this operation.
          type: string
        insertTime:
          description: >-
            The time this operation was enqueued in UTC timezone in [RFC
            3339](https://tools.ietf.org/html/rfc3339) format, for example
            `2012-11-15T16:19:00.094Z`.
          type: string
          format: google-datetime
        startTime:
          description: >-
            The time this operation actually started in UTC timezone in [RFC
            3339](https://tools.ietf.org/html/rfc3339) format, for example
            `2012-11-15T16:19:00.094Z`.
          type: string
          format: google-datetime
        endTime:
          description: >-
            The time this operation finished in UTC timezone in [RFC
            3339](https://tools.ietf.org/html/rfc3339) format, for example
            `2012-11-15T16:19:00.094Z`.
          type: string
          format: google-datetime
        error:
          description: >-
            If errors occurred during processing of this operation, this field
            will be populated.
          $ref: '#/components/schemas/OperationErrors'
        apiWarning:
          description: An Admin API warning message.
          $ref: '#/components/schemas/ApiWarning'
        operationType:
          description: >-
            The type of the operation. Valid values are: * `CREATE` * `DELETE` *
            `UPDATE` * `RESTART` * `IMPORT` * `EXPORT` * `BACKUP_VOLUME` *
            `RESTORE_VOLUME` * `CREATE_USER` * `DELETE_USER` * `CREATE_DATABASE`
            * `DELETE_DATABASE`
          type: string
          enumDescriptions:
            - Unknown operation type.
            - Imports data into a Cloud SQL instance.
            - Exports data from a Cloud SQL instance to a Cloud Storage bucket.
            - Creates a new Cloud SQL instance.
            - Updates the settings of a Cloud SQL instance.
            - Deletes a Cloud SQL instance.
            - Restarts the Cloud SQL instance.
            - ''
            - ''
            - Performs instance backup.
            - Deletes an instance backup.
            - Restores an instance backup.
            - Injects a privileged user in mysql for MOB instances.
            - Clones a Cloud SQL instance.
            - Stops replication on a Cloud SQL read replica instance.
            - Starts replication on a Cloud SQL read replica instance.
            - Promotes a Cloud SQL replica instance.
            - Creates a Cloud SQL replica instance.
            - Creates a new user in a Cloud SQL instance.
            - Deletes a user from a Cloud SQL instance.
            - Updates an existing user in a Cloud SQL instance.
            - Creates a database in the Cloud SQL instance.
            - Deletes a database in the Cloud SQL instance.
            - Updates a database in the Cloud SQL instance.
            - Performs failover of an HA-enabled Cloud SQL failover replica.
            - Deletes the backup taken by a backup run.
            - ''
            - Truncates a general or slow log table in MySQL.
            - >-
              Demotes the stand-alone instance to be a Cloud SQL read replica
              for an external database server.
            - >-
              Indicates that the instance is currently in maintenance.
              Maintenance typically causes the instance to be unavailable for
              1-3 minutes.
            - >-
              This field is deprecated, and will be removed in future version of
              API.
            - ''
            - Creates clone instance.
            - Reschedule maintenance to another time.
            - >-
              Starts external sync of a Cloud SQL EM replica to an external
              primary instance.
            - Recovers logs from an instance's old data disk.
            - >-
              Performs auto-restart of an HA-enabled Cloud SQL database for auto
              recovery.
            - Re-encrypts CMEK instances with latest key version.
            - >-
              Switches the roles of the primary and replica pair. The target
              instance should be the replica.
            - Update a backup.
            - >-
              Acquire a lease for the setup of SQL Server Reporting Services
              (SSRS).
            - >-
              Release a lease for the setup of SQL Server Reporting Services
              (SSRS).
            - >-
              Reconfigures old primary after a promote replica operation. Effect
              of a promote operation to the old primary is executed in this
              operation, asynchronously from the promote replica operation
              executed to the replica.
            - >-
              Indicates that the instance, its read replicas, and its cascading
              replicas are in maintenance. Maintenance typically gets initiated
              on groups of replicas first, followed by the primary instance. For
              each instance, maintenance typically causes the instance to be
              unavailable for 1-3 minutes.
            - >-
              Indicates that the instance (and any of its replicas) are
              currently in maintenance. This is initiated as a self-service
              request by using SSM. Maintenance typically causes the instance to
              be unavailable for 1-3 minutes.
            - >-
              Switches a primary instance to a replica. This operation runs as
              part of a switchover operation to the original primary instance.
            - Updates the major version of a Cloud SQL instance.
            - >-
              Deprecated: ADVANCED_BACKUP is deprecated. Use ENHANCED_BACKUP
              instead.
            - Changes the BackupTier of a Cloud SQL instance.
            - Creates a backup for an Enhanced BackupTier Cloud SQL instance.
            - >-
              Repairs entire read pool or specified read pool nodes in the read
              pool.
            - Creates a Cloud SQL read pool instance.
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
            - true
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
            - true
            - false
            - false
            - true
            - false
            - false
            - false
            - false
          enum:
            - SQL_OPERATION_TYPE_UNSPECIFIED
            - IMPORT
            - EXPORT
            - CREATE
            - UPDATE
            - DELETE
            - RESTART
            - BACKUP
            - SNAPSHOT
            - BACKUP_VOLUME
            - DELETE_VOLUME
            - RESTORE_VOLUME
            - INJECT_USER
            - CLONE
            - STOP_REPLICA
            - START_REPLICA
            - PROMOTE_REPLICA
            - CREATE_REPLICA
            - CREATE_USER
            - DELETE_USER
            - UPDATE_USER
            - CREATE_DATABASE
            - DELETE_DATABASE
            - UPDATE_DATABASE
            - FAILOVER
            - DELETE_BACKUP
            - RECREATE_REPLICA
            - TRUNCATE_LOG
            - DEMOTE_MASTER
            - MAINTENANCE
            - ENABLE_PRIVATE_IP
            - DEFER_MAINTENANCE
            - CREATE_CLONE
            - RESCHEDULE_MAINTENANCE
            - START_EXTERNAL_SYNC
            - LOG_CLEANUP
            - AUTO_RESTART
            - REENCRYPT
            - SWITCHOVER
            - UPDATE_BACKUP
            - ACQUIRE_SSRS_LEASE
            - RELEASE_SSRS_LEASE
            - RECONFIGURE_OLD_PRIMARY
            - CLUSTER_MAINTENANCE
            - SELF_SERVICE_MAINTENANCE
            - SWITCHOVER_TO_REPLICA
            - MAJOR_VERSION_UPGRADE
            - ADVANCED_BACKUP
            - MANAGE_BACKUP
            - ENHANCED_BACKUP
            - REPAIR_READ_POOL
            - CREATE_READ_POOL
        importContext:
          description: The context for import operation, if applicable.
          $ref: '#/components/schemas/ImportContext'
        exportContext:
          description: The context for export operation, if applicable.
          $ref: '#/components/schemas/ExportContext'
        backupContext:
          description: The context for backup operation, if applicable.
          $ref: '#/components/schemas/BackupContext'
        name:
          description: >-
            An identifier that uniquely identifies the operation. You can use
            this identifier to retrieve the Operations resource that has
            information about the operation.
          type: string
        targetId:
          description: Name of the resource on which this operation runs.
          type: string
        selfLink:
          description: The URI of this resource.
          type: string
        targetProject:
          description: The project ID of the target instance related to this operation.
          type: string
        acquireSsrsLeaseContext:
          description: The context for acquire SSRS lease operation, if applicable.
          $ref: '#/components/schemas/AcquireSsrsLeaseContext'
        subOperationType:
          description: Optional. The sub operation based on the operation type.
          $ref: '#/components/schemas/SqlSubOperationType'
    OperationErrors:
      id: OperationErrors
      description: Database instance operation errors list wrapper.
      type: object
      properties:
        kind:
          description: This is always `sql#operationErrors`.
          type: string
        errors:
          description: The list of errors encountered while processing this operation.
          type: array
          items:
            $ref: '#/components/schemas/OperationError'
    OperationError:
      id: OperationError
      description: Database instance operation error.
      type: object
      properties:
        kind:
          description: This is always `sql#operationError`.
          type: string
        code:
          description: Identifies the specific error that occurred.
          type: string
        message:
          description: Additional information about the error encountered.
          type: string
    ApiWarning:
      id: ApiWarning
      description: An Admin API warning message.
      type: object
      properties:
        code:
          description: Code to uniquely identify the warning type.
          type: string
          enumDescriptions:
            - An unknown or unset warning type from Cloud SQL API.
            - >-
              Warning when one or more regions are not reachable. The returned
              result set may be incomplete.
            - >-
              Warning when user provided maxResults parameter exceeds the limit.
              The returned result set may be incomplete.
            - >-
              Warning when user tries to create/update a user with credentials
              that have previously been compromised by a public data breach.
            - >-
              Warning when the operation succeeds but some non-critical workflow
              state failed.
          enum:
            - SQL_API_WARNING_CODE_UNSPECIFIED
            - REGION_UNREACHABLE
            - MAX_RESULTS_EXCEEDS_LIMIT
            - COMPROMISED_CREDENTIALS
            - INTERNAL_STATE_FAILURE
        message:
          description: The warning message.
          type: string
        region:
          description: The region name for REGION_UNREACHABLE warning.
          type: string
    ImportContext:
      id: ImportContext
      description: Database instance import context.
      type: object
      properties:
        uri:
          description: >-
            Path to the import file in Cloud Storage, in the form
            `gs://bucketName/fileName`. Compressed gzip files (.gz) are
            supported when `fileType` is `SQL`. The instance must have write
            permissions to the bucket and read access to the file.
          type: string
        database:
          description: >-
            The target database for the import. If `fileType` is `SQL`, this
            field is required only if the import file does not specify a
            database, and is overridden by any database specification in the
            import file. For entire instance parallel import operations, the
            database is overridden by the database name stored in subdirectory
            name. If `fileType` is `CSV`, one database must be specified.
          type: string
        kind:
          description: This is always `sql#importContext`.
          type: string
        fileType:
          description: >-
            The file type for the specified uri.\`SQL`: The file contains SQL
            statements. \`CSV`: The file contains CSV data.
          type: string
          enumDescriptions:
            - Unknown file type.
            - File containing SQL statements.
            - File in CSV format.
            - ''
            - TDE certificate.
          enum:
            - SQL_FILE_TYPE_UNSPECIFIED
            - SQL
            - CSV
            - BAK
            - TDE
        csvImportOptions:
          description: Options for importing data as CSV.
          type: object
          properties:
            table:
              description: The table to which CSV data is imported.
              type: string
            columns:
              description: >-
                The columns to which CSV data is imported. If not specified, all
                columns of the database table are loaded with CSV data.
              type: array
              items:
                type: string
            escapeCharacter:
              description: >-
                Specifies the character that should appear before a data
                character that needs to be escaped.
              type: string
            quoteCharacter:
              description: >-
                Specifies the quoting character to be used when a data value is
                quoted.
              type: string
            fieldsTerminatedBy:
              description: >-
                Specifies the character that separates columns within each row
                (line) of the file.
              type: string
            linesTerminatedBy:
              description: >-
                This is used to separate lines. If a line does not contain all
                fields, the rest of the columns are set to their default values.
              type: string
        importUser:
          description: >-
            The PostgreSQL user for this import operation. PostgreSQL instances
            only.
          type: string
        bakImportOptions:
          description: Import parameters specific to SQL Server .BAK files
          type: object
          properties:
            encryptionOptions:
              type: object
              properties:
                certPath:
                  description: >-
                    Path to the Certificate (.cer) in Cloud Storage, in the form
                    `gs://bucketName/fileName`. The instance must have write
                    permissions to the bucket and read access to the file.
                  type: string
                pvkPath:
                  description: >-
                    Path to the Certificate Private Key (.pvk) in Cloud Storage,
                    in the form `gs://bucketName/fileName`. The instance must
                    have write permissions to the bucket and read access to the
                    file.
                  type: string
                pvkPassword:
                  description: Password that encrypts the private key
                  type: string
                keepEncrypted:
                  description: Optional. Whether the imported file remains encrypted.
                  type: boolean
            striped:
              description: >-
                Whether or not the backup set being restored is striped. Applies
                only to Cloud SQL for SQL Server.
              type: boolean
            noRecovery:
              description: >-
                Whether or not the backup importing will restore database with
                NORECOVERY option Applies only to Cloud SQL for SQL Server.
              type: boolean
            recoveryOnly:
              description: >-
                Whether or not the backup importing request will just bring
                database online without downloading Bak content only one of
                "no_recovery" and "recovery_only" can be true otherwise error
                will return. Applies only to Cloud SQL for SQL Server.
              type: boolean
            bakType:
              description: Type of the bak content, FULL or DIFF
              type: string
              enumDescriptions:
                - Default type.
                - Full backup.
                - Differential backup.
                - Transaction Log backup
              enum:
                - BAK_TYPE_UNSPECIFIED
                - FULL
                - DIFF
                - TLOG
            stopAt:
              description: >-
                Optional. The timestamp when the import should stop. This
                timestamp is in the [RFC
                3339](https://tools.ietf.org/html/rfc3339) format (for example,
                `2023-10-01T16:19:00.094`). This field is equivalent to the
                STOPAT keyword and applies to Cloud SQL for SQL Server only.
              type: string
              format: google-datetime
            stopAtMark:
              description: >-
                Optional. The marked transaction where the import should stop.
                This field is equivalent to the STOPATMARK keyword and applies
                to Cloud SQL for SQL Server only.
              type: string
        sqlImportOptions:
          description: Optional. Options for importing data from SQL statements.
          type: object
          properties:
            threads:
              description: Optional. The number of threads to use for parallel import.
              type: integer
              format: int32
            parallel:
              description: Optional. Whether or not the import should be parallel.
              type: boolean
            postgresImportOptions:
              description: >-
                Optional. Options for importing from a Cloud SQL for PostgreSQL
                instance.
              type: object
              properties:
                clean:
                  description: >-
                    Optional. The --clean flag for the pg_restore utility. This
                    flag applies only if you enabled Cloud SQL to import files
                    in parallel.
                  type: boolean
                ifExists:
                  description: >-
                    Optional. The --if-exists flag for the pg_restore utility.
                    This flag applies only if you enabled Cloud SQL to import
                    files in parallel.
                  type: boolean
        tdeImportOptions:
          description: Optional. Import parameters specific to SQL Server TDE certificates
          type: object
          properties:
            certificatePath:
              description: >-
                Required. Path to the TDE certificate public key in the form
                gs://bucketName/fileName. The instance must have read access to
                the file. Applicable only for SQL Server instances.
              type: string
            privateKeyPath:
              description: >-
                Required. Path to the TDE certificate private key in the form
                gs://bucketName/fileName. The instance must have read access to
                the file. Applicable only for SQL Server instances.
              type: string
            privateKeyPassword:
              description: Required. Password that encrypts the private key.
              type: string
            name:
              description: >-
                Required. Certificate name. Applicable only for SQL Server
                instances.
              type: string
    ExportContext:
      id: ExportContext
      description: Database instance export context.
      type: object
      properties:
        uri:
          description: >-
            The path to the file in Google Cloud Storage where the export will
            be stored. The URI is in the form `gs://bucketName/fileName`. If the
            file already exists, the request succeeds, but the operation fails.
            If `fileType` is `SQL` and the filename ends with .gz, the contents
            are compressed.
          type: string
        databases:
          description: >-
            Databases to be exported. `MySQL instances:` If `fileType` is `SQL`
            and no database is specified, all databases are exported, except for
            the `mysql` system database. If `fileType` is `CSV`, you can specify
            one database, either by using this property or by using the
            `csvExportOptions.selectQuery` property, which takes precedence over
            this property. `PostgreSQL instances:` If you don't specify a
            database by name, all user databases in the instance are exported.
            This excludes system databases and Cloud SQL databases used to
            manage internal operations. Exporting all user databases is only
            available for directory-formatted parallel export. If `fileType` is
            `CSV`, this database must match the one specified in the
            `csvExportOptions.selectQuery` property. `SQL Server instances:` You
            must specify one database to be exported, and the `fileType` must be
            `BAK`.
          type: array
          items:
            type: string
        kind:
          description: This is always `sql#exportContext`.
          type: string
        sqlExportOptions:
          description: Options for exporting data as SQL statements.
          type: object
          properties:
            tables:
              description: >-
                Tables to export, or that were exported, from the specified
                database. If you specify tables, specify one and only one
                database. For PostgreSQL instances, you can specify only one
                table.
              type: array
              items:
                type: string
            schemaOnly:
              description: Export only schemas.
              type: boolean
            mysqlExportOptions:
              description: Options for exporting from MySQL.
              type: object
              properties:
                masterData:
                  description: >-
                    Option to include SQL statement required to set up
                    replication. If set to `1`, the dump file includes a CHANGE
                    MASTER TO statement with the binary log coordinates, and
                    --set-gtid-purged is set to ON. If set to `2`, the CHANGE
                    MASTER TO statement is written as a SQL comment and has no
                    effect. If set to any value other than `1`,
                    --set-gtid-purged is set to OFF.
                  type: integer
                  format: int32
            threads:
              description: Optional. The number of threads to use for parallel export.
              type: integer
              format: int32
            parallel:
              description: Optional. Whether or not the export should be parallel.
              type: boolean
            postgresExportOptions:
              description: Options for exporting from a Cloud SQL for PostgreSQL instance.
              type: object
              properties:
                clean:
                  description: >-
                    Optional. Use this option to include DROP <object> SQL
                    statements. Use these statements to delete database objects
                    before running the import operation.
                  type: boolean
                ifExists:
                  description: >-
                    Optional. Option to include an IF EXISTS SQL statement with
                    each DROP statement produced by clean.
                  type: boolean
        csvExportOptions:
          description: >-
            Options for exporting data as CSV. `MySQL` and `PostgreSQL`
            instances only.
          type: object
          properties:
            selectQuery:
              description: The select query used to extract the data.
              type: string
            escapeCharacter:
              description: >-
                Specifies the character that should appear before a data
                character that needs to be escaped.
              type: string
            quoteCharacter:
              description: >-
                Specifies the quoting character to be used when a data value is
                quoted.
              type: string
            fieldsTerminatedBy:
              description: >-
                Specifies the character that separates columns within each row
                (line) of the file.
              type: string
            linesTerminatedBy:
              description: >-
                This is used to separate lines. If a line does not contain all
                fields, the rest of the columns are set to their default values.
              type: string
        fileType:
          description: The file type for the specified uri.
          type: string
          enumDescriptions:
            - Unknown file type.
            - File containing SQL statements.
            - File in CSV format.
            - ''
            - TDE certificate.
          enum:
            - SQL_FILE_TYPE_UNSPECIFIED
            - SQL
            - CSV
            - BAK
            - TDE
        offload:
          description: Whether to perform a serverless export.
          type: boolean
        bakExportOptions:
          description: Options for exporting BAK files (SQL Server-only)
          type: object
          properties:
            striped:
              description: Whether or not the export should be striped.
              type: boolean
            stripeCount:
              description: >-
                Option for specifying how many stripes to use for the export. If
                blank, and the value of the striped field is true, the number of
                stripes is automatically chosen.
              type: integer
              format: int32
            bakType:
              description: >-
                Type of this bak file will be export, FULL or DIFF, SQL Server
                only
              type: string
              enumDescriptions:
                - Default type.
                - Full backup.
                - Differential backup.
                - Transaction Log backup
              enum:
                - BAK_TYPE_UNSPECIFIED
                - FULL
                - DIFF
                - TLOG
            copyOnly:
              description: >-
                Deprecated: copy_only is deprecated. Use differential_base
                instead
              deprecated: true
              type: boolean
            differentialBase:
              description: >-
                Whether or not the backup can be used as a differential base
                copy_only backup can not be served as differential base
              type: boolean
            exportLogStartTime:
              description: >-
                Optional. The begin timestamp when transaction log will be
                included in the export operation. [RFC
                3339](https://tools.ietf.org/html/rfc3339) format (for example,
                `2023-10-01T16:19:00.094`) in UTC. When omitted, all available
                logs from the beginning of retention period will be included.
                Only applied to Cloud SQL for SQL Server.
              type: string
              format: google-datetime
            exportLogEndTime:
              description: >-
                Optional. The end timestamp when transaction log will be
                included in the export operation. [RFC
                3339](https://tools.ietf.org/html/rfc3339) format (for example,
                `2023-10-01T16:19:00.094`) in UTC. When omitted, all available
                logs until current time will be included. Only applied to Cloud
                SQL for SQL Server.
              type: string
              format: google-datetime
        tdeExportOptions:
          description: Optional. Export parameters specific to SQL Server TDE certificates
          type: object
          properties:
            certificatePath:
              description: >-
                Required. Path to the TDE certificate public key in the form
                gs://bucketName/fileName. The instance must have write access to
                the bucket. Applicable only for SQL Server instances.
              type: string
            privateKeyPath:
              description: >-
                Required. Path to the TDE certificate private key in the form
                gs://bucketName/fileName. The instance must have write access to
                the location. Applicable only for SQL Server instances.
              type: string
            privateKeyPassword:
              description: Required. Password that encrypts the private key.
              type: string
            name:
              description: >-
                Required. Certificate name. Applicable only for SQL Server
                instances.
              type: string
    BackupContext:
      id: BackupContext
      description: Backup context.
      type: object
      properties:
        backupId:
          description: The identifier of the backup.
          type: string
          format: int64
        kind:
          description: This is always `sql#backupContext`.
          type: string
        name:
          description: 'The name of the backup. Format: projects/{project}/backups/{backup}'
          type: string
    AcquireSsrsLeaseContext:
      id: AcquireSsrsLeaseContext
      description: Acquire SSRS lease context.
      type: object
      properties:
        setupLogin:
          description: >-
            The username to be used as the setup login to connect to the
            database server for SSRS setup.
          type: string
        serviceLogin:
          description: >-
            The username to be used as the service login to connect to the
            report database for SSRS setup.
          type: string
        reportDatabase:
          description: The report database to be used for SSRS setup.
          type: string
        duration:
          description: Lease duration needed for SSRS setup.
          type: string
          format: google-duration
    SqlSubOperationType:
      id: SqlSubOperationType
      description: The sub operation type based on the operation type.
      type: object
      properties:
        maintenanceType:
          description: The type of maintenance to be performed on the instance.
          type: string
          enumDescriptions:
            - Maintenance type is unspecified.
            - >-
              Indicates that a standalone instance is undergoing maintenance.
              The instance can be either a primary instance or a replica.
            - >-
              Indicates that the primary instance and all of its replicas,
              including cascading replicas, are undergoing maintenance.
              Maintenance is performed on groups of replicas first, followed by
              the primary instance.
            - >-
              Indicates that the standalone instance is undergoing maintenance,
              initiated by self-service. The instance can be either a primary
              instance or a replica.
            - >-
              Indicates that the primary instance and all of its replicas are
              undergoing maintenance, initiated by self-service. Maintenance is
              performed on groups of replicas first, followed by the primary
              instance.
          enum:
            - SQL_MAINTENANCE_TYPE_UNSPECIFIED
            - INSTANCE_MAINTENANCE
            - REPLICA_INCLUDED_MAINTENANCE
            - INSTANCE_SELF_SERVICE_MAINTENANCE
            - REPLICA_INCLUDED_SELF_SERVICE_MAINTENANCE
    InstancesCloneRequest:
      id: InstancesCloneRequest
      description: Database instance clone request.
      type: object
      properties:
        cloneContext:
          description: Contains details about the clone operation.
          $ref: '#/components/schemas/CloneContext'
    CloneContext:
      id: CloneContext
      description: Database instance clone context.
      type: object
      properties:
        kind:
          description: This is always `sql#cloneContext`.
          type: string
        pitrTimestampMs:
          description: Reserved for future use.
          type: string
          format: int64
        destinationInstanceName:
          description: Name of the Cloud SQL instance to be created as a clone.
          type: string
        binLogCoordinates:
          description: >-
            Binary log coordinates, if specified, identify the position up to
            which the source instance is cloned. If not specified, the source
            instance is cloned up to the most recent binary log coordinates.
          $ref: '#/components/schemas/BinLogCoordinates'
        pointInTime:
          description: >-
            Timestamp, if specified, identifies the time to which the source
            instance is cloned.
          type: string
          format: google-datetime
        allocatedIpRange:
          description: >-
            The name of the allocated ip range for the private ip Cloud SQL
            instance. For example: "google-managed-services-default". If set,
            the cloned instance ip will be created in the allocated range. The
            range name must comply with [RFC
            1035](https://tools.ietf.org/html/rfc1035). Specifically, the name
            must be 1-63 characters long and match the regular expression
            [a-z]([-a-z0-9]*[a-z0-9])?. Reserved for future use.
          type: string
        databaseNames:
          description: >-
            (SQL Server only) Clone only the specified databases from the source
            instance. Clone all databases if empty.
          type: array
          items:
            type: string
        preferredZone:
          description: >-
            Optional. Copy clone and point-in-time recovery clone of an instance
            to the specified zone. If no zone is specified, clone to the same
            primary zone as the source instance. This field applies to all DB
            types.
          type: string
        preferredSecondaryZone:
          description: >-
            Optional. Copy clone and point-in-time recovery clone of a regional
            instance in the specified zones. If not specified, clone to the same
            secondary zone as the source instance. This value cannot be the same
            as the preferred_zone field. This field applies to all DB types.
          type: string
        sourceInstanceDeletionTime:
          description: >-
            The timestamp used to identify the time when the source instance is
            deleted. If this instance is deleted, then you must set the
            timestamp.
          type: string
          format: google-datetime
    BinLogCoordinates:
      id: BinLogCoordinates
      description: Binary log coordinates.
      type: object
      properties:
        binLogFileName:
          description: Name of the binary log file for a Cloud SQL instance.
          type: string
        binLogPosition:
          description: Position (offset) within the binary log file.
          type: string
          format: int64
        kind:
          description: This is always `sql#binLogCoordinates`.
          type: string
    InstancesDemoteMasterRequest:
      id: InstancesDemoteMasterRequest
      description: Database demote primary instance request.
      type: object
      properties:
        demoteMasterContext:
          description: Contains details about the demoteMaster operation.
          $ref: '#/components/schemas/DemoteMasterContext'
    DemoteMasterContext:
      id: DemoteMasterContext
      description: Database instance demote primary instance context.
      type: object
      properties:
        kind:
          description: This is always `sql#demoteMasterContext`.
          type: string
        verifyGtidConsistency:
          description: >-
            Verify the GTID consistency for demote operation. Default value:
            `True`. Setting this flag to `false` enables you to bypass the GTID
            consistency check between on-premises primary instance and Cloud SQL
            instance during the demotion operation but also exposes you to the
            risk of future replication failures. Change the value only if you
            know the reason for the GTID divergence and are confident that doing
            so will not cause any replication issues.
          type: boolean
        masterInstanceName:
          description: >-
            The name of the instance which will act as on-premises primary
            instance in the replication setup.
          type: string
        replicaConfiguration:
          description: >-
            Configuration specific to read-replicas replicating from the
            on-premises primary instance.
          $ref: '#/components/schemas/DemoteMasterConfiguration'
        skipReplicationSetup:
          description: Flag to skip replication setup on the instance.
          type: boolean
    DemoteMasterConfiguration:
      id: DemoteMasterConfiguration
      description: >-
        Read-replica configuration for connecting to the on-premises primary
        instance.
      type: object
      properties:
        kind:
          description: This is always `sql#demoteMasterConfiguration`.
          type: string
        mysqlReplicaConfiguration:
          description: >-
            MySQL specific configuration when replicating from a MySQL
            on-premises primary instance. Replication configuration information
            such as the username, password, certificates, and keys are not
            stored in the instance metadata. The configuration information is
            used only to set up the replication connection and is stored by
            MySQL in a file named `master.info` in the data directory.
          $ref: '#/components/schemas/DemoteMasterMySqlReplicaConfiguration'
    DemoteMasterMySqlReplicaConfiguration:
      id: DemoteMasterMySqlReplicaConfiguration
      description: Read-replica configuration specific to MySQL databases.
      type: object
      properties:
        kind:
          description: This is always `sql#demoteMasterMysqlReplicaConfiguration`.
          type: string
        username:
          description: The username for the replication connection.
          type: string
        password:
          description: The password for the replication connection.
          type: string
        clientKey:
          description: >-
            PEM representation of the replica's private key. The corresponding
            public key is encoded in the client's certificate. The format of the
            replica's private key can be either PKCS #1 or PKCS #8.
          type: string
        clientCertificate:
          description: PEM representation of the replica's x509 certificate.
          type: string
        caCertificate:
          description: PEM representation of the trusted CA's x509 certificate.
          type: string
    InstancesDemoteRequest:
      id: InstancesDemoteRequest
      description: >-
        This request is used to demote an existing standalone instance to be a
        Cloud SQL read replica for an external database server.
      type: object
      properties:
        demoteContext:
          description: Required. Contains details about the demote operation.
          $ref: '#/components/schemas/DemoteContext'
    DemoteContext:
      id: DemoteContext
      description: >-
        This context is used to demote an existing standalone instance to be a
        Cloud SQL read replica for an external database server.
      type: object
      properties:
        kind:
          description: This is always `sql#demoteContext`.
          type: string
        sourceRepresentativeInstanceName:
          description: >-
            Required. The name of the instance which acts as the on-premises
            primary instance in the replication setup.
          type: string
    InstancesExportRequest:
      id: InstancesExportRequest
      description: Database instance export request.
      type: object
      properties:
        exportContext:
          description: Contains details about the export operation.
          $ref: '#/components/schemas/ExportContext'
    InstancesFailoverRequest:
      id: InstancesFailoverRequest
      description: Instance failover request.
      type: object
      properties:
        failoverContext:
          description: Failover Context.
          $ref: '#/components/schemas/FailoverContext'
    FailoverContext:
      id: FailoverContext
      description: Database instance failover context.
      type: object
      properties:
        settingsVersion:
          description: >-
            The current settings version of this instance. Request will be
            rejected if this version doesn't match the current settings version.
          type: string
          format: int64
        kind:
          description: This is always `sql#failoverContext`.
          type: string
    InstancesReencryptRequest:
      id: InstancesReencryptRequest
      description: Database Instance reencrypt request.
      type: object
      properties:
        backupReencryptionConfig:
          description: Configuration specific to backup re-encryption
          $ref: '#/components/schemas/BackupReencryptionConfig'
    BackupReencryptionConfig:
      id: BackupReencryptionConfig
      description: Backup Reencryption Config
      type: object
      properties:
        backupLimit:
          description: Backup re-encryption limit
          type: integer
          format: int32
        backupType:
          description: Type of backups users want to re-encrypt.
          type: string
          enumDescriptions:
            - Unknown backup type, will be defaulted to AUTOMATIC backup type
            - Reencrypt automatic backups
            - Reencrypt on-demand backups
          enum:
            - BACKUP_TYPE_UNSPECIFIED
            - AUTOMATED
            - ON_DEMAND
    DatabaseInstance:
      id: DatabaseInstance
      description: A Cloud SQL instance resource.
      type: object
      properties:
        kind:
          description: This is always `sql#instance`.
          type: string
        state:
          description: The current serving state of the Cloud SQL instance.
          type: string
          enumDescriptions:
            - The state of the instance is unknown.
            - The instance is running, or has been stopped by owner.
            - >-
              The instance is not available, for example due to problems with
              billing.
            - The instance is being deleted.
            - The instance is being created.
            - The instance is down for maintenance.
            - >-
              The creation of the instance failed or a fatal error occurred
              during maintenance.
            - Deprecated
            - >-
              (Applicable to read pool nodes only.) The read pool node needs to
              be repaired. The database might be unavailable.
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
            - false
          enum:
            - SQL_INSTANCE_STATE_UNSPECIFIED
            - RUNNABLE
            - SUSPENDED
            - PENDING_DELETE
            - PENDING_CREATE
            - MAINTENANCE
            - FAILED
            - ONLINE_MAINTENANCE
            - REPAIRING
        databaseVersion:
          description: >-
            The database engine type and version. The `databaseVersion` field
            cannot be changed after instance creation.
          type: string
          enumDescriptions:
            - This is an unknown database version.
            - The database version is MySQL 5.1.
            - The database version is MySQL 5.5.
            - The database version is MySQL 5.6.
            - The database version is MySQL 5.7.
            - The database version is MySQL 8.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              18.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              26.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              27.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              28.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              29.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              30.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              31.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              32.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              33.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              34.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              35.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              36.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              37.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              39.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              40.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              41.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              42.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              43.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              44.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              45.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              46.
            - The database version is MySQL 8.4.
            - The database version is SQL Server 2017 Standard.
            - The database version is SQL Server 2017 Enterprise.
            - The database version is SQL Server 2017 Express.
            - The database version is SQL Server 2017 Web.
            - The database version is PostgreSQL 9.6.
            - The database version is PostgreSQL 10.
            - The database version is PostgreSQL 11.
            - The database version is PostgreSQL 12.
            - The database version is PostgreSQL 13.
            - The database version is PostgreSQL 14.
            - The database version is PostgreSQL 15.
            - The database version is PostgreSQL 16.
            - The database version is PostgreSQL 17.
            - The database version is SQL Server 2019 Standard.
            - The database version is SQL Server 2019 Enterprise.
            - The database version is SQL Server 2019 Express.
            - The database version is SQL Server 2019 Web.
            - The database version is SQL Server 2022 Standard.
            - The database version is SQL Server 2022 Enterprise.
            - The database version is SQL Server 2022 Express.
            - The database version is SQL Server 2022 Web.
          enumDeprecated:
            - false
            - true
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
          enum:
            - SQL_DATABASE_VERSION_UNSPECIFIED
            - MYSQL_5_1
            - MYSQL_5_5
            - MYSQL_5_6
            - MYSQL_5_7
            - MYSQL_8_0
            - MYSQL_8_0_18
            - MYSQL_8_0_26
            - MYSQL_8_0_27
            - MYSQL_8_0_28
            - MYSQL_8_0_29
            - MYSQL_8_0_30
            - MYSQL_8_0_31
            - MYSQL_8_0_32
            - MYSQL_8_0_33
            - MYSQL_8_0_34
            - MYSQL_8_0_35
            - MYSQL_8_0_36
            - MYSQL_8_0_37
            - MYSQL_8_0_39
            - MYSQL_8_0_40
            - MYSQL_8_0_41
            - MYSQL_8_0_42
            - MYSQL_8_0_43
            - MYSQL_8_0_44
            - MYSQL_8_0_45
            - MYSQL_8_0_46
            - MYSQL_8_4
            - SQLSERVER_2017_STANDARD
            - SQLSERVER_2017_ENTERPRISE
            - SQLSERVER_2017_EXPRESS
            - SQLSERVER_2017_WEB
            - POSTGRES_9_6
            - POSTGRES_10
            - POSTGRES_11
            - POSTGRES_12
            - POSTGRES_13
            - POSTGRES_14
            - POSTGRES_15
            - POSTGRES_16
            - POSTGRES_17
            - SQLSERVER_2019_STANDARD
            - SQLSERVER_2019_ENTERPRISE
            - SQLSERVER_2019_EXPRESS
            - SQLSERVER_2019_WEB
            - SQLSERVER_2022_STANDARD
            - SQLSERVER_2022_ENTERPRISE
            - SQLSERVER_2022_EXPRESS
            - SQLSERVER_2022_WEB
        settings:
          description: The user settings.
          $ref: '#/components/schemas/Settings'
        etag:
          description: >-
            This field is deprecated and will be removed from a future version
            of the API. Use the `settings.settingsVersion` field instead.
          type: string
        failoverReplica:
          description: The name and status of the failover replica.
          type: object
          properties:
            name:
              description: >-
                The name of the failover replica. If specified at instance
                creation, a failover replica is created for the instance. The
                name doesn't include the project ID.
              type: string
            available:
              description: >-
                The availability status of the failover replica. A false status
                indicates that the failover replica is out of sync. The primary
                instance can only failover to the failover replica when the
                status is true.
              type: boolean
        masterInstanceName:
          description: >-
            The name of the instance which will act as primary in the
            replication setup.
          type: string
        replicaNames:
          description: The replicas of the instance.
          type: array
          items:
            type: string
        maxDiskSize:
          description: The maximum disk size of the instance in bytes.
          deprecated: true
          type: string
          format: int64
        currentDiskSize:
          description: >-
            The current disk usage of the instance in bytes. This property has
            been deprecated. Use the
            "cloudsql.googleapis.com/database/disk/bytes_used" metric in Cloud
            Monitoring API instead. Please see [this
            announcement](https://groups.google.com/d/msg/google-cloud-sql-announce/I_7-F9EBhT0/BtvFtdFeAgAJ)
            for details.
          deprecated: true
          type: string
          format: int64
        ipAddresses:
          description: The assigned IP addresses for the instance.
          type: array
          items:
            $ref: '#/components/schemas/IpMapping'
        serverCaCert:
          description: SSL configuration.
          $ref: '#/components/schemas/SslCert'
        instanceType:
          description: The instance type.
          type: string
          enumDescriptions:
            - This is an unknown Cloud SQL instance type.
            - >-
              A regular Cloud SQL instance that is not replicating from a
              primary instance.
            - >-
              An instance running on the customer's premises that is not managed
              by Cloud SQL.
            - A Cloud SQL instance acting as a read-replica.
            - A Cloud SQL read pool.
          enum:
            - SQL_INSTANCE_TYPE_UNSPECIFIED
            - CLOUD_SQL_INSTANCE
            - ON_PREMISES_INSTANCE
            - READ_REPLICA_INSTANCE
            - READ_POOL_INSTANCE
        project:
          description: >-
            The project ID of the project containing the Cloud SQL instance. The
            Google apps domain is prefixed if applicable.
          type: string
        ipv6Address:
          description: >-
            The IPv6 address assigned to the instance. (Deprecated) This
            property was applicable only to First Generation instances.
          deprecated: true
          type: string
        serviceAccountEmailAddress:
          description: >-
            The service account email address assigned to the instance.\This
            property is read-only.
          type: string
        onPremisesConfiguration:
          description: Configuration specific to on-premises instances.
          $ref: '#/components/schemas/OnPremisesConfiguration'
        replicaConfiguration:
          description: Configuration specific to failover replicas and read replicas.
          $ref: '#/components/schemas/ReplicaConfiguration'
        backendType:
          description: >-
            The backend type. `SECOND_GEN`: Cloud SQL database instance.
            `EXTERNAL`: A database server that is not managed by Google. This
            property is read-only; use the `tier` property in the `settings`
            object to determine the database type.
          type: string
          enumDescriptions:
            - This is an unknown backend type for instance.
            - V1 speckle instance.
            - V2 speckle instance.
            - On premises instance.
          enumDeprecated:
            - false
            - true
            - false
            - false
          enum:
            - SQL_BACKEND_TYPE_UNSPECIFIED
            - FIRST_GEN
            - SECOND_GEN
            - EXTERNAL
        selfLink:
          description: The URI of this resource.
          type: string
        suspensionReason:
          description: If the instance state is SUSPENDED, the reason for the suspension.
          type: array
          items:
            type: string
            enumDescriptions:
              - This is an unknown suspension reason.
              - >-
                The instance is suspended due to billing issues (for example:,
                GCP account issue)
              - >-
                The instance is suspended due to illegal content (for example:,
                child pornography, copyrighted material, etc.).
              - >-
                The instance is causing operational issues (for example:,
                causing the database to crash).
              - >-
                The KMS key used by the instance is either revoked or denied
                access to
            enum:
              - SQL_SUSPENSION_REASON_UNSPECIFIED
              - BILLING_ISSUE
              - LEGAL_ISSUE
              - OPERATIONAL_ISSUE
              - KMS_KEY_ISSUE
        connectionName:
          description: >-
            Connection name of the Cloud SQL instance used in connection
            strings.
          type: string
        name:
          description: >-
            Name of the Cloud SQL instance. This does not include the project
            ID.
          type: string
        region:
          description: >-
            The geographical region of the Cloud SQL instance. It can be one of
            the
            [regions](https://cloud.google.com/sql/docs/mysql/locations#location-r)
            where Cloud SQL operates: For example, `asia-east1`, `europe-west1`,
            and `us-central1`. The default value is `us-central1`.
          type: string
        gceZone:
          description: >-
            The Compute Engine zone that the instance is currently serving from.
            This value could be different from the zone that was specified when
            the instance was created if the instance has failed over to its
            secondary zone. WARNING: Changing this might restart the instance.
          type: string
        secondaryGceZone:
          description: >-
            The Compute Engine zone that the failover instance is currently
            serving from for a regional instance. This value could be different
            from the zone that was specified when the instance was created if
            the instance has failed over to its secondary/failover zone.
          type: string
        diskEncryptionConfiguration:
          description: Disk encryption configuration specific to an instance.
          $ref: '#/components/schemas/DiskEncryptionConfiguration'
        diskEncryptionStatus:
          description: Disk encryption status specific to an instance.
          $ref: '#/components/schemas/DiskEncryptionStatus'
        rootPassword:
          description: >-
            Initial root password. Use only on creation. You must set root
            passwords before you can connect to PostgreSQL instances.
          type: string
        scheduledMaintenance:
          description: >-
            The start time of any upcoming scheduled maintenance for this
            instance.
          $ref: '#/components/schemas/SqlScheduledMaintenance'
        satisfiesPzs:
          description: >-
            This status indicates whether the instance satisfies PZS. The status
            is reserved for future use.
          type: boolean
        databaseInstalledVersion:
          description: >-
            Output only. Stores the current database version running on the
            instance including minor version such as `MYSQL_8_0_18`.
          readOnly: true
          type: string
        outOfDiskReport:
          description: >-
            This field represents the report generated by the proactive database
            wellness job for OutOfDisk issues. * Writers: * the proactive
            database wellness job for OOD. * Readers: * the proactive database
            wellness job
          $ref: '#/components/schemas/SqlOutOfDiskReport'
        createTime:
          description: >-
            Output only. The time when the instance was created in [RFC
            3339](https://tools.ietf.org/html/rfc3339) format, for example
            `2012-11-15T16:19:00.094Z`.
          readOnly: true
          type: string
          format: google-datetime
        availableMaintenanceVersions:
          description: >-
            Output only. List all maintenance versions applicable on the
            instance
          readOnly: true
          type: array
          items:
            type: string
        maintenanceVersion:
          description: The current software version on the instance.
          type: string
        upgradableDatabaseVersions:
          description: Output only. All database versions that are available for upgrade.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/AvailableDatabaseVersion'
        sqlNetworkArchitecture:
          type: string
          enumDescriptions:
            - ''
            - The instance uses the new network architecture.
            - The instance uses the old network architecture.
          enum:
            - SQL_NETWORK_ARCHITECTURE_UNSPECIFIED
            - NEW_NETWORK_ARCHITECTURE
            - OLD_NETWORK_ARCHITECTURE
        pscServiceAttachmentLink:
          description: Output only. The link to service attachment of PSC instance.
          readOnly: true
          type: string
        dnsName:
          description: Output only. The dns name of the instance.
          readOnly: true
          type: string
        primaryDnsName:
          description: 'Output only. DEPRECATED: please use write_endpoint instead.'
          readOnly: true
          deprecated: true
          type: string
        writeEndpoint:
          description: >-
            Output only. The dns name of the primary instance in a replication
            group.
          readOnly: true
          type: string
        replicationCluster:
          description: >-
            Optional. A primary instance and disaster recovery (DR) replica
            pair. A DR replica is a cross-region replica that you designate for
            failover in the event that the primary instance experiences regional
            failure. Applicable to MySQL and PostgreSQL.
          $ref: '#/components/schemas/ReplicationCluster'
        geminiConfig:
          description: Gemini instance configuration.
          $ref: '#/components/schemas/GeminiInstanceConfig'
        satisfiesPzi:
          description: >-
            Output only. This status indicates whether the instance satisfies
            PZI. The status is reserved for future use.
          readOnly: true
          type: boolean
        switchTransactionLogsToCloudStorageEnabled:
          description: >-
            Input only. Whether Cloud SQL is enabled to switch storing
            point-in-time recovery log files from a data disk to Cloud Storage.
          type: boolean
        includeReplicasForMajorVersionUpgrade:
          description: >-
            Input only. Determines whether an in-place major version upgrade of
            replicas happens when an in-place major version upgrade of a primary
            instance is initiated.
          type: boolean
        tags:
          description: >-
            Optional. Input only. Immutable. Tag keys and tag values that are
            bound to this instance. You must represent each item in the map as:
            `"" : ""`. For example, a single resource can have the following
            tags: ``` "123/environment": "production", "123/costCenter":
            "marketing", ``` For more information on tag creation and
            management, see
            https://cloud.google.com/resource-manager/docs/tags/tags-overview.
          type: object
          additionalProperties:
            type: string
        nodeCount:
          description: The number of read pool nodes in a read pool.
          type: integer
          format: int32
        nodes:
          description: >-
            Output only. Entries containing information about each read pool
            node of the read pool.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PoolNodeConfig'
        dnsNames:
          description: Output only. The list of DNS names used by this instance.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DnsNameMapping'
    Settings:
      id: Settings
      description: Database instance settings.
      type: object
      properties:
        settingsVersion:
          description: >-
            The version of instance settings. This is a required field for
            update method to make sure concurrent updates are handled properly.
            During update, use the most recent settingsVersion value for this
            instance and do not try to update this value.
          type: string
          format: int64
        authorizedGaeApplications:
          description: >-
            The App Engine app IDs that can access this instance. (Deprecated)
            Applied to First Generation instances only.
          deprecated: true
          type: array
          items:
            type: string
        tier:
          description: >-
            The tier (or machine type) for this instance, for example
            `db-custom-1-3840`. WARNING: Changing this restarts the instance.
          type: string
        kind:
          description: This is always `sql#settings`.
          type: string
        userLabels:
          description: >-
            User-provided labels, represented as a dictionary where each label
            is a single key value pair.
          type: object
          additionalProperties:
            type: string
        availabilityType:
          description: >-
            Availability type. Potential values: * `ZONAL`: The instance serves
            data from only one zone. Outages in that zone affect data
            accessibility. * `REGIONAL`: The instance can serve data from more
            than one zone in a region (it is highly available)./ For more
            information, see [Overview of the High Availability
            Configuration](https://cloud.google.com/sql/docs/mysql/high-availability).
          type: string
          enumDescriptions:
            - This is an unknown Availability type.
            - Zonal available instance.
            - Regional available instance.
          enum:
            - SQL_AVAILABILITY_TYPE_UNSPECIFIED
            - ZONAL
            - REGIONAL
        pricingPlan:
          description: >-
            The pricing plan for this instance. This can be either `PER_USE` or
            `PACKAGE`. Only `PER_USE` is supported for Second Generation
            instances.
          type: string
          enumDescriptions:
            - This is an unknown pricing plan for this instance.
            - The instance is billed at a monthly flat rate.
            - The instance is billed per usage.
          enum:
            - SQL_PRICING_PLAN_UNSPECIFIED
            - PACKAGE
            - PER_USE
        replicationType:
          description: >-
            The type of replication this instance uses. This can be either
            `ASYNCHRONOUS` or `SYNCHRONOUS`. (Deprecated) This property was only
            applicable to First Generation instances.
          deprecated: true
          type: string
          enumDescriptions:
            - This is an unknown replication type for a Cloud SQL instance.
            - >-
              The synchronous replication mode for First Generation instances.
              It is the default value.
            - >-
              The asynchronous replication mode for First Generation instances.
              It provides a slight performance gain, but if an outage occurs
              while this option is set to asynchronous, you can lose up to a few
              seconds of updates to your data.
          enum:
            - SQL_REPLICATION_TYPE_UNSPECIFIED
            - SYNCHRONOUS
            - ASYNCHRONOUS
        storageAutoResizeLimit:
          description: >-
            The maximum size to which storage capacity can be automatically
            increased. The default value is 0, which specifies that there is no
            limit.
          type: string
          format: int64
        activationPolicy:
          description: >-
            The activation policy specifies when the instance is activated; it
            is applicable only when the instance state is RUNNABLE. Valid
            values: * `ALWAYS`: The instance is on, and remains so even in the
            absence of connection requests. * `NEVER`: The instance is off; it
            is not activated, even if a connection request arrives.
          type: string
          enumDescriptions:
            - Unknown activation plan.
            - The instance is always up and running.
            - The instance never starts.
            - The instance starts upon receiving requests.
          enumDeprecated:
            - false
            - false
            - false
            - true
          enum:
            - SQL_ACTIVATION_POLICY_UNSPECIFIED
            - ALWAYS
            - NEVER
            - ON_DEMAND
        ipConfiguration:
          description: >-
            The settings for IP Management. This allows to enable or disable the
            instance IP and manage which external networks can connect to the
            instance. The IPv4 address cannot be disabled for Second Generation
            instances.
          $ref: '#/components/schemas/IpConfiguration'
        storageAutoResize:
          description: >-
            Configuration to increase storage size automatically. The default
            value is true.
          type: boolean
        locationPreference:
          description: >-
            The location preference settings. This allows the instance to be
            located as near as possible to either an App Engine app or Compute
            Engine zone for better performance. App Engine co-location was only
            applicable to First Generation instances.
          $ref: '#/components/schemas/LocationPreference'
        databaseFlags:
          description: The database flags passed to the instance at startup.
          type: array
          items:
            $ref: '#/components/schemas/DatabaseFlags'
        dataDiskType:
          description: >-
            The type of data disk: `PD_SSD` (default) or `PD_HDD`. Not used for
            First Generation instances.
          type: string
          enumDescriptions:
            - This is an unknown data disk type.
            - An SSD data disk.
            - An HDD data disk.
            - >-
              This field is deprecated and will be removed from a future version
              of the API.
            - A Hyperdisk Balanced data disk.
          enumDeprecated:
            - false
            - false
            - false
            - true
            - false
          enum:
            - SQL_DATA_DISK_TYPE_UNSPECIFIED
            - PD_SSD
            - PD_HDD
            - OBSOLETE_LOCAL_SSD
            - HYPERDISK_BALANCED
        maintenanceWindow:
          description: >-
            The maintenance window for this instance. This specifies when the
            instance can be restarted for maintenance purposes.
          $ref: '#/components/schemas/MaintenanceWindow'
        backupConfiguration:
          description: The daily backup configuration for the instance.
          $ref: '#/components/schemas/BackupConfiguration'
        databaseReplicationEnabled:
          description: >-
            Configuration specific to read replica instances. Indicates whether
            replication is enabled or not. WARNING: Changing this restarts the
            instance.
          type: boolean
        crashSafeReplicationEnabled:
          description: >-
            Configuration specific to read replica instances. Indicates whether
            database flags for crash-safe replication are enabled. This property
            was only applicable to First Generation instances.
          deprecated: true
          type: boolean
        dataDiskSizeGb:
          description: The size of data disk, in GB. The data disk size minimum is 10GB.
          type: string
          format: int64
        activeDirectoryConfig:
          description: >-
            Active Directory configuration, relevant only for Cloud SQL for SQL
            Server.
          $ref: '#/components/schemas/SqlActiveDirectoryConfig'
        collation:
          description: The name of server Instance collation.
          type: string
        denyMaintenancePeriods:
          description: Deny maintenance periods
          type: array
          items:
            $ref: '#/components/schemas/DenyMaintenancePeriod'
        insightsConfig:
          description: Insights configuration, for now relevant only for Postgres.
          $ref: '#/components/schemas/InsightsConfig'
        passwordValidationPolicy:
          description: The local user password validation policy of the instance.
          $ref: '#/components/schemas/PasswordValidationPolicy'
        sqlServerAuditConfig:
          description: SQL Server specific audit configuration.
          $ref: '#/components/schemas/SqlServerAuditConfig'
        edition:
          description: Optional. The edition of the instance.
          type: string
          enumDescriptions:
            - The instance did not specify the edition.
            - The instance is an enterprise edition.
            - The instance is an Enterprise Plus edition.
          enum:
            - EDITION_UNSPECIFIED
            - ENTERPRISE
            - ENTERPRISE_PLUS
        connectorEnforcement:
          description: >-
            Specifies if connections must use Cloud SQL connectors. Option
            values include the following: `NOT_REQUIRED` (Cloud SQL instances
            can be connected without Cloud SQL Connectors) and `REQUIRED` (Only
            allow connections that use Cloud SQL Connectors). Note that using
            REQUIRED disables all existing authorized networks. If this field is
            not specified when creating a new instance, NOT_REQUIRED is used. If
            this field is not specified when patching or updating an existing
            instance, it is left unchanged in the instance.
          type: string
          enumDescriptions:
            - The requirement for Cloud SQL connectors is unknown.
            - Do not require Cloud SQL connectors.
            - >-
              Require all connections to use Cloud SQL connectors, including the
              Cloud SQL Auth Proxy and Cloud SQL Java, Python, and Go
              connectors. Note: This disables all existing authorized networks.
          enum:
            - CONNECTOR_ENFORCEMENT_UNSPECIFIED
            - NOT_REQUIRED
            - REQUIRED
        deletionProtectionEnabled:
          description: Configuration to protect against accidental instance deletion.
          type: boolean
        timeZone:
          description: Server timezone, relevant only for Cloud SQL for SQL Server.
          type: string
        advancedMachineFeatures:
          description: >-
            Specifies advanced machine configuration for the instances relevant
            only for SQL Server.
          $ref: '#/components/schemas/AdvancedMachineFeatures'
        dataCacheConfig:
          description: Configuration for data cache.
          $ref: '#/components/schemas/DataCacheConfig'
        replicationLagMaxSeconds:
          description: >-
            Optional. Configuration value for recreation of replica after
            certain replication lag
          type: integer
          format: int32
        enableGoogleMlIntegration:
          description: >-
            Optional. When this parameter is set to true, Cloud SQL instances
            can connect to Vertex AI to pass requests for real-time predictions
            and insights to the AI. The default value is false. This applies
            only to Cloud SQL for MySQL and Cloud SQL for PostgreSQL instances.
          type: boolean
        enableDataplexIntegration:
          description: >-
            Optional. By default, Cloud SQL instances have schema extraction
            disabled for Dataplex. When this parameter is set to true, schema
            extraction for Dataplex on Cloud SQL instances is activated.
          type: boolean
        retainBackupsOnDelete:
          description: >-
            Optional. When this parameter is set to true, Cloud SQL retains
            backups of the instance even after the instance is deleted. The
            ON_DEMAND backup will be retained until customer deletes the backup
            or the project. The AUTOMATED backup will be retained based on the
            backups retention setting.
          type: boolean
        dataDiskProvisionedIops:
          description: >-
            Optional. Provisioned number of I/O operations per second for the
            data disk. This field is only used for hyperdisk-balanced disk
            types.
          type: string
          format: int64
        dataDiskProvisionedThroughput:
          description: >-
            Optional. Provisioned throughput measured in MiB per second for the
            data disk. This field is only used for hyperdisk-balanced disk
            types.
          type: string
          format: int64
        connectionPoolConfig:
          description: >-
            Optional. The managed connection pooling configuration for the
            instance.
          $ref: '#/components/schemas/ConnectionPoolConfig'
        finalBackupConfig:
          description: Optional. The final backup configuration for the instance.
          $ref: '#/components/schemas/FinalBackupConfig'
    IpConfiguration:
      id: IpConfiguration
      description: IP Management configuration.
      type: object
      properties:
        ipv4Enabled:
          description: Whether the instance is assigned a public IP address or not.
          type: boolean
        privateNetwork:
          description: >-
            The resource link for the VPC network from which the Cloud SQL
            instance is accessible for private IP. For example,
            `/projects/myProject/global/networks/default`. This setting can be
            updated, but it cannot be removed after it is set.
          type: string
        requireSsl:
          description: >-
            Use `ssl_mode` instead. Whether SSL/TLS connections over IP are
            enforced. If set to false, then allow both non-SSL/non-TLS and
            SSL/TLS connections. For SSL/TLS connections, the client certificate
            won't be verified. If set to true, then only allow connections
            encrypted with SSL/TLS and with valid client certificates. If you
            want to enforce SSL/TLS without enforcing the requirement for valid
            client certificates, then use the `ssl_mode` flag instead of the
            `require_ssl` flag.
          type: boolean
        authorizedNetworks:
          description: >-
            The list of external networks that are allowed to connect to the
            instance using the IP. In 'CIDR' notation, also known as 'slash'
            notation (for example: `157.197.200.0/24`).
          type: array
          items:
            $ref: '#/components/schemas/AclEntry'
        allocatedIpRange:
          description: >-
            The name of the allocated ip range for the private ip Cloud SQL
            instance. For example: "google-managed-services-default". If set,
            the instance ip will be created in the allocated range. The range
            name must comply with [RFC
            1035](https://tools.ietf.org/html/rfc1035). Specifically, the name
            must be 1-63 characters long and match the regular expression
            `[a-z]([-a-z0-9]*[a-z0-9])?.`
          type: string
        enablePrivatePathForGoogleCloudServices:
          description: >-
            Controls connectivity to private IP instances from Google services,
            such as BigQuery.
          type: boolean
        sslMode:
          description: >-
            Specify how SSL/TLS is enforced in database connections. If you must
            use the `require_ssl` flag for backward compatibility, then only the
            following value pairs are valid: For PostgreSQL and MySQL: *
            `ssl_mode=ALLOW_UNENCRYPTED_AND_ENCRYPTED` and `require_ssl=false` *
            `ssl_mode=ENCRYPTED_ONLY` and `require_ssl=false` *
            `ssl_mode=TRUSTED_CLIENT_CERTIFICATE_REQUIRED` and
            `require_ssl=true` For SQL Server: *
            `ssl_mode=ALLOW_UNENCRYPTED_AND_ENCRYPTED` and `require_ssl=false` *
            `ssl_mode=ENCRYPTED_ONLY` and `require_ssl=true` The value of
            `ssl_mode` has priority over the value of `require_ssl`. For
            example, for the pair `ssl_mode=ENCRYPTED_ONLY` and
            `require_ssl=false`, `ssl_mode=ENCRYPTED_ONLY` means accept only SSL
            connections, while `require_ssl=false` means accept both non-SSL and
            SSL connections. In this case, MySQL and PostgreSQL databases
            respect `ssl_mode` and accepts only SSL connections.
          type: string
          enumDescriptions:
            - The SSL mode is unknown.
            - >-
              Allow non-SSL/non-TLS and SSL/TLS connections. For SSL connections
              to MySQL and PostgreSQL, the client certificate isn't verified.
              When this value is used, the legacy `require_ssl` flag must be
              false or cleared to avoid a conflict between the values of the two
              flags.
            - >-
              Only allow connections encrypted with SSL/TLS. For SSL connections
              to MySQL and PostgreSQL, the client certificate isn't verified.
              When this value is used, the legacy `require_ssl` flag must be
              false or cleared to avoid a conflict between the values of the two
              flags.
            - >-
              Only allow connections encrypted with SSL/TLS and with valid
              client certificates. When this value is used, the legacy
              `require_ssl` flag must be true or cleared to avoid the conflict
              between values of two flags. PostgreSQL clients or users that
              connect using IAM database authentication must use either the
              [Cloud SQL Auth
              Proxy](https://cloud.google.com/sql/docs/postgres/connect-auth-proxy)
              or [Cloud SQL
              Connectors](https://cloud.google.com/sql/docs/postgres/connect-connectors)
              to enforce client identity verification. Only applicable to MySQL
              and PostgreSQL. Not applicable to SQL Server.
          enum:
            - SSL_MODE_UNSPECIFIED
            - ALLOW_UNENCRYPTED_AND_ENCRYPTED
            - ENCRYPTED_ONLY
            - TRUSTED_CLIENT_CERTIFICATE_REQUIRED
        pscConfig:
          description: PSC settings for this instance.
          $ref: '#/components/schemas/PscConfig'
        serverCaMode:
          description: Specify what type of CA is used for the server certificate.
          type: string
          enumDescriptions:
            - >-
              CA mode is unspecified. It is effectively the same as
              `GOOGLE_MANAGED_INTERNAL_CA`.
            - Google-managed self-signed internal CA.
            - >-
              Google-managed regional CA part of root CA hierarchy hosted on
              Google Cloud's Certificate Authority Service (CAS).
            - >-
              Customer-managed CA hosted on Google Cloud's Certificate Authority
              Service (CAS).
          enum:
            - CA_MODE_UNSPECIFIED
            - GOOGLE_MANAGED_INTERNAL_CA
            - GOOGLE_MANAGED_CAS_CA
            - CUSTOMER_MANAGED_CAS_CA
        customSubjectAlternativeNames:
          description: >-
            Optional. Custom Subject Alternative Name(SAN)s for a Cloud SQL
            instance.
          type: array
          items:
            type: string
        serverCaPool:
          description: >-
            Optional. The resource name of the server CA pool for an instance
            with `CUSTOMER_MANAGED_CAS_CA` as the `server_ca_mode`. Format:
            projects/{PROJECT}/locations/{REGION}/caPools/{CA_POOL_ID}
          type: string
    AclEntry:
      id: AclEntry
      description: An entry for an Access Control list.
      type: object
      properties:
        value:
          description: The allowlisted value for the access control list.
          type: string
        expirationTime:
          description: >-
            The time when this access control entry expires in [RFC
            3339](https://tools.ietf.org/html/rfc3339) format, for example
            `2012-11-15T16:19:00.094Z`.
          type: string
          format: google-datetime
        name:
          description: Optional. A label to identify this entry.
          type: string
        kind:
          description: This is always `sql#aclEntry`.
          type: string
    PscConfig:
      id: PscConfig
      description: PSC settings for a Cloud SQL instance.
      type: object
      properties:
        pscEnabled:
          description: Whether PSC connectivity is enabled for this instance.
          type: boolean
        allowedConsumerProjects:
          description: >-
            Optional. The list of consumer projects that are allow-listed for
            PSC connections to this instance. This instance can be connected to
            with PSC from any network in these projects. Each consumer project
            in this list may be represented by a project number (numeric) or by
            a project id (alphanumeric).
          type: array
          items:
            type: string
        pscAutoConnections:
          description: >-
            Optional. The list of settings for requested Private Service Connect
            consumer endpoints that can be used to connect to this Cloud SQL
            instance.
          type: array
          items:
            $ref: '#/components/schemas/PscAutoConnectionConfig'
        networkAttachmentUri:
          description: >-
            Optional. The network attachment of the consumer network that the
            Private Service Connect enabled Cloud SQL instance is authorized to
            connect via PSC interface. format:
            projects/PROJECT/regions/REGION/networkAttachments/ID
          type: string
    PscAutoConnectionConfig:
      id: PscAutoConnectionConfig
      description: >-
        Settings for an automatically-setup Private Service Connect consumer
        endpoint that is used to connect to a Cloud SQL instance.
      type: object
      properties:
        consumerProject:
          description: >-
            Optional. This is the project ID of consumer service project of this
            consumer endpoint. Optional. This is only applicable if
            consumer_network is a shared vpc network.
          type: string
        consumerNetwork:
          description: >-
            Optional. The consumer network of this consumer endpoint. This must
            be a resource path that includes both the host project and the
            network name. For example,
            `projects/project1/global/networks/network1`. The consumer host
            project of this network might be different from the consumer service
            project.
          type: string
        ipAddress:
          description: The IP address of the consumer endpoint.
          type: string
        status:
          description: The connection status of the consumer endpoint.
          type: string
        consumerNetworkStatus:
          description: The connection policy status of the consumer network.
          type: string
    LocationPreference:
      id: LocationPreference
      description: >-
        Preferred location. This specifies where a Cloud SQL instance is
        located. Note that if the preferred location is not available, the
        instance will be located as close as possible within the region. Only
        one location may be specified.
      type: object
      properties:
        followGaeApplication:
          description: >-
            The App Engine application to follow, it must be in the same region
            as the Cloud SQL instance. WARNING: Changing this might restart the
            instance.
          deprecated: true
          type: string
        zone:
          description: >-
            The preferred Compute Engine zone (for example: us-central1-a,
            us-central1-b, etc.). WARNING: Changing this might restart the
            instance.
          type: string
        secondaryZone:
          description: >-
            The preferred Compute Engine zone for the secondary/failover (for
            example: us-central1-a, us-central1-b, etc.). To disable this field,
            set it to 'no_secondary_zone'.
          type: string
        kind:
          description: This is always `sql#locationPreference`.
          type: string
    DatabaseFlags:
      id: DatabaseFlags
      description: Database flags for Cloud SQL instances.
      type: object
      properties:
        name:
          description: >-
            The name of the flag. These flags are passed at instance startup, so
            include both server options and system variables. Flags are
            specified with underscores, not hyphens. For more information, see
            [Configuring Database
            Flags](https://cloud.google.com/sql/docs/mysql/flags) in the Cloud
            SQL documentation.
          type: string
        value:
          description: >-
            The value of the flag. Boolean flags are set to `on` for true and
            `off` for false. This field must be omitted if the flag doesn't take
            a value.
          type: string
    MaintenanceWindow:
      id: MaintenanceWindow
      description: >-
        Maintenance window. This specifies when a Cloud SQL instance is
        restarted for system maintenance purposes.
      type: object
      properties:
        hour:
          description: Hour of day - 0 to 23. Specify in the UTC time zone.
          type: integer
          format: int32
        day:
          description: >-
            Day of week - `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`,
            `FRIDAY`, `SATURDAY`, or `SUNDAY`. Specify in the UTC time zone.
            Returned in output as an integer, 1 to 7, where `1` equals Monday.
          type: integer
          format: int32
        updateTrack:
          description: >-
            Maintenance timing settings: `canary`, `stable`, or `week5`. For
            more information, see [About maintenance on Cloud SQL
            instances](https://cloud.google.com/sql/docs/mysql/maintenance).
          type: string
          enumDescriptions:
            - This is an unknown maintenance timing preference.
            - >-
              For an instance with a scheduled maintenance window, this
              maintenance timing indicates that the maintenance update is
              scheduled 7 to 14 days after the notification is sent out. Also
              referred to as `Week 1` (Console) and `preview` (gcloud CLI).
            - >-
              For an instance with a scheduled maintenance window, this
              maintenance timing indicates that the maintenance update is
              scheduled 15 to 21 days after the notification is sent out. Also
              referred to as `Week 2` (Console) and `production` (gcloud CLI).
            - >-
              For instance with a scheduled maintenance window, this maintenance
              timing indicates that the maintenance update is scheduled 35 to 42
              days after the notification is sent out.
          enum:
            - SQL_UPDATE_TRACK_UNSPECIFIED
            - canary
            - stable
            - week5
        kind:
          description: This is always `sql#maintenanceWindow`.
          type: string
    BackupConfiguration:
      id: BackupConfiguration
      description: Database instance backup configuration.
      type: object
      properties:
        startTime:
          description: >-
            Start time for the daily backup configuration in UTC timezone in the
            24 hour format - `HH:MM`.
          type: string
        enabled:
          description: Whether this configuration is enabled.
          type: boolean
        kind:
          description: This is always `sql#backupConfiguration`.
          type: string
        binaryLogEnabled:
          description: >-
            (MySQL only) Whether binary log is enabled. If backup configuration
            is disabled, binarylog must be disabled as well.
          type: boolean
        replicationLogArchivingEnabled:
          description: Reserved for future use.
          type: boolean
        location:
          description: Location of the backup
          type: string
        pointInTimeRecoveryEnabled:
          description: Whether point in time recovery is enabled.
          type: boolean
        backupRetentionSettings:
          description: Backup retention settings.
          $ref: '#/components/schemas/BackupRetentionSettings'
        transactionLogRetentionDays:
          description: >-
            The number of days of transaction logs we retain for point in time
            restore, from 1-7.
          type: integer
          format: int32
        transactionalLogStorageState:
          description: >-
            Output only. This value contains the storage location of
            transactional logs used to perform point-in-time recovery (PITR) for
            the database.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified.
            - >-
              The transaction logs used for PITR for the instance are stored on
              a data disk.
            - >-
              The transaction logs used for PITR for the instance are switching
              from being stored on a data disk to being stored in Cloud Storage.
              Only applicable to MySQL.
            - >-
              The transaction logs used for PITR for the instance are now stored
              in Cloud Storage. Previously, they were stored on a data disk.
              Only applicable to MySQL.
            - >-
              The transaction logs used for PITR for the instance are stored in
              Cloud Storage. Only applicable to MySQL and PostgreSQL.
          enum:
            - TRANSACTIONAL_LOG_STORAGE_STATE_UNSPECIFIED
            - DISK
            - SWITCHING_TO_CLOUD_STORAGE
            - SWITCHED_TO_CLOUD_STORAGE
            - CLOUD_STORAGE
        backupTier:
          description: Output only. Backup tier that manages the backups for the instance.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified.
            - Instance is managed by Cloud SQL.
            - 'Deprecated: ADVANCED is deprecated. Please use ENHANCED instead.'
            - Instance is managed by Google Cloud Backup and DR Service.
          enumDeprecated:
            - false
            - false
            - true
            - false
          enum:
            - BACKUP_TIER_UNSPECIFIED
            - STANDARD
            - ADVANCED
            - ENHANCED
    BackupRetentionSettings:
      id: BackupRetentionSettings
      description: >-
        We currently only support backup retention by specifying the number of
        backups we will retain.
      type: object
      properties:
        retentionUnit:
          description: The unit that 'retained_backups' represents.
          type: string
          enumDescriptions:
            - Backup retention unit is unspecified, will be treated as COUNT.
            - >-
              Retention will be by count, eg. "retain the most recent 7
              backups".
          enum:
            - RETENTION_UNIT_UNSPECIFIED
            - COUNT
        retainedBackups:
          description: >-
            Depending on the value of retention_unit, this is used to determine
            if a backup needs to be deleted. If retention_unit is 'COUNT', we
            will retain this many backups.
          type: integer
          format: int32
    SqlActiveDirectoryConfig:
      id: SqlActiveDirectoryConfig
      description: >-
        Active Directory configuration, relevant only for Cloud SQL for SQL
        Server.
      type: object
      properties:
        kind:
          description: This is always sql#activeDirectoryConfig.
          type: string
        domain:
          description: The name of the domain (e.g., mydomain.com).
          type: string
        mode:
          description: Optional. The mode of the Active Directory configuration.
          type: string
          enumDescriptions:
            - >-
              Unspecified mode. Will default to MANAGED_ACTIVE_DIRECTORY if the
              mode is not specified to maintain backward compatibility.
            - Managed Active Directory mode.
            - Self-managed Active Directory mode.
          enum:
            - ACTIVE_DIRECTORY_MODE_UNSPECIFIED
            - MANAGED_ACTIVE_DIRECTORY
            - SELF_MANAGED_ACTIVE_DIRECTORY
        dnsServers:
          description: >-
            Optional. Domain controller IPv4 addresses used to bootstrap Active
            Directory.
          type: array
          items:
            type: string
        adminCredentialSecretName:
          description: >-
            Optional. The secret manager key storing the administrator
            credential. (e.g., projects/{project}/secrets/{secret}).
          type: string
        organizationalUnit:
          description: >-
            Optional. The organizational unit distinguished name. This is the
            full hierarchical path to the organizational unit.
          type: string
    DenyMaintenancePeriod:
      id: DenyMaintenancePeriod
      description: >-
        Deny maintenance Periods. This specifies a date range during when all
        CSA rollout will be denied.
      type: object
      properties:
        startDate:
          description: >-
            "deny maintenance period" start date. If the year of the start date
            is empty, the year of the end date also must be empty. In this case,
            it means the deny maintenance period recurs every year. The date is
            in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01
          type: string
        endDate:
          description: >-
            "deny maintenance period" end date. If the year of the end date is
            empty, the year of the start date also must be empty. In this case,
            it means the no maintenance interval recurs every year. The date is
            in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01
          type: string
        time:
          description: >-
            Time in UTC when the "deny maintenance period" starts on start_date
            and ends on end_date. The time is in format: HH:mm:SS, i.e.,
            00:00:00
          type: string
    InsightsConfig:
      id: InsightsConfig
      description: >-
        Insights configuration. This specifies when Cloud SQL Insights feature
        is enabled and optional configuration.
      type: object
      properties:
        queryInsightsEnabled:
          description: Whether Query Insights feature is enabled.
          type: boolean
        recordClientAddress:
          description: Whether Query Insights will record client address when enabled.
          type: boolean
        recordApplicationTags:
          description: >-
            Whether Query Insights will record application tags from query when
            enabled.
          type: boolean
        queryStringLength:
          description: >-
            Maximum query length stored in bytes. Default value: 1024 bytes.
            Range: 256-4500 bytes. Query lengths greater than this field value
            will be truncated to this value. When unset, query length will be
            the default value. Changing query length will restart the database.
          type: integer
          format: int32
        queryPlansPerMinute:
          description: >-
            Number of query execution plans captured by Insights per minute for
            all queries combined. Default is 5.
          type: integer
          format: int32
    PasswordValidationPolicy:
      id: PasswordValidationPolicy
      description: Database instance local user password validation policy
      type: object
      properties:
        minLength:
          description: Minimum number of characters allowed.
          type: integer
          format: int32
        complexity:
          description: The complexity of the password.
          type: string
          enumDescriptions:
            - Complexity check is not specified.
            - >-
              A combination of lowercase, uppercase, numeric, and
              non-alphanumeric characters.
          enum:
            - COMPLEXITY_UNSPECIFIED
            - COMPLEXITY_DEFAULT
        reuseInterval:
          description: Number of previous passwords that cannot be reused.
          type: integer
          format: int32
        disallowUsernameSubstring:
          description: Disallow username as a part of the password.
          type: boolean
        passwordChangeInterval:
          description: >-
            Minimum interval after which the password can be changed. This flag
            is only supported for PostgreSQL.
          type: string
          format: google-duration
        enablePasswordPolicy:
          description: Whether the password policy is enabled or not.
          type: boolean
        disallowCompromisedCredentials:
          description: >-
            This field is deprecated and will be removed in a future version of
            the API.
          deprecated: true
          type: boolean
    SqlServerAuditConfig:
      id: SqlServerAuditConfig
      description: SQL Server specific audit configuration.
      type: object
      properties:
        kind:
          description: This is always sql#sqlServerAuditConfig
          type: string
        bucket:
          description: The name of the destination bucket (e.g., gs://mybucket).
          type: string
        retentionInterval:
          description: How long to keep generated audit files.
          type: string
          format: google-duration
        uploadInterval:
          description: How often to upload generated audit files.
          type: string
          format: google-duration
    AdvancedMachineFeatures:
      id: AdvancedMachineFeatures
      description: Specifies options for controlling advanced machine features.
      type: object
      properties:
        threadsPerCore:
          description: The number of threads per physical core.
          type: integer
          format: int32
    DataCacheConfig:
      id: DataCacheConfig
      description: Data cache configurations.
      type: object
      properties:
        dataCacheEnabled:
          description: Whether data cache is enabled for the instance.
          type: boolean
    ConnectionPoolConfig:
      id: ConnectionPoolConfig
      description: The managed connection pooling configuration.
      type: object
      properties:
        connectionPoolingEnabled:
          description: Whether managed connection pooling is enabled.
          type: boolean
        flags:
          description: Optional. List of connection pool configuration flags.
          type: array
          items:
            $ref: '#/components/schemas/ConnectionPoolFlags'
        poolerCount:
          description: Output only. Number of connection poolers.
          readOnly: true
          type: integer
          format: int32
    ConnectionPoolFlags:
      id: ConnectionPoolFlags
      description: >-
        Connection pool flags for Cloud SQL instances managed connection pool
        configuration.
      type: object
      properties:
        name:
          description: Required. The name of the flag.
          type: string
        value:
          description: >-
            Required. The value of the flag. Boolean flags are set to `on` for
            true and `off` for false. This field must be omitted if the flag
            doesn't take a value.
          type: string
    FinalBackupConfig:
      id: FinalBackupConfig
      description: Config used to determine the final backup settings for the instance.
      type: object
      properties:
        enabled:
          description: Whether the final backup is enabled for the instance.
          type: boolean
        retentionDays:
          description: >-
            The number of days to retain the final backup after the instance
            deletion. The final backup will be purged at
            (time_of_instance_deletion + retention_days).
          type: integer
          format: int32
    IpMapping:
      id: IpMapping
      description: Database instance IP mapping
      type: object
      properties:
        type:
          description: >-
            The type of this IP address. A `PRIMARY` address is a public address
            that can accept incoming connections. A `PRIVATE` address is a
            private address that can accept incoming connections. An `OUTGOING`
            address is the source address of connections originating from the
            instance, if supported.
          type: string
          enumDescriptions:
            - This is an unknown IP address type.
            - >-
              IP address the customer is supposed to connect to. Usually this is
              the load balancer's IP address
            - >-
              Source IP address of the connection a read replica establishes to
              its external primary instance. This IP address can be allowlisted
              by the customer in case it has a firewall that filters incoming
              connection to its on premises primary instance.
            - Private IP used when using private IPs and network peering.
            - >-
              V1 IP of a migrated instance. We want the user to decommission
              this IP as soon as the migration is complete. Note: V1 instances
              with V1 ip addresses will be counted as PRIMARY.
          enum:
            - SQL_IP_ADDRESS_TYPE_UNSPECIFIED
            - PRIMARY
            - OUTGOING
            - PRIVATE
            - MIGRATED_1ST_GEN
        ipAddress:
          description: The IP address assigned.
          type: string
        timeToRetire:
          description: >-
            The due time for this IP to be retired in [RFC
            3339](https://tools.ietf.org/html/rfc3339) format, for example
            `2012-11-15T16:19:00.094Z`. This field is only available when the IP
            is scheduled to be retired.
          type: string
          format: google-datetime
    SslCert:
      id: SslCert
      description: SslCerts Resource
      type: object
      properties:
        kind:
          description: This is always `sql#sslCert`.
          type: string
        certSerialNumber:
          description: Serial number, as extracted from the certificate.
          type: string
        cert:
          description: PEM representation.
          type: string
        createTime:
          description: >-
            The time when the certificate was created in [RFC
            3339](https://tools.ietf.org/html/rfc3339) format, for example
            `2012-11-15T16:19:00.094Z`
          type: string
          format: google-datetime
        commonName:
          description: User supplied name. Constrained to [a-zA-Z.-_ ]+.
          type: string
        expirationTime:
          description: >-
            The time when the certificate expires in [RFC
            3339](https://tools.ietf.org/html/rfc3339) format, for example
            `2012-11-15T16:19:00.094Z`.
          type: string
          format: google-datetime
        sha1Fingerprint:
          description: Sha1 Fingerprint.
          type: string
        instance:
          description: Name of the database instance.
          type: string
        selfLink:
          description: The URI of this resource.
          type: string
    OnPremisesConfiguration:
      id: OnPremisesConfiguration
      description: On-premises instance configuration.
      type: object
      properties:
        hostPort:
          description: The host and port of the on-premises instance in host:port format
          type: string
        kind:
          description: This is always `sql#onPremisesConfiguration`.
          type: string
        username:
          description: The username for connecting to on-premises instance.
          type: string
        password:
          description: The password for connecting to on-premises instance.
          type: string
        caCertificate:
          description: PEM representation of the trusted CA's x509 certificate.
          type: string
        clientCertificate:
          description: PEM representation of the replica's x509 certificate.
          type: string
        clientKey:
          description: >-
            PEM representation of the replica's private key. The corresponding
            public key is encoded in the client's certificate.
          type: string
        dumpFilePath:
          description: The dump file to create the Cloud SQL replica.
          type: string
        sourceInstance:
          description: The reference to Cloud SQL instance if the source is Cloud SQL.
          $ref: '#/components/schemas/InstanceReference'
        selectedObjects:
          description: >-
            Optional. A list of objects that the user selects for replication
            from an external source instance.
          type: array
          items:
            $ref: '#/components/schemas/SelectedObjects'
        sslOption:
          description: >-
            Optional. SSL option for replica connection to the on-premises
            source.
          type: string
          enumDescriptions:
            - Unknown SSL option i.e. SSL option not specified by user.
            - SSL is not used for replica connection to the on-premises source.
            - SSL is required for replica connection to the on-premises source.
            - >-
              Verify CA is required for replica connection to the on-premises
              source.
          enum:
            - SSL_OPTION_UNSPECIFIED
            - DISABLE
            - REQUIRE
            - VERIFY_CA
    InstanceReference:
      id: InstanceReference
      description: Reference to another Cloud SQL instance.
      type: object
      properties:
        name:
          description: >-
            The name of the Cloud SQL instance being referenced. This does not
            include the project ID.
          type: string
        region:
          description: The region of the Cloud SQL instance being referenced.
          type: string
        project:
          description: >-
            The project ID of the Cloud SQL instance being referenced. The
            default is the same project ID as the instance references it.
          type: string
    SelectedObjects:
      id: SelectedObjects
      description: >-
        A list of objects that the user selects for replication from an external
        source instance.
      type: object
      properties:
        database:
          description: Required. The name of the database to migrate.
          type: string
    ReplicaConfiguration:
      id: ReplicaConfiguration
      description: Read-replica configuration for connecting to the primary instance.
      type: object
      properties:
        kind:
          description: This is always `sql#replicaConfiguration`.
          type: string
        mysqlReplicaConfiguration:
          description: >-
            MySQL specific configuration when replicating from a MySQL
            on-premises primary instance. Replication configuration information
            such as the username, password, certificates, and keys are not
            stored in the instance metadata. The configuration information is
            used only to set up the replication connection and is stored by
            MySQL in a file named `master.info` in the data directory.
          $ref: '#/components/schemas/MySqlReplicaConfiguration'
        failoverTarget:
          description: >-
            Specifies if the replica is the failover target. If the field is set
            to `true`, the replica will be designated as a failover replica. In
            case the primary instance fails, the replica instance will be
            promoted as the new primary instance. Only one replica can be
            specified as failover target, and the replica has to be in different
            zone with the primary instance.
          type: boolean
        cascadableReplica:
          description: >-
            Optional. Specifies if a SQL Server replica is a cascadable replica.
            A cascadable replica is a SQL Server cross region replica that
            supports replica(s) under it.
          type: boolean
    MySqlReplicaConfiguration:
      id: MySqlReplicaConfiguration
      description: Read-replica configuration specific to MySQL databases.
      type: object
      properties:
        dumpFilePath:
          description: >-
            Path to a SQL dump file in Google Cloud Storage from which the
            replica instance is to be created. The URI is in the form
            gs://bucketName/fileName. Compressed gzip files (.gz) are also
            supported. Dumps have the binlog co-ordinates from which replication
            begins. This can be accomplished by setting --master-data to 1 when
            using mysqldump.
          type: string
        username:
          description: The username for the replication connection.
          type: string
        password:
          description: The password for the replication connection.
          type: string
        connectRetryInterval:
          description: >-
            Seconds to wait between connect retries. MySQL's default is 60
            seconds.
          type: integer
          format: int32
        masterHeartbeatPeriod:
          description: Interval in milliseconds between replication heartbeats.
          type: string
          format: int64
        caCertificate:
          description: PEM representation of the trusted CA's x509 certificate.
          type: string
        clientCertificate:
          description: PEM representation of the replica's x509 certificate.
          type: string
        clientKey:
          description: >-
            PEM representation of the replica's private key. The corresponding
            public key is encoded in the client's certificate.
          type: string
        sslCipher:
          description: A list of permissible ciphers to use for SSL encryption.
          type: string
        verifyServerCertificate:
          description: >-
            Whether or not to check the primary instance's Common Name value in
            the certificate that it sends during the SSL handshake.
          type: boolean
        kind:
          description: This is always `sql#mysqlReplicaConfiguration`.
          type: string
    DiskEncryptionConfiguration:
      id: DiskEncryptionConfiguration
      description: Disk encryption configuration for an instance.
      type: object
      properties:
        kmsKeyName:
          description: Resource name of KMS key for disk encryption
          type: string
        kind:
          description: This is always `sql#diskEncryptionConfiguration`.
          type: string
    DiskEncryptionStatus:
      id: DiskEncryptionStatus
      description: Disk encryption status for an instance.
      type: object
      properties:
        kmsKeyVersionName:
          description: KMS key version used to encrypt the Cloud SQL instance resource
          type: string
        kind:
          description: This is always `sql#diskEncryptionStatus`.
          type: string
    SqlScheduledMaintenance:
      id: SqlScheduledMaintenance
      description: Any scheduled maintenance for this instance.
      type: object
      properties:
        startTime:
          description: >-
            The start time of any upcoming scheduled maintenance for this
            instance.
          type: string
          format: google-datetime
        canDefer:
          deprecated: true
          type: boolean
        canReschedule:
          description: If the scheduled maintenance can be rescheduled.
          type: boolean
        scheduleDeadlineTime:
          description: Maintenance cannot be rescheduled to start beyond this deadline.
          type: string
          format: google-datetime
    SqlOutOfDiskReport:
      id: SqlOutOfDiskReport
      description: >-
        This message wraps up the information written by out-of-disk detection
        job.
      type: object
      properties:
        sqlOutOfDiskState:
          description: >-
            This field represents the state generated by the proactive database
            wellness job for OutOfDisk issues. * Writers: * the proactive
            database wellness job for OOD. * Readers: * the proactive database
            wellness job
          type: string
          enumDescriptions:
            - Unspecified state
            - The instance has plenty space on data disk
            - >-
              Data disk is almost used up. It is shutdown to prevent data
              corruption.
          enum:
            - SQL_OUT_OF_DISK_STATE_UNSPECIFIED
            - NORMAL
            - SOFT_SHUTDOWN
        sqlMinRecommendedIncreaseSizeGb:
          description: >-
            The minimum recommended increase size in GigaBytes This field is
            consumed by the frontend * Writers: * the proactive database
            wellness job for OOD. * Readers:
          type: integer
          format: int32
    AvailableDatabaseVersion:
      id: AvailableDatabaseVersion
      description: An available database version. It can be a major or a minor version.
      type: object
      properties:
        majorVersion:
          description: The version's major version name.
          type: string
        name:
          description: >-
            The database version name. For MySQL 8.0, this string provides the
            database major and minor version.
          type: string
        displayName:
          description: The database version's display name.
          type: string
    ReplicationCluster:
      id: ReplicationCluster
      description: >-
        A primary instance and disaster recovery (DR) replica pair. A DR replica
        is a cross-region replica that you designate for failover in the event
        that the primary instance experiences regional failure. Applicable to
        MySQL and PostgreSQL.
      type: object
      properties:
        psaWriteEndpoint:
          description: >-
            Output only. If set, this field indicates this instance has a
            private service access (PSA) DNS endpoint that is pointing to the
            primary instance of the cluster. If this instance is the primary,
            then the DNS endpoint points to this instance. After a switchover or
            replica failover operation, this DNS endpoint points to the promoted
            instance. This is a read-only field, returned to the user as
            information. This field can exist even if a standalone instance
            doesn't have a DR replica yet or the DR replica is deleted.
          readOnly: true
          type: string
        failoverDrReplicaName:
          description: >-
            Optional. If the instance is a primary instance, then this field
            identifies the disaster recovery (DR) replica. A DR replica is an
            optional configuration for Enterprise Plus edition instances. If the
            instance is a read replica, then the field is not set. Set this
            field to a replica name to designate a DR replica for a primary
            instance. Remove the replica name to remove the DR replica
            designation.
          type: string
        drReplica:
          description: >-
            Output only. Read-only field that indicates whether the replica is a
            DR replica. This field is not set if the instance is a primary
            instance.
          readOnly: true
          type: boolean
    GeminiInstanceConfig:
      id: GeminiInstanceConfig
      description: Gemini instance configuration.
      type: object
      properties:
        entitled:
          description: Output only. Whether Gemini is enabled.
          readOnly: true
          type: boolean
        googleVacuumMgmtEnabled:
          description: Output only. Whether the vacuum management is enabled.
          readOnly: true
          type: boolean
        oomSessionCancelEnabled:
          description: >-
            Output only. Whether canceling the out-of-memory (OOM) session is
            enabled.
          readOnly: true
          type: boolean
        activeQueryEnabled:
          description: Output only. Whether the active query is enabled.
          readOnly: true
          type: boolean
        indexAdvisorEnabled:
          description: Output only. Whether the index advisor is enabled.
          readOnly: true
          type: boolean
        flagRecommenderEnabled:
          description: Output only. Whether the flag recommender is enabled.
          readOnly: true
          type: boolean
    PoolNodeConfig:
      id: PoolNodeConfig
      description: Details of a single read pool node of a read pool.
      type: object
      properties:
        name:
          description: >-
            Output only. The name of the read pool node, to be used for
            retrieving metrics and logs.
          readOnly: true
          type: string
        gceZone:
          description: Output only. The zone of the read pool node.
          readOnly: true
          type: string
        ipAddresses:
          description: >-
            Output only. Mappings containing IP addresses that can be used to
            connect to the read pool node.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/IpMapping'
        dnsName:
          description: Output only. The DNS name of the read pool node.
          readOnly: true
          type: string
        state:
          description: Output only. The current state of the read pool node.
          readOnly: true
          type: string
          enumDescriptions:
            - The state of the instance is unknown.
            - The instance is running, or has been stopped by owner.
            - >-
              The instance is not available, for example due to problems with
              billing.
            - The instance is being deleted.
            - The instance is being created.
            - The instance is down for maintenance.
            - >-
              The creation of the instance failed or a fatal error occurred
              during maintenance.
            - Deprecated
            - >-
              (Applicable to read pool nodes only.) The read pool node needs to
              be repaired. The database might be unavailable.
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
            - false
          enum:
            - SQL_INSTANCE_STATE_UNSPECIFIED
            - RUNNABLE
            - SUSPENDED
            - PENDING_DELETE
            - PENDING_CREATE
            - MAINTENANCE
            - FAILED
            - ONLINE_MAINTENANCE
            - REPAIRING
        dnsNames:
          description: Output only. The list of DNS names used by this read pool node.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DnsNameMapping'
    DnsNameMapping:
      id: DnsNameMapping
      description: DNS metadata.
      type: object
      properties:
        name:
          description: The DNS name.
          type: string
        connectionType:
          description: Output only. The connection type of the DNS name.
          readOnly: true
          type: string
          enumDescriptions:
            - Unknown connection type.
            - Public IP.
            - Private services access (private IP).
            - Private Service Connect.
          enum:
            - CONNECTION_TYPE_UNSPECIFIED
            - PUBLIC
            - PRIVATE_SERVICES_ACCESS
            - PRIVATE_SERVICE_CONNECT
        dnsScope:
          description: Output only. The scope that the DNS name applies to.
          readOnly: true
          type: string
          enumDescriptions:
            - Unknown DNS scope.
            - Indicates a instance-level DNS name.
          enum:
            - DNS_SCOPE_UNSPECIFIED
            - INSTANCE
    InstancesImportRequest:
      id: InstancesImportRequest
      description: Database instance import request.
      type: object
      properties:
        importContext:
          description: Contains details about the import operation.
          $ref: '#/components/schemas/ImportContext'
    InstancesListResponse:
      id: InstancesListResponse
      description: Database instances list response.
      type: object
      properties:
        kind:
          description: This is always `sql#instancesList`.
          type: string
        warnings:
          description: List of warnings that occurred while handling the request.
          type: array
          items:
            $ref: '#/components/schemas/ApiWarning'
        items:
          description: List of database instance resources.
          type: array
          items:
            $ref: '#/components/schemas/DatabaseInstance'
        nextPageToken:
          description: >-
            The continuation token, used to page through large result sets.
            Provide this value in a subsequent request to return the next page
            of results.
          type: string
    InstancesListServerCasResponse:
      id: InstancesListServerCasResponse
      description: Instances ListServerCas response.
      type: object
      properties:
        certs:
          description: List of server CA certificates for the instance.
          type: array
          items:
            $ref: '#/components/schemas/SslCert'
        activeVersion:
          type: string
        kind:
          description: This is always `sql#instancesListServerCas`.
          type: string
    InstancesListServerCertificatesResponse:
      id: InstancesListServerCertificatesResponse
      description: Instances ListServerCertificates response.
      type: object
      properties:
        caCerts:
          description: List of server CA certificates for the instance.
          type: array
          items:
            $ref: '#/components/schemas/SslCert'
        serverCerts:
          description: >-
            List of server certificates for the instance, signed by the
            corresponding CA from the `ca_certs` list.
          type: array
          items:
            $ref: '#/components/schemas/SslCert'
        activeVersion:
          description: >-
            The `sha1_fingerprint` of the active certificate from
            `server_certs`.
          type: string
        kind:
          description: This is always `sql#instancesListServerCertificates`.
          type: string
    InstancesRestoreBackupRequest:
      id: InstancesRestoreBackupRequest
      description: Database instance restore backup request.
      type: object
      properties:
        restoreBackupContext:
          description: Parameters required to perform the restore backup operation.
          $ref: '#/components/schemas/RestoreBackupContext'
        backup:
          description: >-
            The name of the backup that's used to restore a Cloud SQL instance:
            Format: projects/{project-id}/backups/{backup-uid}. Only one of
            restore_backup_context, backup, backupdr_backup can be passed to the
            input.
          type: string
        backupdrBackup:
          description: >-
            The name of the backup that's used to restore a Cloud SQL instance:
            Format:
            "projects/{project-id}/locations/{location}/backupVaults/{backupvault}/dataSources/{datasource}/backups/{backup-uid}".
            Only one of restore_backup_context, backup, backupdr_backup can be
            passed to the input.
          type: string
        restoreInstanceSettings:
          description: >-
            Optional. By using this parameter, Cloud SQL overrides any instance
            settings stored in the backup you are restoring from. You can't
            change the instance's major database version and you can only
            increase the disk size. You can use this field to restore new
            instances only. This field is not applicable for restore to existing
            instances.
          $ref: '#/components/schemas/DatabaseInstance'
        restoreInstanceClearOverridesFieldNames:
          description: >-
            Optional. This field has the same purpose as
            restore_instance_settings, changes any instance settings stored in
            the backup you are restoring from. With the difference that these
            fields are cleared in the settings.
          type: array
          items:
            type: string
    RestoreBackupContext:
      id: RestoreBackupContext
      description: >-
        Database instance restore from backup context. Backup context contains
        source instance id and project id.
      type: object
      properties:
        kind:
          description: This is always `sql#restoreBackupContext`.
          type: string
        backupRunId:
          description: The ID of the backup run to restore from.
          type: string
          format: int64
        instanceId:
          description: The ID of the instance that the backup was taken from.
          type: string
        project:
          description: The full project ID of the source instance.
          type: string
    InstancesRotateServerCaRequest:
      id: InstancesRotateServerCaRequest
      description: Rotate server CA request.
      type: object
      properties:
        rotateServerCaContext:
          description: Contains details about the rotate server CA operation.
          $ref: '#/components/schemas/RotateServerCaContext'
    RotateServerCaContext:
      id: RotateServerCaContext
      description: Instance rotate server CA context.
      type: object
      properties:
        kind:
          description: This is always `sql#rotateServerCaContext`.
          type: string
        nextVersion:
          description: >-
            The fingerprint of the next version to be rotated to. If left
            unspecified, will be rotated to the most recently added server CA
            version.
          type: string
    InstancesRotateServerCertificateRequest:
      id: InstancesRotateServerCertificateRequest
      description: Rotate server certificate request.
      type: object
      properties:
        rotateServerCertificateContext:
          description: >-
            Optional. Contains details about the rotate server certificate
            operation.
          $ref: '#/components/schemas/RotateServerCertificateContext'
    RotateServerCertificateContext:
      id: RotateServerCertificateContext
      description: Instance rotate server certificate context.
      type: object
      properties:
        kind:
          description: Optional. This is always `sql#rotateServerCertificateContext`.
          type: string
        nextVersion:
          description: >-
            The fingerprint of the next version to be rotated to. If left
            unspecified, will be rotated to the most recently added server
            certificate version.
          type: string
    InstancesTruncateLogRequest:
      id: InstancesTruncateLogRequest
      description: Instance truncate log request.
      type: object
      properties:
        truncateLogContext:
          description: Contains details about the truncate log operation.
          $ref: '#/components/schemas/TruncateLogContext'
    TruncateLogContext:
      id: TruncateLogContext
      description: Database Instance truncate log context.
      type: object
      properties:
        kind:
          description: This is always `sql#truncateLogContext`.
          type: string
        logType:
          description: >-
            The type of log to truncate. Valid values are `MYSQL_GENERAL_TABLE`
            and `MYSQL_SLOW_TABLE`.
          type: string
    SslCertsCreateEphemeralRequest:
      id: SslCertsCreateEphemeralRequest
      description: SslCerts create ephemeral certificate request.
      type: object
      properties:
        public_key:
          description: PEM encoded public key to include in the signed certificate.
          type: string
        access_token:
          description: Access token to include in the signed certificate.
          type: string
    SqlInstancesRescheduleMaintenanceRequestBody:
      id: SqlInstancesRescheduleMaintenanceRequestBody
      description: Reschedule options for maintenance windows.
      type: object
      properties:
        reschedule:
          description: Required. The type of the reschedule the user wants.
          $ref: '#/components/schemas/Reschedule'
    Reschedule:
      id: Reschedule
      type: object
      properties:
        rescheduleType:
          description: Required. The type of the reschedule.
          type: string
          enumDescriptions:
            - ''
            - Reschedules maintenance to happen now (within 5 minutes).
            - >-
              Reschedules maintenance to occur within one week from the
              originally scheduled day and time.
            - Reschedules maintenance to a specific time and day.
          enum:
            - RESCHEDULE_TYPE_UNSPECIFIED
            - IMMEDIATE
            - NEXT_AVAILABLE_WINDOW
            - SPECIFIC_TIME
        scheduleTime:
          description: >-
            Optional. Timestamp when the maintenance shall be rescheduled to if
            reschedule_type=SPECIFIC_TIME, in [RFC
            3339](https://tools.ietf.org/html/rfc3339) format, for example
            `2012-11-15T16:19:00.094Z`.
          type: string
          format: google-datetime
    SqlInstancesVerifyExternalSyncSettingsRequest:
      id: SqlInstancesVerifyExternalSyncSettingsRequest
      description: Instance verify external sync settings request.
      type: object
      properties:
        verifyConnectionOnly:
          description: Flag to enable verifying connection only
          type: boolean
        syncMode:
          description: External sync mode
          type: string
          enumDescriptions:
            - Unknown external sync mode, will be defaulted to ONLINE mode
            - >-
              Online external sync will set up replication after initial data
              external sync
            - >-
              Offline external sync only dumps and loads a one-time snapshot of
              the primary instance's data
          enum:
            - EXTERNAL_SYNC_MODE_UNSPECIFIED
            - ONLINE
            - OFFLINE
        verifyReplicationOnly:
          description: Optional. Flag to verify settings required by replication setup only
          type: boolean
        mysqlSyncConfig:
          description: Optional. MySQL-specific settings for start external sync.
          $ref: '#/components/schemas/MySqlSyncConfig'
        migrationType:
          description: >-
            Optional. MigrationType configures the migration to use physical
            files or logical dump files. If not set, then the logical dump file
            configuration is used. Valid values are `LOGICAL` or `PHYSICAL`.
            Only applicable to MySQL.
          type: string
          enumDescriptions:
            - Default value is a logical dump file-based migration
            - Logical dump file-based migration
            - Physical file-based migration
          enum:
            - MIGRATION_TYPE_UNSPECIFIED
            - LOGICAL
            - PHYSICAL
        syncParallelLevel:
          description: >-
            Optional. Parallel level for initial data sync. Only applicable for
            PostgreSQL.
          type: string
          enumDescriptions:
            - Unknown sync parallel level. Will be defaulted to OPTIMAL.
            - Minimal parallel level.
            - Optimal parallel level.
            - Maximum parallel level.
          enum:
            - EXTERNAL_SYNC_PARALLEL_LEVEL_UNSPECIFIED
            - MIN
            - OPTIMAL
            - MAX
        selectedObjects:
          description: >-
            Optional. Migrate only the specified objects from the source
            instance. If this field is empty, then migrate all objects.
          type: array
          items:
            $ref: '#/components/schemas/ExternalSyncSelectedObject'
    MySqlSyncConfig:
      id: MySqlSyncConfig
      description: MySQL-specific external server sync settings.
      type: object
      properties:
        initialSyncFlags:
          description: Flags to use for the initial dump.
          type: array
          items:
            $ref: '#/components/schemas/SyncFlags'
    SyncFlags:
      id: SyncFlags
      description: >-
        Initial sync flags for certain Cloud SQL APIs. Currently used for the
        MySQL external server initial dump.
      type: object
      properties:
        name:
          description: The name of the flag.
          type: string
        value:
          description: >-
            The value of the flag. This field must be omitted if the flag
            doesn't take a value.
          type: string
    ExternalSyncSelectedObject:
      id: ExternalSyncSelectedObject
      description: The selected object that Cloud SQL migrates.
      type: object
      properties:
        database:
          description: The name of the database that Cloud SQL migrates.
          type: string
    SqlInstancesVerifyExternalSyncSettingsResponse:
      id: SqlInstancesVerifyExternalSyncSettingsResponse
      description: Instance verify external sync settings response.
      type: object
      properties:
        kind:
          description: This is always `sql#migrationSettingErrorList`.
          type: string
        errors:
          description: List of migration violations.
          type: array
          items:
            $ref: '#/components/schemas/SqlExternalSyncSettingError'
        warnings:
          description: List of migration warnings.
          type: array
          items:
            $ref: '#/components/schemas/SqlExternalSyncSettingError'
    SqlExternalSyncSettingError:
      id: SqlExternalSyncSettingError
      description: External primary instance migration setting error/warning.
      type: object
      properties:
        kind:
          description: >-
            Can be `sql#externalSyncSettingError` or
            `sql#externalSyncSettingWarning`.
          type: string
        type:
          description: Identifies the specific error that occurred.
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - The replication user is missing privileges that are required.
            - Unsupported migration type.
            - >-
              No pglogical extension installed on databases, applicable for
              postgres.
            - >-
              pglogical node already exists on databases, applicable for
              postgres.
            - The value of parameter wal_level is not set to logical.
            - >-
              The value of parameter shared_preload_libraries does not include
              pglogical.
            - The value of parameter max_replication_slots is not sufficient.
            - The value of parameter max_wal_senders is not sufficient.
            - The value of parameter max_worker_processes is not sufficient.
            - >-
              Extensions installed are either not supported or having
              unsupported versions.
            - The value of parameter rds.logical_replication is not set to 1.
            - The primary instance logging setup doesn't allow EM sync.
            - >-
              The primary instance database parameter setup doesn't allow EM
              sync.
            - The gtid_mode is not supported, applicable for MySQL.
            - SQL Server Agent is not running.
            - >-
              The table definition is not support due to missing primary key or
              replica identity, applicable for postgres. Note that this is a
              warning and won't block the migration.
            - The customer has a definer that will break EM setup.
            - SQL Server @@SERVERNAME does not match actual host name.
            - The primary instance has been setup and will fail the setup.
            - The primary instance has unsupported binary log format.
            - The primary instance's binary log retention setting.
            - The primary instance has tables with unsupported storage engine.
            - >-
              Source has tables with limited support eg: PostgreSQL tables
              without primary keys.
            - The replica instance contains existing data.
            - The replication user is missing privileges that are optional.
            - >-
              Additional BACKUP_ADMIN privilege is granted to the replication
              user which may lock source MySQL 8 instance for DDLs during
              initial sync.
            - The Cloud Storage bucket is missing necessary permissions.
            - >-
              The Cloud Storage bucket has an error in the file or contains
              invalid file information.
            - >-
              The source instance has unsupported database settings for
              migration.
            - >-
              The replication user is missing parallel import specific
              privileges. (e.g. LOCK TABLES) for MySQL.
            - >-
              The global variable local_infile is off on external server
              replica.
            - >-
              This code instructs customers to turn on point-in-time recovery
              manually for the instance after promoting the Cloud SQL for
              PostgreSQL instance.
            - >-
              The minor version of replica database is incompatible with the
              source.
            - >-
              This warning message indicates that Cloud SQL uses the maximum
              number of subscriptions to migrate data from the source to the
              destination.
            - Unable to verify definers on the source for MySQL.
            - >-
              If a time out occurs while the subscription counts are calculated,
              then this value is set to 1. Otherwise, this value is set to 2.
            - >-
              Count of subscriptions needed to sync source data for PostgreSQL
              database.
            - Final parallel level that is used to do migration.
            - >-
              The disk size of the replica instance is smaller than the data
              size of the source instance.
            - >-
              The data size of the source instance is greater than 1 TB, the
              number of cores of the replica instance is less than 8, and the
              memory of the replica is less than 32 GB.
            - >-
              The warning message indicates the unsupported extensions will not
              be migrated to the destination.
            - >-
              The warning message indicates the pg_cron extension and settings
              will not be migrated to the destination.
            - >-
              The error message indicates that pg_cron flags are enabled on the
              destination which is not supported during the migration.
            - >-
              This error message indicates that the specified extensions are not
              enabled on destination instance. For example, before you can
              migrate data to the destination instance, you must enable the
              PGAudit extension on the instance.
            - >-
              The source database has generated columns that can't be migrated.
              Please change them to regular columns before migration.
            - >-
              The source database has users that aren't created in the replica.
              First, create all users, which are in the pg_user_mappings table
              of the source database, in the destination instance. Then, perform
              the migration.
            - >-
              The selected objects include system objects that aren't supported
              for migration.
            - >-
              The source database has tables with the FULL or NOTHING replica
              identity. Before starting your migration, either remove the
              identity or change it to DEFAULT. Note that this is an error and
              will block the migration.
            - The selected objects don't exist on the source instance.
            - >-
              PSC only destination instance does not have a network attachment
              URI.
            - >-
              Selected objects reference unselected objects. Based on their
              object type (foreign key constraint or view), selected objects
              will fail during migration.
            - >-
              The migration will delete existing data in the replica; set
              replica_overwrite_enabled in the request to acknowledge this. This
              is an error. MySQL only.
            - >-
              The migration will delete existing data in the replica;
              replica_overwrite_enabled was set in the request acknowledging
              this. This is a warning rather than an error. MySQL only.
          enum:
            - SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED
            - CONNECTION_FAILURE
            - BINLOG_NOT_ENABLED
            - INCOMPATIBLE_DATABASE_VERSION
            - REPLICA_ALREADY_SETUP
            - INSUFFICIENT_PRIVILEGE
            - UNSUPPORTED_MIGRATION_TYPE
            - NO_PGLOGICAL_INSTALLED
            - PGLOGICAL_NODE_ALREADY_EXISTS
            - INVALID_WAL_LEVEL
            - INVALID_SHARED_PRELOAD_LIBRARY
            - INSUFFICIENT_MAX_REPLICATION_SLOTS
            - INSUFFICIENT_MAX_WAL_SENDERS
            - INSUFFICIENT_MAX_WORKER_PROCESSES
            - UNSUPPORTED_EXTENSIONS
            - INVALID_RDS_LOGICAL_REPLICATION
            - INVALID_LOGGING_SETUP
            - INVALID_DB_PARAM
            - UNSUPPORTED_GTID_MODE
            - SQLSERVER_AGENT_NOT_RUNNING
            - UNSUPPORTED_TABLE_DEFINITION
            - UNSUPPORTED_DEFINER
            - SQLSERVER_SERVERNAME_MISMATCH
            - PRIMARY_ALREADY_SETUP
            - UNSUPPORTED_BINLOG_FORMAT
            - BINLOG_RETENTION_SETTING
            - UNSUPPORTED_STORAGE_ENGINE
            - LIMITED_SUPPORT_TABLES
            - EXISTING_DATA_IN_REPLICA
            - MISSING_OPTIONAL_PRIVILEGES
            - RISKY_BACKUP_ADMIN_PRIVILEGE
            - INSUFFICIENT_GCS_PERMISSIONS
            - INVALID_FILE_INFO
            - UNSUPPORTED_DATABASE_SETTINGS
            - MYSQL_PARALLEL_IMPORT_INSUFFICIENT_PRIVILEGE
            - LOCAL_INFILE_OFF
            - TURN_ON_PITR_AFTER_PROMOTE
            - INCOMPATIBLE_DATABASE_MINOR_VERSION
            - SOURCE_MAX_SUBSCRIPTIONS
            - UNABLE_TO_VERIFY_DEFINERS
            - SUBSCRIPTION_CALCULATION_STATUS
            - PG_SUBSCRIPTION_COUNT
            - PG_SYNC_PARALLEL_LEVEL
            - INSUFFICIENT_DISK_SIZE
            - INSUFFICIENT_MACHINE_TIER
            - UNSUPPORTED_EXTENSIONS_NOT_MIGRATED
            - EXTENSIONS_NOT_MIGRATED
            - PG_CRON_FLAG_ENABLED_IN_REPLICA
            - EXTENSIONS_NOT_ENABLED_IN_REPLICA
            - UNSUPPORTED_COLUMNS
            - USERS_NOT_CREATED_IN_REPLICA
            - UNSUPPORTED_SYSTEM_OBJECTS
            - UNSUPPORTED_TABLES_WITH_REPLICA_IDENTITY
            - SELECTED_OBJECTS_NOT_EXIST_ON_SOURCE
            - PSC_ONLY_INSTANCE_WITH_NO_NETWORK_ATTACHMENT_URI
            - SELECTED_OBJECTS_REFERENCE_UNSELECTED_OBJECTS
            - PROMPT_DELETE_EXISTING
            - WILL_DELETE_EXISTING
        detail:
          description: Additional information about the error encountered.
          type: string
    SqlInstancesStartExternalSyncRequest:
      id: SqlInstancesStartExternalSyncRequest
      description: Instance start external sync request.
      type: object
      properties:
        syncMode:
          description: External sync mode.
          type: string
          enumDescriptions:
            - Unknown external sync mode, will be defaulted to ONLINE mode
            - >-
              Online external sync will set up replication after initial data
              external sync
            - >-
              Offline external sync only dumps and loads a one-time snapshot of
              the primary instance's data
          enum:
            - EXTERNAL_SYNC_MODE_UNSPECIFIED
            - ONLINE
            - OFFLINE
        skipVerification:
          description: Whether to skip the verification step (VESS).
          type: boolean
        mysqlSyncConfig:
          description: MySQL-specific settings for start external sync.
          $ref: '#/components/schemas/MySqlSyncConfig'
        syncParallelLevel:
          description: >-
            Optional. Parallel level for initial data sync. Currently only
            applicable for MySQL.
          type: string
          enumDescriptions:
            - Unknown sync parallel level. Will be defaulted to OPTIMAL.
            - Minimal parallel level.
            - Optimal parallel level.
            - Maximum parallel level.
          enum:
            - EXTERNAL_SYNC_PARALLEL_LEVEL_UNSPECIFIED
            - MIN
            - OPTIMAL
            - MAX
        migrationType:
          description: >-
            Optional. MigrationType configures the migration to use physical
            files or logical dump files. If not set, then the logical dump file
            configuration is used. Valid values are `LOGICAL` or `PHYSICAL`.
            Only applicable to MySQL.
          type: string
          enumDescriptions:
            - Default value is a logical dump file-based migration
            - Logical dump file-based migration
            - Physical file-based migration
          enum:
            - MIGRATION_TYPE_UNSPECIFIED
            - LOGICAL
            - PHYSICAL
        replicaOverwriteEnabled:
          description: >-
            Optional. MySQL only. True if end-user has confirmed that this SES
            call will wipe replica databases overlapping with the proposed
            selected_objects. If this field is not set and there are both
            overlapping and additional databases proposed, an error will be
            returned.
          type: boolean
    PerformDiskShrinkContext:
      id: PerformDiskShrinkContext
      description: Perform disk shrink context.
      type: object
      properties:
        targetSizeGb:
          description: The target disk shrink size in GigaBytes.
          type: string
          format: int64
    SqlInstancesGetDiskShrinkConfigResponse:
      id: SqlInstancesGetDiskShrinkConfigResponse
      description: Instance get disk shrink config response.
      type: object
      properties:
        kind:
          description: This is always `sql#getDiskShrinkConfig`.
          type: string
        minimalTargetSizeGb:
          description: The minimum size to which a disk can be shrunk in GigaBytes.
          type: string
          format: int64
        message:
          description: Additional message to customers.
          type: string
    SqlInstancesResetReplicaSizeRequest:
      id: SqlInstancesResetReplicaSizeRequest
      description: Instance reset replica size request.
      type: object
      properties: {}
    SqlInstancesGetLatestRecoveryTimeResponse:
      id: SqlInstancesGetLatestRecoveryTimeResponse
      description: Instance get latest recovery time response.
      type: object
      properties:
        kind:
          description: This is always `sql#getLatestRecoveryTime`.
          type: string
        latestRecoveryTime:
          description: >-
            Timestamp, identifies the latest recovery time of the source
            instance.
          type: string
          format: google-datetime
    ExecuteSqlPayload:
      id: ExecuteSqlPayload
      description: The request payload used to execute SQL statements.
      type: object
      properties:
        sqlStatement:
          description: >-
            Required. SQL statements to run on the database. It can be a single
            statement or a sequence of statements separated by semicolons.
          type: string
        database:
          description: >-
            Optional. Name of the database on which the statement will be
            executed.
          type: string
        autoIamAuthn:
          description: >-
            Optional. When set to true, the API caller identity associated with
            the request is used for database authentication. The API caller must
            be an IAM user in the database.
          type: boolean
        rowLimit:
          description: Optional. The maximum number of rows returned per SQL statement.
          type: string
          format: int64
    SqlInstancesExecuteSqlResponse:
      id: SqlInstancesExecuteSqlResponse
      description: Execute SQL statements response.
      type: object
      properties:
        metadata:
          description: >-
            The additional metadata information regarding the execution of the
            SQL statements.
          $ref: '#/components/schemas/Metadata'
        results:
          description: The list of results after executing all the SQL statements.
          type: array
          items:
            $ref: '#/components/schemas/QueryResult'
    Metadata:
      id: Metadata
      description: >-
        The additional metadata information regarding the execution of the SQL
        statements.
      type: object
      properties:
        sqlStatementExecutionTime:
          description: The time taken to execute the SQL statements.
          type: string
          format: google-duration
    QueryResult:
      id: QueryResult
      description: QueryResult contains the result of executing a single SQL statement.
      type: object
      properties:
        columns:
          description: >-
            List of columns included in the result. This also includes the data
            type of the column.
          type: array
          items:
            $ref: '#/components/schemas/Column'
        rows:
          description: Rows returned by the SQL statement.
          type: array
          items:
            $ref: '#/components/schemas/Row'
        message:
          description: Message related to the SQL execution result.
          type: string
        partialResult:
          description: >-
            Set to true if the SQL execution's result is truncated due to size
            limits.
          type: boolean
    Column:
      id: Column
      description: Contains the name and datatype of a column.
      type: object
      properties:
        name:
          description: Name of the column.
          type: string
        type:
          description: Datatype of the column.
          type: string
    Row:
      id: Row
      description: Contains the values for a row.
      type: object
      properties:
        values:
          description: The values for the row.
          type: array
          items:
            $ref: '#/components/schemas/Value'
    Value:
      id: Value
      description: The cell value of the table.
      type: object
      properties:
        value:
          description: The cell value in string format.
          type: string
        nullValue:
          description: If cell value is null, then this flag will be set to true.
          type: boolean
    InstancesAcquireSsrsLeaseRequest:
      id: InstancesAcquireSsrsLeaseRequest
      description: Request to acquire a lease for SSRS.
      type: object
      properties:
        acquireSsrsLeaseContext:
          description: Contains details about the acquire SSRS lease operation.
          $ref: '#/components/schemas/AcquireSsrsLeaseContext'
    SqlInstancesAcquireSsrsLeaseResponse:
      id: SqlInstancesAcquireSsrsLeaseResponse
      description: Response for the acquire SSRS lease request.
      type: object
      properties:
        operationId:
          description: The unique identifier for this operation.
          type: string
    SqlInstancesReleaseSsrsLeaseResponse:
      id: SqlInstancesReleaseSsrsLeaseResponse
      description: Response for the release SSRS lease request.
      type: object
      properties:
        operationId:
          description: The unique identifier for this operation.
          type: string
    PointInTimeRestoreContext:
      id: PointInTimeRestoreContext
      description: >-
        The context to perform a point-in-time recovery of an instance managed
        by Google Cloud Backup and Disaster Recovery.
      type: object
      properties:
        datasource:
          description: >-
            The Google Cloud Backup and Disaster Recovery Datasource URI.
            Format:
            projects/{project}/locations/{region}/backupVaults/{backupvault}/dataSources/{datasource}.
          type: string
        pointInTime:
          description: >-
            Required. The date and time to which you want to restore the
            instance.
          type: string
          format: google-datetime
        targetInstance:
          description: Target instance name.
          type: string
        privateNetwork:
          description: >-
            Optional. The resource link for the VPC network from which the Cloud
            SQL instance is accessible for private IP. For example,
            `/projects/myProject/global/networks/default`.
          type: string
        allocatedIpRange:
          description: >-
            Optional. The name of the allocated IP range for the internal IP
            Cloud SQL instance. For example: "google-managed-services-default".
            If you set this, then Cloud SQL creates the IP address for the
            cloned instance in the allocated range. This range must comply with
            [RFC 1035](https://tools.ietf.org/html/rfc1035) standards.
            Specifically, the name must be 1-63 characters long and match the
            regular expression [a-z]([-a-z0-9]*[a-z0-9])?. Reserved for future
            use.
          type: string
        preferredZone:
          description: >-
            Optional. Point-in-time recovery of an instance to the specified
            zone. If no zone is specified, then clone to the same primary zone
            as the source instance.
          type: string
        preferredSecondaryZone:
          description: >-
            Optional. Point-in-time recovery of a regional instance in the
            specified zones. If not specified, clone to the same secondary zone
            as the source instance. This value cannot be the same as the
            preferred_zone field.
          type: string
    BackupRun:
      id: BackupRun
      description: A BackupRun resource.
      type: object
      properties:
        kind:
          description: This is always `sql#backupRun`.
          type: string
        status:
          description: The status of this run.
          type: string
          enumDescriptions:
            - The status of the run is unknown.
            - The backup operation was enqueued.
            - >-
              The backup is overdue across a given backup window. Indicates a
              problem. Example: Long-running operation in progress during the
              whole window.
            - The backup is in progress.
            - The backup failed.
            - The backup was successful.
            - >-
              The backup was skipped (without problems) for a given backup
              window. Example: Instance was idle.
            - The backup is about to be deleted.
            - The backup deletion failed.
            - The backup has been deleted.
          enum:
            - SQL_BACKUP_RUN_STATUS_UNSPECIFIED
            - ENQUEUED
            - OVERDUE
            - RUNNING
            - FAILED
            - SUCCESSFUL
            - SKIPPED
            - DELETION_PENDING
            - DELETION_FAILED
            - DELETED
        enqueuedTime:
          description: >-
            The time the run was enqueued in UTC timezone in [RFC
            3339](https://tools.ietf.org/html/rfc3339) format, for example
            `2012-11-15T16:19:00.094Z`.
          type: string
          format: google-datetime
        id:
          description: >-
            The identifier for this backup run. Unique only for a specific Cloud
            SQL instance.
          type: string
          format: int64
        startTime:
          description: >-
            The time the backup operation actually started in UTC timezone in
            [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
            `2012-11-15T16:19:00.094Z`.
          type: string
          format: google-datetime
        endTime:
          description: >-
            The time the backup operation completed in UTC timezone in [RFC
            3339](https://tools.ietf.org/html/rfc3339) format, for example
            `2012-11-15T16:19:00.094Z`.
          type: string
          format: google-datetime
        error:
          description: >-
            Information about why the backup operation failed. This is only
            present if the run has the FAILED status.
          $ref: '#/components/schemas/OperationError'
        type:
          description: >-
            The type of this run; can be either "AUTOMATED" or "ON_DEMAND" or
            "FINAL". This field defaults to "ON_DEMAND" and is ignored, when
            specified for insert requests.
          type: string
          enumDescriptions:
            - This is an unknown BackupRun type.
            - The backup schedule automatically triggers a backup.
            - The user manually triggers a backup.
          enum:
            - SQL_BACKUP_RUN_TYPE_UNSPECIFIED
            - AUTOMATED
            - ON_DEMAND
        description:
          description: The description of this run, only applicable to on-demand backups.
          type: string
        windowStartTime:
          description: >-
            The start time of the backup window during which this the backup was
            attempted in [RFC 3339](https://tools.ietf.org/html/rfc3339) format,
            for example `2012-11-15T16:19:00.094Z`.
          type: string
          format: google-datetime
        instance:
          description: Name of the database instance.
          type: string
        selfLink:
          description: The URI of this resource.
          type: string
        location:
          description: Location of the backups.
          type: string
        databaseVersion:
          description: >-
            Output only. The instance database version at the time this backup
            was made.
          readOnly: true
          type: string
          enumDescriptions:
            - This is an unknown database version.
            - The database version is MySQL 5.1.
            - The database version is MySQL 5.5.
            - The database version is MySQL 5.6.
            - The database version is MySQL 5.7.
            - The database version is MySQL 8.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              18.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              26.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              27.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              28.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              29.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              30.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              31.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              32.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              33.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              34.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              35.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              36.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              37.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              39.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              40.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              41.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              42.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              43.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              44.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              45.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              46.
            - The database version is MySQL 8.4.
            - The database version is SQL Server 2017 Standard.
            - The database version is SQL Server 2017 Enterprise.
            - The database version is SQL Server 2017 Express.
            - The database version is SQL Server 2017 Web.
            - The database version is PostgreSQL 9.6.
            - The database version is PostgreSQL 10.
            - The database version is PostgreSQL 11.
            - The database version is PostgreSQL 12.
            - The database version is PostgreSQL 13.
            - The database version is PostgreSQL 14.
            - The database version is PostgreSQL 15.
            - The database version is PostgreSQL 16.
            - The database version is PostgreSQL 17.
            - The database version is SQL Server 2019 Standard.
            - The database version is SQL Server 2019 Enterprise.
            - The database version is SQL Server 2019 Express.
            - The database version is SQL Server 2019 Web.
            - The database version is SQL Server 2022 Standard.
            - The database version is SQL Server 2022 Enterprise.
            - The database version is SQL Server 2022 Express.
            - The database version is SQL Server 2022 Web.
          enumDeprecated:
            - false
            - true
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
          enum:
            - SQL_DATABASE_VERSION_UNSPECIFIED
            - MYSQL_5_1
            - MYSQL_5_5
            - MYSQL_5_6
            - MYSQL_5_7
            - MYSQL_8_0
            - MYSQL_8_0_18
            - MYSQL_8_0_26
            - MYSQL_8_0_27
            - MYSQL_8_0_28
            - MYSQL_8_0_29
            - MYSQL_8_0_30
            - MYSQL_8_0_31
            - MYSQL_8_0_32
            - MYSQL_8_0_33
            - MYSQL_8_0_34
            - MYSQL_8_0_35
            - MYSQL_8_0_36
            - MYSQL_8_0_37
            - MYSQL_8_0_39
            - MYSQL_8_0_40
            - MYSQL_8_0_41
            - MYSQL_8_0_42
            - MYSQL_8_0_43
            - MYSQL_8_0_44
            - MYSQL_8_0_45
            - MYSQL_8_0_46
            - MYSQL_8_4
            - SQLSERVER_2017_STANDARD
            - SQLSERVER_2017_ENTERPRISE
            - SQLSERVER_2017_EXPRESS
            - SQLSERVER_2017_WEB
            - POSTGRES_9_6
            - POSTGRES_10
            - POSTGRES_11
            - POSTGRES_12
            - POSTGRES_13
            - POSTGRES_14
            - POSTGRES_15
            - POSTGRES_16
            - POSTGRES_17
            - SQLSERVER_2019_STANDARD
            - SQLSERVER_2019_ENTERPRISE
            - SQLSERVER_2019_EXPRESS
            - SQLSERVER_2019_WEB
            - SQLSERVER_2022_STANDARD
            - SQLSERVER_2022_ENTERPRISE
            - SQLSERVER_2022_EXPRESS
            - SQLSERVER_2022_WEB
        diskEncryptionConfiguration:
          description: Encryption configuration specific to a backup.
          $ref: '#/components/schemas/DiskEncryptionConfiguration'
        diskEncryptionStatus:
          description: Encryption status specific to a backup.
          $ref: '#/components/schemas/DiskEncryptionStatus'
        backupKind:
          description: Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT.
          type: string
          enumDescriptions:
            - This is an unknown BackupKind.
            - Snapshot-based backups.
            - Physical backups.
          enum:
            - SQL_BACKUP_KIND_UNSPECIFIED
            - SNAPSHOT
            - PHYSICAL
        timeZone:
          description: >-
            Backup time zone to prevent restores to an instance with a different
            time zone. Now relevant only for SQL Server.
          type: string
        maxChargeableBytes:
          description: Output only. The maximum chargeable bytes for the backup.
          readOnly: true
          type: string
          format: int64
    BackupRunsListResponse:
      id: BackupRunsListResponse
      description: Backup run list results.
      type: object
      properties:
        kind:
          description: This is always `sql#backupRunsList`.
          type: string
        items:
          description: >-
            A list of backup runs in reverse chronological order of the enqueued
            time.
          type: array
          items:
            $ref: '#/components/schemas/BackupRun'
        nextPageToken:
          description: >-
            The continuation token, used to page through large result sets.
            Provide this value in a subsequent request to return the next page
            of results.
          type: string
    Backup:
      id: Backup
      description: 'A backup resource. Next ID: 30'
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of the backup. Format:
            projects/{project}/backups/{backup}.
          readOnly: true
          type: string
        kind:
          description: Output only. This is always `sql#backup`.
          readOnly: true
          type: string
        selfLink:
          description: Output only. The URI of this resource.
          readOnly: true
          type: string
        type:
          description: >-
            Output only. The type of this backup. The type can be "AUTOMATED",
            "ON_DEMAND" or “FINAL”.
          readOnly: true
          type: string
          enumDescriptions:
            - This is an unknown backup type.
            - The backup schedule triggers a backup automatically.
            - The user triggers a backup manually.
            - The backup created when instance is deleted.
          enum:
            - SQL_BACKUP_TYPE_UNSPECIFIED
            - AUTOMATED
            - ON_DEMAND
            - FINAL
        description:
          description: The description of this backup.
          type: string
        instance:
          description: The name of the source database instance.
          type: string
        location:
          description: >-
            The storage location of the backups. The location can be
            multi-regional.
          type: string
        backupInterval:
          description: >-
            Output only. This output contains the following values: start_time:
            All database writes up to this time are available. end_time: Any
            database writes after this time aren't available.
          readOnly: true
          $ref: '#/components/schemas/Interval'
        state:
          description: Output only. The status of this backup.
          readOnly: true
          type: string
          enumDescriptions:
            - The state of the backup is unknown.
            - The backup that's added to a queue.
            - The backup is in progress.
            - The backup failed.
            - The backup is successful.
            - The backup is being deleted.
            - Deletion of the backup failed.
          enum:
            - SQL_BACKUP_STATE_UNSPECIFIED
            - ENQUEUED
            - RUNNING
            - FAILED
            - SUCCESSFUL
            - DELETING
            - DELETION_FAILED
        error:
          description: >-
            Output only. Information about why the backup operation fails (for
            example, when the backup state fails).
          readOnly: true
          $ref: '#/components/schemas/OperationError'
        kmsKey:
          description: >-
            Output only. This output contains the encryption configuration for a
            backup and the resource name of the KMS key for disk encryption.
          readOnly: true
          type: string
        kmsKeyVersion:
          description: >-
            Output only. This output contains the encryption status for a backup
            and the version of the KMS key that's used to encrypt the Cloud SQL
            instance.
          readOnly: true
          type: string
        backupKind:
          description: >-
            Output only. Specifies the kind of backup, PHYSICAL or
            DEFAULT_SNAPSHOT.
          readOnly: true
          type: string
          enumDescriptions:
            - This is an unknown BackupKind.
            - Snapshot-based backups.
            - Physical backups.
          enum:
            - SQL_BACKUP_KIND_UNSPECIFIED
            - SNAPSHOT
            - PHYSICAL
        timeZone:
          description: >-
            Output only. This output contains a backup time zone. If a Cloud SQL
            for SQL Server instance has a different time zone from the backup's
            time zone, then the restore to the instance doesn't happen.
          readOnly: true
          type: string
        ttlDays:
          description: >-
            Input only. The time-to-live (TTL) interval for this resource (in
            days). For example: ttlDays:7, means 7 days from the current time.
            The expiration time can't exceed 365 days from the time that the
            backup is created.
          type: string
          format: int64
        expiryTime:
          description: Backup expiration time. A UTC timestamp of when this backup expired.
          type: string
          format: google-datetime
        databaseVersion:
          description: >-
            Output only. The database version of the instance of at the time
            this backup was made.
          readOnly: true
          type: string
          enumDescriptions:
            - This is an unknown database version.
            - The database version is MySQL 5.1.
            - The database version is MySQL 5.5.
            - The database version is MySQL 5.6.
            - The database version is MySQL 5.7.
            - The database version is MySQL 8.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              18.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              26.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              27.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              28.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              29.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              30.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              31.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              32.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              33.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              34.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              35.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              36.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              37.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              39.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              40.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              41.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              42.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              43.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              44.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              45.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              46.
            - The database version is MySQL 8.4.
            - The database version is SQL Server 2017 Standard.
            - The database version is SQL Server 2017 Enterprise.
            - The database version is SQL Server 2017 Express.
            - The database version is SQL Server 2017 Web.
            - The database version is PostgreSQL 9.6.
            - The database version is PostgreSQL 10.
            - The database version is PostgreSQL 11.
            - The database version is PostgreSQL 12.
            - The database version is PostgreSQL 13.
            - The database version is PostgreSQL 14.
            - The database version is PostgreSQL 15.
            - The database version is PostgreSQL 16.
            - The database version is PostgreSQL 17.
            - The database version is SQL Server 2019 Standard.
            - The database version is SQL Server 2019 Enterprise.
            - The database version is SQL Server 2019 Express.
            - The database version is SQL Server 2019 Web.
            - The database version is SQL Server 2022 Standard.
            - The database version is SQL Server 2022 Enterprise.
            - The database version is SQL Server 2022 Express.
            - The database version is SQL Server 2022 Web.
          enumDeprecated:
            - false
            - true
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
          enum:
            - SQL_DATABASE_VERSION_UNSPECIFIED
            - MYSQL_5_1
            - MYSQL_5_5
            - MYSQL_5_6
            - MYSQL_5_7
            - MYSQL_8_0
            - MYSQL_8_0_18
            - MYSQL_8_0_26
            - MYSQL_8_0_27
            - MYSQL_8_0_28
            - MYSQL_8_0_29
            - MYSQL_8_0_30
            - MYSQL_8_0_31
            - MYSQL_8_0_32
            - MYSQL_8_0_33
            - MYSQL_8_0_34
            - MYSQL_8_0_35
            - MYSQL_8_0_36
            - MYSQL_8_0_37
            - MYSQL_8_0_39
            - MYSQL_8_0_40
            - MYSQL_8_0_41
            - MYSQL_8_0_42
            - MYSQL_8_0_43
            - MYSQL_8_0_44
            - MYSQL_8_0_45
            - MYSQL_8_0_46
            - MYSQL_8_4
            - SQLSERVER_2017_STANDARD
            - SQLSERVER_2017_ENTERPRISE
            - SQLSERVER_2017_EXPRESS
            - SQLSERVER_2017_WEB
            - POSTGRES_9_6
            - POSTGRES_10
            - POSTGRES_11
            - POSTGRES_12
            - POSTGRES_13
            - POSTGRES_14
            - POSTGRES_15
            - POSTGRES_16
            - POSTGRES_17
            - SQLSERVER_2019_STANDARD
            - SQLSERVER_2019_ENTERPRISE
            - SQLSERVER_2019_EXPRESS
            - SQLSERVER_2019_WEB
            - SQLSERVER_2022_STANDARD
            - SQLSERVER_2022_ENTERPRISE
            - SQLSERVER_2022_EXPRESS
            - SQLSERVER_2022_WEB
        maxChargeableBytes:
          description: Output only. The maximum chargeable bytes for the backup.
          readOnly: true
          type: string
          format: int64
        instanceDeletionTime:
          description: >-
            Optional. Output only. Timestamp in UTC of when the instance
            associated with this backup is deleted.
          readOnly: true
          type: string
          format: google-datetime
        instanceSettings:
          description: >-
            Optional. Output only. The instance setting of the source instance
            that's associated with this backup.
          readOnly: true
          $ref: '#/components/schemas/DatabaseInstance'
        backupRun:
          description: >-
            Output only. The mapping to backup run resource used for IAM
            validations.
          readOnly: true
          type: string
        satisfiesPzs:
          description: >-
            Output only. This status indicates whether the backup satisfies PZS.
            The status is reserved for future use.
          readOnly: true
          type: boolean
        satisfiesPzi:
          description: >-
            Output only. This status indicates whether the backup satisfies PZI.
            The status is reserved for future use.
          readOnly: true
          type: boolean
    Interval:
      id: Interval
      description: >-
        Represents a time interval, encoded as a Timestamp start (inclusive) and
        a Timestamp end (exclusive). The start must be less than or equal to the
        end. When the start equals the end, the interval is empty (matches no
        time). When both start and end are unspecified, the interval matches any
        time.
      type: object
      properties:
        startTime:
          description: >-
            Optional. Inclusive start of the interval. If specified, a Timestamp
            matching this interval will have to be the same or after the start.
          type: string
          format: google-datetime
        endTime:
          description: >-
            Optional. Exclusive end of the interval. If specified, a Timestamp
            matching this interval will have to be before the end.
          type: string
          format: google-datetime
    ListBackupsResponse:
      id: ListBackupsResponse
      description: The response payload containing a list of the backups.
      type: object
      properties:
        backups:
          description: A list of backups.
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, then there aren't subsequent pages.
          type: string
        warnings:
          description: >-
            If a region isn't unavailable or if an unknown error occurs, then a
            warning message is returned.
          type: array
          items:
            $ref: '#/components/schemas/ApiWarning'
    ConnectSettings:
      id: ConnectSettings
      description: Connect settings retrieval response.
      type: object
      properties:
        kind:
          description: This is always `sql#connectSettings`.
          type: string
        serverCaCert:
          description: SSL configuration.
          $ref: '#/components/schemas/SslCert'
        ipAddresses:
          description: The assigned IP addresses for the instance.
          type: array
          items:
            $ref: '#/components/schemas/IpMapping'
        region:
          description: >-
            The cloud region for the instance. For example, `us-central1`,
            `europe-west1`. The region cannot be changed after instance
            creation.
          type: string
        databaseVersion:
          description: >-
            The database engine type and version. The `databaseVersion` field
            cannot be changed after instance creation. MySQL instances:
            `MYSQL_8_0`, `MYSQL_5_7` (default), or `MYSQL_5_6`. PostgreSQL
            instances: `POSTGRES_9_6`, `POSTGRES_10`, `POSTGRES_11`,
            `POSTGRES_12` (default), `POSTGRES_13`, or `POSTGRES_14`. SQL Server
            instances: `SQLSERVER_2017_STANDARD` (default),
            `SQLSERVER_2017_ENTERPRISE`, `SQLSERVER_2017_EXPRESS`,
            `SQLSERVER_2017_WEB`, `SQLSERVER_2019_STANDARD`,
            `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`, or
            `SQLSERVER_2019_WEB`.
          type: string
          enumDescriptions:
            - This is an unknown database version.
            - The database version is MySQL 5.1.
            - The database version is MySQL 5.5.
            - The database version is MySQL 5.6.
            - The database version is MySQL 5.7.
            - The database version is MySQL 8.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              18.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              26.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              27.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              28.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              29.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              30.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              31.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              32.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              33.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              34.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              35.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              36.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              37.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              39.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              40.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              41.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              42.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              43.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              44.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              45.
            - >-
              The database major version is MySQL 8.0 and the minor version is
              46.
            - The database version is MySQL 8.4.
            - The database version is SQL Server 2017 Standard.
            - The database version is SQL Server 2017 Enterprise.
            - The database version is SQL Server 2017 Express.
            - The database version is SQL Server 2017 Web.
            - The database version is PostgreSQL 9.6.
            - The database version is PostgreSQL 10.
            - The database version is PostgreSQL 11.
            - The database version is PostgreSQL 12.
            - The database version is PostgreSQL 13.
            - The database version is PostgreSQL 14.
            - The database version is PostgreSQL 15.
            - The database version is PostgreSQL 16.
            - The database version is PostgreSQL 17.
            - The database version is SQL Server 2019 Standard.
            - The database version is SQL Server 2019 Enterprise.
            - The database version is SQL Server 2019 Express.
            - The database version is SQL Server 2019 Web.
            - The database version is SQL Server 2022 Standard.
            - The database version is SQL Server 2022 Enterprise.
            - The database version is SQL Server 2022 Express.
            - The database version is SQL Server 2022 Web.
          enumDeprecated:
            - false
            - true
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
          enum:
            - SQL_DATABASE_VERSION_UNSPECIFIED
            - MYSQL_5_1
            - MYSQL_5_5
            - MYSQL_5_6
            - MYSQL_5_7
            - MYSQL_8_0
            - MYSQL_8_0_18
            - MYSQL_8_0_26
            - MYSQL_8_0_27
            - MYSQL_8_0_28
            - MYSQL_8_0_29
            - MYSQL_8_0_30
            - MYSQL_8_0_31
            - MYSQL_8_0_32
            - MYSQL_8_0_33
            - MYSQL_8_0_34
            - MYSQL_8_0_35
            - MYSQL_8_0_36
            - MYSQL_8_0_37
            - MYSQL_8_0_39
            - MYSQL_8_0_40
            - MYSQL_8_0_41
            - MYSQL_8_0_42
            - MYSQL_8_0_43
            - MYSQL_8_0_44
            - MYSQL_8_0_45
            - MYSQL_8_0_46
            - MYSQL_8_4
            - SQLSERVER_2017_STANDARD
            - SQLSERVER_2017_ENTERPRISE
            - SQLSERVER_2017_EXPRESS
            - SQLSERVER_2017_WEB
            - POSTGRES_9_6
            - POSTGRES_10
            - POSTGRES_11
            - POSTGRES_12
            - POSTGRES_13
            - POSTGRES_14
            - POSTGRES_15
            - POSTGRES_16
            - POSTGRES_17
            - SQLSERVER_2019_STANDARD
            - SQLSERVER_2019_ENTERPRISE
            - SQLSERVER_2019_EXPRESS
            - SQLSERVER_2019_WEB
            - SQLSERVER_2022_STANDARD
            - SQLSERVER_2022_ENTERPRISE
            - SQLSERVER_2022_EXPRESS
            - SQLSERVER_2022_WEB
        backendType:
          description: >-
            `SECOND_GEN`: Cloud SQL database instance. `EXTERNAL`: A database
            server that is not managed by Google. This property is read-only;
            use the `tier` property in the `settings` object to determine the
            database type.
          type: string
          enumDescriptions:
            - This is an unknown backend type for instance.
            - V1 speckle instance.
            - V2 speckle instance.
            - On premises instance.
          enumDeprecated:
            - false
            - true
            - false
            - false
          enum:
            - SQL_BACKEND_TYPE_UNSPECIFIED
            - FIRST_GEN
            - SECOND_GEN
            - EXTERNAL
        pscEnabled:
          description: Whether PSC connectivity is enabled for this instance.
          type: boolean
        dnsName:
          description: The dns name of the instance.
          type: string
        serverCaMode:
          description: Specify what type of CA is used for the server certificate.
          type: string
          enumDescriptions:
            - CA mode is unknown.
            - Google-managed self-signed internal CA.
            - >-
              Google-managed regional CA part of root CA hierarchy hosted on
              Google Cloud's Certificate Authority Service (CAS).
            - >-
              Customer-managed CA hosted on Google Cloud's Certificate Authority
              Service (CAS).
          enum:
            - CA_MODE_UNSPECIFIED
            - GOOGLE_MANAGED_INTERNAL_CA
            - GOOGLE_MANAGED_CAS_CA
            - CUSTOMER_MANAGED_CAS_CA
        customSubjectAlternativeNames:
          description: Custom subject alternative names for the server certificate.
          type: array
          items:
            type: string
        dnsNames:
          description: Output only. The list of DNS names used by this instance.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DnsNameMapping'
        nodeCount:
          description: The number of read pool nodes in a read pool.
          type: integer
          format: int32
        nodes:
          description: >-
            Output only. Entries containing information about each read pool
            node of the read pool.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ConnectPoolNodeConfig'
        mdxProtocolSupport:
          description: >-
            Optional. Output only. mdx_protocol_support controls how the client
            uses metadata exchange when connecting to the instance. The values
            in the list representing parts of the MDX protocol that are
            supported by this instance. When the list is empty, the instance
            does not support MDX, so the client must not send an MDX request.
            The default is empty.
          readOnly: true
          type: array
          items:
            type: string
            enumDescriptions:
              - Not specified.
              - Client should send the client protocol type in the MDX request.
            enum:
              - MDX_PROTOCOL_SUPPORT_UNSPECIFIED
              - CLIENT_PROTOCOL_TYPE
    ConnectPoolNodeConfig:
      id: ConnectPoolNodeConfig
      description: Details of a single read pool node of a read pool.
      type: object
      properties:
        name:
          description: >-
            Output only. The name of the read pool node. Doesn't include the
            project ID.
          readOnly: true
          type: string
        ipAddresses:
          description: >-
            Output only. Mappings containing IP addresses that can be used to
            connect to the read pool node.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/IpMapping'
        dnsName:
          description: Output only. The DNS name of the read pool node.
          readOnly: true
          type: string
        dnsNames:
          description: Output only. The list of DNS names used by this read pool node.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DnsNameMapping'
    GenerateEphemeralCertRequest:
      id: GenerateEphemeralCertRequest
      description: Ephemeral certificate creation request.
      type: object
      properties:
        public_key:
          description: PEM encoded public key to include in the signed certificate.
          type: string
        access_token:
          description: Optional. Access token to include in the signed certificate.
          type: string
        readTime:
          description: >-
            Optional. Optional snapshot read timestamp to trade freshness for
            performance.
          type: string
          format: google-datetime
        validDuration:
          description: Optional. If set, it will contain the cert valid duration.
          type: string
          format: google-duration
    GenerateEphemeralCertResponse:
      id: GenerateEphemeralCertResponse
      description: Ephemeral certificate creation request.
      type: object
      properties:
        ephemeralCert:
          description: Generated cert
          $ref: '#/components/schemas/SslCert'
    Database:
      id: Database
      description: Represents a SQL database on the Cloud SQL instance.
      type: object
      properties:
        kind:
          description: This is always `sql#database`.
          type: string
        charset:
          description: The Cloud SQL charset value.
          type: string
        collation:
          description: The Cloud SQL collation value.
          type: string
        etag:
          description: >-
            This field is deprecated and will be removed from a future version
            of the API.
          type: string
        name:
          description: >-
            The name of the database in the Cloud SQL instance. This does not
            include the project ID or instance name.
          type: string
        instance:
          description: >-
            The name of the Cloud SQL instance. This does not include the
            project ID.
          type: string
        selfLink:
          description: The URI of this resource.
          type: string
        project:
          description: >-
            The project ID of the project containing the Cloud SQL database. The
            Google apps domain is prefixed if applicable.
          type: string
        sqlserverDatabaseDetails:
          $ref: '#/components/schemas/SqlServerDatabaseDetails'
    SqlServerDatabaseDetails:
      id: SqlServerDatabaseDetails
      description: Represents a Sql Server database on the Cloud SQL instance.
      type: object
      properties:
        compatibilityLevel:
          description: >-
            The version of SQL Server with which the database is to be made
            compatible
          type: integer
          format: int32
        recoveryModel:
          description: The recovery model of a SQL Server database
          type: string
    DatabasesListResponse:
      id: DatabasesListResponse
      description: Database list response.
      type: object
      properties:
        kind:
          description: This is always `sql#databasesList`.
          type: string
        items:
          description: List of database resources in the instance.
          type: array
          items:
            $ref: '#/components/schemas/Database'
    FlagsListResponse:
      id: FlagsListResponse
      description: Flags list response.
      type: object
      properties:
        kind:
          description: This is always `sql#flagsList`.
          type: string
        items:
          description: List of flags.
          type: array
          items:
            $ref: '#/components/schemas/Flag'
    Flag:
      id: Flag
      description: A flag resource.
      type: object
      properties:
        name:
          description: >-
            This is the name of the flag. Flag names always use underscores, not
            hyphens, for example: `max_allowed_packet`
          type: string
        type:
          description: >-
            The type of the flag. Flags are typed to being `BOOLEAN`, `STRING`,
            `INTEGER` or `NONE`. `NONE` is used for flags that do not take a
            value, such as `skip_grant_tables`.
          type: string
          enumDescriptions:
            - This is an unknown flag type.
            - Boolean type flag.
            - String type flag.
            - Integer type flag.
            - Flag type used for a server startup option.
            - >-
              Type introduced specially for MySQL TimeZone offset. Accept a
              string value with the format [-12:59, 13:00].
            - Float type flag.
            - Comma-separated list of the strings in a SqlFlagType enum.
          enum:
            - SQL_FLAG_TYPE_UNSPECIFIED
            - BOOLEAN
            - STRING
            - INTEGER
            - NONE
            - MYSQL_TIMEZONE_OFFSET
            - FLOAT
            - REPEATED_STRING
        appliesTo:
          description: >-
            The database version this flag applies to. Can be MySQL instances:
            `MYSQL_8_0`, `MYSQL_8_0_18`, `MYSQL_8_0_26`, `MYSQL_5_7`, or
            `MYSQL_5_6`. PostgreSQL instances: `POSTGRES_9_6`, `POSTGRES_10`,
            `POSTGRES_11` or `POSTGRES_12`. SQL Server instances:
            `SQLSERVER_2017_STANDARD`, `SQLSERVER_2017_ENTERPRISE`,
            `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`,
            `SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`,
            `SQLSERVER_2019_EXPRESS`, or `SQLSERVER_2019_WEB`. See [the complete
            list](/sql/docs/mysql/admin-api/rest/v1/SqlDatabaseVersion).
          type: array
          items:
            type: string
            enumDescriptions:
              - This is an unknown database version.
              - The database version is MySQL 5.1.
              - The database version is MySQL 5.5.
              - The database version is MySQL 5.6.
              - The database version is MySQL 5.7.
              - The database version is MySQL 8.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                18.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                26.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                27.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                28.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                29.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                30.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                31.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                32.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                33.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                34.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                35.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                36.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                37.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                39.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                40.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                41.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                42.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                43.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                44.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                45.
              - >-
                The database major version is MySQL 8.0 and the minor version is
                46.
              - The database version is MySQL 8.4.
              - The database version is SQL Server 2017 Standard.
              - The database version is SQL Server 2017 Enterprise.
              - The database version is SQL Server 2017 Express.
              - The database version is SQL Server 2017 Web.
              - The database version is PostgreSQL 9.6.
              - The database version is PostgreSQL 10.
              - The database version is PostgreSQL 11.
              - The database version is PostgreSQL 12.
              - The database version is PostgreSQL 13.
              - The database version is PostgreSQL 14.
              - The database version is PostgreSQL 15.
              - The database version is PostgreSQL 16.
              - The database version is PostgreSQL 17.
              - The database version is SQL Server 2019 Standard.
              - The database version is SQL Server 2019 Enterprise.
              - The database version is SQL Server 2019 Express.
              - The database version is SQL Server 2019 Web.
              - The database version is SQL Server 2022 Standard.
              - The database version is SQL Server 2022 Enterprise.
              - The database version is SQL Server 2022 Express.
              - The database version is SQL Server 2022 Web.
            enumDeprecated:
              - false
              - true
              - true
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - true
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
            enum:
              - SQL_DATABASE_VERSION_UNSPECIFIED
              - MYSQL_5_1
              - MYSQL_5_5
              - MYSQL_5_6
              - MYSQL_5_7
              - MYSQL_8_0
              - MYSQL_8_0_18
              - MYSQL_8_0_26
              - MYSQL_8_0_27
              - MYSQL_8_0_28
              - MYSQL_8_0_29
              - MYSQL_8_0_30
              - MYSQL_8_0_31
              - MYSQL_8_0_32
              - MYSQL_8_0_33
              - MYSQL_8_0_34
              - MYSQL_8_0_35
              - MYSQL_8_0_36
              - MYSQL_8_0_37
              - MYSQL_8_0_39
              - MYSQL_8_0_40
              - MYSQL_8_0_41
              - MYSQL_8_0_42
              - MYSQL_8_0_43
              - MYSQL_8_0_44
              - MYSQL_8_0_45
              - MYSQL_8_0_46
              - MYSQL_8_4
              - SQLSERVER_2017_STANDARD
              - SQLSERVER_2017_ENTERPRISE
              - SQLSERVER_2017_EXPRESS
              - SQLSERVER_2017_WEB
              - POSTGRES_9_6
              - POSTGRES_10
              - POSTGRES_11
              - POSTGRES_12
              - POSTGRES_13
              - POSTGRES_14
              - POSTGRES_15
              - POSTGRES_16
              - POSTGRES_17
              - SQLSERVER_2019_STANDARD
              - SQLSERVER_2019_ENTERPRISE
              - SQLSERVER_2019_EXPRESS
              - SQLSERVER_2019_WEB
              - SQLSERVER_2022_STANDARD
              - SQLSERVER_2022_ENTERPRISE
              - SQLSERVER_2022_EXPRESS
              - SQLSERVER_2022_WEB
        allowedStringValues:
          description: For `STRING` flags, a list of strings that the value can be set to.
          type: array
          items:
            type: string
        minValue:
          description: For `INTEGER` flags, the minimum allowed value.
          type: string
          format: int64
        maxValue:
          description: For `INTEGER` flags, the maximum allowed value.
          type: string
          format: int64
        requiresRestart:
          description: >-
            Indicates whether changing this flag will trigger a database
            restart. Only applicable to Second Generation instances.
          type: boolean
        kind:
          description: This is always `sql#flag`.
          type: string
        inBeta:
          description: Whether or not the flag is considered in beta.
          type: boolean
        allowedIntValues:
          description: >-
            Use this field if only certain integers are accepted. Can be
            combined with min_value and max_value to add additional values.
          type: array
          items:
            type: string
            format: int64
        flagScope:
          description: Scope of flag.
          type: string
          enumDescriptions:
            - Assume database flags if unspecified
            - database flags
            - connection pool configuration flags
          enum:
            - SQL_FLAG_SCOPE_UNSPECIFIED
            - SQL_FLAG_SCOPE_DATABASE
            - SQL_FLAG_SCOPE_CONNECTION_POOL
        recommendedStringValue:
          description: Recommended string value in string format for UI display.
          type: string
        recommendedIntValue:
          description: Recommended int value in integer format for UI display.
          type: string
          format: int64
    OperationsListResponse:
      id: OperationsListResponse
      description: Operations list response.
      type: object
      properties:
        kind:
          description: This is always `sql#operationsList`.
          type: string
        items:
          description: List of operation resources.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: >-
            The continuation token, used to page through large result sets.
            Provide this value in a subsequent request to return the next page
            of results.
          type: string
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    SslCertsInsertRequest:
      id: SslCertsInsertRequest
      description: SslCerts insert request.
      type: object
      properties:
        commonName:
          description: >-
            User supplied name. Must be a distinct name from the other
            certificates for this instance.
          type: string
    SslCertsInsertResponse:
      id: SslCertsInsertResponse
      description: SslCert insert response.
      type: object
      properties:
        kind:
          description: This is always `sql#sslCertsInsert`.
          type: string
        operation:
          description: The operation to track the ssl certs insert request.
          $ref: '#/components/schemas/Operation'
        serverCaCert:
          description: >-
            The server Certificate Authority's certificate. If this is missing
            you can force a new one to be generated by calling resetSslConfig
            method on instances resource.
          $ref: '#/components/schemas/SslCert'
        clientCert:
          description: The new client certificate and private key.
          $ref: '#/components/schemas/SslCertDetail'
    SslCertDetail:
      id: SslCertDetail
      description: SslCertDetail.
      type: object
      properties:
        certInfo:
          description: The public information about the cert.
          $ref: '#/components/schemas/SslCert'
        certPrivateKey:
          description: >-
            The private key for the client cert, in pem format. Keep private in
            order to protect your security.
          type: string
    SslCertsListResponse:
      id: SslCertsListResponse
      description: SslCerts list response.
      type: object
      properties:
        kind:
          description: This is always `sql#sslCertsList`.
          type: string
        items:
          description: List of client certificates for the instance.
          type: array
          items:
            $ref: '#/components/schemas/SslCert'
    TiersListResponse:
      id: TiersListResponse
      description: Tiers list response.
      type: object
      properties:
        kind:
          description: This is always `sql#tiersList`.
          type: string
        items:
          description: List of tiers.
          type: array
          items:
            $ref: '#/components/schemas/Tier'
    Tier:
      id: Tier
      description: A Google Cloud SQL service tier resource.
      type: object
      properties:
        tier:
          description: >-
            An identifier for the machine type, for example, `db-custom-1-3840`.
            For related information, see [Pricing](/sql/pricing).
          type: string
        RAM:
          description: The maximum RAM usage of this tier in bytes.
          type: string
          format: int64
        kind:
          description: This is always `sql#tier`.
          type: string
        DiskQuota:
          description: The maximum disk size of this tier in bytes.
          type: string
          format: int64
        region:
          description: The applicable regions for this tier.
          type: array
          items:
            type: string
    User:
      id: User
      description: A Cloud SQL user resource.
      type: object
      properties:
        kind:
          description: This is always `sql#user`.
          type: string
        password:
          description: The password for the user.
          type: string
        etag:
          description: >-
            This field is deprecated and will be removed from a future version
            of the API.
          type: string
        name:
          description: >-
            The name of the user in the Cloud SQL instance. Can be omitted for
            `update` because it is already specified in the URL.
          type: string
        host:
          description: >-
            Optional. The host from which the user can connect. For `insert`
            operations, host defaults to an empty string. For `update`
            operations, host is specified as part of the request URL. The host
            name cannot be updated after insertion. For a MySQL instance, it's
            required; for a PostgreSQL or SQL Server instance, it's optional.
          type: string
        instance:
          description: >-
            The name of the Cloud SQL instance. This does not include the
            project ID. Can be omitted for `update` because it is already
            specified on the URL.
          type: string
        project:
          description: >-
            The project ID of the project containing the Cloud SQL database. The
            Google apps domain is prefixed if applicable. Can be omitted for
            `update` because it is already specified on the URL.
          type: string
        type:
          description: >-
            The user type. It determines the method to authenticate the user
            during login. The default is the database's built-in user type.
          type: string
          enumDescriptions:
            - The database's built-in user type.
            - Cloud IAM user.
            - Cloud IAM service account.
            - Cloud IAM group. Not used for login.
            - Read-only. Login for a user that belongs to the Cloud IAM group.
            - >-
              Read-only. Login for a service account that belongs to the Cloud
              IAM group.
          enum:
            - BUILT_IN
            - CLOUD_IAM_USER
            - CLOUD_IAM_SERVICE_ACCOUNT
            - CLOUD_IAM_GROUP
            - CLOUD_IAM_GROUP_USER
            - CLOUD_IAM_GROUP_SERVICE_ACCOUNT
        sqlserverUserDetails:
          $ref: '#/components/schemas/SqlServerUserDetails'
        passwordPolicy:
          description: User level password validation policy.
          $ref: '#/components/schemas/UserPasswordValidationPolicy'
        dualPasswordType:
          description: Dual password status for the user.
          type: string
          enumDescriptions:
            - The default value.
            - Do not update the user's dual password status.
            - No dual password usable for connecting using this user.
            - Dual password usable for connecting using this user.
          enum:
            - DUAL_PASSWORD_TYPE_UNSPECIFIED
            - NO_MODIFY_DUAL_PASSWORD
            - NO_DUAL_PASSWORD
            - DUAL_PASSWORD
    SqlServerUserDetails:
      id: SqlServerUserDetails
      description: Represents a Sql Server user on the Cloud SQL instance.
      type: object
      properties:
        disabled:
          description: If the user has been disabled
          type: boolean
        serverRoles:
          description: The server roles for this user
          type: array
          items:
            type: string
    UserPasswordValidationPolicy:
      id: UserPasswordValidationPolicy
      description: User level password validation policy.
      type: object
      properties:
        allowedFailedAttempts:
          description: Number of failed login attempts allowed before user get locked.
          type: integer
          format: int32
        passwordExpirationDuration:
          description: Expiration duration after password is updated.
          type: string
          format: google-duration
        enableFailedAttemptsCheck:
          description: If true, failed login attempts check will be enabled.
          type: boolean
        status:
          description: Output only. Read-only password status.
          readOnly: true
          $ref: '#/components/schemas/PasswordStatus'
        enablePasswordVerification:
          description: >-
            If true, the user must specify the current password before changing
            the password. This flag is supported only for MySQL.
          type: boolean
    PasswordStatus:
      id: PasswordStatus
      description: Read-only password status.
      type: object
      properties:
        locked:
          description: If true, user does not have login privileges.
          type: boolean
        passwordExpirationTime:
          description: The expiration time of the current password.
          type: string
          format: google-datetime
    UsersListResponse:
      id: UsersListResponse
      description: User list response.
      type: object
      properties:
        kind:
          description: This is always `sql#usersList`.
          type: string
        items:
          description: List of user resources in the instance.
          type: array
          items:
            $ref: '#/components/schemas/User'
        nextPageToken:
          description: Unused.
          deprecated: true
          type: string
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusDetail:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        cancelRequested:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have google.longrunning.Operation.error value with a
            google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    instances_server_ca:
      id: google.sqladmin.instances_server_ca
      name: instances_server_ca
      title: Instances_server_ca
      methods:
        add_server_ca:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1addServerCa/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/instances_server_ca/methods/add_server_ca
        update: []
        replace: []
        delete: []
    instances_server_certificate:
      id: google.sqladmin.instances_server_certificate
      name: instances_server_certificate
      title: Instances_server_certificate
      methods:
        add_server_certificate:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1addServerCertificate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/instances_server_certificate/methods/add_server_certificate
        update: []
        replace: []
        delete: []
    instances:
      id: google.sqladmin.instances
      name: instances
      title: Instances
      methods:
        clone:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1clone/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        demote_master:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1demoteMaster/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        demote:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1demote/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        failover:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1failover/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reencrypt:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1reencrypt/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        import:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.warnings
        list_server_certificates:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1listServerCertificates/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        promote_replica:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1promoteReplica/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        switchover:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1switchover/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_ssl_config:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1resetSslConfig/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restart:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1restart/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restore_backup:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1restoreBackup/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rotate_server_ca:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1rotateServerCa/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rotate_server_certificate:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1rotateServerCertificate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start_replica:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1startReplica/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop_replica:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1stopReplica/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        truncate_log:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1truncateLog/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        execute_sql:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1executeSql/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        acquire_ssrs_lease:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1acquireSsrsLease/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        release_ssrs_lease:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1releaseSsrsLease/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        point_in_time_restore:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}:pointInTimeRestore/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reschedule_maintenance:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1rescheduleMaintenance/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_external_sync_settings:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1verifyExternalSyncSettings/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start_external_sync:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1startExternalSync/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        perform_disk_shrink:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1performDiskShrink/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_replica_size:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1resetReplicaSize/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/insert'
        update:
          - $ref: '#/components/x-stackQL-resources/instances/methods/patch'
        replace:
          - $ref: '#/components/x-stackQL-resources/instances/methods/update'
        delete:
          - $ref: '#/components/x-stackQL-resources/instances/methods/delete'
    instances_server_cas:
      id: google.sqladmin.instances_server_cas
      name: instances_server_cas
      title: Instances_server_cas
      methods:
        list_server_cas:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1listServerCas/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/instances_server_cas/methods/list_server_cas
        insert: []
        update: []
        replace: []
        delete: []
    ssl_certs_ephemeral:
      id: google.sqladmin.ssl_certs_ephemeral
      name: ssl_certs_ephemeral
      title: Ssl_certs_ephemeral
      methods:
        create_ephemeral:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1createEphemeral/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/ssl_certs_ephemeral/methods/create_ephemeral
        update: []
        replace: []
        delete: []
    ssl_certs:
      id: google.sqladmin.ssl_certs
      name: ssl_certs
      title: Ssl_certs
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1sslCerts~1{sha1Fingerprint}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1sslCerts~1{sha1Fingerprint}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1sslCerts/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1sslCerts/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ssl_certs/methods/get'
          - $ref: '#/components/x-stackQL-resources/ssl_certs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/ssl_certs/methods/insert'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/ssl_certs/methods/delete'
    instances_disk_shrink_config:
      id: google.sqladmin.instances_disk_shrink_config
      name: instances_disk_shrink_config
      title: Instances_disk_shrink_config
      methods:
        get_disk_shrink_config:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1getDiskShrinkConfig/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/instances_disk_shrink_config/methods/get_disk_shrink_config
        insert: []
        update: []
        replace: []
        delete: []
    instances_latest_recovery_time:
      id: google.sqladmin.instances_latest_recovery_time
      name: instances_latest_recovery_time
      title: Instances_latest_recovery_time
      methods:
        get_latest_recovery_time:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1getLatestRecoveryTime/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/instances_latest_recovery_time/methods/get_latest_recovery_time
        insert: []
        update: []
        replace: []
        delete: []
    backup_runs:
      id: google.sqladmin.backup_runs
      name: backup_runs
      title: Backup_runs
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1backupRuns~1{id}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1backupRuns~1{id}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1backupRuns/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1backupRuns/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backup_runs/methods/get'
          - $ref: '#/components/x-stackQL-resources/backup_runs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/backup_runs/methods/insert'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backup_runs/methods/delete'
    backups:
      id: google.sqladmin.backups
      name: backups
      title: Backups
      methods:
        create_backup:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1backups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_backups:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1backups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_backup:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1backups~1{backupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_backup:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1backups~1{backupsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_backup:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1backups~1{backupsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    connect:
      id: google.sqladmin.connect
      name: connect
      title: Connect
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1connectSettings/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_ephemeral:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}:generateEphemeralCert/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connect/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    databases:
      id: google.sqladmin.databases
      name: databases
      title: Databases
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1databases~1{database}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1databases~1{database}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1databases~1{database}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1databases~1{database}/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1databases/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1databases/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/databases/methods/get'
          - $ref: '#/components/x-stackQL-resources/databases/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/databases/methods/insert'
        update:
          - $ref: '#/components/x-stackQL-resources/databases/methods/patch'
        replace:
          - $ref: '#/components/x-stackQL-resources/databases/methods/update'
        delete:
          - $ref: '#/components/x-stackQL-resources/databases/methods/delete'
    flags:
      id: google.sqladmin.flags
      name: flags
      title: Flags
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1flags/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/flags/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.sqladmin.operations
      name: operations
      title: Operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1operations~1{operation}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1operations~1{operation}~1cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    tiers:
      id: google.sqladmin.tiers
      name: tiers
      title: Tiers
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1tiers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tiers/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    users:
      id: google.sqladmin.users
      name: users
      title: Users
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1users/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1users/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1users/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
        update:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1users/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{project}~1instances~1{instance}~1users~1{name}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/users/methods/get'
          - $ref: '#/components/x-stackQL-resources/users/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/users/methods/insert'
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/users/methods/update'
        delete:
          - $ref: '#/components/x-stackQL-resources/users/methods/delete'
paths:
  /v1/projects/{project}/instances/{instance}/addServerCa:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      description: >-
        Adds a new trusted Certificate Authority (CA) version for the specified
        instance. Required to prepare for a certificate rotation. If a CA
        version was previously added but never used in a certificate rotation,
        this operation replaces that version. There cannot be more than one CA
        version waiting to be rotated in. For instances that have enabled
        Certificate Authority Service (CAS) based server CA, use
        AddServerCertificate to add a new server certificate.
      operationId: sql.instances.addServerCa
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/addServerCertificate:
    parameters: *ref_1
    post:
      description: >-
        Add a new trusted server certificate version for the specified instance
        using Certificate Authority Service (CAS) server CA. Required to prepare
        for a certificate rotation. If a server certificate version was
        previously added but never used in a certificate rotation, this
        operation replaces that version. There cannot be more than one
        certificate version waiting to be rotated in. For instances not using
        CAS server CA, use AddServerCa instead.
      operationId: sql.instances.addServerCertificate
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/clone:
    parameters: *ref_1
    post:
      description: >-
        Creates a Cloud SQL instance as a clone of the source instance. Using
        this operation might cause your instance to restart.
      operationId: sql.instances.clone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesCloneRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}:
    parameters: *ref_1
    delete:
      description: Deletes a Cloud SQL instance.
      operationId: sql.instances.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: query
          name: enableFinalBackup
          schema:
            type: boolean
        - in: query
          name: finalBackupTtlDays
          schema:
            type: string
            format: int64
        - in: query
          name: finalBackupExpiryTime
          schema:
            type: string
            format: google-datetime
        - in: query
          name: finalBackupDescription
          schema:
            type: string
    get:
      description: Retrieves a resource containing information about a Cloud SQL instance.
      operationId: sql.instances.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseInstance'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
    patch:
      description: >-
        Partially updates settings of a Cloud SQL instance by merging the
        request with the current configuration. This method supports patch
        semantics.
      operationId: sql.instances.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseInstance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
    put:
      description: >-
        Updates settings of a Cloud SQL instance. Using this operation might
        cause your instance to restart.
      operationId: sql.instances.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseInstance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/demoteMaster:
    parameters: *ref_1
    post:
      description: >-
        Demotes the stand-alone instance to be a Cloud SQL read replica for an
        external database server.
      operationId: sql.instances.demoteMaster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesDemoteMasterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/demote:
    parameters: *ref_1
    post:
      description: >-
        Demotes an existing standalone instance to be a Cloud SQL read replica
        for an external database server.
      operationId: sql.instances.demote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesDemoteRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/export:
    parameters: *ref_1
    post:
      description: >-
        Exports data from a Cloud SQL instance to a Cloud Storage bucket as a
        SQL dump or CSV file.
      operationId: sql.instances.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesExportRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/failover:
    parameters: *ref_1
    post:
      description: >-
        Initiates a manual failover of a high availability (HA) primary instance
        to a standby instance, which becomes the primary instance. Users are
        then rerouted to the new primary. For more information, see the
        [Overview of high
        availability](https://cloud.google.com/sql/docs/mysql/high-availability)
        page in the Cloud SQL documentation. If using Legacy HA (MySQL only),
        this causes the instance to failover to its failover replica instance.
      operationId: sql.instances.failover
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesFailoverRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/reencrypt:
    parameters: *ref_1
    post:
      description: Reencrypt CMEK instance with latest key version.
      operationId: sql.instances.reencrypt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesReencryptRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/import:
    parameters: *ref_1
    post:
      description: >-
        Imports data into a Cloud SQL instance from a SQL dump or CSV file in
        Cloud Storage.
      operationId: sql.instances.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesImportRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances:
    parameters: *ref_1
    post:
      description: Creates a new Cloud SQL instance.
      operationId: sql.instances.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseInstance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
    get:
      description: Lists instances under a given project.
      operationId: sql.instances.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstancesListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
            format: uint32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/listServerCas:
    parameters: *ref_1
    get:
      description: >-
        Lists all of the trusted Certificate Authorities (CAs) for the specified
        instance. There can be up to three CAs listed: the CA that was used to
        sign the certificate that is currently in use, a CA that has been added
        but not yet used to sign a certificate, and a CA used to sign a
        certificate that has previously rotated out.
      operationId: sql.instances.listServerCas
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstancesListServerCasResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/listServerCertificates:
    parameters: *ref_1
    get:
      description: >-
        Lists all versions of server certificates and certificate authorities
        (CAs) for the specified instance. There can be up to three sets of certs
        listed: the certificate that is currently in use, a future that has been
        added but not yet used to sign a certificate, and a certificate that has
        been rotated out. For instances not using Certificate Authority Service
        (CAS) server CA, use ListServerCas instead.
      operationId: sql.instances.ListServerCertificates
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstancesListServerCertificatesResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/promoteReplica:
    parameters: *ref_1
    post:
      description: >-
        Promotes the read replica instance to be an independent Cloud SQL
        primary instance. Using this operation might cause your instance to
        restart.
      operationId: sql.instances.promoteReplica
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: query
          name: failover
          schema:
            type: boolean
  /v1/projects/{project}/instances/{instance}/switchover:
    parameters: *ref_1
    post:
      description: Switches over from the primary instance to the DR replica instance.
      operationId: sql.instances.switchover
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: query
          name: dbTimeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{project}/instances/{instance}/resetSslConfig:
    parameters: *ref_1
    post:
      description: >-
        Deletes all client certificates and generates a new server SSL
        certificate for the instance.
      operationId: sql.instances.resetSslConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/restart:
    parameters: *ref_1
    post:
      description: Restarts a Cloud SQL instance.
      operationId: sql.instances.restart
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/restoreBackup:
    parameters: *ref_1
    post:
      description: >-
        Restores a backup of a Cloud SQL instance. Using this operation might
        cause your instance to restart.
      operationId: sql.instances.restoreBackup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesRestoreBackupRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/rotateServerCa:
    parameters: *ref_1
    post:
      description: >-
        Rotates the server certificate to one signed by the Certificate
        Authority (CA) version previously added with the addServerCA method. For
        instances that have enabled Certificate Authority Service (CAS) based
        server CA, use RotateServerCertificate to rotate the server certificate.
      operationId: sql.instances.rotateServerCa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesRotateServerCaRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/rotateServerCertificate:
    parameters: *ref_1
    post:
      description: >-
        Rotates the server certificate version to one previously added with the
        addServerCertificate method. For instances not using Certificate
        Authority Service (CAS) server CA, use RotateServerCa instead.
      operationId: sql.instances.RotateServerCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesRotateServerCertificateRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/startReplica:
    parameters: *ref_1
    post:
      description: Starts the replication in the read replica instance.
      operationId: sql.instances.startReplica
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/stopReplica:
    parameters: *ref_1
    post:
      description: Stops the replication in the read replica instance.
      operationId: sql.instances.stopReplica
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/truncateLog:
    parameters: *ref_1
    post:
      description: Truncate MySQL general and slow query log tables MySQL only.
      operationId: sql.instances.truncateLog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesTruncateLogRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/executeSql:
    parameters: *ref_1
    post:
      description: Execute SQL statements.
      operationId: sql.instances.executeSql
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteSqlPayload'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlInstancesExecuteSqlResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/acquireSsrsLease:
    parameters: *ref_1
    post:
      description: Acquire a lease for the setup of SQL Server Reporting Services (SSRS).
      operationId: sql.instances.acquireSsrsLease
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesAcquireSsrsLeaseRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlInstancesAcquireSsrsLeaseResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/releaseSsrsLease:
    parameters: *ref_1
    post:
      description: Release a lease for the setup of SQL Server Reporting Services (SSRS).
      operationId: sql.instances.releaseSsrsLease
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlInstancesReleaseSsrsLeaseResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}:pointInTimeRestore:
    parameters: *ref_1
    post:
      description: >-
        Point in time restore for an instance managed by Google Cloud Backup and
        Disaster Recovery.
      operationId: sql.instances.pointInTimeRestore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointInTimeRestoreContext'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/createEphemeral:
    parameters: *ref_1
    post:
      description: >-
        Generates a short-lived X509 certificate containing the provided public
        key and signed by a private key specific to the target instance. Users
        may use the certificate to authenticate as themselves when connecting to
        the database.
      operationId: sql.sslCerts.createEphemeral
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SslCertsCreateEphemeralRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SslCert'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes the SSL certificate. For First Generation instances, the
        certificate remains valid until the instance is restarted.
      operationId: sql.sslCerts.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: sha1Fingerprint
          required: true
          schema:
            type: string
    get:
      description: >-
        Retrieves a particular SSL certificate. Does not include the private key
        (required for usage). The private key must be saved from the response to
        initial creation.
      operationId: sql.sslCerts.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SslCert'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: sha1Fingerprint
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/sslCerts:
    parameters: *ref_1
    post:
      description: >-
        Creates an SSL certificate and returns it along with the private key and
        server certificate authority. The new certificate will not be usable
        until the instance is restarted.
      operationId: sql.sslCerts.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SslCertsInsertRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SslCertsInsertResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
    get:
      description: Lists all of the current SSL certificates for the instance.
      operationId: sql.sslCerts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SslCertsListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/rescheduleMaintenance:
    parameters: *ref_1
    post:
      description: Reschedules the maintenance on the given instance.
      operationId: sql.projects.instances.rescheduleMaintenance
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/SqlInstancesRescheduleMaintenanceRequestBody
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/verifyExternalSyncSettings:
    parameters: *ref_1
    post:
      description: Verify External primary instance external sync settings.
      operationId: sql.projects.instances.verifyExternalSyncSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/SqlInstancesVerifyExternalSyncSettingsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SqlInstancesVerifyExternalSyncSettingsResponse
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/startExternalSync:
    parameters: *ref_1
    post:
      description: Start External primary instance migration.
      operationId: sql.projects.instances.startExternalSync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlInstancesStartExternalSyncRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/performDiskShrink:
    parameters: *ref_1
    post:
      description: Perform Disk Shrink on primary instance.
      operationId: sql.projects.instances.performDiskShrink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerformDiskShrinkContext'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/getDiskShrinkConfig:
    parameters: *ref_1
    get:
      description: Get Disk Shrink Config for a given instance.
      operationId: sql.projects.instances.getDiskShrinkConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlInstancesGetDiskShrinkConfigResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/resetReplicaSize:
    parameters: *ref_1
    post:
      description: Reset Replica Size to primary instance disk size.
      operationId: sql.projects.instances.resetReplicaSize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlInstancesResetReplicaSizeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/getLatestRecoveryTime:
    parameters: *ref_1
    get:
      description: Get Latest Recovery Time for a given instance.
      operationId: sql.projects.instances.getLatestRecoveryTime
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlInstancesGetLatestRecoveryTimeResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: query
          name: sourceInstanceDeletionTime
          schema:
            type: string
            format: google-datetime
  /v1/projects/{project}/instances/{instance}/backupRuns/{id}:
    parameters: *ref_1
    delete:
      description: Deletes the backup taken by a backup run.
      operationId: sql.backupRuns.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
    get:
      description: Retrieves a resource containing information about a backup run.
      operationId: sql.backupRuns.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRun'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/backupRuns:
    parameters: *ref_1
    post:
      description: Creates a new backup run on demand.
      operationId: sql.backupRuns.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRun'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
    get:
      description: >-
        Lists all backup runs associated with the project or a given instance
        and configuration in the reverse chronological order of the backup
        initiation time.
      operationId: sql.backupRuns.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRunsListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/backups:
    parameters: *ref_1
    post:
      description: >-
        Creates a backup for a Cloud SQL instance. This API can be used only to
        create on-demand backups.
      operationId: sql.Backups.CreateBackup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
    get:
      description: Lists all backups associated with the project.
      operationId: sql.Backups.ListBackups
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/backups/{backupsId}:
    parameters: *ref_1
    get:
      description: Retrieves a resource containing information about a backup.
      operationId: sql.Backups.GetBackup
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the retention period and description of the backup. You can use
        this API to update final backups only.
      operationId: sql.Backups.UpdateBackup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes the backup.
      operationId: sql.Backups.DeleteBackup
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/connectSettings:
    parameters: *ref_1
    get:
      description: Retrieves connect settings about a Cloud SQL instance.
      operationId: sql.connect.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectSettings'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: query
          name: readTime
          schema:
            type: string
            format: google-datetime
  /v1/projects/{project}/instances/{instance}:generateEphemeralCert:
    parameters: *ref_1
    post:
      description: >-
        Generates a short-lived X509 certificate containing the provided public
        key and signed by a private key specific to the target instance. Users
        may use the certificate to authenticate as themselves when connecting to
        the database.
      operationId: sql.connect.generateEphemeral
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateEphemeralCertRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateEphemeralCertResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/databases/{database}:
    parameters: *ref_1
    delete:
      description: Deletes a database from a Cloud SQL instance.
      operationId: sql.databases.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: database
          required: true
          schema:
            type: string
    get:
      description: >-
        Retrieves a resource containing information about a database inside a
        Cloud SQL instance.
      operationId: sql.databases.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: database
          required: true
          schema:
            type: string
    patch:
      description: >-
        Partially updates a resource containing information about a database
        inside a Cloud SQL instance. This method supports patch semantics.
      operationId: sql.databases.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Database'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: database
          required: true
          schema:
            type: string
    put:
      description: >-
        Updates a resource containing information about a database inside a
        Cloud SQL instance.
      operationId: sql.databases.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Database'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: database
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/databases:
    parameters: *ref_1
    post:
      description: >-
        Inserts a resource containing information about a database inside a
        Cloud SQL instance. **Note:** You can't modify the default character set
        and collation.
      operationId: sql.databases.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Database'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
    get:
      description: Lists databases in the specified Cloud SQL instance.
      operationId: sql.databases.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabasesListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
  /v1/flags:
    parameters: *ref_1
    get:
      description: Lists all available database flags for Cloud SQL instances.
      operationId: sql.flags.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagsListResponse'
      parameters:
        - in: query
          name: databaseVersion
          schema:
            type: string
        - in: query
          name: flagScope
          schema:
            type: string
  /v1/projects/{project}/operations/{operation}:
    parameters: *ref_1
    get:
      description: Retrieves an instance operation that has been performed on an instance.
      operationId: sql.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: operation
          required: true
          schema:
            type: string
  /v1/projects/{project}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists all instance operations that have been performed on the given
        Cloud SQL instance in the reverse chronological order of the start time.
      operationId: sql.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationsListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: instance
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
            format: uint32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{project}/operations/{operation}/cancel:
    parameters: *ref_1
    post:
      description: Cancels an instance operation that has been performed on an instance.
      operationId: sql.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: operation
          required: true
          schema:
            type: string
  /v1/projects/{project}/tiers:
    parameters: *ref_1
    get:
      description: >-
        Lists all available machine types (tiers) for Cloud SQL, for example,
        `db-custom-1-3840`. For more information, see
        https://cloud.google.com/sql/pricing.
      operationId: sql.tiers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/users:
    parameters: *ref_1
    delete:
      description: Deletes a user from a Cloud SQL instance.
      operationId: sql.users.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: query
          name: host
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
    post:
      description: Creates a new user in a Cloud SQL instance.
      operationId: sql.users.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
    get:
      description: Lists users in the specified Cloud SQL instance.
      operationId: sql.users.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
    put:
      description: Updates an existing user in a Cloud SQL instance.
      operationId: sql.users.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: query
          name: host
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
  /v1/projects/{project}/instances/{instance}/users/{name}:
    parameters: *ref_1
    get:
      description: Retrieves a resource containing information about a user.
      operationId: sql.users.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: query
          name: host
          schema:
            type: string
