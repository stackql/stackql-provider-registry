openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud SQL Admin API
  description: API for Cloud SQL database instance management
  version: v1
  x-discovery-doc-revision: '20230817'
  x-generated-date: '2023-08-23'
externalDocs:
  url: 'https://developers.google.com/cloud-sql/'
servers:
  - url: 'https://sqladmin.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
            'https://www.googleapis.com/auth/sqlservice.admin': Manage your Google SQL Service instances
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    ApiWarning:
      description: An Admin API warning message.
      properties:
        message:
          type: string
          description: The warning message.
        code:
          description: Code to uniquely identify the warning type.
          enum:
            - SQL_API_WARNING_CODE_UNSPECIFIED
            - REGION_UNREACHABLE
            - MAX_RESULTS_EXCEEDS_LIMIT
          type: string
          enumDescriptions:
            - An unknown or unset warning type from Cloud SQL API.
            - Warning when one or more regions are not reachable. The returned result set may be incomplete.
            - Warning when user provided maxResults parameter exceeds the limit. The returned result set may be incomplete.
        region:
          type: string
          description: The region name for REGION_UNREACHABLE warning.
      id: ApiWarning
      type: object
    SslCertsListResponse:
      id: SslCertsListResponse
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SslCert'
          description: List of client certificates for the instance.
        kind:
          type: string
          description: This is always `sql#sslCertsList`.
      description: SslCerts list response.
      type: object
    AclEntry:
      type: object
      properties:
        value:
          type: string
          description: The allowlisted value for the access control list.
        name:
          description: Optional. A label to identify this entry.
          type: string
        kind:
          type: string
          description: This is always `sql#aclEntry`.
        expirationTime:
          description: 'The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.'
          format: google-datetime
          type: string
      id: AclEntry
      description: An entry for an Access Control list.
    SqlInstancesStartExternalSyncRequest:
      id: SqlInstancesStartExternalSyncRequest
      description: Instance start external sync request.
      properties:
        mysqlSyncConfig:
          description: MySQL-specific settings for start external sync.
          $ref: '#/components/schemas/MySqlSyncConfig'
        syncParallelLevel:
          enumDescriptions:
            - Unknown sync parallel level. Will be defaulted to OPTIMAL.
            - Minimal parallel level.
            - Optimal parallel level.
            - Maximum parallel level.
          type: string
          enum:
            - EXTERNAL_SYNC_PARALLEL_LEVEL_UNSPECIFIED
            - MIN
            - OPTIMAL
            - MAX
          description: Optional. Parallel level for initial data sync. Currently only applicable for MySQL.
        syncMode:
          type: string
          enum:
            - EXTERNAL_SYNC_MODE_UNSPECIFIED
            - ONLINE
            - OFFLINE
          description: External sync mode.
          enumDescriptions:
            - 'Unknown external sync mode, will be defaulted to ONLINE mode'
            - Online external sync will set up replication after initial data external sync
            - Offline external sync only dumps and loads a one-time snapshot of the primary instance's data
        skipVerification:
          type: boolean
          description: Whether to skip the verification step (VESS).
      type: object
    GenerateEphemeralCertResponse:
      type: object
      description: Ephemeral certificate creation request.
      id: GenerateEphemeralCertResponse
      properties:
        ephemeralCert:
          $ref: '#/components/schemas/SslCert'
          description: Generated cert
    InstancesFailoverRequest:
      type: object
      properties:
        failoverContext:
          description: Failover Context.
          $ref: '#/components/schemas/FailoverContext'
      description: Instance failover request.
      id: InstancesFailoverRequest
    OperationErrors:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/OperationError'
          type: array
          description: The list of errors encountered while processing this operation.
        kind:
          description: This is always `sql#operationErrors`.
          type: string
      id: OperationErrors
      description: Database instance operation errors list wrapper.
      type: object
    IpMapping:
      id: IpMapping
      properties:
        ipAddress:
          description: The IP address assigned.
          type: string
        type:
          enum:
            - SQL_IP_ADDRESS_TYPE_UNSPECIFIED
            - PRIMARY
            - OUTGOING
            - PRIVATE
            - MIGRATED_1ST_GEN
          description: 'The type of this IP address. A `PRIMARY` address is a public address that can accept incoming connections. A `PRIVATE` address is a private address that can accept incoming connections. An `OUTGOING` address is the source address of connections originating from the instance, if supported.'
          enumDescriptions:
            - This is an unknown IP address type.
            - IP address the customer is supposed to connect to. Usually this is the load balancer's IP address
            - Source IP address of the connection a read replica establishes to its external primary instance. This IP address can be allowlisted by the customer in case it has a firewall that filters incoming connection to its on premises primary instance.
            - Private IP used when using private IPs and network peering.
            - 'V1 IP of a migrated instance. We want the user to decommission this IP as soon as the migration is complete. Note: V1 instances with V1 ip addresses will be counted as PRIMARY.'
          type: string
        timeToRetire:
          type: string
          format: google-datetime
          description: 'The due time for this IP to be retired in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. This field is only available when the IP is scheduled to be retired.'
      type: object
      description: Database instance IP Mapping.
    DatabasesListResponse:
      properties:
        kind:
          description: This is always `sql#databasesList`.
          type: string
        items:
          items:
            $ref: '#/components/schemas/Database'
          description: List of database resources in the instance.
          type: array
      type: object
      description: Database list response.
      id: DatabasesListResponse
    DiskEncryptionConfiguration:
      type: object
      properties:
        kmsKeyName:
          type: string
          description: Resource name of KMS key for disk encryption
        kind:
          type: string
          description: This is always `sql#diskEncryptionConfiguration`.
      description: Disk encryption configuration for an instance.
      id: DiskEncryptionConfiguration
    PasswordStatus:
      description: Read-only password status.
      type: object
      properties:
        locked:
          type: boolean
          description: 'If true, user does not have login privileges.'
        passwordExpirationTime:
          format: google-datetime
          type: string
          description: The expiration time of the current password.
      id: PasswordStatus
    DemoteMasterContext:
      id: DemoteMasterContext
      properties:
        verifyGtidConsistency:
          type: boolean
          description: 'Verify the GTID consistency for demote operation. Default value: `True`. Setting this flag to `false` enables you to bypass the GTID consistency check between on-premises primary instance and Cloud SQL instance during the demotion operation but also exposes you to the risk of future replication failures. Change the value only if you know the reason for the GTID divergence and are confident that doing so will not cause any replication issues.'
        replicaConfiguration:
          $ref: '#/components/schemas/DemoteMasterConfiguration'
          description: Configuration specific to read-replicas replicating from the on-premises primary instance.
        masterInstanceName:
          description: The name of the instance which will act as on-premises primary instance in the replication setup.
          type: string
        kind:
          description: This is always `sql#demoteMasterContext`.
          type: string
        skipReplicationSetup:
          type: boolean
          description: Flag to skip replication setup on the instance.
      description: Database instance demote primary instance context.
      type: object
    InsightsConfig:
      id: InsightsConfig
      type: object
      description: Insights configuration. This specifies when Cloud SQL Insights feature is enabled and optional configuration.
      properties:
        queryStringLength:
          format: int32
          description: 'Maximum query length stored in bytes. Default value: 1024 bytes. Range: 256-4500 bytes. Query length more than this field value will be truncated to this value. When unset, query length will be the default value. Changing query length will restart the database.'
          type: integer
        recordApplicationTags:
          description: Whether Query Insights will record application tags from query when enabled.
          type: boolean
        queryInsightsEnabled:
          description: Whether Query Insights feature is enabled.
          type: boolean
        recordClientAddress:
          type: boolean
          description: Whether Query Insights will record client address when enabled.
        queryPlansPerMinute:
          description: Number of query execution plans captured by Insights per minute for all queries combined. Default is 5.
          format: int32
          type: integer
    SqlInstancesVerifyExternalSyncSettingsRequest:
      description: Instance verify external sync settings request.
      properties:
        syncMode:
          enumDescriptions:
            - 'Unknown external sync mode, will be defaulted to ONLINE mode'
            - Online external sync will set up replication after initial data external sync
            - Offline external sync only dumps and loads a one-time snapshot of the primary instance's data
          enum:
            - EXTERNAL_SYNC_MODE_UNSPECIFIED
            - ONLINE
            - OFFLINE
          type: string
          description: External sync mode
        verifyConnectionOnly:
          description: Flag to enable verifying connection only
          type: boolean
        mysqlSyncConfig:
          description: Optional. MySQL-specific settings for start external sync.
          $ref: '#/components/schemas/MySqlSyncConfig'
        verifyReplicationOnly:
          type: boolean
          description: Optional. Flag to verify settings required by replication setup only
      type: object
      id: SqlInstancesVerifyExternalSyncSettingsRequest
    ExportContext:
      properties:
        uri:
          description: 'The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form `gs://bucketName/fileName`. If the file already exists, the request succeeds, but the operation fails. If `fileType` is `SQL` and the filename ends with .gz, the contents are compressed.'
          type: string
        bakExportOptions:
          properties:
            stripeCount:
              type: integer
              format: int32
              description: 'Option for specifying how many stripes to use for the export. If blank, and the value of the striped field is true, the number of stripes is automatically chosen.'
            copyOnly:
              deprecated: true
              type: boolean
              description: 'Deprecated: copy_only is deprecated. Use differential_base instead'
            striped:
              type: boolean
              description: Whether or not the export should be striped.
            bakType:
              type: string
              enumDescriptions:
                - Default type.
                - Full backup.
                - Differential backup.
                - Transaction Log backup
              enum:
                - BAK_TYPE_UNSPECIFIED
                - FULL
                - DIFF
                - TLOG
              description: 'Type of this bak file will be export, FULL or DIFF, SQL Server only'
            differentialBase:
              description: Whether or not the backup can be used as a differential base copy_only backup can not be served as differential base
              type: boolean
          type: object
          description: Options for exporting BAK files (SQL Server-only)
        kind:
          description: This is always `sql#exportContext`.
          type: string
        fileType:
          type: string
          enumDescriptions:
            - Unknown file type.
            - File containing SQL statements.
            - File in CSV format.
            - ''
          description: The file type for the specified uri.
          enum:
            - SQL_FILE_TYPE_UNSPECIFIED
            - SQL
            - CSV
            - BAK
        sqlExportOptions:
          properties:
            schemaOnly:
              type: boolean
              description: Export only schemas.
            tables:
              description: 'Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table.'
              items:
                type: string
              type: array
            mysqlExportOptions:
              type: object
              properties:
                masterData:
                  format: int32
                  description: 'Option to include SQL statement required to set up replication. If set to `1`, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates, and --set-gtid-purged is set to ON. If set to `2`, the CHANGE MASTER TO statement is written as a SQL comment and has no effect. If set to any value other than `1`, --set-gtid-purged is set to OFF.'
                  type: integer
              description: Options for exporting from MySQL.
          type: object
          description: Options for exporting data as SQL statements.
        databases:
          type: array
          items:
            type: string
          description: 'Databases to be exported. `MySQL instances:` If `fileType` is `SQL` and no database is specified, all databases are exported, except for the `mysql` system database. If `fileType` is `CSV`, you can specify one database, either by using this property or by using the `csvExportOptions.selectQuery` property, which takes precedence over this property. `PostgreSQL instances:` You must specify one database to be exported. If `fileType` is `CSV`, this database must match the one specified in the `csvExportOptions.selectQuery` property. `SQL Server instances:` You must specify one database to be exported, and the `fileType` must be `BAK`.'
        offload:
          description: Option for export offload.
          type: boolean
        csvExportOptions:
          description: Options for exporting data as CSV. `MySQL` and `PostgreSQL` instances only.
          properties:
            fieldsTerminatedBy:
              description: Specifies the character that separates columns within each row (line) of the file.
              type: string
            escapeCharacter:
              description: Specifies the character that should appear before a data character that needs to be escaped.
              type: string
            linesTerminatedBy:
              description: 'This is used to separate lines. If a line does not contain all fields, the rest of the columns are set to their default values.'
              type: string
            quoteCharacter:
              type: string
              description: Specifies the quoting character to be used when a data value is quoted.
            selectQuery:
              description: The select query used to extract the data.
              type: string
          type: object
      type: object
      id: ExportContext
      description: Database instance export context.
    PasswordValidationPolicy:
      description: Database instance local user password validation policy
      type: object
      id: PasswordValidationPolicy
      properties:
        passwordChangeInterval:
          format: google-duration
          description: Minimum interval after which the password can be changed. This flag is only supported for PostgreSQL.
          type: string
        reuseInterval:
          description: Number of previous passwords that cannot be reused.
          format: int32
          type: integer
        complexity:
          enumDescriptions:
            - Complexity check is not specified.
            - 'A combination of lowercase, uppercase, numeric, and non-alphanumeric characters.'
          description: The complexity of the password.
          enum:
            - COMPLEXITY_UNSPECIFIED
            - COMPLEXITY_DEFAULT
          type: string
        minLength:
          format: int32
          description: Minimum number of characters allowed.
          type: integer
        enablePasswordPolicy:
          type: boolean
          description: Whether the password policy is enabled or not.
        disallowUsernameSubstring:
          description: Disallow username as a part of the password.
          type: boolean
    ImportContext:
      properties:
        database:
          type: string
          description: 'The target database for the import. If `fileType` is `SQL`, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If `fileType` is `CSV`, one database must be specified.'
        csvImportOptions:
          type: object
          properties:
            quoteCharacter:
              type: string
              description: Specifies the quoting character to be used when a data value is quoted.
            fieldsTerminatedBy:
              description: Specifies the character that separates columns within each row (line) of the file.
              type: string
            columns:
              items:
                type: string
              type: array
              description: 'The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data.'
            linesTerminatedBy:
              type: string
              description: 'This is used to separate lines. If a line does not contain all fields, the rest of the columns are set to their default values.'
            table:
              description: The table to which CSV data is imported.
              type: string
            escapeCharacter:
              description: Specifies the character that should appear before a data character that needs to be escaped.
              type: string
          description: Options for importing data as CSV.
        importUser:
          type: string
          description: The PostgreSQL user for this import operation. PostgreSQL instances only.
        uri:
          type: string
          description: 'Path to the import file in Cloud Storage, in the form `gs://bucketName/fileName`. Compressed gzip files (.gz) are supported when `fileType` is `SQL`. The instance must have write permissions to the bucket and read access to the file.'
        bakImportOptions:
          properties:
            encryptionOptions:
              properties:
                certPath:
                  type: string
                  description: 'Path to the Certificate (.cer) in Cloud Storage, in the form `gs://bucketName/fileName`. The instance must have write permissions to the bucket and read access to the file.'
                pvkPath:
                  description: 'Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form `gs://bucketName/fileName`. The instance must have write permissions to the bucket and read access to the file.'
                  type: string
                pvkPassword:
                  type: string
                  description: Password that encrypts the private key
              type: object
            noRecovery:
              type: boolean
              description: Whether or not the backup importing will restore database with NORECOVERY option Applies only to Cloud SQL for SQL Server.
            striped:
              type: boolean
              description: Whether or not the backup set being restored is striped. Applies only to Cloud SQL for SQL Server.
            recoveryOnly:
              type: boolean
              description: Whether or not the backup importing request will just bring database online without downloading Bak content only one of "no_recovery" and "recovery_only" can be true otherwise error will return. Applies only to Cloud SQL for SQL Server.
            stopAt:
              format: google-datetime
              type: string
              description: 'Optional. StopAt keyword for transaction log import, Applies to Cloud SQL for SQL Server only'
            bakType:
              enum:
                - BAK_TYPE_UNSPECIFIED
                - FULL
                - DIFF
                - TLOG
              enumDescriptions:
                - Default type.
                - Full backup.
                - Differential backup.
                - Transaction Log backup
              description: 'Type of the bak content, FULL or DIFF'
              type: string
            stopAtMark:
              type: string
              description: 'Optional. StopAtMark keyword for transaction log import, Applies to Cloud SQL for SQL Server only'
          description: Import parameters specific to SQL Server .BAK files
          type: object
        fileType:
          type: string
          description: 'The file type for the specified uri.\`SQL`: The file contains SQL statements. \`CSV`: The file contains CSV data.'
          enumDescriptions:
            - Unknown file type.
            - File containing SQL statements.
            - File in CSV format.
            - ''
          enum:
            - SQL_FILE_TYPE_UNSPECIFIED
            - SQL
            - CSV
            - BAK
        kind:
          type: string
          description: This is always `sql#importContext`.
      id: ImportContext
      description: Database instance import context.
      type: object
    OperationMetadata:
      properties:
        cancelRequested:
          readOnly: true
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
          type: boolean
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        statusDetail:
          readOnly: true
          description: 'Output only. Human-readable status of the operation, if any.'
          type: string
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
      id: OperationMetadata
      type: object
      description: Represents the metadata of the long-running operation.
    UserPasswordValidationPolicy:
      id: UserPasswordValidationPolicy
      properties:
        passwordExpirationDuration:
          description: Expiration duration after password is updated.
          format: google-duration
          type: string
        enableFailedAttemptsCheck:
          type: boolean
          description: 'If true, failed login attempts check will be enabled.'
        enablePasswordVerification:
          type: boolean
          description: 'If true, the user must specify the current password before changing the password. This flag is supported only for MySQL.'
        status:
          readOnly: true
          $ref: '#/components/schemas/PasswordStatus'
          description: Output only. Read-only password status.
        allowedFailedAttempts:
          type: integer
          format: int32
          description: Number of failed login attempts allowed before user get locked.
      type: object
      description: User level password validation policy.
    DemoteMasterConfiguration:
      description: Read-replica configuration for connecting to the on-premises primary instance.
      type: object
      id: DemoteMasterConfiguration
      properties:
        kind:
          description: This is always `sql#demoteMasterConfiguration`.
          type: string
        mysqlReplicaConfiguration:
          description: 'MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named `master.info` in the data directory.'
          $ref: '#/components/schemas/DemoteMasterMySqlReplicaConfiguration'
    DatabaseFlags:
      description: Database flags for Cloud SQL instances.
      type: object
      properties:
        value:
          type: string
          description: The value of the flag. Boolean flags are set to `on` for true and `off` for false. This field must be omitted if the flag doesn't take a value.
        name:
          type: string
          description: 'The name of the flag. These flags are passed at instance startup, so include both server options and system variables. Flags are specified with underscores, not hyphens. For more information, see [Configuring Database Flags](https://cloud.google.com/sql/docs/mysql/flags) in the Cloud SQL documentation.'
      id: DatabaseFlags
    SqlInstancesResetReplicaSizeRequest:
      id: SqlInstancesResetReplicaSizeRequest
      properties: {}
      description: Instance reset replica size request.
      type: object
    DemoteMasterMySqlReplicaConfiguration:
      properties:
        clientKey:
          description: 'PEM representation of the replica''s private key. The corresponsing public key is encoded in the client''s certificate. The format of the replica''s private key can be either PKCS #1 or PKCS #8.'
          type: string
        caCertificate:
          description: PEM representation of the trusted CA's x509 certificate.
          type: string
        password:
          description: The password for the replication connection.
          type: string
        kind:
          type: string
          description: This is always `sql#demoteMasterMysqlReplicaConfiguration`.
        clientCertificate:
          description: PEM representation of the replica's x509 certificate.
          type: string
        username:
          type: string
          description: The username for the replication connection.
      id: DemoteMasterMySqlReplicaConfiguration
      description: Read-replica configuration specific to MySQL databases.
      type: object
    OperationsListResponse:
      properties:
        kind:
          description: This is always `sql#operationsList`.
          type: string
        items:
          description: List of operation resources.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: 'The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.'
          type: string
      type: object
      description: Operations list response.
      id: OperationsListResponse
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      type: object
      properties: {}
    InstancesCloneRequest:
      id: InstancesCloneRequest
      type: object
      properties:
        cloneContext:
          description: Contains details about the clone operation.
          $ref: '#/components/schemas/CloneContext'
      description: Database instance clone request.
    InstancesReencryptRequest:
      description: Database Instance reencrypt request.
      type: object
      id: InstancesReencryptRequest
      properties:
        backupReencryptionConfig:
          description: Configuration specific to backup re-encryption
          $ref: '#/components/schemas/BackupReencryptionConfig'
    InstancesRotateServerCaRequest:
      id: InstancesRotateServerCaRequest
      description: Rotate server CA request.
      type: object
      properties:
        rotateServerCaContext:
          $ref: '#/components/schemas/RotateServerCaContext'
          description: Contains details about the rotate server CA operation.
    FlagsListResponse:
      description: Flags list response.
      properties:
        kind:
          description: This is always `sql#flagsList`.
          type: string
        items:
          type: array
          description: List of flags.
          items:
            $ref: '#/components/schemas/Flag'
      id: FlagsListResponse
      type: object
    CloneContext:
      id: CloneContext
      description: Database instance clone context.
      properties:
        binLogCoordinates:
          description: 'Binary log coordinates, if specified, identify the position up to which the source instance is cloned. If not specified, the source instance is cloned up to the most recent binary log coordinates.'
          $ref: '#/components/schemas/BinLogCoordinates'
        pointInTime:
          description: 'Timestamp, if specified, identifies the time to which the source instance is cloned.'
          type: string
          format: google-datetime
        pitrTimestampMs:
          type: string
          description: Reserved for future use.
          format: int64
        allocatedIpRange:
          description: 'The name of the allocated ip range for the private ip Cloud SQL instance. For example: "google-managed-services-default". If set, the cloned instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?. Reserved for future use.'
          type: string
        kind:
          type: string
          description: This is always `sql#cloneContext`.
        preferredZone:
          description: 'Optional. (Point-in-time recovery for PostgreSQL only) Clone to an instance in the specified zone. If no zone is specified, clone to the same zone as the source instance.'
          type: string
        databaseNames:
          items:
            type: string
          type: array
          description: (SQL Server only) Clone only the specified databases from the source instance. Clone all databases if empty.
        destinationInstanceName:
          description: Name of the Cloud SQL instance to be created as a clone.
          type: string
      type: object
    Reschedule:
      type: object
      id: Reschedule
      properties:
        rescheduleType:
          enum:
            - RESCHEDULE_TYPE_UNSPECIFIED
            - IMMEDIATE
            - NEXT_AVAILABLE_WINDOW
            - SPECIFIC_TIME
          type: string
          enumDescriptions:
            - ''
            - Reschedules maintenance to happen now (within 5 minutes).
            - Reschedules maintenance to occur within one week from the originally scheduled day and time.
            - Reschedules maintenance to a specific time and day.
          description: Required. The type of the reschedule.
        scheduleTime:
          format: google-datetime
          description: 'Optional. Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.'
          type: string
    SyncFlags:
      description: Initial sync flags for certain Cloud SQL APIs. Currently used for the MySQL external server initial dump.
      properties:
        value:
          description: The value of the flag. This field must be omitted if the flag doesn't take a value.
          type: string
        name:
          description: The name of the flag.
          type: string
      type: object
      id: SyncFlags
    RotateServerCaContext:
      id: RotateServerCaContext
      properties:
        nextVersion:
          type: string
          description: 'The fingerprint of the next version to be rotated to. If left unspecified, will be rotated to the most recently added server CA version.'
        kind:
          description: This is always `sql#rotateServerCaContext`.
          type: string
      description: Instance rotate server CA context.
      type: object
    InstanceReference:
      properties:
        name:
          description: The name of the Cloud SQL instance being referenced. This does not include the project ID.
          type: string
        project:
          description: The project ID of the Cloud SQL instance being referenced. The default is the same project ID as the instance references it.
          type: string
        region:
          description: The region of the Cloud SQL instance being referenced.
          type: string
      type: object
      description: Reference to another Cloud SQL instance.
      id: InstanceReference
    SqlServerUserDetails:
      id: SqlServerUserDetails
      description: Represents a Sql Server user on the Cloud SQL instance.
      type: object
      properties:
        serverRoles:
          description: The server roles for this user
          type: array
          items:
            type: string
        disabled:
          description: If the user has been disabled
          type: boolean
    DataCacheConfig:
      id: DataCacheConfig
      properties:
        dataCacheEnabled:
          description: Whether data cache is enabled for the instance.
          type: boolean
      description: Data cache configurations.
      type: object
    DiskEncryptionStatus:
      id: DiskEncryptionStatus
      description: Disk encryption status for an instance.
      type: object
      properties:
        kmsKeyVersionName:
          type: string
          description: KMS key version used to encrypt the Cloud SQL instance resource
        kind:
          description: This is always `sql#diskEncryptionStatus`.
          type: string
    BackupReencryptionConfig:
      type: object
      description: Backup Reencryption Config
      id: BackupReencryptionConfig
      properties:
        backupType:
          enum:
            - BACKUP_TYPE_UNSPECIFIED
            - AUTOMATED
            - ON_DEMAND
          enumDescriptions:
            - 'Unknown backup type, will be defaulted to AUTOMATIC backup type'
            - Reencrypt automatic backups
            - Reencrypt on-demand backups
          type: string
          description: Type of backups users want to re-encrypt.
        backupLimit:
          format: int32
          type: integer
          description: Backup re-encryption limit
    SqlServerAuditConfig:
      type: object
      description: SQL Server specific audit configuration.
      id: SqlServerAuditConfig
      properties:
        uploadInterval:
          description: How often to upload generated audit files.
          type: string
          format: google-duration
        bucket:
          description: 'The name of the destination bucket (e.g., gs://mybucket).'
          type: string
        retentionInterval:
          format: google-duration
          type: string
          description: How long to keep generated audit files.
        kind:
          description: This is always sql#sqlServerAuditConfig
          type: string
    SqlActiveDirectoryConfig:
      description: 'Active Directory configuration, relevant only for Cloud SQL for SQL Server.'
      properties:
        domain:
          type: string
          description: 'The name of the domain (e.g., mydomain.com).'
        kind:
          description: This is always sql#activeDirectoryConfig.
          type: string
      id: SqlActiveDirectoryConfig
      type: object
    SqlServerDatabaseDetails:
      type: object
      description: Represents a Sql Server database on the Cloud SQL instance.
      id: SqlServerDatabaseDetails
      properties:
        compatibilityLevel:
          format: int32
          type: integer
          description: The version of SQL Server with which the database is to be made compatible
        recoveryModel:
          description: The recovery model of a SQL Server database
          type: string
    TruncateLogContext:
      properties:
        logType:
          description: The type of log to truncate. Valid values are `MYSQL_GENERAL_TABLE` and `MYSQL_SLOW_TABLE`.
          type: string
        kind:
          description: This is always `sql#truncateLogContext`.
          type: string
      id: TruncateLogContext
      type: object
      description: Database Instance truncate log context.
    MaintenanceWindow:
      description: Maintenance window. This specifies when a Cloud SQL instance is restarted for system maintenance purposes.
      type: object
      id: MaintenanceWindow
      properties:
        updateTrack:
          enumDescriptions:
            - This is an unknown maintenance timing preference.
            - 'For instance update that requires a restart, this update track indicates your instance prefer to restart for new version early in maintenance window.'
            - 'For instance update that requires a restart, this update track indicates your instance prefer to let Cloud SQL choose the timing of restart (within its Maintenance window, if applicable).'
          type: string
          description: 'Maintenance timing setting: `canary` (Earlier) or `stable` (Later). [Learn more](https://cloud.google.com/sql/docs/mysql/instance-settings#maintenance-timing-2ndgen).'
          enum:
            - SQL_UPDATE_TRACK_UNSPECIFIED
            - canary
            - stable
        hour:
          type: integer
          format: int32
          description: hour of day - 0 to 23.
        day:
          description: 'day of week (1-7), starting on Monday.'
          type: integer
          format: int32
        kind:
          type: string
          description: This is always `sql#maintenanceWindow`.
    SqlInstancesVerifyExternalSyncSettingsResponse:
      type: object
      description: Instance verify external sync settings response.
      properties:
        kind:
          type: string
          description: This is always `sql#migrationSettingErrorList`.
        warnings:
          items:
            $ref: '#/components/schemas/SqlExternalSyncSettingError'
          description: List of migration warnings.
          type: array
        errors:
          description: List of migration violations.
          type: array
          items:
            $ref: '#/components/schemas/SqlExternalSyncSettingError'
      id: SqlInstancesVerifyExternalSyncSettingsResponse
    GenerateEphemeralCertRequest:
      type: object
      properties:
        access_token:
          type: string
          description: Optional. Access token to include in the signed certificate.
        readTime:
          type: string
          description: Optional. Optional snapshot read timestamp to trade freshness for performance.
          format: google-datetime
        public_key:
          description: PEM encoded public key to include in the signed certificate.
          type: string
        validDuration:
          type: string
          description: 'Optional. If set, it will contain the cert valid duration.'
          format: google-duration
      description: Ephemeral certificate creation request.
      id: GenerateEphemeralCertRequest
    InstancesListResponse:
      type: object
      id: InstancesListResponse
      description: Database instances list response.
      properties:
        items:
          items:
            $ref: '#/components/schemas/DatabaseInstance'
          description: List of database instance resources.
          type: array
        kind:
          type: string
          description: This is always `sql#instancesList`.
        warnings:
          type: array
          description: List of warnings that occurred while handling the request.
          items:
            $ref: '#/components/schemas/ApiWarning'
        nextPageToken:
          type: string
          description: 'The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.'
    Database:
      id: Database
      properties:
        charset:
          type: string
          description: The Cloud SQL charset value.
        kind:
          description: This is always `sql#database`.
          type: string
        collation:
          description: The Cloud SQL collation value.
          type: string
        instance:
          type: string
          description: The name of the Cloud SQL instance. This does not include the project ID.
        selfLink:
          description: The URI of this resource.
          type: string
        sqlserverDatabaseDetails:
          $ref: '#/components/schemas/SqlServerDatabaseDetails'
        name:
          description: The name of the database in the Cloud SQL instance. This does not include the project ID or instance name.
          type: string
        etag:
          description: This field is deprecated and will be removed from a future version of the API.
          type: string
        project:
          description: The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable.
          type: string
      description: Represents a SQL database on the Cloud SQL instance.
      type: object
    SqlExternalSyncSettingError:
      type: object
      properties:
        kind:
          description: Can be `sql#externalSyncSettingError` or `sql#externalSyncSettingWarning`.
          type: string
        detail:
          type: string
          description: Additional information about the error encountered.
        type:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - The replication user is missing privileges that are required.
            - Unsupported migration type.
            - 'No pglogical extension installed on databases, applicable for postgres.'
            - 'pglogical node already exists on databases, applicable for postgres.'
            - The value of parameter wal_level is not set to logical.
            - The value of parameter shared_preload_libraries does not include pglogical.
            - The value of parameter max_replication_slots is not sufficient.
            - The value of parameter max_wal_senders is not sufficient.
            - The value of parameter max_worker_processes is not sufficient.
            - Extensions installed are either not supported or having unsupported versions.
            - The value of parameter rds.logical_replication is not set to 1.
            - The primary instance logging setup doesn't allow EM sync.
            - The primary instance database parameter setup doesn't allow EM sync.
            - 'The gtid_mode is not supported, applicable for MySQL.'
            - SQL Server Agent is not running.
            - 'The table definition is not support due to missing primary key or replica identity, applicable for postgres.'
            - The customer has a definer that will break EM setup.
            - SQL Server @@SERVERNAME does not match actual host name.
            - The primary instance has been setup and will fail the setup.
            - The primary instance has unsupported binary log format.
            - The primary instance's binary log retention setting.
            - The primary instance has tables with unsupported storage engine.
            - 'Source has tables with limited support eg: PostgreSQL tables without primary keys.'
            - The replica instance contains existing data.
            - The replication user is missing privileges that are optional.
            - Additional BACKUP_ADMIN privilege is granted to the replication user which may lock source MySQL 8 instance for DDLs during initial sync.
            - The Cloud Storage bucket is missing necessary permissions.
            - The Cloud Storage bucket has an error in the file or contains invalid file information.
            - The source instance has unsupported database settings for migration.
            - The replication user is missing parallel import specific privileges. (e.g. LOCK TABLES) for MySQL.
          type: string
          description: Identifies the specific error that occurred.
          enum:
            - SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED
            - CONNECTION_FAILURE
            - BINLOG_NOT_ENABLED
            - INCOMPATIBLE_DATABASE_VERSION
            - REPLICA_ALREADY_SETUP
            - INSUFFICIENT_PRIVILEGE
            - UNSUPPORTED_MIGRATION_TYPE
            - NO_PGLOGICAL_INSTALLED
            - PGLOGICAL_NODE_ALREADY_EXISTS
            - INVALID_WAL_LEVEL
            - INVALID_SHARED_PRELOAD_LIBRARY
            - INSUFFICIENT_MAX_REPLICATION_SLOTS
            - INSUFFICIENT_MAX_WAL_SENDERS
            - INSUFFICIENT_MAX_WORKER_PROCESSES
            - UNSUPPORTED_EXTENSIONS
            - INVALID_RDS_LOGICAL_REPLICATION
            - INVALID_LOGGING_SETUP
            - INVALID_DB_PARAM
            - UNSUPPORTED_GTID_MODE
            - SQLSERVER_AGENT_NOT_RUNNING
            - UNSUPPORTED_TABLE_DEFINITION
            - UNSUPPORTED_DEFINER
            - SQLSERVER_SERVERNAME_MISMATCH
            - PRIMARY_ALREADY_SETUP
            - UNSUPPORTED_BINLOG_FORMAT
            - BINLOG_RETENTION_SETTING
            - UNSUPPORTED_STORAGE_ENGINE
            - LIMITED_SUPPORT_TABLES
            - EXISTING_DATA_IN_REPLICA
            - MISSING_OPTIONAL_PRIVILEGES
            - RISKY_BACKUP_ADMIN_PRIVILEGE
            - INSUFFICIENT_GCS_PERMISSIONS
            - INVALID_FILE_INFO
            - UNSUPPORTED_DATABASE_SETTINGS
            - MYSQL_PARALLEL_IMPORT_INSUFFICIENT_PRIVILEGE
      id: SqlExternalSyncSettingError
      description: External primary instance migration setting error/warning.
    AdvancedMachineFeatures:
      id: AdvancedMachineFeatures
      type: object
      properties:
        threadsPerCore:
          description: The number of threads per physical core.
          type: integer
          format: int32
      description: Specifies options for controlling advanced machine features.
    SslCertsCreateEphemeralRequest:
      description: SslCerts create ephemeral certificate request.
      properties:
        access_token:
          type: string
          description: Access token to include in the signed certificate.
        public_key:
          type: string
          description: PEM encoded public key to include in the signed certificate.
      id: SslCertsCreateEphemeralRequest
      type: object
    PerformDiskShrinkContext:
      description: Perform disk shrink context.
      id: PerformDiskShrinkContext
      type: object
      properties:
        targetSizeGb:
          type: string
          format: int64
          description: The target disk shrink size in GigaBytes.
    InstancesExportRequest:
      properties:
        exportContext:
          $ref: '#/components/schemas/ExportContext'
          description: Contains details about the export operation.
      type: object
      id: InstancesExportRequest
      description: Database instance export request.
    ConnectSettings:
      type: object
      id: ConnectSettings
      properties:
        pscEnabled:
          description: Whether PSC connectivity is enabled for this instance.
          type: boolean
        region:
          description: 'The cloud region for the instance. For example, `us-central1`, `europe-west1`. The region cannot be changed after instance creation.'
          type: string
        ipAddresses:
          description: The assigned IP addresses for the instance.
          items:
            $ref: '#/components/schemas/IpMapping'
          type: array
        kind:
          description: This is always `sql#connectSettings`.
          type: string
        databaseVersion:
          type: string
          enumDescriptions:
            - This is an unknown database version.
            - The database version is MySQL 5.1.
            - The database version is MySQL 5.5.
            - The database version is MySQL 5.6.
            - The database version is MySQL 5.7.
            - The database version is SQL Server 2017 Standard.
            - The database version is SQL Server 2017 Enterprise.
            - The database version is SQL Server 2017 Express.
            - The database version is SQL Server 2017 Web.
            - The database version is PostgreSQL 9.6.
            - The database version is PostgreSQL 10.
            - The database version is PostgreSQL 11.
            - The database version is PostgreSQL 12.
            - The database version is PostgreSQL 13.
            - The database version is PostgreSQL 14.
            - The database version is PostgreSQL 15.
            - The database version is MySQL 8.
            - The database major version is MySQL 8.0 and the minor version is 18.
            - The database major version is MySQL 8.0 and the minor version is 26.
            - The database major version is MySQL 8.0 and the minor version is 27.
            - The database major version is MySQL 8.0 and the minor version is 28.
            - The database major version is MySQL 8.0 and the minor version is 29.
            - The database major version is MySQL 8.0 and the minor version is 30.
            - The database major version is MySQL 8.0 and the minor version is 31.
            - The database major version is MySQL 8.0 and the minor version is 32.
            - The database major version is MySQL 8.0 and the minor version is 33.
            - The database major version is MySQL 8.0 and the minor version is 34.
            - The database major version is MySQL 8.0 and the minor version is 35.
            - The database major version is MySQL 8.0 and the minor version is 36.
            - The database version is SQL Server 2019 Standard.
            - The database version is SQL Server 2019 Enterprise.
            - The database version is SQL Server 2019 Express.
            - The database version is SQL Server 2019 Web.
            - The database version is SQL Server 2022 Standard.
            - The database version is SQL Server 2022 Enterprise.
            - The database version is SQL Server 2022 Express.
            - The database version is SQL Server 2022 Web.
          description: 'The database engine type and version. The `databaseVersion` field cannot be changed after instance creation. MySQL instances: `MYSQL_8_0`, `MYSQL_5_7` (default), or `MYSQL_5_6`. PostgreSQL instances: `POSTGRES_9_6`, `POSTGRES_10`, `POSTGRES_11`, `POSTGRES_12` (default), `POSTGRES_13`, or `POSTGRES_14`. SQL Server instances: `SQLSERVER_2017_STANDARD` (default), `SQLSERVER_2017_ENTERPRISE`, `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`, `SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`, or `SQLSERVER_2019_WEB`.'
          enumDeprecated:
            - false
            - true
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
          enum:
            - SQL_DATABASE_VERSION_UNSPECIFIED
            - MYSQL_5_1
            - MYSQL_5_5
            - MYSQL_5_6
            - MYSQL_5_7
            - SQLSERVER_2017_STANDARD
            - SQLSERVER_2017_ENTERPRISE
            - SQLSERVER_2017_EXPRESS
            - SQLSERVER_2017_WEB
            - POSTGRES_9_6
            - POSTGRES_10
            - POSTGRES_11
            - POSTGRES_12
            - POSTGRES_13
            - POSTGRES_14
            - POSTGRES_15
            - MYSQL_8_0
            - MYSQL_8_0_18
            - MYSQL_8_0_26
            - MYSQL_8_0_27
            - MYSQL_8_0_28
            - MYSQL_8_0_29
            - MYSQL_8_0_30
            - MYSQL_8_0_31
            - MYSQL_8_0_32
            - MYSQL_8_0_33
            - MYSQL_8_0_34
            - MYSQL_8_0_35
            - MYSQL_8_0_36
            - SQLSERVER_2019_STANDARD
            - SQLSERVER_2019_ENTERPRISE
            - SQLSERVER_2019_EXPRESS
            - SQLSERVER_2019_WEB
            - SQLSERVER_2022_STANDARD
            - SQLSERVER_2022_ENTERPRISE
            - SQLSERVER_2022_EXPRESS
            - SQLSERVER_2022_WEB
        dnsName:
          type: string
          description: The dns name of the instance.
        serverCaCert:
          description: SSL configuration.
          $ref: '#/components/schemas/SslCert'
        backendType:
          enumDescriptions:
            - This is an unknown backend type for instance.
            - V1 speckle instance.
            - V2 speckle instance.
            - On premises instance.
          description: '`SECOND_GEN`: Cloud SQL database instance. `EXTERNAL`: A database server that is not managed by Google. This property is read-only; use the `tier` property in the `settings` object to determine the database type.'
          enumDeprecated:
            - false
            - true
            - false
            - false
          type: string
          enum:
            - SQL_BACKEND_TYPE_UNSPECIFIED
            - FIRST_GEN
            - SECOND_GEN
            - EXTERNAL
      description: Connect settings retrieval response.
    SqlInstancesRescheduleMaintenanceRequestBody:
      properties:
        reschedule:
          description: Required. The type of the reschedule the user wants.
          $ref: '#/components/schemas/Reschedule'
      id: SqlInstancesRescheduleMaintenanceRequestBody
      description: Reschedule options for maintenance windows.
      type: object
    SslCertsInsertResponse:
      type: object
      id: SslCertsInsertResponse
      description: SslCert insert response.
      properties:
        serverCaCert:
          $ref: '#/components/schemas/SslCert'
          description: The server Certificate Authority's certificate. If this is missing you can force a new one to be generated by calling resetSslConfig method on instances resource.
        clientCert:
          $ref: '#/components/schemas/SslCertDetail'
          description: The new client certificate and private key.
        kind:
          description: This is always `sql#sslCertsInsert`.
          type: string
        operation:
          description: The operation to track the ssl certs insert request.
          $ref: '#/components/schemas/Operation'
    OnPremisesConfiguration:
      properties:
        password:
          description: The password for connecting to on-premises instance.
          type: string
        clientKey:
          description: PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.
          type: string
        clientCertificate:
          type: string
          description: PEM representation of the replica's x509 certificate.
        kind:
          type: string
          description: This is always `sql#onPremisesConfiguration`.
        caCertificate:
          type: string
          description: PEM representation of the trusted CA's x509 certificate.
        sourceInstance:
          description: The reference to Cloud SQL instance if the source is Cloud SQL.
          $ref: '#/components/schemas/InstanceReference'
        username:
          type: string
          description: The username for connecting to on-premises instance.
        dumpFilePath:
          type: string
          description: The dump file to create the Cloud SQL replica.
        hostPort:
          description: 'The host and port of the on-premises instance in host:port format'
          type: string
      type: object
      description: On-premises instance configuration.
      id: OnPremisesConfiguration
    Settings:
      description: Database instance settings.
      id: Settings
      properties:
        replicationType:
          enumDescriptions:
            - This is an unknown replication type for a Cloud SQL instance.
            - The synchronous replication mode for First Generation instances. It is the default value.
            - 'The asynchronous replication mode for First Generation instances. It provides a slight performance gain, but if an outage occurs while this option is set to asynchronous, you can lose up to a few seconds of updates to your data.'
          enum:
            - SQL_REPLICATION_TYPE_UNSPECIFIED
            - SYNCHRONOUS
            - ASYNCHRONOUS
          deprecated: true
          description: The type of replication this instance uses. This can be either `ASYNCHRONOUS` or `SYNCHRONOUS`. (Deprecated) This property was only applicable to First Generation instances.
          type: string
        insightsConfig:
          $ref: '#/components/schemas/InsightsConfig'
          description: 'Insights configuration, for now relevant only for Postgres.'
        pricingPlan:
          enum:
            - SQL_PRICING_PLAN_UNSPECIFIED
            - PACKAGE
            - PER_USE
          description: The pricing plan for this instance. This can be either `PER_USE` or `PACKAGE`. Only `PER_USE` is supported for Second Generation instances.
          type: string
          enumDescriptions:
            - This is an unknown pricing plan for this instance.
            - The instance is billed at a monthly flat rate.
            - The instance is billed per usage.
        crashSafeReplicationEnabled:
          type: boolean
          deprecated: true
          description: Configuration specific to read replica instances. Indicates whether database flags for crash-safe replication are enabled. This property was only applicable to First Generation instances.
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow'
          description: The maintenance window for this instance. This specifies when the instance can be restarted for maintenance purposes.
        dataCacheConfig:
          $ref: '#/components/schemas/DataCacheConfig'
          description: Configuration for data cache.
        backupConfiguration:
          description: The daily backup configuration for the instance.
          $ref: '#/components/schemas/BackupConfiguration'
        availabilityType:
          enumDescriptions:
            - This is an unknown Availability type.
            - Zonal available instance.
            - Regional available instance.
          type: string
          description: 'Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data accessibility. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available)./ For more information, see [Overview of the High Availability Configuration](https://cloud.google.com/sql/docs/mysql/high-availability).'
          enum:
            - SQL_AVAILABILITY_TYPE_UNSPECIFIED
            - ZONAL
            - REGIONAL
        advancedMachineFeatures:
          description: Specifies advance machine configuration for the instance relevant only for SQL Server.
          $ref: '#/components/schemas/AdvancedMachineFeatures'
        locationPreference:
          $ref: '#/components/schemas/LocationPreference'
          description: The location preference settings. This allows the instance to be located as near as possible to either an App Engine app or Compute Engine zone for better performance. App Engine co-location was only applicable to First Generation instances.
        settingsVersion:
          format: int64
          description: 'The version of instance settings. This is a required field for update method to make sure concurrent updates are handled properly. During update, use the most recent settingsVersion value for this instance and do not try to update this value.'
          type: string
        databaseFlags:
          items:
            $ref: '#/components/schemas/DatabaseFlags'
          description: The database flags passed to the instance at startup.
          type: array
        sqlServerAuditConfig:
          $ref: '#/components/schemas/SqlServerAuditConfig'
          description: SQL Server specific audit configuration.
        databaseReplicationEnabled:
          type: boolean
          description: 'Configuration specific to read replica instances. Indicates whether replication is enabled or not. WARNING: Changing this restarts the instance.'
        timeZone:
          type: string
          description: 'Server timezone, relevant only for Cloud SQL for SQL Server.'
        storageAutoResize:
          description: Configuration to increase storage size automatically. The default value is true.
          type: boolean
        denyMaintenancePeriods:
          description: Deny maintenance periods
          type: array
          items:
            $ref: '#/components/schemas/DenyMaintenancePeriod'
        userLabels:
          additionalProperties:
            type: string
          type: object
          description: 'User-provided labels, represented as a dictionary where each label is a single key value pair.'
        tier:
          type: string
          description: 'The tier (or machine type) for this instance, for example `db-custom-1-3840`. WARNING: Changing this restarts the instance.'
        connectorEnforcement:
          enum:
            - CONNECTOR_ENFORCEMENT_UNSPECIFIED
            - NOT_REQUIRED
            - REQUIRED
          enumDescriptions:
            - The requirement for Cloud SQL connectors is unknown.
            - Do not require Cloud SQL connectors.
            - 'Require all connections to use Cloud SQL connectors, including the Cloud SQL Auth Proxy and Cloud SQL Java, Python, and Go connectors. Note: This disables all existing authorized networks.'
          description: 'Specifies if connections must use Cloud SQL connectors. Option values include the following: `NOT_REQUIRED` (Cloud SQL instances can be connected without Cloud SQL Connectors) and `REQUIRED` (Only allow connections that use Cloud SQL Connectors). Note that using REQUIRED disables all existing authorized networks. If this field is not specified when creating a new instance, NOT_REQUIRED is used. If this field is not specified when patching or updating an existing instance, it is left unchanged in the instance.'
          type: string
        edition:
          type: string
          description: Optional. The edition of the instance.
          enum:
            - EDITION_UNSPECIFIED
            - ENTERPRISE
            - ENTERPRISE_PLUS
          enumDescriptions:
            - The instance did not specify the edition.
            - The instance is an enterprise edition.
            - The instance is an Enterprise Plus edition.
        passwordValidationPolicy:
          $ref: '#/components/schemas/PasswordValidationPolicy'
          description: The local user password validation policy of the instance.
        authorizedGaeApplications:
          deprecated: true
          description: The App Engine app IDs that can access this instance. (Deprecated) Applied to First Generation instances only.
          items:
            type: string
          type: array
        dataDiskType:
          type: string
          enumDescriptions:
            - This is an unknown data disk type.
            - An SSD data disk.
            - An HDD data disk.
            - This field is deprecated and will be removed from a future version of the API.
          description: 'The type of data disk: `PD_SSD` (default) or `PD_HDD`. Not used for First Generation instances.'
          enum:
            - SQL_DATA_DISK_TYPE_UNSPECIFIED
            - PD_SSD
            - PD_HDD
            - OBSOLETE_LOCAL_SSD
          enumDeprecated:
            - false
            - false
            - false
            - true
        deletionProtectionEnabled:
          description: Configuration to protect against accidental instance deletion.
          type: boolean
        activeDirectoryConfig:
          $ref: '#/components/schemas/SqlActiveDirectoryConfig'
          description: 'Active Directory configuration, relevant only for Cloud SQL for SQL Server.'
        collation:
          description: The name of server Instance collation.
          type: string
        activationPolicy:
          enumDeprecated:
            - false
            - false
            - false
            - true
          enumDescriptions:
            - Unknown activation plan.
            - The instance is always up and running.
            - The instance never starts.
            - The instance starts upon receiving requests.
          description: 'The activation policy specifies when the instance is activated; it is applicable only when the instance state is RUNNABLE. Valid values: * `ALWAYS`: The instance is on, and remains so even in the absence of connection requests. * `NEVER`: The instance is off; it is not activated, even if a connection request arrives.'
          enum:
            - SQL_ACTIVATION_POLICY_UNSPECIFIED
            - ALWAYS
            - NEVER
            - ON_DEMAND
          type: string
        storageAutoResizeLimit:
          format: int64
          type: string
          description: 'The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.'
        ipConfiguration:
          $ref: '#/components/schemas/IpConfiguration'
          description: The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled for Second Generation instances.
        kind:
          type: string
          description: This is always `sql#settings`.
        dataDiskSizeGb:
          description: 'The size of data disk, in GB. The data disk size minimum is 10GB.'
          format: int64
          type: string
      type: object
    BinLogCoordinates:
      id: BinLogCoordinates
      type: object
      properties:
        binLogFileName:
          description: Name of the binary log file for a Cloud SQL instance.
          type: string
        binLogPosition:
          format: int64
          description: Position (offset) within the binary log file.
          type: string
        kind:
          description: This is always `sql#binLogCoordinates`.
          type: string
      description: Binary log coordinates.
    IpConfiguration:
      type: object
      id: IpConfiguration
      properties:
        ipv4Enabled:
          description: Whether the instance is assigned a public IP address or not.
          type: boolean
        enablePrivatePathForGoogleCloudServices:
          description: 'Controls connectivity to private IP instances from Google services, such as BigQuery.'
          type: boolean
        privateNetwork:
          type: string
          description: 'The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `/projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set.'
        allocatedIpRange:
          type: string
          description: 'The name of the allocated ip range for the private ip Cloud SQL instance. For example: "google-managed-services-default". If set, the instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?.`'
        pscConfig:
          description: PSC settings for this instance.
          $ref: '#/components/schemas/PscConfig'
        authorizedNetworks:
          items:
            $ref: '#/components/schemas/AclEntry'
          description: 'The list of external networks that are allowed to connect to the instance using the IP. In ''CIDR'' notation, also known as ''slash'' notation (for example: `157.197.200.0/24`).'
          type: array
        requireSsl:
          description: Whether SSL connections over IP are enforced or not.
          type: boolean
      description: IP Management configuration.
    InstancesImportRequest:
      id: InstancesImportRequest
      properties:
        importContext:
          description: Contains details about the import operation.
          $ref: '#/components/schemas/ImportContext'
      description: Database instance import request.
      type: object
    LocationPreference:
      properties:
        followGaeApplication:
          description: 'The App Engine application to follow, it must be in the same region as the Cloud SQL instance. WARNING: Changing this might restart the instance.'
          deprecated: true
          type: string
        kind:
          type: string
          description: This is always `sql#locationPreference`.
        zone:
          type: string
          description: 'The preferred Compute Engine zone (for example: us-central1-a, us-central1-b, etc.). WARNING: Changing this might restart the instance.'
        secondaryZone:
          type: string
          description: 'The preferred Compute Engine zone for the secondary/failover (for example: us-central1-a, us-central1-b, etc.).'
      id: LocationPreference
      type: object
      description: 'Preferred location. This specifies where a Cloud SQL instance is located. Note that if the preferred location is not available, the instance will be located as close as possible within the region. Only one location may be specified.'
    Flag:
      id: Flag
      description: A flag resource.
      properties:
        kind:
          description: This is always `sql#flag`.
          type: string
        allowedIntValues:
          description: Use this field if only certain integers are accepted. Can be combined with min_value and max_value to add additional values.
          items:
            type: string
            format: int64
          type: array
        name:
          description: 'This is the name of the flag. Flag names always use underscores, not hyphens, for example: `max_allowed_packet`'
          type: string
        requiresRestart:
          type: boolean
          description: Indicates whether changing this flag will trigger a database restart. Only applicable to Second Generation instances.
        maxValue:
          type: string
          description: 'For `INTEGER` flags, the maximum allowed value.'
          format: int64
        inBeta:
          description: Whether or not the flag is considered in beta.
          type: boolean
        allowedStringValues:
          description: 'For `STRING` flags, a list of strings that the value can be set to.'
          items:
            type: string
          type: array
        type:
          enumDescriptions:
            - This is an unknown flag type.
            - Boolean type flag.
            - String type flag.
            - Integer type flag.
            - Flag type used for a server startup option.
            - 'Type introduced specially for MySQL TimeZone offset. Accept a string value with the format [-12:59, 13:00].'
            - Float type flag.
            - Comma-separated list of the strings in a SqlFlagType enum.
          type: string
          enum:
            - SQL_FLAG_TYPE_UNSPECIFIED
            - BOOLEAN
            - STRING
            - INTEGER
            - NONE
            - MYSQL_TIMEZONE_OFFSET
            - FLOAT
            - REPEATED_STRING
          description: 'The type of the flag. Flags are typed to being `BOOLEAN`, `STRING`, `INTEGER` or `NONE`. `NONE` is used for flags that do not take a value, such as `skip_grant_tables`.'
        appliesTo:
          type: array
          description: 'The database version this flag applies to. Can be MySQL instances: `MYSQL_8_0`, `MYSQL_8_0_18`, `MYSQL_8_0_26`, `MYSQL_5_7`, or `MYSQL_5_6`. PostgreSQL instances: `POSTGRES_9_6`, `POSTGRES_10`, `POSTGRES_11` or `POSTGRES_12`. SQL Server instances: `SQLSERVER_2017_STANDARD`, `SQLSERVER_2017_ENTERPRISE`, `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`, `SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`, or `SQLSERVER_2019_WEB`. See [the complete list](/sql/docs/mysql/admin-api/rest/v1/SqlDatabaseVersion).'
          items:
            type: string
            enum:
              - SQL_DATABASE_VERSION_UNSPECIFIED
              - MYSQL_5_1
              - MYSQL_5_5
              - MYSQL_5_6
              - MYSQL_5_7
              - SQLSERVER_2017_STANDARD
              - SQLSERVER_2017_ENTERPRISE
              - SQLSERVER_2017_EXPRESS
              - SQLSERVER_2017_WEB
              - POSTGRES_9_6
              - POSTGRES_10
              - POSTGRES_11
              - POSTGRES_12
              - POSTGRES_13
              - POSTGRES_14
              - POSTGRES_15
              - MYSQL_8_0
              - MYSQL_8_0_18
              - MYSQL_8_0_26
              - MYSQL_8_0_27
              - MYSQL_8_0_28
              - MYSQL_8_0_29
              - MYSQL_8_0_30
              - MYSQL_8_0_31
              - MYSQL_8_0_32
              - MYSQL_8_0_33
              - MYSQL_8_0_34
              - MYSQL_8_0_35
              - MYSQL_8_0_36
              - SQLSERVER_2019_STANDARD
              - SQLSERVER_2019_ENTERPRISE
              - SQLSERVER_2019_EXPRESS
              - SQLSERVER_2019_WEB
              - SQLSERVER_2022_STANDARD
              - SQLSERVER_2022_ENTERPRISE
              - SQLSERVER_2022_EXPRESS
              - SQLSERVER_2022_WEB
            enumDescriptions:
              - This is an unknown database version.
              - The database version is MySQL 5.1.
              - The database version is MySQL 5.5.
              - The database version is MySQL 5.6.
              - The database version is MySQL 5.7.
              - The database version is SQL Server 2017 Standard.
              - The database version is SQL Server 2017 Enterprise.
              - The database version is SQL Server 2017 Express.
              - The database version is SQL Server 2017 Web.
              - The database version is PostgreSQL 9.6.
              - The database version is PostgreSQL 10.
              - The database version is PostgreSQL 11.
              - The database version is PostgreSQL 12.
              - The database version is PostgreSQL 13.
              - The database version is PostgreSQL 14.
              - The database version is PostgreSQL 15.
              - The database version is MySQL 8.
              - The database major version is MySQL 8.0 and the minor version is 18.
              - The database major version is MySQL 8.0 and the minor version is 26.
              - The database major version is MySQL 8.0 and the minor version is 27.
              - The database major version is MySQL 8.0 and the minor version is 28.
              - The database major version is MySQL 8.0 and the minor version is 29.
              - The database major version is MySQL 8.0 and the minor version is 30.
              - The database major version is MySQL 8.0 and the minor version is 31.
              - The database major version is MySQL 8.0 and the minor version is 32.
              - The database major version is MySQL 8.0 and the minor version is 33.
              - The database major version is MySQL 8.0 and the minor version is 34.
              - The database major version is MySQL 8.0 and the minor version is 35.
              - The database major version is MySQL 8.0 and the minor version is 36.
              - The database version is SQL Server 2019 Standard.
              - The database version is SQL Server 2019 Enterprise.
              - The database version is SQL Server 2019 Express.
              - The database version is SQL Server 2019 Web.
              - The database version is SQL Server 2022 Standard.
              - The database version is SQL Server 2022 Enterprise.
              - The database version is SQL Server 2022 Express.
              - The database version is SQL Server 2022 Web.
            enumDeprecated:
              - false
              - true
              - true
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - true
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
              - false
        minValue:
          description: 'For `INTEGER` flags, the minimum allowed value.'
          type: string
          format: int64
      type: object
    DatabaseInstance:
      type: object
      id: DatabaseInstance
      description: A Cloud SQL instance resource.
      properties:
        scheduledMaintenance:
          $ref: '#/components/schemas/SqlScheduledMaintenance'
          description: The start time of any upcoming scheduled maintenance for this instance.
        instanceType:
          type: string
          description: The instance type.
          enum:
            - SQL_INSTANCE_TYPE_UNSPECIFIED
            - CLOUD_SQL_INSTANCE
            - ON_PREMISES_INSTANCE
            - READ_REPLICA_INSTANCE
          enumDescriptions:
            - This is an unknown Cloud SQL instance type.
            - A regular Cloud SQL instance that is not replicating from a primary instance.
            - An instance running on the customer's premises that is not managed by Cloud SQL.
            - A Cloud SQL instance acting as a read-replica.
        pscServiceAttachmentLink:
          type: string
          readOnly: true
          description: Output only. The link to service attachment of PSC instance.
        settings:
          $ref: '#/components/schemas/Settings'
          description: The user settings.
        replicaConfiguration:
          $ref: '#/components/schemas/ReplicaConfiguration'
          description: Configuration specific to failover replicas and read replicas.
        masterInstanceName:
          type: string
          description: The name of the instance which will act as primary in the replication setup.
        maxDiskSize:
          type: string
          format: int64
          description: The maximum disk size of the instance in bytes.
          deprecated: true
        satisfiesPzs:
          description: The status indicating if instance satisfiesPzs. Reserved for future use.
          type: boolean
        region:
          type: string
          description: 'The geographical region. Can be: * `us-central` (`FIRST_GEN` instances only) * `us-central1` (`SECOND_GEN` instances only) * `asia-east1` or `europe-west1`. Defaults to `us-central` or `us-central1` depending on the instance type. The region cannot be changed after instance creation.'
        outOfDiskReport:
          description: 'This field represents the report generated by the proactive database wellness job for OutOfDisk issues. * Writers: * the proactive database wellness job for OOD. * Readers: * the proactive database wellness job'
          $ref: '#/components/schemas/SqlOutOfDiskReport'
        diskEncryptionStatus:
          $ref: '#/components/schemas/DiskEncryptionStatus'
          description: Disk encryption status specific to an instance.
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: 'Output only. The time when the instance was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.'
        kind:
          description: This is always `sql#instance`.
          type: string
        dnsName:
          readOnly: true
          description: Output only. The dns name of the instance.
          type: string
        ipAddresses:
          type: array
          items:
            $ref: '#/components/schemas/IpMapping'
          description: The assigned IP addresses for the instance.
        databaseInstalledVersion:
          type: string
          readOnly: true
          description: Output only. Stores the current database version running on the instance including minor version such as `MYSQL_8_0_18`.
        backendType:
          enum:
            - SQL_BACKEND_TYPE_UNSPECIFIED
            - FIRST_GEN
            - SECOND_GEN
            - EXTERNAL
          type: string
          description: 'The backend type. `SECOND_GEN`: Cloud SQL database instance. `EXTERNAL`: A database server that is not managed by Google. This property is read-only; use the `tier` property in the `settings` object to determine the database type.'
          enumDeprecated:
            - false
            - true
            - false
            - false
          enumDescriptions:
            - This is an unknown backend type for instance.
            - V1 speckle instance.
            - V2 speckle instance.
            - On premises instance.
        serverCaCert:
          description: SSL configuration.
          $ref: '#/components/schemas/SslCert'
        ipv6Address:
          type: string
          deprecated: true
          description: The IPv6 address assigned to the instance. (Deprecated) This property was applicable only to First Generation instances.
        diskEncryptionConfiguration:
          $ref: '#/components/schemas/DiskEncryptionConfiguration'
          description: Disk encryption configuration specific to an instance.
        maintenanceVersion:
          description: The current software version on the instance.
          type: string
        serviceAccountEmailAddress:
          type: string
          description: The service account email address assigned to the instance.\This property is read-only.
        currentDiskSize:
          format: int64
          type: string
          deprecated: true
          description: 'The current disk usage of the instance in bytes. This property has been deprecated. Use the "cloudsql.googleapis.com/database/disk/bytes_used" metric in Cloud Monitoring API instead. Please see [this announcement](https://groups.google.com/d/msg/google-cloud-sql-announce/I_7-F9EBhT0/BtvFtdFeAgAJ) for details.'
        onPremisesConfiguration:
          $ref: '#/components/schemas/OnPremisesConfiguration'
          description: Configuration specific to on-premises instances.
        gceZone:
          description: 'The Compute Engine zone that the instance is currently serving from. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary zone. WARNING: Changing this might restart the instance.'
          type: string
        rootPassword:
          description: Initial root password. Use only on creation. You must set root passwords before you can connect to PostgreSQL instances.
          type: string
        suspensionReason:
          items:
            enum:
              - SQL_SUSPENSION_REASON_UNSPECIFIED
              - BILLING_ISSUE
              - LEGAL_ISSUE
              - OPERATIONAL_ISSUE
              - KMS_KEY_ISSUE
            type: string
            enumDescriptions:
              - This is an unknown suspension reason.
              - 'The instance is suspended due to billing issues (for example:, GCP account issue)'
              - 'The instance is suspended due to illegal content (for example:, child pornography, copyrighted material, etc.).'
              - 'The instance is causing operational issues (for example:, causing the database to crash).'
              - The KMS key used by the instance is either revoked or denied access to
          description: 'If the instance state is SUSPENDED, the reason for the suspension.'
          type: array
        project:
          type: string
          description: The project ID of the project containing the Cloud SQL instance. The Google apps domain is prefixed if applicable.
        databaseVersion:
          enumDescriptions:
            - This is an unknown database version.
            - The database version is MySQL 5.1.
            - The database version is MySQL 5.5.
            - The database version is MySQL 5.6.
            - The database version is MySQL 5.7.
            - The database version is SQL Server 2017 Standard.
            - The database version is SQL Server 2017 Enterprise.
            - The database version is SQL Server 2017 Express.
            - The database version is SQL Server 2017 Web.
            - The database version is PostgreSQL 9.6.
            - The database version is PostgreSQL 10.
            - The database version is PostgreSQL 11.
            - The database version is PostgreSQL 12.
            - The database version is PostgreSQL 13.
            - The database version is PostgreSQL 14.
            - The database version is PostgreSQL 15.
            - The database version is MySQL 8.
            - The database major version is MySQL 8.0 and the minor version is 18.
            - The database major version is MySQL 8.0 and the minor version is 26.
            - The database major version is MySQL 8.0 and the minor version is 27.
            - The database major version is MySQL 8.0 and the minor version is 28.
            - The database major version is MySQL 8.0 and the minor version is 29.
            - The database major version is MySQL 8.0 and the minor version is 30.
            - The database major version is MySQL 8.0 and the minor version is 31.
            - The database major version is MySQL 8.0 and the minor version is 32.
            - The database major version is MySQL 8.0 and the minor version is 33.
            - The database major version is MySQL 8.0 and the minor version is 34.
            - The database major version is MySQL 8.0 and the minor version is 35.
            - The database major version is MySQL 8.0 and the minor version is 36.
            - The database version is SQL Server 2019 Standard.
            - The database version is SQL Server 2019 Enterprise.
            - The database version is SQL Server 2019 Express.
            - The database version is SQL Server 2019 Web.
            - The database version is SQL Server 2022 Standard.
            - The database version is SQL Server 2022 Enterprise.
            - The database version is SQL Server 2022 Express.
            - The database version is SQL Server 2022 Web.
          type: string
          description: The database engine type and version. The `databaseVersion` field cannot be changed after instance creation.
          enum:
            - SQL_DATABASE_VERSION_UNSPECIFIED
            - MYSQL_5_1
            - MYSQL_5_5
            - MYSQL_5_6
            - MYSQL_5_7
            - SQLSERVER_2017_STANDARD
            - SQLSERVER_2017_ENTERPRISE
            - SQLSERVER_2017_EXPRESS
            - SQLSERVER_2017_WEB
            - POSTGRES_9_6
            - POSTGRES_10
            - POSTGRES_11
            - POSTGRES_12
            - POSTGRES_13
            - POSTGRES_14
            - POSTGRES_15
            - MYSQL_8_0
            - MYSQL_8_0_18
            - MYSQL_8_0_26
            - MYSQL_8_0_27
            - MYSQL_8_0_28
            - MYSQL_8_0_29
            - MYSQL_8_0_30
            - MYSQL_8_0_31
            - MYSQL_8_0_32
            - MYSQL_8_0_33
            - MYSQL_8_0_34
            - MYSQL_8_0_35
            - MYSQL_8_0_36
            - SQLSERVER_2019_STANDARD
            - SQLSERVER_2019_ENTERPRISE
            - SQLSERVER_2019_EXPRESS
            - SQLSERVER_2019_WEB
            - SQLSERVER_2022_STANDARD
            - SQLSERVER_2022_ENTERPRISE
            - SQLSERVER_2022_EXPRESS
            - SQLSERVER_2022_WEB
          enumDeprecated:
            - false
            - true
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
        failoverReplica:
          type: object
          properties:
            available:
              type: boolean
              description: The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The primary instance can only failover to the failover replica when the status is true.
            name:
              type: string
              description: 'The name of the failover replica. If specified at instance creation, a failover replica is created for the instance. The name doesn''t include the project ID.'
          description: The name and status of the failover replica.
        etag:
          description: This field is deprecated and will be removed from a future version of the API. Use the `settings.settingsVersion` field instead.
          type: string
        replicaNames:
          description: The replicas of the instance.
          items:
            type: string
          type: array
        state:
          enum:
            - SQL_INSTANCE_STATE_UNSPECIFIED
            - RUNNABLE
            - SUSPENDED
            - PENDING_DELETE
            - PENDING_CREATE
            - MAINTENANCE
            - FAILED
            - ONLINE_MAINTENANCE
          enumDescriptions:
            - The state of the instance is unknown.
            - 'The instance is running, or has been stopped by owner.'
            - 'The instance is not available, for example due to problems with billing.'
            - The instance is being deleted.
            - The instance is being created.
            - The instance is down for maintenance.
            - The creation of the instance failed or a fatal error occurred during maintenance.
            - Deprecated
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
          description: The current serving state of the Cloud SQL instance.
          type: string
        connectionName:
          description: Connection name of the Cloud SQL instance used in connection strings.
          type: string
        availableMaintenanceVersions:
          description: Output only. List all maintenance versions applicable on the instance
          items:
            type: string
          type: array
          readOnly: true
        secondaryGceZone:
          type: string
          description: The Compute Engine zone that the failover instance is currently serving from for a regional instance. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary/failover zone.
        name:
          type: string
          description: Name of the Cloud SQL instance. This does not include the project ID.
        selfLink:
          type: string
          description: The URI of this resource.
    OperationError:
      type: object
      id: OperationError
      properties:
        code:
          type: string
          description: Identifies the specific error that occurred.
        message:
          description: Additional information about the error encountered.
          type: string
        kind:
          description: This is always `sql#operationError`.
          type: string
      description: Database instance operation error.
    PscConfig:
      description: PSC settings for a Cloud SQL instance.
      properties:
        allowedConsumerProjects:
          type: array
          items:
            type: string
          description: List of consumer projects that are allow-listed for PSC connections to this instance. This instance can be connected to with PSC from any network in these projects. Each consumer project in this list may be represented by a project number (numeric) or by a project id (alphanumeric).
        pscEnabled:
          description: Whether PSC connectivity is enabled for this instance.
          type: boolean
      type: object
      id: PscConfig
    BackupRunsListResponse:
      description: Backup run list results.
      id: BackupRunsListResponse
      type: object
      properties:
        kind:
          type: string
          description: This is always `sql#backupRunsList`.
        items:
          items:
            $ref: '#/components/schemas/BackupRun'
          description: A list of backup runs in reverse chronological order of the enqueued time.
          type: array
        nextPageToken:
          type: string
          description: 'The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.'
    SqlInstancesGetDiskShrinkConfigResponse:
      description: Instance get disk shrink config response.
      id: SqlInstancesGetDiskShrinkConfigResponse
      type: object
      properties:
        message:
          type: string
          description: Additional message to customers.
        kind:
          type: string
          description: This is always `sql#getDiskShrinkConfig`.
        minimalTargetSizeGb:
          type: string
          format: int64
          description: The minimum size to which a disk can be shrunk in GigaBytes.
    Operation:
      properties:
        operationType:
          description: 'The type of the operation. Valid values are: * `CREATE` * `DELETE` * `UPDATE` * `RESTART` * `IMPORT` * `EXPORT` * `BACKUP_VOLUME` * `RESTORE_VOLUME` * `CREATE_USER` * `DELETE_USER` * `CREATE_DATABASE` * `DELETE_DATABASE`'
          enumDescriptions:
            - Unknown operation type.
            - Imports data into a Cloud SQL instance.
            - Exports data from a Cloud SQL instance to a Cloud Storage bucket.
            - Creates a new Cloud SQL instance.
            - Updates the settings of a Cloud SQL instance.
            - Deletes a Cloud SQL instance.
            - Restarts the Cloud SQL instance.
            - ''
            - ''
            - Performs instance backup.
            - Deletes an instance backup.
            - Restores an instance backup.
            - Injects a privileged user in mysql for MOB instances.
            - Clones a Cloud SQL instance.
            - Stops replication on a Cloud SQL read replica instance.
            - Starts replication on a Cloud SQL read replica instance.
            - Promotes a Cloud SQL replica instance.
            - Creates a Cloud SQL replica instance.
            - Creates a new user in a Cloud SQL instance.
            - Deletes a user from a Cloud SQL instance.
            - Updates an existing user in a Cloud SQL instance.
            - Creates a database in the Cloud SQL instance.
            - Deletes a database in the Cloud SQL instance.
            - Updates a database in the Cloud SQL instance.
            - Performs failover of an HA-enabled Cloud SQL failover replica.
            - Deletes the backup taken by a backup run.
            - ''
            - Truncates a general or slow log table in MySQL.
            - Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.
            - Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.
            - 'This field is deprecated, and will be removed in future version of API.'
            - ''
            - Creates clone instance.
            - Reschedule maintenance to another time.
            - Starts external sync of a Cloud SQL EM replica to an external primary instance.
            - Recovers logs from an instance's old data disk.
            - Performs auto-restart of an HA-enabled Cloud SQL database for auto recovery.
            - Re-encrypts CMEK instances with latest key version.
            - Switches over to replica instance from primary.
          enum:
            - SQL_OPERATION_TYPE_UNSPECIFIED
            - IMPORT
            - EXPORT
            - CREATE
            - UPDATE
            - DELETE
            - RESTART
            - BACKUP
            - SNAPSHOT
            - BACKUP_VOLUME
            - DELETE_VOLUME
            - RESTORE_VOLUME
            - INJECT_USER
            - CLONE
            - STOP_REPLICA
            - START_REPLICA
            - PROMOTE_REPLICA
            - CREATE_REPLICA
            - CREATE_USER
            - DELETE_USER
            - UPDATE_USER
            - CREATE_DATABASE
            - DELETE_DATABASE
            - UPDATE_DATABASE
            - FAILOVER
            - DELETE_BACKUP
            - RECREATE_REPLICA
            - TRUNCATE_LOG
            - DEMOTE_MASTER
            - MAINTENANCE
            - ENABLE_PRIVATE_IP
            - DEFER_MAINTENANCE
            - CREATE_CLONE
            - RESCHEDULE_MAINTENANCE
            - START_EXTERNAL_SYNC
            - LOG_CLEANUP
            - AUTO_RESTART
            - REENCRYPT
            - SWITCHOVER
          type: string
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
            - true
            - true
            - false
            - false
            - false
            - false
            - false
            - false
        status:
          description: The status of an operation.
          enumDescriptions:
            - The state of the operation is unknown.
            - 'The operation has been queued, but has not started yet.'
            - The operation is running.
            - The operation completed.
          type: string
          enum:
            - SQL_OPERATION_STATUS_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
        insertTime:
          format: google-datetime
          type: string
          description: 'The time this operation was enqueued in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.'
        exportContext:
          description: 'The context for export operation, if applicable.'
          $ref: '#/components/schemas/ExportContext'
        targetLink:
          type: string
        endTime:
          type: string
          description: 'The time this operation finished in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.'
          format: google-datetime
        kind:
          type: string
          description: This is always `sql#operation`.
        backupContext:
          $ref: '#/components/schemas/BackupContext'
          description: 'The context for backup operation, if applicable.'
        user:
          description: The email address of the user who initiated this operation.
          type: string
        name:
          type: string
          description: An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation.
        targetProject:
          description: The project ID of the target instance related to this operation.
          type: string
        startTime:
          type: string
          description: 'The time this operation actually started in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.'
          format: google-datetime
        error:
          $ref: '#/components/schemas/OperationErrors'
          description: 'If errors occurred during processing of this operation, this field will be populated.'
        importContext:
          description: 'The context for import operation, if applicable.'
          $ref: '#/components/schemas/ImportContext'
        targetId:
          type: string
          description: Name of the database instance related to this operation.
        selfLink:
          type: string
          description: The URI of this resource.
      type: object
      id: Operation
      description: 'An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource.'
    SqlInstancesGetLatestRecoveryTimeResponse:
      properties:
        kind:
          description: This is always `sql#getLatestRecoveryTime`.
          type: string
        latestRecoveryTime:
          format: google-datetime
          description: 'Timestamp, identifies the latest recovery time of the source instance.'
          type: string
      id: SqlInstancesGetLatestRecoveryTimeResponse
      description: Instance get latest recovery time response.
      type: object
    MySqlSyncConfig:
      properties:
        initialSyncFlags:
          type: array
          items:
            $ref: '#/components/schemas/SyncFlags'
          description: Flags to use for the initial dump.
      id: MySqlSyncConfig
      description: MySQL-specific external server sync settings.
      type: object
    RestoreBackupContext:
      id: RestoreBackupContext
      description: Database instance restore from backup context. Backup context contains source instance id and project id.
      type: object
      properties:
        instanceId:
          description: The ID of the instance that the backup was taken from.
          type: string
        kind:
          description: This is always `sql#restoreBackupContext`.
          type: string
        backupRunId:
          type: string
          format: int64
          description: The ID of the backup run to restore from.
        project:
          description: The full project ID of the source instance.
          type: string
    BackupRetentionSettings:
      description: We currently only support backup retention by specifying the number of backups we will retain.
      properties:
        retentionUnit:
          enum:
            - RETENTION_UNIT_UNSPECIFIED
            - COUNT
          type: string
          enumDescriptions:
            - 'Backup retention unit is unspecified, will be treated as COUNT.'
            - 'Retention will be by count, eg. "retain the most recent 7 backups".'
          description: The unit that 'retained_backups' represents.
        retainedBackups:
          description: 'Depending on the value of retention_unit, this is used to determine if a backup needs to be deleted. If retention_unit is ''COUNT'', we will retain this many backups.'
          type: integer
          format: int32
      type: object
      id: BackupRetentionSettings
    SslCert:
      description: SslCerts Resource
      id: SslCert
      properties:
        instance:
          type: string
          description: Name of the database instance.
        kind:
          description: This is always `sql#sslCert`.
          type: string
        expirationTime:
          type: string
          description: 'The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.'
          format: google-datetime
        createTime:
          description: 'The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`'
          type: string
          format: google-datetime
        sha1Fingerprint:
          description: Sha1 Fingerprint.
          type: string
        certSerialNumber:
          type: string
          description: 'Serial number, as extracted from the certificate.'
        commonName:
          description: 'User supplied name. Constrained to [a-zA-Z.-_ ]+.'
          type: string
        cert:
          type: string
          description: PEM representation.
        selfLink:
          description: The URI of this resource.
          type: string
      type: object
    BackupRun:
      id: BackupRun
      properties:
        diskEncryptionStatus:
          description: Encryption status specific to a backup.
          $ref: '#/components/schemas/DiskEncryptionStatus'
        kind:
          description: This is always `sql#backupRun`.
          type: string
        id:
          type: string
          description: The identifier for this backup run. Unique only for a specific Cloud SQL instance.
          format: int64
        endTime:
          type: string
          format: google-datetime
          description: 'The time the backup operation completed in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.'
        windowStartTime:
          format: google-datetime
          description: 'The start time of the backup window during which this the backup was attempted in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.'
          type: string
        timeZone:
          type: string
          description: Backup time zone to prevent restores to an instance with a different time zone. Now relevant only for SQL Server.
        enqueuedTime:
          description: 'The time the run was enqueued in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.'
          format: google-datetime
          type: string
        error:
          description: Information about why the backup operation failed. This is only present if the run has the FAILED status.
          $ref: '#/components/schemas/OperationError'
        location:
          description: Location of the backups.
          type: string
        type:
          enum:
            - SQL_BACKUP_RUN_TYPE_UNSPECIFIED
            - AUTOMATED
            - ON_DEMAND
          type: string
          enumDescriptions:
            - This is an unknown BackupRun type.
            - The backup schedule automatically triggers a backup.
            - The user manually triggers a backup.
          description: 'The type of this run; can be either "AUTOMATED" or "ON_DEMAND" or "FINAL". This field defaults to "ON_DEMAND" and is ignored, when specified for insert requests.'
        status:
          type: string
          enum:
            - SQL_BACKUP_RUN_STATUS_UNSPECIFIED
            - ENQUEUED
            - OVERDUE
            - RUNNING
            - FAILED
            - SUCCESSFUL
            - SKIPPED
            - DELETION_PENDING
            - DELETION_FAILED
            - DELETED
          enumDescriptions:
            - The status of the run is unknown.
            - The backup operation was enqueued.
            - 'The backup is overdue across a given backup window. Indicates a problem. Example: Long-running operation in progress during the whole window.'
            - The backup is in progress.
            - The backup failed.
            - The backup was successful.
            - 'The backup was skipped (without problems) for a given backup window. Example: Instance was idle.'
            - The backup is about to be deleted.
            - The backup deletion failed.
            - The backup has been deleted.
          description: The status of this run.
        diskEncryptionConfiguration:
          $ref: '#/components/schemas/DiskEncryptionConfiguration'
          description: Encryption configuration specific to a backup.
        instance:
          type: string
          description: Name of the database instance.
        backupKind:
          enumDescriptions:
            - This is an unknown BackupKind.
            - The snapshot based backups
            - Physical backups
          type: string
          description: 'Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT.'
          enum:
            - SQL_BACKUP_KIND_UNSPECIFIED
            - SNAPSHOT
            - PHYSICAL
        description:
          description: 'The description of this run, only applicable to on-demand backups.'
          type: string
        selfLink:
          type: string
          description: The URI of this resource.
        startTime:
          format: google-datetime
          type: string
          description: 'The time the backup operation actually started in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.'
      description: A BackupRun resource.
      type: object
    BackupConfiguration:
      id: BackupConfiguration
      properties:
        binaryLogEnabled:
          description: '(MySQL only) Whether binary log is enabled. If backup configuration is disabled, binarylog must be disabled as well.'
          type: boolean
        pointInTimeRecoveryEnabled:
          description: Whether point in time recovery is enabled.
          type: boolean
        transactionLogRetentionDays:
          type: integer
          description: 'The number of days of transaction logs we retain for point in time restore, from 1-7.'
          format: int32
        backupRetentionSettings:
          description: Backup retention settings.
          $ref: '#/components/schemas/BackupRetentionSettings'
        replicationLogArchivingEnabled:
          description: Reserved for future use.
          type: boolean
        kind:
          type: string
          description: This is always `sql#backupConfiguration`.
        location:
          description: Location of the backup
          type: string
        startTime:
          description: 'Start time for the daily backup configuration in UTC timezone in the 24 hour format - `HH:MM`.'
          type: string
        enabled:
          description: Whether this configuration is enabled.
          type: boolean
      description: Database instance backup configuration.
      type: object
    FailoverContext:
      properties:
        kind:
          description: This is always `sql#failoverContext`.
          type: string
        settingsVersion:
          format: int64
          type: string
          description: The current settings version of this instance. Request will be rejected if this version doesn't match the current settings version.
      type: object
      id: FailoverContext
      description: Database instance failover context.
    MySqlReplicaConfiguration:
      id: MySqlReplicaConfiguration
      description: Read-replica configuration specific to MySQL databases.
      type: object
      properties:
        dumpFilePath:
          type: string
          description: 'Path to a SQL dump file in Google Cloud Storage from which the replica instance is to be created. The URI is in the form gs://bucketName/fileName. Compressed gzip files (.gz) are also supported. Dumps have the binlog co-ordinates from which replication begins. This can be accomplished by setting --master-data to 1 when using mysqldump.'
        kind:
          description: This is always `sql#mysqlReplicaConfiguration`.
          type: string
        clientCertificate:
          type: string
          description: PEM representation of the replica's x509 certificate.
        password:
          type: string
          description: The password for the replication connection.
        connectRetryInterval:
          description: Seconds to wait between connect retries. MySQL's default is 60 seconds.
          format: int32
          type: integer
        username:
          type: string
          description: The username for the replication connection.
        masterHeartbeatPeriod:
          type: string
          description: Interval in milliseconds between replication heartbeats.
          format: int64
        clientKey:
          description: PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.
          type: string
        verifyServerCertificate:
          description: Whether or not to check the primary instance's Common Name value in the certificate that it sends during the SSL handshake.
          type: boolean
        caCertificate:
          type: string
          description: PEM representation of the trusted CA's x509 certificate.
        sslCipher:
          type: string
          description: A list of permissible ciphers to use for SSL encryption.
    UsersListResponse:
      id: UsersListResponse
      type: object
      description: User list response.
      properties:
        nextPageToken:
          description: Unused.
          deprecated: true
          type: string
        kind:
          type: string
          description: This is always `sql#usersList`.
        items:
          description: List of user resources in the instance.
          type: array
          items:
            $ref: '#/components/schemas/User'
    InstancesRestoreBackupRequest:
      id: InstancesRestoreBackupRequest
      description: Database instance restore backup request.
      type: object
      properties:
        restoreBackupContext:
          $ref: '#/components/schemas/RestoreBackupContext'
          description: Parameters required to perform the restore backup operation.
    SslCertDetail:
      id: SslCertDetail
      type: object
      properties:
        certPrivateKey:
          description: 'The private key for the client cert, in pem format. Keep private in order to protect your security.'
          type: string
        certInfo:
          $ref: '#/components/schemas/SslCert'
          description: The public information about the cert.
      description: SslCertDetail.
    InstancesTruncateLogRequest:
      type: object
      properties:
        truncateLogContext:
          description: Contains details about the truncate log operation.
          $ref: '#/components/schemas/TruncateLogContext'
      id: InstancesTruncateLogRequest
      description: Instance truncate log request.
    TiersListResponse:
      id: TiersListResponse
      properties:
        items:
          items:
            $ref: '#/components/schemas/Tier'
          type: array
          description: List of tiers.
        kind:
          description: This is always `sql#tiersList`.
          type: string
      type: object
      description: Tiers list response.
    InstancesListServerCasResponse:
      type: object
      id: InstancesListServerCasResponse
      properties:
        certs:
          description: List of server CA certificates for the instance.
          type: array
          items:
            $ref: '#/components/schemas/SslCert'
        kind:
          description: This is always `sql#instancesListServerCas`.
          type: string
        activeVersion:
          type: string
      description: Instances ListServerCas response.
    ReplicaConfiguration:
      type: object
      description: Read-replica configuration for connecting to the primary instance.
      properties:
        kind:
          type: string
          description: This is always `sql#replicaConfiguration`.
        mysqlReplicaConfiguration:
          $ref: '#/components/schemas/MySqlReplicaConfiguration'
          description: 'MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named `master.info` in the data directory.'
        failoverTarget:
          type: boolean
          description: 'Specifies if the replica is the failover target. If the field is set to `true`, the replica will be designated as a failover replica. In case the primary instance fails, the replica instance will be promoted as the new primary instance. Only one replica can be specified as failover target, and the replica has to be in different zone with the primary instance.'
      id: ReplicaConfiguration
    SslCertsInsertRequest:
      properties:
        commonName:
          description: User supplied name. Must be a distinct name from the other certificates for this instance.
          type: string
      description: SslCerts insert request.
      type: object
      id: SslCertsInsertRequest
    SqlScheduledMaintenance:
      description: Any scheduled maintenance for this instance.
      id: SqlScheduledMaintenance
      properties:
        canReschedule:
          type: boolean
          description: If the scheduled maintenance can be rescheduled.
        scheduleDeadlineTime:
          description: Maintenance cannot be rescheduled to start beyond this deadline.
          type: string
          format: google-datetime
        startTime:
          description: The start time of any upcoming scheduled maintenance for this instance.
          format: google-datetime
          type: string
        canDefer:
          deprecated: true
          type: boolean
      type: object
    BackupContext:
      description: Backup context.
      id: BackupContext
      type: object
      properties:
        backupId:
          format: int64
          type: string
          description: The identifier of the backup.
        kind:
          description: This is always `sql#backupContext`.
          type: string
    User:
      description: A Cloud SQL user resource.
      id: User
      type: object
      properties:
        password:
          description: The password for the user.
          type: string
        etag:
          description: This field is deprecated and will be removed from a future version of the API.
          type: string
        name:
          description: The name of the user in the Cloud SQL instance. Can be omitted for `update` because it is already specified in the URL.
          type: string
        passwordPolicy:
          $ref: '#/components/schemas/UserPasswordValidationPolicy'
          description: User level password validation policy.
        kind:
          type: string
          description: This is always `sql#user`.
        project:
          description: The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable. Can be omitted for `update` because it is already specified on the URL.
          type: string
        sqlserverUserDetails:
          $ref: '#/components/schemas/SqlServerUserDetails'
        dualPasswordType:
          enumDescriptions:
            - The default value.
            - Do not update the user's dual password status.
            - No dual password usable for connecting using this user.
            - Dual password usable for connecting using this user.
          type: string
          enum:
            - DUAL_PASSWORD_TYPE_UNSPECIFIED
            - NO_MODIFY_DUAL_PASSWORD
            - NO_DUAL_PASSWORD
            - DUAL_PASSWORD
          description: Dual password status for the user.
        host:
          description: 'Optional. The host from which the user can connect. For `insert` operations, host defaults to an empty string. For `update` operations, host is specified as part of the request URL. The host name cannot be updated after insertion. For a MySQL instance, it''s required; for a PostgreSQL or SQL Server instance, it''s optional.'
          type: string
        type:
          enum:
            - BUILT_IN
            - CLOUD_IAM_USER
            - CLOUD_IAM_SERVICE_ACCOUNT
          type: string
          description: The user type. It determines the method to authenticate the user during login. The default is the database's built-in user type.
          enumDescriptions:
            - The database's built-in user type.
            - Cloud IAM user.
            - Cloud IAM service account.
        instance:
          description: The name of the Cloud SQL instance. This does not include the project ID. Can be omitted for `update` because it is already specified on the URL.
          type: string
    Tier:
      id: Tier
      type: object
      description: A Google Cloud SQL service tier resource.
      properties:
        kind:
          description: This is always `sql#tier`.
          type: string
        region:
          items:
            type: string
          type: array
          description: The applicable regions for this tier.
        tier:
          type: string
          description: 'An identifier for the machine type, for example, `db-custom-1-3840`. For related information, see [Pricing](/sql/pricing).'
        RAM:
          format: int64
          type: string
          description: The maximum RAM usage of this tier in bytes.
        DiskQuota:
          format: int64
          type: string
          description: The maximum disk size of this tier in bytes.
    InstancesDemoteMasterRequest:
      description: Database demote primary instance request.
      id: InstancesDemoteMasterRequest
      properties:
        demoteMasterContext:
          $ref: '#/components/schemas/DemoteMasterContext'
          description: Contains details about the demoteMaster operation.
      type: object
    SqlOutOfDiskReport:
      id: SqlOutOfDiskReport
      type: object
      description: This message wraps up the information written by out-of-disk detection job.
      properties:
        sqlMinRecommendedIncreaseSizeGb:
          type: integer
          description: 'The minimum recommended increase size in GigaBytes This field is consumed by the frontend * Writers: * the proactive database wellness job for OOD. * Readers:'
          format: int32
        sqlOutOfDiskState:
          enum:
            - SQL_OUT_OF_DISK_STATE_UNSPECIFIED
            - NORMAL
            - SOFT_SHUTDOWN
          enumDescriptions:
            - Unspecified state
            - The instance has plenty space on data disk
            - Data disk is almost used up. It is shutdown to prevent data corruption.
          type: string
          description: 'This field represents the state generated by the proactive database wellness job for OutOfDisk issues. * Writers: * the proactive database wellness job for OOD. * Readers: * the proactive database wellness job'
    DenyMaintenancePeriod:
      type: object
      id: DenyMaintenancePeriod
      description: Deny maintenance Periods. This specifies a date range during when all CSA rollout will be denied.
      properties:
        startDate:
          type: string
          description: '"deny maintenance period" start date. If the year of the start date is empty, the year of the end date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01'
        time:
          description: 'Time in UTC when the "deny maintenance period" starts on start_date and ends on end_date. The time is in format: HH:mm:SS, i.e., 00:00:00'
          type: string
        endDate:
          description: '"deny maintenance period" end date. If the year of the end date is empty, the year of the start date also must be empty. In this case, it means the no maintenance interval recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01'
          type: string
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
  x-stackQL-resources:
    instances_latest_recovery_time:
      id: google.sqladmin.instances_latest_recovery_time
      name: instances_latest_recovery_time
      title: Instances Latest Recovery Time
      methods:
        get_latest_recovery_time:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1getLatestRecoveryTime/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances_latest_recovery_time/methods/get_latest_recovery_time'
        insert: []
        update: []
        delete: []
    instances:
      id: google.sqladmin.instances
      name: instances
      title: Instances
      methods:
        perform_disk_shrink:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1performDiskShrink/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reschedule_maintenance:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1rescheduleMaintenance/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_external_sync_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1verifyExternalSyncSettings/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start_external_sync:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1startExternalSync/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_replica_size:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1resetReplicaSize/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        clone:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1clone/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop_replica:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1stopReplica/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        truncate_log:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1truncateLog/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        failover:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1failover/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        import:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1import/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        demote_master:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1demoteMaster/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restart:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1restart/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reencrypt:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1reencrypt/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_ssl_config:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1resetSslConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restore_backup:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1restoreBackup/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1export/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        promote_replica:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1promoteReplica/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start_replica:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1startReplica/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rotate_server_ca:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1rotateServerCa/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/instances/methods/delete'
    instances_disk_shrink_config:
      id: google.sqladmin.instances_disk_shrink_config
      name: instances_disk_shrink_config
      title: Instances Disk Shrink Config
      methods:
        get_disk_shrink_config:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1getDiskShrinkConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances_disk_shrink_config/methods/get_disk_shrink_config'
        insert: []
        update: []
        delete: []
    connect:
      id: google.sqladmin.connect
      name: connect
      title: Connect
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1connectSettings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_ephemeral:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}:generateEphemeralCert/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connect/methods/get'
        insert: []
        update: []
        delete: []
    tiers:
      id: google.sqladmin.tiers
      name: tiers
      title: Tiers
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1tiers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tiers/methods/list'
        insert: []
        update: []
        delete: []
    ssl_certs:
      id: google.sqladmin.ssl_certs
      name: ssl_certs
      title: Ssl Certs
      methods:
        insert:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1sslCerts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1sslCerts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1sslCerts~1{sha1Fingerprint}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1sslCerts~1{sha1Fingerprint}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ssl_certs/methods/list'
          - $ref: '#/components/x-stackQL-resources/ssl_certs/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/ssl_certs/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/ssl_certs/methods/delete'
    ssl_certs_ephemeral:
      id: google.sqladmin.ssl_certs_ephemeral
      name: ssl_certs_ephemeral
      title: Ssl Certs Ephemeral
      methods:
        create_ephemeral:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1createEphemeral/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/ssl_certs_ephemeral/methods/create_ephemeral'
        update: []
        delete: []
    flags:
      id: google.sqladmin.flags
      name: flags
      title: Flags
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1flags/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/flags/methods/list'
        insert: []
        update: []
        delete: []
    instances_server_ca:
      id: google.sqladmin.instances_server_ca
      name: instances_server_ca
      title: Instances Server Ca
      methods:
        add_server_ca:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1addServerCa/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    instances_server_cas:
      id: google.sqladmin.instances_server_cas
      name: instances_server_cas
      title: Instances Server Cas
      methods:
        list_server_cas:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1listServerCas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances_server_cas/methods/list_server_cas'
        insert: []
        update: []
        delete: []
    databases:
      id: google.sqladmin.databases
      name: databases
      title: Databases
      methods:
        insert:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1databases/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1databases/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1databases~1{database}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1databases~1{database}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1databases~1{database}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1databases~1{database}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/databases/methods/list'
          - $ref: '#/components/x-stackQL-resources/databases/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/databases/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/databases/methods/delete'
    operations:
      id: google.sqladmin.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1operations~1{operation}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1operations~1{operation}~1cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
        insert: []
        update: []
        delete: []
    backup_runs:
      id: google.sqladmin.backup_runs
      name: backup_runs
      title: Backup Runs
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1backupRuns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1backupRuns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1backupRuns/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1backupRuns~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1backupRuns~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backup_runs/methods/list'
          - $ref: '#/components/x-stackQL-resources/backup_runs/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/backup_runs/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backup_runs/methods/delete'
    users:
      id: google.sqladmin.users
      name: users
      title: Users
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1users/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1users/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1users/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1users~1{name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/users/methods/list'
          - $ref: '#/components/x-stackQL-resources/users/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/users/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/users/methods/delete'
paths:
  '/v1/projects/{project}/instances/{instance}/getLatestRecoveryTime':
    parameters: &ref_1
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/key'
    get:
      description: Get Latest Recovery Time for a given instance.
      operationId: sql.projects.instances.getLatestRecoveryTime
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlInstancesGetLatestRecoveryTimeResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances_latest_recovery_time
      x-stackQL-method: get_latest_recovery_time
      x-stackQL-verb: select
  '/v1/projects/{project}/instances/{instance}/performDiskShrink':
    parameters: *ref_1
    post:
      description: Perform Disk Shrink on primary instance.
      operationId: sql.projects.instances.performDiskShrink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerformDiskShrinkContext'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: perform_disk_shrink
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/rescheduleMaintenance':
    parameters: *ref_1
    post:
      description: Reschedules the maintenance on the given instance.
      operationId: sql.projects.instances.rescheduleMaintenance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlInstancesRescheduleMaintenanceRequestBody'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: reschedule_maintenance
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/getDiskShrinkConfig':
    parameters: *ref_1
    get:
      description: Get Disk Shrink Config for a given instance.
      operationId: sql.projects.instances.getDiskShrinkConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlInstancesGetDiskShrinkConfigResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances_disk_shrink_config
      x-stackQL-method: get_disk_shrink_config
      x-stackQL-verb: select
  '/v1/projects/{project}/instances/{instance}/verifyExternalSyncSettings':
    parameters: *ref_1
    post:
      description: Verify External primary instance external sync settings.
      operationId: sql.projects.instances.verifyExternalSyncSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlInstancesVerifyExternalSyncSettingsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlInstancesVerifyExternalSyncSettingsResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: verify_external_sync_settings
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/startExternalSync':
    parameters: *ref_1
    post:
      description: Start External primary instance migration.
      operationId: sql.projects.instances.startExternalSync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlInstancesStartExternalSyncRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: start_external_sync
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/resetReplicaSize':
    parameters: *ref_1
    post:
      description: Reset Replica Size to primary instance disk size.
      operationId: sql.projects.instances.resetReplicaSize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlInstancesResetReplicaSizeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: reset_replica_size
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/connectSettings':
    parameters: *ref_1
    get:
      description: Retrieves connect settings about a Cloud SQL instance.
      operationId: sql.connect.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectSettings'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: query
          name: readTime
          schema:
            type: string
      x-stackQL-resource: connect
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{project}/instances/{instance}:generateEphemeralCert':
    parameters: *ref_1
    post:
      description: Generates a short-lived X509 certificate containing the provided public key and signed by a private key specific to the target instance. Users may use the certificate to authenticate as themselves when connecting to the database.
      operationId: sql.connect.generateEphemeral
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateEphemeralCertRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateEphemeralCertResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: connect
      x-stackQL-method: generate_ephemeral
      x-stackQL-verb: exec
  '/v1/projects/{project}/tiers':
    parameters: *ref_1
    get:
      description: 'Lists all available machine types (tiers) for Cloud SQL, for example, `db-custom-1-3840`. For more information, see https://cloud.google.com/sql/pricing.'
      operationId: sql.tiers.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
      x-stackQL-resource: tiers
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{project}/instances/{instance}/sslCerts':
    parameters: *ref_1
    post:
      description: Creates an SSL certificate and returns it along with the private key and server certificate authority. The new certificate will not be usable until the instance is restarted.
      operationId: sql.sslCerts.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SslCertsInsertRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SslCertsInsertResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: ssl_certs
      x-stackQL-method: insert
      x-stackQL-verb: insert
    get:
      description: Lists all of the current SSL certificates for the instance.
      operationId: sql.sslCerts.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SslCertsListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: ssl_certs
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}':
    parameters: *ref_1
    delete:
      description: 'Deletes the SSL certificate. For First Generation instances, the certificate remains valid until the instance is restarted.'
      operationId: sql.sslCerts.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: sha1Fingerprint
          required: true
          schema:
            type: string
      x-stackQL-resource: ssl_certs
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Retrieves a particular SSL certificate. Does not include the private key (required for usage). The private key must be saved from the response to initial creation.
      operationId: sql.sslCerts.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SslCert'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: sha1Fingerprint
          required: true
          schema:
            type: string
      x-stackQL-resource: ssl_certs
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{project}/instances/{instance}/createEphemeral':
    parameters: *ref_1
    post:
      description: Generates a short-lived X509 certificate containing the provided public key and signed by a private key specific to the target instance. Users may use the certificate to authenticate as themselves when connecting to the database.
      operationId: sql.sslCerts.createEphemeral
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SslCertsCreateEphemeralRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SslCert'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: ssl_certs_ephemeral
      x-stackQL-method: create_ephemeral
      x-stackQL-verb: insert
  /v1/flags:
    parameters: *ref_1
    get:
      description: Lists all available database flags for Cloud SQL instances.
      operationId: sql.flags.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagsListResponse'
      parameters:
        - in: query
          name: databaseVersion
          schema:
            type: string
      x-stackQL-resource: flags
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{project}/instances/{instance}/clone':
    parameters: *ref_1
    post:
      description: Creates a Cloud SQL instance as a clone of the source instance. Using this operation might cause your instance to restart.
      operationId: sql.instances.clone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesCloneRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: clone
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}':
    parameters: *ref_1
    delete:
      description: Deletes a Cloud SQL instance.
      operationId: sql.instances.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: delete
      x-stackQL-verb: delete
    put:
      description: Updates settings of a Cloud SQL instance. Using this operation might cause your instance to restart.
      operationId: sql.instances.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseInstance'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: update
      x-stackQL-verb: exec
    patch:
      description: Partially updates settings of a Cloud SQL instance by merging the request with the current configuration. This method supports patch semantics.
      operationId: sql.instances.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseInstance'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Retrieves a resource containing information about a Cloud SQL instance.
      operationId: sql.instances.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseInstance'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{project}/instances/{instance}/stopReplica':
    parameters: *ref_1
    post:
      description: Stops the replication in the read replica instance.
      operationId: sql.instances.stopReplica
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: stop_replica
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/truncateLog':
    parameters: *ref_1
    post:
      description: Truncate MySQL general and slow query log tables MySQL only.
      operationId: sql.instances.truncateLog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesTruncateLogRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: truncate_log
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/failover':
    parameters: *ref_1
    post:
      description: 'Initiates a manual failover of a high availability (HA) primary instance to a standby instance, which becomes the primary instance. Users are then rerouted to the new primary. For more information, see the [Overview of high availability](https://cloud.google.com/sql/docs/mysql/high-availability) page in the Cloud SQL documentation. If using Legacy HA (MySQL only), this causes the instance to failover to its failover replica instance.'
      operationId: sql.instances.failover
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesFailoverRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: failover
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/import':
    parameters: *ref_1
    post:
      description: Imports data into a Cloud SQL instance from a SQL dump or CSV file in Cloud Storage.
      operationId: sql.instances.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesImportRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: import
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/demoteMaster':
    parameters: *ref_1
    post:
      description: Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.
      operationId: sql.instances.demoteMaster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesDemoteMasterRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: demote_master
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/restart':
    parameters: *ref_1
    post:
      description: Restarts a Cloud SQL instance.
      operationId: sql.instances.restart
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: restart
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/reencrypt':
    parameters: *ref_1
    post:
      description: Reencrypt CMEK instance with latest key version.
      operationId: sql.instances.reencrypt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesReencryptRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: reencrypt
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/addServerCa':
    parameters: *ref_1
    post:
      description: 'Adds a new trusted Certificate Authority (CA) version for the specified instance. Required to prepare for a certificate rotation. If a CA version was previously added but never used in a certificate rotation, this operation replaces that version. There cannot be more than one CA version waiting to be rotated in.'
      operationId: sql.instances.addServerCa
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances_server_ca
      x-stackQL-method: add_server_ca
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/resetSslConfig':
    parameters: *ref_1
    post:
      description: Deletes all client certificates and generates a new server SSL certificate for the instance.
      operationId: sql.instances.resetSslConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: reset_ssl_config
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/restoreBackup':
    parameters: *ref_1
    post:
      description: Restores a backup of a Cloud SQL instance. Using this operation might cause your instance to restart.
      operationId: sql.instances.restoreBackup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesRestoreBackupRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: restore_backup
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/export':
    parameters: *ref_1
    post:
      description: Exports data from a Cloud SQL instance to a Cloud Storage bucket as a SQL dump or CSV file.
      operationId: sql.instances.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesExportRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: export
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/promoteReplica':
    parameters: *ref_1
    post:
      description: Promotes the read replica instance to be a stand-alone Cloud SQL instance. Using this operation might cause your instance to restart.
      operationId: sql.instances.promoteReplica
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: promote_replica
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances':
    parameters: *ref_1
    get:
      description: Lists instances under a given project.
      operationId: sql.instances.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstancesListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.items
    post:
      description: Creates a new Cloud SQL instance.
      operationId: sql.instances.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseInstance'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: insert
      x-stackQL-verb: insert
  '/v1/projects/{project}/instances/{instance}/startReplica':
    parameters: *ref_1
    post:
      description: Starts the replication in the read replica instance.
      operationId: sql.instances.startReplica
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: start_replica
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/listServerCas':
    parameters: *ref_1
    get:
      description: 'Lists all of the trusted Certificate Authorities (CAs) for the specified instance. There can be up to three CAs listed: the CA that was used to sign the certificate that is currently in use, a CA that has been added but not yet used to sign a certificate, and a CA used to sign a certificate that has previously rotated out.'
      operationId: sql.instances.listServerCas
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstancesListServerCasResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances_server_cas
      x-stackQL-method: list_server_cas
      x-stackQL-verb: select
  '/v1/projects/{project}/instances/{instance}/rotateServerCa':
    parameters: *ref_1
    post:
      description: Rotates the server certificate to one signed by the Certificate Authority (CA) version previously added with the addServerCA method.
      operationId: sql.instances.rotateServerCa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesRotateServerCaRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: rotate_server_ca
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/databases':
    parameters: *ref_1
    post:
      description: 'Inserts a resource containing information about a database inside a Cloud SQL instance. **Note:** You can''t modify the default character set and collation.'
      operationId: sql.databases.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Database'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: databases
      x-stackQL-method: insert
      x-stackQL-verb: insert
    get:
      description: Lists databases in the specified Cloud SQL instance.
      operationId: sql.databases.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabasesListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: databases
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{project}/instances/{instance}/databases/{database}':
    parameters: *ref_1
    delete:
      description: Deletes a database from a Cloud SQL instance.
      operationId: sql.databases.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: database
          required: true
          schema:
            type: string
      x-stackQL-resource: databases
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Partially updates a resource containing information about a database inside a Cloud SQL instance. This method supports patch semantics.
      operationId: sql.databases.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Database'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: database
          required: true
          schema:
            type: string
      x-stackQL-resource: databases
      x-stackQL-method: patch
      x-stackQL-verb: exec
    put:
      description: Updates a resource containing information about a database inside a Cloud SQL instance.
      operationId: sql.databases.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Database'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: database
          required: true
          schema:
            type: string
      x-stackQL-resource: databases
      x-stackQL-method: update
      x-stackQL-verb: exec
    get:
      description: Retrieves a resource containing information about a database inside a Cloud SQL instance.
      operationId: sql.databases.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: database
          required: true
          schema:
            type: string
      x-stackQL-resource: databases
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{project}/operations':
    parameters: *ref_1
    get:
      description: Lists all instance operations that have been performed on the given Cloud SQL instance in the reverse chronological order of the start time.
      operationId: sql.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationsListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: instance
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.items
  '/v1/projects/{project}/operations/{operation}':
    parameters: *ref_1
    get:
      description: Retrieves an instance operation that has been performed on an instance.
      operationId: sql.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: operation
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{project}/operations/{operation}/cancel':
    parameters: *ref_1
    post:
      description: Cancels an instance operation that has been performed on an instance.
      operationId: sql.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: operation
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/backupRuns':
    parameters: *ref_1
    get:
      description: Lists all backup runs associated with the project or a given instance and configuration in the reverse chronological order of the backup initiation time.
      operationId: sql.backupRuns.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRunsListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: backup_runs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.items
    post:
      description: Creates a new backup run on demand.
      operationId: sql.backupRuns.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRun'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: backup_runs
      x-stackQL-method: insert
      x-stackQL-verb: insert
  '/v1/projects/{project}/instances/{instance}/backupRuns/{id}':
    parameters: *ref_1
    get:
      description: Retrieves a resource containing information about a backup run.
      operationId: sql.backupRuns.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRun'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: backup_runs
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes the backup taken by a backup run.
      operationId: sql.backupRuns.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: backup_runs
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{project}/instances/{instance}/users':
    parameters: *ref_1
    delete:
      description: Deletes a user from a Cloud SQL instance.
      operationId: sql.users.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: host
          schema:
            type: string
      x-stackQL-resource: users
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Lists users in the specified Cloud SQL instance.
      operationId: sql.users.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: users
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.items
    post:
      description: Creates a new user in a Cloud SQL instance.
      operationId: sql.users.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: users
      x-stackQL-method: insert
      x-stackQL-verb: insert
    put:
      description: Updates an existing user in a Cloud SQL instance.
      operationId: sql.users.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: host
          schema:
            type: string
      x-stackQL-resource: users
      x-stackQL-method: update
      x-stackQL-verb: exec
  '/v1/projects/{project}/instances/{instance}/users/{name}':
    parameters: *ref_1
    get:
      description: Retrieves a resource containing information about a user.
      operationId: sql.users.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: query
          name: host
          schema:
            type: string
      x-stackQL-resource: users
      x-stackQL-method: get
      x-stackQL-verb: select
