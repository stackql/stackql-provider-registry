openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud SQL Admin API
  description: API for Cloud SQL database instance management
  version: v1
  x-discovery-doc-revision: '20221209'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://developers.google.com/cloud-sql/
servers:
  - url: https://sqladmin.googleapis.com
components:
  schemas:
    ConnectSettings:
      id: ConnectSettings
      type: object
      properties:
        databaseVersion:
          type: string
          enumDescriptions:
            - This is an unknown database version.
            - The database version is MySQL 5.1.
            - The database version is MySQL 5.5.
            - The database version is MySQL 5.6.
            - The database version is MySQL 5.7.
            - The database version is SQL Server 2017 Standard.
            - The database version is SQL Server 2017 Enterprise.
            - The database version is SQL Server 2017 Express.
            - The database version is SQL Server 2017 Web.
            - The database version is PostgreSQL 9.6.
            - The database version is PostgreSQL 10.
            - The database version is PostgreSQL 11.
            - The database version is PostgreSQL 12.
            - The database version is PostgreSQL 13.
            - The database version is PostgreSQL 14.
            - The database version is MySQL 8.
            - The database major version is MySQL 8.0 and the minor version is 18.
            - The database major version is MySQL 8.0 and the minor version is 26.
            - The database major version is MySQL 8.0 and the minor version is 27.
            - The database major version is MySQL 8.0 and the minor version is 28.
            - The database major version is MySQL 8.0 and the minor version is 29.
            - The database major version is MySQL 8.0 and the minor version is 30.
            - The database major version is MySQL 8.0 and the minor version is 31.
            - The database version is SQL Server 2019 Standard.
            - The database version is SQL Server 2019 Enterprise.
            - The database version is SQL Server 2019 Express.
            - The database version is SQL Server 2019 Web.
          description: 'The database engine type and version. The `databaseVersion` field cannot be changed after instance creation. MySQL instances: `MYSQL_8_0`, `MYSQL_5_7` (default), or `MYSQL_5_6`. PostgreSQL instances: `POSTGRES_9_6`, `POSTGRES_10`, `POSTGRES_11`, `POSTGRES_12` (default), `POSTGRES_13`, or `POSTGRES_14`. SQL Server instances: `SQLSERVER_2017_STANDARD` (default), `SQLSERVER_2017_ENTERPRISE`, `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`, `SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`, or `SQLSERVER_2019_WEB`.'
          enum:
            - SQL_DATABASE_VERSION_UNSPECIFIED
            - MYSQL_5_1
            - MYSQL_5_5
            - MYSQL_5_6
            - MYSQL_5_7
            - SQLSERVER_2017_STANDARD
            - SQLSERVER_2017_ENTERPRISE
            - SQLSERVER_2017_EXPRESS
            - SQLSERVER_2017_WEB
            - POSTGRES_9_6
            - POSTGRES_10
            - POSTGRES_11
            - POSTGRES_12
            - POSTGRES_13
            - POSTGRES_14
            - MYSQL_8_0
            - MYSQL_8_0_18
            - MYSQL_8_0_26
            - MYSQL_8_0_27
            - MYSQL_8_0_28
            - MYSQL_8_0_29
            - MYSQL_8_0_30
            - MYSQL_8_0_31
            - SQLSERVER_2019_STANDARD
            - SQLSERVER_2019_ENTERPRISE
            - SQLSERVER_2019_EXPRESS
            - SQLSERVER_2019_WEB
        ipAddresses:
          type: array
          items:
            $ref: '#/components/schemas/IpMapping'
          description: The assigned IP addresses for the instance.
        backendType:
          enum:
            - SQL_BACKEND_TYPE_UNSPECIFIED
            - FIRST_GEN
            - SECOND_GEN
            - EXTERNAL
          description: '`SECOND_GEN`: Cloud SQL database instance. `EXTERNAL`: A database server that is not managed by Google. This property is read-only; use the `tier` property in the `settings` object to determine the database type.'
          type: string
          enumDescriptions:
            - This is an unknown backend type for instance.
            - V1 speckle instance.
            - V2 speckle instance.
            - On premises instance.
        region:
          type: string
          description: The cloud region for the instance. For example, `us-central1`, `europe-west1`. The region cannot be changed after instance creation.
        serverCaCert:
          description: SSL configuration.
          $ref: '#/components/schemas/SslCert'
        kind:
          description: This is always `sql#connectSettings`.
          type: string
      description: Connect settings retrieval response.
    ApiWarning:
      properties:
        code:
          enumDescriptions:
            - An unknown or unset warning type from Cloud SQL API.
            - Warning when one or more regions are not reachable. The returned result set may be incomplete.
            - Warning when user provided maxResults parameter exceeds the limit. The returned result set may be incomplete.
          enum:
            - SQL_API_WARNING_CODE_UNSPECIFIED
            - REGION_UNREACHABLE
            - MAX_RESULTS_EXCEEDS_LIMIT
          type: string
          description: Code to uniquely identify the warning type.
        message:
          description: The warning message.
          type: string
        region:
          description: The region name for REGION_UNREACHABLE warning.
          type: string
      type: object
      id: ApiWarning
      description: An Admin API warning message.
    ReplicaConfiguration:
      id: ReplicaConfiguration
      description: Read-replica configuration for connecting to the primary instance.
      properties:
        failoverTarget:
          description: Specifies if the replica is the failover target. If the field is set to `true`, the replica will be designated as a failover replica. In case the primary instance fails, the replica instance will be promoted as the new primary instance. Only one replica can be specified as failover target, and the replica has to be in different zone with the primary instance.
          type: boolean
        kind:
          description: This is always `sql#replicaConfiguration`.
          type: string
        mysqlReplicaConfiguration:
          $ref: '#/components/schemas/MySqlReplicaConfiguration'
          description: MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named `master.info` in the data directory.
      type: object
    SslCert:
      description: SslCerts Resource
      properties:
        sha1Fingerprint:
          type: string
          description: Sha1 Fingerprint.
        cert:
          type: string
          description: PEM representation.
        expirationTime:
          format: google-datetime
          type: string
          description: The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
        certSerialNumber:
          type: string
          description: Serial number, as extracted from the certificate.
        createTime:
          description: The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`
          format: google-datetime
          type: string
        commonName:
          type: string
          description: User supplied name. Constrained to [a-zA-Z.-_ ]+.
        kind:
          description: This is always `sql#sslCert`.
          type: string
        selfLink:
          type: string
          description: The URI of this resource.
        instance:
          type: string
          description: Name of the database instance.
      id: SslCert
      type: object
    SqlInstancesStartExternalSyncRequest:
      type: object
      id: SqlInstancesStartExternalSyncRequest
      description: Instance start external sync request.
      properties:
        syncMode:
          enumDescriptions:
            - Unknown external sync mode, will be defaulted to ONLINE mode
            - Online external sync will set up replication after initial data external sync
            - Offline external sync only dumps and loads a one-time snapshot of the primary instance's data
          type: string
          description: External sync mode.
          enum:
            - EXTERNAL_SYNC_MODE_UNSPECIFIED
            - ONLINE
            - OFFLINE
        mysqlSyncConfig:
          description: MySQL-specific settings for start external sync.
          $ref: '#/components/schemas/MySqlSyncConfig'
        skipVerification:
          type: boolean
          description: Whether to skip the verification step (VESS).
    SslCertDetail:
      properties:
        certInfo:
          $ref: '#/components/schemas/SslCert'
          description: The public information about the cert.
        certPrivateKey:
          type: string
          description: The private key for the client cert, in pem format. Keep private in order to protect your security.
      type: object
      description: SslCertDetail.
      id: SslCertDetail
    RestoreBackupContext:
      description: Database instance restore from backup context. Backup context contains source instance id and project id.
      properties:
        project:
          description: The full project ID of the source instance.
          type: string
        backupRunId:
          format: int64
          description: The ID of the backup run to restore from.
          type: string
        kind:
          type: string
          description: This is always `sql#restoreBackupContext`.
        instanceId:
          type: string
          description: The ID of the instance that the backup was taken from.
      id: RestoreBackupContext
      type: object
    MySqlSyncConfig:
      type: object
      properties:
        initialSyncFlags:
          type: array
          description: Flags to use for the initial dump.
          items:
            $ref: '#/components/schemas/SyncFlags'
      id: MySqlSyncConfig
      description: MySQL-specific external server sync settings.
    SqlServerUserDetails:
      description: Represents a Sql Server user on the Cloud SQL instance.
      type: object
      id: SqlServerUserDetails
      properties:
        disabled:
          description: If the user has been disabled
          type: boolean
        serverRoles:
          items:
            type: string
          description: The server roles for this user
          type: array
    InstancesListResponse:
      id: InstancesListResponse
      properties:
        items:
          items:
            $ref: '#/components/schemas/DatabaseInstance'
          type: array
          description: List of database instance resources.
        warnings:
          type: array
          description: List of warnings that occurred while handling the request.
          items:
            $ref: '#/components/schemas/ApiWarning'
        kind:
          type: string
          description: This is always `sql#instancesList`.
        nextPageToken:
          description: The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
          type: string
      description: Database instances list response.
      type: object
    Flag:
      properties:
        maxValue:
          description: For `INTEGER` flags, the maximum allowed value.
          type: string
          format: int64
        name:
          description: 'This is the name of the flag. Flag names always use underscores, not hyphens, for example: `max_allowed_packet`'
          type: string
        type:
          enum:
            - SQL_FLAG_TYPE_UNSPECIFIED
            - BOOLEAN
            - STRING
            - INTEGER
            - NONE
            - MYSQL_TIMEZONE_OFFSET
            - FLOAT
            - REPEATED_STRING
          description: The type of the flag. Flags are typed to being `BOOLEAN`, `STRING`, `INTEGER` or `NONE`. `NONE` is used for flags that do not take a value, such as `skip_grant_tables`.
          enumDescriptions:
            - This is an unknown flag type.
            - Boolean type flag.
            - String type flag.
            - Integer type flag.
            - Flag type used for a server startup option.
            - Type introduced specially for MySQL TimeZone offset. Accept a string value with the format [-12:59, 13:00].
            - Float type flag.
            - Comma-separated list of the strings in a SqlFlagType enum.
          type: string
        kind:
          type: string
          description: This is always `sql#flag`.
        inBeta:
          type: boolean
          description: Whether or not the flag is considered in beta.
        allowedStringValues:
          type: array
          description: For `STRING` flags, a list of strings that the value can be set to.
          items:
            type: string
        requiresRestart:
          type: boolean
          description: Indicates whether changing this flag will trigger a database restart. Only applicable to Second Generation instances.
        appliesTo:
          type: array
          description: 'The database version this flag applies to. Can be MySQL instances: `MYSQL_8_0`, `MYSQL_8_0_18`, `MYSQL_8_0_26`, `MYSQL_5_7`, or `MYSQL_5_6`. PostgreSQL instances: `POSTGRES_9_6`, `POSTGRES_10`, `POSTGRES_11` or `POSTGRES_12`. SQL Server instances: `SQLSERVER_2017_STANDARD`, `SQLSERVER_2017_ENTERPRISE`, `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`, `SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`, or `SQLSERVER_2019_WEB`. See [the complete list](/sql/docs/mysql/admin-api/rest/v1/SqlDatabaseVersion).'
          items:
            enum:
              - SQL_DATABASE_VERSION_UNSPECIFIED
              - MYSQL_5_1
              - MYSQL_5_5
              - MYSQL_5_6
              - MYSQL_5_7
              - SQLSERVER_2017_STANDARD
              - SQLSERVER_2017_ENTERPRISE
              - SQLSERVER_2017_EXPRESS
              - SQLSERVER_2017_WEB
              - POSTGRES_9_6
              - POSTGRES_10
              - POSTGRES_11
              - POSTGRES_12
              - POSTGRES_13
              - POSTGRES_14
              - MYSQL_8_0
              - MYSQL_8_0_18
              - MYSQL_8_0_26
              - MYSQL_8_0_27
              - MYSQL_8_0_28
              - MYSQL_8_0_29
              - MYSQL_8_0_30
              - MYSQL_8_0_31
              - SQLSERVER_2019_STANDARD
              - SQLSERVER_2019_ENTERPRISE
              - SQLSERVER_2019_EXPRESS
              - SQLSERVER_2019_WEB
            type: string
            enumDescriptions:
              - This is an unknown database version.
              - The database version is MySQL 5.1.
              - The database version is MySQL 5.5.
              - The database version is MySQL 5.6.
              - The database version is MySQL 5.7.
              - The database version is SQL Server 2017 Standard.
              - The database version is SQL Server 2017 Enterprise.
              - The database version is SQL Server 2017 Express.
              - The database version is SQL Server 2017 Web.
              - The database version is PostgreSQL 9.6.
              - The database version is PostgreSQL 10.
              - The database version is PostgreSQL 11.
              - The database version is PostgreSQL 12.
              - The database version is PostgreSQL 13.
              - The database version is PostgreSQL 14.
              - The database version is MySQL 8.
              - The database major version is MySQL 8.0 and the minor version is 18.
              - The database major version is MySQL 8.0 and the minor version is 26.
              - The database major version is MySQL 8.0 and the minor version is 27.
              - The database major version is MySQL 8.0 and the minor version is 28.
              - The database major version is MySQL 8.0 and the minor version is 29.
              - The database major version is MySQL 8.0 and the minor version is 30.
              - The database major version is MySQL 8.0 and the minor version is 31.
              - The database version is SQL Server 2019 Standard.
              - The database version is SQL Server 2019 Enterprise.
              - The database version is SQL Server 2019 Express.
              - The database version is SQL Server 2019 Web.
        minValue:
          format: int64
          description: For `INTEGER` flags, the minimum allowed value.
          type: string
        allowedIntValues:
          description: Use this field if only certain integers are accepted. Can be combined with min_value and max_value to add additional values.
          type: array
          items:
            type: string
            format: int64
      description: A flag resource.
      type: object
      id: Flag
    SyncFlags:
      id: SyncFlags
      description: Initial sync flags for certain Cloud SQL APIs. Currently used for the MySQL external server initial dump.
      properties:
        name:
          description: The name of the flag.
          type: string
        value:
          type: string
          description: The value of the flag. This field must be omitted if the flag doesn't take a value.
      type: object
    PasswordValidationPolicy:
      description: Database instance local user password validation policy
      id: PasswordValidationPolicy
      properties:
        disallowUsernameSubstring:
          type: boolean
          description: Disallow username as a part of the password.
        enablePasswordPolicy:
          type: boolean
          description: Whether the password policy is enabled or not.
        complexity:
          enum:
            - COMPLEXITY_UNSPECIFIED
            - COMPLEXITY_DEFAULT
          description: The complexity of the password.
          enumDescriptions:
            - Complexity check is not specified.
            - A combination of lowercase, uppercase, numeric, and non-alphanumeric characters.
          type: string
        reuseInterval:
          format: int32
          type: integer
          description: Number of previous passwords that cannot be reused.
        passwordChangeInterval:
          description: Minimum interval after which the password can be changed. This flag is only supported for PostgreSQL.
          type: string
          format: google-duration
        minLength:
          format: int32
          description: Minimum number of characters allowed.
          type: integer
      type: object
    BackupRun:
      id: BackupRun
      type: object
      description: A BackupRun resource.
      properties:
        kind:
          type: string
          description: This is always `sql#backupRun`.
        selfLink:
          description: The URI of this resource.
          type: string
        startTime:
          type: string
          format: google-datetime
          description: The time the backup operation actually started in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
        timeZone:
          description: Backup time zone to prevent restores to an instance with a different time zone. Now relevant only for SQL Server.
          type: string
        backupKind:
          type: string
          enumDescriptions:
            - This is an unknown BackupKind.
            - The snapshot based backups
            - Physical backups
          enum:
            - SQL_BACKUP_KIND_UNSPECIFIED
            - SNAPSHOT
            - PHYSICAL
          description: Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT.
        id:
          type: string
          format: int64
          description: The identifier for this backup run. Unique only for a specific Cloud SQL instance.
        enqueuedTime:
          description: The time the run was enqueued in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
          type: string
          format: google-datetime
        instance:
          type: string
          description: Name of the database instance.
        description:
          type: string
          description: The description of this run, only applicable to on-demand backups.
        location:
          type: string
          description: Location of the backups.
        status:
          enum:
            - SQL_BACKUP_RUN_STATUS_UNSPECIFIED
            - ENQUEUED
            - OVERDUE
            - RUNNING
            - FAILED
            - SUCCESSFUL
            - SKIPPED
            - DELETION_PENDING
            - DELETION_FAILED
            - DELETED
          type: string
          description: The status of this run.
          enumDescriptions:
            - The status of the run is unknown.
            - The backup operation was enqueued.
            - 'The backup is overdue across a given backup window. Indicates a problem. Example: Long-running operation in progress during the whole window.'
            - The backup is in progress.
            - The backup failed.
            - The backup was successful.
            - 'The backup was skipped (without problems) for a given backup window. Example: Instance was idle.'
            - The backup is about to be deleted.
            - The backup deletion failed.
            - The backup has been deleted.
        diskEncryptionStatus:
          description: Encryption status specific to a backup.
          $ref: '#/components/schemas/DiskEncryptionStatus'
        windowStartTime:
          format: google-datetime
          type: string
          description: The start time of the backup window during which this the backup was attempted in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
        diskEncryptionConfiguration:
          $ref: '#/components/schemas/DiskEncryptionConfiguration'
          description: Encryption configuration specific to a backup.
        error:
          $ref: '#/components/schemas/OperationError'
          description: Information about why the backup operation failed. This is only present if the run has the FAILED status.
        type:
          description: The type of this run; can be either "AUTOMATED" or "ON_DEMAND" or "FINAL". This field defaults to "ON_DEMAND" and is ignored, when specified for insert requests.
          enumDescriptions:
            - This is an unknown BackupRun type.
            - The backup schedule automatically triggers a backup.
            - The user manually triggers a backup.
          enum:
            - SQL_BACKUP_RUN_TYPE_UNSPECIFIED
            - AUTOMATED
            - ON_DEMAND
          type: string
        endTime:
          description: The time the backup operation completed in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
          format: google-datetime
          type: string
    GenerateEphemeralCertRequest:
      type: object
      description: Ephemeral certificate creation request.
      id: GenerateEphemeralCertRequest
      properties:
        readTime:
          format: google-datetime
          description: Optional. Optional snapshot read timestamp to trade freshness for performance.
          type: string
        validDuration:
          description: Optional. If set, it will contain the cert valid duration.
          type: string
          format: google-duration
        public_key:
          description: PEM encoded public key to include in the signed certificate.
          type: string
        access_token:
          type: string
          description: Optional. Access token to include in the signed certificate.
    TiersListResponse:
      properties:
        items:
          description: List of tiers.
          type: array
          items:
            $ref: '#/components/schemas/Tier'
        kind:
          type: string
          description: This is always `sql#tiersList`.
      type: object
      id: TiersListResponse
      description: Tiers list response.
    BackupRunsListResponse:
      description: Backup run list results.
      properties:
        nextPageToken:
          description: The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
          type: string
        items:
          items:
            $ref: '#/components/schemas/BackupRun'
          type: array
          description: A list of backup runs in reverse chronological order of the enqueued time.
        kind:
          type: string
          description: This is always `sql#backupRunsList`.
      type: object
      id: BackupRunsListResponse
    FlagsListResponse:
      description: Flags list response.
      type: object
      properties:
        kind:
          description: This is always `sql#flagsList`.
          type: string
        items:
          description: List of flags.
          items:
            $ref: '#/components/schemas/Flag'
          type: array
      id: FlagsListResponse
    InstancesRotateServerCaRequest:
      id: InstancesRotateServerCaRequest
      type: object
      properties:
        rotateServerCaContext:
          description: Contains details about the rotate server CA operation.
          $ref: '#/components/schemas/RotateServerCaContext'
      description: Rotate server CA request.
    MaintenanceWindow:
      description: Maintenance window. This specifies when a Cloud SQL instance is restarted for system maintenance purposes.
      type: object
      properties:
        updateTrack:
          description: 'Maintenance timing setting: `canary` (Earlier) or `stable` (Later). [Learn more](https://cloud.google.com/sql/docs/mysql/instance-settings#maintenance-timing-2ndgen).'
          type: string
          enum:
            - SQL_UPDATE_TRACK_UNSPECIFIED
            - canary
            - stable
          enumDescriptions:
            - This is an unknown maintenance timing preference.
            - For instance update that requires a restart, this update track indicates your instance prefer to restart for new version early in maintenance window.
            - For instance update that requires a restart, this update track indicates your instance prefer to let Cloud SQL choose the timing of restart (within its Maintenance window, if applicable).
        hour:
          description: hour of day - 0 to 23.
          type: integer
          format: int32
        kind:
          type: string
          description: This is always `sql#maintenanceWindow`.
        day:
          type: integer
          description: day of week (1-7), starting on Monday.
          format: int32
      id: MaintenanceWindow
    SqlServerDatabaseDetails:
      properties:
        compatibilityLevel:
          type: integer
          format: int32
          description: The version of SQL Server with which the database is to be made compatible
        recoveryModel:
          description: The recovery model of a SQL Server database
          type: string
      id: SqlServerDatabaseDetails
      type: object
      description: Represents a Sql Server database on the Cloud SQL instance.
    SqlActiveDirectoryConfig:
      description: Active Directory configuration, relevant only for Cloud SQL for SQL Server.
      properties:
        kind:
          description: This is always sql#activeDirectoryConfig.
          type: string
        domain:
          type: string
          description: The name of the domain (e.g., mydomain.com).
      type: object
      id: SqlActiveDirectoryConfig
    InstancesImportRequest:
      properties:
        importContext:
          description: Contains details about the import operation.
          $ref: '#/components/schemas/ImportContext'
      description: Database instance import request.
      type: object
      id: InstancesImportRequest
    UserPasswordValidationPolicy:
      type: object
      description: User level password validation policy.
      id: UserPasswordValidationPolicy
      properties:
        enableFailedAttemptsCheck:
          type: boolean
          description: If true, failed login attempts check will be enabled.
        status:
          $ref: '#/components/schemas/PasswordStatus'
          description: Output only. Read-only password status.
          readOnly: true
        passwordExpirationDuration:
          type: string
          format: google-duration
          description: Expiration duration after password is updated.
        allowedFailedAttempts:
          format: int32
          description: Number of failed login attempts allowed before user get locked.
          type: integer
        enablePasswordVerification:
          description: If true, the user must specify the current password before changing the password. This flag is supported only for MySQL.
          type: boolean
    UsersListResponse:
      description: User list response.
      properties:
        items:
          description: List of user resources in the instance.
          items:
            $ref: '#/components/schemas/User'
          type: array
        nextPageToken:
          description: An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation.
          type: string
        kind:
          type: string
          description: This is always `sql#usersList`.
      type: object
      id: UsersListResponse
    Settings:
      id: Settings
      properties:
        kind:
          type: string
          description: This is always `sql#settings`.
        databaseFlags:
          description: The database flags passed to the instance at startup.
          items:
            $ref: '#/components/schemas/DatabaseFlags'
          type: array
        crashSafeReplicationEnabled:
          type: boolean
          description: Configuration specific to read replica instances. Indicates whether database flags for crash-safe replication are enabled. This property was only applicable to First Generation instances.
        sqlServerAuditConfig:
          description: SQL Server specific audit configuration.
          $ref: '#/components/schemas/SqlServerAuditConfig'
        deletionProtectionEnabled:
          type: boolean
          description: Configuration to protect against accidental instance deletion.
        activeDirectoryConfig:
          $ref: '#/components/schemas/SqlActiveDirectoryConfig'
          description: Active Directory configuration, relevant only for Cloud SQL for SQL Server.
        activationPolicy:
          enum:
            - SQL_ACTIVATION_POLICY_UNSPECIFIED
            - ALWAYS
            - NEVER
            - ON_DEMAND
          description: 'The activation policy specifies when the instance is activated; it is applicable only when the instance state is RUNNABLE. Valid values: * `ALWAYS`: The instance is on, and remains so even in the absence of connection requests. * `NEVER`: The instance is off; it is not activated, even if a connection request arrives.'
          type: string
          enumDescriptions:
            - Unknown activation plan.
            - The instance is always up and running.
            - The instance never starts.
            - The instance starts upon receiving requests.
        dataDiskSizeGb:
          description: The size of data disk, in GB. The data disk size minimum is 10GB.
          format: int64
          type: string
        pricingPlan:
          description: The pricing plan for this instance. This can be either `PER_USE` or `PACKAGE`. Only `PER_USE` is supported for Second Generation instances.
          enum:
            - SQL_PRICING_PLAN_UNSPECIFIED
            - PACKAGE
            - PER_USE
          enumDescriptions:
            - This is an unknown pricing plan for this instance.
            - The instance is billed at a monthly flat rate.
            - The instance is billed per usage.
          type: string
        authorizedGaeApplications:
          items:
            type: string
          description: The App Engine app IDs that can access this instance. (Deprecated) Applied to First Generation instances only.
          type: array
        availabilityType:
          type: string
          enum:
            - SQL_AVAILABILITY_TYPE_UNSPECIFIED
            - ZONAL
            - REGIONAL
          enumDescriptions:
            - This is an unknown Availability type.
            - Zonal available instance.
            - Regional available instance.
          description: 'Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data accessibility. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available)./ For more information, see [Overview of the High Availability Configuration](https://cloud.google.com/sql/docs/mysql/high-availability).'
        maintenanceWindow:
          description: The maintenance window for this instance. This specifies when the instance can be restarted for maintenance purposes.
          $ref: '#/components/schemas/MaintenanceWindow'
        insightsConfig:
          $ref: '#/components/schemas/InsightsConfig'
          description: Insights configuration, for now relevant only for Postgres.
        userLabels:
          description: User-provided labels, represented as a dictionary where each label is a single key value pair.
          type: object
          additionalProperties:
            type: string
        replicationType:
          description: The type of replication this instance uses. This can be either `ASYNCHRONOUS` or `SYNCHRONOUS`. (Deprecated) This property was only applicable to First Generation instances.
          enumDescriptions:
            - This is an unknown replication type for a Cloud SQL instance.
            - The synchronous replication mode for First Generation instances. It is the default value.
            - The asynchronous replication mode for First Generation instances. It provides a slight performance gain, but if an outage occurs while this option is set to asynchronous, you can lose up to a few seconds of updates to your data.
          enum:
            - SQL_REPLICATION_TYPE_UNSPECIFIED
            - SYNCHRONOUS
            - ASYNCHRONOUS
          type: string
        settingsVersion:
          type: string
          description: The version of instance settings. This is a required field for update method to make sure concurrent updates are handled properly. During update, use the most recent settingsVersion value for this instance and do not try to update this value.
          format: int64
        databaseReplicationEnabled:
          type: boolean
          description: 'Configuration specific to read replica instances. Indicates whether replication is enabled or not. WARNING: Changing this restarts the instance.'
        ipConfiguration:
          $ref: '#/components/schemas/IpConfiguration'
          description: The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled for Second Generation instances.
        storageAutoResize:
          type: boolean
          description: Configuration to increase storage size automatically. The default value is true.
        locationPreference:
          $ref: '#/components/schemas/LocationPreference'
          description: The location preference settings. This allows the instance to be located as near as possible to either an App Engine app or Compute Engine zone for better performance. App Engine co-location was only applicable to First Generation instances.
        backupConfiguration:
          $ref: '#/components/schemas/BackupConfiguration'
          description: The daily backup configuration for the instance.
        passwordValidationPolicy:
          $ref: '#/components/schemas/PasswordValidationPolicy'
          description: The local user password validation policy of the instance.
        timeZone:
          description: Server timezone, relevant only for Cloud SQL for SQL Server.
          type: string
        denyMaintenancePeriods:
          type: array
          description: Deny maintenance periods
          items:
            $ref: '#/components/schemas/DenyMaintenancePeriod'
        tier:
          description: 'The tier (or machine type) for this instance, for example `db-custom-1-3840`. WARNING: Changing this restarts the instance.'
          type: string
        storageAutoResizeLimit:
          description: The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.
          format: int64
          type: string
        connectorEnforcement:
          type: string
          description: 'Specifies if connections must use Cloud SQL connectors. Option values include the following: `NOT_REQUIRED` (Cloud SQL instances can be connected without Cloud SQL Connectors) and `REQUIRED` (Only allow connections that use Cloud SQL Connectors). Note that using REQUIRED disables all existing authorized networks. If this field is not specified when creating a new instance, NOT_REQUIRED is used. If this field is not specified when patching or updating an existing instance, it is left unchanged in the instance.'
          enum:
            - CONNECTOR_ENFORCEMENT_UNSPECIFIED
            - NOT_REQUIRED
            - REQUIRED
          enumDescriptions:
            - The requirement for Cloud SQL connectors is unknown.
            - Do not require Cloud SQL connectors.
            - 'Require all connections to use Cloud SQL connectors, including the Cloud SQL Auth Proxy and Cloud SQL Java, Python, and Go connectors. Note: This disables all existing authorized networks.'
        collation:
          description: The name of server Instance collation.
          type: string
        dataDiskType:
          enum:
            - SQL_DATA_DISK_TYPE_UNSPECIFIED
            - PD_SSD
            - PD_HDD
            - OBSOLETE_LOCAL_SSD
          enumDescriptions:
            - This is an unknown data disk type.
            - An SSD data disk.
            - An HDD data disk.
            - This field is deprecated and will be removed from a future version of the API.
          type: string
          description: 'The type of data disk: `PD_SSD` (default) or `PD_HDD`. Not used for First Generation instances.'
      description: Database instance settings.
      type: object
    ImportContext:
      description: Database instance import context.
      id: ImportContext
      type: object
      properties:
        kind:
          description: This is always `sql#importContext`.
          type: string
        bakImportOptions:
          type: object
          properties:
            encryptionOptions:
              type: object
              properties:
                pvkPath:
                  description: Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form `gs://bucketName/fileName`. The instance must have write permissions to the bucket and read access to the file.
                  type: string
                pvkPassword:
                  description: Password that encrypts the private key
                  type: string
                certPath:
                  type: string
                  description: Path to the Certificate (.cer) in Cloud Storage, in the form `gs://bucketName/fileName`. The instance must have write permissions to the bucket and read access to the file.
            striped:
              type: boolean
              description: Whether or not the backup set being restored is striped. Applies only to Cloud SQL for SQL Server.
          description: Import parameters specific to SQL Server .BAK files
        fileType:
          description: 'The file type for the specified uri.\`SQL`: The file contains SQL statements. \`CSV`: The file contains CSV data.'
          enumDescriptions:
            - Unknown file type.
            - File containing SQL statements.
            - File in CSV format.
            - ''
          type: string
          enum:
            - SQL_FILE_TYPE_UNSPECIFIED
            - SQL
            - CSV
            - BAK
        uri:
          description: Path to the import file in Cloud Storage, in the form `gs://bucketName/fileName`. Compressed gzip files (.gz) are supported when `fileType` is `SQL`. The instance must have write permissions to the bucket and read access to the file.
          type: string
        importUser:
          description: The PostgreSQL user for this import operation. PostgreSQL instances only.
          type: string
        csvImportOptions:
          type: object
          description: Options for importing data as CSV.
          properties:
            linesTerminatedBy:
              type: string
              description: This is used to separate lines. If a line does not contain all fields, the rest of the columns are set to their default values.
            escapeCharacter:
              description: Specifies the character that should appear before a data character that needs to be escaped.
              type: string
            columns:
              type: array
              description: The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data.
              items:
                type: string
            fieldsTerminatedBy:
              type: string
              description: Specifies the character that separates columns within each row (line) of the file.
            table:
              type: string
              description: The table to which CSV data is imported.
            quoteCharacter:
              description: Specifies the quoting character to be used when a data value is quoted.
              type: string
        database:
          type: string
          description: The target database for the import. If `fileType` is `SQL`, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If `fileType` is `CSV`, one database must be specified.
    AclEntry:
      description: An entry for an Access Control list.
      type: object
      id: AclEntry
      properties:
        value:
          description: The allowlisted value for the access control list.
          type: string
        expirationTime:
          format: google-datetime
          type: string
          description: The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
        kind:
          type: string
          description: This is always `sql#aclEntry`.
        name:
          description: Optional. A label to identify this entry.
          type: string
    FailoverContext:
      id: FailoverContext
      type: object
      description: Database instance failover context.
      properties:
        kind:
          type: string
          description: This is always `sql#failoverContext`.
        settingsVersion:
          description: The current settings version of this instance. Request will be rejected if this version doesn't match the current settings version.
          format: int64
          type: string
    SqlOutOfDiskReport:
      properties:
        sqlOutOfDiskState:
          enum:
            - SQL_OUT_OF_DISK_STATE_UNSPECIFIED
            - NORMAL
            - SOFT_SHUTDOWN
          description: 'This field represents the state generated by the proactive database wellness job for OutOfDisk issues. * Writers: * the proactive database wellness job for OOD. * Readers: * the proactive database wellness job'
          type: string
          enumDescriptions:
            - Unspecified state
            - The instance has plenty space on data disk
            - Data disk is almost used up. It is shutdown to prevent data corruption.
        sqlMinRecommendedIncreaseSizeGb:
          format: int32
          type: integer
          description: 'The minimum recommended increase size in GigaBytes This field is consumed by the frontend * Writers: * the proactive database wellness job for OOD. * Readers:'
      id: SqlOutOfDiskReport
      description: This message wraps up the information written by out-of-disk detection job.
      type: object
    MySqlReplicaConfiguration:
      description: Read-replica configuration specific to MySQL databases.
      type: object
      id: MySqlReplicaConfiguration
      properties:
        username:
          type: string
          description: The username for the replication connection.
        connectRetryInterval:
          format: int32
          type: integer
          description: Seconds to wait between connect retries. MySQL's default is 60 seconds.
        clientCertificate:
          description: PEM representation of the replica's x509 certificate.
          type: string
        verifyServerCertificate:
          type: boolean
          description: Whether or not to check the primary instance's Common Name value in the certificate that it sends during the SSL handshake.
        caCertificate:
          type: string
          description: PEM representation of the trusted CA's x509 certificate.
        kind:
          description: This is always `sql#mysqlReplicaConfiguration`.
          type: string
        masterHeartbeatPeriod:
          type: string
          description: Interval in milliseconds between replication heartbeats.
          format: int64
        password:
          type: string
          description: The password for the replication connection.
        sslCipher:
          description: A list of permissible ciphers to use for SSL encryption.
          type: string
        clientKey:
          type: string
          description: PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.
        dumpFilePath:
          type: string
          description: Path to a SQL dump file in Google Cloud Storage from which the replica instance is to be created. The URI is in the form gs://bucketName/fileName. Compressed gzip files (.gz) are also supported. Dumps have the binlog co-ordinates from which replication begins. This can be accomplished by setting --master-data to 1 when using mysqldump.
    InstancesCloneRequest:
      description: Database instance clone request.
      properties:
        cloneContext:
          description: Contains details about the clone operation.
          $ref: '#/components/schemas/CloneContext'
      id: InstancesCloneRequest
      type: object
    BackupRetentionSettings:
      type: object
      description: We currently only support backup retention by specifying the number of backups we will retain.
      properties:
        retentionUnit:
          enum:
            - RETENTION_UNIT_UNSPECIFIED
            - COUNT
          type: string
          enumDescriptions:
            - Backup retention unit is unspecified, will be treated as COUNT.
            - Retention will be by count, eg. "retain the most recent 7 backups".
          description: The unit that 'retained_backups' represents.
        retainedBackups:
          format: int32
          description: Depending on the value of retention_unit, this is used to determine if a backup needs to be deleted. If retention_unit is 'COUNT', we will retain this many backups.
          type: integer
      id: BackupRetentionSettings
    InstancesListServerCasResponse:
      id: InstancesListServerCasResponse
      type: object
      description: Instances ListServerCas response.
      properties:
        activeVersion:
          type: string
        kind:
          type: string
          description: This is always `sql#instancesListServerCas`.
        certs:
          description: List of server CA certificates for the instance.
          type: array
          items:
            $ref: '#/components/schemas/SslCert'
    Database:
      type: object
      id: Database
      properties:
        etag:
          type: string
          description: This field is deprecated and will be removed from a future version of the API.
        instance:
          description: The name of the Cloud SQL instance. This does not include the project ID.
          type: string
        collation:
          description: The Cloud SQL collation value.
          type: string
        sqlserverDatabaseDetails:
          $ref: '#/components/schemas/SqlServerDatabaseDetails'
        project:
          type: string
          description: The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable.
        charset:
          type: string
          description: The Cloud SQL charset value.
        name:
          description: The name of the database in the Cloud SQL instance. This does not include the project ID or instance name.
          type: string
        selfLink:
          type: string
          description: The URI of this resource.
        kind:
          description: This is always `sql#database`.
          type: string
      description: Represents a SQL database on the Cloud SQL instance.
    InstancesFailoverRequest:
      properties:
        failoverContext:
          $ref: '#/components/schemas/FailoverContext'
          description: Failover Context.
      type: object
      id: InstancesFailoverRequest
      description: Instance failover request.
    InsightsConfig:
      description: Insights configuration. This specifies when Cloud SQL Insights feature is enabled and optional configuration.
      type: object
      properties:
        queryPlansPerMinute:
          format: int32
          type: integer
          description: Number of query execution plans captured by Insights per minute for all queries combined. Default is 5.
        queryStringLength:
          format: int32
          type: integer
          description: 'Maximum query length stored in bytes. Default value: 1024 bytes. Range: 256-4500 bytes. Query length more than this field value will be truncated to this value. When unset, query length will be the default value. Changing query length will restart the database.'
        queryInsightsEnabled:
          description: Whether Query Insights feature is enabled.
          type: boolean
        recordApplicationTags:
          type: boolean
          description: Whether Query Insights will record application tags from query when enabled.
        recordClientAddress:
          description: Whether Query Insights will record client address when enabled.
          type: boolean
      id: InsightsConfig
    PasswordStatus:
      description: Read-only password status.
      id: PasswordStatus
      properties:
        locked:
          type: boolean
          description: If true, user does not have login privileges.
        passwordExpirationTime:
          format: google-datetime
          description: The expiration time of the current password.
          type: string
      type: object
    SslCertsCreateEphemeralRequest:
      type: object
      description: SslCerts create ephemeral certificate request.
      properties:
        access_token:
          type: string
          description: Access token to include in the signed certificate.
        public_key:
          type: string
          description: PEM encoded public key to include in the signed certificate.
      id: SslCertsCreateEphemeralRequest
    BinLogCoordinates:
      type: object
      id: BinLogCoordinates
      properties:
        binLogFileName:
          description: Name of the binary log file for a Cloud SQL instance.
          type: string
        binLogPosition:
          type: string
          format: int64
          description: Position (offset) within the binary log file.
        kind:
          description: This is always `sql#binLogCoordinates`.
          type: string
      description: Binary log coordinates.
    BackupConfiguration:
      description: Database instance backup configuration.
      properties:
        enabled:
          type: boolean
          description: Whether this configuration is enabled.
        binaryLogEnabled:
          description: (MySQL only) Whether binary log is enabled. If backup configuration is disabled, binarylog must be disabled as well.
          type: boolean
        location:
          description: Location of the backup
          type: string
        startTime:
          type: string
          description: Start time for the daily backup configuration in UTC timezone in the 24 hour format - `HH:MM`.
        pointInTimeRecoveryEnabled:
          description: (Postgres only) Whether point in time recovery is enabled.
          type: boolean
        replicationLogArchivingEnabled:
          description: Reserved for future use.
          type: boolean
        transactionLogRetentionDays:
          type: integer
          format: int32
          description: The number of days of transaction logs we retain for point in time restore, from 1-7.
        kind:
          type: string
          description: This is always `sql#backupConfiguration`.
        backupRetentionSettings:
          $ref: '#/components/schemas/BackupRetentionSettings'
          description: Backup retention settings.
      id: BackupConfiguration
      type: object
    SqlScheduledMaintenance:
      type: object
      id: SqlScheduledMaintenance
      description: Any scheduled maintenance for this instance.
      properties:
        startTime:
          format: google-datetime
          description: The start time of any upcoming scheduled maintenance for this instance.
          type: string
        canDefer:
          type: boolean
        canReschedule:
          type: boolean
          description: If the scheduled maintenance can be rescheduled.
        scheduleDeadlineTime:
          format: google-datetime
          description: Maintenance cannot be rescheduled to start beyond this deadline.
          type: string
    User:
      description: A Cloud SQL user resource.
      type: object
      properties:
        type:
          enum:
            - BUILT_IN
            - CLOUD_IAM_USER
            - CLOUD_IAM_SERVICE_ACCOUNT
          description: The user type. It determines the method to authenticate the user during login. The default is the database's built-in user type.
          type: string
          enumDescriptions:
            - The database's built-in user type.
            - Cloud IAM user.
            - Cloud IAM service account.
        host:
          description: Optional. The host from which the user can connect. For `insert` operations, host defaults to an empty string. For `update` operations, host is specified as part of the request URL. The host name cannot be updated after insertion. For a MySQL instance, it's required; for a PostgreSQL or SQL Server instance, it's optional.
          type: string
        passwordPolicy:
          $ref: '#/components/schemas/UserPasswordValidationPolicy'
          description: User level password validation policy.
        password:
          type: string
          description: The password for the user.
        project:
          type: string
          description: The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable. Can be omitted for `update` because it is already specified on the URL.
        dualPasswordType:
          enumDescriptions:
            - The default value.
            - Do not update the user's dual password status.
            - No dual password usable for connecting using this user.
            - Dual password usable for connecting using this user.
          description: Dual password status for the user.
          enum:
            - DUAL_PASSWORD_TYPE_UNSPECIFIED
            - NO_MODIFY_DUAL_PASSWORD
            - NO_DUAL_PASSWORD
            - DUAL_PASSWORD
          type: string
        instance:
          type: string
          description: The name of the Cloud SQL instance. This does not include the project ID. Can be omitted for `update` because it is already specified on the URL.
        name:
          type: string
          description: The name of the user in the Cloud SQL instance. Can be omitted for `update` because it is already specified in the URL.
        kind:
          type: string
          description: This is always `sql#user`.
        etag:
          type: string
          description: This field is deprecated and will be removed from a future version of the API.
        sqlserverUserDetails:
          $ref: '#/components/schemas/SqlServerUserDetails'
      id: User
    DatabaseFlags:
      description: Database flags for Cloud SQL instances.
      type: object
      properties:
        name:
          description: The name of the flag. These flags are passed at instance startup, so include both server options and system variables. Flags are specified with underscores, not hyphens. For more information, see [Configuring Database Flags](https://cloud.google.com/sql/docs/mysql/flags) in the Cloud SQL documentation.
          type: string
        value:
          description: The value of the flag. Boolean flags are set to `on` for true and `off` for false. This field must be omitted if the flag doesn't take a value.
          type: string
      id: DatabaseFlags
    SqlServerAuditConfig:
      description: SQL Server specific audit configuration.
      type: object
      id: SqlServerAuditConfig
      properties:
        uploadInterval:
          description: How often to upload generated audit files.
          format: google-duration
          type: string
        kind:
          type: string
          description: This is always sql#sqlServerAuditConfig
        bucket:
          type: string
          description: The name of the destination bucket (e.g., gs://mybucket).
        retentionInterval:
          format: google-duration
          type: string
          description: How long to keep generated audit files.
    DemoteMasterConfiguration:
      properties:
        mysqlReplicaConfiguration:
          description: MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named `master.info` in the data directory.
          $ref: '#/components/schemas/DemoteMasterMySqlReplicaConfiguration'
        kind:
          type: string
          description: This is always `sql#demoteMasterConfiguration`.
      type: object
      id: DemoteMasterConfiguration
      description: Read-replica configuration for connecting to the on-premises primary instance.
    LocationPreference:
      type: object
      description: Preferred location. This specifies where a Cloud SQL instance is located. Note that if the preferred location is not available, the instance will be located as close as possible within the region. Only one location may be specified.
      properties:
        secondaryZone:
          type: string
          description: 'The preferred Compute Engine zone for the secondary/failover (for example: us-central1-a, us-central1-b, etc.).'
        followGaeApplication:
          type: string
          description: 'The App Engine application to follow, it must be in the same region as the Cloud SQL instance. WARNING: Changing this might restart the instance.'
        zone:
          description: 'The preferred Compute Engine zone (for example: us-central1-a, us-central1-b, etc.). WARNING: Changing this might restart the instance.'
          type: string
        kind:
          type: string
          description: This is always `sql#locationPreference`.
      id: LocationPreference
    DiskEncryptionConfiguration:
      properties:
        kmsKeyName:
          type: string
          description: Resource name of KMS key for disk encryption
        kind:
          description: This is always `sql#diskEncryptionConfiguration`.
          type: string
      id: DiskEncryptionConfiguration
      description: Disk encryption configuration for an instance.
      type: object
    IpConfiguration:
      description: IP Management configuration.
      id: IpConfiguration
      properties:
        allocatedIpRange:
          description: 'The name of the allocated ip range for the private ip Cloud SQL instance. For example: "google-managed-services-default". If set, the instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?.`'
          type: string
        enablePrivatePathForGoogleCloudServices:
          description: Controls connectivity to private IP instances from Google services, such as BigQuery.
          type: boolean
        ipv4Enabled:
          type: boolean
          description: Whether the instance is assigned a public IP address or not.
        requireSsl:
          description: Whether SSL connections over IP are enforced or not.
          type: boolean
        privateNetwork:
          description: The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `/projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set.
          type: string
        authorizedNetworks:
          items:
            $ref: '#/components/schemas/AclEntry'
          type: array
          description: 'The list of external networks that are allowed to connect to the instance using the IP. In ''CIDR'' notation, also known as ''slash'' notation (for example: `157.197.200.0/24`).'
      type: object
    SqlInstancesVerifyExternalSyncSettingsRequest:
      properties:
        mysqlSyncConfig:
          description: Optional. MySQL-specific settings for start external sync.
          $ref: '#/components/schemas/MySqlSyncConfig'
        verifyReplicationOnly:
          description: Optional. Flag to verify settings required by replication setup only
          type: boolean
        syncMode:
          enum:
            - EXTERNAL_SYNC_MODE_UNSPECIFIED
            - ONLINE
            - OFFLINE
          enumDescriptions:
            - Unknown external sync mode, will be defaulted to ONLINE mode
            - Online external sync will set up replication after initial data external sync
            - Offline external sync only dumps and loads a one-time snapshot of the primary instance's data
          type: string
          description: External sync mode
        verifyConnectionOnly:
          type: boolean
          description: Flag to enable verifying connection only
      type: object
      id: SqlInstancesVerifyExternalSyncSettingsRequest
      description: Instance verify external sync settings request.
    BackupContext:
      properties:
        kind:
          type: string
          description: This is always `sql#backupContext`.
        backupId:
          description: The identifier of the backup.
          type: string
          format: int64
      description: Backup context.
      type: object
      id: BackupContext
    SqlInstancesVerifyExternalSyncSettingsResponse:
      properties:
        kind:
          description: This is always `sql#migrationSettingErrorList`.
          type: string
        warnings:
          description: List of migration warnings.
          type: array
          items:
            $ref: '#/components/schemas/SqlExternalSyncSettingError'
        errors:
          description: List of migration violations.
          type: array
          items:
            $ref: '#/components/schemas/SqlExternalSyncSettingError'
      type: object
      description: Instance verify external sync settings response.
      id: SqlInstancesVerifyExternalSyncSettingsResponse
    SslCertsInsertRequest:
      description: SslCerts insert request.
      properties:
        commonName:
          description: User supplied name. Must be a distinct name from the other certificates for this instance.
          type: string
      type: object
      id: SslCertsInsertRequest
    DenyMaintenancePeriod:
      description: Deny maintenance Periods. This specifies a date range during when all CSA rollout will be denied.
      properties:
        startDate:
          description: '"deny maintenance period" start date. If the year of the start date is empty, the year of the end date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01'
          type: string
        time:
          type: string
          description: 'Time in UTC when the "deny maintenance period" starts on start_date and ends on end_date. The time is in format: HH:mm:SS, i.e., 00:00:00'
        endDate:
          type: string
          description: '"deny maintenance period" end date. If the year of the end date is empty, the year of the start date also must be empty. In this case, it means the no maintenance interval recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01'
      id: DenyMaintenancePeriod
      type: object
    DemoteMasterContext:
      type: object
      id: DemoteMasterContext
      description: Database instance demote primary instance context.
      properties:
        masterInstanceName:
          description: The name of the instance which will act as on-premises primary instance in the replication setup.
          type: string
        replicaConfiguration:
          $ref: '#/components/schemas/DemoteMasterConfiguration'
          description: Configuration specific to read-replicas replicating from the on-premises primary instance.
        verifyGtidConsistency:
          description: 'Verify the GTID consistency for demote operation. Default value: `True`. Setting this flag to `false` enables you to bypass the GTID consistency check between on-premises primary instance and Cloud SQL instance during the demotion operation but also exposes you to the risk of future replication failures. Change the value only if you know the reason for the GTID divergence and are confident that doing so will not cause any replication issues.'
          type: boolean
        skipReplicationSetup:
          description: Flag to skip replication setup on the instance.
          type: boolean
        kind:
          type: string
          description: This is always `sql#demoteMasterContext`.
    RotateServerCaContext:
      id: RotateServerCaContext
      description: Instance rotate server CA context.
      properties:
        nextVersion:
          type: string
          description: The fingerprint of the next version to be rotated to. If left unspecified, will be rotated to the most recently added server CA version.
        kind:
          type: string
          description: This is always `sql#rotateServerCaContext`.
      type: object
    ExportContext:
      id: ExportContext
      type: object
      properties:
        bakExportOptions:
          properties:
            striped:
              type: boolean
              description: Whether or not the export should be striped.
            stripeCount:
              description: Option for specifying how many stripes to use for the export. If blank, and the value of the striped field is true, the number of stripes is automatically chosen.
              format: int32
              type: integer
          description: Options for exporting BAK files (SQL Server-only)
          type: object
        offload:
          type: boolean
          description: Option for export offload.
        databases:
          description: Databases to be exported. `MySQL instances:` If `fileType` is `SQL` and no database is specified, all databases are exported, except for the `mysql` system database. If `fileType` is `CSV`, you can specify one database, either by using this property or by using the `csvExportOptions.selectQuery` property, which takes precedence over this property. `PostgreSQL instances:` You must specify one database to be exported. If `fileType` is `CSV`, this database must match the one specified in the `csvExportOptions.selectQuery` property. `SQL Server instances:` You must specify one database to be exported, and the `fileType` must be `BAK`.
          type: array
          items:
            type: string
        sqlExportOptions:
          type: object
          description: Options for exporting data as SQL statements.
          properties:
            mysqlExportOptions:
              type: object
              description: Options for exporting from MySQL.
              properties:
                masterData:
                  description: Option to include SQL statement required to set up replication. If set to `1`, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates, and --set-gtid-purged is set to ON. If set to `2`, the CHANGE MASTER TO statement is written as a SQL comment and has no effect. If set to any value other than `1`, --set-gtid-purged is set to OFF.
                  format: int32
                  type: integer
            tables:
              type: array
              description: Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table.
              items:
                type: string
            schemaOnly:
              type: boolean
              description: Export only schemas.
        csvExportOptions:
          description: Options for exporting data as CSV. `MySQL` and `PostgreSQL` instances only.
          properties:
            linesTerminatedBy:
              description: This is used to separate lines. If a line does not contain all fields, the rest of the columns are set to their default values.
              type: string
            fieldsTerminatedBy:
              type: string
              description: Specifies the character that separates columns within each row (line) of the file.
            selectQuery:
              type: string
              description: The select query used to extract the data.
            quoteCharacter:
              type: string
              description: Specifies the quoting character to be used when a data value is quoted.
            escapeCharacter:
              description: Specifies the character that should appear before a data character that needs to be escaped.
              type: string
          type: object
        kind:
          type: string
          description: This is always `sql#exportContext`.
        uri:
          description: The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form `gs://bucketName/fileName`. If the file already exists, the request succeeds, but the operation fails. If `fileType` is `SQL` and the filename ends with .gz, the contents are compressed.
          type: string
        fileType:
          enumDescriptions:
            - Unknown file type.
            - File containing SQL statements.
            - File in CSV format.
            - ''
          description: The file type for the specified uri.
          enum:
            - SQL_FILE_TYPE_UNSPECIFIED
            - SQL
            - CSV
            - BAK
          type: string
      description: Database instance export context.
    OnPremisesConfiguration:
      properties:
        username:
          description: The username for connecting to on-premises instance.
          type: string
        clientCertificate:
          type: string
          description: PEM representation of the replica's x509 certificate.
        clientKey:
          type: string
          description: PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.
        sourceInstance:
          $ref: '#/components/schemas/InstanceReference'
          description: The reference to Cloud SQL instance if the source is Cloud SQL.
        hostPort:
          type: string
          description: The host and port of the on-premises instance in host:port format
        password:
          description: The password for connecting to on-premises instance.
          type: string
        caCertificate:
          description: PEM representation of the trusted CA's x509 certificate.
          type: string
        kind:
          type: string
          description: This is always `sql#onPremisesConfiguration`.
        dumpFilePath:
          type: string
          description: The dump file to create the Cloud SQL replica.
      description: On-premises instance configuration.
      id: OnPremisesConfiguration
      type: object
    InstancesRestoreBackupRequest:
      type: object
      properties:
        restoreBackupContext:
          description: Parameters required to perform the restore backup operation.
          $ref: '#/components/schemas/RestoreBackupContext'
      description: Database instance restore backup request.
      id: InstancesRestoreBackupRequest
    Tier:
      description: A Google Cloud SQL service tier resource.
      type: object
      id: Tier
      properties:
        kind:
          description: This is always `sql#tier`.
          type: string
        DiskQuota:
          description: The maximum disk size of this tier in bytes.
          format: int64
          type: string
        region:
          type: array
          items:
            type: string
          description: The applicable regions for this tier.
        RAM:
          type: string
          description: The maximum RAM usage of this tier in bytes.
          format: int64
        tier:
          description: An identifier for the machine type, for example, `db-custom-1-3840`. For related information, see [Pricing](/sql/pricing).
          type: string
    InstancesExportRequest:
      id: InstancesExportRequest
      description: Database instance export request.
      type: object
      properties:
        exportContext:
          description: Contains details about the export operation.
          $ref: '#/components/schemas/ExportContext'
    GenerateEphemeralCertResponse:
      type: object
      id: GenerateEphemeralCertResponse
      description: Ephemeral certificate creation request.
      properties:
        ephemeralCert:
          $ref: '#/components/schemas/SslCert'
          description: Generated cert
    CloneContext:
      type: object
      id: CloneContext
      description: Database instance clone context.
      properties:
        pointInTime:
          type: string
          format: google-datetime
          description: Timestamp, if specified, identifies the time to which the source instance is cloned.
        destinationInstanceName:
          description: Name of the Cloud SQL instance to be created as a clone.
          type: string
        pitrTimestampMs:
          type: string
          description: Reserved for future use.
          format: int64
        binLogCoordinates:
          description: Binary log coordinates, if specified, identify the position up to which the source instance is cloned. If not specified, the source instance is cloned up to the most recent binary log coordinates.
          $ref: '#/components/schemas/BinLogCoordinates'
        databaseNames:
          type: array
          items:
            type: string
          description: (SQL Server only) Clone only the specified databases from the source instance. Clone all databases if empty.
        kind:
          description: This is always `sql#cloneContext`.
          type: string
        allocatedIpRange:
          description: 'The name of the allocated ip range for the private ip Cloud SQL instance. For example: "google-managed-services-default". If set, the cloned instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?. Reserved for future use.'
          type: string
    SqlExternalSyncSettingError:
      type: object
      properties:
        detail:
          type: string
          description: Additional information about the error encountered.
        kind:
          description: Can be `sql#externalSyncSettingError` or `sql#externalSyncSettingWarning`.
          type: string
        type:
          enum:
            - SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED
            - CONNECTION_FAILURE
            - BINLOG_NOT_ENABLED
            - INCOMPATIBLE_DATABASE_VERSION
            - REPLICA_ALREADY_SETUP
            - INSUFFICIENT_PRIVILEGE
            - UNSUPPORTED_MIGRATION_TYPE
            - NO_PGLOGICAL_INSTALLED
            - PGLOGICAL_NODE_ALREADY_EXISTS
            - INVALID_WAL_LEVEL
            - INVALID_SHARED_PRELOAD_LIBRARY
            - INSUFFICIENT_MAX_REPLICATION_SLOTS
            - INSUFFICIENT_MAX_WAL_SENDERS
            - INSUFFICIENT_MAX_WORKER_PROCESSES
            - UNSUPPORTED_EXTENSIONS
            - INVALID_RDS_LOGICAL_REPLICATION
            - INVALID_LOGGING_SETUP
            - INVALID_DB_PARAM
            - UNSUPPORTED_GTID_MODE
            - SQLSERVER_AGENT_NOT_RUNNING
            - UNSUPPORTED_TABLE_DEFINITION
            - UNSUPPORTED_DEFINER
            - SQLSERVER_SERVERNAME_MISMATCH
            - PRIMARY_ALREADY_SETUP
            - UNSUPPORTED_BINLOG_FORMAT
            - BINLOG_RETENTION_SETTING
            - UNSUPPORTED_STORAGE_ENGINE
            - LIMITED_SUPPORT_TABLES
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - Unsupported migration type.
            - No pglogical extension installed on databases, applicable for postgres.
            - pglogical node already exists on databases, applicable for postgres.
            - The value of parameter wal_level is not set to logical.
            - The value of parameter shared_preload_libraries does not include pglogical.
            - The value of parameter max_replication_slots is not sufficient.
            - The value of parameter max_wal_senders is not sufficient.
            - The value of parameter max_worker_processes is not sufficient.
            - Extensions installed are either not supported or having unsupported versions
            - The value of parameter rds.logical_replication is not set to 1.
            - The primary instance logging setup doesn't allow EM sync.
            - The primary instance database parameter setup doesn't allow EM sync.
            - The gtid_mode is not supported, applicable for MySQL.
            - SQL Server Agent is not running.
            - The table definition is not support due to missing primary key or replica identity, applicable for postgres.
            - The customer has a definer that will break EM setup.
            - SQL Server @@SERVERNAME does not match actual host name
            - The primary instance has been setup and will fail the setup.
            - The primary instance has unsupported binary log format.
            - The primary instance's binary log retention setting.
            - The primary instance has tables with unsupported storage engine.
            - 'Source has tables with limited support eg: PostgreSQL tables without primary keys'
          description: Identifies the specific error that occurred.
          type: string
      description: External primary instance migration setting error/warning.
      id: SqlExternalSyncSettingError
    DemoteMasterMySqlReplicaConfiguration:
      description: Read-replica configuration specific to MySQL databases.
      properties:
        kind:
          description: This is always `sql#demoteMasterMysqlReplicaConfiguration`.
          type: string
        password:
          description: The password for the replication connection.
          type: string
        caCertificate:
          description: PEM representation of the trusted CA's x509 certificate.
          type: string
        username:
          type: string
          description: The username for the replication connection.
        clientKey:
          type: string
          description: 'PEM representation of the replica''s private key. The corresponsing public key is encoded in the client''s certificate. The format of the replica''s private key can be either PKCS #1 or PKCS #8.'
        clientCertificate:
          type: string
          description: PEM representation of the replica's x509 certificate.
      id: DemoteMasterMySqlReplicaConfiguration
      type: object
    DiskEncryptionStatus:
      description: Disk encryption status for an instance.
      id: DiskEncryptionStatus
      properties:
        kmsKeyVersionName:
          description: KMS key version used to encrypt the Cloud SQL instance resource
          type: string
        kind:
          type: string
          description: This is always `sql#diskEncryptionStatus`.
      type: object
    TruncateLogContext:
      description: Database Instance truncate log context.
      type: object
      id: TruncateLogContext
      properties:
        logType:
          type: string
          description: The type of log to truncate. Valid values are `MYSQL_GENERAL_TABLE` and `MYSQL_SLOW_TABLE`.
        kind:
          type: string
          description: This is always `sql#truncateLogContext`.
    SslCertsInsertResponse:
      properties:
        kind:
          description: This is always `sql#sslCertsInsert`.
          type: string
        serverCaCert:
          description: The server Certificate Authority's certificate. If this is missing you can force a new one to be generated by calling resetSslConfig method on instances resource.
          $ref: '#/components/schemas/SslCert'
        clientCert:
          description: The new client certificate and private key.
          $ref: '#/components/schemas/SslCertDetail'
        operation:
          $ref: '#/components/schemas/Operation'
          description: The operation to track the ssl certs insert request.
      type: object
      description: SslCert insert response.
      id: SslCertsInsertResponse
    InstanceReference:
      description: Reference to another Cloud SQL instance.
      type: object
      id: InstanceReference
      properties:
        name:
          description: The name of the Cloud SQL instance being referenced. This does not include the project ID.
          type: string
        region:
          type: string
          description: The region of the Cloud SQL instance being referenced.
        project:
          description: The project ID of the Cloud SQL instance being referenced. The default is the same project ID as the instance references it.
          type: string
    OperationsListResponse:
      description: Operations list response.
      id: OperationsListResponse
      properties:
        nextPageToken:
          description: The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
          type: string
        kind:
          type: string
          description: This is always `sql#operationsList`.
        items:
          description: List of operation resources.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
      type: object
    SslCertsListResponse:
      id: SslCertsListResponse
      type: object
      properties:
        items:
          description: List of client certificates for the instance.
          type: array
          items:
            $ref: '#/components/schemas/SslCert'
        kind:
          description: This is always `sql#sslCertsList`.
          type: string
      description: SslCerts list response.
    DatabasesListResponse:
      properties:
        kind:
          type: string
          description: This is always `sql#databasesList`.
        items:
          description: List of database resources in the instance.
          type: array
          items:
            $ref: '#/components/schemas/Database'
      description: Database list response.
      id: DatabasesListResponse
      type: object
    InstancesTruncateLogRequest:
      properties:
        truncateLogContext:
          $ref: '#/components/schemas/TruncateLogContext'
          description: Contains details about the truncate log operation.
      type: object
      id: InstancesTruncateLogRequest
      description: Instance truncate log request.
    IpMapping:
      properties:
        type:
          type: string
          enum:
            - SQL_IP_ADDRESS_TYPE_UNSPECIFIED
            - PRIMARY
            - OUTGOING
            - PRIVATE
            - MIGRATED_1ST_GEN
          description: The type of this IP address. A `PRIMARY` address is a public address that can accept incoming connections. A `PRIVATE` address is a private address that can accept incoming connections. An `OUTGOING` address is the source address of connections originating from the instance, if supported.
          enumDescriptions:
            - This is an unknown IP address type.
            - IP address the customer is supposed to connect to. Usually this is the load balancer's IP address
            - Source IP address of the connection a read replica establishes to its external primary instance. This IP address can be allowlisted by the customer in case it has a firewall that filters incoming connection to its on premises primary instance.
            - Private IP used when using private IPs and network peering.
            - 'V1 IP of a migrated instance. We want the user to decommission this IP as soon as the migration is complete. Note: V1 instances with V1 ip addresses will be counted as PRIMARY.'
        ipAddress:
          description: The IP address assigned.
          type: string
        timeToRetire:
          type: string
          description: The due time for this IP to be retired in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. This field is only available when the IP is scheduled to be retired.
          format: google-datetime
      description: Database instance IP Mapping.
      type: object
      id: IpMapping
    OperationErrors:
      id: OperationErrors
      type: object
      description: Database instance operation errors list wrapper.
      properties:
        kind:
          type: string
          description: This is always `sql#operationErrors`.
        errors:
          type: array
          description: The list of errors encountered while processing this operation.
          items:
            $ref: '#/components/schemas/OperationError'
    SqlInstancesRescheduleMaintenanceRequestBody:
      id: SqlInstancesRescheduleMaintenanceRequestBody
      type: object
      description: Reschedule options for maintenance windows.
      properties:
        reschedule:
          $ref: '#/components/schemas/Reschedule'
          description: Required. The type of the reschedule the user wants.
    Reschedule:
      id: Reschedule
      type: object
      properties:
        rescheduleType:
          type: string
          enum:
            - RESCHEDULE_TYPE_UNSPECIFIED
            - IMMEDIATE
            - NEXT_AVAILABLE_WINDOW
            - SPECIFIC_TIME
          description: Required. The type of the reschedule.
          enumDescriptions:
            - ''
            - Reschedules maintenance to happen now (within 5 minutes).
            - Reschedules maintenance to occur within one week from the originally scheduled day and time.
            - Reschedules maintenance to a specific time and day.
        scheduleTime:
          description: Optional. Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
          type: string
          format: google-datetime
    OperationError:
      type: object
      description: Database instance operation error.
      id: OperationError
      properties:
        kind:
          description: This is always `sql#operationError`.
          type: string
        message:
          description: Additional information about the error encountered.
          type: string
        code:
          description: Identifies the specific error that occurred.
          type: string
    DatabaseInstance:
      id: DatabaseInstance
      type: object
      description: A Cloud SQL instance resource.
      properties:
        availableMaintenanceVersions:
          type: array
          items:
            type: string
          description: List all maintenance versions applicable on the instance
        rootPassword:
          type: string
          description: Initial root password. Use only on creation. You must set root passwords before you can connect to PostgreSQL instances.
        masterInstanceName:
          description: The name of the instance which will act as primary in the replication setup.
          type: string
        name:
          type: string
          description: Name of the Cloud SQL instance. This does not include the project ID.
        maxDiskSize:
          type: string
          description: The maximum disk size of the instance in bytes.
          format: int64
        project:
          description: The project ID of the project containing the Cloud SQL instance. The Google apps domain is prefixed if applicable.
          type: string
        selfLink:
          description: The URI of this resource.
          type: string
        etag:
          type: string
          description: This field is deprecated and will be removed from a future version of the API. Use the `settings.settingsVersion` field instead.
        currentDiskSize:
          description: The current disk usage of the instance in bytes. This property has been deprecated. Use the "cloudsql.googleapis.com/database/disk/bytes_used" metric in Cloud Monitoring API instead. Please see [this announcement](https://groups.google.com/d/msg/google-cloud-sql-announce/I_7-F9EBhT0/BtvFtdFeAgAJ) for details.
          format: int64
          type: string
        region:
          description: 'The geographical region. Can be: * `us-central` (`FIRST_GEN` instances only) * `us-central1` (`SECOND_GEN` instances only) * `asia-east1` or `europe-west1`. Defaults to `us-central` or `us-central1` depending on the instance type. The region cannot be changed after instance creation.'
          type: string
        state:
          type: string
          enum:
            - SQL_INSTANCE_STATE_UNSPECIFIED
            - RUNNABLE
            - SUSPENDED
            - PENDING_DELETE
            - PENDING_CREATE
            - MAINTENANCE
            - FAILED
            - ONLINE_MAINTENANCE
          description: The current serving state of the Cloud SQL instance.
          enumDescriptions:
            - The state of the instance is unknown.
            - The instance is running, or has been stopped by owner.
            - The instance is not available, for example due to problems with billing.
            - The instance is being deleted.
            - The instance is being created.
            - The instance is down for maintenance.
            - The creation of the instance failed or a fatal error occurred during maintenance.
            - Deprecated
        onPremisesConfiguration:
          $ref: '#/components/schemas/OnPremisesConfiguration'
          description: Configuration specific to on-premises instances.
        secondaryGceZone:
          type: string
          description: The Compute Engine zone that the failover instance is currently serving from for a regional instance. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary/failover zone.
        settings:
          description: The user settings.
          $ref: '#/components/schemas/Settings'
        serverCaCert:
          $ref: '#/components/schemas/SslCert'
          description: SSL configuration.
        replicaNames:
          type: array
          description: The replicas of the instance.
          items:
            type: string
        ipv6Address:
          description: The IPv6 address assigned to the instance. (Deprecated) This property was applicable only to First Generation instances.
          type: string
        kind:
          type: string
          description: This is always `sql#instance`.
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time when the instance was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
        ipAddresses:
          items:
            $ref: '#/components/schemas/IpMapping'
          description: The assigned IP addresses for the instance.
          type: array
        outOfDiskReport:
          description: 'This field represents the report generated by the proactive database wellness job for OutOfDisk issues. * Writers: * the proactive database wellness job for OOD. * Readers: * the proactive database wellness job'
          $ref: '#/components/schemas/SqlOutOfDiskReport'
        maintenanceVersion:
          type: string
          description: The current software version on the instance.
        diskEncryptionConfiguration:
          $ref: '#/components/schemas/DiskEncryptionConfiguration'
          description: Disk encryption configuration specific to an instance.
        instanceType:
          type: string
          enum:
            - SQL_INSTANCE_TYPE_UNSPECIFIED
            - CLOUD_SQL_INSTANCE
            - ON_PREMISES_INSTANCE
            - READ_REPLICA_INSTANCE
          enumDescriptions:
            - This is an unknown Cloud SQL instance type.
            - A regular Cloud SQL instance that is not replicating from a primary instance.
            - An instance running on the customer's premises that is not managed by Cloud SQL.
            - A Cloud SQL instance acting as a read-replica.
          description: The instance type.
        satisfiesPzs:
          type: boolean
          description: The status indicating if instance satisfiesPzs. Reserved for future use.
        diskEncryptionStatus:
          description: Disk encryption status specific to an instance.
          $ref: '#/components/schemas/DiskEncryptionStatus'
        gceZone:
          type: string
          description: 'The Compute Engine zone that the instance is currently serving from. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary zone. WARNING: Changing this might restart the instance.'
        suspensionReason:
          items:
            type: string
            enum:
              - SQL_SUSPENSION_REASON_UNSPECIFIED
              - BILLING_ISSUE
              - LEGAL_ISSUE
              - OPERATIONAL_ISSUE
              - KMS_KEY_ISSUE
            enumDescriptions:
              - This is an unknown suspension reason.
              - The instance is suspended due to billing issues (for example:, GCP account issue)
              - The instance is suspended due to illegal content (for example:, child pornography, copyrighted material, etc.).
              - The instance is causing operational issues (for example:, causing the database to crash).
              - The KMS key used by the instance is either revoked or denied access to
          type: array
          description: If the instance state is SUSPENDED, the reason for the suspension.
        replicaConfiguration:
          $ref: '#/components/schemas/ReplicaConfiguration'
          description: Configuration specific to failover replicas and read replicas.
        connectionName:
          type: string
          description: Connection name of the Cloud SQL instance used in connection strings.
        backendType:
          enum:
            - SQL_BACKEND_TYPE_UNSPECIFIED
            - FIRST_GEN
            - SECOND_GEN
            - EXTERNAL
          description: 'The backend type. `SECOND_GEN`: Cloud SQL database instance. `EXTERNAL`: A database server that is not managed by Google. This property is read-only; use the `tier` property in the `settings` object to determine the database type.'
          type: string
          enumDescriptions:
            - This is an unknown backend type for instance.
            - V1 speckle instance.
            - V2 speckle instance.
            - On premises instance.
        databaseInstalledVersion:
          description: Output only. Stores the current database version running on the instance including minor version such as `MYSQL_8_0_18`.
          type: string
          readOnly: true
        databaseVersion:
          enum:
            - SQL_DATABASE_VERSION_UNSPECIFIED
            - MYSQL_5_1
            - MYSQL_5_5
            - MYSQL_5_6
            - MYSQL_5_7
            - SQLSERVER_2017_STANDARD
            - SQLSERVER_2017_ENTERPRISE
            - SQLSERVER_2017_EXPRESS
            - SQLSERVER_2017_WEB
            - POSTGRES_9_6
            - POSTGRES_10
            - POSTGRES_11
            - POSTGRES_12
            - POSTGRES_13
            - POSTGRES_14
            - MYSQL_8_0
            - MYSQL_8_0_18
            - MYSQL_8_0_26
            - MYSQL_8_0_27
            - MYSQL_8_0_28
            - MYSQL_8_0_29
            - MYSQL_8_0_30
            - MYSQL_8_0_31
            - SQLSERVER_2019_STANDARD
            - SQLSERVER_2019_ENTERPRISE
            - SQLSERVER_2019_EXPRESS
            - SQLSERVER_2019_WEB
          description: The database engine type and version. The `databaseVersion` field cannot be changed after instance creation.
          enumDescriptions:
            - This is an unknown database version.
            - The database version is MySQL 5.1.
            - The database version is MySQL 5.5.
            - The database version is MySQL 5.6.
            - The database version is MySQL 5.7.
            - The database version is SQL Server 2017 Standard.
            - The database version is SQL Server 2017 Enterprise.
            - The database version is SQL Server 2017 Express.
            - The database version is SQL Server 2017 Web.
            - The database version is PostgreSQL 9.6.
            - The database version is PostgreSQL 10.
            - The database version is PostgreSQL 11.
            - The database version is PostgreSQL 12.
            - The database version is PostgreSQL 13.
            - The database version is PostgreSQL 14.
            - The database version is MySQL 8.
            - The database major version is MySQL 8.0 and the minor version is 18.
            - The database major version is MySQL 8.0 and the minor version is 26.
            - The database major version is MySQL 8.0 and the minor version is 27.
            - The database major version is MySQL 8.0 and the minor version is 28.
            - The database major version is MySQL 8.0 and the minor version is 29.
            - The database major version is MySQL 8.0 and the minor version is 30.
            - The database major version is MySQL 8.0 and the minor version is 31.
            - The database version is SQL Server 2019 Standard.
            - The database version is SQL Server 2019 Enterprise.
            - The database version is SQL Server 2019 Express.
            - The database version is SQL Server 2019 Web.
          type: string
        failoverReplica:
          type: object
          description: The name and status of the failover replica.
          properties:
            name:
              type: string
              description: The name of the failover replica. If specified at instance creation, a failover replica is created for the instance. The name doesn't include the project ID.
            available:
              description: The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The primary instance can only failover to the failover replica when the status is true.
              type: boolean
        scheduledMaintenance:
          $ref: '#/components/schemas/SqlScheduledMaintenance'
          description: The start time of any upcoming scheduled maintenance for this instance.
        serviceAccountEmailAddress:
          description: The service account email address assigned to the instance.\This property is read-only.
          type: string
    Operation:
      id: Operation
      description: An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource.
      type: object
      properties:
        insertTime:
          type: string
          format: google-datetime
          description: The time this operation was enqueued in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
        name:
          type: string
          description: An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation.
        selfLink:
          description: The URI of this resource.
          type: string
        exportContext:
          description: The context for export operation, if applicable.
          $ref: '#/components/schemas/ExportContext'
        targetId:
          description: Name of the database instance related to this operation.
          type: string
        startTime:
          type: string
          description: The time this operation actually started in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
          format: google-datetime
        importContext:
          description: The context for import operation, if applicable.
          $ref: '#/components/schemas/ImportContext'
        kind:
          type: string
          description: This is always `sql#operation`.
        targetLink:
          type: string
        user:
          type: string
          description: The email address of the user who initiated this operation.
        error:
          $ref: '#/components/schemas/OperationErrors'
          description: If errors occurred during processing of this operation, this field will be populated.
        status:
          type: string
          enumDescriptions:
            - The state of the operation is unknown.
            - The operation has been queued, but has not started yet.
            - The operation is running.
            - The operation completed.
          description: The status of an operation.
          enum:
            - SQL_OPERATION_STATUS_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
        backupContext:
          $ref: '#/components/schemas/BackupContext'
          description: The context for backup operation, if applicable.
        endTime:
          format: google-datetime
          type: string
          description: The time this operation finished in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
        operationType:
          enum:
            - SQL_OPERATION_TYPE_UNSPECIFIED
            - IMPORT
            - EXPORT
            - CREATE
            - UPDATE
            - DELETE
            - RESTART
            - BACKUP
            - SNAPSHOT
            - BACKUP_VOLUME
            - DELETE_VOLUME
            - RESTORE_VOLUME
            - INJECT_USER
            - CLONE
            - STOP_REPLICA
            - START_REPLICA
            - PROMOTE_REPLICA
            - CREATE_REPLICA
            - CREATE_USER
            - DELETE_USER
            - UPDATE_USER
            - CREATE_DATABASE
            - DELETE_DATABASE
            - UPDATE_DATABASE
            - FAILOVER
            - DELETE_BACKUP
            - RECREATE_REPLICA
            - TRUNCATE_LOG
            - DEMOTE_MASTER
            - MAINTENANCE
            - ENABLE_PRIVATE_IP
            - DEFER_MAINTENANCE
            - CREATE_CLONE
            - RESCHEDULE_MAINTENANCE
            - START_EXTERNAL_SYNC
            - LOG_CLEANUP
            - AUTO_RESTART
          type: string
          description: 'The type of the operation. Valid values are: * `CREATE` * `DELETE` * `UPDATE` * `RESTART` * `IMPORT` * `EXPORT` * `BACKUP_VOLUME` * `RESTORE_VOLUME` * `CREATE_USER` * `DELETE_USER` * `CREATE_DATABASE` * `DELETE_DATABASE`'
          enumDescriptions:
            - Unknown operation type.
            - Imports data into a Cloud SQL instance.
            - Exports data from a Cloud SQL instance to a Cloud Storage bucket.
            - Creates a new Cloud SQL instance.
            - Updates the settings of a Cloud SQL instance.
            - Deletes a Cloud SQL instance.
            - Restarts the Cloud SQL instance.
            - ''
            - ''
            - Performs instance backup.
            - Deletes an instance backup.
            - Restores an instance backup.
            - Injects a privileged user in mysql for MOB instances.
            - Clones a Cloud SQL instance.
            - Stops replication on a Cloud SQL read replica instance.
            - Starts replication on a Cloud SQL read replica instance.
            - Promotes a Cloud SQL replica instance.
            - Creates a Cloud SQL replica instance.
            - Creates a new user in a Cloud SQL instance.
            - Deletes a user from a Cloud SQL instance.
            - Updates an existing user in a Cloud SQL instance.
            - Creates a database in the Cloud SQL instance.
            - Deletes a database in the Cloud SQL instance.
            - Updates a database in the Cloud SQL instance.
            - Performs failover of an HA-enabled Cloud SQL failover replica.
            - Deletes the backup taken by a backup run.
            - ''
            - Truncates a general or slow log table in MySQL.
            - Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.
            - Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.
            - This field is deprecated, and will be removed in future version of API.
            - ''
            - Creates clone instance.
            - Reschedule maintenance to another time.
            - Starts external sync of a Cloud SQL EM replica to an external primary instance.
            - Recovers logs from an instance's old data disk.
            - Performs auto-restart of an HA-enabled Cloud SQL database for auto recovery.
        targetProject:
          type: string
          description: The project ID of the target instance related to this operation.
    InstancesDemoteMasterRequest:
      type: object
      description: Database demote primary instance request.
      id: InstancesDemoteMasterRequest
      properties:
        demoteMasterContext:
          $ref: '#/components/schemas/DemoteMasterContext'
          description: Contains details about the demoteMaster operation.
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/sqlservice.admin: Manage your Google SQL Service instances
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    databases:
      id: google.sqladmin.databases
      name: databases
      title: Databases
      methods:
        sql_databases_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1databases~1{database}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_databases_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1databases~1{database}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_databases_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1databases~1{database}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_databases_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1databases~1{database}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_databases_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1databases/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_databases_insert:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1databases/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/databases/methods/sql_databases_get'
          - $ref: '#/components/x-stackQL-resources/databases/methods/sql_databases_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/databases/methods/sql_databases_insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/databases/methods/sql_databases_delete'
    tiers:
      id: google.sqladmin.tiers
      name: tiers
      title: Tiers
      methods:
        sql_tiers_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1tiers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tiers/methods/sql_tiers_list'
        insert: []
        update: []
        delete: []
    instances:
      id: google.sqladmin.instances
      name: instances
      title: Instances
      methods:
        sql_projects_instances_rescheduleMaintenance:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1rescheduleMaintenance/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_projects_instances_startExternalSync:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1startExternalSync/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_projects_instances_verifyExternalSyncSettings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1verifyExternalSyncSettings/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_instances_clone:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1clone/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_instances_startReplica:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1startReplica/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_instances_stopReplica:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1stopReplica/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_instances_resetSslConfig:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1resetSslConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_instances_export:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1export/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_instances_restart:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1restart/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_instances_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_instances_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_instances_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_instances_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_instances_insert:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_instances_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_instances_failover:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1failover/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_instances_truncateLog:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1truncateLog/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_instances_restoreBackup:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1restoreBackup/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_instances_demoteMaster:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1demoteMaster/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_instances_rotateServerCa:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1rotateServerCa/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_instances_import:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1import/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_instances_promoteReplica:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1promoteReplica/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/sql_instances_get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/sql_instances_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/sql_instances_insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/instances/methods/sql_instances_delete'
    ssl_certs_ephemeral:
      id: google.sqladmin.ssl_certs_ephemeral
      name: ssl_certs_ephemeral
      title: Ssl_certs_ephemeral
      methods:
        sql_sslCerts_createEphemeral:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1createEphemeral/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/ssl_certs_ephemeral/methods/sql_sslCerts_createEphemeral'
        update: []
        delete: []
    ssl_certs:
      id: google.sqladmin.ssl_certs
      name: ssl_certs
      title: Ssl_certs
      methods:
        sql_sslCerts_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1sslCerts~1{sha1Fingerprint}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_sslCerts_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1sslCerts~1{sha1Fingerprint}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_sslCerts_insert:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1sslCerts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_sslCerts_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1sslCerts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ssl_certs/methods/sql_sslCerts_get'
          - $ref: '#/components/x-stackQL-resources/ssl_certs/methods/sql_sslCerts_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/ssl_certs/methods/sql_sslCerts_insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/ssl_certs/methods/sql_sslCerts_delete'
    users:
      id: google.sqladmin.users
      name: users
      title: Users
      methods:
        sql_users_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_users_insert:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1users/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_users_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1users/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_users_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1users/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_users_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1users~1{name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/users/methods/sql_users_get'
          - $ref: '#/components/x-stackQL-resources/users/methods/sql_users_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/users/methods/sql_users_insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/users/methods/sql_users_delete'
    flags:
      id: google.sqladmin.flags
      name: flags
      title: Flags
      methods:
        sql_flags_list:
          operation:
            $ref: '#/paths/~1v1~1flags/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/flags/methods/sql_flags_list'
        insert: []
        update: []
        delete: []
    instances_server_ca:
      id: google.sqladmin.instances_server_ca
      name: instances_server_ca
      title: Instances_server_ca
      methods:
        sql_instances_addServerCa:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1addServerCa/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/instances_server_ca/methods/sql_instances_addServerCa'
        update: []
        delete: []
    instances_server_cas:
      id: google.sqladmin.instances_server_cas
      name: instances_server_cas
      title: Instances_server_cas
      methods:
        sql_instances_listServerCas:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1listServerCas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances_server_cas/methods/sql_instances_listServerCas'
        insert: []
        update: []
        delete: []
    operations:
      id: google.sqladmin.operations
      name: operations
      title: Operations
      methods:
        sql_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1operations~1{operation}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/sql_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/sql_operations_list'
        insert: []
        update: []
        delete: []
    connect:
      id: google.sqladmin.connect
      name: connect
      title: Connect
      methods:
        sql_connect_generateEphemeral:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}:generateEphemeralCert/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_connect_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1connectSettings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connect/methods/sql_connect_get'
        insert: []
        update: []
        delete: []
    backup_runs:
      id: google.sqladmin.backup_runs
      name: backup_runs
      title: Backup_runs
      methods:
        sql_backupRuns_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1backupRuns~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_backupRuns_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1backupRuns~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_backupRuns_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1backupRuns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sql_backupRuns_insert:
          operation:
            $ref: '#/paths/~1v1~1projects~1{project}~1instances~1{instance}~1backupRuns/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backup_runs/methods/sql_backupRuns_get'
          - $ref: '#/components/x-stackQL-resources/backup_runs/methods/sql_backupRuns_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/backup_runs/methods/sql_backupRuns_insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backup_runs/methods/sql_backupRuns_delete'
paths:
  /v1/projects/{project}/instances/{instance}/databases/{database}:
    parameters: &ref_1
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/key'
    put:
      description: Updates a resource containing information about a database inside a Cloud SQL instance.
      operationId: sql.databases.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Database'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: database
          required: true
          schema:
            type: string
      x-stackQL-resource: databases
      x-stackQL-verb: exec
    get:
      description: Retrieves a resource containing information about a database inside a Cloud SQL instance.
      operationId: sql.databases.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: database
          required: true
          schema:
            type: string
      x-stackQL-resource: databases
      x-stackQL-verb: select
    patch:
      description: Partially updates a resource containing information about a database inside a Cloud SQL instance. This method supports patch semantics.
      operationId: sql.databases.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Database'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: database
          required: true
          schema:
            type: string
      x-stackQL-resource: databases
      x-stackQL-verb: exec
    delete:
      description: Deletes a database from a Cloud SQL instance.
      operationId: sql.databases.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: database
          required: true
          schema:
            type: string
      x-stackQL-resource: databases
      x-stackQL-verb: delete
  /v1/projects/{project}/instances/{instance}/databases:
    parameters: *ref_1
    get:
      description: Lists databases in the specified Cloud SQL instance.
      operationId: sql.databases.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabasesListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: databases
      x-stackQL-verb: select
    post:
      description: Inserts a resource containing information about a database inside a Cloud SQL instance.
      operationId: sql.databases.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Database'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: databases
      x-stackQL-verb: insert
  /v1/projects/{project}/tiers:
    parameters: *ref_1
    get:
      description: Lists all available machine types (tiers) for Cloud SQL, for example, `db-custom-1-3840`. For more information, see https://cloud.google.com/sql/pricing.
      operationId: sql.tiers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
      x-stackQL-resource: tiers
      x-stackQL-verb: select
  /v1/projects/{project}/instances/{instance}/rescheduleMaintenance:
    parameters: *ref_1
    post:
      description: Reschedules the maintenance on the given instance.
      operationId: sql.projects.instances.rescheduleMaintenance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlInstancesRescheduleMaintenanceRequestBody'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{project}/instances/{instance}/startExternalSync:
    parameters: *ref_1
    post:
      description: Start External primary instance migration.
      operationId: sql.projects.instances.startExternalSync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlInstancesStartExternalSyncRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{project}/instances/{instance}/verifyExternalSyncSettings:
    parameters: *ref_1
    post:
      description: Verify External primary instance external sync settings.
      operationId: sql.projects.instances.verifyExternalSyncSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlInstancesVerifyExternalSyncSettingsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlInstancesVerifyExternalSyncSettingsResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{project}/instances/{instance}/createEphemeral:
    parameters: *ref_1
    post:
      description: Generates a short-lived X509 certificate containing the provided public key and signed by a private key specific to the target instance. Users may use the certificate to authenticate as themselves when connecting to the database.
      operationId: sql.sslCerts.createEphemeral
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SslCertsCreateEphemeralRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SslCert'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: ssl_certs_ephemeral
      x-stackQL-verb: insert
  /v1/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}:
    parameters: *ref_1
    get:
      description: Retrieves a particular SSL certificate. Does not include the private key (required for usage). The private key must be saved from the response to initial creation.
      operationId: sql.sslCerts.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SslCert'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: sha1Fingerprint
          required: true
          schema:
            type: string
      x-stackQL-resource: ssl_certs
      x-stackQL-verb: select
    delete:
      description: Deletes the SSL certificate. For First Generation instances, the certificate remains valid until the instance is restarted.
      operationId: sql.sslCerts.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: sha1Fingerprint
          required: true
          schema:
            type: string
      x-stackQL-resource: ssl_certs
      x-stackQL-verb: delete
  /v1/projects/{project}/instances/{instance}/sslCerts:
    parameters: *ref_1
    post:
      description: Creates an SSL certificate and returns it along with the private key and server certificate authority. The new certificate will not be usable until the instance is restarted.
      operationId: sql.sslCerts.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SslCertsInsertRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SslCertsInsertResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: ssl_certs
      x-stackQL-verb: insert
    get:
      description: Lists all of the current SSL certificates for the instance.
      operationId: sql.sslCerts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SslCertsListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: ssl_certs
      x-stackQL-verb: select
  /v1/projects/{project}/instances/{instance}/users:
    parameters: *ref_1
    get:
      description: Lists users in the specified Cloud SQL instance.
      operationId: sql.users.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: users
      x-stackQL-verb: select
    post:
      description: Creates a new user in a Cloud SQL instance.
      operationId: sql.users.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: users
      x-stackQL-verb: insert
    put:
      description: Updates an existing user in a Cloud SQL instance.
      operationId: sql.users.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: host
          schema:
            type: string
      x-stackQL-resource: users
      x-stackQL-verb: exec
    delete:
      description: Deletes a user from a Cloud SQL instance.
      operationId: sql.users.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: query
          name: host
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
      x-stackQL-resource: users
      x-stackQL-verb: delete
  /v1/projects/{project}/instances/{instance}/users/{name}:
    parameters: *ref_1
    get:
      description: Retrieves a resource containing information about a user.
      operationId: sql.users.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: query
          name: host
          schema:
            type: string
      x-stackQL-resource: users
      x-stackQL-verb: select
  /v1/flags:
    parameters: *ref_1
    get:
      description: Lists all available database flags for Cloud SQL instances.
      operationId: sql.flags.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagsListResponse'
      parameters:
        - in: query
          name: databaseVersion
          schema:
            type: string
      x-stackQL-resource: flags
      x-stackQL-verb: select
  /v1/projects/{project}/instances/{instance}/clone:
    parameters: *ref_1
    post:
      description: Creates a Cloud SQL instance as a clone of the source instance. Using this operation might cause your instance to restart.
      operationId: sql.instances.clone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesCloneRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{project}/instances/{instance}/startReplica:
    parameters: *ref_1
    post:
      description: Starts the replication in the read replica instance.
      operationId: sql.instances.startReplica
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{project}/instances/{instance}/stopReplica:
    parameters: *ref_1
    post:
      description: Stops the replication in the read replica instance.
      operationId: sql.instances.stopReplica
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{project}/instances/{instance}/resetSslConfig:
    parameters: *ref_1
    post:
      description: Deletes all client certificates and generates a new server SSL certificate for the instance.
      operationId: sql.instances.resetSslConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{project}/instances/{instance}/export:
    parameters: *ref_1
    post:
      description: Exports data from a Cloud SQL instance to a Cloud Storage bucket as a SQL dump or CSV file.
      operationId: sql.instances.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesExportRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{project}/instances/{instance}/restart:
    parameters: *ref_1
    post:
      description: Restarts a Cloud SQL instance.
      operationId: sql.instances.restart
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{project}/instances/{instance}:
    parameters: *ref_1
    patch:
      description: Partially updates settings of a Cloud SQL instance by merging the request with the current configuration. This method supports patch semantics.
      operationId: sql.instances.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseInstance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
    delete:
      description: Deletes a Cloud SQL instance.
      operationId: sql.instances.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: delete
    put:
      description: Updates settings of a Cloud SQL instance. Using this operation might cause your instance to restart.
      operationId: sql.instances.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseInstance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
    get:
      description: Retrieves a resource containing information about a Cloud SQL instance.
      operationId: sql.instances.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseInstance'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: select
  /v1/projects/{project}/instances:
    parameters: *ref_1
    post:
      description: Creates a new Cloud SQL instance.
      operationId: sql.instances.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseInstance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: insert
    get:
      description: Lists instances under a given project.
      operationId: sql.instances.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstancesListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: instances
      x-stackQL-verb: select
  /v1/projects/{project}/instances/{instance}/addServerCa:
    parameters: *ref_1
    post:
      description: Adds a new trusted Certificate Authority (CA) version for the specified instance. Required to prepare for a certificate rotation. If a CA version was previously added but never used in a certificate rotation, this operation replaces that version. There cannot be more than one CA version waiting to be rotated in.
      operationId: sql.instances.addServerCa
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances_server_ca
      x-stackQL-verb: insert
  /v1/projects/{project}/instances/{instance}/failover:
    parameters: *ref_1
    post:
      description: Initiates a manual failover of a high availability (HA) primary instance to a standby instance, which becomes the primary instance. Users are then rerouted to the new primary. For more information, see the [Overview of high availability](https://cloud.google.com/sql/docs/mysql/high-availability) page in the Cloud SQL documentation. If using Legacy HA (MySQL only), this causes the instance to failover to its failover replica instance.
      operationId: sql.instances.failover
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesFailoverRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{project}/instances/{instance}/truncateLog:
    parameters: *ref_1
    post:
      description: Truncate MySQL general and slow query log tables MySQL only.
      operationId: sql.instances.truncateLog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesTruncateLogRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{project}/instances/{instance}/restoreBackup:
    parameters: *ref_1
    post:
      description: Restores a backup of a Cloud SQL instance. Using this operation might cause your instance to restart.
      operationId: sql.instances.restoreBackup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesRestoreBackupRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{project}/instances/{instance}/demoteMaster:
    parameters: *ref_1
    post:
      description: Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.
      operationId: sql.instances.demoteMaster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesDemoteMasterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{project}/instances/{instance}/rotateServerCa:
    parameters: *ref_1
    post:
      description: Rotates the server certificate to one signed by the Certificate Authority (CA) version previously added with the addServerCA method.
      operationId: sql.instances.rotateServerCa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesRotateServerCaRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{project}/instances/{instance}/import:
    parameters: *ref_1
    post:
      description: Imports data into a Cloud SQL instance from a SQL dump or CSV file in Cloud Storage.
      operationId: sql.instances.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesImportRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{project}/instances/{instance}/listServerCas:
    parameters: *ref_1
    get:
      description: 'Lists all of the trusted Certificate Authorities (CAs) for the specified instance. There can be up to three CAs listed: the CA that was used to sign the certificate that is currently in use, a CA that has been added but not yet used to sign a certificate, and a CA used to sign a certificate that has previously rotated out.'
      operationId: sql.instances.listServerCas
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstancesListServerCasResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances_server_cas
      x-stackQL-verb: select
  /v1/projects/{project}/instances/{instance}/promoteReplica:
    parameters: *ref_1
    post:
      description: Promotes the read replica instance to be a stand-alone Cloud SQL instance. Using this operation might cause your instance to restart.
      operationId: sql.instances.promoteReplica
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{project}/operations/{operation}:
    parameters: *ref_1
    get:
      description: Retrieves an instance operation that has been performed on an instance.
      operationId: sql.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: operation
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{project}/operations:
    parameters: *ref_1
    get:
      description: Lists all instance operations that have been performed on the given Cloud SQL instance in the reverse chronological order of the start time.
      operationId: sql.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationsListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: instance
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{project}/instances/{instance}:generateEphemeralCert:
    parameters: *ref_1
    post:
      description: Generates a short-lived X509 certificate containing the provided public key and signed by a private key specific to the target instance. Users may use the certificate to authenticate as themselves when connecting to the database.
      operationId: sql.connect.generateEphemeral
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateEphemeralCertRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateEphemeralCertResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: connect
      x-stackQL-verb: exec
  /v1/projects/{project}/instances/{instance}/connectSettings:
    parameters: *ref_1
    get:
      description: Retrieves connect settings about a Cloud SQL instance.
      operationId: sql.connect.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectSettings'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: query
          name: readTime
          schema:
            type: string
      x-stackQL-resource: connect
      x-stackQL-verb: select
  /v1/projects/{project}/instances/{instance}/backupRuns/{id}:
    parameters: *ref_1
    delete:
      description: Deletes the backup taken by a backup run.
      operationId: sql.backupRuns.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: backup_runs
      x-stackQL-verb: delete
    get:
      description: Retrieves a resource containing information about a backup run.
      operationId: sql.backupRuns.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRun'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: backup_runs
      x-stackQL-verb: select
  /v1/projects/{project}/instances/{instance}/backupRuns:
    parameters: *ref_1
    get:
      description: Lists all backup runs associated with the project or a given instance and configuration in the reverse chronological order of the backup initiation time.
      operationId: sql.backupRuns.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRunsListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: backup_runs
      x-stackQL-verb: select
    post:
      description: Creates a new backup run on demand.
      operationId: sql.backupRuns.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRun'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sqlservice.admin
          Oauth2c:
            - https://www.googleapis.com/auth/sqlservice.admin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: instance
          required: true
          schema:
            type: string
      x-stackQL-resource: backup_runs
      x-stackQL-verb: insert
