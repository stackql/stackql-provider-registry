openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Network Services API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230814'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/networking'
servers:
  - url: 'https://networkservices.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    ListMeshesResponse:
      type: object
      properties:
        meshes:
          type: array
          items:
            $ref: '#/components/schemas/Mesh'
          description: List of Mesh resources.
        nextPageToken:
          type: string
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
      description: Response returned by the ListMeshes method.
      id: ListMeshesResponse
    HttpRouteURLRewrite:
      type: object
      properties:
        pathPrefixRewrite:
          description: 'Prior to forwarding the request to the selected destination, the matching portion of the requests path is replaced by this value.'
          type: string
        hostRewrite:
          type: string
          description: 'Prior to forwarding the request to the selected destination, the requests host header is replaced by this value.'
      id: HttpRouteURLRewrite
      description: 'The specification for modifying the URL of the request, prior to forwarding the request to the destination.'
    TlsRouteRouteAction:
      description: The specifications for routing traffic and applying associated policies.
      type: object
      properties:
        destinations:
          type: array
          description: Required. The destination services to which traffic should be forwarded. At least one destination service is required.
          items:
            $ref: '#/components/schemas/TlsRouteRouteDestination'
      id: TlsRouteRouteAction
    TrafficPortSelector:
      type: object
      properties:
        ports:
          type: array
          description: 'Optional. A list of ports. Can be port numbers or port range (example, [80-90] specifies all ports from 80 to 90, including 80 and 90) or named ports or * to specify all ports. If the list is empty, all ports are selected.'
          items:
            type: string
      id: TrafficPortSelector
      description: Specification of a port-based selector.
    GrpcRoute:
      type: object
      description: GrpcRoute is the resource defining how gRPC traffic routed by a Mesh or Gateway resource is routed.
      properties:
        meshes:
          type: array
          items:
            type: string
          description: 'Optional. Meshes defines a list of meshes this GrpcRoute is attached to, as one of the routing rules to route the requests served by the mesh. Each mesh reference should match the pattern: `projects/*/locations/global/meshes/`'
        rules:
          description: 'Required. A list of detailed rules defining how to route traffic. Within a single GrpcRoute, the GrpcRoute.RouteAction associated with the first matching GrpcRoute.RouteRule will be executed. At least one rule must be supplied.'
          type: array
          items:
            $ref: '#/components/schemas/GrpcRouteRouteRule'
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The timestamp when the resource was updated.
        selfLink:
          description: Output only. Server-defined URL of this resource
          type: string
          readOnly: true
        description:
          type: string
          description: Optional. A free-text description of the resource. Max length 1024 characters.
        gateways:
          items:
            type: string
          type: array
          description: 'Optional. Gateways defines a list of gateways this GrpcRoute is attached to, as one of the routing rules to route the requests served by the gateway. Each gateway reference should match the pattern: `projects/*/locations/global/gateways/`'
        name:
          description: Required. Name of the GrpcRoute resource. It matches pattern `projects/*/locations/global/grpcRoutes/`
          type: string
        hostnames:
          type: array
          description: 'Required. Service hostnames with an optional port for which this route describes traffic. Format: [:] Hostname is the fully qualified domain name of a network host. This matches the RFC 1123 definition of a hostname with 2 notable exceptions: - IPs are not allowed. - A hostname may be prefixed with a wildcard label (`*.`). The wildcard label must appear by itself as the first label. Hostname can be "precise" which is a domain name without the terminating dot of a network host (e.g. `foo.example.com`) or "wildcard", which is a domain name prefixed with a single wildcard label (e.g. `*.example.com`). Note that as per RFC1035 and RFC1123, a label must consist of lower case alphanumeric characters or ''-'', and must start and end with an alphanumeric character. No other punctuation is allowed. The routes associated with a Mesh or Gateway must have unique hostnames. If you attempt to attach multiple routes with conflicting hostnames, the configuration will be rejected. For example, while it is acceptable for routes for the hostnames `*.foo.bar.com` and `*.bar.com` to be associated with the same route, it is not possible to associate two routes both with `*.bar.com` or both with `bar.com`. If a port is specified, then gRPC clients must use the channel URI with the port to match this rule (i.e. "xds:///service:123"), otherwise they must supply the URI without a port (i.e. "xds:///service").'
          items:
            type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          type: string
          format: google-datetime
          readOnly: true
        labels:
          description: Optional. Set of label tags associated with the GrpcRoute resource.
          type: object
          additionalProperties:
            type: string
      id: GrpcRoute
    ListServiceBindingsResponse:
      type: object
      id: ListServiceBindingsResponse
      properties:
        nextPageToken:
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
          type: string
        serviceBindings:
          description: List of ServiceBinding resources.
          items:
            $ref: '#/components/schemas/ServiceBinding'
          type: array
      description: Response returned by the ListServiceBindings method.
    TestIamPermissionsRequest:
      type: object
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          type: array
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
          items:
            type: string
    Binding:
      properties:
        condition:
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          $ref: '#/components/schemas/Expr'
        members:
          items:
            type: string
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
          type: array
        role:
          type: string
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
      id: Binding
      type: object
      description: 'Associates `members`, or principals, with a `role`.'
    Status:
      type: object
      properties:
        details:
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        code:
          type: integer
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
    TcpRouteRouteAction:
      description: The specifications for routing traffic and applying associated policies.
      id: TcpRouteRouteAction
      type: object
      properties:
        originalDestination:
          description: 'Optional. If true, Router will use the destination IP and port of the original connection as the destination of the request. Default is false. Only one of route destinations or original destination can be set.'
          type: boolean
        destinations:
          type: array
          description: Optional. The destination services to which traffic should be forwarded. At least one destination service is required. Only one of route destination or original destination can be set.
          items:
            $ref: '#/components/schemas/TcpRouteRouteDestination'
    EndpointPolicy:
      properties:
        authorizationPolicy:
          type: string
          description: 'Optional. This field specifies the URL of AuthorizationPolicy resource that applies authorization policies to the inbound traffic at the matched endpoints. Refer to Authorization. If this field is not specified, authorization is disabled(no authz checks) for this endpoint.'
        endpointMatcher:
          $ref: '#/components/schemas/EndpointMatcher'
          description: Required. A matcher that selects endpoints to which the policies should be applied.
        trafficPortSelector:
          description: 'Optional. Port selector for the (matched) endpoints. If no port selector is provided, the matched config is applied to all ports.'
          $ref: '#/components/schemas/TrafficPortSelector'
        serverTlsPolicy:
          description: 'Optional. A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the authentication policy to be applied to terminate the inbound traffic at the identified backends. If this field is not set, authentication is disabled(open) for this endpoint.'
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: Optional. Set of label tags associated with the EndpointPolicy resource.
        type:
          description: Required. The type of endpoint policy. This is primarily used to validate the configuration.
          type: string
          enum:
            - ENDPOINT_POLICY_TYPE_UNSPECIFIED
            - SIDECAR_PROXY
            - GRPC_SERVER
          enumDescriptions:
            - Default value. Must not be used.
            - Represents a proxy deployed as a sidecar.
            - Represents a proxyless gRPC backend.
        createTime:
          readOnly: true
          type: string
          description: Output only. The timestamp when the resource was created.
          format: google-datetime
        name:
          description: 'Required. Name of the EndpointPolicy resource. It matches pattern `projects/{project}/locations/global/endpointPolicies/{endpoint_policy}`.'
          type: string
        clientTlsPolicy:
          type: string
          description: 'Optional. A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify the authentication for traffic from the proxy to the actual endpoints. More specifically, it is applied to the outgoing traffic from the proxy to the endpoint. This is typically used for sidecar model where the proxy identifies itself as endpoint to the control plane, with the connection between sidecar and endpoint requiring authentication. If this field is not set, authentication is disabled(open). Applicable only when EndpointPolicyType is SIDECAR_PROXY.'
        description:
          description: Optional. A free-text description of the resource. Max length 1024 characters.
          type: string
        updateTime:
          description: Output only. The timestamp when the resource was updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
      id: EndpointPolicy
      description: 'EndpointPolicy is a resource that helps apply desired configuration on the endpoints that match specific criteria. For example, this resource can be used to apply "authentication config" an all endpoints that serve on port 8080.'
    GrpcRouteRouteAction:
      type: object
      id: GrpcRouteRouteAction
      description: Specifies how to route matched traffic.
      properties:
        retryPolicy:
          description: Optional. Specifies the retry policy associated with this route.
          $ref: '#/components/schemas/GrpcRouteRetryPolicy'
        timeout:
          type: string
          format: google-duration
          description: Optional. Specifies the timeout for selected route. Timeout is computed from the time the request has been fully processed (i.e. end of stream) up until the response has been completely processed. Timeout includes all retries.
        destinations:
          items:
            $ref: '#/components/schemas/GrpcRouteDestination'
          description: 'Optional. The destination services to which traffic should be forwarded. If multiple destinations are specified, traffic will be split between Backend Service(s) according to the weight field of these destinations.'
          type: array
        faultInjectionPolicy:
          $ref: '#/components/schemas/GrpcRouteFaultInjectionPolicy'
          description: 'Optional. The specification for fault injection introduced into traffic to test the resiliency of clients to destination service failure. As part of fault injection, when clients send requests to a destination, delays can be introduced on a percentage of requests before sending those requests to the destination service. Similarly requests from clients can be aborted by for a percentage of requests. timeout and retry_policy will be ignored by clients that are configured with a fault_injection_policy'
    HttpRouteCorsPolicy:
      description: The Specification for allowing client side cross-origin requests.
      id: HttpRouteCorsPolicy
      type: object
      properties:
        allowMethods:
          description: Specifies the content for Access-Control-Allow-Methods header.
          items:
            type: string
          type: array
        allowHeaders:
          description: Specifies the content for Access-Control-Allow-Headers header.
          type: array
          items:
            type: string
        allowOriginRegexes:
          items:
            type: string
          description: 'Specifies the regular expression patterns that match allowed origins. For regular expression grammar, please see https://github.com/google/re2/wiki/Syntax.'
          type: array
        allowOrigins:
          type: array
          description: Specifies the list of origins that will be allowed to do CORS requests. An origin is allowed if it matches either an item in allow_origins or an item in allow_origin_regexes.
          items:
            type: string
        disabled:
          description: 'If true, the CORS policy is disabled. The default value is false, which indicates that the CORS policy is in effect.'
          type: boolean
        maxAge:
          type: string
          description: Specifies how long result of a preflight request can be cached in seconds. This translates to the Access-Control-Max-Age header.
        allowCredentials:
          description: 'In response to a preflight request, setting this to true indicates that the actual request can include user credentials. This translates to the Access-Control-Allow-Credentials header. Default value is false.'
          type: boolean
        exposeHeaders:
          type: array
          description: Specifies the content for Access-Control-Expose-Headers header.
          items:
            type: string
    Empty:
      type: object
      properties: {}
      id: Empty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    OperationMetadata:
      type: object
      description: Represents the metadata of the long-running operation.
      properties:
        target:
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
        verb:
          type: string
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
        requestedCancellation:
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
          type: boolean
          readOnly: true
        statusMessage:
          description: 'Output only. Human-readable status of the operation, if any.'
          readOnly: true
          type: string
        createTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation was created.
          type: string
      id: OperationMetadata
    HttpRouteRequestMirrorPolicy:
      properties:
        destination:
          $ref: '#/components/schemas/HttpRouteDestination'
          description: The destination the requests will be mirrored to. The weight of the destination will be ignored.
      description: 'Specifies the policy on how requests are shadowed to a separate mirrored destination service. The proxy does not wait for responses from the shadow service. Prior to sending traffic to the shadow service, the host/authority header is suffixed with -shadow.'
      id: HttpRouteRequestMirrorPolicy
      type: object
    GrpcRouteDestination:
      id: GrpcRouteDestination
      type: object
      properties:
        weight:
          description: 'Optional. Specifies the proportion of requests forwarded to the backend referenced by the serviceName field. This is computed as: - weight/Sum(weights in this destination list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports. If only one serviceName is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend. If weights are specified for any one service name, they need to be specified for all of them. If weights are unspecified for all services, then, traffic is distributed in equal proportions to all of them.'
          format: int32
          type: integer
        serviceName:
          type: string
          description: Required. The URL of a destination service to which to route traffic. Must refer to either a BackendService or ServiceDirectoryService.
      description: The destination to which traffic will be routed.
    ListTlsRoutesResponse:
      description: Response returned by the ListTlsRoutes method.
      properties:
        nextPageToken:
          type: string
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
        tlsRoutes:
          type: array
          items:
            $ref: '#/components/schemas/TlsRoute'
          description: List of TlsRoute resources.
      type: object
      id: ListTlsRoutesResponse
    HttpRouteFaultInjectionPolicyAbort:
      type: object
      properties:
        httpStatus:
          format: int32
          type: integer
          description: The HTTP status code used to abort the request. The value must be between 200 and 599 inclusive.
        percentage:
          type: integer
          description: 'The percentage of traffic which will be aborted. The value must be between [0, 100]'
          format: int32
      id: HttpRouteFaultInjectionPolicyAbort
      description: Specification of how client requests are aborted as part of fault injection before being sent to a destination.
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          description: A list of operations that matches the specified filter in the request.
          type: array
      type: object
      id: ListOperationsResponse
    EndpointMatcherMetadataLabelMatcher:
      properties:
        metadataLabelMatchCriteria:
          type: string
          enum:
            - METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED
            - MATCH_ANY
            - MATCH_ALL
          enumDescriptions:
            - Default value. Should not be used.
            - At least one of the Labels specified in the matcher should match the metadata presented by xDS client.
            - The metadata presented by the xDS client should contain all of the labels specified here.
          description: 'Specifies how matching should be done. Supported values are: MATCH_ANY: At least one of the Labels specified in the matcher should match the metadata presented by xDS client. MATCH_ALL: The metadata presented by the xDS client should contain all of the labels specified here. The selection is determined based on the best match. For example, suppose there are three EndpointPolicy resources P1, P2 and P3 and if P1 has a the matcher as MATCH_ANY , P2 has MATCH_ALL , and P3 has MATCH_ALL . If a client with label connects, the config from P1 will be selected. If a client with label connects, the config from P2 will be selected. If a client with label connects, the config from P3 will be selected. If there is more than one best match, (for example, if a config P4 with selector exists and if a client with label connects), an error will be thrown.'
        metadataLabels:
          description: 'The list of label value pairs that must match labels in the provided metadata based on filterMatchCriteria This list can have at most 64 entries. The list can be empty if the match criteria is MATCH_ANY, to specify a wildcard match (i.e this matches any client).'
          items:
            $ref: '#/components/schemas/EndpointMatcherMetadataLabelMatcherMetadataLabels'
          type: array
      description: The matcher that is based on node metadata presented by xDS clients.
      type: object
      id: EndpointMatcherMetadataLabelMatcher
    HttpRouteQueryParameterMatch:
      description: Specifications to match a query parameter in the request.
      id: HttpRouteQueryParameterMatch
      properties:
        regexMatch:
          type: string
          description: 'The value of the query parameter must match the regular expression specified by regex_match. For regular expression grammar, please see https://github.com/google/re2/wiki/Syntax Only one of exact_match, regex_match, or present_match must be set.'
        queryParameter:
          description: The name of the query parameter to match.
          type: string
        exactMatch:
          type: string
          description: 'The value of the query parameter must exactly match the contents of exact_match. Only one of exact_match, regex_match, or present_match must be set.'
        presentMatch:
          type: boolean
          description: 'Specifies that the QueryParameterMatcher matches if request contains query parameter, irrespective of whether the parameter has a value or not. Only one of exact_match, regex_match, or present_match must be set.'
      type: object
    Policy:
      id: Policy
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      type: object
      properties:
        bindings:
          items:
            $ref: '#/components/schemas/Binding'
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
          type: array
        version:
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          format: int32
          type: integer
        auditConfigs:
          type: array
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: '#/components/schemas/AuditConfig'
        etag:
          type: string
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          format: byte
    HttpRouteFaultInjectionPolicy:
      id: HttpRouteFaultInjectionPolicy
      type: object
      description: 'The specification for fault injection introduced into traffic to test the resiliency of clients to destination service failure. As part of fault injection, when clients send requests to a destination, delays can be introduced by client proxy on a percentage of requests before sending those requests to the destination service. Similarly requests can be aborted by client proxy for a percentage of requests.'
      properties:
        delay:
          $ref: '#/components/schemas/HttpRouteFaultInjectionPolicyDelay'
          description: The specification for injecting delay to client requests.
        abort:
          $ref: '#/components/schemas/HttpRouteFaultInjectionPolicyAbort'
          description: The specification for aborting to client requests.
    GrpcRouteFaultInjectionPolicy:
      id: GrpcRouteFaultInjectionPolicy
      description: 'The specification for fault injection introduced into traffic to test the resiliency of clients to destination service failure. As part of fault injection, when clients send requests to a destination, delays can be introduced on a percentage of requests before sending those requests to the destination service. Similarly requests from clients can be aborted by for a percentage of requests.'
      type: object
      properties:
        delay:
          description: The specification for injecting delay to client requests.
          $ref: '#/components/schemas/GrpcRouteFaultInjectionPolicyDelay'
        abort:
          $ref: '#/components/schemas/GrpcRouteFaultInjectionPolicyAbort'
          description: The specification for aborting to client requests.
    GrpcRouteRetryPolicy:
      id: GrpcRouteRetryPolicy
      properties:
        numRetries:
          description: 'Specifies the allowed number of retries. This number must be > 0. If not specified, default to 1.'
          type: integer
          format: uint32
        retryConditions:
          items:
            type: string
          type: array
          description: '- connect-failure: Router will retry on failures connecting to Backend Services, for example due to connection timeouts. - refused-stream: Router will retry if the backend service resets the stream with a REFUSED_STREAM error code. This reset type indicates that it is safe to retry. - cancelled: Router will retry if the gRPC status code in the response header is set to cancelled - deadline-exceeded: Router will retry if the gRPC status code in the response header is set to deadline-exceeded - resource-exhausted: Router will retry if the gRPC status code in the response header is set to resource-exhausted - unavailable: Router will retry if the gRPC status code in the response header is set to unavailable'
      description: The specifications for retries.
      type: object
    HttpRouteHeaderMatchIntegerRange:
      id: HttpRouteHeaderMatchIntegerRange
      type: object
      description: Represents an integer value range.
      properties:
        start:
          description: Start of the range (inclusive)
          format: int32
          type: integer
        end:
          description: End of the range (exclusive)
          format: int32
          type: integer
    CancelOperationRequest:
      type: object
      description: The request message for Operations.CancelOperation.
      properties: {}
      id: CancelOperationRequest
    GrpcRouteRouteMatch:
      properties:
        method:
          description: 'Optional. A gRPC method to match against. If this field is empty or omitted, will match all methods.'
          $ref: '#/components/schemas/GrpcRouteMethodMatch'
        headers:
          type: array
          items:
            $ref: '#/components/schemas/GrpcRouteHeaderMatch'
          description: Optional. Specifies a collection of headers to match.
      description: Criteria for matching traffic. A RouteMatch will be considered to match when all supplied fields match.
      id: GrpcRouteRouteMatch
      type: object
    Gateway:
      id: Gateway
      properties:
        serverTlsPolicy:
          type: string
          description: 'Optional. A fully-qualified ServerTLSPolicy URL reference. Specifies how TLS traffic is terminated. If empty, TLS termination is disabled.'
        labels:
          description: Optional. Set of label tags associated with the Gateway resource.
          type: object
          additionalProperties:
            type: string
        gatewaySecurityPolicy:
          description: 'Optional. A fully-qualified GatewaySecurityPolicy URL reference. Defines how a server should apply security policy to inbound (VM to Proxy) initiated connections. For example: `projects/*/locations/*/gatewaySecurityPolicies/swg-policy`. This policy is specific to gateways of type ''SECURE_WEB_GATEWAY''.'
          type: string
        createTime:
          format: google-datetime
          description: Output only. The timestamp when the resource was created.
          type: string
          readOnly: true
        selfLink:
          type: string
          readOnly: true
          description: Output only. Server-defined URL of this resource
        network:
          description: 'Optional. The relative resource name identifying the VPC network that is using this configuration. For example: `projects/*/global/networks/network-1`. Currently, this field is specific to gateways of type ''SECURE_WEB_GATEWAY''.'
          type: string
        addresses:
          type: array
          items:
            type: string
          description: 'Optional. Zero or one IPv4 or IPv6 address on which the Gateway will receive the traffic. When no address is provided, an IP from the subnetwork is allocated This field only applies to gateways of type ''SECURE_WEB_GATEWAY''. Gateways of type ''OPEN_MESH'' listen on 0.0.0.0 for IPv4 and :: for IPv6.'
        scope:
          type: string
          description: 'Optional. Scope determines how configuration across multiple Gateway instances are merged. The configuration for multiple Gateway instances with the same scope will be merged as presented as a single coniguration to the proxy/load balancer. Max length 64 characters. Scope should start with a letter and can only have letters, numbers, hyphens.'
        description:
          type: string
          description: Optional. A free-text description of the resource. Max length 1024 characters.
        type:
          enumDescriptions:
            - The type of the customer managed gateway is unspecified.
            - The type of the customer managed gateway is TrafficDirector Open Mesh.
            - The type of the customer managed gateway is SecureWebGateway (SWG).
          description: 'Immutable. The type of the customer managed gateway. This field is required. If unspecified, an error is returned.'
          enum:
            - TYPE_UNSPECIFIED
            - OPEN_MESH
            - SECURE_WEB_GATEWAY
          type: string
        subnetwork:
          type: string
          description: 'Optional. The relative resource name identifying the subnetwork in which this SWG is allocated. For example: `projects/*/regions/us-central1/subnetworks/network-1` Currently, this field is specific to gateways of type ''SECURE_WEB_GATEWAY".'
        ports:
          description: 'Required. One or more port numbers (1-65535), on which the Gateway will receive traffic. The proxy binds to the specified ports. Gateways of type ''SECURE_WEB_GATEWAY'' are limited to 1 port. Gateways of type ''OPEN_MESH'' listen on 0.0.0.0 for IPv4 and :: for IPv6 and support multiple ports.'
          items:
            format: int32
            type: integer
          type: array
        certificateUrls:
          items:
            type: string
          type: array
          description: Optional. A fully-qualified Certificates URL reference. The proxy presents a Certificate (selected based on SNI) when establishing a TLS connection. This feature only applies to gateways of type 'SECURE_WEB_GATEWAY'.
        updateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The timestamp when the resource was updated.
        name:
          type: string
          description: Required. Name of the Gateway resource. It matches pattern `projects/*/locations/*/gateways/`.
      type: object
      description: 'Gateway represents the configuration for a proxy, typically a load balancer. It captures the ip:port over which the services are exposed by the proxy, along with any policy configurations. Routes have reference to to Gateways to dictate how requests should be routed by this Gateway.'
    TcpRouteRouteMatch:
      type: object
      properties:
        port:
          description: Required. Specifies the destination port to match against.
          type: string
        address:
          type: string
          description: 'Required. Must be specified in the CIDR range format. A CIDR range consists of an IP Address and a prefix length to construct the subnet mask. By default, the prefix length is 32 (i.e. matches a single IP address). Only IPV4 addresses are supported. Examples: "10.0.0.1" - matches against this exact IP address. "10.0.0.0/8" - matches against any IP address within the 10.0.0.0 subnet and 255.255.255.0 mask. "0.0.0.0/0" - matches against any IP address''.'
      description: 'RouteMatch defines the predicate used to match requests to a given action. Multiple match types are "OR"ed for evaluation. If no routeMatch field is specified, this rule will unconditionally match traffic.'
      id: TcpRouteRouteMatch
    EndpointMatcherMetadataLabelMatcherMetadataLabels:
      description: Defines a name-pair value for a single label.
      properties:
        labelValue:
          description: 'Required. Label value presented as value corresponding to the above key, in xDS Node Metadata.'
          type: string
        labelName:
          type: string
          description: Required. Label name presented as key in xDS Node Metadata.
      id: EndpointMatcherMetadataLabelMatcherMetadataLabels
      type: object
    HttpRouteFaultInjectionPolicyDelay:
      id: HttpRouteFaultInjectionPolicyDelay
      description: Specification of how client requests are delayed as part of fault injection before being sent to a destination.
      type: object
      properties:
        percentage:
          format: int32
          type: integer
          description: 'The percentage of traffic on which delay will be injected. The value must be between [0, 100]'
        fixedDelay:
          type: string
          format: google-duration
          description: Specify a fixed delay before forwarding the request.
    TlsRouteRouteDestination:
      id: TlsRouteRouteDestination
      properties:
        serviceName:
          type: string
          description: Required. The URL of a BackendService to route traffic to.
        weight:
          format: int32
          description: 'Optional. Specifies the proportion of requests forwareded to the backend referenced by the service_name field. This is computed as: - weight/Sum(weights in destinations) Weights in all destinations does not need to sum up to 100.'
          type: integer
      type: object
      description: Describe the destination for traffic to be routed to.
    GrpcRouteFaultInjectionPolicyAbort:
      description: Specification of how client requests are aborted as part of fault injection before being sent to a destination.
      properties:
        httpStatus:
          format: int32
          type: integer
          description: The HTTP status code used to abort the request. The value must be between 200 and 599 inclusive.
        percentage:
          description: 'The percentage of traffic which will be aborted. The value must be between [0, 100]'
          type: integer
          format: int32
      type: object
      id: GrpcRouteFaultInjectionPolicyAbort
    Expr:
      properties:
        description:
          type: string
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
        expression:
          type: string
          description: Textual representation of an expression in Common Expression Language syntax.
        title:
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
          type: string
        location:
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
          type: string
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      type: object
      id: Expr
    Mesh:
      description: Mesh represents a logical configuration grouping for workload to workload communication within a service mesh. Routes that point to mesh dictate how requests are routed within this logical mesh boundary.
      properties:
        interceptionPort:
          type: integer
          description: 'Optional. If set to a valid TCP port (1-65535), instructs the SIDECAR proxy to listen on the specified port of localhost (127.0.0.1) address. The SIDECAR proxy will expect all traffic to be redirected to this port regardless of its actual ip:port destination. If unset, a port ''15001'' is used as the interception port. This is applicable only for sidecar proxy deployments.'
          format: int32
        description:
          type: string
          description: Optional. A free-text description of the resource. Max length 1024 characters.
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The timestamp when the resource was updated.
        labels:
          description: Optional. Set of label tags associated with the Mesh resource.
          additionalProperties:
            type: string
          type: object
        createTime:
          type: string
          format: google-datetime
          description: Output only. The timestamp when the resource was created.
          readOnly: true
        name:
          description: Required. Name of the Mesh resource. It matches pattern `projects/*/locations/global/meshes/`.
          type: string
        selfLink:
          description: Output only. Server-defined URL of this resource
          type: string
          readOnly: true
      type: object
      id: Mesh
    GrpcRouteHeaderMatch:
      type: object
      description: A match against a collection of headers.
      id: GrpcRouteHeaderMatch
      properties:
        key:
          description: Required. The key of the header.
          type: string
        value:
          type: string
          description: Required. The value of the header.
        type:
          enum:
            - TYPE_UNSPECIFIED
            - EXACT
            - REGULAR_EXPRESSION
          description: 'Optional. Specifies how to match against the value of the header. If not specified, a default value of EXACT is used.'
          enumDescriptions:
            - Unspecified.
            - Will only match the exact value provided.
            - Will match paths conforming to the prefix specified by value. RE2 syntax is supported.
          type: string
    GrpcRouteFaultInjectionPolicyDelay:
      id: GrpcRouteFaultInjectionPolicyDelay
      type: object
      properties:
        percentage:
          type: integer
          description: 'The percentage of traffic on which delay will be injected. The value must be between [0, 100]'
          format: int32
        fixedDelay:
          description: Specify a fixed delay before forwarding the request.
          format: google-duration
          type: string
      description: Specification of how client requests are delayed as part of fault injection before being sent to a destination.
    TlsRouteRouteMatch:
      description: 'RouteMatch defines the predicate used to match requests to a given action. Multiple match types are "AND"ed for evaluation. If no routeMatch field is specified, this rule will unconditionally match traffic.'
      id: TlsRouteRouteMatch
      properties:
        sniHost:
          items:
            type: string
          description: 'Optional. SNI (server name indicator) to match against. SNI will be matched against all wildcard domains, i.e. `www.example.com` will be first matched against `www.example.com`, then `*.example.com`, then `*.com.` Partial wildcards are not supported, and values like *w.example.com are invalid. At least one of sni_host and alpn is required. Up to 5 sni hosts across all matches can be set.'
          type: array
        alpn:
          description: 'Optional. ALPN (Application-Layer Protocol Negotiation) to match against. Examples: "http/1.1", "h2". At least one of sni_host and alpn is required. Up to 5 alpns across all matches can be set.'
          type: array
          items:
            type: string
      type: object
    TcpRouteRouteDestination:
      description: Describe the destination for traffic to be routed to.
      properties:
        weight:
          format: int32
          type: integer
          description: 'Optional. Specifies the proportion of requests forwarded to the backend referenced by the serviceName field. This is computed as: - weight/Sum(weights in this destination list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports. If only one serviceName is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend. If weights are specified for any one service name, they need to be specified for all of them. If weights are unspecified for all services, then, traffic is distributed in equal proportions to all of them.'
        serviceName:
          type: string
          description: Required. The URL of a BackendService to route traffic to.
      id: TcpRouteRouteDestination
      type: object
    ListHttpRoutesResponse:
      properties:
        nextPageToken:
          type: string
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
        httpRoutes:
          description: List of HttpRoute resources.
          type: array
          items:
            $ref: '#/components/schemas/HttpRoute'
      type: object
      id: ListHttpRoutesResponse
      description: Response returned by the ListHttpRoutes method.
    HttpRouteRetryPolicy:
      type: object
      properties:
        perTryTimeout:
          description: Specifies a non-zero timeout per retry attempt.
          type: string
          format: google-duration
        numRetries:
          description: 'Specifies the allowed number of retries. This number must be > 0. If not specified, default to 1.'
          format: int32
          type: integer
        retryConditions:
          type: array
          description: 'Specifies one or more conditions when this retry policy applies. Valid values are: 5xx: Proxy will attempt a retry if the destination service responds with any 5xx response code, of if the destination service does not respond at all, example: disconnect, reset, read timeout, connection failure and refused streams. gateway-error: Similar to 5xx, but only applies to response codes 502, 503, 504. reset: Proxy will attempt a retry if the destination service does not respond at all (disconnect/reset/read timeout) connect-failure: Proxy will retry on failures connecting to destination for example due to connection timeouts. retriable-4xx: Proxy will retry fro retriable 4xx response codes. Currently the only retriable error supported is 409. refused-stream: Proxy will retry if the destination resets the stream with a REFUSED_STREAM error code. This reset type indicates that it is safe to retry.'
          items:
            type: string
      description: The specifications for retries.
      id: HttpRouteRetryPolicy
    TlsRoute:
      id: TlsRoute
      properties:
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The timestamp when the resource was updated.
        meshes:
          description: 'Optional. Meshes defines a list of meshes this TlsRoute is attached to, as one of the routing rules to route the requests served by the mesh. Each mesh reference should match the pattern: `projects/*/locations/global/meshes/` The attached Mesh should be of a type SIDECAR'
          type: array
          items:
            type: string
        gateways:
          type: array
          description: 'Optional. Gateways defines a list of gateways this TlsRoute is attached to, as one of the routing rules to route the requests served by the gateway. Each gateway reference should match the pattern: `projects/*/locations/global/gateways/`'
          items:
            type: string
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The timestamp when the resource was created.
        selfLink:
          description: Output only. Server-defined URL of this resource
          type: string
          readOnly: true
        description:
          description: Optional. A free-text description of the resource. Max length 1024 characters.
          type: string
        rules:
          description: Required. Rules that define how traffic is routed and handled. At least one RouteRule must be supplied. If there are multiple rules then the action taken will be the first rule to match.
          type: array
          items:
            $ref: '#/components/schemas/TlsRouteRouteRule'
        name:
          type: string
          description: Required. Name of the TlsRoute resource. It matches pattern `projects/*/locations/global/tlsRoutes/tls_route_name>`.
        labels:
          type: object
          description: Optional. Set of label tags associated with the TlsRoute resource.
          additionalProperties:
            type: string
      type: object
      description: TlsRoute defines how traffic should be routed based on SNI and other matching L3 attributes.
    TcpRouteRouteRule:
      description: Specifies how to match traffic and how to route traffic when traffic is matched.
      id: TcpRouteRouteRule
      properties:
        matches:
          description: 'Optional. RouteMatch defines the predicate used to match requests to a given action. Multiple match types are "OR"ed for evaluation. If no routeMatch field is specified, this rule will unconditionally match traffic.'
          items:
            $ref: '#/components/schemas/TcpRouteRouteMatch'
          type: array
        action:
          description: Required. The detailed rule defining how to route matched traffic.
          $ref: '#/components/schemas/TcpRouteRouteAction'
      type: object
    ListLocationsResponse:
      type: object
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          type: array
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
      id: ListLocationsResponse
    Location:
      description: A resource that represents a Google Cloud location.
      id: Location
      type: object
      properties:
        name:
          type: string
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          type: string
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
        metadata:
          description: Service-specific metadata. For example the available capacity at the given location.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
    HttpRouteRedirect:
      id: HttpRouteRedirect
      type: object
      description: The specification for redirecting traffic.
      properties:
        responseCode:
          enum:
            - RESPONSE_CODE_UNSPECIFIED
            - MOVED_PERMANENTLY_DEFAULT
            - FOUND
            - SEE_OTHER
            - TEMPORARY_REDIRECT
            - PERMANENT_REDIRECT
          description: The HTTP Status code to use for the redirect.
          enumDescriptions:
            - Default value
            - Corresponds to 301.
            - Corresponds to 302.
            - Corresponds to 303.
            - 'Corresponds to 307. In this case, the request method will be retained.'
            - 'Corresponds to 308. In this case, the request method will be retained.'
          type: string
        portRedirect:
          description: The port that will be used in the redirected request instead of the one that was supplied in the request.
          format: int32
          type: integer
        stripQuery:
          type: boolean
          description: 'if set to true, any accompanying query portion of the original URL is removed prior to redirecting the request. If set to false, the query portion of the original URL is retained. The default is set to false.'
        prefixRewrite:
          description: 'Indicates that during redirection, the matched prefix (or path) should be swapped with this value. This option allows URLs be dynamically created based on the request.'
          type: string
        hostRedirect:
          type: string
          description: The host that will be used in the redirect response instead of the one that was supplied in the request.
        httpsRedirect:
          description: 'If set to true, the URL scheme in the redirected request is set to https. If set to false, the URL scheme of the redirected request will remain the same as that of the request. The default is set to false.'
          type: boolean
        pathRedirect:
          type: string
          description: 'The path that will be used in the redirect response instead of the one that was supplied in the request. path_redirect can not be supplied together with prefix_redirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect.'
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          type: object
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        metadata:
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
      id: Operation
      type: object
    ServiceBinding:
      id: ServiceBinding
      properties:
        serviceId:
          description: Output only. The unique identifier of the Service Directory Service against which the Service Binding resource is validated. This is populated when the Service Binding resource is used in another resource (like Backend Service). This is of the UUID4 format.
          readOnly: true
          type: string
        description:
          type: string
          description: Optional. A free-text description of the resource. Max length 1024 characters.
        name:
          description: Required. Name of the ServiceBinding resource. It matches pattern `projects/*/locations/global/serviceBindings/service_binding_name`.
          type: string
        updateTime:
          type: string
          readOnly: true
          description: Output only. The timestamp when the resource was updated.
          format: google-datetime
        createTime:
          type: string
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          format: google-datetime
        service:
          description: Required. The full Service Directory Service name of the format projects/*/locations/*/namespaces/*/services/*
          type: string
        labels:
          description: Optional. Set of label tags associated with the ServiceBinding resource.
          additionalProperties:
            type: string
          type: object
      type: object
      description: ServiceBinding is the resource that defines a Service Directory Service to be used in a BackendService resource.
    GrpcRouteMethodMatch:
      properties:
        grpcMethod:
          type: string
          description: 'Required. Name of the method to match against. If unspecified, will match all methods.'
        grpcService:
          description: 'Required. Name of the service to match against. If unspecified, will match all services.'
          type: string
        type:
          enum:
            - TYPE_UNSPECIFIED
            - EXACT
            - REGULAR_EXPRESSION
          enumDescriptions:
            - Unspecified.
            - Will only match the exact name provided.
            - Will interpret grpc_method and grpc_service as regexes. RE2 syntax is supported.
          type: string
          description: 'Optional. Specifies how to match against the name. If not specified, a default value of "EXACT" is used.'
        caseSensitive:
          type: boolean
          description: Optional. Specifies that matches are case sensitive. The default value is true. case_sensitive must not be used with a type of REGULAR_EXPRESSION.
      description: Specifies a match against a method.
      id: GrpcRouteMethodMatch
      type: object
    GrpcRouteRouteRule:
      properties:
        matches:
          type: array
          description: 'Optional. Matches define conditions used for matching the rule against incoming gRPC requests. Each match is independent, i.e. this rule will be matched if ANY one of the matches is satisfied. If no matches field is specified, this rule will unconditionally match traffic.'
          items:
            $ref: '#/components/schemas/GrpcRouteRouteMatch'
        action:
          description: Required. A detailed rule defining how to route traffic. This field is required.
          $ref: '#/components/schemas/GrpcRouteRouteAction'
      type: object
      description: Describes how to route traffic.
      id: GrpcRouteRouteRule
    EndpointMatcher:
      properties:
        metadataLabelMatcher:
          $ref: '#/components/schemas/EndpointMatcherMetadataLabelMatcher'
          description: The matcher is based on node metadata presented by xDS clients.
      description: A definition of a matcher that selects endpoints to which the policies should be applied.
      id: EndpointMatcher
      type: object
    HttpRoute:
      properties:
        meshes:
          type: array
          description: 'Optional. Meshes defines a list of meshes this HttpRoute is attached to, as one of the routing rules to route the requests served by the mesh. Each mesh reference should match the pattern: `projects/*/locations/global/meshes/` The attached Mesh should be of a type SIDECAR'
          items:
            type: string
        name:
          type: string
          description: Required. Name of the HttpRoute resource. It matches pattern `projects/*/locations/global/httpRoutes/http_route_name>`.
        updateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The timestamp when the resource was updated.
        gateways:
          items:
            type: string
          description: 'Optional. Gateways defines a list of gateways this HttpRoute is attached to, as one of the routing rules to route the requests served by the gateway. Each gateway reference should match the pattern: `projects/*/locations/global/gateways/`'
          type: array
        rules:
          type: array
          description: Required. Rules that define how traffic is routed and handled. Rules will be matched sequentially based on the RouteMatch specified for the rule.
          items:
            $ref: '#/components/schemas/HttpRouteRouteRule'
        labels:
          additionalProperties:
            type: string
          description: Optional. Set of label tags associated with the HttpRoute resource.
          type: object
        selfLink:
          description: Output only. Server-defined URL of this resource
          type: string
          readOnly: true
        hostnames:
          items:
            type: string
          description: 'Required. Hostnames define a set of hosts that should match against the HTTP host header to select a HttpRoute to process the request. Hostname is the fully qualified domain name of a network host, as defined by RFC 1123 with the exception that: - IPs are not allowed. - A hostname may be prefixed with a wildcard label (`*.`). The wildcard label must appear by itself as the first label. Hostname can be "precise" which is a domain name without the terminating dot of a network host (e.g. `foo.example.com`) or "wildcard", which is a domain name prefixed with a single wildcard label (e.g. `*.example.com`). Note that as per RFC1035 and RFC1123, a label must consist of lower case alphanumeric characters or ''-'', and must start and end with an alphanumeric character. No other punctuation is allowed. The routes associated with a Mesh or Gateways must have unique hostnames. If you attempt to attach multiple routes with conflicting hostnames, the configuration will be rejected. For example, while it is acceptable for routes for the hostnames `*.foo.bar.com` and `*.bar.com` to be associated with the same Mesh (or Gateways under the same scope), it is not possible to associate two routes both with `*.bar.com` or both with `bar.com`.'
          type: array
        createTime:
          description: Output only. The timestamp when the resource was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          type: string
          description: Optional. A free-text description of the resource. Max length 1024 characters.
      type: object
      id: HttpRoute
      description: HttpRoute is the resource defining how HTTP traffic should be routed by a Mesh or Gateway resource.
    HttpRouteHeaderModifier:
      description: The specification for modifying HTTP header in HTTP request and HTTP response.
      type: object
      id: HttpRouteHeaderModifier
      properties:
        add:
          description: 'Add the headers with given map where key is the name of the header, value is the value of the header.'
          additionalProperties:
            type: string
          type: object
        set:
          additionalProperties:
            type: string
          description: 'Completely overwrite/replace the headers with given map where key is the name of the header, value is the value of the header.'
          type: object
        remove:
          description: Remove headers (matching by header names) specified in the list.
          items:
            type: string
          type: array
    AuditLogConfig:
      type: object
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
      id: AuditLogConfig
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
          type: array
      id: TestIamPermissionsResponse
      type: object
    TlsRouteRouteRule:
      description: Specifies how to match traffic and how to route traffic when traffic is matched.
      type: object
      id: TlsRouteRouteRule
      properties:
        action:
          $ref: '#/components/schemas/TlsRouteRouteAction'
          description: Required. The detailed rule defining how to route matched traffic.
        matches:
          items:
            $ref: '#/components/schemas/TlsRouteRouteMatch'
          description: Required. RouteMatch defines the predicate used to match requests to a given action. Multiple match types are "OR"ed for evaluation.
          type: array
    ListGrpcRoutesResponse:
      type: object
      description: Response returned by the ListGrpcRoutes method.
      id: ListGrpcRoutesResponse
      properties:
        grpcRoutes:
          description: List of GrpcRoute resources.
          type: array
          items:
            $ref: '#/components/schemas/GrpcRoute'
        nextPageToken:
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
          type: string
    SetIamPolicyRequest:
      type: object
      description: Request message for `SetIamPolicy` method.
      id: SetIamPolicyRequest
      properties:
        updateMask:
          type: string
          format: google-fieldmask
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
        policy:
          $ref: '#/components/schemas/Policy'
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
    ListGatewaysResponse:
      type: object
      description: Response returned by the ListGateways method.
      id: ListGatewaysResponse
      properties:
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
        nextPageToken:
          type: string
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
        gateways:
          items:
            $ref: '#/components/schemas/Gateway'
          description: List of Gateway resources.
          type: array
    HttpRouteRouteRule:
      description: Specifies how to match traffic and how to route traffic when traffic is matched.
      id: HttpRouteRouteRule
      type: object
      properties:
        action:
          $ref: '#/components/schemas/HttpRouteRouteAction'
          description: The detailed rule defining how to route matched traffic.
        matches:
          description: 'A list of matches define conditions used for matching the rule against incoming HTTP requests. Each match is independent, i.e. this rule will be matched if ANY one of the matches is satisfied. If no matches field is specified, this rule will unconditionally match traffic. If a default rule is desired to be configured, add a rule with no matches specified to the end of the rules list.'
          type: array
          items:
            $ref: '#/components/schemas/HttpRouteRouteMatch'
    HttpRouteRouteMatch:
      description: 'RouteMatch defines specifications used to match requests. If multiple match types are set, this RouteMatch will match if ALL type of matches are matched.'
      properties:
        headers:
          items:
            $ref: '#/components/schemas/HttpRouteHeaderMatch'
          description: Specifies a list of HTTP request headers to match against. ALL of the supplied headers must be matched.
          type: array
        fullPathMatch:
          type: string
          description: 'The HTTP request path value should exactly match this value. Only one of full_path_match, prefix_match, or regex_match should be used.'
        ignoreCase:
          type: boolean
          description: Specifies if prefix_match and full_path_match matches are case sensitive. The default value is false.
        prefixMatch:
          description: 'The HTTP request path value must begin with specified prefix_match. prefix_match must begin with a /. Only one of full_path_match, prefix_match, or regex_match should be used.'
          type: string
        queryParameters:
          items:
            $ref: '#/components/schemas/HttpRouteQueryParameterMatch'
          type: array
          description: Specifies a list of query parameters to match against. ALL of the query parameters must be matched.
        regexMatch:
          type: string
          description: 'The HTTP request path value must satisfy the regular expression specified by regex_match after removing any query parameters and anchor supplied with the original URL. For regular expression grammar, please see https://github.com/google/re2/wiki/Syntax Only one of full_path_match, prefix_match, or regex_match should be used.'
      type: object
      id: HttpRouteRouteMatch
    ListTcpRoutesResponse:
      type: object
      id: ListTcpRoutesResponse
      description: Response returned by the ListTcpRoutes method.
      properties:
        nextPageToken:
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
          type: string
        tcpRoutes:
          items:
            $ref: '#/components/schemas/TcpRoute'
          description: List of TcpRoute resources.
          type: array
    AuditConfig:
      id: AuditConfig
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      properties:
        service:
          description: 'Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.'
          type: string
        auditLogConfigs:
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          type: array
          description: The configuration for logging of each type of permission.
      type: object
    TcpRoute:
      properties:
        rules:
          description: Required. Rules that define how traffic is routed and handled. At least one RouteRule must be supplied. If there are multiple rules then the action taken will be the first rule to match.
          type: array
          items:
            $ref: '#/components/schemas/TcpRouteRouteRule'
        meshes:
          description: 'Optional. Meshes defines a list of meshes this TcpRoute is attached to, as one of the routing rules to route the requests served by the mesh. Each mesh reference should match the pattern: `projects/*/locations/global/meshes/` The attached Mesh should be of a type SIDECAR'
          items:
            type: string
          type: array
        description:
          description: Optional. A free-text description of the resource. Max length 1024 characters.
          type: string
        gateways:
          type: array
          description: 'Optional. Gateways defines a list of gateways this TcpRoute is attached to, as one of the routing rules to route the requests served by the gateway. Each gateway reference should match the pattern: `projects/*/locations/global/gateways/`'
          items:
            type: string
        name:
          type: string
          description: Required. Name of the TcpRoute resource. It matches pattern `projects/*/locations/global/tcpRoutes/tcp_route_name>`.
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The timestamp when the resource was created.
        selfLink:
          readOnly: true
          description: Output only. Server-defined URL of this resource
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: Optional. Set of label tags associated with the TcpRoute resource.
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The timestamp when the resource was updated.
          readOnly: true
      description: TcpRoute is the resource defining how TCP traffic should be routed by a Mesh/Gateway resource.
      id: TcpRoute
      type: object
    HttpRouteRouteAction:
      id: HttpRouteRouteAction
      description: The specifications for routing traffic and applying associated policies.
      type: object
      properties:
        faultInjectionPolicy:
          $ref: '#/components/schemas/HttpRouteFaultInjectionPolicy'
          description: 'The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure. As part of fault injection, when clients send requests to a backend service, delays can be introduced on a percentage of requests before sending those requests to the backend service. Similarly requests from clients can be aborted for a percentage of requests. timeout and retry_policy will be ignored by clients that are configured with a fault_injection_policy'
        destinations:
          description: The destination to which traffic should be forwarded.
          items:
            $ref: '#/components/schemas/HttpRouteDestination'
          type: array
        responseHeaderModifier:
          description: 'The specification for modifying the headers of a response prior to sending the response back to the client. If HeaderModifiers are set on both the Destination and the RouteAction, they will be merged. Conflicts between the two will not be resolved on the configuration.'
          $ref: '#/components/schemas/HttpRouteHeaderModifier'
        requestHeaderModifier:
          $ref: '#/components/schemas/HttpRouteHeaderModifier'
          description: 'The specification for modifying the headers of a matching request prior to delivery of the request to the destination. If HeaderModifiers are set on both the Destination and the RouteAction, they will be merged. Conflicts between the two will not be resolved on the configuration.'
        retryPolicy:
          description: Specifies the retry policy associated with this route.
          $ref: '#/components/schemas/HttpRouteRetryPolicy'
        requestMirrorPolicy:
          $ref: '#/components/schemas/HttpRouteRequestMirrorPolicy'
          description: 'Specifies the policy on how requests intended for the routes destination are shadowed to a separate mirrored destination. Proxy will not wait for the shadow destination to respond before returning the response. Prior to sending traffic to the shadow service, the host/authority header is suffixed with -shadow.'
        redirect:
          description: 'If set, the request is directed as configured by this field.'
          $ref: '#/components/schemas/HttpRouteRedirect'
        corsPolicy:
          description: The specification for allowing client side cross-origin requests.
          $ref: '#/components/schemas/HttpRouteCorsPolicy'
        timeout:
          type: string
          format: google-duration
          description: Specifies the timeout for selected route. Timeout is computed from the time the request has been fully processed (i.e. end of stream) up until the response has been completely processed. Timeout includes all retries.
        urlRewrite:
          description: The specification for rewrite URL before forwarding requests to the destination.
          $ref: '#/components/schemas/HttpRouteURLRewrite'
    HttpRouteDestination:
      properties:
        weight:
          description: 'Specifies the proportion of requests forwarded to the backend referenced by the serviceName field. This is computed as: - weight/Sum(weights in this destination list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports. If only one serviceName is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend. If weights are specified for any one service name, they need to be specified for all of them. If weights are unspecified for all services, then, traffic is distributed in equal proportions to all of them.'
          format: int32
          type: integer
        serviceName:
          type: string
          description: The URL of a BackendService to route traffic to.
      description: Specifications of a destination to which the request should be routed to.
      id: HttpRouteDestination
      type: object
    HttpRouteHeaderMatch:
      description: Specifies how to select a route rule based on HTTP request headers.
      type: object
      properties:
        exactMatch:
          type: string
          description: The value of the header should match exactly the content of exact_match.
        rangeMatch:
          description: 'If specified, the rule will match if the request header value is within the range.'
          $ref: '#/components/schemas/HttpRouteHeaderMatchIntegerRange'
        invertMatch:
          type: boolean
          description: 'If specified, the match result will be inverted before checking. Default value is set to false.'
        suffixMatch:
          type: string
          description: The value of the header must end with the contents of suffix_match.
        prefixMatch:
          type: string
          description: The value of the header must start with the contents of prefix_match.
        regexMatch:
          description: 'The value of the header must match the regular expression specified in regex_match. For regular expression grammar, please see: https://github.com/google/re2/wiki/Syntax'
          type: string
        header:
          description: The name of the HTTP header to match against.
          type: string
        presentMatch:
          description: A header with header_name must exist. The match takes place whether or not the header has a value.
          type: boolean
      id: HttpRouteHeaderMatch
    ListEndpointPoliciesResponse:
      type: object
      description: Response returned by the ListEndpointPolicies method.
      properties:
        nextPageToken:
          type: string
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
        endpointPolicies:
          items:
            $ref: '#/components/schemas/EndpointPolicy'
          description: List of EndpointPolicy resources.
          type: array
      id: ListEndpointPoliciesResponse
  parameters:
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
  x-stackQL-resources:
    locations:
      id: google.networkservices.locations
      name: locations
      title: Locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
    endpoint_policies:
      id: google.networkservices.endpoint_policies
      name: endpoint_policies
      title: Endpoint Policies
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpointPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.endpointPolicies
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpointPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpointPolicies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpointPolicies~1{endpointPoliciesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpointPolicies~1{endpointPoliciesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpointPolicies~1{endpointPoliciesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/endpoint_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/endpoint_policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/endpoint_policies/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/endpoint_policies/methods/delete'
    endpoint_policies_iam_policies:
      id: google.networkservices.endpoint_policies_iam_policies
      name: endpoint_policies_iam_policies
      title: Endpoint Policies Iam Policies
      methods:
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpointPolicies~1{endpointPoliciesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpointPolicies~1{endpointPoliciesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpointPolicies~1{endpointPoliciesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpointPolicies~1{endpointPoliciesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/endpoint_policies_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    http_routes:
      id: google.networkservices.http_routes
      name: http_routes
      title: Http Routes
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1httpRoutes~1{httpRoutesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1httpRoutes~1{httpRoutesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1httpRoutes~1{httpRoutesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1httpRoutes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1httpRoutes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.httpRoutes
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1httpRoutes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/http_routes/methods/get'
          - $ref: '#/components/x-stackQL-resources/http_routes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/http_routes/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/http_routes/methods/delete'
    edge_cache_keysets_iam_policies:
      id: google.networkservices.edge_cache_keysets_iam_policies
      name: edge_cache_keysets_iam_policies
      title: Edge Cache Keysets Iam Policies
      methods:
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheKeysets~1{edgeCacheKeysetsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheKeysets~1{edgeCacheKeysetsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheKeysets~1{edgeCacheKeysetsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheKeysets~1{edgeCacheKeysetsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/edge_cache_keysets_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    meshes:
      id: google.networkservices.meshes
      name: meshes
      title: Meshes
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1meshes~1{meshesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1meshes~1{meshesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1meshes~1{meshesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1meshes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.meshes
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1meshes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1meshes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/meshes/methods/get'
          - $ref: '#/components/x-stackQL-resources/meshes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/meshes/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/meshes/methods/delete'
    meshes_iam_policies:
      id: google.networkservices.meshes_iam_policies
      name: meshes_iam_policies
      title: Meshes Iam Policies
      methods:
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1meshes~1{meshesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1meshes~1{meshesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1meshes~1{meshesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1meshes~1{meshesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/meshes_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    edge_cache_origins_iam_policies:
      id: google.networkservices.edge_cache_origins_iam_policies
      name: edge_cache_origins_iam_policies
      title: Edge Cache Origins Iam Policies
      methods:
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheOrigins~1{edgeCacheOriginsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheOrigins~1{edgeCacheOriginsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheOrigins~1{edgeCacheOriginsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheOrigins~1{edgeCacheOriginsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/edge_cache_origins_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    edge_cache_services_iam_policies:
      id: google.networkservices.edge_cache_services_iam_policies
      name: edge_cache_services_iam_policies
      title: Edge Cache Services Iam Policies
      methods:
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheServices~1{edgeCacheServicesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheServices~1{edgeCacheServicesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheServices~1{edgeCacheServicesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheServices~1{edgeCacheServicesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/edge_cache_services_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    tcp_routes:
      id: google.networkservices.tcp_routes
      name: tcp_routes
      title: Tcp Routes
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tcpRoutes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tcpRoutes
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tcpRoutes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tcpRoutes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tcpRoutes~1{tcpRoutesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tcpRoutes~1{tcpRoutesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tcpRoutes~1{tcpRoutesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tcp_routes/methods/get'
          - $ref: '#/components/x-stackQL-resources/tcp_routes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tcp_routes/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tcp_routes/methods/delete'
    gateways:
      id: google.networkservices.gateways
      name: gateways
      title: Gateways
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gateways/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gateways/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.gateways
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gateways/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gateways~1{gatewaysId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gateways~1{gatewaysId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gateways~1{gatewaysId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gateways/methods/get'
          - $ref: '#/components/x-stackQL-resources/gateways/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/gateways/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/gateways/methods/delete'
    gateways_iam_policies:
      id: google.networkservices.gateways_iam_policies
      name: gateways_iam_policies
      title: Gateways Iam Policies
      methods:
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gateways~1{gatewaysId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gateways~1{gatewaysId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gateways~1{gatewaysId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gateways~1{gatewaysId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gateways_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    operations:
      id: google.networkservices.operations
      name: operations
      title: Operations
      methods:
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    tls_routes:
      id: google.networkservices.tls_routes
      name: tls_routes
      title: Tls Routes
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tlsRoutes~1{tlsRoutesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tlsRoutes~1{tlsRoutesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tlsRoutes~1{tlsRoutesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tlsRoutes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tlsRoutes
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tlsRoutes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tlsRoutes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tls_routes/methods/get'
          - $ref: '#/components/x-stackQL-resources/tls_routes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tls_routes/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tls_routes/methods/delete'
    grpc_routes:
      id: google.networkservices.grpc_routes
      name: grpc_routes
      title: Grpc Routes
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1grpcRoutes~1{grpcRoutesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1grpcRoutes~1{grpcRoutesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1grpcRoutes~1{grpcRoutesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1grpcRoutes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1grpcRoutes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.grpcRoutes
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1grpcRoutes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/grpc_routes/methods/get'
          - $ref: '#/components/x-stackQL-resources/grpc_routes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/grpc_routes/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/grpc_routes/methods/delete'
    service_bindings_iam_policies:
      id: google.networkservices.service_bindings_iam_policies
      name: service_bindings_iam_policies
      title: Service Bindings Iam Policies
      methods:
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceBindings~1{serviceBindingsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceBindings~1{serviceBindingsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceBindings~1{serviceBindingsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceBindings~1{serviceBindingsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_bindings_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    service_bindings:
      id: google.networkservices.service_bindings
      name: service_bindings
      title: Service Bindings
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceBindings/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceBindings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.serviceBindings
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceBindings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceBindings~1{serviceBindingsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceBindings~1{serviceBindingsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_bindings/methods/get'
          - $ref: '#/components/x-stackQL-resources/service_bindings/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/service_bindings/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/service_bindings/methods/delete'
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
    get:
      description: Gets information about a location.
      operationId: networkservices.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: networkservices.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v1/projects/{projectsId}/locations/{locationsId}/endpointPolicies':
    parameters: *ref_1
    get:
      description: Lists EndpointPolicies in a given project and location.
      operationId: networkservices.projects.locations.endpointPolicies.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEndpointPoliciesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: endpoint_policies
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.endpointPolicies
    post:
      description: Creates a new EndpointPolicy in a given project and location.
      operationId: networkservices.projects.locations.endpointPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: endpointPolicyId
          schema:
            type: string
      x-stackQL-resource: endpoint_policies
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/endpointPolicies/{endpointPoliciesId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single EndpointPolicy.
      operationId: networkservices.projects.locations.endpointPolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: endpoint_policies
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a single EndpointPolicy.
      operationId: networkservices.projects.locations.endpointPolicies.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: endpoint_policies
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single EndpointPolicy.
      operationId: networkservices.projects.locations.endpointPolicies.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: endpoint_policies
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/endpointPolicies/{endpointPoliciesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networkservices.projects.locations.endpointPolicies.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: endpoint_policies_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/endpointPolicies/{endpointPoliciesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: networkservices.projects.locations.endpointPolicies.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: endpoint_policies_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/endpointPolicies/{endpointPoliciesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networkservices.projects.locations.endpointPolicies.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: endpoint_policies_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/httpRoutes/{httpRoutesId}':
    parameters: *ref_1
    get:
      description: Gets details of a single HttpRoute.
      operationId: networkservices.projects.locations.httpRoutes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpRoute'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: httpRoutesId
          required: true
          schema:
            type: string
      x-stackQL-resource: http_routes
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a single HttpRoute.
      operationId: networkservices.projects.locations.httpRoutes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HttpRoute'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: httpRoutesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: http_routes
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a single HttpRoute.
      operationId: networkservices.projects.locations.httpRoutes.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: httpRoutesId
          required: true
          schema:
            type: string
      x-stackQL-resource: http_routes
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/httpRoutes':
    parameters: *ref_1
    post:
      description: Creates a new HttpRoute in a given project and location.
      operationId: networkservices.projects.locations.httpRoutes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HttpRoute'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: httpRouteId
          schema:
            type: string
      x-stackQL-resource: http_routes
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists HttpRoute in a given project and location.
      operationId: networkservices.projects.locations.httpRoutes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHttpRoutesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: http_routes
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.httpRoutes
  '/v1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets/{edgeCacheKeysetsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networkservices.projects.locations.edgeCacheKeysets.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: edgeCacheKeysetsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: edge_cache_keysets_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets/{edgeCacheKeysetsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networkservices.projects.locations.edgeCacheKeysets.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: edgeCacheKeysetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: edge_cache_keysets_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets/{edgeCacheKeysetsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: networkservices.projects.locations.edgeCacheKeysets.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: edgeCacheKeysetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: edge_cache_keysets_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/meshes/{meshesId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single Mesh.
      operationId: networkservices.projects.locations.meshes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mesh'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: meshesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: meshes
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a single Mesh.
      operationId: networkservices.projects.locations.meshes.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: meshesId
          required: true
          schema:
            type: string
      x-stackQL-resource: meshes
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single Mesh.
      operationId: networkservices.projects.locations.meshes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mesh'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: meshesId
          required: true
          schema:
            type: string
      x-stackQL-resource: meshes
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/meshes/{meshesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: networkservices.projects.locations.meshes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: meshesId
          required: true
          schema:
            type: string
      x-stackQL-resource: meshes_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/meshes/{meshesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networkservices.projects.locations.meshes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: meshesId
          required: true
          schema:
            type: string
      x-stackQL-resource: meshes_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/meshes':
    parameters: *ref_1
    get:
      description: Lists Meshes in a given project and location.
      operationId: networkservices.projects.locations.meshes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMeshesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: meshes
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.meshes
    post:
      description: Creates a new Mesh in a given project and location.
      operationId: networkservices.projects.locations.meshes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mesh'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: meshId
          schema:
            type: string
      x-stackQL-resource: meshes
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/meshes/{meshesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networkservices.projects.locations.meshes.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: meshesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: meshes_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins/{edgeCacheOriginsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networkservices.projects.locations.edgeCacheOrigins.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: edgeCacheOriginsId
          required: true
          schema:
            type: string
      x-stackQL-resource: edge_cache_origins_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins/{edgeCacheOriginsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networkservices.projects.locations.edgeCacheOrigins.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: edgeCacheOriginsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: edge_cache_origins_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins/{edgeCacheOriginsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: networkservices.projects.locations.edgeCacheOrigins.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: edgeCacheOriginsId
          required: true
          schema:
            type: string
      x-stackQL-resource: edge_cache_origins_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices/{edgeCacheServicesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networkservices.projects.locations.edgeCacheServices.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: edgeCacheServicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: edge_cache_services_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices/{edgeCacheServicesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networkservices.projects.locations.edgeCacheServices.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: edgeCacheServicesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: edge_cache_services_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices/{edgeCacheServicesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: networkservices.projects.locations.edgeCacheServices.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: edgeCacheServicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: edge_cache_services_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tcpRoutes':
    parameters: *ref_1
    get:
      description: Lists TcpRoute in a given project and location.
      operationId: networkservices.projects.locations.tcpRoutes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTcpRoutesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: tcp_routes
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.tcpRoutes
    post:
      description: Creates a new TcpRoute in a given project and location.
      operationId: networkservices.projects.locations.tcpRoutes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TcpRoute'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: tcpRouteId
          schema:
            type: string
      x-stackQL-resource: tcp_routes
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/tcpRoutes/{tcpRoutesId}':
    parameters: *ref_1
    delete:
      description: Deletes a single TcpRoute.
      operationId: networkservices.projects.locations.tcpRoutes.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tcpRoutesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tcp_routes
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single TcpRoute.
      operationId: networkservices.projects.locations.tcpRoutes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TcpRoute'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tcpRoutesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tcp_routes
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a single TcpRoute.
      operationId: networkservices.projects.locations.tcpRoutes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TcpRoute'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tcpRoutesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: tcp_routes
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/gateways':
    parameters: *ref_1
    post:
      description: Creates a new Gateway in a given project and location.
      operationId: networkservices.projects.locations.gateways.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gateway'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: gatewayId
          schema:
            type: string
      x-stackQL-resource: gateways
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists Gateways in a given project and location.
      operationId: networkservices.projects.locations.gateways.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGatewaysResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: gateways
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.gateways
  '/v1/projects/{projectsId}/locations/{locationsId}/gateways/{gatewaysId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: networkservices.projects.locations.gateways.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gatewaysId
          required: true
          schema:
            type: string
      x-stackQL-resource: gateways_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/gateways/{gatewaysId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networkservices.projects.locations.gateways.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gatewaysId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: gateways_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/gateways/{gatewaysId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networkservices.projects.locations.gateways.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gatewaysId
          required: true
          schema:
            type: string
      x-stackQL-resource: gateways_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/gateways/{gatewaysId}':
    parameters: *ref_1
    delete:
      description: Deletes a single Gateway.
      operationId: networkservices.projects.locations.gateways.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gatewaysId
          required: true
          schema:
            type: string
      x-stackQL-resource: gateways
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates the parameters of a single Gateway.
      operationId: networkservices.projects.locations.gateways.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gateway'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gatewaysId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: gateways
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets details of a single Gateway.
      operationId: networkservices.projects.locations.gateways.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gatewaysId
          required: true
          schema:
            type: string
      x-stackQL-resource: gateways
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: networkservices.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: networkservices.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: networkservices.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: networkservices.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/tlsRoutes/{tlsRoutesId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single TlsRoute.
      operationId: networkservices.projects.locations.tlsRoutes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TlsRoute'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tlsRoutesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: tls_routes
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a single TlsRoute.
      operationId: networkservices.projects.locations.tlsRoutes.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tlsRoutesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tls_routes
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single TlsRoute.
      operationId: networkservices.projects.locations.tlsRoutes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TlsRoute'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tlsRoutesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tls_routes
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/tlsRoutes':
    parameters: *ref_1
    get:
      description: Lists TlsRoute in a given project and location.
      operationId: networkservices.projects.locations.tlsRoutes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTlsRoutesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: tls_routes
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.tlsRoutes
    post:
      description: Creates a new TlsRoute in a given project and location.
      operationId: networkservices.projects.locations.tlsRoutes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TlsRoute'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: tlsRouteId
          schema:
            type: string
      x-stackQL-resource: tls_routes
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/grpcRoutes/{grpcRoutesId}':
    parameters: *ref_1
    delete:
      description: Deletes a single GrpcRoute.
      operationId: networkservices.projects.locations.grpcRoutes.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: grpcRoutesId
          required: true
          schema:
            type: string
      x-stackQL-resource: grpc_routes
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single GrpcRoute.
      operationId: networkservices.projects.locations.grpcRoutes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrpcRoute'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: grpcRoutesId
          required: true
          schema:
            type: string
      x-stackQL-resource: grpc_routes
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a single GrpcRoute.
      operationId: networkservices.projects.locations.grpcRoutes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrpcRoute'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: grpcRoutesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: grpc_routes
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/grpcRoutes':
    parameters: *ref_1
    post:
      description: Creates a new GrpcRoute in a given project and location.
      operationId: networkservices.projects.locations.grpcRoutes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrpcRoute'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: grpcRouteId
          schema:
            type: string
      x-stackQL-resource: grpc_routes
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists GrpcRoutes in a given project and location.
      operationId: networkservices.projects.locations.grpcRoutes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGrpcRoutesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: grpc_routes
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.grpcRoutes
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceBindings/{serviceBindingsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networkservices.projects.locations.serviceBindings.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceBindingsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: service_bindings_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceBindings':
    parameters: *ref_1
    post:
      description: Creates a new ServiceBinding in a given project and location.
      operationId: networkservices.projects.locations.serviceBindings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceBinding'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: serviceBindingId
          schema:
            type: string
      x-stackQL-resource: service_bindings
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists ServiceBinding in a given project and location.
      operationId: networkservices.projects.locations.serviceBindings.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceBindingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: service_bindings
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.serviceBindings
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceBindings/{serviceBindingsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networkservices.projects.locations.serviceBindings.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceBindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_bindings_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceBindings/{serviceBindingsId}':
    parameters: *ref_1
    get:
      description: Gets details of a single ServiceBinding.
      operationId: networkservices.projects.locations.serviceBindings.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBinding'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceBindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_bindings
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a single ServiceBinding.
      operationId: networkservices.projects.locations.serviceBindings.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceBindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_bindings
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceBindings/{serviceBindingsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: networkservices.projects.locations.serviceBindings.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceBindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_bindings_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
