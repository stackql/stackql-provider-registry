openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Network Services API
  description: ''
  version: v1
  x-discovery-doc-revision: '20240905'
  x-generated-date: '2024-09-19'
externalDocs:
  url: https://cloud.google.com/networking
servers:
  - url: https://networkservices.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    ListLbTrafficExtensionsResponse:
      id: ListLbTrafficExtensionsResponse
      description: Message for response to listing `LbTrafficExtension` resources.
      type: object
      properties:
        lbTrafficExtensions:
          description: The list of `LbTrafficExtension` resources.
          type: array
          items:
            $ref: '#/components/schemas/LbTrafficExtension'
        nextPageToken:
          description: A token identifying a page of results that the server returns.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    LbTrafficExtension:
      id: LbTrafficExtension
      description: >-
        `LbTrafficExtension` is a resource that lets the extension service
        modify the headers and payloads of both requests and responses without
        impacting the choice of backend services or any other security policies
        associated with the backend service.
      type: object
      properties:
        name:
          description: >-
            Required. Identifier. Name of the `LbTrafficExtension` resource in
            the following format:
            `projects/{project}/locations/{location}/lbTrafficExtensions/{lb_traffic_extension}`.
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The timestamp when the resource was updated.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: Optional. A human-readable description of the resource.
          type: string
        labels:
          description: >-
            Optional. Set of labels associated with the `LbTrafficExtension`
            resource. The format must comply with [the requirements for
            labels](https://cloud.google.com/compute/docs/labeling-resources#requirements)
            for Google Cloud resources.
          type: object
          additionalProperties:
            type: string
        forwardingRules:
          description: >-
            Required. A list of references to the forwarding rules to which this
            service extension is attached to. At least one forwarding rule is
            required. There can be only one `LBTrafficExtension` resource per
            forwarding rule.
          type: array
          items:
            type: string
        extensionChains:
          description: >-
            Required. A set of ordered extension chains that contain the match
            conditions and extensions to execute. Match conditions for each
            extension chain are evaluated in sequence for a given request. The
            first extension chain that has a condition that matches the request
            is executed. Any subsequent extension chains do not execute. Limited
            to 5 extension chains per resource.
          type: array
          items:
            $ref: '#/components/schemas/ExtensionChain'
        loadBalancingScheme:
          description: >-
            Required. All backend services and forwarding rules referenced by
            this extension must share the same load balancing scheme. Supported
            values: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`. For more
            information, refer to [Choosing a load
            balancer](https://cloud.google.com/load-balancing/docs/backend-service).
          type: string
          enumDescriptions:
            - Default value. Do not use.
            - Signifies that this is used for Internal HTTP(S) Load Balancing.
            - >-
              Signifies that this is used for External Managed HTTP(S) Load
              Balancing.
          enum:
            - LOAD_BALANCING_SCHEME_UNSPECIFIED
            - INTERNAL_MANAGED
            - EXTERNAL_MANAGED
        metadata:
          description: >-
            Optional. The metadata provided here is included in the
            `ProcessingRequest.metadata_context.filter_metadata` map field. The
            metadata is available under the key
            `com.google.lb_traffic_extension.`. The following variables are
            supported in the metadata: `{forwarding_rule_id}` - substituted with
            the forwarding rule's fully qualified resource name.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    ExtensionChain:
      id: ExtensionChain
      description: >-
        A single extension chain wrapper that contains the match conditions and
        extensions to execute.
      type: object
      properties:
        name:
          description: >-
            Required. The name for this extension chain. The name is logged as
            part of the HTTP request logs. The name must conform with RFC-1034,
            is restricted to lower-cased letters, numbers and hyphens, and can
            have a maximum length of 63 characters. Additionally, the first
            character must be a letter and the last a letter or a number.
          type: string
        matchCondition:
          description: >-
            Required. Conditions under which this chain is invoked for a
            request.
          $ref: '#/components/schemas/ExtensionChainMatchCondition'
        extensions:
          description: >-
            Required. A set of extensions to execute for the matching request.
            At least one extension is required. Up to 3 extensions can be
            defined for each extension chain for `LbTrafficExtension` resource.
            `LbRouteExtension` chains are limited to 1 extension per extension
            chain.
          type: array
          items:
            $ref: '#/components/schemas/ExtensionChainExtension'
    ExtensionChainMatchCondition:
      id: ExtensionChainMatchCondition
      description: Conditions under which this chain is invoked for a request.
      type: object
      properties:
        celExpression:
          description: >-
            Required. A Common Expression Language (CEL) expression that is used
            to match requests for which the extension chain is executed. For
            more information, see [CEL matcher language
            reference](https://cloud.google.com/service-extensions/docs/cel-matcher-language-reference).
          type: string
    ExtensionChainExtension:
      id: ExtensionChainExtension
      description: A single extension in the chain to execute for the matching request.
      type: object
      properties:
        name:
          description: >-
            Required. The name for this extension. The name is logged as part of
            the HTTP request logs. The name must conform with RFC-1034, is
            restricted to lower-cased letters, numbers and hyphens, and can have
            a maximum length of 63 characters. Additionally, the first character
            must be a letter and the last a letter or a number.
          type: string
        authority:
          description: >-
            Optional. The `:authority` header in the gRPC request sent from
            Envoy to the extension service. Required for Callout extensions.
          type: string
        service:
          description: >-
            Required. The reference to the service that runs the extension.
            Currently only callout extensions are supported here. To configure a
            callout extension, `service` must be a fully-qualified reference to
            a [backend
            service](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices)
            in the format:
            `https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/backendServices/{backendService}`
            or
            `https://www.googleapis.com/compute/v1/projects/{project}/global/backendServices/{backendService}`.
          type: string
        supportedEvents:
          description: >-
            Optional. A set of events during request or response processing for
            which this extension is called. This field is required for the
            `LbTrafficExtension` resource. It must not be set for the
            `LbRouteExtension` resource.
          type: array
          items:
            type: string
            enumDescriptions:
              - Unspecified value. Do not use.
              - >-
                If included in `supported_events`, the extension is called when
                the HTTP request headers arrive.
              - >-
                If included in `supported_events`, the extension is called when
                the HTTP request body arrives.
              - >-
                If included in `supported_events`, the extension is called when
                the HTTP response headers arrive.
              - >-
                If included in `supported_events`, the extension is called when
                the HTTP response body arrives.
              - >-
                If included in `supported_events`, the extension is called when
                the HTTP request trailers arrives.
              - >-
                If included in `supported_events`, the extension is called when
                the HTTP response trailers arrives.
            enum:
              - EVENT_TYPE_UNSPECIFIED
              - REQUEST_HEADERS
              - REQUEST_BODY
              - RESPONSE_HEADERS
              - RESPONSE_BODY
              - REQUEST_TRAILERS
              - RESPONSE_TRAILERS
        timeout:
          description: >-
            Optional. Specifies the timeout for each individual message on the
            stream. The timeout must be between 10-1000 milliseconds. Required
            for Callout extensions.
          type: string
          format: google-duration
        failOpen:
          description: >-
            Optional. Determines how the proxy behaves if the call to the
            extension fails or times out. When set to `TRUE`, request or
            response processing continues without error. Any subsequent
            extensions in the extension chain are also executed. When set to
            `FALSE` or the default setting of `FALSE` is used, one of the
            following happens: * If response headers have not been delivered to
            the downstream client, a generic 500 error is returned to the
            client. The error response can be tailored by configuring a custom
            error response in the load balancer. * If response headers have been
            delivered, then the HTTP stream to the downstream client is reset.
          type: boolean
        forwardHeaders:
          description: >-
            Optional. List of the HTTP headers to forward to the extension (from
            the client or backend). If omitted, all headers are sent. Each
            element is a string indicating the header name.
          type: array
          items:
            type: string
    ListLbRouteExtensionsResponse:
      id: ListLbRouteExtensionsResponse
      description: Message for response to listing `LbRouteExtension` resources.
      type: object
      properties:
        lbRouteExtensions:
          description: The list of `LbRouteExtension` resources.
          type: array
          items:
            $ref: '#/components/schemas/LbRouteExtension'
        nextPageToken:
          description: A token identifying a page of results that the server returns.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    LbRouteExtension:
      id: LbRouteExtension
      description: >-
        `LbRouteExtension` is a resource that lets you control where traffic is
        routed to for a given request.
      type: object
      properties:
        name:
          description: >-
            Required. Identifier. Name of the `LbRouteExtension` resource in the
            following format:
            `projects/{project}/locations/{location}/lbRouteExtensions/{lb_route_extension}`.
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The timestamp when the resource was updated.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: Optional. A human-readable description of the resource.
          type: string
        labels:
          description: >-
            Optional. Set of labels associated with the `LbRouteExtension`
            resource. The format must comply with [the requirements for
            labels](https://cloud.google.com/compute/docs/labeling-resources#requirements)
            for Google Cloud resources.
          type: object
          additionalProperties:
            type: string
        forwardingRules:
          description: >-
            Required. A list of references to the forwarding rules to which this
            service extension is attached to. At least one forwarding rule is
            required. There can be only one `LbRouteExtension` resource per
            forwarding rule.
          type: array
          items:
            type: string
        extensionChains:
          description: >-
            Required. A set of ordered extension chains that contain the match
            conditions and extensions to execute. Match conditions for each
            extension chain are evaluated in sequence for a given request. The
            first extension chain that has a condition that matches the request
            is executed. Any subsequent extension chains do not execute. Limited
            to 5 extension chains per resource.
          type: array
          items:
            $ref: '#/components/schemas/ExtensionChain'
        loadBalancingScheme:
          description: >-
            Required. All backend services and forwarding rules referenced by
            this extension must share the same load balancing scheme. Supported
            values: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`. For more
            information, refer to [Choosing a load
            balancer](https://cloud.google.com/load-balancing/docs/backend-service).
          type: string
          enumDescriptions:
            - Default value. Do not use.
            - Signifies that this is used for Internal HTTP(S) Load Balancing.
            - >-
              Signifies that this is used for External Managed HTTP(S) Load
              Balancing.
          enum:
            - LOAD_BALANCING_SCHEME_UNSPECIFIED
            - INTERNAL_MANAGED
            - EXTERNAL_MANAGED
        metadata:
          description: >-
            Optional. The metadata provided here is included as part of the
            `metadata_context` (of type `google.protobuf.Struct`) in the
            `ProcessingRequest` message sent to the extension server. The
            metadata is available under the namespace
            `com.google.lb_route_extension.`. The following variables are
            supported in the metadata Struct: `{forwarding_rule_id}` -
            substituted with the forwarding rule's fully qualified resource
            name.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    ListEndpointPoliciesResponse:
      id: ListEndpointPoliciesResponse
      description: Response returned by the ListEndpointPolicies method.
      type: object
      properties:
        endpointPolicies:
          description: List of EndpointPolicy resources.
          type: array
          items:
            $ref: '#/components/schemas/EndpointPolicy'
        nextPageToken:
          description: >-
            If there might be more results than those appearing in this
            response, then `next_page_token` is included. To get the next set of
            results, call this method again using the value of `next_page_token`
            as `page_token`.
          type: string
    EndpointPolicy:
      id: EndpointPolicy
      description: >-
        EndpointPolicy is a resource that helps apply desired configuration on
        the endpoints that match specific criteria. For example, this resource
        can be used to apply "authentication config" an all endpoints that serve
        on port 8080.
      type: object
      properties:
        name:
          description: >-
            Identifier. Name of the EndpointPolicy resource. It matches pattern
            `projects/{project}/locations/global/endpointPolicies/{endpoint_policy}`.
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The timestamp when the resource was updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: >-
            Optional. Set of label tags associated with the EndpointPolicy
            resource.
          type: object
          additionalProperties:
            type: string
        type:
          description: >-
            Required. The type of endpoint policy. This is primarily used to
            validate the configuration.
          type: string
          enumDescriptions:
            - Default value. Must not be used.
            - Represents a proxy deployed as a sidecar.
            - Represents a proxyless gRPC backend.
          enum:
            - ENDPOINT_POLICY_TYPE_UNSPECIFIED
            - SIDECAR_PROXY
            - GRPC_SERVER
        authorizationPolicy:
          description: >-
            Optional. This field specifies the URL of AuthorizationPolicy
            resource that applies authorization policies to the inbound traffic
            at the matched endpoints. Refer to Authorization. If this field is
            not specified, authorization is disabled(no authz checks) for this
            endpoint.
          type: string
        endpointMatcher:
          description: >-
            Required. A matcher that selects endpoints to which the policies
            should be applied.
          $ref: '#/components/schemas/EndpointMatcher'
        trafficPortSelector:
          description: >-
            Optional. Port selector for the (matched) endpoints. If no port
            selector is provided, the matched config is applied to all ports.
          $ref: '#/components/schemas/TrafficPortSelector'
        description:
          description: >-
            Optional. A free-text description of the resource. Max length 1024
            characters.
          type: string
        serverTlsPolicy:
          description: >-
            Optional. A URL referring to ServerTlsPolicy resource.
            ServerTlsPolicy is used to determine the authentication policy to be
            applied to terminate the inbound traffic at the identified backends.
            If this field is not set, authentication is disabled(open) for this
            endpoint.
          type: string
        clientTlsPolicy:
          description: >-
            Optional. A URL referring to a ClientTlsPolicy resource.
            ClientTlsPolicy can be set to specify the authentication for traffic
            from the proxy to the actual endpoints. More specifically, it is
            applied to the outgoing traffic from the proxy to the endpoint. This
            is typically used for sidecar model where the proxy identifies
            itself as endpoint to the control plane, with the connection between
            sidecar and endpoint requiring authentication. If this field is not
            set, authentication is disabled(open). Applicable only when
            EndpointPolicyType is SIDECAR_PROXY.
          type: string
    EndpointMatcher:
      id: EndpointMatcher
      description: >-
        A definition of a matcher that selects endpoints to which the policies
        should be applied.
      type: object
      properties:
        metadataLabelMatcher:
          description: The matcher is based on node metadata presented by xDS clients.
          $ref: '#/components/schemas/EndpointMatcherMetadataLabelMatcher'
    EndpointMatcherMetadataLabelMatcher:
      id: EndpointMatcherMetadataLabelMatcher
      description: The matcher that is based on node metadata presented by xDS clients.
      type: object
      properties:
        metadataLabelMatchCriteria:
          description: >-
            Specifies how matching should be done. Supported values are:
            MATCH_ANY: At least one of the Labels specified in the matcher
            should match the metadata presented by xDS client. MATCH_ALL: The
            metadata presented by the xDS client should contain all of the
            labels specified here. The selection is determined based on the best
            match. For example, suppose there are three EndpointPolicy resources
            P1, P2 and P3 and if P1 has a the matcher as MATCH_ANY , P2 has
            MATCH_ALL , and P3 has MATCH_ALL . If a client with label connects,
            the config from P1 will be selected. If a client with label
            connects, the config from P2 will be selected. If a client with
            label connects, the config from P3 will be selected. If there is
            more than one best match, (for example, if a config P4 with selector
            exists and if a client with label connects), pick up the one with
            older creation time.
          type: string
          enumDescriptions:
            - Default value. Should not be used.
            - >-
              At least one of the Labels specified in the matcher should match
              the metadata presented by xDS client.
            - >-
              The metadata presented by the xDS client should contain all of the
              labels specified here.
          enum:
            - METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED
            - MATCH_ANY
            - MATCH_ALL
        metadataLabels:
          description: >-
            The list of label value pairs that must match labels in the provided
            metadata based on filterMatchCriteria This list can have at most 64
            entries. The list can be empty if the match criteria is MATCH_ANY,
            to specify a wildcard match (i.e this matches any client).
          type: array
          items:
            $ref: >-
              #/components/schemas/EndpointMatcherMetadataLabelMatcherMetadataLabels
    EndpointMatcherMetadataLabelMatcherMetadataLabels:
      id: EndpointMatcherMetadataLabelMatcherMetadataLabels
      description: Defines a name-pair value for a single label.
      type: object
      properties:
        labelName:
          description: Required. Label name presented as key in xDS Node Metadata.
          type: string
        labelValue:
          description: >-
            Required. Label value presented as value corresponding to the above
            key, in xDS Node Metadata.
          type: string
    TrafficPortSelector:
      id: TrafficPortSelector
      description: Specification of a port-based selector.
      type: object
      properties:
        ports:
          description: >-
            Optional. A list of ports. Can be port numbers or port range
            (example, [80-90] specifies all ports from 80 to 90, including 80
            and 90) or named ports or * to specify all ports. If the list is
            empty, all ports are selected.
          type: array
          items:
            type: string
    ListGatewaysResponse:
      id: ListGatewaysResponse
      description: Response returned by the ListGateways method.
      type: object
      properties:
        gateways:
          description: List of Gateway resources.
          type: array
          items:
            $ref: '#/components/schemas/Gateway'
        nextPageToken:
          description: >-
            If there might be more results than those appearing in this
            response, then `next_page_token` is included. To get the next set of
            results, call this method again using the value of `next_page_token`
            as `page_token`.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Gateway:
      id: Gateway
      description: >-
        Gateway represents the configuration for a proxy, typically a load
        balancer. It captures the ip:port over which the services are exposed by
        the proxy, along with any policy configurations. Routes have reference
        to to Gateways to dictate how requests should be routed by this Gateway.
        Next id: 33
      type: object
      properties:
        name:
          description: >-
            Identifier. Name of the Gateway resource. It matches pattern
            `projects/*/locations/*/gateways/`.
          type: string
        selfLink:
          description: Output only. Server-defined URL of this resource
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The timestamp when the resource was updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. Set of label tags associated with the Gateway resource.
          type: object
          additionalProperties:
            type: string
        description:
          description: >-
            Optional. A free-text description of the resource. Max length 1024
            characters.
          type: string
        type:
          description: >-
            Immutable. The type of the customer managed gateway. This field is
            required. If unspecified, an error is returned.
          type: string
          enumDescriptions:
            - The type of the customer managed gateway is unspecified.
            - >-
              The type of the customer managed gateway is TrafficDirector Open
              Mesh.
            - >-
              The type of the customer managed gateway is SecureWebGateway
              (SWG).
          enum:
            - TYPE_UNSPECIFIED
            - OPEN_MESH
            - SECURE_WEB_GATEWAY
        addresses:
          description: >-
            Optional. Zero or one IPv4 or IPv6 address on which the Gateway will
            receive the traffic. When no address is provided, an IP from the
            subnetwork is allocated This field only applies to gateways of type
            'SECURE_WEB_GATEWAY'. Gateways of type 'OPEN_MESH' listen on 0.0.0.0
            for IPv4 and :: for IPv6.
          type: array
          items:
            type: string
        ports:
          description: >-
            Required. One or more port numbers (1-65535), on which the Gateway
            will receive traffic. The proxy binds to the specified ports.
            Gateways of type 'SECURE_WEB_GATEWAY' are limited to 1 port.
            Gateways of type 'OPEN_MESH' listen on 0.0.0.0 for IPv4 and :: for
            IPv6 and support multiple ports.
          type: array
          items:
            type: integer
            format: int32
        scope:
          description: >-
            Optional. Scope determines how configuration across multiple Gateway
            instances are merged. The configuration for multiple Gateway
            instances with the same scope will be merged as presented as a
            single coniguration to the proxy/load balancer. Max length 64
            characters. Scope should start with a letter and can only have
            letters, numbers, hyphens.
          type: string
        serverTlsPolicy:
          description: >-
            Optional. A fully-qualified ServerTLSPolicy URL reference. Specifies
            how TLS traffic is terminated. If empty, TLS termination is
            disabled.
          type: string
        certificateUrls:
          description: >-
            Optional. A fully-qualified Certificates URL reference. The proxy
            presents a Certificate (selected based on SNI) when establishing a
            TLS connection. This feature only applies to gateways of type
            'SECURE_WEB_GATEWAY'.
          type: array
          items:
            type: string
        gatewaySecurityPolicy:
          description: >-
            Optional. A fully-qualified GatewaySecurityPolicy URL reference.
            Defines how a server should apply security policy to inbound (VM to
            Proxy) initiated connections. For example:
            `projects/*/locations/*/gatewaySecurityPolicies/swg-policy`. This
            policy is specific to gateways of type 'SECURE_WEB_GATEWAY'.
          type: string
        network:
          description: >-
            Optional. The relative resource name identifying the VPC network
            that is using this configuration. For example:
            `projects/*/global/networks/network-1`. Currently, this field is
            specific to gateways of type 'SECURE_WEB_GATEWAY'.
          type: string
        subnetwork:
          description: >-
            Optional. The relative resource name identifying the subnetwork in
            which this SWG is allocated. For example:
            `projects/*/regions/us-central1/subnetworks/network-1` Currently,
            this field is specific to gateways of type 'SECURE_WEB_GATEWAY".
          type: string
        ipVersion:
          description: >-
            Optional. The IP Version that will be used by this gateway. Valid
            options are IPV4 or IPV6. Default is IPV4.
          type: string
          enumDescriptions:
            - The type when IP version is not specified. Defaults to IPV4.
            - The type for IP version 4.
            - The type for IP version 6.
          enum:
            - IP_VERSION_UNSPECIFIED
            - IPV4
            - IPV6
        envoyHeaders:
          description: >-
            Optional. Determines if envoy will insert internal debug headers
            into upstream requests. Other Envoy headers may still be injected.
            By default, envoy will not insert any debug headers.
          type: string
          enumDescriptions:
            - Defaults to NONE.
            - Suppress envoy debug headers.
            - >-
              Envoy will insert default internal debug headers into upstream
              requests: x-envoy-attempt-count x-envoy-is-timeout-retry
              x-envoy-expected-rq-timeout-ms x-envoy-original-path
              x-envoy-upstream-stream-duration-ms
          enum:
            - ENVOY_HEADERS_UNSPECIFIED
            - NONE
            - DEBUG_HEADERS
        routingMode:
          description: >-
            Optional. The routing mode of the Gateway. This field is
            configurable only for gateways of type SECURE_WEB_GATEWAY. This
            field is required for gateways of type SECURE_WEB_GATEWAY.
          type: string
          enumDescriptions:
            - >-
              The routing mode is explicit; clients are configured to send
              traffic through the gateway. This is the default routing mode.
            - >-
              The routing mode is next-hop. Clients are unaware of the gateway,
              and a route (advanced route or other route type) can be configured
              to direct traffic from client to gateway. The gateway then acts as
              a next-hop to the destination.
          enum:
            - EXPLICIT_ROUTING_MODE
            - NEXT_HOP_ROUTING_MODE
    ListGrpcRoutesResponse:
      id: ListGrpcRoutesResponse
      description: Response returned by the ListGrpcRoutes method.
      type: object
      properties:
        grpcRoutes:
          description: List of GrpcRoute resources.
          type: array
          items:
            $ref: '#/components/schemas/GrpcRoute'
        nextPageToken:
          description: >-
            If there might be more results than those appearing in this
            response, then `next_page_token` is included. To get the next set of
            results, call this method again using the value of `next_page_token`
            as `page_token`.
          type: string
    GrpcRoute:
      id: GrpcRoute
      description: >-
        GrpcRoute is the resource defining how gRPC traffic routed by a Mesh or
        Gateway resource is routed.
      type: object
      properties:
        name:
          description: >-
            Identifier. Name of the GrpcRoute resource. It matches pattern
            `projects/*/locations/global/grpcRoutes/`
          type: string
        selfLink:
          description: Output only. Server-defined URL of this resource
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The timestamp when the resource was updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. Set of label tags associated with the GrpcRoute resource.
          type: object
          additionalProperties:
            type: string
        description:
          description: >-
            Optional. A free-text description of the resource. Max length 1024
            characters.
          type: string
        hostnames:
          description: >-
            Required. Service hostnames with an optional port for which this
            route describes traffic. Format: [:] Hostname is the fully qualified
            domain name of a network host. This matches the RFC 1123 definition
            of a hostname with 2 notable exceptions: - IPs are not allowed. - A
            hostname may be prefixed with a wildcard label (`*.`). The wildcard
            label must appear by itself as the first label. Hostname can be
            "precise" which is a domain name without the terminating dot of a
            network host (e.g. `foo.example.com`) or "wildcard", which is a
            domain name prefixed with a single wildcard label (e.g.
            `*.example.com`). Note that as per RFC1035 and RFC1123, a label must
            consist of lower case alphanumeric characters or '-', and must start
            and end with an alphanumeric character. No other punctuation is
            allowed. The routes associated with a Mesh or Gateway must have
            unique hostnames. If you attempt to attach multiple routes with
            conflicting hostnames, the configuration will be rejected. For
            example, while it is acceptable for routes for the hostnames
            `*.foo.bar.com` and `*.bar.com` to be associated with the same
            route, it is not possible to associate two routes both with
            `*.bar.com` or both with `bar.com`. If a port is specified, then
            gRPC clients must use the channel URI with the port to match this
            rule (i.e. "xds:///service:123"), otherwise they must supply the URI
            without a port (i.e. "xds:///service").
          type: array
          items:
            type: string
        meshes:
          description: >-
            Optional. Meshes defines a list of meshes this GrpcRoute is attached
            to, as one of the routing rules to route the requests served by the
            mesh. Each mesh reference should match the pattern:
            `projects/*/locations/global/meshes/`
          type: array
          items:
            type: string
        gateways:
          description: >-
            Optional. Gateways defines a list of gateways this GrpcRoute is
            attached to, as one of the routing rules to route the requests
            served by the gateway. Each gateway reference should match the
            pattern: `projects/*/locations/global/gateways/`
          type: array
          items:
            type: string
        rules:
          description: >-
            Required. A list of detailed rules defining how to route traffic.
            Within a single GrpcRoute, the GrpcRoute.RouteAction associated with
            the first matching GrpcRoute.RouteRule will be executed. At least
            one rule must be supplied.
          type: array
          items:
            $ref: '#/components/schemas/GrpcRouteRouteRule'
    GrpcRouteRouteRule:
      id: GrpcRouteRouteRule
      description: Describes how to route traffic.
      type: object
      properties:
        matches:
          description: >-
            Optional. Matches define conditions used for matching the rule
            against incoming gRPC requests. Each match is independent, i.e. this
            rule will be matched if ANY one of the matches is satisfied. If no
            matches field is specified, this rule will unconditionally match
            traffic.
          type: array
          items:
            $ref: '#/components/schemas/GrpcRouteRouteMatch'
        action:
          description: >-
            Required. A detailed rule defining how to route traffic. This field
            is required.
          $ref: '#/components/schemas/GrpcRouteRouteAction'
    GrpcRouteRouteMatch:
      id: GrpcRouteRouteMatch
      description: >-
        Criteria for matching traffic. A RouteMatch will be considered to match
        when all supplied fields match.
      type: object
      properties:
        method:
          description: >-
            Optional. A gRPC method to match against. If this field is empty or
            omitted, will match all methods.
          $ref: '#/components/schemas/GrpcRouteMethodMatch'
        headers:
          description: Optional. Specifies a collection of headers to match.
          type: array
          items:
            $ref: '#/components/schemas/GrpcRouteHeaderMatch'
    GrpcRouteMethodMatch:
      id: GrpcRouteMethodMatch
      description: Specifies a match against a method.
      type: object
      properties:
        type:
          description: >-
            Optional. Specifies how to match against the name. If not specified,
            a default value of "EXACT" is used.
          type: string
          enumDescriptions:
            - Unspecified.
            - Will only match the exact name provided.
            - >-
              Will interpret grpc_method and grpc_service as regexes. RE2 syntax
              is supported.
          enum:
            - TYPE_UNSPECIFIED
            - EXACT
            - REGULAR_EXPRESSION
        grpcService:
          description: >-
            Required. Name of the service to match against. If unspecified, will
            match all services.
          type: string
        grpcMethod:
          description: >-
            Required. Name of the method to match against. If unspecified, will
            match all methods.
          type: string
        caseSensitive:
          description: >-
            Optional. Specifies that matches are case sensitive. The default
            value is true. case_sensitive must not be used with a type of
            REGULAR_EXPRESSION.
          type: boolean
    GrpcRouteHeaderMatch:
      id: GrpcRouteHeaderMatch
      description: A match against a collection of headers.
      type: object
      properties:
        type:
          description: >-
            Optional. Specifies how to match against the value of the header. If
            not specified, a default value of EXACT is used.
          type: string
          enumDescriptions:
            - Unspecified.
            - Will only match the exact value provided.
            - >-
              Will match paths conforming to the prefix specified by value. RE2
              syntax is supported.
          enum:
            - TYPE_UNSPECIFIED
            - EXACT
            - REGULAR_EXPRESSION
        key:
          description: Required. The key of the header.
          type: string
        value:
          description: Required. The value of the header.
          type: string
    GrpcRouteRouteAction:
      id: GrpcRouteRouteAction
      description: Specifies how to route matched traffic.
      type: object
      properties:
        destinations:
          description: >-
            Optional. The destination services to which traffic should be
            forwarded. If multiple destinations are specified, traffic will be
            split between Backend Service(s) according to the weight field of
            these destinations.
          type: array
          items:
            $ref: '#/components/schemas/GrpcRouteDestination'
        faultInjectionPolicy:
          description: >-
            Optional. The specification for fault injection introduced into
            traffic to test the resiliency of clients to destination service
            failure. As part of fault injection, when clients send requests to a
            destination, delays can be introduced on a percentage of requests
            before sending those requests to the destination service. Similarly
            requests from clients can be aborted by for a percentage of
            requests. timeout and retry_policy will be ignored by clients that
            are configured with a fault_injection_policy
          $ref: '#/components/schemas/GrpcRouteFaultInjectionPolicy'
        timeout:
          description: >-
            Optional. Specifies the timeout for selected route. Timeout is
            computed from the time the request has been fully processed (i.e.
            end of stream) up until the response has been completely processed.
            Timeout includes all retries.
          type: string
          format: google-duration
        retryPolicy:
          description: Optional. Specifies the retry policy associated with this route.
          $ref: '#/components/schemas/GrpcRouteRetryPolicy'
        statefulSessionAffinity:
          description: Optional. Specifies cookie-based stateful session affinity.
          $ref: '#/components/schemas/GrpcRouteStatefulSessionAffinityPolicy'
        idleTimeout:
          description: >-
            Optional. Specifies the idle timeout for the selected route. The
            idle timeout is defined as the period in which there are no bytes
            sent or received on either the upstream or downstream connection. If
            not set, the default idle timeout is 1 hour. If set to 0s, the
            timeout will be disabled.
          type: string
          format: google-duration
    GrpcRouteDestination:
      id: GrpcRouteDestination
      description: The destination to which traffic will be routed.
      type: object
      properties:
        serviceName:
          description: >-
            Required. The URL of a destination service to which to route
            traffic. Must refer to either a BackendService or
            ServiceDirectoryService.
          type: string
        weight:
          description: >-
            Optional. Specifies the proportion of requests forwarded to the
            backend referenced by the serviceName field. This is computed as: -
            weight/Sum(weights in this destination list). For non-zero values,
            there may be some epsilon from the exact proportion defined here
            depending on the precision an implementation supports. If only one
            serviceName is specified and it has a weight greater than 0, 100% of
            the traffic is forwarded to that backend. If weights are specified
            for any one service name, they need to be specified for all of them.
            If weights are unspecified for all services, then, traffic is
            distributed in equal proportions to all of them.
          type: integer
          format: int32
    GrpcRouteFaultInjectionPolicy:
      id: GrpcRouteFaultInjectionPolicy
      description: >-
        The specification for fault injection introduced into traffic to test
        the resiliency of clients to destination service failure. As part of
        fault injection, when clients send requests to a destination, delays can
        be introduced on a percentage of requests before sending those requests
        to the destination service. Similarly requests from clients can be
        aborted by for a percentage of requests.
      type: object
      properties:
        delay:
          description: The specification for injecting delay to client requests.
          $ref: '#/components/schemas/GrpcRouteFaultInjectionPolicyDelay'
        abort:
          description: The specification for aborting to client requests.
          $ref: '#/components/schemas/GrpcRouteFaultInjectionPolicyAbort'
    GrpcRouteFaultInjectionPolicyDelay:
      id: GrpcRouteFaultInjectionPolicyDelay
      description: >-
        Specification of how client requests are delayed as part of fault
        injection before being sent to a destination.
      type: object
      properties:
        fixedDelay:
          description: Specify a fixed delay before forwarding the request.
          type: string
          format: google-duration
        percentage:
          description: >-
            The percentage of traffic on which delay will be injected. The value
            must be between [0, 100]
          type: integer
          format: int32
    GrpcRouteFaultInjectionPolicyAbort:
      id: GrpcRouteFaultInjectionPolicyAbort
      description: >-
        Specification of how client requests are aborted as part of fault
        injection before being sent to a destination.
      type: object
      properties:
        httpStatus:
          description: >-
            The HTTP status code used to abort the request. The value must be
            between 200 and 599 inclusive.
          type: integer
          format: int32
        percentage:
          description: >-
            The percentage of traffic which will be aborted. The value must be
            between [0, 100]
          type: integer
          format: int32
    GrpcRouteRetryPolicy:
      id: GrpcRouteRetryPolicy
      description: >-
        The specifications for retries. Specifies one or more conditions for
        which this retry rule applies. Valid values are:
      type: object
      properties:
        retryConditions:
          description: >-
            - connect-failure: Router will retry on failures connecting to
            Backend Services, for example due to connection timeouts. -
            refused-stream: Router will retry if the backend service resets the
            stream with a REFUSED_STREAM error code. This reset type indicates
            that it is safe to retry. - cancelled: Router will retry if the gRPC
            status code in the response header is set to cancelled -
            deadline-exceeded: Router will retry if the gRPC status code in the
            response header is set to deadline-exceeded - resource-exhausted:
            Router will retry if the gRPC status code in the response header is
            set to resource-exhausted - unavailable: Router will retry if the
            gRPC status code in the response header is set to unavailable
          type: array
          items:
            type: string
        numRetries:
          description: >-
            Specifies the allowed number of retries. This number must be > 0. If
            not specified, default to 1.
          type: integer
          format: uint32
    GrpcRouteStatefulSessionAffinityPolicy:
      id: GrpcRouteStatefulSessionAffinityPolicy
      description: >-
        The specification for cookie-based stateful session affinity where the
        date plane supplies a “session cookie” with the name "GSSA" which
        encodes a specific destination host and each request containing that
        cookie will be directed to that host as long as the destination host
        remains up and healthy. The gRPC proxyless mesh library or sidecar proxy
        will manage the session cookie but the client application code is
        responsible for copying the cookie from each RPC in the session to the
        next.
      type: object
      properties:
        cookieTtl:
          description: >-
            Required. The cookie TTL value for the Set-Cookie header generated
            by the data plane. The lifetime of the cookie may be set to a value
            from 1 to 86400 seconds (24 hours) inclusive.
          type: string
          format: google-duration
    ListHttpRoutesResponse:
      id: ListHttpRoutesResponse
      description: Response returned by the ListHttpRoutes method.
      type: object
      properties:
        httpRoutes:
          description: List of HttpRoute resources.
          type: array
          items:
            $ref: '#/components/schemas/HttpRoute'
        nextPageToken:
          description: >-
            If there might be more results than those appearing in this
            response, then `next_page_token` is included. To get the next set of
            results, call this method again using the value of `next_page_token`
            as `page_token`.
          type: string
    HttpRoute:
      id: HttpRoute
      description: >-
        HttpRoute is the resource defining how HTTP traffic should be routed by
        a Mesh or Gateway resource.
      type: object
      properties:
        name:
          description: >-
            Identifier. Name of the HttpRoute resource. It matches pattern
            `projects/*/locations/global/httpRoutes/http_route_name>`.
          type: string
        selfLink:
          description: Output only. Server-defined URL of this resource
          readOnly: true
          type: string
        description:
          description: >-
            Optional. A free-text description of the resource. Max length 1024
            characters.
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The timestamp when the resource was updated.
          readOnly: true
          type: string
          format: google-datetime
        hostnames:
          description: >-
            Required. Hostnames define a set of hosts that should match against
            the HTTP host header to select a HttpRoute to process the request.
            Hostname is the fully qualified domain name of a network host, as
            defined by RFC 1123 with the exception that: - IPs are not allowed.
            - A hostname may be prefixed with a wildcard label (`*.`). The
            wildcard label must appear by itself as the first label. Hostname
            can be "precise" which is a domain name without the terminating dot
            of a network host (e.g. `foo.example.com`) or "wildcard", which is a
            domain name prefixed with a single wildcard label (e.g.
            `*.example.com`). Note that as per RFC1035 and RFC1123, a label must
            consist of lower case alphanumeric characters or '-', and must start
            and end with an alphanumeric character. No other punctuation is
            allowed. The routes associated with a Mesh or Gateways must have
            unique hostnames. If you attempt to attach multiple routes with
            conflicting hostnames, the configuration will be rejected. For
            example, while it is acceptable for routes for the hostnames
            `*.foo.bar.com` and `*.bar.com` to be associated with the same Mesh
            (or Gateways under the same scope), it is not possible to associate
            two routes both with `*.bar.com` or both with `bar.com`.
          type: array
          items:
            type: string
        meshes:
          description: >-
            Optional. Meshes defines a list of meshes this HttpRoute is attached
            to, as one of the routing rules to route the requests served by the
            mesh. Each mesh reference should match the pattern:
            `projects/*/locations/global/meshes/` The attached Mesh should be of
            a type SIDECAR
          type: array
          items:
            type: string
        gateways:
          description: >-
            Optional. Gateways defines a list of gateways this HttpRoute is
            attached to, as one of the routing rules to route the requests
            served by the gateway. Each gateway reference should match the
            pattern: `projects/*/locations/global/gateways/`
          type: array
          items:
            type: string
        labels:
          description: Optional. Set of label tags associated with the HttpRoute resource.
          type: object
          additionalProperties:
            type: string
        rules:
          description: >-
            Required. Rules that define how traffic is routed and handled. Rules
            will be matched sequentially based on the RouteMatch specified for
            the rule.
          type: array
          items:
            $ref: '#/components/schemas/HttpRouteRouteRule'
    HttpRouteRouteRule:
      id: HttpRouteRouteRule
      description: >-
        Specifies how to match traffic and how to route traffic when traffic is
        matched.
      type: object
      properties:
        matches:
          description: >-
            A list of matches define conditions used for matching the rule
            against incoming HTTP requests. Each match is independent, i.e. this
            rule will be matched if ANY one of the matches is satisfied. If no
            matches field is specified, this rule will unconditionally match
            traffic. If a default rule is desired to be configured, add a rule
            with no matches specified to the end of the rules list.
          type: array
          items:
            $ref: '#/components/schemas/HttpRouteRouteMatch'
        action:
          description: The detailed rule defining how to route matched traffic.
          $ref: '#/components/schemas/HttpRouteRouteAction'
    HttpRouteRouteMatch:
      id: HttpRouteRouteMatch
      description: >-
        RouteMatch defines specifications used to match requests. If multiple
        match types are set, this RouteMatch will match if ALL type of matches
        are matched.
      type: object
      properties:
        fullPathMatch:
          description: >-
            The HTTP request path value should exactly match this value. Only
            one of full_path_match, prefix_match, or regex_match should be used.
          type: string
        prefixMatch:
          description: >-
            The HTTP request path value must begin with specified prefix_match.
            prefix_match must begin with a /. Only one of full_path_match,
            prefix_match, or regex_match should be used.
          type: string
        regexMatch:
          description: >-
            The HTTP request path value must satisfy the regular expression
            specified by regex_match after removing any query parameters and
            anchor supplied with the original URL. For regular expression
            grammar, please see https://github.com/google/re2/wiki/Syntax Only
            one of full_path_match, prefix_match, or regex_match should be used.
          type: string
        ignoreCase:
          description: >-
            Specifies if prefix_match and full_path_match matches are case
            sensitive. The default value is false.
          type: boolean
        headers:
          description: >-
            Specifies a list of HTTP request headers to match against. ALL of
            the supplied headers must be matched.
          type: array
          items:
            $ref: '#/components/schemas/HttpRouteHeaderMatch'
        queryParameters:
          description: >-
            Specifies a list of query parameters to match against. ALL of the
            query parameters must be matched.
          type: array
          items:
            $ref: '#/components/schemas/HttpRouteQueryParameterMatch'
    HttpRouteHeaderMatch:
      id: HttpRouteHeaderMatch
      description: Specifies how to select a route rule based on HTTP request headers.
      type: object
      properties:
        exactMatch:
          description: >-
            The value of the header should match exactly the content of
            exact_match.
          type: string
        regexMatch:
          description: >-
            The value of the header must match the regular expression specified
            in regex_match. For regular expression grammar, please see:
            https://github.com/google/re2/wiki/Syntax
          type: string
        prefixMatch:
          description: >-
            The value of the header must start with the contents of
            prefix_match.
          type: string
        presentMatch:
          description: >-
            A header with header_name must exist. The match takes place whether
            or not the header has a value.
          type: boolean
        suffixMatch:
          description: The value of the header must end with the contents of suffix_match.
          type: string
        rangeMatch:
          description: >-
            If specified, the rule will match if the request header value is
            within the range.
          $ref: '#/components/schemas/HttpRouteHeaderMatchIntegerRange'
        header:
          description: The name of the HTTP header to match against.
          type: string
        invertMatch:
          description: >-
            If specified, the match result will be inverted before checking.
            Default value is set to false.
          type: boolean
    HttpRouteHeaderMatchIntegerRange:
      id: HttpRouteHeaderMatchIntegerRange
      description: Represents an integer value range.
      type: object
      properties:
        start:
          description: Start of the range (inclusive)
          type: integer
          format: int32
        end:
          description: End of the range (exclusive)
          type: integer
          format: int32
    HttpRouteQueryParameterMatch:
      id: HttpRouteQueryParameterMatch
      description: Specifications to match a query parameter in the request.
      type: object
      properties:
        exactMatch:
          description: >-
            The value of the query parameter must exactly match the contents of
            exact_match. Only one of exact_match, regex_match, or present_match
            must be set.
          type: string
        regexMatch:
          description: >-
            The value of the query parameter must match the regular expression
            specified by regex_match. For regular expression grammar, please see
            https://github.com/google/re2/wiki/Syntax Only one of exact_match,
            regex_match, or present_match must be set.
          type: string
        presentMatch:
          description: >-
            Specifies that the QueryParameterMatcher matches if request contains
            query parameter, irrespective of whether the parameter has a value
            or not. Only one of exact_match, regex_match, or present_match must
            be set.
          type: boolean
        queryParameter:
          description: The name of the query parameter to match.
          type: string
    HttpRouteRouteAction:
      id: HttpRouteRouteAction
      description: The specifications for routing traffic and applying associated policies.
      type: object
      properties:
        destinations:
          description: The destination to which traffic should be forwarded.
          type: array
          items:
            $ref: '#/components/schemas/HttpRouteDestination'
        redirect:
          description: If set, the request is directed as configured by this field.
          $ref: '#/components/schemas/HttpRouteRedirect'
        faultInjectionPolicy:
          description: >-
            The specification for fault injection introduced into traffic to
            test the resiliency of clients to backend service failure. As part
            of fault injection, when clients send requests to a backend service,
            delays can be introduced on a percentage of requests before sending
            those requests to the backend service. Similarly requests from
            clients can be aborted for a percentage of requests. timeout and
            retry_policy will be ignored by clients that are configured with a
            fault_injection_policy
          $ref: '#/components/schemas/HttpRouteFaultInjectionPolicy'
        requestHeaderModifier:
          description: >-
            The specification for modifying the headers of a matching request
            prior to delivery of the request to the destination. If
            HeaderModifiers are set on both the Destination and the RouteAction,
            they will be merged. Conflicts between the two will not be resolved
            on the configuration.
          $ref: '#/components/schemas/HttpRouteHeaderModifier'
        responseHeaderModifier:
          description: >-
            The specification for modifying the headers of a response prior to
            sending the response back to the client. If HeaderModifiers are set
            on both the Destination and the RouteAction, they will be merged.
            Conflicts between the two will not be resolved on the configuration.
          $ref: '#/components/schemas/HttpRouteHeaderModifier'
        urlRewrite:
          description: >-
            The specification for rewrite URL before forwarding requests to the
            destination.
          $ref: '#/components/schemas/HttpRouteURLRewrite'
        timeout:
          description: >-
            Specifies the timeout for selected route. Timeout is computed from
            the time the request has been fully processed (i.e. end of stream)
            up until the response has been completely processed. Timeout
            includes all retries.
          type: string
          format: google-duration
        retryPolicy:
          description: Specifies the retry policy associated with this route.
          $ref: '#/components/schemas/HttpRouteRetryPolicy'
        requestMirrorPolicy:
          description: >-
            Specifies the policy on how requests intended for the routes
            destination are shadowed to a separate mirrored destination. Proxy
            will not wait for the shadow destination to respond before returning
            the response. Prior to sending traffic to the shadow service, the
            host/authority header is suffixed with -shadow.
          $ref: '#/components/schemas/HttpRouteRequestMirrorPolicy'
        corsPolicy:
          description: The specification for allowing client side cross-origin requests.
          $ref: '#/components/schemas/HttpRouteCorsPolicy'
        statefulSessionAffinity:
          description: Optional. Specifies cookie-based stateful session affinity.
          $ref: '#/components/schemas/HttpRouteStatefulSessionAffinityPolicy'
        directResponse:
          description: >-
            Optional. Static HTTP Response object to be returned regardless of
            the request.
          $ref: '#/components/schemas/HttpRouteHttpDirectResponse'
        idleTimeout:
          description: >-
            Optional. Specifies the idle timeout for the selected route. The
            idle timeout is defined as the period in which there are no bytes
            sent or received on either the upstream or downstream connection. If
            not set, the default idle timeout is 1 hour. If set to 0s, the
            timeout will be disabled.
          type: string
          format: google-duration
    HttpRouteDestination:
      id: HttpRouteDestination
      description: >-
        Specifications of a destination to which the request should be routed
        to.
      type: object
      properties:
        serviceName:
          description: The URL of a BackendService to route traffic to.
          type: string
        weight:
          description: >-
            Specifies the proportion of requests forwarded to the backend
            referenced by the serviceName field. This is computed as: -
            weight/Sum(weights in this destination list). For non-zero values,
            there may be some epsilon from the exact proportion defined here
            depending on the precision an implementation supports. If only one
            serviceName is specified and it has a weight greater than 0, 100% of
            the traffic is forwarded to that backend. If weights are specified
            for any one service name, they need to be specified for all of them.
            If weights are unspecified for all services, then, traffic is
            distributed in equal proportions to all of them.
          type: integer
          format: int32
        requestHeaderModifier:
          description: >-
            Optional. The specification for modifying the headers of a matching
            request prior to delivery of the request to the destination. If
            HeaderModifiers are set on both the Destination and the RouteAction,
            they will be merged. Conflicts between the two will not be resolved
            on the configuration.
          $ref: '#/components/schemas/HttpRouteHeaderModifier'
        responseHeaderModifier:
          description: >-
            Optional. The specification for modifying the headers of a response
            prior to sending the response back to the client. If HeaderModifiers
            are set on both the Destination and the RouteAction, they will be
            merged. Conflicts between the two will not be resolved on the
            configuration.
          $ref: '#/components/schemas/HttpRouteHeaderModifier'
    HttpRouteHeaderModifier:
      id: HttpRouteHeaderModifier
      description: >-
        The specification for modifying HTTP header in HTTP request and HTTP
        response.
      type: object
      properties:
        set:
          description: >-
            Completely overwrite/replace the headers with given map where key is
            the name of the header, value is the value of the header.
          type: object
          additionalProperties:
            type: string
        add:
          description: >-
            Add the headers with given map where key is the name of the header,
            value is the value of the header.
          type: object
          additionalProperties:
            type: string
        remove:
          description: Remove headers (matching by header names) specified in the list.
          type: array
          items:
            type: string
    HttpRouteRedirect:
      id: HttpRouteRedirect
      description: The specification for redirecting traffic.
      type: object
      properties:
        hostRedirect:
          description: >-
            The host that will be used in the redirect response instead of the
            one that was supplied in the request.
          type: string
        pathRedirect:
          description: >-
            The path that will be used in the redirect response instead of the
            one that was supplied in the request. path_redirect can not be
            supplied together with prefix_redirect. Supply one alone or neither.
            If neither is supplied, the path of the original request will be
            used for the redirect.
          type: string
        prefixRewrite:
          description: >-
            Indicates that during redirection, the matched prefix (or path)
            should be swapped with this value. This option allows URLs be
            dynamically created based on the request.
          type: string
        responseCode:
          description: The HTTP Status code to use for the redirect.
          type: string
          enumDescriptions:
            - Default value
            - Corresponds to 301.
            - Corresponds to 302.
            - Corresponds to 303.
            - >-
              Corresponds to 307. In this case, the request method will be
              retained.
            - >-
              Corresponds to 308. In this case, the request method will be
              retained.
          enum:
            - RESPONSE_CODE_UNSPECIFIED
            - MOVED_PERMANENTLY_DEFAULT
            - FOUND
            - SEE_OTHER
            - TEMPORARY_REDIRECT
            - PERMANENT_REDIRECT
        httpsRedirect:
          description: >-
            If set to true, the URL scheme in the redirected request is set to
            https. If set to false, the URL scheme of the redirected request
            will remain the same as that of the request. The default is set to
            false.
          type: boolean
        stripQuery:
          description: >-
            if set to true, any accompanying query portion of the original URL
            is removed prior to redirecting the request. If set to false, the
            query portion of the original URL is retained. The default is set to
            false.
          type: boolean
        portRedirect:
          description: >-
            The port that will be used in the redirected request instead of the
            one that was supplied in the request.
          type: integer
          format: int32
    HttpRouteFaultInjectionPolicy:
      id: HttpRouteFaultInjectionPolicy
      description: >-
        The specification for fault injection introduced into traffic to test
        the resiliency of clients to destination service failure. As part of
        fault injection, when clients send requests to a destination, delays can
        be introduced by client proxy on a percentage of requests before sending
        those requests to the destination service. Similarly requests can be
        aborted by client proxy for a percentage of requests.
      type: object
      properties:
        delay:
          description: The specification for injecting delay to client requests.
          $ref: '#/components/schemas/HttpRouteFaultInjectionPolicyDelay'
        abort:
          description: The specification for aborting to client requests.
          $ref: '#/components/schemas/HttpRouteFaultInjectionPolicyAbort'
    HttpRouteFaultInjectionPolicyDelay:
      id: HttpRouteFaultInjectionPolicyDelay
      description: >-
        Specification of how client requests are delayed as part of fault
        injection before being sent to a destination.
      type: object
      properties:
        fixedDelay:
          description: Specify a fixed delay before forwarding the request.
          type: string
          format: google-duration
        percentage:
          description: >-
            The percentage of traffic on which delay will be injected. The value
            must be between [0, 100]
          type: integer
          format: int32
    HttpRouteFaultInjectionPolicyAbort:
      id: HttpRouteFaultInjectionPolicyAbort
      description: >-
        Specification of how client requests are aborted as part of fault
        injection before being sent to a destination.
      type: object
      properties:
        httpStatus:
          description: >-
            The HTTP status code used to abort the request. The value must be
            between 200 and 599 inclusive.
          type: integer
          format: int32
        percentage:
          description: >-
            The percentage of traffic which will be aborted. The value must be
            between [0, 100]
          type: integer
          format: int32
    HttpRouteURLRewrite:
      id: HttpRouteURLRewrite
      description: >-
        The specification for modifying the URL of the request, prior to
        forwarding the request to the destination.
      type: object
      properties:
        pathPrefixRewrite:
          description: >-
            Prior to forwarding the request to the selected destination, the
            matching portion of the requests path is replaced by this value.
          type: string
        hostRewrite:
          description: >-
            Prior to forwarding the request to the selected destination, the
            requests host header is replaced by this value.
          type: string
    HttpRouteRetryPolicy:
      id: HttpRouteRetryPolicy
      description: The specifications for retries.
      type: object
      properties:
        retryConditions:
          description: >-
            Specifies one or more conditions when this retry policy applies.
            Valid values are: 5xx: Proxy will attempt a retry if the destination
            service responds with any 5xx response code, of if the destination
            service does not respond at all, example: disconnect, reset, read
            timeout, connection failure and refused streams. gateway-error:
            Similar to 5xx, but only applies to response codes 502, 503, 504.
            reset: Proxy will attempt a retry if the destination service does
            not respond at all (disconnect/reset/read timeout) connect-failure:
            Proxy will retry on failures connecting to destination for example
            due to connection timeouts. retriable-4xx: Proxy will retry fro
            retriable 4xx response codes. Currently the only retriable error
            supported is 409. refused-stream: Proxy will retry if the
            destination resets the stream with a REFUSED_STREAM error code. This
            reset type indicates that it is safe to retry.
          type: array
          items:
            type: string
        numRetries:
          description: >-
            Specifies the allowed number of retries. This number must be > 0. If
            not specified, default to 1.
          type: integer
          format: int32
        perTryTimeout:
          description: Specifies a non-zero timeout per retry attempt.
          type: string
          format: google-duration
    HttpRouteRequestMirrorPolicy:
      id: HttpRouteRequestMirrorPolicy
      description: >-
        Specifies the policy on how requests are shadowed to a separate mirrored
        destination service. The proxy does not wait for responses from the
        shadow service. Prior to sending traffic to the shadow service, the
        host/authority header is suffixed with -shadow.
      type: object
      properties:
        destination:
          description: >-
            The destination the requests will be mirrored to. The weight of the
            destination will be ignored.
          $ref: '#/components/schemas/HttpRouteDestination'
        mirrorPercent:
          description: >-
            Optional. The percentage of requests to get mirrored to the desired
            destination.
          type: number
          format: float
    HttpRouteCorsPolicy:
      id: HttpRouteCorsPolicy
      description: The Specification for allowing client side cross-origin requests.
      type: object
      properties:
        allowOrigins:
          description: >-
            Specifies the list of origins that will be allowed to do CORS
            requests. An origin is allowed if it matches either an item in
            allow_origins or an item in allow_origin_regexes.
          type: array
          items:
            type: string
        allowOriginRegexes:
          description: >-
            Specifies the regular expression patterns that match allowed
            origins. For regular expression grammar, please see
            https://github.com/google/re2/wiki/Syntax.
          type: array
          items:
            type: string
        allowMethods:
          description: Specifies the content for Access-Control-Allow-Methods header.
          type: array
          items:
            type: string
        allowHeaders:
          description: Specifies the content for Access-Control-Allow-Headers header.
          type: array
          items:
            type: string
        exposeHeaders:
          description: Specifies the content for Access-Control-Expose-Headers header.
          type: array
          items:
            type: string
        maxAge:
          description: >-
            Specifies how long result of a preflight request can be cached in
            seconds. This translates to the Access-Control-Max-Age header.
          type: string
        allowCredentials:
          description: >-
            In response to a preflight request, setting this to true indicates
            that the actual request can include user credentials. This
            translates to the Access-Control-Allow-Credentials header. Default
            value is false.
          type: boolean
        disabled:
          description: >-
            If true, the CORS policy is disabled. The default value is false,
            which indicates that the CORS policy is in effect.
          type: boolean
    HttpRouteStatefulSessionAffinityPolicy:
      id: HttpRouteStatefulSessionAffinityPolicy
      description: >-
        The specification for cookie-based stateful session affinity where the
        date plane supplies a “session cookie” with the name "GSSA" which
        encodes a specific destination host and each request containing that
        cookie will be directed to that host as long as the destination host
        remains up and healthy. The gRPC proxyless mesh library or sidecar proxy
        will manage the session cookie but the client application code is
        responsible for copying the cookie from each RPC in the session to the
        next.
      type: object
      properties:
        cookieTtl:
          description: >-
            Required. The cookie TTL value for the Set-Cookie header generated
            by the data plane. The lifetime of the cookie may be set to a value
            from 1 to 86400 seconds (24 hours) inclusive.
          type: string
          format: google-duration
    HttpRouteHttpDirectResponse:
      id: HttpRouteHttpDirectResponse
      description: Static HTTP response object to be returned.
      type: object
      properties:
        stringBody:
          description: >-
            Optional. Response body as a string. Maximum body length is 1024
            characters.
          type: string
        bytesBody:
          description: Optional. Response body as bytes. Maximum body size is 4096B.
          type: string
          format: byte
        status:
          description: >-
            Required. Status to return as part of HTTP Response. Must be a
            positive integer.
          type: integer
          format: int32
    ListTcpRoutesResponse:
      id: ListTcpRoutesResponse
      description: Response returned by the ListTcpRoutes method.
      type: object
      properties:
        tcpRoutes:
          description: List of TcpRoute resources.
          type: array
          items:
            $ref: '#/components/schemas/TcpRoute'
        nextPageToken:
          description: >-
            If there might be more results than those appearing in this
            response, then `next_page_token` is included. To get the next set of
            results, call this method again using the value of `next_page_token`
            as `page_token`.
          type: string
    TcpRoute:
      id: TcpRoute
      description: >-
        TcpRoute is the resource defining how TCP traffic should be routed by a
        Mesh/Gateway resource.
      type: object
      properties:
        name:
          description: >-
            Identifier. Name of the TcpRoute resource. It matches pattern
            `projects/*/locations/global/tcpRoutes/tcp_route_name>`.
          type: string
        selfLink:
          description: Output only. Server-defined URL of this resource
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The timestamp when the resource was updated.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: >-
            Optional. A free-text description of the resource. Max length 1024
            characters.
          type: string
        rules:
          description: >-
            Required. Rules that define how traffic is routed and handled. At
            least one RouteRule must be supplied. If there are multiple rules
            then the action taken will be the first rule to match.
          type: array
          items:
            $ref: '#/components/schemas/TcpRouteRouteRule'
        meshes:
          description: >-
            Optional. Meshes defines a list of meshes this TcpRoute is attached
            to, as one of the routing rules to route the requests served by the
            mesh. Each mesh reference should match the pattern:
            `projects/*/locations/global/meshes/` The attached Mesh should be of
            a type SIDECAR
          type: array
          items:
            type: string
        gateways:
          description: >-
            Optional. Gateways defines a list of gateways this TcpRoute is
            attached to, as one of the routing rules to route the requests
            served by the gateway. Each gateway reference should match the
            pattern: `projects/*/locations/global/gateways/`
          type: array
          items:
            type: string
        labels:
          description: Optional. Set of label tags associated with the TcpRoute resource.
          type: object
          additionalProperties:
            type: string
    TcpRouteRouteRule:
      id: TcpRouteRouteRule
      description: >-
        Specifies how to match traffic and how to route traffic when traffic is
        matched.
      type: object
      properties:
        matches:
          description: >-
            Optional. RouteMatch defines the predicate used to match requests to
            a given action. Multiple match types are "OR"ed for evaluation. If
            no routeMatch field is specified, this rule will unconditionally
            match traffic.
          type: array
          items:
            $ref: '#/components/schemas/TcpRouteRouteMatch'
        action:
          description: Required. The detailed rule defining how to route matched traffic.
          $ref: '#/components/schemas/TcpRouteRouteAction'
    TcpRouteRouteMatch:
      id: TcpRouteRouteMatch
      description: >-
        RouteMatch defines the predicate used to match requests to a given
        action. Multiple match types are "OR"ed for evaluation. If no routeMatch
        field is specified, this rule will unconditionally match traffic.
      type: object
      properties:
        address:
          description: >-
            Required. Must be specified in the CIDR range format. A CIDR range
            consists of an IP Address and a prefix length to construct the
            subnet mask. By default, the prefix length is 32 (i.e. matches a
            single IP address). Only IPV4 addresses are supported. Examples:
            "10.0.0.1" - matches against this exact IP address. "10.0.0.0/8" -
            matches against any IP address within the 10.0.0.0 subnet and
            255.255.255.0 mask. "0.0.0.0/0" - matches against any IP address'.
          type: string
        port:
          description: Required. Specifies the destination port to match against.
          type: string
    TcpRouteRouteAction:
      id: TcpRouteRouteAction
      description: The specifications for routing traffic and applying associated policies.
      type: object
      properties:
        destinations:
          description: >-
            Optional. The destination services to which traffic should be
            forwarded. At least one destination service is required. Only one of
            route destination or original destination can be set.
          type: array
          items:
            $ref: '#/components/schemas/TcpRouteRouteDestination'
        originalDestination:
          description: >-
            Optional. If true, Router will use the destination IP and port of
            the original connection as the destination of the request. Default
            is false. Only one of route destinations or original destination can
            be set.
          type: boolean
        idleTimeout:
          description: >-
            Optional. Specifies the idle timeout for the selected route. The
            idle timeout is defined as the period in which there are no bytes
            sent or received on either the upstream or downstream connection. If
            not set, the default idle timeout is 30 seconds. If set to 0s, the
            timeout will be disabled.
          type: string
          format: google-duration
    TcpRouteRouteDestination:
      id: TcpRouteRouteDestination
      description: Describe the destination for traffic to be routed to.
      type: object
      properties:
        serviceName:
          description: Required. The URL of a BackendService to route traffic to.
          type: string
        weight:
          description: >-
            Optional. Specifies the proportion of requests forwarded to the
            backend referenced by the serviceName field. This is computed as: -
            weight/Sum(weights in this destination list). For non-zero values,
            there may be some epsilon from the exact proportion defined here
            depending on the precision an implementation supports. If only one
            serviceName is specified and it has a weight greater than 0, 100% of
            the traffic is forwarded to that backend. If weights are specified
            for any one service name, they need to be specified for all of them.
            If weights are unspecified for all services, then, traffic is
            distributed in equal proportions to all of them.
          type: integer
          format: int32
    ListTlsRoutesResponse:
      id: ListTlsRoutesResponse
      description: Response returned by the ListTlsRoutes method.
      type: object
      properties:
        tlsRoutes:
          description: List of TlsRoute resources.
          type: array
          items:
            $ref: '#/components/schemas/TlsRoute'
        nextPageToken:
          description: >-
            If there might be more results than those appearing in this
            response, then `next_page_token` is included. To get the next set of
            results, call this method again using the value of `next_page_token`
            as `page_token`.
          type: string
    TlsRoute:
      id: TlsRoute
      description: >-
        TlsRoute defines how traffic should be routed based on SNI and other
        matching L3 attributes.
      type: object
      properties:
        name:
          description: >-
            Identifier. Name of the TlsRoute resource. It matches pattern
            `projects/*/locations/global/tlsRoutes/tls_route_name>`.
          type: string
        selfLink:
          description: Output only. Server-defined URL of this resource
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The timestamp when the resource was updated.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: >-
            Optional. A free-text description of the resource. Max length 1024
            characters.
          type: string
        rules:
          description: >-
            Required. Rules that define how traffic is routed and handled. At
            least one RouteRule must be supplied. If there are multiple rules
            then the action taken will be the first rule to match.
          type: array
          items:
            $ref: '#/components/schemas/TlsRouteRouteRule'
        meshes:
          description: >-
            Optional. Meshes defines a list of meshes this TlsRoute is attached
            to, as one of the routing rules to route the requests served by the
            mesh. Each mesh reference should match the pattern:
            `projects/*/locations/global/meshes/` The attached Mesh should be of
            a type SIDECAR
          type: array
          items:
            type: string
        gateways:
          description: >-
            Optional. Gateways defines a list of gateways this TlsRoute is
            attached to, as one of the routing rules to route the requests
            served by the gateway. Each gateway reference should match the
            pattern: `projects/*/locations/global/gateways/`
          type: array
          items:
            type: string
        labels:
          description: Optional. Set of label tags associated with the TlsRoute resource.
          type: object
          additionalProperties:
            type: string
    TlsRouteRouteRule:
      id: TlsRouteRouteRule
      description: >-
        Specifies how to match traffic and how to route traffic when traffic is
        matched.
      type: object
      properties:
        matches:
          description: >-
            Required. RouteMatch defines the predicate used to match requests to
            a given action. Multiple match types are "OR"ed for evaluation.
          type: array
          items:
            $ref: '#/components/schemas/TlsRouteRouteMatch'
        action:
          description: Required. The detailed rule defining how to route matched traffic.
          $ref: '#/components/schemas/TlsRouteRouteAction'
    TlsRouteRouteMatch:
      id: TlsRouteRouteMatch
      description: >-
        RouteMatch defines the predicate used to match requests to a given
        action. Multiple match types are "AND"ed for evaluation. If no
        routeMatch field is specified, this rule will unconditionally match
        traffic.
      type: object
      properties:
        sniHost:
          description: >-
            Optional. SNI (server name indicator) to match against. SNI will be
            matched against all wildcard domains, i.e. `www.example.com` will be
            first matched against `www.example.com`, then `*.example.com`, then
            `*.com.` Partial wildcards are not supported, and values like
            *w.example.com are invalid. At least one of sni_host and alpn is
            required. Up to 100 sni hosts across all matches can be set.
          type: array
          items:
            type: string
        alpn:
          description: >-
            Optional. ALPN (Application-Layer Protocol Negotiation) to match
            against. Examples: "http/1.1", "h2". At least one of sni_host and
            alpn is required. Up to 5 alpns across all matches can be set.
          type: array
          items:
            type: string
    TlsRouteRouteAction:
      id: TlsRouteRouteAction
      description: The specifications for routing traffic and applying associated policies.
      type: object
      properties:
        destinations:
          description: >-
            Required. The destination services to which traffic should be
            forwarded. At least one destination service is required.
          type: array
          items:
            $ref: '#/components/schemas/TlsRouteRouteDestination'
        idleTimeout:
          description: >-
            Optional. Specifies the idle timeout for the selected route. The
            idle timeout is defined as the period in which there are no bytes
            sent or received on either the upstream or downstream connection. If
            not set, the default idle timeout is 1 hour. If set to 0s, the
            timeout will be disabled.
          type: string
          format: google-duration
    TlsRouteRouteDestination:
      id: TlsRouteRouteDestination
      description: Describe the destination for traffic to be routed to.
      type: object
      properties:
        serviceName:
          description: Required. The URL of a BackendService to route traffic to.
          type: string
        weight:
          description: >-
            Optional. Specifies the proportion of requests forwareded to the
            backend referenced by the service_name field. This is computed as: -
            weight/Sum(weights in destinations) Weights in all destinations does
            not need to sum up to 100.
          type: integer
          format: int32
    ListServiceBindingsResponse:
      id: ListServiceBindingsResponse
      description: Response returned by the ListServiceBindings method.
      type: object
      properties:
        serviceBindings:
          description: List of ServiceBinding resources.
          type: array
          items:
            $ref: '#/components/schemas/ServiceBinding'
        nextPageToken:
          description: >-
            If there might be more results than those appearing in this
            response, then `next_page_token` is included. To get the next set of
            results, call this method again using the value of `next_page_token`
            as `page_token`.
          type: string
    ServiceBinding:
      id: ServiceBinding
      description: >-
        ServiceBinding is the resource that defines a Service Directory Service
        to be used in a BackendService resource.
      type: object
      properties:
        name:
          description: >-
            Identifier. Name of the ServiceBinding resource. It matches pattern
            `projects/*/locations/global/serviceBindings/service_binding_name`.
          type: string
        description:
          description: >-
            Optional. A free-text description of the resource. Max length 1024
            characters.
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The timestamp when the resource was updated.
          readOnly: true
          type: string
          format: google-datetime
        service:
          description: >-
            Required. The full Service Directory Service name of the format
            projects/*/locations/*/namespaces/*/services/*
          type: string
        serviceId:
          description: >-
            Output only. The unique identifier of the Service Directory Service
            against which the Service Binding resource is validated. This is
            populated when the Service Binding resource is used in another
            resource (like Backend Service). This is of the UUID4 format.
          readOnly: true
          type: string
        labels:
          description: >-
            Optional. Set of label tags associated with the ServiceBinding
            resource.
          type: object
          additionalProperties:
            type: string
    ListMeshesResponse:
      id: ListMeshesResponse
      description: Response returned by the ListMeshes method.
      type: object
      properties:
        meshes:
          description: List of Mesh resources.
          type: array
          items:
            $ref: '#/components/schemas/Mesh'
        nextPageToken:
          description: >-
            If there might be more results than those appearing in this
            response, then `next_page_token` is included. To get the next set of
            results, call this method again using the value of `next_page_token`
            as `page_token`.
          type: string
    Mesh:
      id: Mesh
      description: >-
        Mesh represents a logical configuration grouping for workload to
        workload communication within a service mesh. Routes that point to mesh
        dictate how requests are routed within this logical mesh boundary.
      type: object
      properties:
        name:
          description: >-
            Identifier. Name of the Mesh resource. It matches pattern
            `projects/*/locations/global/meshes/`.
          type: string
        selfLink:
          description: Output only. Server-defined URL of this resource
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The timestamp when the resource was updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. Set of label tags associated with the Mesh resource.
          type: object
          additionalProperties:
            type: string
        description:
          description: >-
            Optional. A free-text description of the resource. Max length 1024
            characters.
          type: string
        interceptionPort:
          description: >-
            Optional. If set to a valid TCP port (1-65535), instructs the
            SIDECAR proxy to listen on the specified port of localhost
            (127.0.0.1) address. The SIDECAR proxy will expect all traffic to be
            redirected to this port regardless of its actual ip:port
            destination. If unset, a port '15001' is used as the interception
            port. This is applicable only for sidecar proxy deployments.
          type: integer
          format: int32
        envoyHeaders:
          description: >-
            Optional. Determines if envoy will insert internal debug headers
            into upstream requests. Other Envoy headers may still be injected.
            By default, envoy will not insert any debug headers.
          type: string
          enumDescriptions:
            - Defaults to NONE.
            - Suppress envoy debug headers.
            - >-
              Envoy will insert default internal debug headers into upstream
              requests: x-envoy-attempt-count x-envoy-is-timeout-retry
              x-envoy-expected-rq-timeout-ms x-envoy-original-path
              x-envoy-upstream-stream-duration-ms
          enum:
            - ENVOY_HEADERS_UNSPECIFIED
            - NONE
            - DEBUG_HEADERS
    ListServiceLbPoliciesResponse:
      id: ListServiceLbPoliciesResponse
      description: Response returned by the ListServiceLbPolicies method.
      type: object
      properties:
        serviceLbPolicies:
          description: List of ServiceLbPolicy resources.
          type: array
          items:
            $ref: '#/components/schemas/ServiceLbPolicy'
        nextPageToken:
          description: >-
            If there might be more results than those appearing in this
            response, then `next_page_token` is included. To get the next set of
            results, call this method again using the value of `next_page_token`
            as `page_token`.
          type: string
    ServiceLbPolicy:
      id: ServiceLbPolicy
      description: >-
        ServiceLbPolicy holds global load balancing and traffic distribution
        configuration that can be applied to a BackendService.
      type: object
      properties:
        name:
          description: >-
            Required. Name of the ServiceLbPolicy resource. It matches pattern
            `projects/{project}/locations/{location}/serviceLbPolicies/{service_lb_policy_name}`.
          type: string
        createTime:
          description: Output only. The timestamp when this resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The timestamp when this resource was last updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: >-
            Optional. Set of label tags associated with the ServiceLbPolicy
            resource.
          type: object
          additionalProperties:
            type: string
        description:
          description: >-
            Optional. A free-text description of the resource. Max length 1024
            characters.
          type: string
        loadBalancingAlgorithm:
          description: >-
            Optional. The type of load balancing algorithm to be used. The
            default behavior is WATERFALL_BY_REGION.
          type: string
          enumDescriptions:
            - The type of the loadbalancing algorithm is unspecified.
            - >-
              Balance traffic across all backends across the world
              proportionally based on capacity.
            - >-
              Direct traffic to the nearest region with endpoints and capacity
              before spilling over to other regions and spread the traffic from
              each client to all the MIGs/NEGs in a region.
            - >-
              Direct traffic to the nearest region with endpoints and capacity
              before spilling over to other regions. All MIGs/NEGs within a
              region are evenly loaded but each client might not spread the
              traffic to all the MIGs/NEGs in the region.
            - >-
              Attempt to keep traffic in a single zone closest to the client,
              before spilling over to other zones.
          enum:
            - LOAD_BALANCING_ALGORITHM_UNSPECIFIED
            - SPRAY_TO_WORLD
            - SPRAY_TO_REGION
            - WATERFALL_BY_REGION
            - WATERFALL_BY_ZONE
        autoCapacityDrain:
          description: >-
            Optional. Configuration to automatically move traffic away for
            unhealthy IG/NEG for the associated Backend Service.
          $ref: '#/components/schemas/ServiceLbPolicyAutoCapacityDrain'
        failoverConfig:
          description: Optional. Configuration related to health based failover.
          $ref: '#/components/schemas/ServiceLbPolicyFailoverConfig'
    ServiceLbPolicyAutoCapacityDrain:
      id: ServiceLbPolicyAutoCapacityDrain
      description: >-
        Option to specify if an unhealthy IG/NEG should be considered for global
        load balancing and traffic routing.
      type: object
      properties:
        enable:
          description: >-
            Optional. If set to 'True', an unhealthy IG/NEG will be set as
            drained. - An IG/NEG is considered unhealthy if less than 25% of the
            instances/endpoints in the IG/NEG are healthy. - This option will
            never result in draining more than 50% of the configured IGs/NEGs
            for the Backend Service.
          type: boolean
    ServiceLbPolicyFailoverConfig:
      id: ServiceLbPolicyFailoverConfig
      description: >-
        Option to specify health based failover behavior. This is not related to
        Network load balancer FailoverPolicy.
      type: object
      properties:
        failoverHealthThreshold:
          description: >-
            Optional. The percentage threshold that a load balancer will begin
            to send traffic to failover backends. If the percentage of endpoints
            in a MIG/NEG is smaller than this value, traffic would be sent to
            failover backends if possible. This field should be set to a value
            between 1 and 99. The default value is 50 for Global external
            HTTP(S) load balancer (classic) and Proxyless service mesh, and 70
            for others.
          type: integer
          format: int32
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          type: string
          format: google-fieldmask
    Policy:
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
          format: byte
    Binding:
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
          items:
            type: string
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
    Expr:
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    AuditConfig:
      id: AuditConfig
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      type: object
      properties:
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
    AuditLogConfig:
      id: AuditLogConfig
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
      properties:
        logType:
          description: The log type that this config enables.
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
        exemptedMembers:
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          type: array
          items:
            type: string
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
          items:
            type: string
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.networkservices.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.networkservices.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    lb_traffic_extensions:
      id: google.networkservices.lb_traffic_extensions
      name: lb_traffic_extensions
      title: Lb_traffic_extensions
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lbTrafficExtensions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.lbTrafficExtensions
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lbTrafficExtensions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lbTrafficExtensions~1{lbTrafficExtensionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lbTrafficExtensions~1{lbTrafficExtensionsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lbTrafficExtensions~1{lbTrafficExtensionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_traffic_extensions/methods/get'
          - $ref: >-
              #/components/x-stackQL-resources/lb_traffic_extensions/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/lb_traffic_extensions/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/lb_traffic_extensions/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/lb_traffic_extensions/methods/delete
    lb_route_extensions:
      id: google.networkservices.lb_route_extensions
      name: lb_route_extensions
      title: Lb_route_extensions
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lbRouteExtensions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.lbRouteExtensions
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lbRouteExtensions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lbRouteExtensions~1{lbRouteExtensionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lbRouteExtensions~1{lbRouteExtensionsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lbRouteExtensions~1{lbRouteExtensionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_route_extensions/methods/get'
          - $ref: '#/components/x-stackQL-resources/lb_route_extensions/methods/list'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/lb_route_extensions/methods/create
        update:
          - $ref: '#/components/x-stackQL-resources/lb_route_extensions/methods/patch'
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/lb_route_extensions/methods/delete
    endpoint_policies:
      id: google.networkservices.endpoint_policies
      name: endpoint_policies
      title: Endpoint_policies
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpointPolicies/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.endpointPolicies
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpointPolicies/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpointPolicies~1{endpointPoliciesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpointPolicies~1{endpointPoliciesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpointPolicies~1{endpointPoliciesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/endpoint_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/endpoint_policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/endpoint_policies/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/endpoint_policies/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/endpoint_policies/methods/delete'
    gateways:
      id: google.networkservices.gateways
      name: gateways
      title: Gateways
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gateways/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.gateways
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gateways/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gateways~1{gatewaysId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gateways~1{gatewaysId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gateways~1{gatewaysId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gateways/methods/get'
          - $ref: '#/components/x-stackQL-resources/gateways/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/gateways/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/gateways/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/gateways/methods/delete'
    grpc_routes:
      id: google.networkservices.grpc_routes
      name: grpc_routes
      title: Grpc_routes
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1grpcRoutes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.grpcRoutes
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1grpcRoutes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1grpcRoutes~1{grpcRoutesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1grpcRoutes~1{grpcRoutesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1grpcRoutes~1{grpcRoutesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/grpc_routes/methods/get'
          - $ref: '#/components/x-stackQL-resources/grpc_routes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/grpc_routes/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/grpc_routes/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/grpc_routes/methods/delete'
    http_routes:
      id: google.networkservices.http_routes
      name: http_routes
      title: Http_routes
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1httpRoutes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.httpRoutes
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1httpRoutes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1httpRoutes~1{httpRoutesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1httpRoutes~1{httpRoutesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1httpRoutes~1{httpRoutesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/http_routes/methods/get'
          - $ref: '#/components/x-stackQL-resources/http_routes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/http_routes/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/http_routes/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/http_routes/methods/delete'
    tcp_routes:
      id: google.networkservices.tcp_routes
      name: tcp_routes
      title: Tcp_routes
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tcpRoutes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tcpRoutes
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tcpRoutes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tcpRoutes~1{tcpRoutesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tcpRoutes~1{tcpRoutesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tcpRoutes~1{tcpRoutesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tcp_routes/methods/get'
          - $ref: '#/components/x-stackQL-resources/tcp_routes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tcp_routes/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/tcp_routes/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tcp_routes/methods/delete'
    tls_routes:
      id: google.networkservices.tls_routes
      name: tls_routes
      title: Tls_routes
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tlsRoutes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tlsRoutes
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tlsRoutes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tlsRoutes~1{tlsRoutesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tlsRoutes~1{tlsRoutesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tlsRoutes~1{tlsRoutesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tls_routes/methods/get'
          - $ref: '#/components/x-stackQL-resources/tls_routes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tls_routes/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/tls_routes/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tls_routes/methods/delete'
    service_bindings:
      id: google.networkservices.service_bindings
      name: service_bindings
      title: Service_bindings
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceBindings/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.serviceBindings
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceBindings/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceBindings~1{serviceBindingsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceBindings~1{serviceBindingsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_bindings/methods/get'
          - $ref: '#/components/x-stackQL-resources/service_bindings/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/service_bindings/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/service_bindings/methods/delete'
    meshes:
      id: google.networkservices.meshes
      name: meshes
      title: Meshes
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1meshes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.meshes
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1meshes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1meshes~1{meshesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1meshes~1{meshesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1meshes~1{meshesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/meshes/methods/get'
          - $ref: '#/components/x-stackQL-resources/meshes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/meshes/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/meshes/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/meshes/methods/delete'
    service_lb_policies:
      id: google.networkservices.service_lb_policies
      name: service_lb_policies
      title: Service_lb_policies
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceLbPolicies/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.serviceLbPolicies
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceLbPolicies/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceLbPolicies~1{serviceLbPoliciesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceLbPolicies~1{serviceLbPoliciesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceLbPolicies~1{serviceLbPoliciesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_lb_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/service_lb_policies/methods/list'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/service_lb_policies/methods/create
        update:
          - $ref: '#/components/x-stackQL-resources/service_lb_policies/methods/patch'
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/service_lb_policies/methods/delete
    service_lb_policies_iam_policies:
      id: google.networkservices.service_lb_policies_iam_policies
      name: service_lb_policies_iam_policies
      title: Service_lb_policies_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceLbPolicies~1{serviceLbPoliciesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceLbPolicies~1{serviceLbPoliciesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceLbPolicies~1{serviceLbPoliciesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/service_lb_policies_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/service_lb_policies_iam_policies/methods/set_iam_policy
        delete: []
    edge_cache_keysets_iam_policies:
      id: google.networkservices.edge_cache_keysets_iam_policies
      name: edge_cache_keysets_iam_policies
      title: Edge_cache_keysets_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheKeysets~1{edgeCacheKeysetsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheKeysets~1{edgeCacheKeysetsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheKeysets~1{edgeCacheKeysetsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/edge_cache_keysets_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/edge_cache_keysets_iam_policies/methods/set_iam_policy
        delete: []
    edge_cache_origins_iam_policies:
      id: google.networkservices.edge_cache_origins_iam_policies
      name: edge_cache_origins_iam_policies
      title: Edge_cache_origins_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheOrigins~1{edgeCacheOriginsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheOrigins~1{edgeCacheOriginsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheOrigins~1{edgeCacheOriginsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/edge_cache_origins_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/edge_cache_origins_iam_policies/methods/set_iam_policy
        delete: []
    edge_cache_services_iam_policies:
      id: google.networkservices.edge_cache_services_iam_policies
      name: edge_cache_services_iam_policies
      title: Edge_cache_services_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheServices~1{edgeCacheServicesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheServices~1{edgeCacheServicesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1edgeCacheServices~1{edgeCacheServicesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/edge_cache_services_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/edge_cache_services_iam_policies/methods/set_iam_policy
        delete: []
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: networkservices.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: networkservices.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: networkservices.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: networkservices.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: networkservices.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: networkservices.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lbTrafficExtensions:
    parameters: *ref_1
    get:
      description: Lists `LbTrafficExtension` resources in a given project and location.
      operationId: networkservices.projects.locations.lbTrafficExtensions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLbTrafficExtensionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: >-
        Creates a new `LbTrafficExtension` resource in a given project and
        location.
      operationId: networkservices.projects.locations.lbTrafficExtensions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LbTrafficExtension'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: lbTrafficExtensionId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lbTrafficExtensions/{lbTrafficExtensionsId}:
    parameters: *ref_1
    get:
      description: Gets details of the specified `LbTrafficExtension` resource.
      operationId: networkservices.projects.locations.lbTrafficExtensions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbTrafficExtension'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lbTrafficExtensionsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of the specified `LbTrafficExtension` resource.
      operationId: networkservices.projects.locations.lbTrafficExtensions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LbTrafficExtension'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lbTrafficExtensionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes the specified `LbTrafficExtension` resource.
      operationId: networkservices.projects.locations.lbTrafficExtensions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lbTrafficExtensionsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lbRouteExtensions:
    parameters: *ref_1
    get:
      description: Lists `LbRouteExtension` resources in a given project and location.
      operationId: networkservices.projects.locations.lbRouteExtensions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLbRouteExtensionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: >-
        Creates a new `LbRouteExtension` resource in a given project and
        location.
      operationId: networkservices.projects.locations.lbRouteExtensions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LbRouteExtension'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: lbRouteExtensionId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lbRouteExtensions/{lbRouteExtensionsId}:
    parameters: *ref_1
    get:
      description: Gets details of the specified `LbRouteExtension` resource.
      operationId: networkservices.projects.locations.lbRouteExtensions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbRouteExtension'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lbRouteExtensionsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of the specified `LbRouteExtension` resource.
      operationId: networkservices.projects.locations.lbRouteExtensions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LbRouteExtension'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lbRouteExtensionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes the specified `LbRouteExtension` resource.
      operationId: networkservices.projects.locations.lbRouteExtensions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lbRouteExtensionsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpointPolicies:
    parameters: *ref_1
    get:
      description: Lists EndpointPolicies in a given project and location.
      operationId: networkservices.projects.locations.endpointPolicies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEndpointPoliciesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new EndpointPolicy in a given project and location.
      operationId: networkservices.projects.locations.endpointPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: endpointPolicyId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpointPolicies/{endpointPoliciesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single EndpointPolicy.
      operationId: networkservices.projects.locations.endpointPolicies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointPoliciesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single EndpointPolicy.
      operationId: networkservices.projects.locations.endpointPolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a single EndpointPolicy.
      operationId: networkservices.projects.locations.endpointPolicies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointPoliciesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/gateways:
    parameters: *ref_1
    get:
      description: Lists Gateways in a given project and location.
      operationId: networkservices.projects.locations.gateways.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGatewaysResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new Gateway in a given project and location.
      operationId: networkservices.projects.locations.gateways.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gateway'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: gatewayId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/gateways/{gatewaysId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Gateway.
      operationId: networkservices.projects.locations.gateways.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gatewaysId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single Gateway.
      operationId: networkservices.projects.locations.gateways.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gateway'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gatewaysId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a single Gateway.
      operationId: networkservices.projects.locations.gateways.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gatewaysId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/grpcRoutes:
    parameters: *ref_1
    get:
      description: Lists GrpcRoutes in a given project and location.
      operationId: networkservices.projects.locations.grpcRoutes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGrpcRoutesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new GrpcRoute in a given project and location.
      operationId: networkservices.projects.locations.grpcRoutes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrpcRoute'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: grpcRouteId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/grpcRoutes/{grpcRoutesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single GrpcRoute.
      operationId: networkservices.projects.locations.grpcRoutes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrpcRoute'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: grpcRoutesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single GrpcRoute.
      operationId: networkservices.projects.locations.grpcRoutes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrpcRoute'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: grpcRoutesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a single GrpcRoute.
      operationId: networkservices.projects.locations.grpcRoutes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: grpcRoutesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/httpRoutes:
    parameters: *ref_1
    get:
      description: Lists HttpRoute in a given project and location.
      operationId: networkservices.projects.locations.httpRoutes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHttpRoutesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new HttpRoute in a given project and location.
      operationId: networkservices.projects.locations.httpRoutes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HttpRoute'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: httpRouteId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/httpRoutes/{httpRoutesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single HttpRoute.
      operationId: networkservices.projects.locations.httpRoutes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpRoute'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: httpRoutesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single HttpRoute.
      operationId: networkservices.projects.locations.httpRoutes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HttpRoute'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: httpRoutesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a single HttpRoute.
      operationId: networkservices.projects.locations.httpRoutes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: httpRoutesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tcpRoutes:
    parameters: *ref_1
    get:
      description: Lists TcpRoute in a given project and location.
      operationId: networkservices.projects.locations.tcpRoutes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTcpRoutesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new TcpRoute in a given project and location.
      operationId: networkservices.projects.locations.tcpRoutes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TcpRoute'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: tcpRouteId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tcpRoutes/{tcpRoutesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single TcpRoute.
      operationId: networkservices.projects.locations.tcpRoutes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TcpRoute'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tcpRoutesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single TcpRoute.
      operationId: networkservices.projects.locations.tcpRoutes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TcpRoute'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tcpRoutesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a single TcpRoute.
      operationId: networkservices.projects.locations.tcpRoutes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tcpRoutesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tlsRoutes:
    parameters: *ref_1
    get:
      description: Lists TlsRoute in a given project and location.
      operationId: networkservices.projects.locations.tlsRoutes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTlsRoutesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new TlsRoute in a given project and location.
      operationId: networkservices.projects.locations.tlsRoutes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TlsRoute'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: tlsRouteId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tlsRoutes/{tlsRoutesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single TlsRoute.
      operationId: networkservices.projects.locations.tlsRoutes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TlsRoute'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tlsRoutesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single TlsRoute.
      operationId: networkservices.projects.locations.tlsRoutes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TlsRoute'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tlsRoutesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a single TlsRoute.
      operationId: networkservices.projects.locations.tlsRoutes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tlsRoutesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceBindings:
    parameters: *ref_1
    get:
      description: Lists ServiceBinding in a given project and location.
      operationId: networkservices.projects.locations.serviceBindings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceBindingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new ServiceBinding in a given project and location.
      operationId: networkservices.projects.locations.serviceBindings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceBinding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: serviceBindingId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceBindings/{serviceBindingsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single ServiceBinding.
      operationId: networkservices.projects.locations.serviceBindings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBinding'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceBindingsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a single ServiceBinding.
      operationId: networkservices.projects.locations.serviceBindings.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceBindingsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/meshes:
    parameters: *ref_1
    get:
      description: Lists Meshes in a given project and location.
      operationId: networkservices.projects.locations.meshes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMeshesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new Mesh in a given project and location.
      operationId: networkservices.projects.locations.meshes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mesh'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: meshId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/meshes/{meshesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Mesh.
      operationId: networkservices.projects.locations.meshes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mesh'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: meshesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single Mesh.
      operationId: networkservices.projects.locations.meshes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mesh'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: meshesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a single Mesh.
      operationId: networkservices.projects.locations.meshes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: meshesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceLbPolicies:
    parameters: *ref_1
    get:
      description: Lists ServiceLbPolicies in a given project and location.
      operationId: networkservices.projects.locations.serviceLbPolicies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceLbPoliciesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new ServiceLbPolicy in a given project and location.
      operationId: networkservices.projects.locations.serviceLbPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceLbPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: serviceLbPolicyId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceLbPolicies/{serviceLbPoliciesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single ServiceLbPolicy.
      operationId: networkservices.projects.locations.serviceLbPolicies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLbPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceLbPoliciesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single ServiceLbPolicy.
      operationId: networkservices.projects.locations.serviceLbPolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceLbPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceLbPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a single ServiceLbPolicy.
      operationId: networkservices.projects.locations.serviceLbPolicies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceLbPoliciesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceLbPolicies/{serviceLbPoliciesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: networkservices.projects.locations.serviceLbPolicies.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceLbPoliciesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceLbPolicies/{serviceLbPoliciesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: networkservices.projects.locations.serviceLbPolicies.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceLbPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/serviceLbPolicies/{serviceLbPoliciesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: networkservices.projects.locations.serviceLbPolicies.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceLbPoliciesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets/{edgeCacheKeysetsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: networkservices.projects.locations.edgeCacheKeysets.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: edgeCacheKeysetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets/{edgeCacheKeysetsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: networkservices.projects.locations.edgeCacheKeysets.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: edgeCacheKeysetsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets/{edgeCacheKeysetsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: networkservices.projects.locations.edgeCacheKeysets.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: edgeCacheKeysetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins/{edgeCacheOriginsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: networkservices.projects.locations.edgeCacheOrigins.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: edgeCacheOriginsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins/{edgeCacheOriginsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: networkservices.projects.locations.edgeCacheOrigins.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: edgeCacheOriginsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins/{edgeCacheOriginsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: networkservices.projects.locations.edgeCacheOrigins.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: edgeCacheOriginsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices/{edgeCacheServicesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: networkservices.projects.locations.edgeCacheServices.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: edgeCacheServicesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices/{edgeCacheServicesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: networkservices.projects.locations.edgeCacheServices.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: edgeCacheServicesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices/{edgeCacheServicesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: networkservices.projects.locations.edgeCacheServices.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: edgeCacheServicesId
          required: true
          schema:
            type: string
