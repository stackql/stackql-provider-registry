openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Network Security API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230814'
  x-generated-date: '2023-08-28'
externalDocs:
  url: 'https://cloud.google.com/networking'
servers:
  - url: 'https://networksecurity.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    RemoveAddressGroupItemsRequest:
      id: RemoveAddressGroupItemsRequest
      properties:
        items:
          description: Required. List of items to remove.
          type: array
          items:
            type: string
        requestId:
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
          type: string
      type: object
      description: Request used by the RemoveAddressGroupItems method.
    CancelOperationRequest:
      properties: {}
      type: object
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
    MTLSPolicy:
      type: object
      description: Specification of the MTLSPolicy.
      id: MTLSPolicy
      properties:
        clientValidationCa:
          description: Required if the policy is to be used with Traffic Director. For external HTTPS load balancers it must be empty. Defines the mechanism to obtain the Certificate Authority certificate to validate the client certificate.
          items:
            $ref: '#/components/schemas/ValidationCA'
          type: array
        clientValidationTrustConfig:
          description: 'Reference to the TrustConfig from certificatemanager.googleapis.com namespace. If specified, the chain validation will be performed against certificates configured in the given TrustConfig. Allowed only if the policy is to be used with external HTTPS load balancers.'
          type: string
        clientValidationMode:
          enum:
            - CLIENT_VALIDATION_MODE_UNSPECIFIED
            - ALLOW_INVALID_OR_MISSING_CLIENT_CERT
            - REJECT_INVALID
          description: 'When the client presents an invalid certificate or no certificate to the load balancer, the `client_validation_mode` specifies how the client connection is handled. Required if the policy is to be used with the external HTTPS load balancing. For Traffic Director it must be empty.'
          type: string
          enumDescriptions:
            - Not allowed.
            - 'Allow connection even if certificate chain validation of the client certificate failed or no client certificate was presented. The proof of possession of the private key is always checked if client certificate was presented. This mode requires the backend to implement processing of data extracted from a client certificate to authenticate the peer, or to reject connections if the client certificate fingerprint is missing.'
            - 'Require a client certificate and allow connection to the backend only if validation of the client certificate passed. If set, requires a reference to non-empty TrustConfig specified in `client_validation_trust_config`.'
    Operation:
      type: object
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          type: object
        metadata:
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
    GoogleIamV1TestIamPermissionsRequest:
      properties:
        permissions:
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
          items:
            type: string
          type: array
      description: Request message for `TestIamPermissions` method.
      id: GoogleIamV1TestIamPermissionsRequest
      type: object
    GoogleCloudNetworksecurityV1CertificateProvider:
      id: GoogleCloudNetworksecurityV1CertificateProvider
      properties:
        certificateProviderInstance:
          description: 'The certificate provider instance specification that will be passed to the data plane, which will be used to load necessary credential information.'
          $ref: '#/components/schemas/CertificateProviderInstance'
        grpcEndpoint:
          $ref: '#/components/schemas/GoogleCloudNetworksecurityV1GrpcEndpoint'
          description: gRPC specific configuration to access the gRPC server to obtain the cert and private key.
      description: Specification of certificate provider. Defines the mechanism to obtain the certificate and private key for peer to peer authentication.
      type: object
    GoogleIamV1TestIamPermissionsResponse:
      id: GoogleIamV1TestIamPermissionsResponse
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
      description: Response message for `TestIamPermissions` method.
    Expr:
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      type: object
      properties:
        location:
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
          type: string
        description:
          type: string
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        title:
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
          type: string
      id: Expr
    Location:
      properties:
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        name:
          type: string
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
        metadata:
          type: object
          description: Service-specific metadata. For example the available capacity at the given location.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        displayName:
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
          type: string
        labels:
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
          additionalProperties:
            type: string
      description: A resource that represents a Google Cloud location.
      type: object
      id: Location
    GatewaySecurityPolicyRule:
      description: The GatewaySecurityPolicyRule resource is in a nested collection within a GatewaySecurityPolicy and represents a traffic matching condition and associated action to perform.
      id: GatewaySecurityPolicyRule
      properties:
        priority:
          description: Required. Priority of the rule. Lower number corresponds to higher precedence.
          format: int32
          type: integer
        name:
          type: string
          description: 'Required. Immutable. Name of the resource. ame is the full resource name so projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}/rules/{rule} rule should match the pattern: (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).'
        applicationMatcher:
          type: string
          description: Optional. CEL expression for matching on L7/application level criteria.
        updateTime:
          description: Output only. Time when the rule was updated.
          readOnly: true
          format: google-datetime
          type: string
        enabled:
          description: Required. Whether the rule is enforced.
          type: boolean
        tlsInspectionEnabled:
          type: boolean
          description: 'Optional. Flag to enable TLS inspection of traffic matching on , can only be true if the parent GatewaySecurityPolicy references a TLSInspectionConfig.'
        basicProfile:
          enumDescriptions:
            - If there is not a mentioned action for the target.
            - Allow the matched traffic.
            - Deny the matched traffic.
          enum:
            - BASIC_PROFILE_UNSPECIFIED
            - ALLOW
            - DENY
          type: string
          description: Required. Profile which tells what the primitive action should be.
        createTime:
          type: string
          description: Output only. Time when the rule was created.
          readOnly: true
          format: google-datetime
        description:
          type: string
          description: Optional. Free-text description of the resource.
        sessionMatcher:
          type: string
          description: Required. CEL expression for matching on session criteria.
      type: object
    Status:
      id: Status
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
      properties:
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          type: array
        code:
          type: integer
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
    ListUrlListsResponse:
      properties:
        urlLists:
          type: array
          description: List of UrlList resources.
          items:
            $ref: '#/components/schemas/UrlList'
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        nextPageToken:
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
          type: string
      type: object
      description: Response returned by the ListUrlLists method.
      id: ListUrlListsResponse
    AddAddressGroupItemsRequest:
      description: Request used by the AddAddressGroupItems method.
      properties:
        items:
          description: Required. List of items to add.
          type: array
          items:
            type: string
        requestId:
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
          type: string
      type: object
      id: AddAddressGroupItemsRequest
    OperationMetadata:
      type: object
      properties:
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
          format: google-datetime
        statusMessage:
          readOnly: true
          type: string
          description: 'Output only. Human-readable status of the operation, if any.'
        verb:
          readOnly: true
          type: string
          description: Output only. Name of the verb executed by the operation.
        requestedCancellation:
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
          readOnly: true
          type: boolean
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
      description: Represents the metadata of the long-running operation.
      id: OperationMetadata
    CloneAddressGroupItemsRequest:
      properties:
        requestId:
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
          type: string
        sourceAddressGroup:
          type: string
          description: Required. Source address group to clone items from.
      id: CloneAddressGroupItemsRequest
      description: Request used by the CloneAddressGroupItems method.
      type: object
    AuthorizationPolicy:
      type: object
      id: AuthorizationPolicy
      description: AuthorizationPolicy is a resource that specifies how a server should authorize incoming connections. This resource in itself does not change the configuration unless it's attached to a target https proxy or endpoint config selector resource.
      properties:
        name:
          description: 'Required. Name of the AuthorizationPolicy resource. It matches pattern `projects/{project}/locations/{location}/authorizationPolicies/`.'
          type: string
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The timestamp when the resource was created.
        action:
          description: Required. The action to take when a rule match is found. Possible values are "ALLOW" or "DENY".
          type: string
          enumDescriptions:
            - Default value.
            - Grant access.
            - Deny access. Deny rules should be avoided unless they are used to provide a default "deny all" fallback.
          enum:
            - ACTION_UNSPECIFIED
            - ALLOW
            - DENY
        updateTime:
          format: google-datetime
          readOnly: true
          description: Output only. The timestamp when the resource was updated.
          type: string
        rules:
          type: array
          description: 'Optional. List of rules to match. Note that at least one of the rules must match in order for the action specified in the ''action'' field to be taken. A rule is a match if there is a matching source and destination. If left blank, the action specified in the `action` field will be applied on every request.'
          items:
            $ref: '#/components/schemas/Rule'
        description:
          type: string
          description: Optional. Free-text description of the resource.
        labels:
          description: Optional. Set of label tags associated with the AuthorizationPolicy resource.
          type: object
          additionalProperties:
            type: string
    Rule:
      properties:
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/Destination'
          description: 'Optional. List of attributes for the traffic destination. All of the destinations must match. A destination is a match if a request matches all the specified hosts, ports, methods and headers. If not set, the action specified in the ''action'' field will be applied without any rule checks for the destination.'
        sources:
          description: 'Optional. List of attributes for the traffic source. All of the sources must match. A source is a match if both principals and ip_blocks match. If not set, the action specified in the ''action'' field will be applied without any rule checks for the source.'
          items:
            $ref: '#/components/schemas/Source'
          type: array
      id: Rule
      description: Specification of rules.
      type: object
    GoogleIamV1Policy:
      properties:
        version:
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          type: integer
          format: int32
        bindings:
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV1Binding'
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
        etag:
          type: string
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          format: byte
        auditConfigs:
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditConfig'
          description: Specifies cloud audit logging configuration for this policy.
          type: array
      type: object
      id: GoogleIamV1Policy
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
    ListServerTlsPoliciesResponse:
      description: Response returned by the ListServerTlsPolicies method.
      id: ListServerTlsPoliciesResponse
      type: object
      properties:
        serverTlsPolicies:
          description: List of ServerTlsPolicy resources.
          items:
            $ref: '#/components/schemas/ServerTlsPolicy'
          type: array
        nextPageToken:
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
          type: string
    ListAuthorizationPoliciesResponse:
      type: object
      description: Response returned by the ListAuthorizationPolicies method.
      properties:
        authorizationPolicies:
          items:
            $ref: '#/components/schemas/AuthorizationPolicy'
          type: array
          description: List of AuthorizationPolicies resources.
        nextPageToken:
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
          type: string
      id: ListAuthorizationPoliciesResponse
    ListLocationsResponse:
      id: ListLocationsResponse
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        locations:
          type: array
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Location'
      description: The response message for Locations.ListLocations.
      type: object
    Destination:
      properties:
        methods:
          description: Optional. A list of HTTP methods to match. At least one method should match. Should not be set for gRPC services.
          type: array
          items:
            type: string
        hosts:
          type: array
          items:
            type: string
          description: 'Required. List of host names to match. Matched against the ":authority" header in http requests. At least one host should match. Each host can be an exact match, or a prefix match (example "mydomain.*") or a suffix match (example "*.myorg.com") or a presence (any) match "*".'
        httpHeaderMatch:
          $ref: '#/components/schemas/HttpHeaderMatch'
          description: 'Optional. Match against key:value pair in http header. Provides a flexible match based on HTTP headers, for potentially advanced use cases. At least one header should match. Avoid using header matches to make authorization decisions unless there is a strong guarantee that requests arrive through a trusted client or proxy.'
        ports:
          type: array
          description: Required. List of destination ports to match. At least one port should match.
          items:
            format: uint32
            type: integer
      description: Specification of traffic destination attributes.
      type: object
      id: Destination
    AddressGroup:
      description: AddressGroup is a resource that specifies how a collection of IP/DNS used in Firewall Policy.
      type: object
      id: AddressGroup
      properties:
        items:
          items:
            type: string
          type: array
          description: Optional. List of items.
        capacity:
          description: Required. Capacity of the Address Group
          type: integer
          format: int32
        name:
          type: string
          description: 'Required. Name of the AddressGroup resource. It matches pattern `projects/*/locations/{location}/addressGroups/`.'
        updateTime:
          type: string
          description: Output only. The timestamp when the resource was updated.
          format: google-datetime
          readOnly: true
        selfLink:
          description: Output only. Server-defined fully-qualified URL for this resource.
          type: string
          readOnly: true
        type:
          description: Required. The type of the Address Group. Possible values are "IPv4" or "IPV6".
          enum:
            - TYPE_UNSPECIFIED
            - IPV4
            - IPV6
          type: string
          enumDescriptions:
            - Default value.
            - IP v4 ranges.
            - IP v6 ranges.
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The timestamp when the resource was created.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Set of label tags associated with the AddressGroup resource.
          type: object
        description:
          type: string
          description: Optional. Free-text description of the resource.
    HttpHeaderMatch:
      description: Specification of HTTP header match attributes.
      properties:
        regexMatch:
          description: 'Required. The value of the header must match the regular expression specified in regexMatch. For regular expression grammar, please see: en.cppreference.com/w/cpp/regex/ecmascript For matching against a port specified in the HTTP request, use a headerMatch with headerName set to Host and a regular expression that satisfies the RFC2616 Host header''s port specifier.'
          type: string
        headerName:
          type: string
          description: 'Required. The name of the HTTP header to match. For matching against the HTTP request''s authority, use a headerMatch with the header name ":authority". For matching a request''s method, use the headerName ":method".'
      id: HttpHeaderMatch
      type: object
    ValidationCA:
      type: object
      properties:
        certificateProviderInstance:
          $ref: '#/components/schemas/CertificateProviderInstance'
          description: 'The certificate provider instance specification that will be passed to the data plane, which will be used to load necessary credential information.'
        grpcEndpoint:
          description: gRPC specific configuration to access the gRPC server to obtain the CA certificate.
          $ref: '#/components/schemas/GoogleCloudNetworksecurityV1GrpcEndpoint'
      id: ValidationCA
      description: Specification of ValidationCA. Defines the mechanism to obtain the Certificate Authority certificate to validate the peer certificate.
    ListTlsInspectionPoliciesResponse:
      properties:
        nextPageToken:
          type: string
          description: 'If there might be more results than those appearing in this response, then ''next_page_token'' is included. To get the next set of results, call this method again using the value of ''next_page_token'' as ''page_token''.'
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        tlsInspectionPolicies:
          items:
            $ref: '#/components/schemas/TlsInspectionPolicy'
          type: array
          description: List of TlsInspectionPolicies resources.
      type: object
      id: ListTlsInspectionPoliciesResponse
      description: Response returned by the ListTlsInspectionPolicies method.
    GoogleIamV1Binding:
      properties:
        role:
          type: string
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
        members:
          type: array
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
          items:
            type: string
        condition:
          $ref: '#/components/schemas/Expr'
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
      description: 'Associates `members`, or principals, with a `role`.'
      type: object
      id: GoogleIamV1Binding
    ClientTlsPolicy:
      type: object
      id: ClientTlsPolicy
      properties:
        serverValidationCa:
          type: array
          items:
            $ref: '#/components/schemas/ValidationCA'
          description: 'Optional. Defines the mechanism to obtain the Certificate Authority certificate to validate the server certificate. If empty, client does not validate the server certificate.'
        sni:
          type: string
          description: 'Optional. Server Name Indication string to present to the server during TLS handshake. E.g: "secure.example.com".'
        updateTime:
          format: google-datetime
          readOnly: true
          description: Output only. The timestamp when the resource was updated.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Set of label tags associated with the resource.
          type: object
        description:
          type: string
          description: Optional. Free-text description of the resource.
        clientCertificate:
          description: Optional. Defines a mechanism to provision client identity (public and private keys) for peer to peer authentication. The presence of this dictates mTLS.
          $ref: '#/components/schemas/GoogleCloudNetworksecurityV1CertificateProvider'
        name:
          description: 'Required. Name of the ClientTlsPolicy resource. It matches the pattern `projects/*/locations/{location}/clientTlsPolicies/{client_tls_policy}`'
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          format: google-datetime
          type: string
          readOnly: true
      description: ClientTlsPolicy is a resource that specifies how a client should authenticate connections to backends of a service. This resource itself does not affect configuration unless it is attached to a backend service resource.
    Empty:
      id: Empty
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
    ListOperationsResponse:
      id: ListOperationsResponse
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          description: A list of operations that matches the specified filter in the request.
          type: array
      type: object
      description: The response message for Operations.ListOperations.
    CertificateProviderInstance:
      type: object
      properties:
        pluginInstance:
          type: string
          description: 'Required. Plugin instance name, used to locate and load CertificateProvider instance configuration. Set to "google_cloud_private_spiffe" to use Certificate Authority Service certificate provider instance.'
      description: Specification of a TLS certificate provider instance. Workloads may have one or more CertificateProvider instances (plugins) and one of them is enabled and configured by specifying this message. Workloads use the values from this message to locate and load the CertificateProvider instance configuration.
      id: CertificateProviderInstance
    GatewaySecurityPolicy:
      description: The GatewaySecurityPolicy resource contains a collection of GatewaySecurityPolicyRules and associated metadata.
      properties:
        name:
          type: string
          description: 'Required. Name of the resource. Name is of the form projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy} gateway_security_policy should match the pattern:(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).'
        updateTime:
          description: Output only. The timestamp when the resource was updated.
          type: string
          format: google-datetime
          readOnly: true
        createTime:
          readOnly: true
          description: Output only. The timestamp when the resource was created.
          format: google-datetime
          type: string
        tlsInspectionPolicy:
          type: string
          description: Optional. Name of a TLS Inspection Policy resource that defines how TLS inspection will be performed for any rule(s) which enables it.
        description:
          type: string
          description: Optional. Free-text description of the resource.
      id: GatewaySecurityPolicy
      type: object
    ListAddressGroupReferencesResponseAddressGroupReference:
      id: ListAddressGroupReferencesResponseAddressGroupReference
      properties:
        firewallPolicy:
          type: string
          description: FirewallPolicy that is using the Address Group.
        rulePriority:
          format: int32
          type: integer
          description: Rule priority of the FirewallPolicy that is using the Address Group.
      type: object
      description: The Reference of AddressGroup.
    ServerTlsPolicy:
      properties:
        name:
          type: string
          description: 'Required. Name of the ServerTlsPolicy resource. It matches the pattern `projects/*/locations/{location}/serverTlsPolicies/{server_tls_policy}`'
        serverCertificate:
          description: Optional if policy is to be used with Traffic Director. For external HTTPS load balancer must be empty. Defines a mechanism to provision server identity (public and private keys). Cannot be combined with `allow_open` as a permissive mode that allows both plain text and TLS is not supported.
          $ref: '#/components/schemas/GoogleCloudNetworksecurityV1CertificateProvider'
        mtlsPolicy:
          $ref: '#/components/schemas/MTLSPolicy'
          description: 'This field is required if the policy is used with external HTTPS load balancers. This field can be empty for Traffic Director. Defines a mechanism to provision peer validation certificates for peer to peer authentication (Mutual TLS - mTLS). If not specified, client certificate will not be requested. The connection is treated as TLS and not mTLS. If `allow_open` and `mtls_policy` are set, server allows both plain text and mTLS connections.'
        description:
          type: string
          description: Free-text description of the resource.
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The timestamp when the resource was created.
        labels:
          type: object
          additionalProperties:
            type: string
          description: Set of label tags associated with the resource.
        allowOpen:
          description: 'This field applies only for Traffic Director policies. It is must be set to false for external HTTPS load balancer policies. Determines if server allows plaintext connections. If set to true, server allows plain text connections. By default, it is set to false. This setting is not exclusive of other encryption modes. For example, if `allow_open` and `mtls_policy` are set, server allows both plain text and mTLS connections. See documentation of other encryption modes to confirm compatibility. Consider using it if you wish to upgrade in place your deployment to TLS while having mixed TLS and non-TLS traffic reaching port :80.'
          type: boolean
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The timestamp when the resource was updated.
          readOnly: true
      type: object
      id: ServerTlsPolicy
      description: ServerTlsPolicy is a resource that specifies how a server should authenticate incoming requests. This resource itself does not affect configuration unless it is attached to a target HTTPS proxy or endpoint config selector resource. ServerTlsPolicy in the form accepted by external HTTPS load balancers can be attached only to TargetHttpsProxy with an `EXTERNAL` or `EXTERNAL_MANAGED` load balancing scheme. Traffic Director compatible ServerTlsPolicies can be attached to EndpointPolicy and TargetHttpsProxy with Traffic Director `INTERNAL_SELF_MANAGED` load balancing scheme.
    TlsInspectionPolicy:
      properties:
        createTime:
          format: google-datetime
          readOnly: true
          description: Output only. The timestamp when the resource was created.
          type: string
        description:
          description: Optional. Free-text description of the resource.
          type: string
        customTlsFeatures:
          items:
            type: string
          type: array
          description: Optional. List of custom TLS cipher suites selected. This field is valid only if the selected tls_feature_profile is CUSTOM. The compute.SslPoliciesService.ListAvailableFeatures method returns the set of features that can be specified in this list. Note that Secure Web Proxy does not yet honor this field.
        updateTime:
          format: google-datetime
          readOnly: true
          description: Output only. The timestamp when the resource was updated.
          type: string
        name:
          type: string
          description: 'Required. Name of the resource. Name is of the form projects/{project}/locations/{location}/tlsInspectionPolicies/{tls_inspection_policy} tls_inspection_policy should match the pattern:(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).'
        excludePublicCaSet:
          type: boolean
          description: 'Optional. If FALSE (the default), use our default set of public CAs in addition to any CAs specified in trust_config. These public CAs are currently based on the Mozilla Root Program and are subject to change over time. If TRUE, do not accept our default set of public CAs. Only CAs specified in trust_config will be accepted. This defaults to FALSE (use public CAs in addition to trust_config) for backwards compatibility, but trusting public root CAs is *not recommended* unless the traffic in question is outbound to public web servers. When possible, prefer setting this to "false" and explicitly specifying trusted CAs and certificates in a TrustConfig. Note that Secure Web Proxy does not yet honor this field.'
        minTlsVersion:
          enum:
            - TLS_VERSION_UNSPECIFIED
            - TLS_1_0
            - TLS_1_1
            - TLS_1_2
            - TLS_1_3
          enumDescriptions:
            - Indicates no TLS version was specified.
            - TLS 1.0
            - TLS 1.1
            - TLS 1.2
            - TLS 1.3
          type: string
          description: 'Optional. Minimum TLS version that the firewall should use when negotiating connections with both clients and servers. If this is not set, then the default value is to allow the broadest set of clients and servers (TLS 1.0 or higher). Setting this to more restrictive values may improve security, but may also prevent the firewall from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.'
        trustConfig:
          description: 'Optional. A TrustConfig resource used when making a connection to the TLS server. This is a relative resource path following the form "projects/{project}/locations/{location}/trustConfigs/{trust_config}". This is necessary to intercept TLS connections to servers with certificates signed by a private CA or self-signed certificates. Note that Secure Web Proxy does not yet honor this field.'
          type: string
        tlsFeatureProfile:
          enum:
            - PROFILE_UNSPECIFIED
            - PROFILE_COMPATIBLE
            - PROFILE_MODERN
            - PROFILE_RESTRICTED
            - PROFILE_CUSTOM
          enumDescriptions:
            - Indicates no profile was specified.
            - 'Compatible profile. Allows the broadest set of clients, even those which support only out-of-date SSL features to negotiate with the TLS inspection proxy.'
            - 'Modern profile. Supports a wide set of SSL features, allowing modern clients to negotiate SSL with the TLS inspection proxy.'
            - 'Restricted profile. Supports a reduced set of SSL features, intended to meet stricter compliance requirements.'
            - Custom profile. Allow only the set of allowed SSL features specified in the custom_features field of SslPolicy.
          description: 'Optional. The selected Profile. If this is not set, then the default value is to allow the broadest set of clients and servers ("PROFILE_COMPATIBLE"). Setting this to more restrictive values may improve security, but may also prevent the TLS inspection proxy from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.'
          type: string
        caPool:
          description: 'Required. A CA pool resource used to issue interception certificates. The CA pool string has a relative resource path following the form "projects/{project}/locations/{location}/caPools/{ca_pool}".'
          type: string
      id: TlsInspectionPolicy
      type: object
      description: The TlsInspectionPolicy resource contains references to CA pools in Certificate Authority Service and associated metadata.
    ListGatewaySecurityPoliciesResponse:
      properties:
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        gatewaySecurityPolicies:
          description: List of GatewaySecurityPolicies resources.
          type: array
          items:
            $ref: '#/components/schemas/GatewaySecurityPolicy'
        nextPageToken:
          description: 'If there might be more results than those appearing in this response, then ''next_page_token'' is included. To get the next set of results, call this method again using the value of ''next_page_token'' as ''page_token''.'
          type: string
      id: ListGatewaySecurityPoliciesResponse
      description: Response returned by the ListGatewaySecurityPolicies method.
      type: object
    GoogleIamV1AuditLogConfig:
      type: object
      properties:
        exemptedMembers:
          items:
            type: string
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          type: array
        logType:
          description: The log type that this config enables.
          type: string
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
      id: GoogleIamV1AuditLogConfig
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
    GoogleCloudNetworksecurityV1GrpcEndpoint:
      description: Specification of the GRPC Endpoint.
      type: object
      properties:
        targetUri:
          type: string
          description: 'Required. The target URI of the gRPC endpoint. Only UDS path is supported, and should start with "unix:".'
      id: GoogleCloudNetworksecurityV1GrpcEndpoint
    ListAddressGroupReferencesResponse:
      id: ListAddressGroupReferencesResponse
      type: object
      properties:
        addressGroupReferences:
          type: array
          items:
            $ref: '#/components/schemas/ListAddressGroupReferencesResponseAddressGroupReference'
          description: A list of references that matches the specified filter in the request.
        nextPageToken:
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
          type: string
      description: Response of the ListAddressGroupReferences method.
    ListGatewaySecurityPolicyRulesResponse:
      type: object
      id: ListGatewaySecurityPolicyRulesResponse
      properties:
        gatewaySecurityPolicyRules:
          description: List of GatewaySecurityPolicyRule resources.
          type: array
          items:
            $ref: '#/components/schemas/GatewaySecurityPolicyRule'
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        nextPageToken:
          type: string
          description: 'If there might be more results than those appearing in this response, then ''next_page_token'' is included. To get the next set of results, call this method again using the value of ''next_page_token'' as ''page_token''.'
      description: Response returned by the ListGatewaySecurityPolicyRules method.
    ListAddressGroupsResponse:
      id: ListAddressGroupsResponse
      properties:
        nextPageToken:
          type: string
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
        addressGroups:
          items:
            $ref: '#/components/schemas/AddressGroup'
          description: List of AddressGroups resources.
          type: array
      description: Response returned by the ListAddressGroups method.
      type: object
    Source:
      id: Source
      description: Specification of traffic source attributes.
      properties:
        ipBlocks:
          type: array
          description: 'Optional. List of CIDR ranges to match based on source IP address. At least one IP block should match. Single IP (e.g., "1.2.3.4") and CIDR (e.g., "1.2.3.0/24") are supported. Authorization based on source IP alone should be avoided. The IP addresses of any load balancers or proxies should be considered untrusted.'
          items:
            type: string
        principals:
          description: 'Optional. List of peer identities to match for authorization. At least one principal should match. Each peer can be an exact match, or a prefix match (example, "namespace/*") or a suffix match (example, "*/service-account") or a presence match "*". Authorization based on the principal name without certificate validation (configured by ServerTlsPolicy resource) is considered insecure.'
          items:
            type: string
          type: array
      type: object
    ListClientTlsPoliciesResponse:
      properties:
        clientTlsPolicies:
          description: List of ClientTlsPolicy resources.
          type: array
          items:
            $ref: '#/components/schemas/ClientTlsPolicy'
        nextPageToken:
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
          type: string
      type: object
      id: ListClientTlsPoliciesResponse
      description: Response returned by the ListClientTlsPolicies method.
    UrlList:
      id: UrlList
      type: object
      description: 'UrlList proto helps users to set reusable, independently manageable lists of hosts, host patterns, URLs, URL patterns.'
      properties:
        values:
          type: array
          description: Required. FQDNs and URLs.
          items:
            type: string
        description:
          description: Optional. Free-text description of the resource.
          type: string
        createTime:
          readOnly: true
          type: string
          description: Output only. Time when the security policy was created.
          format: google-datetime
        updateTime:
          readOnly: true
          description: Output only. Time when the security policy was updated.
          format: google-datetime
          type: string
        name:
          description: 'Required. Name of the resource provided by the user. Name is of the form projects/{project}/locations/{location}/urlLists/{url_list} url_list should match the pattern:(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).'
          type: string
    GoogleIamV1AuditConfig:
      id: GoogleIamV1AuditConfig
      properties:
        auditLogConfigs:
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditLogConfig'
          type: array
          description: The configuration for logging of each type of permission.
        service:
          description: 'Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.'
          type: string
      type: object
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
    GoogleIamV1SetIamPolicyRequest:
      type: object
      properties:
        updateMask:
          format: google-fieldmask
          type: string
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
        policy:
          $ref: '#/components/schemas/GoogleIamV1Policy'
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
      id: GoogleIamV1SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
  parameters:
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
  x-stackQL-resources:
    address_groups_items:
      id: google.networksecurity.address_groups_items
      name: address_groups_items
      title: Address Groups Items
      methods:
        organizations_locations_address_groups_add_items:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}:addItems/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_address_groups_remove_items:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}:removeItems/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_address_groups_remove_items:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}:removeItems/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_address_groups_add_items:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}:addItems/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    address_groups:
      id: google.networksecurity.address_groups
      name: address_groups
      title: Address Groups
      methods:
        organizations_locations_address_groups_patch:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_address_groups_get:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_address_groups_delete:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_address_groups_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1addressGroups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.addressGroups
        _organizations_locations_address_groups_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1addressGroups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_address_groups_create:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1addressGroups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_address_groups_clone_items:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}:cloneItems/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_address_groups_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_address_groups_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_address_groups_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_address_groups_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1addressGroups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_address_groups_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1addressGroups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.addressGroups
        _projects_locations_address_groups_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1addressGroups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_address_groups_clone_items:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}:cloneItems/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/address_groups/methods/organizations_locations_address_groups_get'
          - $ref: '#/components/x-stackQL-resources/address_groups/methods/organizations_locations_address_groups_list'
          - $ref: '#/components/x-stackQL-resources/address_groups/methods/projects_locations_address_groups_get'
          - $ref: '#/components/x-stackQL-resources/address_groups/methods/projects_locations_address_groups_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/address_groups/methods/organizations_locations_address_groups_create'
          - $ref: '#/components/x-stackQL-resources/address_groups/methods/projects_locations_address_groups_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/address_groups/methods/organizations_locations_address_groups_delete'
          - $ref: '#/components/x-stackQL-resources/address_groups/methods/projects_locations_address_groups_delete'
    address_groups_references:
      id: google.networksecurity.address_groups_references
      name: address_groups_references
      title: Address Groups References
      methods:
        organizations_locations_address_groups_list_references:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}:listReferences/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.addressGroupReferences
        _organizations_locations_address_groups_list_references:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}:listReferences/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_address_groups_list_references:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}:listReferences/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.addressGroupReferences
        _projects_locations_address_groups_list_references:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}:listReferences/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/address_groups_references/methods/organizations_locations_address_groups_list_references'
          - $ref: '#/components/x-stackQL-resources/address_groups_references/methods/projects_locations_address_groups_list_references'
        insert: []
        update: []
        delete: []
    operations:
      id: google.networksecurity.operations
      name: operations
      title: Operations
      methods:
        organizations_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _organizations_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/organizations_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/organizations_locations_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/organizations_locations_operations_delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
    tls_inspection_policies:
      id: google.networksecurity.tls_inspection_policies
      name: tls_inspection_policies
      title: Tls Inspection Policies
      methods:
        projects_locations_tls_inspection_policies_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tlsInspectionPolicies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_tls_inspection_policies_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tlsInspectionPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tlsInspectionPolicies
        _projects_locations_tls_inspection_policies_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tlsInspectionPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_tls_inspection_policies_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tlsInspectionPolicies~1{tlsInspectionPoliciesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_tls_inspection_policies_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tlsInspectionPolicies~1{tlsInspectionPoliciesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_tls_inspection_policies_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tlsInspectionPolicies~1{tlsInspectionPoliciesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tls_inspection_policies/methods/projects_locations_tls_inspection_policies_list'
          - $ref: '#/components/x-stackQL-resources/tls_inspection_policies/methods/projects_locations_tls_inspection_policies_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/tls_inspection_policies/methods/projects_locations_tls_inspection_policies_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tls_inspection_policies/methods/projects_locations_tls_inspection_policies_delete'
    server_tls_policies:
      id: google.networksecurity.server_tls_policies
      name: server_tls_policies
      title: Server Tls Policies
      methods:
        projects_locations_server_tls_policies_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serverTlsPolicies~1{serverTlsPoliciesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_server_tls_policies_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serverTlsPolicies~1{serverTlsPoliciesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_server_tls_policies_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serverTlsPolicies~1{serverTlsPoliciesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_server_tls_policies_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serverTlsPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.serverTlsPolicies
        _projects_locations_server_tls_policies_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serverTlsPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_server_tls_policies_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serverTlsPolicies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/server_tls_policies/methods/projects_locations_server_tls_policies_get'
          - $ref: '#/components/x-stackQL-resources/server_tls_policies/methods/projects_locations_server_tls_policies_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/server_tls_policies/methods/projects_locations_server_tls_policies_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/server_tls_policies/methods/projects_locations_server_tls_policies_delete'
    server_tls_policies_iam_policies:
      id: google.networksecurity.server_tls_policies_iam_policies
      name: server_tls_policies_iam_policies
      title: Server Tls Policies Iam Policies
      methods:
        projects_locations_server_tls_policies_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serverTlsPolicies~1{serverTlsPoliciesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _projects_locations_server_tls_policies_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serverTlsPolicies~1{serverTlsPoliciesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_server_tls_policies_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serverTlsPolicies~1{serverTlsPoliciesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_server_tls_policies_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serverTlsPolicies~1{serverTlsPoliciesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/server_tls_policies_iam_policies/methods/projects_locations_server_tls_policies_get_iam_policy'
        insert: []
        update: []
        delete: []
    url_lists:
      id: google.networksecurity.url_lists
      name: url_lists
      title: Url Lists
      methods:
        projects_locations_url_lists_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1urlLists/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_url_lists_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1urlLists/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.urlLists
        _projects_locations_url_lists_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1urlLists/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_url_lists_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1urlLists~1{urlListsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_url_lists_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1urlLists~1{urlListsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_url_lists_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1urlLists~1{urlListsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/url_lists/methods/projects_locations_url_lists_list'
          - $ref: '#/components/x-stackQL-resources/url_lists/methods/projects_locations_url_lists_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/url_lists/methods/projects_locations_url_lists_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/url_lists/methods/projects_locations_url_lists_delete'
    authorization_policies_iam_policies:
      id: google.networksecurity.authorization_policies_iam_policies
      name: authorization_policies_iam_policies
      title: Authorization Policies Iam Policies
      methods:
        projects_locations_authorization_policies_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizationPolicies~1{authorizationPoliciesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_authorization_policies_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizationPolicies~1{authorizationPoliciesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _projects_locations_authorization_policies_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizationPolicies~1{authorizationPoliciesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_authorization_policies_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizationPolicies~1{authorizationPoliciesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/authorization_policies_iam_policies/methods/projects_locations_authorization_policies_get_iam_policy'
        insert: []
        update: []
        delete: []
    authorization_policies:
      id: google.networksecurity.authorization_policies
      name: authorization_policies
      title: Authorization Policies
      methods:
        projects_locations_authorization_policies_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizationPolicies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_authorization_policies_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizationPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.authorizationPolicies
        _projects_locations_authorization_policies_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizationPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_authorization_policies_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizationPolicies~1{authorizationPoliciesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_authorization_policies_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizationPolicies~1{authorizationPoliciesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_authorization_policies_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizationPolicies~1{authorizationPoliciesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/authorization_policies/methods/projects_locations_authorization_policies_list'
          - $ref: '#/components/x-stackQL-resources/authorization_policies/methods/projects_locations_authorization_policies_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/authorization_policies/methods/projects_locations_authorization_policies_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/authorization_policies/methods/projects_locations_authorization_policies_delete'
    client_tls_policies_iam_policies:
      id: google.networksecurity.client_tls_policies_iam_policies
      name: client_tls_policies_iam_policies
      title: Client Tls Policies Iam Policies
      methods:
        projects_locations_client_tls_policies_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clientTlsPolicies~1{clientTlsPoliciesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _projects_locations_client_tls_policies_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clientTlsPolicies~1{clientTlsPoliciesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_client_tls_policies_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clientTlsPolicies~1{clientTlsPoliciesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_client_tls_policies_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clientTlsPolicies~1{clientTlsPoliciesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/client_tls_policies_iam_policies/methods/projects_locations_client_tls_policies_get_iam_policy'
        insert: []
        update: []
        delete: []
    client_tls_policies:
      id: google.networksecurity.client_tls_policies
      name: client_tls_policies
      title: Client Tls Policies
      methods:
        projects_locations_client_tls_policies_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clientTlsPolicies~1{clientTlsPoliciesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_client_tls_policies_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clientTlsPolicies~1{clientTlsPoliciesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_client_tls_policies_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clientTlsPolicies~1{clientTlsPoliciesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_client_tls_policies_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clientTlsPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.clientTlsPolicies
        _projects_locations_client_tls_policies_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clientTlsPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_client_tls_policies_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clientTlsPolicies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/client_tls_policies/methods/projects_locations_client_tls_policies_get'
          - $ref: '#/components/x-stackQL-resources/client_tls_policies/methods/projects_locations_client_tls_policies_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/client_tls_policies/methods/projects_locations_client_tls_policies_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/client_tls_policies/methods/projects_locations_client_tls_policies_delete'
    rules:
      id: google.networksecurity.rules
      name: rules
      title: Rules
      methods:
        projects_locations_gateway_security_policies_rules_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gatewaySecurityPolicies~1{gatewaySecurityPoliciesId}~1rules~1{rulesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_gateway_security_policies_rules_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gatewaySecurityPolicies~1{gatewaySecurityPoliciesId}~1rules~1{rulesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_gateway_security_policies_rules_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gatewaySecurityPolicies~1{gatewaySecurityPoliciesId}~1rules~1{rulesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_gateway_security_policies_rules_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gatewaySecurityPolicies~1{gatewaySecurityPoliciesId}~1rules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_gateway_security_policies_rules_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gatewaySecurityPolicies~1{gatewaySecurityPoliciesId}~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.gatewaySecurityPolicyRules
        _projects_locations_gateway_security_policies_rules_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gatewaySecurityPolicies~1{gatewaySecurityPoliciesId}~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/rules/methods/projects_locations_gateway_security_policies_rules_get'
          - $ref: '#/components/x-stackQL-resources/rules/methods/projects_locations_gateway_security_policies_rules_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/rules/methods/projects_locations_gateway_security_policies_rules_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/rules/methods/projects_locations_gateway_security_policies_rules_delete'
    gateway_security_policies:
      id: google.networksecurity.gateway_security_policies
      name: gateway_security_policies
      title: Gateway Security Policies
      methods:
        projects_locations_gateway_security_policies_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gatewaySecurityPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.gatewaySecurityPolicies
        _projects_locations_gateway_security_policies_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gatewaySecurityPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_gateway_security_policies_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gatewaySecurityPolicies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_gateway_security_policies_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gatewaySecurityPolicies~1{gatewaySecurityPoliciesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_gateway_security_policies_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gatewaySecurityPolicies~1{gatewaySecurityPoliciesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_gateway_security_policies_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gatewaySecurityPolicies~1{gatewaySecurityPoliciesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gateway_security_policies/methods/projects_locations_gateway_security_policies_list'
          - $ref: '#/components/x-stackQL-resources/gateway_security_policies/methods/projects_locations_gateway_security_policies_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/gateway_security_policies/methods/projects_locations_gateway_security_policies_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/gateway_security_policies/methods/projects_locations_gateway_security_policies_delete'
    address_groups_iam_policies:
      id: google.networksecurity.address_groups_iam_policies
      name: address_groups_iam_policies
      title: Address Groups Iam Policies
      methods:
        projects_locations_address_groups_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _projects_locations_address_groups_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_address_groups_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_address_groups_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1addressGroups~1{addressGroupsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/address_groups_iam_policies/methods/projects_locations_address_groups_get_iam_policy'
        insert: []
        update: []
        delete: []
    locations:
      id: google.networksecurity.locations
      name: locations
      title: Locations
      methods:
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
        insert: []
        update: []
        delete: []
paths:
  '/v1/organizations/{organizationsId}/locations/{locationsId}/addressGroups/{addressGroupsId}:addItems':
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
    post:
      description: Adds items to an address group.
      operationId: networksecurity.organizations.locations.addressGroups.addItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAddressGroupItemsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: addressGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: address_groups_items
      x-stackQL-method: organizations_locations_address_groups_add_items
      x-stackQL-verb: exec
  '/v1/organizations/{organizationsId}/locations/{locationsId}/addressGroups/{addressGroupsId}':
    parameters: *ref_1
    patch:
      description: Updates parameters of an address group.
      operationId: networksecurity.organizations.locations.addressGroups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressGroup'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: addressGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: address_groups
      x-stackQL-method: organizations_locations_address_groups_patch
      x-stackQL-verb: exec
    get:
      description: Gets details of a single address group.
      operationId: networksecurity.organizations.locations.addressGroups.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressGroup'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: addressGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: address_groups
      x-stackQL-method: organizations_locations_address_groups_get
      x-stackQL-verb: select
    delete:
      description: Deletes an address group.
      operationId: networksecurity.organizations.locations.addressGroups.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: addressGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: address_groups
      x-stackQL-method: organizations_locations_address_groups_delete
      x-stackQL-verb: delete
  '/v1/organizations/{organizationsId}/locations/{locationsId}/addressGroups/{addressGroupsId}:listReferences':
    parameters: *ref_1
    get:
      description: Lists references of an address group.
      operationId: networksecurity.organizations.locations.addressGroups.listReferences
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAddressGroupReferencesResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: addressGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: address_groups_references
      x-stackQL-method: organizations_locations_address_groups_list_references
      x-stackQL-verb: select
      x-stackQL-objectKey: $.addressGroupReferences
  '/v1/organizations/{organizationsId}/locations/{locationsId}/addressGroups/{addressGroupsId}:removeItems':
    parameters: *ref_1
    post:
      description: Removes items from an address group.
      operationId: networksecurity.organizations.locations.addressGroups.removeItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveAddressGroupItemsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: addressGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: address_groups_items
      x-stackQL-method: organizations_locations_address_groups_remove_items
      x-stackQL-verb: exec
  '/v1/organizations/{organizationsId}/locations/{locationsId}/addressGroups':
    parameters: *ref_1
    get:
      description: Lists address groups in a given project and location.
      operationId: networksecurity.organizations.locations.addressGroups.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAddressGroupsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: address_groups
      x-stackQL-method: organizations_locations_address_groups_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.addressGroups
    post:
      description: Creates a new address group in a given project and location.
      operationId: networksecurity.organizations.locations.addressGroups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressGroup'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: addressGroupId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: address_groups
      x-stackQL-method: organizations_locations_address_groups_create
      x-stackQL-verb: insert
  '/v1/organizations/{organizationsId}/locations/{locationsId}/addressGroups/{addressGroupsId}:cloneItems':
    parameters: *ref_1
    post:
      description: Clones items from one address group to another.
      operationId: networksecurity.organizations.locations.addressGroups.cloneItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneAddressGroupItemsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: addressGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: address_groups
      x-stackQL-method: organizations_locations_address_groups_clone_items
      x-stackQL-verb: exec
  '/v1/organizations/{organizationsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: networksecurity.organizations.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: organizations_locations_operations_delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: networksecurity.organizations.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: organizations_locations_operations_get
      x-stackQL-verb: select
  '/v1/organizations/{organizationsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: networksecurity.organizations.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: organizations_locations_operations_cancel
      x-stackQL-verb: exec
  '/v1/organizations/{organizationsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: networksecurity.organizations.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: organizations_locations_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/tlsInspectionPolicies':
    parameters: *ref_1
    post:
      description: Creates a new TlsInspectionPolicy in a given project and location.
      operationId: networksecurity.projects.locations.tlsInspectionPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TlsInspectionPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: tlsInspectionPolicyId
          schema:
            type: string
      x-stackQL-resource: tls_inspection_policies
      x-stackQL-method: projects_locations_tls_inspection_policies_create
      x-stackQL-verb: insert
    get:
      description: Lists TlsInspectionPolicies in a given project and location.
      operationId: networksecurity.projects.locations.tlsInspectionPolicies.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTlsInspectionPoliciesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: tls_inspection_policies
      x-stackQL-method: projects_locations_tls_inspection_policies_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.tlsInspectionPolicies
  '/v1/projects/{projectsId}/locations/{locationsId}/tlsInspectionPolicies/{tlsInspectionPoliciesId}':
    parameters: *ref_1
    delete:
      description: Deletes a single TlsInspectionPolicy.
      operationId: networksecurity.projects.locations.tlsInspectionPolicies.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tlsInspectionPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: tls_inspection_policies
      x-stackQL-method: projects_locations_tls_inspection_policies_delete
      x-stackQL-verb: delete
    patch:
      description: Updates the parameters of a single TlsInspectionPolicy.
      operationId: networksecurity.projects.locations.tlsInspectionPolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TlsInspectionPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tlsInspectionPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: tls_inspection_policies
      x-stackQL-method: projects_locations_tls_inspection_policies_patch
      x-stackQL-verb: exec
    get:
      description: Gets details of a single TlsInspectionPolicy.
      operationId: networksecurity.projects.locations.tlsInspectionPolicies.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TlsInspectionPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tlsInspectionPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tls_inspection_policies
      x-stackQL-method: projects_locations_tls_inspection_policies_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/serverTlsPolicies/{serverTlsPoliciesId}':
    parameters: *ref_1
    get:
      description: Gets details of a single ServerTlsPolicy.
      operationId: networksecurity.projects.locations.serverTlsPolicies.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerTlsPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serverTlsPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: server_tls_policies
      x-stackQL-method: projects_locations_server_tls_policies_get
      x-stackQL-verb: select
    delete:
      description: Deletes a single ServerTlsPolicy.
      operationId: networksecurity.projects.locations.serverTlsPolicies.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serverTlsPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: server_tls_policies
      x-stackQL-method: projects_locations_server_tls_policies_delete
      x-stackQL-verb: delete
    patch:
      description: Updates the parameters of a single ServerTlsPolicy.
      operationId: networksecurity.projects.locations.serverTlsPolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerTlsPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serverTlsPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: server_tls_policies
      x-stackQL-method: projects_locations_server_tls_policies_patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/serverTlsPolicies':
    parameters: *ref_1
    get:
      description: Lists ServerTlsPolicies in a given project and location.
      operationId: networksecurity.projects.locations.serverTlsPolicies.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServerTlsPoliciesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: server_tls_policies
      x-stackQL-method: projects_locations_server_tls_policies_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.serverTlsPolicies
    post:
      description: Creates a new ServerTlsPolicy in a given project and location.
      operationId: networksecurity.projects.locations.serverTlsPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerTlsPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: serverTlsPolicyId
          schema:
            type: string
      x-stackQL-resource: server_tls_policies
      x-stackQL-method: projects_locations_server_tls_policies_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/serverTlsPolicies/{serverTlsPoliciesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networksecurity.projects.locations.serverTlsPolicies.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serverTlsPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: server_tls_policies_iam_policies
      x-stackQL-method: projects_locations_server_tls_policies_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/serverTlsPolicies/{serverTlsPoliciesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: networksecurity.projects.locations.serverTlsPolicies.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serverTlsPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: server_tls_policies_iam_policies
      x-stackQL-method: projects_locations_server_tls_policies_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/serverTlsPolicies/{serverTlsPoliciesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networksecurity.projects.locations.serverTlsPolicies.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serverTlsPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: server_tls_policies_iam_policies
      x-stackQL-method: projects_locations_server_tls_policies_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/urlLists':
    parameters: *ref_1
    post:
      description: Creates a new UrlList in a given project and location.
      operationId: networksecurity.projects.locations.urlLists.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UrlList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: urlListId
          schema:
            type: string
      x-stackQL-resource: url_lists
      x-stackQL-method: projects_locations_url_lists_create
      x-stackQL-verb: insert
    get:
      description: Lists UrlLists in a given project and location.
      operationId: networksecurity.projects.locations.urlLists.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUrlListsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: url_lists
      x-stackQL-method: projects_locations_url_lists_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.urlLists
  '/v1/projects/{projectsId}/locations/{locationsId}/urlLists/{urlListsId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single UrlList.
      operationId: networksecurity.projects.locations.urlLists.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UrlList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: urlListsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: url_lists
      x-stackQL-method: projects_locations_url_lists_patch
      x-stackQL-verb: exec
    get:
      description: Gets details of a single UrlList.
      operationId: networksecurity.projects.locations.urlLists.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlList'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: urlListsId
          required: true
          schema:
            type: string
      x-stackQL-resource: url_lists
      x-stackQL-method: projects_locations_url_lists_get
      x-stackQL-verb: select
    delete:
      description: Deletes a single UrlList.
      operationId: networksecurity.projects.locations.urlLists.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: urlListsId
          required: true
          schema:
            type: string
      x-stackQL-resource: url_lists
      x-stackQL-method: projects_locations_url_lists_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/authorizationPolicies/{authorizationPoliciesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: networksecurity.projects.locations.authorizationPolicies.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizationPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: authorization_policies_iam_policies
      x-stackQL-method: projects_locations_authorization_policies_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/authorizationPolicies':
    parameters: *ref_1
    post:
      description: Creates a new AuthorizationPolicy in a given project and location.
      operationId: networksecurity.projects.locations.authorizationPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: authorizationPolicyId
          schema:
            type: string
      x-stackQL-resource: authorization_policies
      x-stackQL-method: projects_locations_authorization_policies_create
      x-stackQL-verb: insert
    get:
      description: Lists AuthorizationPolicies in a given project and location.
      operationId: networksecurity.projects.locations.authorizationPolicies.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuthorizationPoliciesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: authorization_policies
      x-stackQL-method: projects_locations_authorization_policies_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.authorizationPolicies
  '/v1/projects/{projectsId}/locations/{locationsId}/authorizationPolicies/{authorizationPoliciesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networksecurity.projects.locations.authorizationPolicies.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizationPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: authorization_policies_iam_policies
      x-stackQL-method: projects_locations_authorization_policies_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/authorizationPolicies/{authorizationPoliciesId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single AuthorizationPolicy.
      operationId: networksecurity.projects.locations.authorizationPolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizationPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: authorization_policies
      x-stackQL-method: projects_locations_authorization_policies_patch
      x-stackQL-verb: exec
    get:
      description: Gets details of a single AuthorizationPolicy.
      operationId: networksecurity.projects.locations.authorizationPolicies.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizationPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: authorization_policies
      x-stackQL-method: projects_locations_authorization_policies_get
      x-stackQL-verb: select
    delete:
      description: Deletes a single AuthorizationPolicy.
      operationId: networksecurity.projects.locations.authorizationPolicies.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizationPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: authorization_policies
      x-stackQL-method: projects_locations_authorization_policies_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/authorizationPolicies/{authorizationPoliciesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networksecurity.projects.locations.authorizationPolicies.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizationPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: authorization_policies_iam_policies
      x-stackQL-method: projects_locations_authorization_policies_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/clientTlsPolicies/{clientTlsPoliciesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networksecurity.projects.locations.clientTlsPolicies.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clientTlsPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: client_tls_policies_iam_policies
      x-stackQL-method: projects_locations_client_tls_policies_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/clientTlsPolicies/{clientTlsPoliciesId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single ClientTlsPolicy.
      operationId: networksecurity.projects.locations.clientTlsPolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientTlsPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clientTlsPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: client_tls_policies
      x-stackQL-method: projects_locations_client_tls_policies_patch
      x-stackQL-verb: exec
    get:
      description: Gets details of a single ClientTlsPolicy.
      operationId: networksecurity.projects.locations.clientTlsPolicies.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTlsPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clientTlsPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: client_tls_policies
      x-stackQL-method: projects_locations_client_tls_policies_get
      x-stackQL-verb: select
    delete:
      description: Deletes a single ClientTlsPolicy.
      operationId: networksecurity.projects.locations.clientTlsPolicies.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clientTlsPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: client_tls_policies
      x-stackQL-method: projects_locations_client_tls_policies_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/clientTlsPolicies':
    parameters: *ref_1
    get:
      description: Lists ClientTlsPolicies in a given project and location.
      operationId: networksecurity.projects.locations.clientTlsPolicies.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClientTlsPoliciesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: client_tls_policies
      x-stackQL-method: projects_locations_client_tls_policies_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.clientTlsPolicies
    post:
      description: Creates a new ClientTlsPolicy in a given project and location.
      operationId: networksecurity.projects.locations.clientTlsPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientTlsPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: clientTlsPolicyId
          schema:
            type: string
      x-stackQL-resource: client_tls_policies
      x-stackQL-method: projects_locations_client_tls_policies_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/clientTlsPolicies/{clientTlsPoliciesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networksecurity.projects.locations.clientTlsPolicies.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clientTlsPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: client_tls_policies_iam_policies
      x-stackQL-method: projects_locations_client_tls_policies_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/clientTlsPolicies/{clientTlsPoliciesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: networksecurity.projects.locations.clientTlsPolicies.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clientTlsPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: client_tls_policies_iam_policies
      x-stackQL-method: projects_locations_client_tls_policies_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/gatewaySecurityPolicies/{gatewaySecurityPoliciesId}/rules/{rulesId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single GatewaySecurityPolicyRule.
      operationId: networksecurity.projects.locations.gatewaySecurityPolicies.rules.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GatewaySecurityPolicyRule'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gatewaySecurityPoliciesId
          required: true
          schema:
            type: string
        - in: path
          name: rulesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: rules
      x-stackQL-method: projects_locations_gateway_security_policies_rules_patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a single GatewaySecurityPolicyRule.
      operationId: networksecurity.projects.locations.gatewaySecurityPolicies.rules.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gatewaySecurityPoliciesId
          required: true
          schema:
            type: string
        - in: path
          name: rulesId
          required: true
          schema:
            type: string
      x-stackQL-resource: rules
      x-stackQL-method: projects_locations_gateway_security_policies_rules_delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single GatewaySecurityPolicyRule.
      operationId: networksecurity.projects.locations.gatewaySecurityPolicies.rules.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewaySecurityPolicyRule'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gatewaySecurityPoliciesId
          required: true
          schema:
            type: string
        - in: path
          name: rulesId
          required: true
          schema:
            type: string
      x-stackQL-resource: rules
      x-stackQL-method: projects_locations_gateway_security_policies_rules_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/gatewaySecurityPolicies/{gatewaySecurityPoliciesId}/rules':
    parameters: *ref_1
    post:
      description: Creates a new GatewaySecurityPolicy in a given project and location.
      operationId: networksecurity.projects.locations.gatewaySecurityPolicies.rules.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GatewaySecurityPolicyRule'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gatewaySecurityPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: gatewaySecurityPolicyRuleId
          schema:
            type: string
      x-stackQL-resource: rules
      x-stackQL-method: projects_locations_gateway_security_policies_rules_create
      x-stackQL-verb: insert
    get:
      description: Lists GatewaySecurityPolicyRules in a given project and location.
      operationId: networksecurity.projects.locations.gatewaySecurityPolicies.rules.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGatewaySecurityPolicyRulesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gatewaySecurityPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: rules
      x-stackQL-method: projects_locations_gateway_security_policies_rules_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.gatewaySecurityPolicyRules
  '/v1/projects/{projectsId}/locations/{locationsId}/gatewaySecurityPolicies':
    parameters: *ref_1
    get:
      description: Lists GatewaySecurityPolicies in a given project and location.
      operationId: networksecurity.projects.locations.gatewaySecurityPolicies.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGatewaySecurityPoliciesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: gateway_security_policies
      x-stackQL-method: projects_locations_gateway_security_policies_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.gatewaySecurityPolicies
    post:
      description: Creates a new GatewaySecurityPolicy in a given project and location.
      operationId: networksecurity.projects.locations.gatewaySecurityPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GatewaySecurityPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: gatewaySecurityPolicyId
          schema:
            type: string
      x-stackQL-resource: gateway_security_policies
      x-stackQL-method: projects_locations_gateway_security_policies_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/gatewaySecurityPolicies/{gatewaySecurityPoliciesId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single GatewaySecurityPolicy.
      operationId: networksecurity.projects.locations.gatewaySecurityPolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GatewaySecurityPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gatewaySecurityPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: gateway_security_policies
      x-stackQL-method: projects_locations_gateway_security_policies_patch
      x-stackQL-verb: exec
    get:
      description: Gets details of a single GatewaySecurityPolicy.
      operationId: networksecurity.projects.locations.gatewaySecurityPolicies.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewaySecurityPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gatewaySecurityPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: gateway_security_policies
      x-stackQL-method: projects_locations_gateway_security_policies_get
      x-stackQL-verb: select
    delete:
      description: Deletes a single GatewaySecurityPolicy.
      operationId: networksecurity.projects.locations.gatewaySecurityPolicies.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gatewaySecurityPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: gateway_security_policies
      x-stackQL-method: projects_locations_gateway_security_policies_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: networksecurity.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: networksecurity.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: networksecurity.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: networksecurity.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/addressGroups/{addressGroupsId}:removeItems':
    parameters: *ref_1
    post:
      description: Removes items from an address group.
      operationId: networksecurity.projects.locations.addressGroups.removeItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveAddressGroupItemsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: addressGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: address_groups_items
      x-stackQL-method: projects_locations_address_groups_remove_items
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/addressGroups/{addressGroupsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networksecurity.projects.locations.addressGroups.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: addressGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: address_groups_iam_policies
      x-stackQL-method: projects_locations_address_groups_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/addressGroups/{addressGroupsId}:listReferences':
    parameters: *ref_1
    get:
      description: Lists references of an address group.
      operationId: networksecurity.projects.locations.addressGroups.listReferences
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAddressGroupReferencesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: addressGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: address_groups_references
      x-stackQL-method: projects_locations_address_groups_list_references
      x-stackQL-verb: select
      x-stackQL-objectKey: $.addressGroupReferences
  '/v1/projects/{projectsId}/locations/{locationsId}/addressGroups/{addressGroupsId}':
    parameters: *ref_1
    get:
      description: Gets details of a single address group.
      operationId: networksecurity.projects.locations.addressGroups.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressGroup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: addressGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: address_groups
      x-stackQL-method: projects_locations_address_groups_get
      x-stackQL-verb: select
    delete:
      description: Deletes a single address group.
      operationId: networksecurity.projects.locations.addressGroups.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: addressGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: address_groups
      x-stackQL-method: projects_locations_address_groups_delete
      x-stackQL-verb: delete
    patch:
      description: Updates the parameters of a single address group.
      operationId: networksecurity.projects.locations.addressGroups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressGroup'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: addressGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: address_groups
      x-stackQL-method: projects_locations_address_groups_patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/addressGroups/{addressGroupsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: networksecurity.projects.locations.addressGroups.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: addressGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: address_groups_iam_policies
      x-stackQL-method: projects_locations_address_groups_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/addressGroups/{addressGroupsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networksecurity.projects.locations.addressGroups.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: addressGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: address_groups_iam_policies
      x-stackQL-method: projects_locations_address_groups_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/addressGroups':
    parameters: *ref_1
    post:
      description: Creates a new address group in a given project and location.
      operationId: networksecurity.projects.locations.addressGroups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressGroup'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: addressGroupId
          schema:
            type: string
      x-stackQL-resource: address_groups
      x-stackQL-method: projects_locations_address_groups_create
      x-stackQL-verb: insert
    get:
      description: Lists address groups in a given project and location.
      operationId: networksecurity.projects.locations.addressGroups.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAddressGroupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: address_groups
      x-stackQL-method: projects_locations_address_groups_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.addressGroups
  '/v1/projects/{projectsId}/locations/{locationsId}/addressGroups/{addressGroupsId}:addItems':
    parameters: *ref_1
    post:
      description: Adds items to an address group.
      operationId: networksecurity.projects.locations.addressGroups.addItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAddressGroupItemsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: addressGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: address_groups_items
      x-stackQL-method: projects_locations_address_groups_add_items
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/addressGroups/{addressGroupsId}:cloneItems':
    parameters: *ref_1
    post:
      description: Clones items from one address group to another.
      operationId: networksecurity.projects.locations.addressGroups.cloneItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneAddressGroupItemsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: addressGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: address_groups
      x-stackQL-method: projects_locations_address_groups_clone_items
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: networksecurity.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: networksecurity.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_get
      x-stackQL-verb: select
