openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Build API
  description: Creates and manages builds on Google Cloud Platform.
  version: v2
  x-discovery-doc-revision: '20240903'
  x-generated-date: '2024-09-13'
externalDocs:
  url: https://cloud.google.com/cloud-build/docs/
servers:
  - url: https://cloudbuild.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    TimeoutFields:
      type: object
      properties:
        finally:
          description: Finally sets the maximum allowed duration of this pipeline's finally
          type: string
          format: google-duration
        pipeline:
          type: string
          description: >-
            Pipeline sets the maximum allowed duration for execution of the
            entire pipeline. The sum of individual timeouts for tasks and
            finally must not exceed this value.
          format: google-duration
        tasks:
          type: string
          format: google-duration
          description: Tasks sets the maximum allowed duration of this pipeline's tasks
      id: TimeoutFields
      description: >-
        TimeoutFields allows granular specification of pipeline, task, and
        finally timeouts
    TaskRef:
      type: object
      id: TaskRef
      properties:
        resolver:
          description: >-
            Resolver is the name of the resolver that should perform resolution
            of the referenced Tekton resource.
          enum:
            - RESOLVER_NAME_UNSPECIFIED
            - BUNDLES
            - GCB_REPO
            - GIT
            - DEVELOPER_CONNECT
            - DEFAULT
          type: string
          enumDescriptions:
            - Default enum type; should not be used.
            - >-
              Bundles resolver.
              https://tekton.dev/docs/pipelines/bundle-resolver/
            - GCB repo resolver.
            - >-
              Simple Git resolver.
              https://tekton.dev/docs/pipelines/git-resolver/
            - Developer Connect resolver.
            - Default resolver.
        name:
          type: string
          description: Optional. Name of the task.
        params:
          type: array
          items:
            $ref: '#/components/schemas/Param'
          description: >-
            Params contains the parameters used to identify the referenced
            Tekton resource. Example entries might include "repo" or "path" but
            the set of params ultimately depends on the chosen resolver.
      description: >-
        TaskRef can be used to refer to a specific instance of a task.
        PipelineRef can be used to refer to a specific instance of a Pipeline.
    CreateRepositoryRequest:
      description: Message for creating a Repository.
      type: object
      properties:
        repositoryId:
          description: >-
            Required. The ID to use for the repository, which will become the
            final component of the repository's resource name. This ID should be
            unique in the connection. Allows alphanumeric characters and any of
            -._~%!$&'()*+,;=@.
          type: string
        repository:
          description: Required. The repository to create.
          $ref: '#/components/schemas/Repository'
        parent:
          type: string
          description: >-
            Required. The connection to contain the repository. If the request
            is part of a BatchCreateRepositoriesRequest, this field should be
            empty or match the parent specified there.
      id: CreateRepositoryRequest
    OAuthCredential:
      properties:
        username:
          type: string
          description: Output only. The username associated to this token.
          readOnly: true
        oauthTokenSecretVersion:
          description: >-
            Optional. A SecretManager resource containing the OAuth token that
            authorizes the Cloud Build connection. Format:
            `projects/*/secrets/*/versions/*`.
          type: string
      description: >-
        Represents an OAuth token of the account that authorized the Connection,
        and associated metadata.
      type: object
      id: OAuthCredential
    BitbucketCloudConfig:
      id: BitbucketCloudConfig
      properties:
        authorizerCredential:
          description: >-
            Required. An access token with the `webhook`, `repository`,
            `repository:admin` and `pullrequest` scope access. It can be either
            a workspace, project or repository access token. It's recommended to
            use a system account to generate these credentials.
          $ref: '#/components/schemas/UserCredential'
        webhookSecretSecretVersion:
          type: string
          description: >-
            Required. SecretManager resource containing the webhook secret used
            to verify webhook events, formatted as
            `projects/*/secrets/*/versions/*`.
        readAuthorizerCredential:
          $ref: '#/components/schemas/UserCredential'
          description: >-
            Required. An access token with the `repository` access. It can be
            either a workspace, project or repository access token. It's
            recommended to use a system account to generate the credentials.
        workspace:
          type: string
          description: >-
            Required. The Bitbucket Cloud Workspace ID to be connected to Google
            Cloud Platform.
      description: Configuration for connections to Bitbucket Cloud.
      type: object
    ParamSpec:
      type: object
      description: >-
        ParamSpec defines parameters needed beyond typed inputs (such as
        resources). Parameter values are provided by users as inputs on a
        TaskRun or PipelineRun.
      properties:
        type:
          enumDescriptions:
            - Default enum type; should not be used.
            - Default
            - Array type.
            - Object type.
          type: string
          description: Type of ParamSpec
          enum:
            - TYPE_UNSPECIFIED
            - STRING
            - ARRAY
            - OBJECT
        default:
          $ref: '#/components/schemas/ParamValue'
          description: The default value a parameter takes if no input value is supplied
        description:
          description: Description of the ParamSpec
          type: string
        name:
          type: string
          description: Name of the ParamSpec
      id: ParamSpec
    TestIamPermissionsRequest:
      type: object
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          items:
            type: string
          type: array
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
      id: TestIamPermissionsRequest
    Capabilities:
      properties:
        add:
          type: array
          items:
            type: string
          description: Optional. Added capabilities +optional
        drop:
          items:
            type: string
          type: array
          description: Optional. Removed capabilities +optional
      id: Capabilities
      description: >-
        Capabilities adds and removes POSIX capabilities from running
        containers.
      type: object
    OperationMetadata:
      properties:
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
        cancelRequested:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          type: boolean
          readOnly: true
        verb:
          readOnly: true
          type: string
          description: Output only. Name of the verb executed by the operation.
        statusDetail:
          type: string
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
        apiVersion:
          readOnly: true
          description: Output only. API version used to start the operation.
          type: string
        endTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
      description: Represents the metadata of the long-running operation.
      type: object
      id: OperationMetadata
    GitHubConfig:
      id: GitHubConfig
      description: Configuration for connections to github.com.
      properties:
        authorizerCredential:
          $ref: '#/components/schemas/OAuthCredential'
          description: >-
            Optional. OAuth credential of the account that authorized the Cloud
            Build GitHub App. It is recommended to use a robot account instead
            of a human user account. The OAuth token must be tied to the Cloud
            Build GitHub App.
        appInstallationId:
          type: string
          description: Optional. GitHub App installation id.
          format: int64
      type: object
    PipelineWorkspaceDeclaration:
      id: PipelineWorkspaceDeclaration
      description: >-
        Workspaces declares a set of named workspaces that are expected to be
        provided by a PipelineRun.
      type: object
      properties:
        name:
          type: string
          description: Name is the name of a workspace to be provided by a PipelineRun.
        optional:
          description: >-
            Optional marks a Workspace as not being required in PipelineRuns. By
            default this field is false and so declared workspaces are required.
          type: boolean
        description:
          type: string
          description: >-
            Description is a human readable string describing how the workspace
            will be used in the Pipeline.
    Operation:
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      properties:
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
      type: object
      id: Operation
    Provenance:
      description: Provenance configuration.
      type: object
      properties:
        storage:
          description: Optional. Where provenance is stored.
          enumDescriptions:
            - Default PREFER_ARTIFACT_PROJECT.
            - >-
              GCB will attempt to push provenance to the artifact project. If it
              is not available, fallback to build project.
            - Only push to artifact project.
            - Only push to build project.
          type: string
          enum:
            - STORAGE_UNSPECIFIED
            - PREFER_ARTIFACT_PROJECT
            - ARTIFACT_PROJECT_ONLY
            - BUILD_PROJECT_ONLY
        enabled:
          enumDescriptions:
            - Default to disabled (before AA regionalization), optimistic after
            - Provenance failures would fail the run
            - >-
              GCB will attempt to push to artifact analaysis and build state
              would not be impacted by the push failures.
            - Disable the provenance push entirely.
          enum:
            - ENABLED_UNSPECIFIED
            - REQUIRED
            - OPTIMISTIC
            - DISABLED
          description: Optional. Provenance push mode.
          type: string
        region:
          type: string
          description: Optional. Provenance region.
          enumDescriptions:
            - >-
              The PipelineRun/TaskRun/Workflow will be rejected. Update this
              comment to push to the same region as the run in Artifact Analysis
              when it's regionalized.
            - Push provenance to Artifact Analysis in global region.
          enum:
            - REGION_UNSPECIFIED
            - GLOBAL
      id: Provenance
    SecurityContext:
      type: object
      properties:
        runAsUser:
          description: >-
            Optional. The UID to run the entrypoint of the container process.
            Defaults to user specified in image metadata if unspecified. May
            also be set in PodSecurityContext. If set in both SecurityContext
            and PodSecurityContext, the value specified in SecurityContext takes
            precedence. Note that this field cannot be set when spec.os.name is
            windows. +optional
          format: int64
          type: string
        capabilities:
          description: >-
            Optional. Adds and removes POSIX capabilities from running
            containers.
          $ref: '#/components/schemas/Capabilities'
        privileged:
          type: boolean
          description: Run container in privileged mode.
        allowPrivilegeEscalation:
          description: >-
            Optional. AllowPrivilegeEscalation controls whether a process can
            gain more privileges than its parent process. This bool directly
            controls if the no_new_privs flag will be set on the container
            process. AllowPrivilegeEscalation is true always when the container
            is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field
            cannot be set when spec.os.name is windows. +optional
          type: boolean
        runAsGroup:
          description: >-
            Optional. The GID to run the entrypoint of the container process.
            Uses runtime default if unset. May also be set in
            PodSecurityContext. If set in both SecurityContext and
            PodSecurityContext, the value specified in SecurityContext takes
            precedence. Note that this field cannot be set when spec.os.name is
            windows. +optional
          format: int64
          type: string
        runAsNonRoot:
          type: boolean
          description: >-
            Optional. Indicates that the container must run as a non-root user.
            If true, the Kubelet will validate the image at runtime to ensure
            that it does not run as UID 0 (root) and fail to start the container
            if it does. If unset or false, no such validation will be performed.
            May also be set in PodSecurityContext. If set in both
            SecurityContext and PodSecurityContext, the value specified in
            SecurityContext takes precedence. +optional
      id: SecurityContext
      description: Security options the container should be run with.
    GoogleDevtoolsCloudbuildV2Condition:
      id: GoogleDevtoolsCloudbuildV2Condition
      type: object
      description: Conditions defines a readiness condition for a Knative resource.
      properties:
        type:
          description: Type of condition.
          type: string
        reason:
          type: string
          description: The reason for the condition's last transition.
        severity:
          enum:
            - SEVERITY_UNSPECIFIED
            - WARNING
            - INFO
          description: Severity with which to treat failures of this type of condition.
          enumDescriptions:
            - Default enum type; should not be used.
            - Severity is warning.
            - Severity is informational only.
          type: string
        message:
          description: A human readable message indicating details about the transition.
          type: string
        status:
          enum:
            - UNKNOWN
            - 'TRUE'
            - 'FALSE'
          enumDescriptions:
            - Default enum type indicating execution is still ongoing.
            - Success
            - Failure
          description: Status of the condition.
          type: string
        lastTransitionTime:
          format: google-datetime
          type: string
          description: >-
            LastTransitionTime is the last time the condition transitioned from
            one status to another.
    TaskResult:
      properties:
        properties:
          type: object
          description: >-
            When type is OBJECT, this map holds the names of fields inside that
            object along with the type of data each field holds.
          additionalProperties:
            $ref: '#/components/schemas/PropertySpec'
        value:
          $ref: '#/components/schemas/ParamValue'
          description: >-
            Optional. Optionally used to initialize a Task's result with a
            Step's result.
        type:
          type: string
          enumDescriptions:
            - Default enum type; should not be used.
            - Default
            - Array type
            - Object type
          enum:
            - TYPE_UNSPECIFIED
            - STRING
            - ARRAY
            - OBJECT
          description: The type of data that the result holds.
        name:
          description: Name of the result.
          type: string
        description:
          description: Description of the result.
          type: string
      id: TaskResult
      type: object
      description: TaskResult is used to describe the results of a task.
    FetchReadTokenResponse:
      description: Message for responding to get read token.
      id: FetchReadTokenResponse
      type: object
      properties:
        token:
          type: string
          description: The token content.
        expirationTime:
          description: Expiration timestamp. Can be empty if unknown or non-expiring.
          format: google-datetime
          type: string
    FetchLinkableRepositoriesResponse:
      type: object
      properties:
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        repositories:
          description: repositories ready to be created.
          items:
            $ref: '#/components/schemas/Repository'
          type: array
      description: Response message for FetchLinkableRepositories.
      id: FetchLinkableRepositoriesResponse
    ParamValue:
      description: Parameter value.
      properties:
        stringVal:
          description: Value of the parameter if type is string.
          type: string
        type:
          type: string
          description: Type of parameter.
          enumDescriptions:
            - Default enum type; should not be used.
            - Default
            - Array type
            - Object type
          enum:
            - TYPE_UNSPECIFIED
            - STRING
            - ARRAY
            - OBJECT
        arrayVal:
          type: array
          items:
            type: string
          description: Value of the parameter if type is array.
        objectVal:
          description: Optional. Value of the parameter if type is object.
          type: object
          additionalProperties:
            type: string
      id: ParamValue
      type: object
    TaskSpec:
      type: object
      description: TaskSpec contains the Spec to instantiate a TaskRun.
      properties:
        managedSidecars:
          type: array
          description: >-
            Sidecars that run alongside the Task’s step containers that should
            be added to this Task.
          items:
            enumDescriptions:
              - Default enum type; should not be used.
              - Sidecar for a privileged docker daemon.
            type: string
            enum:
              - MANAGED_SIDECAR_UNSPECIFIED
              - PRIVILEGED_DOCKER_DAEMON
        results:
          type: array
          description: Values that this Task can output.
          items:
            $ref: '#/components/schemas/TaskResult'
        description:
          type: string
          description: Description of the task.
        workspaces:
          type: array
          description: The volumes that this Task requires.
          items:
            $ref: '#/components/schemas/WorkspaceDeclaration'
        sidecars:
          type: array
          description: Sidecars that run alongside the Task's step containers.
          items:
            $ref: '#/components/schemas/Sidecar'
        stepTemplate:
          $ref: '#/components/schemas/StepTemplate'
          description: >-
            Optional. StepTemplate can be used as the basis for all step
            containers within the Task, so that the steps inherit settings on
            the base container.
        steps:
          type: array
          items:
            $ref: '#/components/schemas/Step'
          description: Steps of the task.
        volumes:
          items:
            $ref: '#/components/schemas/VolumeSource'
          type: array
          description: A collection of volumes that are available to mount into steps.
        params:
          items:
            $ref: '#/components/schemas/ParamSpec'
          type: array
          description: List of parameters.
      id: TaskSpec
    TestIamPermissionsResponse:
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
          items:
            type: string
      description: Response message for `TestIamPermissions` method.
      type: object
      id: TestIamPermissionsResponse
    ListRepositoriesResponse:
      description: Message for response to listing Repositories.
      properties:
        repositories:
          description: The list of Repositories.
          items:
            $ref: '#/components/schemas/Repository'
          type: array
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return.
      id: ListRepositoriesResponse
      type: object
    GoogleDevtoolsCloudbuildV2OperationMetadata:
      id: GoogleDevtoolsCloudbuildV2OperationMetadata
      properties:
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
        statusMessage:
          type: string
          readOnly: true
          description: Output only. Human-readable status of the operation, if any.
        target:
          readOnly: true
          type: string
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
        verb:
          type: string
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        requestedCancellation:
          readOnly: true
          type: boolean
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
      type: object
      description: Represents the metadata of the long-running operation.
    StepRef:
      description: A reference to a remote Step, i.e. a StepAction.
      type: object
      properties:
        name:
          description: Optional. Name of the step.
          type: string
        params:
          type: array
          items:
            $ref: '#/components/schemas/Param'
          description: Optional. Parameters used to control the resolution.
        resolver:
          enumDescriptions:
            - Default enum type; should not be used.
            - >-
              Bundles resolver.
              https://tekton.dev/docs/pipelines/bundle-resolver/
            - GCB repo resolver.
            - >-
              Simple Git resolver.
              https://tekton.dev/docs/pipelines/git-resolver/
            - Developer Connect resolver.
            - Default resolver.
          enum:
            - RESOLVER_NAME_UNSPECIFIED
            - BUNDLES
            - GCB_REPO
            - GIT
            - DEVELOPER_CONNECT
            - DEFAULT
          type: string
          description: Optional. Type of the resolver.
      id: StepRef
    ExecAction:
      properties:
        command:
          type: array
          items:
            type: string
          description: >-
            Optional. Command is the command line to execute inside the
            container, the working directory for the command is root ('/') in
            the container's filesystem. The command is simply exec'd, it is not
            run inside a shell, so traditional shell instructions ('|', etc)
            won't work. To use a shell, you need to explicitly call out to that
            shell. Exit status of 0 is treated as live/healthy and non-zero is
            unhealthy. +optional
      type: object
      description: ExecAction describes a "run in container" action.
      id: ExecAction
    CancelOperationRequest:
      type: object
      properties: {}
      description: The request message for Operations.CancelOperation.
      id: CancelOperationRequest
    PipelineResult:
      description: A value produced by a Pipeline.
      properties:
        name:
          readOnly: true
          description: Output only. Name of the result.
          type: string
        description:
          readOnly: true
          description: Output only. Description of the result.
          type: string
        value:
          description: Output only. Value of the result.
          $ref: '#/components/schemas/ResultValue'
          readOnly: true
        type:
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - STRING
            - ARRAY
            - OBJECT
          description: Output only. The type of data that the result holds.
          enumDescriptions:
            - Default enum type; should not be used.
            - Default
            - Array type
            - Object type
          readOnly: true
      type: object
      id: PipelineResult
    AuditLogConfig:
      type: object
      properties:
        exemptedMembers:
          items:
            type: string
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          type: array
        logType:
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          description: The log type that this config enables.
          type: string
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      id: AuditLogConfig
    ListLocationsResponse:
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Location'
          type: array
        nextPageToken:
          type: string
          description: The standard List next-page token.
      type: object
      description: The response message for Locations.ListLocations.
      id: ListLocationsResponse
    BitbucketDataCenterConfig:
      id: BitbucketDataCenterConfig
      properties:
        serviceDirectoryConfig:
          description: >-
            Optional. Configuration for using Service Directory to privately
            connect to a Bitbucket Data Center. This should only be set if the
            Bitbucket Data Center is hosted on-premises and not reachable by
            public internet. If this field is left empty, calls to the Bitbucket
            Data Center will be made over the public internet.
          $ref: >-
            #/components/schemas/GoogleDevtoolsCloudbuildV2ServiceDirectoryConfig
        authorizerCredential:
          $ref: '#/components/schemas/UserCredential'
          description: Required. A http access token with the `REPO_ADMIN` scope access.
        readAuthorizerCredential:
          $ref: '#/components/schemas/UserCredential'
          description: Required. A http access token with the `REPO_READ` access.
        hostUri:
          description: >-
            Required. The URI of the Bitbucket Data Center instance or cluster
            this connection is for.
          type: string
        sslCa:
          type: string
          description: >-
            Optional. SSL certificate to use for requests to the Bitbucket Data
            Center.
        webhookSecretSecretVersion:
          type: string
          description: >-
            Required. Immutable. SecretManager resource containing the webhook
            secret used to verify webhook events, formatted as
            `projects/*/secrets/*/versions/*`.
        serverVersion:
          description: >-
            Output only. Version of the Bitbucket Data Center running on the
            `host_uri`.
          readOnly: true
          type: string
      type: object
      description: Configuration for connections to Bitbucket Data Center.
    BatchCreateRepositoriesResponse:
      id: BatchCreateRepositoriesResponse
      description: Message for response of creating repositories in batch.
      properties:
        repositories:
          items:
            $ref: '#/components/schemas/Repository'
          description: Repository resources created.
          type: array
      type: object
    WorkspaceBinding:
      description: >-
        WorkspaceBinding maps a workspace to a Volume. PipelineRef can be used
        to refer to a specific instance of a Pipeline.
      properties:
        subPath:
          type: string
          description: >-
            Optional. SubPath is optionally a directory on the volume which
            should be used for this binding (i.e. the volume will be mounted at
            this sub directory). +optional
        secret:
          description: Secret Volume Source.
          $ref: '#/components/schemas/SecretVolumeSource'
        name:
          type: string
          description: Name of the workspace.
      type: object
      id: WorkspaceBinding
    ResultValue:
      id: ResultValue
      type: object
      properties:
        arrayVal:
          items:
            type: string
          type: array
          description: Value of the result if type is array.
        type:
          type: string
          enumDescriptions:
            - Default enum type; should not be used.
            - Default
            - Array type
            - Object type
          description: Output only. The type of data that the result holds.
          enum:
            - TYPE_UNSPECIFIED
            - STRING
            - ARRAY
            - OBJECT
          readOnly: true
        objectVal:
          additionalProperties:
            type: string
          type: object
          description: Value of the result if type is object.
        stringVal:
          description: Value of the result if type is string.
          type: string
      description: ResultValue holds different types of data for a single result.
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
        updateMask:
          type: string
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          format: google-fieldmask
    PipelineRun:
      properties:
        pipelineRef:
          $ref: '#/components/schemas/PipelineRef'
          description: PipelineRef refer to a specific instance of a Pipeline.
        completionTime:
          readOnly: true
          description: Output only. Time the pipeline completed.
          type: string
          format: google-datetime
        workspaces:
          description: >-
            Workspaces is a list of WorkspaceBindings from volumes to
            workspaces.
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceBinding'
        gcbParams:
          readOnly: true
          type: object
          description: Output only. GCB default params.
          additionalProperties:
            type: string
        results:
          readOnly: true
          description: >-
            Optional. Output only. List of results written out by the pipeline's
            containers
          items:
            $ref: '#/components/schemas/PipelineRunResult'
          type: array
        timeouts:
          $ref: '#/components/schemas/TimeoutFields'
          description: >-
            Time after which the Pipeline times out. Currently three keys are
            accepted in the map pipeline, tasks and finally with
            Timeouts.pipeline >= Timeouts.tasks + Timeouts.finally
        childReferences:
          items:
            $ref: '#/components/schemas/ChildStatusReference'
          type: array
          description: >-
            Output only. List of TaskRun and Run names and PipelineTask names
            for children of this PipelineRun.
          readOnly: true
        uid:
          readOnly: true
          type: string
          description: Output only. A unique identifier for the `PipelineRun`.
        etag:
          type: string
          description: Needed for declarative-friendly resources.
        name:
          readOnly: true
          type: string
          description: >-
            Output only. The `PipelineRun` name with format
            `projects/{project}/locations/{location}/pipelineRuns/{pipeline_run}`
        serviceAccount:
          deprecated: true
          description: >-
            Service account used in the Pipeline. Deprecated; please use
            security.service_account instead.
          type: string
        createTime:
          description: >-
            Output only. Time at which the request to create the `PipelineRun`
            was received.
          format: google-datetime
          type: string
          readOnly: true
        skippedTasks:
          description: >-
            Output only. List of tasks that were skipped due to when expressions
            evaluating to false.
          items:
            $ref: '#/components/schemas/SkippedTask'
          type: array
          readOnly: true
        worker:
          $ref: '#/components/schemas/Worker'
          description: Optional. Worker configuration.
        params:
          type: array
          items:
            $ref: '#/components/schemas/Param'
          description: Params is a list of parameter names and values.
        pipelineRunStatus:
          enum:
            - PIPELINE_RUN_STATUS_UNSPECIFIED
            - PIPELINE_RUN_CANCELLED
          enumDescriptions:
            - Default enum type; should not be used.
            - Cancelled status.
          type: string
          description: Pipelinerun status the user can provide. Used for cancellation.
        pipelineSpecYaml:
          readOnly: true
          description: >-
            Output only. Inline pipelineSpec yaml string, used by workflow run
            requests.
          type: string
        startTime:
          format: google-datetime
          description: Output only. Time the pipeline is actually started.
          type: string
          readOnly: true
        updateTime:
          readOnly: true
          description: >-
            Output only. Time at which the request to update the `PipelineRun`
            was received.
          format: google-datetime
          type: string
        record:
          readOnly: true
          type: string
          description: >-
            Output only. The `Record` of this `PipelineRun`. Format:
            `projects/{project}/locations/{location}/results/{result_id}/records/{record_id}`
        conditions:
          description: >-
            Output only. Kubernetes Conditions convention for PipelineRun status
            and error.
          type: array
          items:
            $ref: '#/components/schemas/GoogleDevtoolsCloudbuildV2Condition'
          readOnly: true
        annotations:
          description: User annotations. See https://google.aip.dev/128#annotations
          type: object
          additionalProperties:
            type: string
        workerPool:
          readOnly: true
          description: Output only. The WorkerPool used to run this PipelineRun.
          type: string
        workflow:
          type: string
          description: Output only. The Workflow used to create this PipelineRun.
          readOnly: true
        security:
          $ref: '#/components/schemas/Security'
          description: Optional. Security configuration.
        pipelineSpec:
          description: PipelineSpec defines the desired state of Pipeline.
          $ref: '#/components/schemas/PipelineSpec'
        finallyStartTime:
          description: >-
            Output only. FinallyStartTime is when all non-finally tasks have
            been completed and only finally tasks are being executed. +optional
          readOnly: true
          type: string
          format: google-datetime
        provenance:
          description: Optional. Provenance configuration.
          $ref: '#/components/schemas/Provenance'
        resolvedPipelineSpec:
          description: Output only. The exact PipelineSpec used to instantiate the run.
          $ref: '#/components/schemas/PipelineSpec'
          readOnly: true
      description: Message describing PipelineRun object
      id: PipelineRun
      type: object
    GoogleDevtoolsCloudbuildV2GitHubEnterpriseConfig:
      properties:
        appSlug:
          type: string
          description: Optional. The URL-friendly name of the GitHub App.
        serviceDirectoryConfig:
          $ref: >-
            #/components/schemas/GoogleDevtoolsCloudbuildV2ServiceDirectoryConfig
          description: >-
            Optional. Configuration for using Service Directory to privately
            connect to a GitHub Enterprise server. This should only be set if
            the GitHub Enterprise server is hosted on-premises and not reachable
            by public internet. If this field is left empty, calls to the GitHub
            Enterprise server will be made over the public internet.
        sslCa:
          description: Optional. SSL certificate to use for requests to GitHub Enterprise.
          type: string
        apiKey:
          type: string
          description: Required. API Key used for authentication of webhook events.
        webhookSecretSecretVersion:
          type: string
          description: >-
            Optional. SecretManager resource containing the webhook secret of
            the GitHub App, formatted as `projects/*/secrets/*/versions/*`.
        appId:
          format: int64
          type: string
          description: Optional. Id of the GitHub App created from the manifest.
        serverVersion:
          type: string
          readOnly: true
          description: Output only. GitHub Enterprise version installed at the host_uri.
        privateKeySecretVersion:
          description: >-
            Optional. SecretManager resource containing the private key of the
            GitHub App, formatted as `projects/*/secrets/*/versions/*`.
          type: string
        appInstallationId:
          format: int64
          description: Optional. ID of the installation of the GitHub App.
          type: string
        hostUri:
          description: >-
            Required. The URI of the GitHub Enterprise host this connection is
            for.
          type: string
      type: object
      id: GoogleDevtoolsCloudbuildV2GitHubEnterpriseConfig
      description: Configuration for connections to an instance of GitHub Enterprise.
    HttpBody:
      description: >-
        Message that represents an arbitrary HTTP body. It should only be used
        for payload formats that can't be represented as JSON, such as raw
        binary or an HTML page. This message can be used both in streaming and
        non-streaming API methods in the request as well as the response. It can
        be used as a top-level request field, which is convenient if one wants
        to extract parameters from either the URL or HTTP template into the
        request fields and also want access to the raw HTTP body. Example:
        message GetResourceRequest { // A unique request id. string request_id =
        1; // The raw HTTP body is bound to this field. google.api.HttpBody
        http_body = 2; } service ResourceService { rpc
        GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc
        UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); }
        Example with streaming methods: service CaldavService { rpc
        GetCalendar(stream google.api.HttpBody) returns (stream
        google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody)
        returns (stream google.api.HttpBody); } Use of this type only changes
        how the request and response bodies are handled, all other features will
        continue to work unchanged.
      id: HttpBody
      type: object
      properties:
        extensions:
          type: array
          description: >-
            Application specific response metadata. Must be set in the first
            response for streaming APIs.
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
        data:
          type: string
          description: The HTTP request/response body as raw binary.
          format: byte
        contentType:
          type: string
          description: >-
            The HTTP Content-Type header value specifying the content type of
            the body.
    EmptyDirVolumeSource:
      type: object
      id: EmptyDirVolumeSource
      properties: {}
      description: Represents an empty Volume source.
    WorkspaceDeclaration:
      id: WorkspaceDeclaration
      type: object
      properties:
        optional:
          type: boolean
          description: >-
            Optional. Optional marks a Workspace as not being required in
            TaskRuns. By default this field is false and so declared workspaces
            are required.
        name:
          type: string
          description: Name is the name by which you can bind the volume at runtime.
        readOnly:
          description: ReadOnly dictates whether a mounted volume is writable.
          type: boolean
        mountPath:
          type: string
          description: >-
            MountPath overrides the directory that the volume will be made
            available at.
        description:
          type: string
          description: Description is a human readable description of this volume.
      description: WorkspaceDeclaration is a declaration of a volume that a Task requires.
    GoogleDevtoolsCloudbuildV2GitLabConfig:
      id: GoogleDevtoolsCloudbuildV2GitLabConfig
      description: >-
        Configuration for connections to gitlab.com or an instance of GitLab
        Enterprise.
      type: object
      properties:
        readAuthorizerCredential:
          $ref: '#/components/schemas/UserCredential'
          description: >-
            Required. A GitLab personal access token with the minimum `read_api`
            scope access.
        authorizerCredential:
          $ref: '#/components/schemas/UserCredential'
          description: >-
            Required. A GitLab personal access token with the `api` scope
            access.
        webhookSecretSecretVersion:
          type: string
          description: >-
            Required. Immutable. SecretManager resource containing the webhook
            secret of a GitLab Enterprise project, formatted as
            `projects/*/secrets/*/versions/*`.
        sslCa:
          type: string
          description: Optional. SSL certificate to use for requests to GitLab Enterprise.
        serverVersion:
          readOnly: true
          type: string
          description: >-
            Output only. Version of the GitLab Enterprise server running on the
            `host_uri`.
        hostUri:
          description: >-
            Optional. The URI of the GitLab Enterprise host this connection is
            for. If not specified, the default value is https://gitlab.com.
          type: string
        serviceDirectoryConfig:
          description: >-
            Optional. Configuration for using Service Directory to privately
            connect to a GitLab Enterprise server. This should only be set if
            the GitLab Enterprise server is hosted on-premises and not reachable
            by public internet. If this field is left empty, calls to the GitLab
            Enterprise server will be made over the public internet.
          $ref: >-
            #/components/schemas/GoogleDevtoolsCloudbuildV2ServiceDirectoryConfig
    PipelineSpec:
      id: PipelineSpec
      description: PipelineSpec defines the desired state of Pipeline.
      type: object
      properties:
        results:
          items:
            $ref: '#/components/schemas/PipelineResult'
          description: >-
            Optional. Output only. List of results written out by the pipeline's
            containers
          readOnly: true
          type: array
        workspaces:
          type: array
          items:
            $ref: '#/components/schemas/PipelineWorkspaceDeclaration'
          description: >-
            Workspaces declares a set of named workspaces that are expected to
            be provided by a PipelineRun.
        tasks:
          items:
            $ref: '#/components/schemas/PipelineTask'
          type: array
          description: List of Tasks that execute when this Pipeline is run.
        generatedYaml:
          type: string
          readOnly: true
          description: >-
            Output only. auto-generated yaml that is output only for display
            purpose for workflows using pipeline_spec, used by UI/gcloud cli for
            Workflows.
        params:
          description: List of parameters.
          items:
            $ref: '#/components/schemas/ParamSpec'
          type: array
        finallyTasks:
          type: array
          items:
            $ref: '#/components/schemas/PipelineTask'
          description: >-
            List of Tasks that execute just before leaving the Pipeline i.e.
            either after all Tasks are finished executing successfully or after
            a failure which would result in ending the Pipeline.
    InstallationState:
      type: object
      id: InstallationState
      description: >-
        Describes stage and necessary actions to be taken by the user to
        complete the installation. Used for GitHub and GitHub Enterprise based
        connections.
      properties:
        actionUri:
          description: >-
            Output only. Link to follow for next action. Empty string if the
            installation is already complete.
          type: string
          readOnly: true
        message:
          readOnly: true
          description: >-
            Output only. Message of what the user should do next to continue the
            installation. Empty string if the installation is already complete.
          type: string
        stage:
          type: string
          description: Output only. Current step of the installation process.
          readOnly: true
          enumDescriptions:
            - No stage specified.
            - >-
              Only for GitHub Enterprise. An App creation has been requested.
              The user needs to confirm the creation in their GitHub enterprise
              host.
            - User needs to authorize the GitHub (or Enterprise) App via OAuth.
            - >-
              User needs to follow the link to install the GitHub (or
              Enterprise) App.
            - Installation process has been completed.
          enum:
            - STAGE_UNSPECIFIED
            - PENDING_CREATE_APP
            - PENDING_USER_OAUTH
            - PENDING_INSTALL_APP
            - COMPLETE
    EnvVar:
      type: object
      id: EnvVar
      properties:
        name:
          description: Name of the environment variable.
          type: string
        value:
          type: string
          description: Value of the environment variable.
      description: Environment variable.
    Repository:
      properties:
        updateTime:
          readOnly: true
          format: google-datetime
          description: >-
            Output only. Server assigned timestamp for when the connection was
            updated.
          type: string
        annotations:
          type: object
          additionalProperties:
            type: string
          description: Optional. Allows clients to store small amounts of arbitrary data.
        name:
          type: string
          description: >-
            Immutable. Resource name of the repository, in the format
            `projects/*/locations/*/connections/*/repositories/*`.
        etag:
          description: >-
            This checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding.
          type: string
        webhookId:
          description: Output only. External ID of the webhook created for the repository.
          type: string
          readOnly: true
        remoteUri:
          type: string
          description: Required. Git Clone HTTPS URI.
        createTime:
          format: google-datetime
          description: >-
            Output only. Server assigned timestamp for when the connection was
            created.
          readOnly: true
          type: string
      description: A repository associated to a parent connection.
      type: object
      id: Repository
    FetchReadTokenRequest:
      type: object
      properties: {}
      id: FetchReadTokenRequest
      description: Message for fetching SCM read token.
    ChildStatusReference:
      type: object
      id: ChildStatusReference
      description: >-
        ChildStatusReference is used to point to the statuses of individual
        TaskRuns and Runs within this PipelineRun.
      properties:
        type:
          description: Output only. Type of the child reference.
          enum:
            - TYPE_UNSPECIFIED
            - TASK_RUN
          readOnly: true
          type: string
          enumDescriptions:
            - Default enum type; should not be used.
            - TaskRun.
        whenExpressions:
          type: array
          description: >-
            WhenExpressions is the list of checks guarding the execution of the
            PipelineTask
          items:
            $ref: '#/components/schemas/WhenExpression'
        name:
          description: Name is the name of the TaskRun or Run this is referencing.
          type: string
        pipelineTaskName:
          type: string
          description: >-
            PipelineTaskName is the name of the PipelineTask this is
            referencing.
    AuditConfig:
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      properties:
        service:
          type: string
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          type: array
      type: object
      id: AuditConfig
    PipelineRef:
      properties:
        name:
          type: string
          description: Optional. Name of the Pipeline.
        resolver:
          enumDescriptions:
            - Default enum type; should not be used.
            - >-
              Bundles resolver.
              https://tekton.dev/docs/pipelines/bundle-resolver/
            - GCB repo resolver.
            - >-
              Simple Git resolver.
              https://tekton.dev/docs/pipelines/git-resolver/
            - Developer Connect resolver.
            - Default resolver.
          type: string
          description: >-
            Resolver is the name of the resolver that should perform resolution
            of the referenced Tekton resource.
          enum:
            - RESOLVER_NAME_UNSPECIFIED
            - BUNDLES
            - GCB_REPO
            - GIT
            - DEVELOPER_CONNECT
            - DEFAULT
        params:
          items:
            $ref: '#/components/schemas/Param'
          type: array
          description: >-
            Params contains the parameters used to identify the referenced
            Tekton resource. Example entries might include "repo" or "path" but
            the set of params ultimately depends on the chosen resolver.
      id: PipelineRef
      description: PipelineRef can be used to refer to a specific instance of a Pipeline.
      type: object
    PipelineTask:
      type: object
      description: PipelineTask defines a task in a Pipeline.
      properties:
        params:
          description: Params is a list of parameter names and values.
          items:
            $ref: '#/components/schemas/Param'
          type: array
        taskSpec:
          description: Spec to instantiate this TaskRun.
          $ref: '#/components/schemas/EmbeddedTask'
        name:
          description: Name of the task.
          type: string
        timeout:
          type: string
          description: >-
            Time after which the TaskRun times out. Defaults to 1 hour.
            Specified TaskRun timeout should be less than 24h.
          format: google-duration
        whenExpressions:
          description: Conditions that need to be true for the task to run.
          items:
            $ref: '#/components/schemas/WhenExpression'
          type: array
        retries:
          type: integer
          description: >-
            Retries represents how many times this task should be retried in
            case of task failure.
          format: int32
        runAfter:
          description: >-
            RunAfter is the list of PipelineTask names that should be executed
            before this Task executes. (Used to force a specific ordering in
            graph execution.)
          items:
            type: string
          type: array
        workspaces:
          description: >-
            Workspaces maps workspaces from the pipeline spec to the workspaces
            declared in the Task.
          items:
            $ref: '#/components/schemas/WorkspacePipelineTaskBinding'
          type: array
        taskRef:
          $ref: '#/components/schemas/TaskRef'
          description: Reference to a specific instance of a task.
      id: PipelineTask
    ListConnectionsResponse:
      description: Message for response to listing Connections.
      properties:
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return.
        connections:
          description: The list of Connections.
          items:
            $ref: '#/components/schemas/Connection'
          type: array
      type: object
      id: ListConnectionsResponse
    Location:
      properties:
        metadata:
          type: object
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        name:
          type: string
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
      id: Location
      type: object
      description: A resource that represents a Google Cloud location.
    GoogleDevtoolsCloudbuildV2ServiceDirectoryConfig:
      id: GoogleDevtoolsCloudbuildV2ServiceDirectoryConfig
      properties:
        service:
          description: >-
            Required. The Service Directory service name. Format:
            projects/{project}/locations/{location}/namespaces/{namespace}/services/{service}.
          type: string
      type: object
      description: >-
        ServiceDirectoryConfig represents Service Directory configuration for a
        connection.
    WhenExpression:
      description: Conditions that need to be true for the task to run.
      type: object
      id: WhenExpression
      properties:
        expressionOperator:
          description: Operator that represents an Input's relationship to the values
          enum:
            - EXPRESSION_OPERATOR_UNSPECIFIED
            - IN
            - NOT_IN
          type: string
          enumDescriptions:
            - Default enum type; should not be used.
            - Input is in values.
            - Input is not in values.
        input:
          type: string
          description: >-
            Input is the string for guard checking which can be a static input
            or an output from a parent Task.
        values:
          description: >-
            Values is an array of strings, which is compared against the input,
            for guard checking.
          items:
            type: string
          type: array
    UserCredential:
      id: UserCredential
      properties:
        username:
          readOnly: true
          description: Output only. The username associated to this token.
          type: string
        userTokenSecretVersion:
          description: >-
            Required. A SecretManager resource containing the user token that
            authorizes the Cloud Build connection. Format:
            `projects/*/secrets/*/versions/*`.
          type: string
      description: >-
        Represents a personal access token that authorized the Connection, and
        associated metadata.
      type: object
    PropertySpec:
      properties:
        type:
          description: A type for the object.
          enum:
            - TYPE_UNSPECIFIED
            - STRING
          type: string
          enumDescriptions:
            - Default enum type; should not be used.
            - Default
      id: PropertySpec
      type: object
      description: PropertySpec holds information about a property in an object.
    Step:
      description: >-
        Step embeds the Container type, which allows it to include fields not
        provided by Container.
      id: Step
      type: object
      properties:
        timeout:
          format: google-duration
          type: string
          description: Time after which the Step times out. Defaults to never.
        name:
          description: Name of the container specified as a DNS_LABEL.
          type: string
        args:
          description: Arguments to the entrypoint.
          items:
            type: string
          type: array
        params:
          items:
            $ref: '#/components/schemas/Param'
          type: array
          description: Optional. Optional parameters passed to the StepAction.
        workingDir:
          description: Container's working directory.
          type: string
        image:
          type: string
          description: Docker image name.
        env:
          description: List of environment variables to set in the container.
          type: array
          items:
            $ref: '#/components/schemas/EnvVar'
        onError:
          type: string
          description: >-
            Optional. OnError defines the exiting behavior on error can be set
            to [ continue | stopAndFail ]
          enumDescriptions:
            - Default enum type; should not be used.
            - >-
              StopAndFail indicates exit if the step/task exits with non-zero
              exit code
            - >-
              Continue indicates continue executing the rest of the steps/tasks
              irrespective of the exit code
          enum:
            - ON_ERROR_TYPE_UNSPECIFIED
            - STOP_AND_FAIL
            - CONTINUE
        ref:
          $ref: '#/components/schemas/StepRef'
          description: Optional. Optional reference to a remote StepAction.
        securityContext:
          description: >-
            Optional. SecurityContext defines the security options the Step
            should be run with. If set, the fields of SecurityContext override
            the equivalent fields of PodSecurityContext. More info:
            https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
            +optional
          $ref: '#/components/schemas/SecurityContext'
        script:
          type: string
          description: The contents of an executable file to execute.
        volumeMounts:
          items:
            $ref: '#/components/schemas/VolumeMount'
          type: array
          description: Pod volumes to mount into the container's filesystem.
        command:
          items:
            type: string
          type: array
          description: Entrypoint array.
    Security:
      description: Security configuration.
      properties:
        serviceAccount:
          type: string
          description: IAM service account whose credentials will be used at runtime.
        privilegeMode:
          deprecated: true
          description: Optional. Privilege mode.
          enumDescriptions:
            - Default to PRIVILEGED.
            - Privileged mode.
            - Unprivileged mode.
          type: string
          enum:
            - PRIVILEGE_MODE_UNSPECIFIED
            - PRIVILEGED
            - UNPRIVILEGED
      id: Security
      type: object
    Probe:
      type: object
      description: >-
        Probe describes a health check to be performed against a container to
        determine whether it is alive or ready to receive traffic.
      id: Probe
      properties:
        exec:
          $ref: '#/components/schemas/ExecAction'
          description: Optional. Exec specifies the action to take. +optional
        periodSeconds:
          description: >-
            Optional. How often (in seconds) to perform the probe. Default to 10
            seconds. Minimum value is 1. +optional
          type: integer
          format: int32
    Expr:
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      id: Expr
      properties:
        expression:
          type: string
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
        location:
          type: string
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
      type: object
    WorkspacePipelineTaskBinding:
      id: WorkspacePipelineTaskBinding
      properties:
        subPath:
          type: string
          description: >-
            Optional. SubPath is optionally a directory on the volume which
            should be used for this binding (i.e. the volume will be mounted at
            this sub directory). +optional
        name:
          type: string
          description: Name of the workspace as declared by the task.
        workspace:
          type: string
          description: Name of the workspace declared by the pipeline.
      type: object
      description: >-
        WorkspacePipelineTaskBinding maps workspaces from the PipelineSpec to
        the workspaces declared in the Task.
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      id: Empty
      properties: {}
    StepTemplate:
      type: object
      properties:
        env:
          items:
            $ref: '#/components/schemas/EnvVar'
          type: array
          description: >-
            Optional. List of environment variables to set in the Step. Cannot
            be updated.
        volumeMounts:
          description: Optional. Pod volumes to mount into the container's filesystem.
          items:
            $ref: '#/components/schemas/VolumeMount'
          type: array
      id: StepTemplate
      description: >-
        StepTemplate can be used as the basis for all step containers within the
        Task, so that the steps inherit settings on the base container.
    VolumeSource:
      type: object
      properties:
        emptyDir:
          $ref: '#/components/schemas/EmptyDirVolumeSource'
          description: A temporary directory that shares a pod's lifetime.
        name:
          description: >-
            Name of the Volume. Must be a DNS_LABEL and unique within the pod.
            More info:
            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          type: string
      description: Volumes available to mount.
      id: VolumeSource
    BatchCreateRepositoriesRequest:
      id: BatchCreateRepositoriesRequest
      description: Message for creating repositoritories in batch.
      properties:
        requests:
          description: >-
            Required. The request messages specifying the repositories to
            create.
          type: array
          items:
            $ref: '#/components/schemas/CreateRepositoryRequest'
      type: object
    Binding:
      type: object
      description: Associates `members`, or principals, with a `role`.
      properties:
        condition:
          $ref: '#/components/schemas/Expr'
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          items:
            type: string
          type: array
      id: Binding
    FetchReadWriteTokenResponse:
      id: FetchReadWriteTokenResponse
      description: Message for responding to get read/write token.
      type: object
      properties:
        expirationTime:
          description: Expiration timestamp. Can be empty if unknown or non-expiring.
          format: google-datetime
          type: string
        token:
          description: The token content.
          type: string
    PipelineRunResult:
      type: object
      description: PipelineRunResult used to describe the results of a pipeline
      properties:
        name:
          readOnly: true
          type: string
          description: Output only. Name of the TaskRun
        value:
          readOnly: true
          description: Output only. Value of the result.
          $ref: '#/components/schemas/ResultValue'
      id: PipelineRunResult
    FetchGitRefsResponse:
      id: FetchGitRefsResponse
      type: object
      properties:
        refNames:
          type: array
          items:
            type: string
          description: Name of the refs fetched.
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
      description: Response for fetching git refs
    FetchReadWriteTokenRequest:
      description: Message for fetching SCM read/write token.
      type: object
      id: FetchReadWriteTokenRequest
      properties: {}
    EmbeddedTask:
      description: EmbeddedTask defines a Task that is embedded in a Pipeline.
      properties:
        taskSpec:
          $ref: '#/components/schemas/TaskSpec'
          description: Spec to instantiate this TaskRun.
        annotations:
          description: User annotations. See https://google.aip.dev/128#annotations
          additionalProperties:
            type: string
          type: object
      id: EmbeddedTask
      type: object
    Param:
      properties:
        value:
          description: Value of the parameter.
          $ref: '#/components/schemas/ParamValue'
        name:
          type: string
          description: Name of the parameter.
      id: Param
      type: object
      description: >-
        Param defined with name and value. PipelineRef can be used to refer to a
        specific instance of a Pipeline.
    Sidecar:
      description: Sidecars run alongside the Task's step containers.
      id: Sidecar
      properties:
        volumeMounts:
          description: Pod volumes to mount into the container's filesystem.
          type: array
          items:
            $ref: '#/components/schemas/VolumeMount'
        image:
          type: string
          description: Docker image name.
        env:
          description: List of environment variables to set in the container.
          items:
            $ref: '#/components/schemas/EnvVar'
          type: array
        script:
          type: string
          description: The contents of an executable file to execute.
        securityContext:
          $ref: '#/components/schemas/SecurityContext'
          description: Optional. Security options the container should be run with.
        name:
          type: string
          description: Name of the Sidecar.
        workingDir:
          type: string
          description: Container's working directory.
        args:
          items:
            type: string
          type: array
          description: Arguments to the entrypoint.
        command:
          items:
            type: string
          description: Entrypoint array.
          type: array
        readinessProbe:
          $ref: '#/components/schemas/Probe'
          description: >-
            Optional. Periodic probe of Sidecar service readiness. Container
            will be removed from service endpoints if the probe fails. Cannot be
            updated. More info:
            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
            +optional
      type: object
    RunWorkflowCustomOperationMetadata:
      properties:
        verb:
          type: string
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
        endTime:
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
        pipelineRunId:
          readOnly: true
          type: string
          description: Output only. ID of the pipeline run created by RunWorkflow.
        apiVersion:
          readOnly: true
          type: string
          description: Output only. API version used to start the operation.
        requestedCancellation:
          type: boolean
          readOnly: true
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
          type: string
        target:
          type: string
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
      id: RunWorkflowCustomOperationMetadata
      description: >-
        Represents the custom metadata of the RunWorkflow long-running
        operation.
      type: object
    VolumeMount:
      id: VolumeMount
      description: Pod volumes to mount into the container's filesystem.
      properties:
        name:
          type: string
          description: Name of the volume.
        subPath:
          type: string
          description: >-
            Path within the volume from which the container's volume should be
            mounted. Defaults to "" (volume's root).
        mountPath:
          description: >-
            Path within the container at which the volume should be mounted.
            Must not contain ':'.
          type: string
        readOnly:
          description: >-
            Mounted read-only if true, read-write otherwise (false or
            unspecified).
          type: boolean
        subPathExpr:
          description: >-
            Expanded path within the volume from which the container's volume
            should be mounted. Behaves similarly to SubPath but environment
            variable references $(VAR_NAME) are expanded using the container's
            environment. Defaults to "" (volume's root).
          type: string
      type: object
    SkippedTask:
      id: SkippedTask
      type: object
      properties:
        reason:
          description: Output only. Reason is the cause of the PipelineTask being skipped.
          readOnly: true
          type: string
        name:
          type: string
          description: Name is the Pipeline Task name
        whenExpressions:
          description: >-
            WhenExpressions is the list of checks guarding the execution of the
            PipelineTask
          items:
            $ref: '#/components/schemas/WhenExpression'
          type: array
      description: >-
        SkippedTask is used to describe the Tasks that were skipped due to their
        When Expressions evaluating to False.
    Policy:
      id: Policy
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          format: int32
          type: integer
        auditConfigs:
          items:
            $ref: '#/components/schemas/AuditConfig'
          type: array
          description: Specifies cloud audit logging configuration for this policy.
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          format: byte
          type: string
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: '#/components/schemas/Binding'
          type: array
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
    Connection:
      description: >-
        A connection to a SCM like GitHub, GitHub Enterprise, Bitbucket Data
        Center, Bitbucket Cloud or GitLab.
      type: object
      properties:
        updateTime:
          type: string
          format: google-datetime
          description: >-
            Output only. Server assigned timestamp for when the connection was
            updated.
          readOnly: true
        githubConfig:
          description: Configuration for connections to github.com.
          $ref: '#/components/schemas/GitHubConfig'
        etag:
          type: string
          description: >-
            This checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding.
        bitbucketDataCenterConfig:
          description: Configuration for connections to Bitbucket Data Center.
          $ref: '#/components/schemas/BitbucketDataCenterConfig'
        gitlabConfig:
          $ref: '#/components/schemas/GoogleDevtoolsCloudbuildV2GitLabConfig'
          description: >-
            Configuration for connections to gitlab.com or an instance of GitLab
            Enterprise.
        annotations:
          description: Optional. Allows clients to store small amounts of arbitrary data.
          additionalProperties:
            type: string
          type: object
        name:
          type: string
          description: >-
            Immutable. The resource name of the connection, in the format
            `projects/{project}/locations/{location}/connections/{connection_id}`.
        reconciling:
          readOnly: true
          description: >-
            Output only. Set to true when the connection is being set up or
            updated in the background.
          type: boolean
        githubEnterpriseConfig:
          $ref: >-
            #/components/schemas/GoogleDevtoolsCloudbuildV2GitHubEnterpriseConfig
          description: Configuration for connections to an instance of GitHub Enterprise.
        bitbucketCloudConfig:
          $ref: '#/components/schemas/BitbucketCloudConfig'
          description: Configuration for connections to Bitbucket Cloud.
        createTime:
          description: >-
            Output only. Server assigned timestamp for when the connection was
            created.
          readOnly: true
          format: google-datetime
          type: string
        installationState:
          readOnly: true
          description: Output only. Installation state of the Connection.
          $ref: '#/components/schemas/InstallationState'
        disabled:
          description: >-
            Optional. If disabled is set to true, functionality is disabled for
            this connection. Repository based API methods and webhooks
            processing for repositories in this connection will be disabled.
          type: boolean
      id: Connection
    Worker:
      description: Configuration for the worker.
      type: object
      properties:
        machineType:
          description: Optional. Machine type of a worker, default is "e2-standard-2".
          type: string
      id: Worker
    Status:
      id: Status
      type: object
      properties:
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
        code:
          format: int32
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
    SecretVolumeSource:
      id: SecretVolumeSource
      properties:
        secretName:
          description: Name of the secret referenced by the WorkspaceBinding.
          type: string
        secretVersion:
          description: >-
            Optional. Resource name of the SecretVersion. In format:
            projects/*/secrets/*/versions/*
          type: string
      description: Secret Volume Source.
      type: object
  parameters:
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  x-stackQL-resources:
    operations:
      id: google.cloudbuild.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_operations_get
        insert: []
        update: []
        replace: []
        delete: []
    repositories:
      id: google.cloudbuild.repositories
      name: repositories
      title: Repositories
      methods:
        projects_locations_connections_repositories_access_read_token:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1repositories~1{repositoriesId}:accessReadToken/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_connections_repositories_delete:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1repositories~1{repositoriesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_connections_repositories_get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1repositories~1{repositoriesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_connections_repositories_create:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1repositories/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_connections_repositories_list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1repositories/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.repositories
        projects_locations_connections_repositories_access_read_write_token:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1repositories~1{repositoriesId}:accessReadWriteToken/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_connections_repositories_batch_create:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1repositories:batchCreate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/repositories/methods/projects_locations_connections_repositories_get
          - $ref: >-
              #/components/x-stackQL-resources/repositories/methods/projects_locations_connections_repositories_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/repositories/methods/projects_locations_connections_repositories_create
          - $ref: >-
              #/components/x-stackQL-resources/repositories/methods/projects_locations_connections_repositories_batch_create
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/repositories/methods/projects_locations_connections_repositories_delete
    repositories_git_refs:
      id: google.cloudbuild.repositories_git_refs
      name: repositories_git_refs
      title: Repositories_git_refs
      methods:
        projects_locations_connections_repositories_fetch_git_refs:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1repositories~1{repositoriesId}:fetchGitRefs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/repositories_git_refs/methods/projects_locations_connections_repositories_fetch_git_refs
        insert: []
        update: []
        replace: []
        delete: []
    connections:
      id: google.cloudbuild.connections
      name: connections
      title: Connections
      methods:
        projects_locations_connections_get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_connections_patch:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_connections_delete:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_connections_create:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_connections_list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.connections
        projects_locations_connections_process_webhook:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections:processWebhook/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/connections/methods/projects_locations_connections_get
          - $ref: >-
              #/components/x-stackQL-resources/connections/methods/projects_locations_connections_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/connections/methods/projects_locations_connections_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/connections/methods/projects_locations_connections_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/connections/methods/projects_locations_connections_delete
    connections_linkable_repositories:
      id: google.cloudbuild.connections_linkable_repositories
      name: connections_linkable_repositories
      title: Connections_linkable_repositories
      methods:
        projects_locations_connections_fetch_linkable_repositories:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}:fetchLinkableRepositories/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/connections_linkable_repositories/methods/projects_locations_connections_fetch_linkable_repositories
        insert: []
        update: []
        replace: []
        delete: []
    connections_iam_policies:
      id: google.cloudbuild.connections_iam_policies
      name: connections_iam_policies
      title: Connections_iam_policies
      methods:
        projects_locations_connections_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_connections_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_connections_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/connections_iam_policies/methods/projects_locations_connections_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/connections_iam_policies/methods/projects_locations_connections_set_iam_policy
        delete: []
    locations:
      id: google.cloudbuild.locations
      name: locations
      title: Locations
      methods:
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/locations/methods/projects_locations_get
          - $ref: >-
              #/components/x-stackQL-resources/locations/methods/projects_locations_list
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/upload_protocol'
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: cloudbuild.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: cloudbuild.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/repositories/{repositoriesId}:accessReadToken:
    parameters: *ref_1
    post:
      description: Fetches read token of a given repository.
      operationId: cloudbuild.projects.locations.connections.repositories.accessReadToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchReadTokenRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchReadTokenResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/repositories/{repositoriesId}:
    parameters: *ref_1
    delete:
      description: Deletes a single repository.
      operationId: cloudbuild.projects.locations.connections.repositories.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
    get:
      description: Gets details of a single repository.
      operationId: cloudbuild.projects.locations.connections.repositories.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/repositories:
    parameters: *ref_1
    post:
      description: Creates a Repository.
      operationId: cloudbuild.projects.locations.connections.repositories.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: repositoryId
          schema:
            type: string
    get:
      description: Lists Repositories in a given connection.
      operationId: cloudbuild.projects.locations.connections.repositories.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepositoriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v2/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/repositories/{repositoriesId}:accessReadWriteToken:
    parameters: *ref_1
    post:
      description: Fetches read/write token of a given repository.
      operationId: >-
        cloudbuild.projects.locations.connections.repositories.accessReadWriteToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchReadWriteTokenRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchReadWriteTokenResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/repositories/{repositoriesId}:fetchGitRefs:
    parameters: *ref_1
    get:
      description: Fetch the list of branches or tags for a given repository.
      operationId: cloudbuild.projects.locations.connections.repositories.fetchGitRefs
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchGitRefsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: refType
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/repositories:batchCreate:
    parameters: *ref_1
    post:
      description: Creates multiple repositories inside a connection.
      operationId: cloudbuild.projects.locations.connections.repositories.batchCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreateRepositoriesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single connection.
      operationId: cloudbuild.projects.locations.connections.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a single connection.
      operationId: cloudbuild.projects.locations.connections.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a single connection.
      operationId: cloudbuild.projects.locations.connections.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v2/projects/{projectsId}/locations/{locationsId}/connections:
    parameters: *ref_1
    post:
      description: Creates a Connection.
      operationId: cloudbuild.projects.locations.connections.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: connectionId
          schema:
            type: string
    get:
      description: Lists Connections in a given project and location.
      operationId: cloudbuild.projects.locations.connections.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:fetchLinkableRepositories:
    parameters: *ref_1
    get:
      description: >-
        FetchLinkableRepositories get repositories from SCM that are accessible
        and could be added to the connection.
      operationId: cloudbuild.projects.locations.connections.fetchLinkableRepositories
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchLinkableRepositoriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v2/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: cloudbuild.projects.locations.connections.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/connections:processWebhook:
    parameters: *ref_1
    post:
      description: ProcessWebhook is called by the external SCM for notifying of events.
      operationId: cloudbuild.projects.locations.connections.processWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HttpBody'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: webhookKey
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: cloudbuild.projects.locations.connections.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v2/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: cloudbuild.projects.locations.connections.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: cloudbuild.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: cloudbuild.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
