openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Asset API
  description: The Cloud Asset API manages the history and inventory of Google Cloud resources.
  version: v1
  x-discovery-doc-revision: '20230811'
  x-generated-date: '2023-08-17'
externalDocs:
  url: 'https://cloud.google.com/asset-inventory/docs/quickstart'
servers:
  - url: 'https://cloudasset.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    RelationshipAttributes:
      deprecated: true
      properties:
        sourceResourceType:
          type: string
          description: 'The source asset type. Example: `compute.googleapis.com/Instance`'
        type:
          type: string
          description: 'The unique identifier of the relationship type. Example: `INSTANCE_TO_INSTANCEGROUP`'
        action:
          description: 'The detail of the relationship, e.g. `contains`, `attaches`'
          type: string
        targetResourceType:
          type: string
          description: 'The target asset type. Example: `compute.googleapis.com/Disk`'
      description: 'DEPRECATED. This message only presents for the purpose of backward-compatibility. The server will never populate this message in responses. The relationship attributes which include `type`, `source_resource_type`, `target_resource_type` and `action`.'
      id: RelationshipAttributes
      type: object
    GoogleIdentityAccesscontextmanagerV1BasicLevel:
      type: object
      id: GoogleIdentityAccesscontextmanagerV1BasicLevel
      description: '`BasicLevel` is an `AccessLevel` using a set of recommended features.'
      properties:
        combiningFunction:
          enum:
            - AND
            - OR
          description: 'How the `conditions` list should be combined to determine if a request is granted this `AccessLevel`. If AND is used, each `Condition` in `conditions` must be satisfied for the `AccessLevel` to be applied. If OR is used, at least one `Condition` in `conditions` must be satisfied for the `AccessLevel` to be applied. Default behavior is AND.'
          type: string
          enumDescriptions:
            - All `Conditions` must be true for the `BasicLevel` to be true.
            - 'If at least one `Condition` is true, then the `BasicLevel` is true.'
        conditions:
          items:
            $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1Condition'
          description: Required. A list of requirements for the `AccessLevel` to be granted.
          type: array
    AnalyzeOrgPolicyGovernedAssetsResponse:
      description: The response message for AssetService.AnalyzeOrgPolicyGovernedAssets.
      properties:
        governedAssets:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset'
          description: The list of the analyzed governed assets.
        nextPageToken:
          description: The page token to fetch the next page for AnalyzeOrgPolicyGovernedAssetsResponse.governed_assets.
          type: string
        constraint:
          description: The definition of the constraint in the request.
          $ref: '#/components/schemas/AnalyzerOrgPolicyConstraint'
      id: AnalyzeOrgPolicyGovernedAssetsResponse
      type: object
    IamPolicyAnalysisQuery:
      type: object
      description: IAM policy analysis query message.
      id: IamPolicyAnalysisQuery
      properties:
        identitySelector:
          description: Optional. Specifies an identity for analysis.
          $ref: '#/components/schemas/IdentitySelector'
        scope:
          description: 'Required. The relative name of the root asset. Only resources and IAM policies within the scope will be analyzed. This can only be an organization number (such as "organizations/123"), a folder number (such as "folders/123"), a project ID (such as "projects/my-project-id"), or a project number (such as "projects/12345"). To know how to get organization id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id). To know how to get folder or project id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-folders#viewing_or_listing_folders_and_projects).'
          type: string
        conditionContext:
          $ref: '#/components/schemas/ConditionContext'
          description: Optional. The hypothetical context for IAM conditions evaluation.
        resourceSelector:
          description: Optional. Specifies a resource for analysis.
          $ref: '#/components/schemas/ResourceSelector'
        options:
          description: Optional. The query options.
          $ref: '#/components/schemas/Options'
        accessSelector:
          $ref: '#/components/schemas/AccessSelector'
          description: Optional. Specifies roles or permissions for analysis. This is optional.
    Binding:
      description: 'Associates `members`, or principals, with a `role`.'
      id: Binding
      properties:
        condition:
          $ref: '#/components/schemas/Expr'
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
        members:
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
          items:
            type: string
          type: array
        role:
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
          type: string
      type: object
    IamPolicySearchResult:
      description: 'A result of IAM Policy search, containing information of an IAM policy.'
      properties:
        explanation:
          $ref: '#/components/schemas/Explanation'
          description: Explanation about the IAM policy search result. It contains additional information to explain why the search result matches the query.
        folders:
          type: array
          items:
            type: string
          description: 'The folder(s) that the IAM policy belongs to, in the form of folders/{FOLDER_NUMBER}. This field is available when the IAM policy belongs to one or more folders. To search against `folders`: * use a field query. Example: `folders:(123 OR 456)` * use a free text query. Example: `123` * specify the `scope` field as this folder in your search request.'
        policy:
          $ref: '#/components/schemas/Policy'
          description: 'The IAM policy directly set on the given resource. Note that the original IAM policy can contain multiple bindings. This only contains the bindings that match the given query. For queries that don''t contain a constrain on policies (e.g., an empty query), this contains all the bindings. To search against the `policy` bindings: * use a field query: - query by the policy contained members. Example: `policy:amy@gmail.com` - query by the policy contained roles. Example: `policy:roles/compute.admin` - query by the policy contained roles'' included permissions. Example: `policy.role.permissions:compute.instances.create`'
        resource:
          description: 'The full resource name of the resource associated with this IAM policy. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. See [Cloud Asset Inventory Resource Name Format](https://cloud.google.com/asset-inventory/docs/resource-name-format) for more information. To search against the `resource`: * use a field query. Example: `resource:organizations/123`'
          type: string
        project:
          type: string
          description: 'The project that the associated Google Cloud resource belongs to, in the form of projects/{PROJECT_NUMBER}. If an IAM policy is set on a resource (like VM instance, Cloud Storage bucket), the project field will indicate the project that contains the resource. If an IAM policy is set on a folder or orgnization, this field will be empty. To search against the `project`: * specify the `scope` field as this project in your search request.'
        assetType:
          description: 'The type of the resource associated with this IAM policy. Example: `compute.googleapis.com/Disk`. To search against the `asset_type`: * specify the `asset_types` field in your search request.'
          type: string
        organization:
          description: 'The organization that the IAM policy belongs to, in the form of organizations/{ORGANIZATION_NUMBER}. This field is available when the IAM policy belongs to an organization. To search against `organization`: * use a field query. Example: `organization:123` * use a free text query. Example: `123` * specify the `scope` field as this organization in your search request.'
          type: string
      type: object
      id: IamPolicySearchResult
    SearchAllIamPoliciesResponse:
      id: SearchAllIamPoliciesResponse
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/IamPolicySearchResult'
          description: A list of IAM policies that match the search query. Related information such as the associated resource is returned along with the policy.
        nextPageToken:
          type: string
          description: 'Set if there are more results than those appearing in this response; to get the next set of results, call this method again, using this value as the `page_token`.'
      description: Search all IAM policies response.
      type: object
    AnalyzerOrgPolicyConstraint:
      properties:
        googleDefinedConstraint:
          $ref: '#/components/schemas/GoogleCloudAssetV1Constraint'
          description: The definition of the canned constraint defined by Google.
        customConstraint:
          $ref: '#/components/schemas/GoogleCloudAssetV1CustomConstraint'
          description: The definition of the custom constraint.
      description: The organization policy constraint definition.
      type: object
      id: AnalyzerOrgPolicyConstraint
    UpdateFeedRequest:
      id: UpdateFeedRequest
      properties:
        updateMask:
          format: google-fieldmask
          type: string
          description: 'Required. Only updates the `feed` fields indicated by this mask. The field mask must not be empty, and it must not contain fields that are immutable or only set by the server.'
        feed:
          description: 'Required. The new values of feed details. It must match an existing feed and the field `name` must be in the format of: projects/project_number/feeds/feed_id or folders/folder_number/feeds/feed_id or organizations/organization_number/feeds/feed_id.'
          $ref: '#/components/schemas/Feed'
      type: object
      description: Update asset feed request.
    PolicyInfo:
      properties:
        attachedResource:
          type: string
          description: The full resource name the policy is directly attached to.
        policy:
          $ref: '#/components/schemas/Policy'
          description: The IAM policy that's directly attached to the attached_resource.
      id: PolicyInfo
      type: object
      description: The IAM policy and its attached resource.
    GoogleCloudAssetV1AccessControlList:
      properties:
        conditionEvaluation:
          description: 'Condition evaluation for this AccessControlList, if there is a condition defined in the above IAM policy binding.'
          $ref: '#/components/schemas/ConditionEvaluation'
        resourceEdges:
          description: Resource edges of the graph starting from the policy attached resource to any descendant resources. The Edge.source_node contains the full resource name of a parent resource and Edge.target_node contains the full resource name of a child resource. This field is present only if the output_resource_edges option is enabled in request.
          items:
            $ref: '#/components/schemas/GoogleCloudAssetV1Edge'
          type: array
        accesses:
          items:
            $ref: '#/components/schemas/GoogleCloudAssetV1Access'
          description: 'The accesses that match one of the following conditions: - The access_selector, if it is specified in request; - Otherwise, access specifiers reachable from the policy binding''s role.'
          type: array
        resources:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAssetV1Resource'
          description: 'The resources that match one of the following conditions: - The resource_selector, if it is specified in request; - Otherwise, resources reachable from the policy attached resource.'
      description: 'An access control list, derived from the above IAM policy binding, which contains a set of resources and accesses. May include one item from each set to compose an access control entry. NOTICE that there could be multiple access control lists for one IAM policy binding. The access control lists are created based on resource and access combinations. For example, assume we have the following cases in one IAM policy binding: - Permission P1 and P2 apply to resource R1 and R2; - Permission P3 applies to resource R2 and R3; This will result in the following access control lists: - AccessControlList 1: [R1, R2], [P1, P2] - AccessControlList 2: [R2, R3], [P3]'
      id: GoogleCloudAssetV1AccessControlList
      type: object
    GoogleCloudAssetV1Constraint:
      description: The definition of a constraint.
      id: GoogleCloudAssetV1Constraint
      properties:
        booleanConstraint:
          $ref: '#/components/schemas/GoogleCloudAssetV1BooleanConstraint'
          description: Defines this constraint as being a BooleanConstraint.
        listConstraint:
          description: Defines this constraint as being a ListConstraint.
          $ref: '#/components/schemas/GoogleCloudAssetV1ListConstraint'
        constraintDefault:
          description: The evaluation behavior of this constraint in the absence of 'Policy'.
          enumDescriptions:
            - This is only used for distinguishing unset values and should never be used.
            - Indicate that all values are allowed for list constraints. Indicate that enforcement is off for boolean constraints.
            - Indicate that all values are denied for list constraints. Indicate that enforcement is on for boolean constraints.
          type: string
          enum:
            - CONSTRAINT_DEFAULT_UNSPECIFIED
            - ALLOW
            - DENY
        name:
          description: 'The unique name of the constraint. Format of the name should be * `constraints/{constraint_name}` For example, `constraints/compute.disableSerialPortAccess`.'
          type: string
        description:
          description: Detailed description of what this `Constraint` controls as well as how and where it is enforced.
          type: string
        displayName:
          description: The human readable name of the constraint.
          type: string
      type: object
    AnalyzeOrgPolicyGovernedContainersResponse:
      description: The response message for AssetService.AnalyzeOrgPolicyGovernedContainers.
      id: AnalyzeOrgPolicyGovernedContainersResponse
      type: object
      properties:
        governedContainers:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAssetV1GovernedContainer'
          description: The list of the analyzed governed containers.
        nextPageToken:
          type: string
          description: The page token to fetch the next page for AnalyzeOrgPolicyGovernedContainersResponse.governed_containers.
        constraint:
          description: The definition of the constraint in the request.
          $ref: '#/components/schemas/AnalyzerOrgPolicyConstraint'
    Options:
      type: object
      properties:
        expandResources:
          type: boolean
          description: 'Optional. If true and IamPolicyAnalysisQuery.resource_selector is not specified, the resource section of the result will expand any resource attached to an IAM policy to include resources lower in the resource hierarchy. For example, if the request analyzes for which resources user A has permission P, and the results include an IAM policy with P on a Google Cloud folder, the results will also include resources in that folder with permission P. If true and IamPolicyAnalysisQuery.resource_selector is specified, the resource section of the result will expand the specified resource to include resources lower in the resource hierarchy. Only project or lower resources are supported. Folder and organization resources cannot be used together with this option. For example, if the request analyzes for which users have permission P on a Google Cloud project with this option enabled, the results will include all users who have permission P on that project or any lower resource. If true, the default max expansion per resource is 1000 for AssetService.AnalyzeIamPolicy][] and 100000 for AssetService.AnalyzeIamPolicyLongrunning][]. Default is false.'
        outputGroupEdges:
          type: boolean
          description: 'Optional. If true, the result will output the relevant membership relationships between groups and other groups, and between groups and principals. Default is false.'
        analyzeServiceAccountImpersonation:
          description: 'Optional. If true, the response will include access analysis from identities to resources via service account impersonation. This is a very expensive operation, because many derived queries will be executed. We highly recommend you use AssetService.AnalyzeIamPolicyLongrunning RPC instead. For example, if the request analyzes for which resources user A has permission P, and there''s an IAM policy states user A has iam.serviceAccounts.getAccessToken permission to a service account SA, and there''s another IAM policy states service account SA has permission P to a Google Cloud folder F, then user A potentially has access to the Google Cloud folder F. And those advanced analysis results will be included in AnalyzeIamPolicyResponse.service_account_impersonation_analysis. Another example, if the request analyzes for who has permission P to a Google Cloud folder F, and there''s an IAM policy states user A has iam.serviceAccounts.actAs permission to a service account SA, and there''s another IAM policy states service account SA has permission P to the Google Cloud folder F, then user A potentially has access to the Google Cloud folder F. And those advanced analysis results will be included in AnalyzeIamPolicyResponse.service_account_impersonation_analysis. Only the following permissions are considered in this analysis: * `iam.serviceAccounts.actAs` * `iam.serviceAccounts.signBlob` * `iam.serviceAccounts.signJwt` * `iam.serviceAccounts.getAccessToken` * `iam.serviceAccounts.getOpenIdToken` * `iam.serviceAccounts.implicitDelegation` Default is false.'
          type: boolean
        expandGroups:
          description: 'Optional. If true, the identities section of the result will expand any Google groups appearing in an IAM policy binding. If IamPolicyAnalysisQuery.identity_selector is specified, the identity in the result will be determined by the selector, and this flag is not allowed to set. If true, the default max expansion per group is 1000 for AssetService.AnalyzeIamPolicy][]. Default is false.'
          type: boolean
        expandRoles:
          type: boolean
          description: 'Optional. If true, the access section of result will expand any roles appearing in IAM policy bindings to include their permissions. If IamPolicyAnalysisQuery.access_selector is specified, the access section of the result will be determined by the selector, and this flag is not allowed to set. Default is false.'
        outputResourceEdges:
          description: 'Optional. If true, the result will output the relevant parent/child relationships between resources. Default is false.'
          type: boolean
      description: Contains query options.
      id: Options
    GoogleCloudOrgpolicyV1BooleanPolicy:
      type: object
      id: GoogleCloudOrgpolicyV1BooleanPolicy
      properties:
        enforced:
          description: 'If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. Suppose you have a `Constraint` `constraints/compute.disableSerialPortAccess` with `constraint_default` set to `ALLOW`. A `Policy` for that `Constraint` exhibits the following behavior: - If the `Policy` at this resource has enforced set to `false`, serial port connection attempts will be allowed. - If the `Policy` at this resource has enforced set to `true`, serial port connection attempts will be refused. - If the `Policy` at this resource is `RestoreDefault`, serial port connection attempts will be allowed. - If no `Policy` is set at this resource or anywhere higher in the resource hierarchy, serial port connection attempts will be allowed. - If no `Policy` is set at this resource, but one exists higher in the resource hierarchy, the behavior is as if the`Policy` were set at this resource. The following examples demonstrate the different possible layerings: Example 1 (nearest `Constraint` wins): `organizations/foo` has a `Policy` with: {enforced: false} `projects/bar` has no `Policy` set. The constraint at `projects/bar` and `organizations/foo` will not be enforced. Example 2 (enforcement gets replaced): `organizations/foo` has a `Policy` with: {enforced: false} `projects/bar` has a `Policy` with: {enforced: true} The constraint at `organizations/foo` is not enforced. The constraint at `projects/bar` is enforced. Example 3 (RestoreDefault): `organizations/foo` has a `Policy` with: {enforced: true} `projects/bar` has a `Policy` with: {RestoreDefault: {}} The constraint at `organizations/foo` is enforced. The constraint at `projects/bar` is not enforced, because `constraint_default` for the `Constraint` is `ALLOW`.'
          type: boolean
      description: Used in `policy_type` to specify how `boolean_policy` will behave at this resource.
    OsInfo:
      type: object
      properties:
        osconfigAgentVersion:
          description: The current version of the OS Config agent running on the VM.
          type: string
        kernelVersion:
          type: string
          description: The kernel version of the operating system.
        version:
          description: The version of the operating system.
          type: string
        shortName:
          description: 'The operating system short name. For example, ''windows'' or ''debian''.'
          type: string
        longName:
          type: string
          description: The operating system long name. For example 'Debian GNU/Linux 9' or 'Microsoft Window Server 2019 Datacenter'.
        kernelRelease:
          type: string
          description: The kernel release of the operating system.
        hostname:
          type: string
          description: The VM hostname.
        architecture:
          description: The system architecture of the operating system.
          type: string
      id: OsInfo
      description: Operating system information for the VM.
    AnalyzeMoveResponse:
      description: The response message for resource move analysis.
      type: object
      properties:
        moveAnalysis:
          description: The list of analyses returned from performing the intended resource move analysis. The analysis is grouped by different Google Cloud services.
          items:
            $ref: '#/components/schemas/MoveAnalysis'
          type: array
      id: AnalyzeMoveResponse
    Item:
      properties:
        updateTime:
          format: google-datetime
          type: string
          description: When this inventory item was last modified.
        createTime:
          type: string
          format: google-datetime
          description: When this inventory item was first detected.
        availablePackage:
          description: Software package available to be installed on the VM instance.
          $ref: '#/components/schemas/SoftwarePackage'
        originType:
          type: string
          enum:
            - ORIGIN_TYPE_UNSPECIFIED
            - INVENTORY_REPORT
          enumDescriptions:
            - Invalid. An origin type must be specified.
            - This inventory item was discovered as the result of the agent reporting inventory via the reporting API.
          description: The origin of this inventory item.
        id:
          type: string
          description: 'Identifier for this item, unique across items for this VM.'
        installedPackage:
          description: Software package present on the VM instance.
          $ref: '#/components/schemas/SoftwarePackage'
        type:
          enum:
            - TYPE_UNSPECIFIED
            - INSTALLED_PACKAGE
            - AVAILABLE_PACKAGE
          enumDescriptions:
            - Invalid. An type must be specified.
            - This represents a package that is installed on the VM.
            - This represents an update that is available for a package.
          type: string
          description: 'The specific type of inventory, correlating to its specific details.'
      id: Item
      type: object
      description: A single piece of inventory on a VM.
    GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource:
      properties:
        project:
          description: 'The project that this resource belongs to, in the format of projects/{PROJECT_NUMBER}. This field is available when the resource belongs to a project.'
          type: string
        organization:
          description: 'The organization that this resource belongs to, in the format of organizations/{ORGANIZATION_NUMBER}. This field is available when the resource belongs (directly or cascadingly) to an organization.'
          type: string
        folders:
          items:
            type: string
          description: 'The folder(s) that this resource belongs to, in the format of folders/{FOLDER_NUMBER}. This field is available when the resource belongs (directly or cascadingly) to one or more folders.'
          type: array
        fullResourceName:
          description: 'The [full resource name] (https://cloud.google.com/asset-inventory/docs/resource-name-format) of the Google Cloud resource.'
          type: string
        parent:
          description: 'The [full resource name] (https://cloud.google.com/asset-inventory/docs/resource-name-format) of the parent of AnalyzeOrgPolicyGovernedAssetsResponse.GovernedResource.full_resource_name.'
          type: string
      type: object
      id: GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource
      description: The Google Cloud resources governed by the organization policies of the AnalyzeOrgPolicyGovernedAssetsRequest.constraint.
    GoogleIdentityAccesscontextmanagerV1ApiOperation:
      properties:
        methodSelectors:
          description: API methods or permissions to allow. Method or permission must belong to the service specified by `service_name` field. A single MethodSelector entry with `*` specified for the `method` field will allow all methods AND permissions for the service specified in `service_name`.
          items:
            $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1MethodSelector'
          type: array
        serviceName:
          type: string
          description: The name of the API whose methods or permissions the IngressPolicy or EgressPolicy want to allow. A single ApiOperation with `service_name` field set to `*` will allow all methods AND permissions for all services.
      type: object
      id: GoogleIdentityAccesscontextmanagerV1ApiOperation
      description: Identification for an API Operation.
    GoogleIdentityAccesscontextmanagerV1IngressTo:
      type: object
      description: Defines the conditions under which an IngressPolicy matches a request. Conditions are based on information about the ApiOperation intended to be performed on the target resource of the request. The request must satisfy what is defined in `operations` AND `resources` in order to match.
      properties:
        resources:
          items:
            type: string
          description: 'A list of resources, currently only projects in the form `projects/`, protected by this ServicePerimeter that are allowed to be accessed by sources defined in the corresponding IngressFrom. If a single `*` is specified, then access to all resources inside the perimeter are allowed.'
          type: array
        operations:
          items:
            $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1ApiOperation'
          description: A list of ApiOperations allowed to be performed by the sources specified in corresponding IngressFrom in this ServicePerimeter.
          type: array
      id: GoogleIdentityAccesscontextmanagerV1IngressTo
    GoogleIdentityAccesscontextmanagerV1ServicePerimeter:
      description: '`ServicePerimeter` describes a set of Google Cloud resources which can freely import and export data amongst themselves, but not export outside of the `ServicePerimeter`. If a request with a source within this `ServicePerimeter` has a target outside of the `ServicePerimeter`, the request will be blocked. Otherwise the request is allowed. There are two types of Service Perimeter - Regular and Bridge. Regular Service Perimeters cannot overlap, a single Google Cloud project or VPC network can only belong to a single regular Service Perimeter. Service Perimeter Bridges can contain only Google Cloud projects as members, a single Google Cloud project may belong to multiple Service Perimeter Bridges.'
      properties:
        status:
          $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig'
          description: 'Current ServicePerimeter configuration. Specifies sets of resources, restricted services and access levels that determine perimeter content and boundaries.'
        perimeterType:
          enumDescriptions:
            - 'Regular Perimeter. When no value is specified, the perimeter uses this type.'
            - Perimeter Bridge.
          enum:
            - PERIMETER_TYPE_REGULAR
            - PERIMETER_TYPE_BRIDGE
          description: 'Perimeter type indicator. A single project or VPC network is allowed to be a member of single regular perimeter, but multiple service perimeter bridges. A project cannot be a included in a perimeter bridge without being included in regular perimeter. For perimeter bridges, the restricted service list as well as access level lists must be empty.'
          type: string
        spec:
          $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig'
          description: Proposed (or dry run) ServicePerimeter configuration. This configuration allows to specify and test ServicePerimeter configuration without enforcing actual access restrictions. Only allowed to be set when the "use_explicit_dry_run_spec" flag is set.
        description:
          type: string
          description: Description of the `ServicePerimeter` and its use. Does not affect behavior.
        useExplicitDryRunSpec:
          description: 'Use explicit dry run spec flag. Ordinarily, a dry-run spec implicitly exists for all Service Perimeters, and that spec is identical to the status for those Service Perimeters. When this flag is set, it inhibits the generation of the implicit spec, thereby allowing the user to explicitly provide a configuration ("spec") to use in a dry-run version of the Service Perimeter. This allows the user to test changes to the enforced config ("status") without actually enforcing them. This testing is done through analyzing the differences between currently enforced and suggested restrictions. use_explicit_dry_run_spec must bet set to True if any of the fields in the spec are set to non-default values.'
          type: boolean
        title:
          description: Human readable title. Must be unique within the Policy.
          type: string
        name:
          description: 'Resource name for the `ServicePerimeter`. Format: `accessPolicies/{access_policy}/servicePerimeters/{service_perimeter}`. The `service_perimeter` component must begin with a letter, followed by alphanumeric characters or `_`. After you create a `ServicePerimeter`, you cannot change its `name`.'
          type: string
      type: object
      id: GoogleIdentityAccesscontextmanagerV1ServicePerimeter
    QueryContent:
      id: QueryContent
      properties:
        iamPolicyAnalysisQuery:
          $ref: '#/components/schemas/IamPolicyAnalysisQuery'
          description: 'An IAM Policy Analysis query, which could be used in the AssetService.AnalyzeIamPolicy RPC or the AssetService.AnalyzeIamPolicyLongrunning RPC.'
      type: object
      description: The query content.
    AnalyzeIamPolicyResponse:
      description: A response message for AssetService.AnalyzeIamPolicy.
      type: object
      properties:
        fullyExplored:
          description: Represents whether all entries in the main_analysis and service_account_impersonation_analysis have been fully explored to answer the query in the request.
          type: boolean
        mainAnalysis:
          $ref: '#/components/schemas/IamPolicyAnalysis'
          description: The main analysis that matches the original request.
        serviceAccountImpersonationAnalysis:
          type: array
          description: The service account impersonation analysis if AnalyzeIamPolicyRequest.analyze_service_account_impersonation is enabled.
          items:
            $ref: '#/components/schemas/IamPolicyAnalysis'
      id: AnalyzeIamPolicyResponse
    GoogleIdentityAccesscontextmanagerV1EgressFrom:
      properties:
        identities:
          type: array
          items:
            type: string
          description: 'A list of identities that are allowed access through this [EgressPolicy]. Should be in the format of email address. The email address should represent individual user or service account only.'
        identityType:
          enumDescriptions:
            - No blanket identity group specified.
            - Authorize access from all identities outside the perimeter.
            - Authorize access from all human users outside the perimeter.
            - Authorize access from all service accounts outside the perimeter.
          type: string
          enum:
            - IDENTITY_TYPE_UNSPECIFIED
            - ANY_IDENTITY
            - ANY_USER_ACCOUNT
            - ANY_SERVICE_ACCOUNT
          description: 'Specifies the type of identities that are allowed access to outside the perimeter. If left unspecified, then members of `identities` field will be allowed access.'
      description: 'Defines the conditions under which an EgressPolicy matches a request. Conditions based on information about the source of the request. Note that if the destination of the request is also protected by a ServicePerimeter, then that ServicePerimeter must have an IngressPolicy which allows access in order for this request to succeed.'
      id: GoogleIdentityAccesscontextmanagerV1EgressFrom
      type: object
    SearchAllResourcesResponse:
      description: Search all resources response.
      type: object
      id: SearchAllResourcesResponse
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResourceSearchResult'
          description: A list of Resources that match the search query. It contains the resource standard metadata information.
        nextPageToken:
          type: string
          description: 'If there are more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
    IdentitySelector:
      id: IdentitySelector
      description: 'Specifies an identity for which to determine resource access, based on roles assigned either directly to them or to the groups they belong to, directly or indirectly.'
      type: object
      properties:
        identity:
          description: 'Required. The identity appear in the form of principals in [IAM policy binding](https://cloud.google.com/iam/reference/rest/v1/Binding). The examples of supported forms are: "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com". Notice that wildcard characters (such as * and ?) are not supported. You must give a specific identity.'
          type: string
    GoogleIdentityAccesscontextmanagerV1AccessLevel:
      description: 'An `AccessLevel` is a label that can be applied to requests to Google Cloud services, along with a list of requirements necessary for the label to be applied.'
      id: GoogleIdentityAccesscontextmanagerV1AccessLevel
      properties:
        name:
          description: 'Resource name for the `AccessLevel`. Format: `accessPolicies/{access_policy}/accessLevels/{access_level}`. The `access_level` component must begin with a letter, followed by alphanumeric characters or `_`. Its maximum length is 50 characters. After you create an `AccessLevel`, you cannot change its `name`.'
          type: string
        basic:
          $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1BasicLevel'
          description: A `BasicLevel` composed of `Conditions`.
        custom:
          $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1CustomLevel'
          description: A `CustomLevel` written in the Common Expression Language.
        title:
          description: Human readable title. Must be unique within the Policy.
          type: string
        description:
          type: string
          description: Description of the `AccessLevel` and its use. Does not affect behavior.
      type: object
    GoogleIdentityAccesscontextmanagerV1EgressPolicy:
      properties:
        egressFrom:
          description: Defines conditions on the source of a request causing this EgressPolicy to apply.
          $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1EgressFrom'
        egressTo:
          description: Defines the conditions on the ApiOperation and destination resources that cause this EgressPolicy to apply.
          $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1EgressTo'
      type: object
      description: 'Policy for egress from perimeter. EgressPolicies match requests based on `egress_from` and `egress_to` stanzas. For an EgressPolicy to match, both `egress_from` and `egress_to` stanzas must be matched. If an EgressPolicy matches a request, the request is allowed to span the ServicePerimeter boundary. For example, an EgressPolicy can be used to allow VMs on networks within the ServicePerimeter to access a defined set of projects outside the perimeter in certain contexts (e.g. to read data from a Cloud Storage bucket or query against a BigQuery dataset). EgressPolicies are concerned with the *resources* that a request relates as well as the API services and API actions being used. They do not related to the direction of data movement. More detailed documentation for this concept can be found in the descriptions of EgressFrom and EgressTo.'
      id: GoogleIdentityAccesscontextmanagerV1EgressPolicy
    IamPolicyAnalysisState:
      properties:
        cause:
          type: string
          description: The human-readable description of the cause of failure.
        code:
          type: string
          enum:
            - OK
            - CANCELLED
            - UNKNOWN
            - INVALID_ARGUMENT
            - DEADLINE_EXCEEDED
            - NOT_FOUND
            - ALREADY_EXISTS
            - PERMISSION_DENIED
            - UNAUTHENTICATED
            - RESOURCE_EXHAUSTED
            - FAILED_PRECONDITION
            - ABORTED
            - OUT_OF_RANGE
            - UNIMPLEMENTED
            - INTERNAL
            - UNAVAILABLE
            - DATA_LOSS
          description: 'The Google standard error code that best describes the state. For example: - OK means the analysis on this entity has been successfully finished; - PERMISSION_DENIED means an access denied error is encountered; - DEADLINE_EXCEEDED means the analysis on this entity hasn''t been started in time;'
          enumDescriptions:
            - 'Not an error; returned on success. HTTP Mapping: 200 OK'
            - 'The operation was cancelled, typically by the caller. HTTP Mapping: 499 Client Closed Request'
            - 'Unknown error. For example, this error may be returned when a `Status` value received from another address space belongs to an error space that is not known in this address space. Also errors raised by APIs that do not return enough error information may be converted to this error. HTTP Mapping: 500 Internal Server Error'
            - 'The client specified an invalid argument. Note that this differs from `FAILED_PRECONDITION`. `INVALID_ARGUMENT` indicates arguments that are problematic regardless of the state of the system (e.g., a malformed file name). HTTP Mapping: 400 Bad Request'
            - 'The deadline expired before the operation could complete. For operations that change the state of the system, this error may be returned even if the operation has completed successfully. For example, a successful response from a server could have been delayed long enough for the deadline to expire. HTTP Mapping: 504 Gateway Timeout'
            - 'Some requested entity (e.g., file or directory) was not found. Note to server developers: if a request is denied for an entire class of users, such as gradual feature rollout or undocumented allowlist, `NOT_FOUND` may be used. If a request is denied for some users within a class of users, such as user-based access control, `PERMISSION_DENIED` must be used. HTTP Mapping: 404 Not Found'
            - 'The entity that a client attempted to create (e.g., file or directory) already exists. HTTP Mapping: 409 Conflict'
            - 'The caller does not have permission to execute the specified operation. `PERMISSION_DENIED` must not be used for rejections caused by exhausting some resource (use `RESOURCE_EXHAUSTED` instead for those errors). `PERMISSION_DENIED` must not be used if the caller can not be identified (use `UNAUTHENTICATED` instead for those errors). This error code does not imply the request is valid or the requested entity exists or satisfies other pre-conditions. HTTP Mapping: 403 Forbidden'
            - 'The request does not have valid authentication credentials for the operation. HTTP Mapping: 401 Unauthorized'
            - 'Some resource has been exhausted, perhaps a per-user quota, or perhaps the entire file system is out of space. HTTP Mapping: 429 Too Many Requests'
            - 'The operation was rejected because the system is not in a state required for the operation''s execution. For example, the directory to be deleted is non-empty, an rmdir operation is applied to a non-directory, etc. Service implementors can use the following guidelines to decide between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`: (a) Use `UNAVAILABLE` if the client can retry just the failing call. (b) Use `ABORTED` if the client should retry at a higher level. For example, when a client-specified test-and-set fails, indicating the client should restart a read-modify-write sequence. (c) Use `FAILED_PRECONDITION` if the client should not retry until the system state has been explicitly fixed. For example, if an "rmdir" fails because the directory is non-empty, `FAILED_PRECONDITION` should be returned since the client should not retry unless the files are deleted from the directory. HTTP Mapping: 400 Bad Request'
            - 'The operation was aborted, typically due to a concurrency issue such as a sequencer check failure or transaction abort. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 409 Conflict'
            - 'The operation was attempted past the valid range. E.g., seeking or reading past end-of-file. Unlike `INVALID_ARGUMENT`, this error indicates a problem that may be fixed if the system state changes. For example, a 32-bit file system will generate `INVALID_ARGUMENT` if asked to read at an offset that is not in the range [0,2^32-1], but it will generate `OUT_OF_RANGE` if asked to read from an offset past the current file size. There is a fair bit of overlap between `FAILED_PRECONDITION` and `OUT_OF_RANGE`. We recommend using `OUT_OF_RANGE` (the more specific error) when it applies so that callers who are iterating through a space can easily look for an `OUT_OF_RANGE` error to detect when they are done. HTTP Mapping: 400 Bad Request'
            - 'The operation is not implemented or is not supported/enabled in this service. HTTP Mapping: 501 Not Implemented'
            - 'Internal errors. This means that some invariants expected by the underlying system have been broken. This error code is reserved for serious errors. HTTP Mapping: 500 Internal Server Error'
            - 'The service is currently unavailable. This is most likely a transient condition, which can be corrected by retrying with a backoff. Note that it is not always safe to retry non-idempotent operations. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 503 Service Unavailable'
            - 'Unrecoverable data loss or corruption. HTTP Mapping: 500 Internal Server Error'
      description: 'Represents the detailed state of an entity under analysis, such as a resource, an identity or an access.'
      type: object
      id: IamPolicyAnalysisState
    MoveAnalysisResult:
      type: object
      properties:
        blockers:
          items:
            $ref: '#/components/schemas/MoveImpact'
          description: Blocking information that would prevent the target resource from moving to the specified destination at runtime.
          type: array
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/MoveImpact'
          description: 'Warning information indicating that moving the target resource to the specified destination might be unsafe. This can include important policy information and configuration changes, but will not block moves at runtime.'
      description: An analysis result including blockers and warnings.
      id: MoveAnalysisResult
    RelatedAssets:
      properties:
        relationshipAttributes:
          $ref: '#/components/schemas/RelationshipAttributes'
          description: The detailed relationship attributes.
        assets:
          items:
            $ref: '#/components/schemas/RelatedAsset'
          description: The peer resources of the relationship.
          type: array
      type: object
      description: DEPRECATED. This message only presents for the purpose of backward-compatibility. The server will never populate this message in responses. The detailed related assets with the `relationship_type`.
      id: RelatedAssets
      deprecated: true
    GoogleCloudOrgpolicyV1ListPolicy:
      description: 'Used in `policy_type` to specify how `list_policy` behaves at this resource. `ListPolicy` can define specific values and subtrees of Cloud Resource Manager resource hierarchy (`Organizations`, `Folders`, `Projects`) that are allowed or denied by setting the `allowed_values` and `denied_values` fields. This is achieved by using the `under:` and optional `is:` prefixes. The `under:` prefix is used to denote resource subtree values. The `is:` prefix is used to denote specific values, and is required only if the value contains a ":". Values prefixed with "is:" are treated the same as values with no prefix. Ancestry subtrees must be in one of the following formats: - "projects/", e.g. "projects/tokyo-rain-123" - "folders/", e.g. "folders/1234" - "organizations/", e.g. "organizations/1234" The `supports_under` field of the associated `Constraint` defines whether ancestry prefixes can be used. You can set `allowed_values` and `denied_values` in the same `Policy` if `all_values` is `ALL_VALUES_UNSPECIFIED`. `ALLOW` or `DENY` are used to allow or deny all values. If `all_values` is set to either `ALLOW` or `DENY`, `allowed_values` and `denied_values` must be unset.'
      id: GoogleCloudOrgpolicyV1ListPolicy
      properties:
        inheritFromParent:
          type: boolean
          description: 'Determines the inheritance behavior for this `Policy`. By default, a `ListPolicy` set at a resource supersedes any `Policy` set anywhere up the resource hierarchy. However, if `inherit_from_parent` is set to `true`, then the values from the effective `Policy` of the parent resource are inherited, meaning the values set in this `Policy` are added to the values inherited up the hierarchy. Setting `Policy` hierarchies that inherit both allowed values and denied values isn''t recommended in most circumstances to keep the configuration simple and understandable. However, it is possible to set a `Policy` with `allowed_values` set that inherits a `Policy` with `denied_values` set. In this case, the values that are allowed must be in `allowed_values` and not present in `denied_values`. For example, suppose you have a `Constraint` `constraints/serviceuser.services`, which has a `constraint_type` of `list_constraint`, and with `constraint_default` set to `ALLOW`. Suppose that at the Organization level, a `Policy` is applied that restricts the allowed API activations to {`E1`, `E2`}. Then, if a `Policy` is applied to a project below the Organization that has `inherit_from_parent` set to `false` and field all_values set to DENY, then an attempt to activate any API will be denied. The following examples demonstrate different possible layerings for `projects/bar` parented by `organizations/foo`: Example 1 (no inherited values): `organizations/foo` has a `Policy` with values: {allowed_values: "E1" allowed_values:"E2"} `projects/bar` has `inherit_from_parent` `false` and values: {allowed_values: "E3" allowed_values: "E4"} The accepted values at `organizations/foo` are `E1`, `E2`. The accepted values at `projects/bar` are `E3`, and `E4`. Example 2 (inherited values): `organizations/foo` has a `Policy` with values: {allowed_values: "E1" allowed_values:"E2"} `projects/bar` has a `Policy` with values: {value: "E3" value: "E4" inherit_from_parent: true} The accepted values at `organizations/foo` are `E1`, `E2`. The accepted values at `projects/bar` are `E1`, `E2`, `E3`, and `E4`. Example 3 (inheriting both allowed and denied values): `organizations/foo` has a `Policy` with values: {allowed_values: "E1" allowed_values: "E2"} `projects/bar` has a `Policy` with: {denied_values: "E1"} The accepted values at `organizations/foo` are `E1`, `E2`. The value accepted at `projects/bar` is `E2`. Example 4 (RestoreDefault): `organizations/foo` has a `Policy` with values: {allowed_values: "E1" allowed_values:"E2"} `projects/bar` has a `Policy` with values: {RestoreDefault: {}} The accepted values at `organizations/foo` are `E1`, `E2`. The accepted values at `projects/bar` are either all or none depending on the value of `constraint_default` (if `ALLOW`, all; if `DENY`, none). Example 5 (no policy inherits parent policy): `organizations/foo` has no `Policy` set. `projects/bar` has no `Policy` set. The accepted values at both levels are either all or none depending on the value of `constraint_default` (if `ALLOW`, all; if `DENY`, none). Example 6 (ListConstraint allowing all): `organizations/foo` has a `Policy` with values: {allowed_values: "E1" allowed_values: "E2"} `projects/bar` has a `Policy` with: {all: ALLOW} The accepted values at `organizations/foo` are `E1`, E2`. Any value is accepted at `projects/bar`. Example 7 (ListConstraint allowing none): `organizations/foo` has a `Policy` with values: {allowed_values: "E1" allowed_values: "E2"} `projects/bar` has a `Policy` with: {all: DENY} The accepted values at `organizations/foo` are `E1`, E2`. No value is accepted at `projects/bar`. Example 10 (allowed and denied subtrees of Resource Manager hierarchy): Given the following resource hierarchy O1->{F1, F2}; F1->{P1}; F2->{P2, P3}, `organizations/foo` has a `Policy` with values: {allowed_values: "under:organizations/O1"} `projects/bar` has a `Policy` with: {allowed_values: "under:projects/P3"} {denied_values: "under:folders/F2"} The accepted values at `organizations/foo` are `organizations/O1`, `folders/F1`, `folders/F2`, `projects/P1`, `projects/P2`, `projects/P3`. The accepted values at `projects/bar` are `organizations/O1`, `folders/F1`, `projects/P1`.'
        deniedValues:
          items:
            type: string
          type: array
          description: List of values denied at this resource. Can only be set if `all_values` is set to `ALL_VALUES_UNSPECIFIED`.
        allowedValues:
          type: array
          description: List of values allowed at this resource. Can only be set if `all_values` is set to `ALL_VALUES_UNSPECIFIED`.
          items:
            type: string
        allValues:
          type: string
          enumDescriptions:
            - Indicates that allowed_values or denied_values must be set.
            - A policy with this set allows all values.
            - A policy with this set denies all values.
          enum:
            - ALL_VALUES_UNSPECIFIED
            - ALLOW
            - DENY
          description: The policy all_values state.
        suggestedValue:
          type: string
          description: 'Optional. The Google Cloud Console will try to default to a configuration that matches the value specified in this `Policy`. If `suggested_value` is not set, it will inherit the value specified higher in the hierarchy, unless `inherit_from_parent` is `false`.'
      type: object
    GoogleIdentityAccesscontextmanagerV1Condition:
      properties:
        requiredAccessLevels:
          type: array
          description: 'A list of other access levels defined in the same `Policy`, referenced by resource name. Referencing an `AccessLevel` which does not exist is an error. All access levels listed must be granted for the Condition to be true. Example: "`accessPolicies/MY_POLICY/accessLevels/LEVEL_NAME"`'
          items:
            type: string
        ipSubnetworks:
          description: 'CIDR block IP subnetwork specification. May be IPv4 or IPv6. Note that for a CIDR IP address block, the specified IP address portion must be properly truncated (i.e. all the host bits must be zero) or the input is considered malformed. For example, "192.0.2.0/24" is accepted but "192.0.2.1/24" is not. Similarly, for IPv6, "2001:db8::/32" is accepted whereas "2001:db8::1/32" is not. The originating IP of a request must be in one of the listed subnets in order for this Condition to be true. If empty, all IP addresses are allowed.'
          items:
            type: string
          type: array
        members:
          description: 'The request must be made by one of the provided user or service accounts. Groups are not supported. Syntax: `user:{emailid}` `serviceAccount:{emailid}` If not specified, a request may come from any user.'
          type: array
          items:
            type: string
        negate:
          type: boolean
          description: 'Whether to negate the Condition. If true, the Condition becomes a NAND over its non-empty fields. Any non-empty field criteria evaluating to false will result in the Condition to be satisfied. Defaults to false.'
        regions:
          description: The request must originate from one of the provided countries/regions. Must be valid ISO 3166-1 alpha-2 codes.
          type: array
          items:
            type: string
        devicePolicy:
          description: 'Device specific restrictions, all restrictions must hold for the Condition to be true. If not specified, all devices are allowed.'
          $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1DevicePolicy'
      description: 'A condition necessary for an `AccessLevel` to be granted. The Condition is an AND over its fields. So a Condition is true if: 1) the request IP is from one of the listed subnetworks AND 2) the originating device complies with the listed device policy AND 3) all listed access levels are granted AND 4) the request was sent at a time allowed by the DateTimeRestriction.'
      type: object
      id: GoogleIdentityAccesscontextmanagerV1Condition
    PartitionSpec:
      id: PartitionSpec
      type: object
      description: Specifications of BigQuery partitioned table as export destination.
      properties:
        partitionKey:
          type: string
          enumDescriptions:
            - 'Unspecified partition key. If used, it means using non-partitioned table.'
            - 'The time when the snapshot is taken. If specified as partition key, the result table(s) is partitoned by the additional timestamp column, readTime. If [read_time] in ExportAssetsRequest is specified, the readTime column''s value will be the same as it. Otherwise, its value will be the current time that is used to take the snapshot.'
            - 'The time when the request is received and started to be processed. If specified as partition key, the result table(s) is partitoned by the requestTime column, an additional timestamp column representing when the request was received.'
          enum:
            - PARTITION_KEY_UNSPECIFIED
            - READ_TIME
            - REQUEST_TIME
          description: The partition key for BigQuery partitioned table.
    ListSavedQueriesResponse:
      description: Response of listing saved queries.
      id: ListSavedQueriesResponse
      properties:
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        savedQueries:
          items:
            $ref: '#/components/schemas/SavedQuery'
          type: array
          description: A list of savedQueries.
      type: object
    OrgPolicyResult:
      description: The organization policy result to the query.
      id: OrgPolicyResult
      properties:
        policyBundle:
          items:
            $ref: '#/components/schemas/AnalyzerOrgPolicy'
          description: 'The ordered list of all organization policies from the AnalyzeOrgPoliciesResponse.OrgPolicyResult.consolidated_policy.attached_resource. to the scope specified in the request. If the constraint is defined with default policy, it will also appear in the list.'
          type: array
        consolidatedPolicy:
          description: 'The consolidated organization policy for the analyzed resource. The consolidated organization policy is computed by merging and evaluating AnalyzeOrgPoliciesResponse.policy_bundle. The evaluation will respect the organization policy [hierarchy rules](https://cloud.google.com/resource-manager/docs/organization-policy/understanding-hierarchy).'
          $ref: '#/components/schemas/AnalyzerOrgPolicy'
      type: object
    Policy:
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      properties:
        etag:
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          type: string
          format: byte
        bindings:
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        version:
          format: int32
          type: integer
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: '#/components/schemas/AuditConfig'
          type: array
      type: object
      id: Policy
    GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination:
      description: BigQuery destination.
      id: GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination
      type: object
      properties:
        table:
          type: string
          description: 'Required. The BigQuery table where the query results will be saved. If this table does not exist, a new table with the given name will be created.'
        writeDisposition:
          description: 'Specifies the action that occurs if the destination table or partition already exists. The following values are supported: * WRITE_TRUNCATE: If the table or partition already exists, BigQuery overwrites the entire table or all the partitions data. * WRITE_APPEND: If the table or partition already exists, BigQuery appends the data to the table or the latest partition. * WRITE_EMPTY: If the table already exists and contains data, a ''duplicate'' error is returned in the job result. The default value is WRITE_EMPTY.'
          type: string
        dataset:
          description: 'Required. The BigQuery dataset where the query results will be saved. It has the format of "projects/{projectId}/datasets/{datasetId}".'
          type: string
    GcsDestination:
      properties:
        uri:
          description: 'The URI of the Cloud Storage object. It''s the same URI that is used by gsutil. Example: "gs://bucket_name/object_name". See [Viewing and Editing Object Metadata](https://cloud.google.com/storage/docs/viewing-editing-metadata) for more information. If the specified Cloud Storage object already exists and there is no [hold](https://cloud.google.com/storage/docs/object-holds), it will be overwritten with the exported result.'
          type: string
        uriPrefix:
          type: string
          description: 'The URI prefix of all generated Cloud Storage objects. Example: "gs://bucket_name/object_name_prefix". Each object URI is in format: "gs://bucket_name/object_name_prefix// and only contains assets for that type. starts from 0. Example: "gs://bucket_name/object_name_prefix/compute.googleapis.com/Disk/0" is the first shard of output objects containing all compute.googleapis.com/Disk assets. An INVALID_ARGUMENT error will be returned if file with the same name "gs://bucket_name/object_name_prefix" already exists.'
      type: object
      description: A Cloud Storage location.
      id: GcsDestination
    AuditLogConfig:
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      type: object
      id: AuditLogConfig
      properties:
        exemptedMembers:
          items:
            type: string
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          type: array
        logType:
          description: The log type that this config enables.
          type: string
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
    Inventory:
      id: Inventory
      properties:
        osInfo:
          description: Base level operating system information for the VM.
          $ref: '#/components/schemas/OsInfo'
        items:
          type: object
          description: 'Inventory items related to the VM keyed by an opaque unique identifier for each inventory item. The identifier is unique to each distinct and addressable inventory item and will change, when there is a new package version.'
          additionalProperties:
            $ref: '#/components/schemas/Item'
        updateTime:
          description: Output only. Timestamp of the last reported inventory for the VM.
          readOnly: true
          format: google-datetime
          type: string
        name:
          type: string
          description: 'Output only. The `Inventory` API resource name. Format: `projects/{project_number}/locations/{location}/instances/{instance_id}/inventory`'
          readOnly: true
      type: object
      description: 'This API resource represents the available inventory data for a Compute Engine virtual machine (VM) instance at a given point in time. You can use this API resource to determine the inventory data of your VM. For more information, see [Information provided by OS inventory management](https://cloud.google.com/compute/docs/instances/os-inventory-management#data-collected).'
    GoogleCloudAssetV1Resource:
      description: A Google Cloud resource under analysis.
      type: object
      properties:
        fullResourceName:
          description: 'The [full resource name](https://cloud.google.com/asset-inventory/docs/resource-name-format)'
          type: string
        analysisState:
          description: The analysis state of this resource.
          $ref: '#/components/schemas/IamPolicyAnalysisState'
      id: GoogleCloudAssetV1Resource
    ZypperPatch:
      type: object
      description: Details related to a Zypper Patch.
      id: ZypperPatch
      properties:
        severity:
          type: string
          description: The severity specified for this patch
        summary:
          type: string
          description: Any summary information provided about this patch.
        patchName:
          type: string
          description: The name of the patch.
        category:
          description: The category of the patch.
          type: string
    BatchGetAssetsHistoryResponse:
      properties:
        assets:
          description: A list of assets with valid time windows.
          type: array
          items:
            $ref: '#/components/schemas/TemporalAsset'
      id: BatchGetAssetsHistoryResponse
      type: object
      description: Batch get assets history response.
    GoogleCloudAssetV1p7beta1Resource:
      type: object
      description: A representation of a Google Cloud resource.
      properties:
        parent:
          type: string
          description: 'The full name of the immediate parent of this resource. See [Resource Names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information. For Google Cloud assets, this value is the parent resource defined in the [IAM policy hierarchy](https://cloud.google.com/iam/docs/overview#policy_hierarchy). Example: `//cloudresourcemanager.googleapis.com/projects/my_project_123` For third-party assets, this field may be set differently.'
        discoveryDocumentUri:
          description: 'The URL of the discovery document containing the resource''s JSON schema. Example: `https://www.googleapis.com/discovery/v1/apis/compute/v1/rest` This value is unspecified for resources that do not have an API based on a discovery document, such as Cloud Bigtable.'
          type: string
        resourceUrl:
          description: 'The REST URL for accessing the resource. An HTTP `GET` request using this URL returns the resource itself. Example: `https://cloudresourcemanager.googleapis.com/v1/projects/my-project-123` This value is unspecified for resources without a REST API.'
          type: string
        version:
          description: 'The API version. Example: `v1`'
          type: string
        data:
          type: object
          description: 'The content of the resource, in which some sensitive fields are removed and may not be present.'
          additionalProperties:
            description: Properties of the object.
            type: any
        location:
          description: 'The location of the resource in Google Cloud, such as its zone and region. For more information, see https://cloud.google.com/about/locations/.'
          type: string
        discoveryName:
          type: string
          description: 'The JSON schema name listed in the discovery document. Example: `Project` This value is unspecified for resources that do not have an API based on a discovery document, such as Cloud Bigtable.'
      id: GoogleCloudAssetV1p7beta1Resource
    GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices:
      id: GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices
      type: object
      properties:
        enableRestriction:
          type: boolean
          description: Whether to restrict API calls within the Service Perimeter to the list of APIs specified in 'allowed_services'.
        allowedServices:
          description: 'The list of APIs usable within the Service Perimeter. Must be empty unless ''enable_restriction'' is True. You can specify a list of individual services, as well as include the ''RESTRICTED-SERVICES'' value, which automatically includes all of the services protected by the perimeter.'
          type: array
          items:
            type: string
      description: Specifies how APIs are allowed to communicate within the Service Perimeter.
    ExportAssetsRequest:
      type: object
      properties:
        assetTypes:
          items:
            type: string
          type: array
          description: 'A list of asset types to take a snapshot for. For example: "compute.googleapis.com/Disk". Regular expressions are also supported. For example: * "compute.googleapis.com.*" snapshots resources whose asset type starts with "compute.googleapis.com". * ".*Instance" snapshots resources whose asset type ends with "Instance". * ".*Instance.*" snapshots resources whose asset type contains "Instance". See [RE2](https://github.com/google/re2/wiki/Syntax) for all supported regular expression syntax. If the regular expression does not match any supported asset type, an INVALID_ARGUMENT error will be returned. If specified, only matching assets will be returned, otherwise, it will snapshot all asset types. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types.'
        outputConfig:
          $ref: '#/components/schemas/OutputConfig'
          description: Required. Output configuration indicating where the results will be output to.
        readTime:
          format: google-datetime
          type: string
          description: 'Timestamp to take an asset snapshot. This can only be set to a timestamp between the current time and the current time minus 35 days (inclusive). If not specified, the current time will be used. Due to delays in resource data collection and indexing, there is a volatile window during which running the same query may get different results.'
        contentType:
          description: 'Asset content type. If not specified, no content but the asset name will be returned.'
          enumDescriptions:
            - Unspecified content type.
            - Resource metadata.
            - The actual IAM policy set on a resource.
            - The organization policy set on an asset.
            - The Access Context Manager policy set on an asset.
            - The runtime OS Inventory information.
            - The related resources.
          enum:
            - CONTENT_TYPE_UNSPECIFIED
            - RESOURCE
            - IAM_POLICY
            - ORG_POLICY
            - ACCESS_POLICY
            - OS_INVENTORY
            - RELATIONSHIP
          type: string
        relationshipTypes:
          description: 'A list of relationship types to export, for example: `INSTANCE_TO_INSTANCEGROUP`. This field should only be specified if content_type=RELATIONSHIP. * If specified: it snapshots specified relationships. It returns an error if any of the [relationship_types] doesn''t belong to the supported relationship types of the [asset_types] or if any of the [asset_types] doesn''t belong to the source types of the [relationship_types]. * Otherwise: it snapshots the supported relationships for all [asset_types] or returns an error if any of the [asset_types] has no relationship support. An unspecified asset types field means all supported asset_types. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types and relationship types.'
          type: array
          items:
            type: string
      id: ExportAssetsRequest
      description: Export asset request.
    GoogleIdentityAccesscontextmanagerV1DevicePolicy:
      id: GoogleIdentityAccesscontextmanagerV1DevicePolicy
      description: '`DevicePolicy` specifies device specific restrictions necessary to acquire a given access level. A `DevicePolicy` specifies requirements for requests from devices to be granted access levels, it does not do any enforcement on the device. `DevicePolicy` acts as an AND over all specified fields, and each repeated field is an OR over its elements. Any unset fields are ignored. For example, if the proto is { os_type : DESKTOP_WINDOWS, os_type : DESKTOP_LINUX, encryption_status: ENCRYPTED}, then the DevicePolicy will be true for requests originating from encrypted Linux desktops and encrypted Windows desktops.'
      type: object
      properties:
        allowedDeviceManagementLevels:
          description: 'Allowed device management levels, an empty list allows all management levels.'
          type: array
          items:
            enumDescriptions:
              - The device's management level is not specified or not known.
              - The device is not managed.
              - 'Basic management is enabled, which is generally limited to monitoring and wiping the corporate account.'
              - Complete device management. This includes more thorough monitoring and the ability to directly manage the device (such as remote wiping). This can be enabled through the Android Enterprise Platform.
            enum:
              - MANAGEMENT_UNSPECIFIED
              - NONE
              - BASIC
              - COMPLETE
            type: string
        osConstraints:
          type: array
          description: 'Allowed OS versions, an empty list allows all types and all versions.'
          items:
            $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1OsConstraint'
        requireAdminApproval:
          type: boolean
          description: Whether the device needs to be approved by the customer admin.
        requireScreenlock:
          type: boolean
          description: Whether or not screenlock is required for the DevicePolicy to be true. Defaults to `false`.
        requireCorpOwned:
          type: boolean
          description: Whether the device needs to be corp owned.
        allowedEncryptionStatuses:
          items:
            enum:
              - ENCRYPTION_UNSPECIFIED
              - ENCRYPTION_UNSUPPORTED
              - UNENCRYPTED
              - ENCRYPTED
            enumDescriptions:
              - The encryption status of the device is not specified or not known.
              - The device does not support encryption.
              - 'The device supports encryption, but is currently unencrypted.'
              - The device is encrypted.
            type: string
          type: array
          description: 'Allowed encryptions statuses, an empty list allows all statuses.'
    MoveAnalysis:
      type: object
      description: A message to group the analysis information.
      id: MoveAnalysis
      properties:
        displayName:
          description: 'The user friendly display name of the analysis. E.g. IAM, organization policy etc.'
          type: string
        analysis:
          $ref: '#/components/schemas/MoveAnalysisResult'
          description: Analysis result of moving the target resource.
        error:
          description: Description of error encountered when performing the analysis.
          $ref: '#/components/schemas/Status'
    GoogleCloudAssetV1Access:
      id: GoogleCloudAssetV1Access
      properties:
        role:
          type: string
          description: The role.
        analysisState:
          description: The analysis state of this access.
          $ref: '#/components/schemas/IamPolicyAnalysisState'
        permission:
          description: The permission.
          type: string
      type: object
      description: An IAM role or permission under analysis.
    RelatedAsset:
      id: RelatedAsset
      properties:
        relationshipType:
          description: 'The unique identifier of the relationship type. Example: `INSTANCE_TO_INSTANCEGROUP`'
          type: string
        assetType:
          type: string
          description: 'The type of the asset. Example: `compute.googleapis.com/Disk` See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information.'
        asset:
          type: string
          description: 'The full name of the asset. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1` See [Resource names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information.'
        ancestors:
          items:
            type: string
          type: array
          description: 'The ancestors of an asset in Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), represented as a list of relative resource names. An ancestry path starts with the closest ancestor in the hierarchy and ends at root. Example: `["projects/123456789", "folders/5432", "organizations/1234"]`'
      description: 'An asset identifier in Google Cloud which contains its name, type and ancestors. An asset can be any resource in the Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), a resource outside the Google Cloud resource hierarchy (such as Google Kubernetes Engine clusters and objects), or a policy (e.g. IAM policy). See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information.'
      type: object
    Feed:
      id: Feed
      description: 'An asset feed used to export asset updates to a destinations. An asset feed filter controls what updates are exported. The asset feed must be created within a project, organization, or folder. Supported destinations are: Pub/Sub topics.'
      type: object
      properties:
        name:
          type: string
          description: 'Required. The format will be projects/{project_number}/feeds/{client-assigned_feed_identifier} or folders/{folder_number}/feeds/{client-assigned_feed_identifier} or organizations/{organization_number}/feeds/{client-assigned_feed_identifier} The client-assigned feed identifier must be unique within the parent project/folder/organization.'
        assetNames:
          items:
            type: string
          description: 'A list of the full names of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. For a list of the full names for supported asset types, see [Resource name format](/asset-inventory/docs/resource-name-format).'
          type: array
        assetTypes:
          items:
            type: string
          type: array
          description: 'A list of types of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `"compute.googleapis.com/Disk"` For a list of all supported asset types, see [Supported asset types](/asset-inventory/docs/supported-asset-types).'
        contentType:
          enumDescriptions:
            - Unspecified content type.
            - Resource metadata.
            - The actual IAM policy set on a resource.
            - The organization policy set on an asset.
            - The Access Context Manager policy set on an asset.
            - The runtime OS Inventory information.
            - The related resources.
          enum:
            - CONTENT_TYPE_UNSPECIFIED
            - RESOURCE
            - IAM_POLICY
            - ORG_POLICY
            - ACCESS_POLICY
            - OS_INVENTORY
            - RELATIONSHIP
          type: string
          description: 'Asset content type. If not specified, no content but the asset name and type will be returned.'
        feedOutputConfig:
          description: Required. Feed output configuration defining where the asset updates are published to.
          $ref: '#/components/schemas/FeedOutputConfig'
        condition:
          $ref: '#/components/schemas/Expr'
          description: 'A condition which determines whether an asset update should be published. If specified, an asset will be returned only when the expression evaluates to true. When set, `expression` field in the `Expr` must be a valid [CEL expression] (https://github.com/google/cel-spec) on a TemporalAsset with name `temporal_asset`. Example: a Feed with expression ("temporal_asset.deleted == true") will only publish Asset deletions. Other fields of `Expr` are optional. See our [user guide](https://cloud.google.com/asset-inventory/docs/monitoring-asset-changes-with-condition) for detailed instructions.'
        relationshipTypes:
          description: 'A list of relationship types to output, for example: `INSTANCE_TO_INSTANCEGROUP`. This field should only be specified if content_type=RELATIONSHIP. * If specified: it outputs specified relationship updates on the [asset_names] or the [asset_types]. It returns an error if any of the [relationship_types] doesn''t belong to the supported relationship types of the [asset_names] or [asset_types], or any of the [asset_names] or the [asset_types] doesn''t belong to the source types of the [relationship_types]. * Otherwise: it outputs the supported relationships of the types of [asset_names] and [asset_types] or returns an error if any of the [asset_names] or the [asset_types] has no replationship support. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types and relationship types.'
          items:
            type: string
          type: array
    Date:
      properties:
        day:
          type: integer
          description: 'Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn''t significant.'
          format: int32
        month:
          format: int32
          description: 'Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.'
          type: integer
        year:
          type: integer
          description: 'Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.'
          format: int32
      type: object
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      id: Date
    MoveImpact:
      type: object
      id: MoveImpact
      description: A message to group impacts of moving the target resource.
      properties:
        detail:
          type: string
          description: User friendly impact detail in a free form message.
    GoogleCloudAssetV1p7beta1RelatedAsset:
      id: GoogleCloudAssetV1p7beta1RelatedAsset
      description: 'An asset identify in Google Cloud which contains its name, type and ancestors. An asset can be any resource in the Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), a resource outside the Google Cloud resource hierarchy (such as Google Kubernetes Engine clusters and objects), or a policy (e.g. IAM policy). See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information.'
      type: object
      properties:
        ancestors:
          type: array
          items:
            type: string
          description: 'The ancestors of an asset in Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), represented as a list of relative resource names. An ancestry path starts with the closest ancestor in the hierarchy and ends at root. Example: `["projects/123456789", "folders/5432", "organizations/1234"]`'
        asset:
          description: 'The full name of the asset. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1` See [Resource names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information.'
          type: string
        assetType:
          description: 'The type of the asset. Example: `compute.googleapis.com/Disk` See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information.'
          type: string
    Operation:
      id: Operation
      properties:
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
        response:
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
    AnalyzeIamPolicyLongrunningResponse:
      description: A response message for AssetService.AnalyzeIamPolicyLongrunning.
      id: AnalyzeIamPolicyLongrunningResponse
      type: object
      properties: {}
    Empty:
      id: Empty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
      properties: {}
    GoogleCloudAssetV1p7beta1RelationshipAttributes:
      id: GoogleCloudAssetV1p7beta1RelationshipAttributes
      type: object
      properties:
        sourceResourceType:
          type: string
          description: 'The source asset type. Example: `compute.googleapis.com/Instance`'
        type:
          description: 'The unique identifier of the relationship type. Example: `INSTANCE_TO_INSTANCEGROUP`'
          type: string
        targetResourceType:
          type: string
          description: 'The target asset type. Example: `compute.googleapis.com/Disk`'
        action:
          type: string
          description: 'The detail of the relationship, e.g. `contains`, `attaches`'
      description: 'The relationship attributes which include `type`, `source_resource_type`, `target_resource_type` and `action`.'
    IamPolicyAnalysisResult:
      type: object
      id: IamPolicyAnalysisResult
      description: 'IAM Policy analysis result, consisting of one IAM policy binding and derived access control lists.'
      properties:
        iamBinding:
          description: The IAM policy binding under analysis.
          $ref: '#/components/schemas/Binding'
        fullyExplored:
          type: boolean
          description: Represents whether all analyses on the iam_binding have successfully finished.
        attachedResourceFullName:
          type: string
          description: 'The [full resource name](https://cloud.google.com/asset-inventory/docs/resource-name-format) of the resource to which the iam_binding policy attaches.'
        identityList:
          $ref: '#/components/schemas/GoogleCloudAssetV1IdentityList'
          description: The identity list derived from members of the iam_binding that match or potentially match identity selector specified in the request.
        accessControlLists:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAssetV1AccessControlList'
          description: The access control lists derived from the iam_binding that match or potentially match resource and access selectors specified in the request.
    AttachedResource:
      description: 'Attached resource representation, which is defined by the corresponding service provider. It represents an attached resource''s payload.'
      properties:
        versionedResources:
          items:
            $ref: '#/components/schemas/VersionedResource'
          description: Versioned resource representations of this attached resource. This is repeated because there could be multiple versions of the attached resource representations during version migration.
          type: array
        assetType:
          type: string
          description: 'The type of this attached resource. Example: `osconfig.googleapis.com/Inventory` You can find the supported attached asset types of each resource in this table: `https://cloud.google.com/asset-inventory/docs/supported-asset-types#searchable_asset_types`'
      id: AttachedResource
      type: object
    Resource:
      properties:
        discoveryName:
          type: string
          description: 'The JSON schema name listed in the discovery document. Example: `Project` This value is unspecified for resources that do not have an API based on a discovery document, such as Cloud Bigtable.'
        discoveryDocumentUri:
          description: 'The URL of the discovery document containing the resource''s JSON schema. Example: `https://www.googleapis.com/discovery/v1/apis/compute/v1/rest` This value is unspecified for resources that do not have an API based on a discovery document, such as Cloud Bigtable.'
          type: string
        version:
          description: 'The API version. Example: `v1`'
          type: string
        parent:
          type: string
          description: 'The full name of the immediate parent of this resource. See [Resource Names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information. For Google Cloud assets, this value is the parent resource defined in the [IAM policy hierarchy](https://cloud.google.com/iam/docs/overview#policy_hierarchy). Example: `//cloudresourcemanager.googleapis.com/projects/my_project_123` For third-party assets, this field may be set differently.'
        data:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
          description: 'The content of the resource, in which some sensitive fields are removed and may not be present.'
        location:
          description: 'The location of the resource in Google Cloud, such as its zone and region. For more information, see https://cloud.google.com/about/locations/.'
          type: string
        resourceUrl:
          type: string
          description: 'The REST URL for accessing the resource. An HTTP `GET` request using this URL returns the resource itself. Example: `https://cloudresourcemanager.googleapis.com/v1/projects/my-project-123` This value is unspecified for resources without a REST API.'
      type: object
      description: A representation of a Google Cloud resource.
      id: Resource
    BigQueryDestination:
      id: BigQueryDestination
      description: A BigQuery destination for exporting assets to.
      properties:
        dataset:
          description: 'Required. The BigQuery dataset in format "projects/projectId/datasets/datasetId", to which the snapshot result should be exported. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error. Setting the `contentType` for `exportAssets` determines the [schema](/asset-inventory/docs/exporting-to-bigquery#bigquery-schema) of the BigQuery table. Setting `separateTablesPerAssetType` to `TRUE` also influences the schema.'
          type: string
        separateTablesPerAssetType:
          type: boolean
          description: 'If this flag is `TRUE`, the snapshot results will be written to one or multiple tables, each of which contains results of one asset type. The [force] and [partition_spec] fields will apply to each of them. Field [table] will be concatenated with "_" and the asset type names (see https://cloud.google.com/asset-inventory/docs/supported-asset-types for supported asset types) to construct per-asset-type table names, in which all non-alphanumeric characters like "." and "/" will be substituted by "_". Example: if field [table] is "mytable" and snapshot results contain "storage.googleapis.com/Bucket" assets, the corresponding table name will be "mytable_storage_googleapis_com_Bucket". If any of these tables does not exist, a new table with the concatenated name will be created. When [content_type] in the ExportAssetsRequest is `RESOURCE`, the schema of each table will include RECORD-type columns mapped to the nested fields in the Asset.resource.data field of that asset type (up to the 15 nested level BigQuery supports (https://cloud.google.com/bigquery/docs/nested-repeated#limitations)). The fields in >15 nested levels will be stored in JSON format string as a child column of its parent RECORD column. If error occurs when exporting to any table, the whole export call will return an error but the export results that already succeed will persist. Example: if exporting to table_type_A succeeds when exporting to table_type_B fails during one export call, the results in table_type_A will persist and there will not be partial results persisting in a table.'
        partitionSpec:
          $ref: '#/components/schemas/PartitionSpec'
          description: '[partition_spec] determines whether to export to partitioned table(s) and how to partition the data. If [partition_spec] is unset or [partition_spec.partition_key] is unset or `PARTITION_KEY_UNSPECIFIED`, the snapshot results will be exported to non-partitioned table(s). [force] will decide whether to overwrite existing table(s). If [partition_spec] is specified. First, the snapshot results will be written to partitioned table(s) with two additional timestamp columns, readTime and requestTime, one of which will be the partition key. Secondly, in the case when any destination table already exists, it will first try to update existing table''s schema as necessary by appending additional columns. Then, if [force] is `TRUE`, the corresponding partition will be overwritten by the snapshot results (data in different partitions will remain intact); if [force] is unset or `FALSE`, it will append the data. An error will be returned if the schema update or data appension fails.'
        table:
          type: string
          description: 'Required. The BigQuery table to which the snapshot result should be written. If this table does not exist, a new table with the given name will be created.'
        force:
          description: 'If the destination table already exists and this flag is `TRUE`, the table will be overwritten by the contents of assets snapshot. If the flag is `FALSE` or unset and the destination table already exists, the export call returns an INVALID_ARGUMEMT error.'
          type: boolean
      type: object
    GoogleCloudAssetV1Identity:
      properties:
        analysisState:
          $ref: '#/components/schemas/IamPolicyAnalysisState'
          description: The analysis state of this identity.
        name:
          type: string
          description: 'The identity of members, formatted as appear in an [IAM policy binding](https://cloud.google.com/iam/reference/rest/v1/Binding). For example, they might be formatted like the following: - user:foo@google.com - group:group1@google.com - serviceAccount:s1@prj1.iam.gserviceaccount.com - projectOwner:some_project_id - domain:google.com - allUsers'
      type: object
      id: GoogleCloudAssetV1Identity
      description: An identity under analysis.
    QueryAssetsRequest:
      id: QueryAssetsRequest
      type: object
      description: QueryAssets request.
      properties:
        statement:
          description: 'Optional. A SQL statement that''s compatible with [BigQuery SQL](https://cloud.google.com/bigquery/docs/introduction-sql).'
          type: string
        readTimeWindow:
          description: 'Optional. [start_time] is required. [start_time] must be less than [end_time] Defaults [end_time] to now if [start_time] is set and [end_time] isn''t. Maximum permitted time range is 7 days.'
          $ref: '#/components/schemas/TimeWindow'
        pageToken:
          type: string
          description: 'Optional. A page token received from previous `QueryAssets`. The field will be ignored when [output_config] is specified.'
        timeout:
          type: string
          format: google-duration
          description: 'Optional. Specifies the maximum amount of time that the client is willing to wait for the query to complete. By default, this limit is 5 min for the first query, and 1 minute for the following queries. If the query is complete, the `done` field in the `QueryAssetsResponse` is true, otherwise false. Like BigQuery [jobs.query API](https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/query#queryrequest) The call is not guaranteed to wait for the specified timeout; it typically returns after around 200 seconds (200,000 milliseconds), even if the query is not complete. The field will be ignored when [output_config] is specified.'
        jobReference:
          type: string
          description: 'Optional. Reference to the query job, which is from the `QueryAssetsResponse` of previous `QueryAssets` call.'
        readTime:
          type: string
          description: Optional. Queries cloud assets as they appeared at the specified point in time.
          format: google-datetime
        pageSize:
          description: 'Optional. The maximum number of rows to return in the results. Responses are limited to 10 MB and 1000 rows. By default, the maximum row count is 1000. When the byte or row count limit is reached, the rest of the query results will be paginated. The field will be ignored when [output_config] is specified.'
          type: integer
          format: int32
        outputConfig:
          $ref: '#/components/schemas/QueryAssetsOutputConfig'
          description: 'Optional. Destination where the query results will be saved. When this field is specified, the query results won''t be saved in the [QueryAssetsResponse.query_result]. Instead [QueryAssetsResponse.output_config] will be set. Meanwhile, [QueryAssetsResponse.job_reference] will be set and can be used to check the status of the query job when passed to a following [QueryAssets] API call.'
    AnalyzeIamPolicyLongrunningMetadata:
      description: Represents the metadata of the longrunning operation for the AnalyzeIamPolicyLongrunning RPC.
      type: object
      properties:
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
      id: AnalyzeIamPolicyLongrunningMetadata
    GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy:
      type: object
      properties:
        folders:
          type: array
          description: 'The folder(s) that this IAM policy belongs to, in the format of folders/{FOLDER_NUMBER}. This field is available when the IAM policy belongs (directly or cascadingly) to one or more folders.'
          items:
            type: string
        attachedResource:
          description: 'The full resource name of the resource on which this IAM policy is set. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. See [Cloud Asset Inventory Resource Name Format](https://cloud.google.com/asset-inventory/docs/resource-name-format) for more information.'
          type: string
        project:
          type: string
          description: 'The project that this IAM policy belongs to, in the format of projects/{PROJECT_NUMBER}. This field is available when the IAM policy belongs to a project.'
        organization:
          type: string
          description: 'The organization that this IAM policy belongs to, in the format of organizations/{ORGANIZATION_NUMBER}. This field is available when the IAM policy belongs (directly or cascadingly) to an organization.'
        policy:
          description: The IAM policy directly set on the given resource.
          $ref: '#/components/schemas/Policy'
      description: The IAM policies governed by the organization policies of the AnalyzeOrgPolicyGovernedAssetsRequest.constraint.
      id: GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy
    AnalyzeOrgPoliciesResponse:
      id: AnalyzeOrgPoliciesResponse
      type: object
      properties:
        nextPageToken:
          description: The page token to fetch the next page for AnalyzeOrgPoliciesResponse.org_policy_results.
          type: string
        constraint:
          description: The definition of the constraint in the request.
          $ref: '#/components/schemas/AnalyzerOrgPolicyConstraint'
        orgPolicyResults:
          description: The organization policies under the AnalyzeOrgPoliciesRequest.scope with the AnalyzeOrgPoliciesRequest.constraint.
          items:
            $ref: '#/components/schemas/OrgPolicyResult'
          type: array
      description: The response message for AssetService.AnalyzeOrgPolicies.
    GoogleIdentityAccesscontextmanagerV1IngressFrom:
      properties:
        identityType:
          enum:
            - IDENTITY_TYPE_UNSPECIFIED
            - ANY_IDENTITY
            - ANY_USER_ACCOUNT
            - ANY_SERVICE_ACCOUNT
          type: string
          description: 'Specifies the type of identities that are allowed access from outside the perimeter. If left unspecified, then members of `identities` field will be allowed access.'
          enumDescriptions:
            - No blanket identity group specified.
            - Authorize access from all identities outside the perimeter.
            - Authorize access from all human users outside the perimeter.
            - Authorize access from all service accounts outside the perimeter.
        sources:
          description: Sources that this IngressPolicy authorizes access from.
          type: array
          items:
            $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1IngressSource'
        identities:
          description: A list of identities that are allowed access through this ingress policy. Should be in the format of email address. The email address should represent individual user or service account only.
          items:
            type: string
          type: array
      id: GoogleIdentityAccesscontextmanagerV1IngressFrom
      type: object
      description: Defines the conditions under which an IngressPolicy matches a request. Conditions are based on information about the source of the request. The request must satisfy what is defined in `sources` AND identity related fields in order to match.
    Asset:
      type: object
      properties:
        relatedAssets:
          deprecated: true
          $ref: '#/components/schemas/RelatedAssets'
          description: DEPRECATED. This field only presents for the purpose of backward-compatibility. The server will never generate responses with this field. The related assets of the asset of one relationship type. One asset only represents one type of relationship.
        osInventory:
          description: 'A representation of runtime OS Inventory information. See [this topic](https://cloud.google.com/compute/docs/instances/os-inventory-management) for more information.'
          $ref: '#/components/schemas/Inventory'
        orgPolicy:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudOrgpolicyV1Policy'
          description: 'A representation of an [organization policy](https://cloud.google.com/resource-manager/docs/organization-policy/overview#organization_policy). There can be more than one organization policy with different constraints set on a given resource.'
        accessPolicy:
          description: 'Please also refer to the [access policy user guide](https://cloud.google.com/access-context-manager/docs/overview#access-policies).'
          $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1AccessPolicy'
        accessLevel:
          description: 'Please also refer to the [access level user guide](https://cloud.google.com/access-context-manager/docs/overview#access-levels).'
          $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1AccessLevel'
        resource:
          description: A representation of the resource.
          $ref: '#/components/schemas/Resource'
        updateTime:
          format: google-datetime
          type: string
          description: The last update timestamp of an asset. update_time is updated when create/update/delete operation is performed.
        iamPolicy:
          description: 'A representation of the IAM policy set on a Google Cloud resource. There can be a maximum of one IAM policy set on any given resource. In addition, IAM policies inherit their granted access scope from any policies set on parent resources in the resource hierarchy. Therefore, the effectively policy is the union of both the policy set on this resource and each policy set on all of the resource''s ancestry resource levels in the hierarchy. See [this topic](https://cloud.google.com/iam/help/allow-policies/inheritance) for more information.'
          $ref: '#/components/schemas/Policy'
        relatedAsset:
          $ref: '#/components/schemas/RelatedAsset'
          description: One related asset of the current asset.
        ancestors:
          items:
            type: string
          type: array
          description: 'The ancestry path of an asset in Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), represented as a list of relative resource names. An ancestry path starts with the closest ancestor in the hierarchy and ends at root. If the asset is a project, folder, or organization, the ancestry path starts from the asset itself. Example: `["projects/123456789", "folders/5432", "organizations/1234"]`'
        servicePerimeter:
          description: 'Please also refer to the [service perimeter user guide](https://cloud.google.com/vpc-service-controls/docs/overview).'
          $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1ServicePerimeter'
        name:
          description: 'The full name of the asset. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1` See [Resource names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information.'
          type: string
        assetType:
          description: 'The type of the asset. Example: `compute.googleapis.com/Disk` See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information.'
          type: string
      description: 'An asset in Google Cloud. An asset can be any resource in the Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), a resource outside the Google Cloud resource hierarchy (such as Google Kubernetes Engine clusters and objects), or a policy (e.g. IAM policy), or a relationship (e.g. an INSTANCE_TO_INSTANCEGROUP relationship). See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information.'
      id: Asset
    ResourceSelector:
      description: 'Specifies the resource to analyze for access policies, which may be set directly on the resource, or on ancestors such as organizations, folders or projects.'
      id: ResourceSelector
      type: object
      properties:
        fullResourceName:
          description: 'Required. The [full resource name] (https://cloud.google.com/asset-inventory/docs/resource-name-format) of a resource of [supported resource types](https://cloud.google.com/asset-inventory/docs/supported-asset-types#analyzable_asset_types).'
          type: string
    QueryResult:
      type: object
      properties:
        totalRows:
          description: Total rows of the whole query results.
          type: string
          format: int64
        nextPageToken:
          type: string
          description: Token to retrieve the next page of the results.
        rows:
          description: Each row hold a query result in the format of `Struct`.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object.
        schema:
          $ref: '#/components/schemas/TableSchema'
          description: 'Describes the format of the [rows].'
      id: QueryResult
      description: 'Execution results of the query. The result is formatted as rows represented by BigQuery compatible [schema]. When pagination is necessary, it will contains the page token to retrieve the results of following pages.'
    WindowsUpdateCategory:
      description: Categories specified by the Windows Update.
      id: WindowsUpdateCategory
      type: object
      properties:
        name:
          type: string
          description: The name of the windows update category.
        id:
          description: The identifier of the windows update category.
          type: string
    GoogleCloudAssetV1GcsDestination:
      properties:
        uri:
          type: string
          description: 'Required. The URI of the Cloud Storage object. It''s the same URI that is used by gsutil. Example: "gs://bucket_name/object_name". See [Viewing and Editing Object Metadata](https://cloud.google.com/storage/docs/viewing-editing-metadata) for more information. If the specified Cloud Storage object already exists and there is no [hold](https://cloud.google.com/storage/docs/object-holds), it will be overwritten with the analysis result.'
      description: A Cloud Storage location.
      type: object
      id: GoogleCloudAssetV1GcsDestination
    GoogleIdentityAccesscontextmanagerV1AccessPolicy:
      type: object
      properties:
        name:
          description: 'Output only. Resource name of the `AccessPolicy`. Format: `accessPolicies/{access_policy}`'
          type: string
        etag:
          description: 'Output only. An opaque identifier for the current version of the `AccessPolicy`. This will always be a strongly validated etag, meaning that two Access Polices will be identical if and only if their etags are identical. Clients should not expect this to be in any specific format.'
          type: string
        scopes:
          items:
            type: string
          description: 'The scopes of a policy define which resources an ACM policy can restrict, and where ACM resources can be referenced. For example, a policy with scopes=["folders/123"] has the following behavior: - vpcsc perimeters can only restrict projects within folders/123 - access levels can only be referenced by resources within folders/123. If empty, there are no limitations on which resources can be restricted by an ACM policy, and there are no limitations on where ACM resources can be referenced. Only one policy can include a given scope (attempting to create a second policy which includes "folders/123" will result in an error). Currently, scopes cannot be modified after a policy is created. Currently, policies can only have a single scope. Format: list of `folders/{folder_number}` or `projects/{project_number}`'
          type: array
        title:
          type: string
          description: Required. Human readable title. Does not affect behavior.
        parent:
          description: 'Required. The parent of this `AccessPolicy` in the Cloud Resource Hierarchy. Currently immutable once created. Format: `organizations/{organization_id}`'
          type: string
      id: GoogleIdentityAccesscontextmanagerV1AccessPolicy
      description: '`AccessPolicy` is a container for `AccessLevels` (which define the necessary attributes to use Google Cloud services) and `ServicePerimeters` (which define regions of services able to freely pass data within a perimeter). An access policy is globally visible within an organization, and the restrictions it specifies apply to all projects within an organization.'
    GoogleIdentityAccesscontextmanagerV1IngressSource:
      description: The source that IngressPolicy authorizes access from.
      id: GoogleIdentityAccesscontextmanagerV1IngressSource
      type: object
      properties:
        resource:
          description: 'A Google Cloud resource that is allowed to ingress the perimeter. Requests from these resources will be allowed to access perimeter data. Currently only projects and VPCs are allowed. Project format: `projects/{project_number}` VPC network format: `//compute.googleapis.com/projects/{PROJECT_ID}/global/networks/{NAME}`. The project may be in any Google Cloud organization, not just the organization that the perimeter is defined in. `*` is not allowed, the case of allowing all Google Cloud resources only is not supported.'
          type: string
        accessLevel:
          type: string
          description: 'An AccessLevel resource name that allow resources within the ServicePerimeters to be accessed from the internet. AccessLevels listed must be in the same policy as this ServicePerimeter. Referencing a nonexistent AccessLevel will cause an error. If no AccessLevel names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is specified for `access_level`, then all IngressSources will be allowed.'
    TemporalAsset:
      id: TemporalAsset
      type: object
      properties:
        priorAsset:
          $ref: '#/components/schemas/Asset'
          description: Prior copy of the asset. Populated if prior_asset_state is PRESENT. Currently this is only set for responses in Real-Time Feed.
        asset:
          description: An asset in Google Cloud.
          $ref: '#/components/schemas/Asset'
        deleted:
          type: boolean
          description: Whether the asset has been deleted or not.
        priorAssetState:
          type: string
          enum:
            - PRIOR_ASSET_STATE_UNSPECIFIED
            - PRESENT
            - INVALID
            - DOES_NOT_EXIST
            - DELETED
          description: State of prior_asset.
          enumDescriptions:
            - prior_asset is not applicable for the current asset.
            - prior_asset is populated correctly.
            - Failed to set prior_asset.
            - Current asset is the first known state.
            - prior_asset is a deletion.
        window:
          description: The time window when the asset data and state was observed.
          $ref: '#/components/schemas/TimeWindow'
      description: 'An asset in Google Cloud and its temporal metadata, including the time window when it was observed and its status during that window.'
    PubsubDestination:
      type: object
      description: A Pub/Sub destination.
      properties:
        topic:
          description: 'The name of the Pub/Sub topic to publish to. Example: `projects/PROJECT_ID/topics/TOPIC_ID`.'
          type: string
      id: PubsubDestination
    GoogleCloudAssetV1BigQueryDestination:
      id: GoogleCloudAssetV1BigQueryDestination
      properties:
        tablePrefix:
          description: 'Required. The prefix of the BigQuery tables to which the analysis results will be written. Tables will be created based on this table_prefix if not exist: * _analysis table will contain export operation''s metadata. * _analysis_result will contain all the IamPolicyAnalysisResult. When [partition_key] is specified, both tables will be partitioned based on the [partition_key].'
          type: string
        dataset:
          description: 'Required. The BigQuery dataset in format "projects/projectId/datasets/datasetId", to which the analysis results should be exported. If this dataset does not exist, the export call will return an INVALID_ARGUMENT error.'
          type: string
        writeDisposition:
          type: string
          description: 'Optional. Specifies the action that occurs if the destination table or partition already exists. The following values are supported: * WRITE_TRUNCATE: If the table or partition already exists, BigQuery overwrites the entire table or all the partitions data. * WRITE_APPEND: If the table or partition already exists, BigQuery appends the data to the table or the latest partition. * WRITE_EMPTY: If the table already exists and contains data, an error is returned. The default value is WRITE_APPEND. Each action is atomic and only occurs if BigQuery is able to complete the job successfully. Details are at https://cloud.google.com/bigquery/docs/loading-data-local#appending_to_or_overwriting_a_table_using_a_local_file.'
        partitionKey:
          description: The partition key for BigQuery partitioned table.
          enumDescriptions:
            - Unspecified partition key. Tables won't be partitioned using this option.
            - 'The time when the request is received. If specified as partition key, the result table(s) is partitoned by the RequestTime column, an additional timestamp column representing when the request was received.'
          type: string
          enum:
            - PARTITION_KEY_UNSPECIFIED
            - REQUEST_TIME
      description: A BigQuery destination.
      type: object
    GoogleCloudAssetV1ListConstraint:
      id: GoogleCloudAssetV1ListConstraint
      type: object
      properties:
        supportsIn:
          type: boolean
          description: 'Indicates whether values grouped into categories can be used in `Policy.allowed_values` and `Policy.denied_values`. For example, `"in:Python"` would match any value in the ''Python'' group.'
        supportsUnder:
          type: boolean
          description: 'Indicates whether subtrees of Cloud Resource Manager resource hierarchy can be used in `Policy.allowed_values` and `Policy.denied_values`. For example, `"under:folders/123"` would match any resource under the ''folders/123'' folder.'
      description: 'A `Constraint` that allows or disallows a list of string values, which are configured by an organization''s policy administrator with a `Policy`.'
    ListAssetsResponse:
      id: ListAssetsResponse
      description: ListAssets response.
      properties:
        readTime:
          type: string
          format: google-datetime
          description: Time the snapshot was taken.
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results. It expires 72 hours after the page token for the first page is generated. Set to empty if there are no remaining results.
        assets:
          description: Assets.
          type: array
          items:
            $ref: '#/components/schemas/Asset'
      type: object
    GoogleIdentityAccesscontextmanagerV1OsConstraint:
      type: object
      id: GoogleIdentityAccesscontextmanagerV1OsConstraint
      description: A restriction on the OS type and version of devices making requests.
      properties:
        minimumVersion:
          type: string
          description: 'The minimum allowed OS version. If not set, any version of this OS satisfies the constraint. Format: `"major.minor.patch"`. Examples: `"10.5.301"`, `"9.2.1"`.'
        requireVerifiedChromeOs:
          type: boolean
          description: 'Only allows requests from devices with a verified Chrome OS. Verifications includes requirements that the device is enterprise-managed, conformant to domain policies, and the caller has permission to call the API targeted by the request.'
        osType:
          enum:
            - OS_UNSPECIFIED
            - DESKTOP_MAC
            - DESKTOP_WINDOWS
            - DESKTOP_LINUX
            - DESKTOP_CHROME_OS
            - ANDROID
            - IOS
          description: Required. The allowed OS type.
          type: string
          enumDescriptions:
            - The operating system of the device is not specified or not known.
            - A desktop Mac operating system.
            - A desktop Windows operating system.
            - A desktop Linux operating system.
            - A desktop ChromeOS operating system.
            - An Android operating system.
            - An iOS operating system.
    OutputConfig:
      type: object
      description: Output configuration for export assets destination.
      id: OutputConfig
      properties:
        gcsDestination:
          description: Destination on Cloud Storage.
          $ref: '#/components/schemas/GcsDestination'
        bigqueryDestination:
          $ref: '#/components/schemas/BigQueryDestination'
          description: Destination on BigQuery. The output table stores the fields in asset Protobuf as columns in BigQuery.
    GoogleCloudAssetV1CustomConstraint:
      description: The definition of a custom constraint.
      id: GoogleCloudAssetV1CustomConstraint
      type: object
      properties:
        condition:
          type: string
          description: 'Organization Policy condition/expression. For example: `resource.instanceName.matches("[production|test]_.*_(\d)+")''` or, `resource.management.auto_upgrade == true`'
        methodTypes:
          items:
            enum:
              - METHOD_TYPE_UNSPECIFIED
              - CREATE
              - UPDATE
              - DELETE
            type: string
            enumDescriptions:
              - Unspecified. Will results in user error.
              - Constraint applied when creating the resource.
              - Constraint applied when updating the resource.
              - Constraint applied when deleting the resource.
          type: array
          description: All the operations being applied for this constraint.
        description:
          type: string
          description: Detailed information about this custom policy constraint.
        actionType:
          enumDescriptions:
            - Unspecified. Will results in user error.
            - Allowed action type.
            - Deny action type.
          type: string
          description: Allow or deny type.
          enum:
            - ACTION_TYPE_UNSPECIFIED
            - ALLOW
            - DENY
        name:
          type: string
          description: 'Name of the constraint. This is unique within the organization. Format of the name should be * `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example : "organizations/123/customConstraints/custom.createOnlyE2TypeVms"'
        displayName:
          type: string
          description: One line display name for the UI.
        resourceTypes:
          description: 'The Resource Instance type on which this policy applies to. Format will be of the form : "/" Example: * `compute.googleapis.com/Instance`.'
          items:
            type: string
          type: array
    VersionedResource:
      type: object
      properties:
        resource:
          additionalProperties:
            description: Properties of the object.
            type: any
          type: object
          description: 'JSON representation of the resource as defined by the corresponding service providing this resource. Example: If the resource is an instance provided by Compute Engine, this field will contain the JSON representation of the instance as defined by Compute Engine: `https://cloud.google.com/compute/docs/reference/rest/v1/instances`. You can find the resource definition for each supported resource type in this table: `https://cloud.google.com/asset-inventory/docs/supported-asset-types#searchable_asset_types`'
        version:
          description: 'API version of the resource. Example: If the resource is an instance provided by Compute Engine v1 API as defined in `https://cloud.google.com/compute/docs/reference/rest/v1/instances`, version will be "v1".'
          type: string
      description: Resource representation as defined by the corresponding service providing the resource for a given API version.
      id: VersionedResource
    ConditionEvaluation:
      type: object
      properties:
        evaluationValue:
          enumDescriptions:
            - Reserved for future use.
            - The evaluation result is `true`.
            - The evaluation result is `false`.
            - The evaluation result is `conditional` when the condition expression contains variables that are either missing input values or have not been supported by Analyzer yet.
          type: string
          enum:
            - EVALUATION_VALUE_UNSPECIFIED
            - 'TRUE'
            - 'FALSE'
            - CONDITIONAL
          description: The evaluation result.
      id: ConditionEvaluation
      description: The Condition evaluation.
    CreateFeedRequest:
      properties:
        feed:
          description: 'Required. The feed details. The field `name` must be empty and it will be generated in the format of: projects/project_number/feeds/feed_id folders/folder_number/feeds/feed_id organizations/organization_number/feeds/feed_id'
          $ref: '#/components/schemas/Feed'
        feedId:
          type: string
          description: Required. This is the client-assigned asset feed identifier and it needs to be unique under a specific parent project/folder/organization.
      id: CreateFeedRequest
      type: object
      description: Create asset feed request.
    ResourceSearchResult:
      type: object
      properties:
        assetType:
          type: string
          description: 'The type of this resource. Example: `compute.googleapis.com/Disk`. To search against the `asset_type`: * Specify the `asset_type` field in your search request.'
        location:
          type: string
          description: 'Location can be `global`, regional like `us-east1`, or zonal like `us-west1-b`. This field is available only when the resource''s Protobuf contains it. To search against the `location`: * Use a field query. Example: `location:us-west*` * Use a free text query. Example: `us-west*`'
        labels:
          description: 'Labels associated with this resource. See [Labelling and grouping Google Cloud resources](https://cloud.google.com/blog/products/gcp/labelling-and-grouping-your-google-cloud-platform-resources) for more information. This field is available only when the resource''s Protobuf contains it. To search against the `labels`: * Use a field query: - query on any label''s key or value. Example: `labels:prod` - query by a given label. Example: `labels.env:prod` - query by a given label''s existence. Example: `labels.env:*` * Use a free text query. Example: `prod`'
          type: object
          additionalProperties:
            type: string
        organization:
          type: string
          description: 'The organization that this resource belongs to, in the form of organizations/{ORGANIZATION_NUMBER}. This field is available when the resource belongs to an organization. To search against `organization`: * Use a field query. Example: `organization:123` * Use a free text query. Example: `123` * Specify the `scope` field as this organization in your search request.'
        parentFullResourceName:
          description: 'The full resource name of this resource''s parent, if it has one. To search against the `parent_full_resource_name`: * Use a field query. Example: `parentFullResourceName:"project-name"` * Use a free text query. Example: `project-name`'
          type: string
        description:
          type: string
          description: 'One or more paragraphs of text description of this resource. Maximum length could be up to 1M bytes. This field is available only when the resource''s Protobuf contains it. To search against the `description`: * Use a field query. Example: `description:"important instance"` * Use a free text query. Example: `"important instance"`'
        tagKeys:
          items:
            type: string
          description: 'TagKey namespaced names, in the format of {ORG_ID}/{TAG_KEY_SHORT_NAME}. To search against the `tagKeys`: * Use a field query. Example: - `tagKeys:"123456789/env*"` - `tagKeys="123456789/env"` - `tagKeys:"env"` * Use a free text query. Example: - `env`'
          type: array
        kmsKey:
          type: string
          description: 'The Cloud KMS [CryptoKey](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys) name or [CryptoKeyVersion](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions) name. This field only presents for the purpose of backward compatibility. Please use the `kms_keys` field to retrieve Cloud KMS key information. This field is available only when the resource''s Protobuf contains it and will only be populated for [these resource types](https://cloud.google.com/asset-inventory/docs/legacy-field-names#resource_types_with_the_to_be_deprecated_kmskey_field) for backward compatible purposes. To search against the `kms_key`: * Use a field query. Example: `kmsKey:key` * Use a free text query. Example: `key`'
          deprecated: true
        name:
          description: 'The full resource name of this resource. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. See [Cloud Asset Inventory Resource Name Format](https://cloud.google.com/asset-inventory/docs/resource-name-format) for more information. To search against the `name`: * Use a field query. Example: `name:instance1` * Use a free text query. Example: `instance1`'
          type: string
        folders:
          description: 'The folder(s) that this resource belongs to, in the form of folders/{FOLDER_NUMBER}. This field is available when the resource belongs to one or more folders. To search against `folders`: * Use a field query. Example: `folders:(123 OR 456)` * Use a free text query. Example: `123` * Specify the `scope` field as this folder in your search request.'
          items:
            type: string
          type: array
        updateTime:
          type: string
          description: 'The last update timestamp of this resource, at which the resource was last modified or deleted. The granularity is in seconds. Timestamp.nanos will always be 0. This field is available only when the resource''s Protobuf contains it. To search against `update_time`: * Use a field query. - value in seconds since unix epoch. Example: `updateTime < 1609459200` - value in date string. Example: `updateTime < 2021-01-01` - value in date-time string (must be quoted). Example: `updateTime < "2021-01-01T00:00:00"`'
          format: google-datetime
        tagValueIds:
          type: array
          description: 'TagValue IDs, in the format of tagValues/{TAG_VALUE_ID}. To search against the `tagValueIds`: * Use a field query. Example: - `tagValueIds="tagValues/456"`'
          items:
            type: string
        project:
          description: 'The project that this resource belongs to, in the form of projects/{PROJECT_NUMBER}. This field is available when the resource belongs to a project. To search against `project`: * Use a field query. Example: `project:12345` * Use a free text query. Example: `12345` * Specify the `scope` field as this project in your search request.'
          type: string
        attachedResources:
          type: array
          description: 'Attached resources of this resource. For example, an OSConfig Inventory is an attached resource of a Compute Instance. This field is repeated because a resource could have multiple attached resources. This `attached_resources` field is not searchable. Some attributes of the attached resources are exposed in `additional_attributes` field, so as to allow users to search on them.'
          items:
            $ref: '#/components/schemas/AttachedResource'
        createTime:
          type: string
          format: google-datetime
          description: 'The create timestamp of this resource, at which the resource was created. The granularity is in seconds. Timestamp.nanos will always be 0. This field is available only when the resource''s Protobuf contains it. To search against `create_time`: * Use a field query. - value in seconds since unix epoch. Example: `createTime > 1609459200` - value in date string. Example: `createTime > 2021-01-01` - value in date-time string (must be quoted). Example: `createTime > "2021-01-01T00:00:00"`'
        kmsKeys:
          type: array
          description: 'The Cloud KMS [CryptoKey](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys) names or [CryptoKeyVersion](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions) names. This field is available only when the resource''s Protobuf contains it. To search against the `kms_keys`: * Use a field query. Example: `kmsKeys:key` * Use a free text query. Example: `key`'
          items:
            type: string
        tagValues:
          items:
            type: string
          description: 'TagValue namespaced names, in the format of {ORG_ID}/{TAG_KEY_SHORT_NAME}/{TAG_VALUE_SHORT_NAME}. To search against the `tagValues`: * Use a field query. Example: - `tagValues:"env"` - `tagValues:"env/prod"` - `tagValues:"123456789/env/prod*"` - `tagValues="123456789/env/prod"` * Use a free text query. Example: - `prod`'
          type: array
        additionalAttributes:
          additionalProperties:
            type: any
            description: Properties of the object.
          description: 'The additional searchable attributes of this resource. The attributes may vary from one resource type to another. Examples: `projectId` for Project, `dnsName` for DNS ManagedZone. This field contains a subset of the resource metadata fields that are returned by the List or Get APIs provided by the corresponding Google Cloud service (e.g., Compute Engine). see [API references and supported searchable attributes](https://cloud.google.com/asset-inventory/docs/supported-asset-types#searchable_asset_types) to see which fields are included. You can search values of these fields through free text search. However, you should not consume the field programically as the field names and values may change as the Google Cloud service updates to a new incompatible API version. To search against the `additional_attributes`: * Use a free text query to match the attributes values. Example: to search `additional_attributes = { dnsName: "foobar" }`, you can issue a query `foobar`.'
          type: object
        relationships:
          additionalProperties:
            $ref: '#/components/schemas/RelatedResources'
          description: 'A map of related resources of this resource, keyed by the relationship type. A relationship type is in the format of {SourceType}_{ACTION}_{DestType}. Example: `DISK_TO_INSTANCE`, `DISK_TO_NETWORK`, `INSTANCE_TO_INSTANCEGROUP`. See [supported relationship types](https://cloud.google.com/asset-inventory/docs/supported-asset-types#supported_relationship_types).'
          type: object
        versionedResources:
          description: 'Versioned resource representations of this resource. This is repeated because there could be multiple versions of resource representations during version migration. This `versioned_resources` field is not searchable. Some attributes of the resource representations are exposed in `additional_attributes` field, so as to allow users to search on them.'
          items:
            $ref: '#/components/schemas/VersionedResource'
          type: array
        parentAssetType:
          description: 'The type of this resource''s immediate parent, if there is one. To search against the `parent_asset_type`: * Use a field query. Example: `parentAssetType:"cloudresourcemanager.googleapis.com/Project"` * Use a free text query. Example: `cloudresourcemanager.googleapis.com/Project`'
          type: string
        displayName:
          type: string
          description: 'The display name of this resource. This field is available only when the resource''s Protobuf contains it. To search against the `display_name`: * Use a field query. Example: `displayName:"My Instance"` * Use a free text query. Example: `"My Instance"`'
        networkTags:
          items:
            type: string
          description: 'Network tags associated with this resource. Like labels, network tags are a type of annotations used to group Google Cloud resources. See [Labelling Google Cloud resources](https://cloud.google.com/blog/products/gcp/labelling-and-grouping-your-google-cloud-platform-resources) for more information. This field is available only when the resource''s Protobuf contains it. To search against the `network_tags`: * Use a field query. Example: `networkTags:internal` * Use a free text query. Example: `internal`'
          type: array
        state:
          type: string
          description: 'The state of this resource. Different resources types have different state definitions that are mapped from various fields of different resource types. This field is available only when the resource''s Protobuf contains it. Example: If the resource is an instance provided by Compute Engine, its state will include PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, REPAIRING, and TERMINATED. See `status` definition in [API Reference](https://cloud.google.com/compute/docs/reference/rest/v1/instances). If the resource is a project provided by Resource Manager, its state will include LIFECYCLE_STATE_UNSPECIFIED, ACTIVE, DELETE_REQUESTED and DELETE_IN_PROGRESS. See `lifecycleState` definition in [API Reference](https://cloud.google.com/resource-manager/reference/rest/v1/projects). To search against the `state`: * Use a field query. Example: `state:RUNNING` * Use a free text query. Example: `RUNNING`'
      id: ResourceSearchResult
      description: 'A result of Resource Search, containing information of a cloud resource. Next ID: 34'
    GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig:
      properties:
        ingressPolicies:
          items:
            $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1IngressPolicy'
          type: array
          description: 'List of IngressPolicies to apply to the perimeter. A perimeter may have multiple IngressPolicies, each of which is evaluated separately. Access is granted if any Ingress Policy grants it. Must be empty for a perimeter bridge.'
        egressPolicies:
          description: 'List of EgressPolicies to apply to the perimeter. A perimeter may have multiple EgressPolicies, each of which is evaluated separately. Access is granted if any EgressPolicy grants it. Must be empty for a perimeter bridge.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1EgressPolicy'
        vpcAccessibleServices:
          description: Configuration for APIs allowed within Perimeter.
          $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices'
        restrictedServices:
          type: array
          items:
            type: string
          description: 'Google Cloud services that are subject to the Service Perimeter restrictions. For example, if `storage.googleapis.com` is specified, access to the storage buckets inside the perimeter must meet the perimeter''s access restrictions.'
        accessLevels:
          description: 'A list of `AccessLevel` resource names that allow resources within the `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed must be in the same policy as this `ServicePerimeter`. Referencing a nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`. For Service Perimeter Bridge, must be empty.'
          items:
            type: string
          type: array
        resources:
          type: array
          items:
            type: string
          description: 'A list of Google Cloud resources that are inside of the service perimeter. Currently only projects and VPCs are allowed. Project format: `projects/{project_number}` VPC network format: `//compute.googleapis.com/projects/{PROJECT_ID}/global/networks/{NAME}`.'
      id: GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig
      description: '`ServicePerimeterConfig` specifies a set of Google Cloud resources that describe specific Service Perimeter configuration.'
      type: object
    GoogleCloudAssetV1Edge:
      type: object
      description: A directional edge.
      properties:
        sourceNode:
          type: string
          description: 'The source node of the edge. For example, it could be a full resource name for a resource node or an email of an identity.'
        targetNode:
          type: string
          description: 'The target node of the edge. For example, it could be a full resource name for a resource node or an email of an identity.'
      id: GoogleCloudAssetV1Edge
    GoogleCloudOrgpolicyV1RestoreDefault:
      description: 'Ignores policies set above this resource and restores the `constraint_default` enforcement behavior of the specific `Constraint` at this resource. Suppose that `constraint_default` is set to `ALLOW` for the `Constraint` `constraints/serviceuser.services`. Suppose that organization foo.com sets a `Policy` at their Organization resource node that restricts the allowed service activations to deny all service activations. They could then set a `Policy` with the `policy_type` `restore_default` on several experimental projects, restoring the `constraint_default` enforcement of the `Constraint` for only those projects, allowing those projects to have all services activated.'
      type: object
      properties: {}
      id: GoogleCloudOrgpolicyV1RestoreDefault
    GoogleCloudOrgpolicyV1Policy:
      description: Defines a Cloud Organization `Policy` which is used to specify `Constraints` for configurations of Cloud Platform resources.
      properties:
        restoreDefault:
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV1RestoreDefault'
          description: Restores the default behavior of the constraint; independent of `Constraint` type.
        version:
          format: int32
          type: integer
          description: Version of the `Policy`. Default version is 0;
        updateTime:
          type: string
          format: google-datetime
          description: 'The time stamp the `Policy` was previously updated. This is set by the server, not specified by the caller, and represents the last time a call to `SetOrgPolicy` was made for that `Policy`. Any value set by the client will be ignored.'
        listPolicy:
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV1ListPolicy'
          description: List of values either allowed or disallowed.
        constraint:
          type: string
          description: 'The name of the `Constraint` the `Policy` is configuring, for example, `constraints/serviceuser.services`. A [list of available constraints](/resource-manager/docs/organization-policy/org-policy-constraints) is available. Immutable after creation.'
        etag:
          description: 'An opaque tag indicating the current version of the `Policy`, used for concurrency control. When the `Policy` is returned from either a `GetPolicy` or a `ListOrgPolicy` request, this `etag` indicates the version of the current `Policy` to use when executing a read-modify-write loop. When the `Policy` is returned from a `GetEffectivePolicy` request, the `etag` will be unset. When the `Policy` is used in a `SetOrgPolicy` method, use the `etag` value that was returned from a `GetOrgPolicy` request as part of a read-modify-write loop for concurrency control. Not setting the `etag`in a `SetOrgPolicy` request will result in an unconditional write of the `Policy`.'
          format: byte
          type: string
        booleanPolicy:
          description: 'For boolean `Constraints`, whether to enforce the `Constraint` or not.'
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV1BooleanPolicy'
      type: object
      id: GoogleCloudOrgpolicyV1Policy
    FeedOutputConfig:
      type: object
      id: FeedOutputConfig
      properties:
        pubsubDestination:
          $ref: '#/components/schemas/PubsubDestination'
          description: Destination on Pub/Sub.
      description: Output configuration for asset feed destination.
    AccessSelector:
      description: 'Specifies roles and/or permissions to analyze, to determine both the identities possessing them and the resources they control. If multiple values are specified, results will include roles or permissions matching any of them. The total number of roles and permissions should be equal or less than 10.'
      type: object
      id: AccessSelector
      properties:
        roles:
          description: Optional. The roles to appear in result.
          items:
            type: string
          type: array
        permissions:
          description: Optional. The permissions to appear in result.
          type: array
          items:
            type: string
    GoogleIdentityAccesscontextmanagerV1CustomLevel:
      type: object
      id: GoogleIdentityAccesscontextmanagerV1CustomLevel
      properties:
        expr:
          description: Required. A Cloud CEL expression evaluating to a boolean.
          $ref: '#/components/schemas/Expr'
      description: '`CustomLevel` is an `AccessLevel` using the Cloud Common Expression Language to represent the necessary conditions for the level to apply to a request. See CEL spec at: https://github.com/google/cel-spec'
    IamPolicyAnalysis:
      type: object
      id: IamPolicyAnalysis
      description: An analysis message to group the query and results.
      properties:
        fullyExplored:
          type: boolean
          description: Represents whether all entries in the analysis_results have been fully explored to answer the query.
        analysisQuery:
          description: The analysis query.
          $ref: '#/components/schemas/IamPolicyAnalysisQuery'
        nonCriticalErrors:
          items:
            $ref: '#/components/schemas/IamPolicyAnalysisState'
          type: array
          description: A list of non-critical errors happened during the query handling.
        analysisResults:
          description: 'A list of IamPolicyAnalysisResult that matches the analysis query, or empty if no result is found.'
          type: array
          items:
            $ref: '#/components/schemas/IamPolicyAnalysisResult'
    TableSchema:
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/TableFieldSchema'
          description: Describes the fields in a table.
      type: object
      description: BigQuery Compatible table schema.
      id: TableSchema
    RelatedResource:
      type: object
      description: The detailed related resource.
      properties:
        assetType:
          description: 'The type of the asset. Example: `compute.googleapis.com/Instance`'
          type: string
        fullResourceName:
          description: 'The full resource name of the related resource. Example: `//compute.googleapis.com/projects/my_proj_123/zones/instance/instance123`'
          type: string
      id: RelatedResource
    QueryAssetsResponse:
      type: object
      properties:
        done:
          description: 'The query response, which can be either an `error` or a valid `response`. If `done` == `false` and the query result is being saved in a output, the output_config field will be set. If `done` == `true`, exactly one of `error`, `query_result` or `output_config` will be set.'
          type: boolean
        jobReference:
          description: Reference to a query job.
          type: string
        outputConfig:
          $ref: '#/components/schemas/QueryAssetsOutputConfig'
          description: 'Output configuration which indicates instead of being returned in API response on the fly, the query result will be saved in a specific output.'
        queryResult:
          $ref: '#/components/schemas/QueryResult'
          description: Result of the query.
        error:
          description: Error status.
          $ref: '#/components/schemas/Status'
      description: QueryAssets response.
      id: QueryAssetsResponse
    SavedQuery:
      type: object
      properties:
        labels:
          additionalProperties:
            type: string
          description: Labels applied on the resource. This value should not contain more than 10 entries. The key and value of each entry must be non-empty and fewer than 64 characters.
          type: object
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The create time of this saved query.
        content:
          description: The query content.
          $ref: '#/components/schemas/QueryContent'
        creator:
          description: Output only. The account's email address who has created this saved query.
          type: string
          readOnly: true
        name:
          type: string
          description: 'The resource name of the saved query. The format must be: * projects/project_number/savedQueries/saved_query_id * folders/folder_number/savedQueries/saved_query_id * organizations/organization_number/savedQueries/saved_query_id'
        lastUpdater:
          readOnly: true
          description: Output only. The account's email address who has updated this saved query most recently.
          type: string
        lastUpdateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The last update time of this saved query.
        description:
          type: string
          description: The description of this saved query. This value should be fewer than 255 characters.
      description: A saved query which can be shared with others or used later.
      id: SavedQuery
    TimeWindow:
      type: object
      id: TimeWindow
      properties:
        endTime:
          description: 'End time of the time window (inclusive). If not specified, the current timestamp is used instead.'
          format: google-datetime
          type: string
        startTime:
          format: google-datetime
          type: string
          description: Start time of the time window (exclusive).
      description: A time window specified by its `start_time` and `end_time`.
    Expr:
      properties:
        location:
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
          type: string
        title:
          type: string
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
        description:
          type: string
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
        expression:
          type: string
          description: Textual representation of an expression in Common Expression Language syntax.
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      type: object
      id: Expr
    QueryAssetsOutputConfig:
      type: object
      properties:
        bigqueryDestination:
          description: BigQuery destination where the query results will be saved.
          $ref: '#/components/schemas/GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination'
      id: QueryAssetsOutputConfig
      description: Output configuration query assets.
    Permissions:
      description: IAM permissions
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
          description: 'A list of permissions. A sample permission string: `compute.disk.get`.'
      id: Permissions
    GoogleIdentityAccesscontextmanagerV1MethodSelector:
      properties:
        permission:
          type: string
          description: Value for `permission` should be a valid Cloud IAM permission for the corresponding `service_name` in ApiOperation.
        method:
          type: string
          description: 'Value for `method` should be a valid method name for the corresponding `service_name` in ApiOperation. If `*` used as value for `method`, then ALL methods and permissions are allowed.'
      type: object
      id: GoogleIdentityAccesscontextmanagerV1MethodSelector
      description: An allowed method or permission of a service specified in ApiOperation.
    VersionedPackage:
      properties:
        version:
          description: The version of the package.
          type: string
        architecture:
          type: string
          description: The system architecture this package is intended for.
        packageName:
          description: The name of the package.
          type: string
      id: VersionedPackage
      description: 'Information related to the a standard versioned package. This includes package info for APT, Yum, Zypper, and Googet package managers.'
      type: object
    GoogleCloudAssetV1StringValues:
      properties:
        allowedValues:
          items:
            type: string
          type: array
          description: List of values allowed at this resource.
        deniedValues:
          type: array
          description: List of values denied at this resource.
          items:
            type: string
      id: GoogleCloudAssetV1StringValues
      description: The string values for the list constraints.
      type: object
    AuditConfig:
      properties:
        service:
          type: string
          description: 'Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.'
        auditLogConfigs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          description: The configuration for logging of each type of permission.
      id: AuditConfig
      type: object
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
    WindowsQuickFixEngineeringPackage:
      id: WindowsQuickFixEngineeringPackage
      type: object
      properties:
        description:
          type: string
          description: A textual description of the QFE update.
        caption:
          type: string
          description: A short textual description of the QFE update.
        hotFixId:
          type: string
          description: Unique identifier associated with a particular QFE update.
        installTime:
          type: string
          format: google-datetime
          description: Date that the QFE update was installed. Mapped from installed_on field.
      description: 'Information related to a Quick Fix Engineering package. Fields are taken from Windows QuickFixEngineering Interface and match the source names: https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-quickfixengineering'
    GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset:
      description: Represents a Google Cloud asset(resource or IAM policy) governed by the organization policies of the AnalyzeOrgPolicyGovernedAssetsRequest.constraint.
      type: object
      id: GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset
      properties:
        governedIamPolicy:
          description: An IAM policy governed by the organization policies of the AnalyzeOrgPolicyGovernedAssetsRequest.constraint.
          $ref: '#/components/schemas/GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy'
        governedResource:
          $ref: '#/components/schemas/GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource'
          description: A Google Cloud resource governed by the organization policies of the AnalyzeOrgPolicyGovernedAssetsRequest.constraint.
        consolidatedPolicy:
          description: 'The consolidated policy for the analyzed asset. The consolidated policy is computed by merging and evaluating AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset.policy_bundle. The evaluation will respect the organization policy [hierarchy rules](https://cloud.google.com/resource-manager/docs/organization-policy/understanding-hierarchy).'
          $ref: '#/components/schemas/AnalyzerOrgPolicy'
        policyBundle:
          description: 'The ordered list of all organization policies from the AnalyzeOrgPoliciesResponse.OrgPolicyResult.consolidated_policy.attached_resource to the scope specified in the request. If the constraint is defined with default policy, it will also appear in the list.'
          items:
            $ref: '#/components/schemas/AnalyzerOrgPolicy'
          type: array
    ListFeedsResponse:
      id: ListFeedsResponse
      type: object
      properties:
        feeds:
          items:
            $ref: '#/components/schemas/Feed'
          type: array
          description: A list of feeds.
    ConditionContext:
      type: object
      description: The IAM conditions context.
      id: ConditionContext
      properties:
        accessTime:
          description: 'The hypothetical access timestamp to evaluate IAM conditions. Note that this value must not be earlier than the current time; otherwise, an INVALID_ARGUMENT error will be returned.'
          format: google-datetime
          type: string
    AnalyzeIamPolicyLongrunningRequest:
      type: object
      id: AnalyzeIamPolicyLongrunningRequest
      properties:
        outputConfig:
          description: Required. Output configuration indicating where the results will be output to.
          $ref: '#/components/schemas/IamPolicyAnalysisOutputConfig'
        analysisQuery:
          description: Required. The request query.
          $ref: '#/components/schemas/IamPolicyAnalysisQuery'
        savedAnalysisQuery:
          type: string
          description: 'Optional. The name of a saved query, which must be in the format of: * projects/project_number/savedQueries/saved_query_id * folders/folder_number/savedQueries/saved_query_id * organizations/organization_number/savedQueries/saved_query_id If both `analysis_query` and `saved_analysis_query` are provided, they will be merged together with the `saved_analysis_query` as base and the `analysis_query` as overrides. For more details of the merge behavior, please refer to the [MergeFrom](https://developers.google.com/protocol-buffers/docs/reference/cpp/google.protobuf.message#Message.MergeFrom.details) doc. Note that you cannot override primitive fields with default value, such as 0 or empty string, etc., because we use proto3, which doesn''t support field presence yet.'
      description: A request message for AssetService.AnalyzeIamPolicyLongrunning.
    Explanation:
      properties:
        matchedPermissions:
          description: 'The map from roles to their included permissions that match the permission query (i.e., a query containing `policy.role.permissions:`). Example: if query `policy.role.permissions:compute.disk.get` matches a policy binding that contains owner role, the matched_permissions will be `{"roles/owner": ["compute.disk.get"]}`. The roles can also be found in the returned `policy` bindings. Note that the map is populated only for requests with permission queries.'
          additionalProperties:
            $ref: '#/components/schemas/Permissions'
          type: object
      description: Explanation about the IAM policy search result.
      id: Explanation
      type: object
    GoogleCloudAssetV1Rule:
      description: 'This rule message is a customized version of the one defined in the Organization Policy system. In addition to the fields defined in the original organization policy, it contains additional field(s) under specific circumstances to support analysis results.'
      id: GoogleCloudAssetV1Rule
      type: object
      properties:
        enforce:
          description: 'If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. This field can be set only in Policies for boolean constraints.'
          type: boolean
        condition:
          $ref: '#/components/schemas/Expr'
          description: The evaluating condition for this rule.
        allowAll:
          description: Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints.
          type: boolean
        denyAll:
          type: boolean
          description: Setting this to true means that all values are denied. This field can be set only in Policies for list constraints.
        values:
          description: List of values to be used for this PolicyRule. This field can be set only in Policies for list constraints.
          $ref: '#/components/schemas/GoogleCloudAssetV1StringValues'
    GoogleCloudAssetV1p7beta1Asset:
      description: 'An asset in Google Cloud. An asset can be any resource in the Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), a resource outside the Google Cloud resource hierarchy (such as Google Kubernetes Engine clusters and objects), or a policy (e.g. IAM policy). See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information.'
      type: object
      id: GoogleCloudAssetV1p7beta1Asset
      properties:
        accessLevel:
          $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1AccessLevel'
          description: 'Please also refer to the [access level user guide](https://cloud.google.com/access-context-manager/docs/overview#access-levels).'
        resource:
          $ref: '#/components/schemas/GoogleCloudAssetV1p7beta1Resource'
          description: A representation of the resource.
        orgPolicy:
          type: array
          description: 'A representation of an [organization policy](https://cloud.google.com/resource-manager/docs/organization-policy/overview#organization_policy). There can be more than one organization policy with different constraints set on a given resource.'
          items:
            $ref: '#/components/schemas/GoogleCloudOrgpolicyV1Policy'
        name:
          description: 'The full name of the asset. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1` See [Resource names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information.'
          type: string
        relatedAssets:
          $ref: '#/components/schemas/GoogleCloudAssetV1p7beta1RelatedAssets'
          description: The related assets of the asset of one relationship type. One asset only represents one type of relationship.
        assetType:
          description: 'The type of the asset. Example: `compute.googleapis.com/Disk` See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information.'
          type: string
        iamPolicy:
          description: 'A representation of the IAM policy set on a Google Cloud resource. There can be a maximum of one IAM policy set on any given resource. In addition, IAM policies inherit their granted access scope from any policies set on parent resources in the resource hierarchy. Therefore, the effectively policy is the union of both the policy set on this resource and each policy set on all of the resource''s ancestry resource levels in the hierarchy. See [this topic](https://cloud.google.com/iam/help/allow-policies/inheritance) for more information.'
          $ref: '#/components/schemas/Policy'
        accessPolicy:
          $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1AccessPolicy'
          description: 'Please also refer to the [access policy user guide](https://cloud.google.com/access-context-manager/docs/overview#access-policies).'
        updateTime:
          description: The last update timestamp of an asset. update_time is updated when create/update/delete operation is performed.
          type: string
          format: google-datetime
        ancestors:
          type: array
          description: 'The ancestry path of an asset in Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), represented as a list of relative resource names. An ancestry path starts with the closest ancestor in the hierarchy and ends at root. If the asset is a project, folder, or organization, the ancestry path starts from the asset itself. Example: `["projects/123456789", "folders/5432", "organizations/1234"]`'
          items:
            type: string
        servicePerimeter:
          description: 'Please also refer to the [service perimeter user guide](https://cloud.google.com/vpc-service-controls/docs/overview).'
          $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1ServicePerimeter'
    AnalyzerOrgPolicy:
      id: AnalyzerOrgPolicy
      properties:
        inheritFromParent:
          type: boolean
          description: 'If `inherit_from_parent` is true, Rules set higher up in the hierarchy (up to the closest root) are inherited and present in the effective policy. If it is false, then no rules are inherited, and this policy becomes the effective root for evaluation.'
        appliedResource:
          description: 'The [full resource name] (https://cloud.google.com/asset-inventory/docs/resource-name-format) of an organization/folder/project resource where this organization policy applies to. For any user defined org policies, this field has the same value as the [attached_resource] field. Only for default policy, this field has the different value.'
          type: string
        reset:
          description: 'Ignores policies set above this resource and restores the default behavior of the constraint at this resource. This field can be set in policies for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false.'
          type: boolean
        rules:
          description: List of rules for this organization policy.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAssetV1Rule'
        attachedResource:
          type: string
          description: 'The [full resource name] (https://cloud.google.com/asset-inventory/docs/resource-name-format) of an organization/folder/project resource where this organization policy is set. Notice that some type of constraints are defined with default policy. This field will be empty for them.'
      description: This organization policy message is a modified version of the one defined in the Organization Policy system. This message contains several fields defined in the original organization policy with some new fields for analysis purpose.
      type: object
    GoogleCloudAssetV1IdentityList:
      id: GoogleCloudAssetV1IdentityList
      description: The identities and group edges.
      type: object
      properties:
        groupEdges:
          items:
            $ref: '#/components/schemas/GoogleCloudAssetV1Edge'
          description: 'Group identity edges of the graph starting from the binding''s group members to any node of the identities. The Edge.source_node contains a group, such as `group:parent@google.com`. The Edge.target_node contains a member of the group, such as `group:child@google.com` or `user:foo@google.com`. This field is present only if the output_group_edges option is enabled in request.'
          type: array
        identities:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAssetV1Identity'
          description: 'Only the identities that match one of the following conditions will be presented: - The identity_selector, if it is specified in request; - Otherwise, identities reachable from the policy binding''s members.'
    TableFieldSchema:
      type: object
      id: TableFieldSchema
      description: A field in TableSchema.
      properties:
        mode:
          description: 'The field mode. Possible values include NULLABLE, REQUIRED and REPEATED. The default value is NULLABLE.'
          type: string
        type:
          type: string
          description: 'The field data type. Possible values include * STRING * BYTES * INTEGER * FLOAT * BOOLEAN * TIMESTAMP * DATE * TIME * DATETIME * GEOGRAPHY, * NUMERIC, * BIGNUMERIC, * RECORD (where RECORD indicates that the field contains a nested schema).'
        field:
          type: string
          description: 'The field name. The name must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_), and must start with a letter or underscore. The maximum length is 128 characters.'
        fields:
          type: array
          description: Describes the nested schema fields if the type property is set to RECORD.
          items:
            $ref: '#/components/schemas/TableFieldSchema'
    SoftwarePackage:
      type: object
      properties:
        aptPackage:
          $ref: '#/components/schemas/VersionedPackage'
          description: 'Details of an APT package. For details about the apt package manager, see https://wiki.debian.org/Apt.'
        cosPackage:
          description: Details of a COS package.
          $ref: '#/components/schemas/VersionedPackage'
        wuaPackage:
          description: 'Details of a Windows Update package. See https://docs.microsoft.com/en-us/windows/win32/api/_wua/ for information about Windows Update.'
          $ref: '#/components/schemas/WindowsUpdatePackage'
        googetPackage:
          $ref: '#/components/schemas/VersionedPackage'
          description: 'Details of a Googet package. For details about the googet package manager, see https://github.com/google/googet.'
        windowsApplication:
          description: Details of Windows Application.
          $ref: '#/components/schemas/WindowsApplication'
        qfePackage:
          $ref: '#/components/schemas/WindowsQuickFixEngineeringPackage'
          description: 'Details of a Windows Quick Fix engineering package. See https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-quickfixengineering for info in Windows Quick Fix Engineering.'
        zypperPatch:
          $ref: '#/components/schemas/ZypperPatch'
          description: 'Details of a Zypper patch. For details about the Zypper package manager, see https://en.opensuse.org/SDB:Zypper_manual.'
        yumPackage:
          $ref: '#/components/schemas/VersionedPackage'
          description: 'Yum package info. For details about the yum package manager, see https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/deployment_guide/ch-yum.'
        zypperPackage:
          $ref: '#/components/schemas/VersionedPackage'
          description: 'Details of a Zypper package. For details about the Zypper package manager, see https://en.opensuse.org/SDB:Zypper_manual.'
      id: SoftwarePackage
      description: Software package information of the operating system.
    GoogleCloudAssetV1BooleanConstraint:
      id: GoogleCloudAssetV1BooleanConstraint
      description: 'A `Constraint` that is either enforced or not. For example a constraint `constraints/compute.disableSerialPortAccess`. If it is enforced on a VM instance, serial port connections will not be opened to that instance.'
      type: object
      properties: {}
    IamPolicyAnalysisOutputConfig:
      id: IamPolicyAnalysisOutputConfig
      description: Output configuration for export IAM policy analysis destination.
      type: object
      properties:
        gcsDestination:
          description: Destination on Cloud Storage.
          $ref: '#/components/schemas/GoogleCloudAssetV1GcsDestination'
        bigqueryDestination:
          $ref: '#/components/schemas/GoogleCloudAssetV1BigQueryDestination'
          description: Destination on BigQuery.
    GoogleIdentityAccesscontextmanagerV1IngressPolicy:
      id: GoogleIdentityAccesscontextmanagerV1IngressPolicy
      properties:
        ingressTo:
          description: Defines the conditions on the ApiOperation and request destination that cause this IngressPolicy to apply.
          $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1IngressTo'
        ingressFrom:
          description: Defines the conditions on the source of a request causing this IngressPolicy to apply.
          $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1IngressFrom'
      description: 'Policy for ingress into ServicePerimeter. IngressPolicies match requests based on `ingress_from` and `ingress_to` stanzas. For an ingress policy to match, both the `ingress_from` and `ingress_to` stanzas must be matched. If an IngressPolicy matches a request, the request is allowed through the perimeter boundary from outside the perimeter. For example, access from the internet can be allowed either based on an AccessLevel or, for traffic hosted on Google Cloud, the project of the source network. For access from private networks, using the project of the hosting network is required. Individual ingress policies can be limited by restricting which services and/or actions they match using the `ingress_to` field.'
      type: object
    Status:
      properties:
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        code:
          type: integer
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
      id: Status
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    WindowsUpdatePackage:
      description: 'Details related to a Windows Update package. Field data and names are taken from Windows Update API IUpdate Interface: https://docs.microsoft.com/en-us/windows/win32/api/_wua/ Descriptive fields like title, and description are localized based on the locale of the VM being updated.'
      type: object
      properties:
        lastDeploymentChangeTime:
          format: google-datetime
          description: 'The last published date of the update, in (UTC) date and time.'
          type: string
        updateId:
          type: string
          description: Gets the identifier of an update package. Stays the same across revisions.
        kbArticleIds:
          items:
            type: string
          description: A collection of Microsoft Knowledge Base article IDs that are associated with the update package.
          type: array
        categories:
          items:
            $ref: '#/components/schemas/WindowsUpdateCategory'
          type: array
          description: The categories that are associated with this update package.
        revisionNumber:
          format: int32
          type: integer
          description: The revision number of this update package.
        moreInfoUrls:
          items:
            type: string
          description: A collection of URLs that provide more information about the update package.
          type: array
        title:
          description: The localized title of the update package.
          type: string
        supportUrl:
          type: string
          description: A hyperlink to the language-specific support information for the update.
        description:
          description: The localized description of the update package.
          type: string
      id: WindowsUpdatePackage
    GoogleCloudAssetV1p7beta1RelatedAssets:
      type: object
      id: GoogleCloudAssetV1p7beta1RelatedAssets
      properties:
        assets:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAssetV1p7beta1RelatedAsset'
          description: The peer resources of the relationship.
        relationshipAttributes:
          description: The detailed relation attributes.
          $ref: '#/components/schemas/GoogleCloudAssetV1p7beta1RelationshipAttributes'
      description: The detailed related assets with the `relationship_type`.
    EffectiveIamPolicy:
      properties:
        fullResourceName:
          type: string
          description: 'The [full_resource_name] (https://cloud.google.com/asset-inventory/docs/resource-name-format) for which the policies are computed. This is one of the BatchGetEffectiveIamPoliciesRequest.names the caller provides in the request.'
        policies:
          items:
            $ref: '#/components/schemas/PolicyInfo'
          description: 'The effective policies for the full_resource_name. These policies include the policy set on the full_resource_name and those set on its parents and ancestors up to the BatchGetEffectiveIamPoliciesRequest.scope. Note that these policies are not filtered according to the resource type of the full_resource_name. These policies are hierarchically ordered by PolicyInfo.attached_resource starting from full_resource_name itself to its parents and ancestors, such that policies[i]''s PolicyInfo.attached_resource is the child of policies[i+1]''s PolicyInfo.attached_resource, if policies[i+1] exists.'
          type: array
      id: EffectiveIamPolicy
      type: object
      description: The effective IAM policies on one resource.
    GoogleIdentityAccesscontextmanagerV1EgressTo:
      properties:
        operations:
          description: A list of ApiOperations allowed to be performed by the sources specified in the corresponding EgressFrom. A request matches if it uses an operation/service in this list.
          type: array
          items:
            $ref: '#/components/schemas/GoogleIdentityAccesscontextmanagerV1ApiOperation'
        resources:
          type: array
          description: 'A list of resources, currently only projects in the form `projects/`, that are allowed to be accessed by sources defined in the corresponding EgressFrom. A request matches if it contains a resource in this list. If `*` is specified for `resources`, then this EgressTo rule will authorize access to all resources outside the perimeter.'
          items:
            type: string
        externalResources:
          items:
            type: string
          description: 'A list of external resources that are allowed to be accessed. Only AWS and Azure resources are supported. For Amazon S3, the supported format is s3://BUCKET_NAME. For Azure Storage, the supported format is azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches if it contains an external resource in this list (Example: s3://bucket/path). Currently ''*'' is not allowed.'
          type: array
      description: 'Defines the conditions under which an EgressPolicy matches a request. Conditions are based on information about the ApiOperation intended to be performed on the `resources` specified. Note that if the destination of the request is also protected by a ServicePerimeter, then that ServicePerimeter must have an IngressPolicy which allows access in order for this request to succeed. The request must match `operations` AND `resources` fields in order to be allowed egress out of the perimeter.'
      id: GoogleIdentityAccesscontextmanagerV1EgressTo
      type: object
    GoogleCloudAssetV1GovernedContainer:
      id: GoogleCloudAssetV1GovernedContainer
      type: object
      description: The organization/folder/project resource governed by organization policies of AnalyzeOrgPolicyGovernedContainersRequest.constraint.
      properties:
        fullResourceName:
          description: 'The [full resource name] (https://cloud.google.com/asset-inventory/docs/resource-name-format) of an organization/folder/project resource.'
          type: string
        policyBundle:
          description: 'The ordered list of all organization policies from the AnalyzeOrgPoliciesResponse.OrgPolicyResult.consolidated_policy.attached_resource. to the scope specified in the request. If the constraint is defined with default policy, it will also appear in the list.'
          items:
            $ref: '#/components/schemas/AnalyzerOrgPolicy'
          type: array
        parent:
          type: string
          description: 'The [full resource name] (https://cloud.google.com/asset-inventory/docs/resource-name-format) of the parent of AnalyzeOrgPolicyGovernedContainersResponse.GovernedContainer.full_resource_name.'
        consolidatedPolicy:
          $ref: '#/components/schemas/AnalyzerOrgPolicy'
          description: 'The consolidated organization policy for the analyzed resource. The consolidated organization policy is computed by merging and evaluating AnalyzeOrgPolicyGovernedContainersResponse.GovernedContainer.policy_bundle. The evaluation will respect the organization policy [hierarchy rules](https://cloud.google.com/resource-manager/docs/organization-policy/understanding-hierarchy).'
    RelatedResources:
      id: RelatedResources
      description: The related resources of the primary resource.
      type: object
      properties:
        relatedResources:
          type: array
          description: The detailed related resources of the primary resource.
          items:
            $ref: '#/components/schemas/RelatedResource'
    WindowsApplication:
      type: object
      id: WindowsApplication
      properties:
        helpLink:
          description: The internet address for technical support.
          type: string
        displayVersion:
          description: The version of the product or application in string format.
          type: string
        publisher:
          description: The name of the manufacturer for the product or application.
          type: string
        displayName:
          type: string
          description: The name of the application or product.
        installDate:
          description: The last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the command-line option is used to repair the product.
          $ref: '#/components/schemas/Date'
      description: 'Contains information about a Windows application that is retrieved from the Windows Registry. For more information about these fields, see: https://docs.microsoft.com/en-us/windows/win32/msi/uninstall-registry-key'
    BatchGetEffectiveIamPoliciesResponse:
      properties:
        policyResults:
          type: array
          items:
            $ref: '#/components/schemas/EffectiveIamPolicy'
          description: 'The effective policies for a batch of resources. Note that the results order is the same as the order of BatchGetEffectiveIamPoliciesRequest.names. When a resource does not have any effective IAM policies, its corresponding policy_result will contain empty EffectiveIamPolicy.policies.'
      description: A response message for AssetService.BatchGetEffectiveIamPolicies.
      id: BatchGetEffectiveIamPoliciesResponse
      type: object
  parameters:
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    effective_iam_policies:
      id: google.cloudasset.effective_iam_policies
      name: effective_iam_policies
      title: Effective Iam Policies
      methods:
        batch_get:
          operation:
            $ref: '#/paths/~1v1~1{scope}~1effectiveIamPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    feeds:
      id: google.cloudasset.feeds
      name: feeds
      title: Feeds
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1{name}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1{name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1{parent}~1feeds/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1{parent}~1feeds/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/feeds/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/feeds/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/feeds/methods/delete'
    operations:
      id: google.cloudasset.operations
      name: operations
      title: Operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1{name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    saved_queries:
      id: google.cloudasset.saved_queries
      name: saved_queries
      title: Saved Queries
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1{parent}~1savedQueries/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1{parent}~1savedQueries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.savedQueries
        _list:
          operation:
            $ref: '#/paths/~1v1~1{parent}~1savedQueries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/saved_queries/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/saved_queries/methods/create'
        update: []
        delete: []
    cloudasset:
      id: google.cloudasset.cloudasset
      name: cloudasset
      title: Cloudasset
      methods:
        analyze_org_policy_governed_containers:
          operation:
            $ref: '#/paths/~1v1~1{scope}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query_assets:
          operation:
            $ref: '#/paths/~1v1~1{parent}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        analyze_move:
          operation:
            $ref: '#/paths/~1v1~1{resource}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    cloudasset_iam_policies:
      id: google.cloudasset.cloudasset_iam_policies
      name: cloudasset_iam_policies
      title: Cloudasset Iam Policies
      methods:
        analyze_iam_policy_longrunning:
          operation:
            $ref: '#/paths/~1v1~1{scope}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    cloudasset_assets_history:
      id: google.cloudasset.cloudasset_assets_history
      name: cloudasset_assets_history
      title: Cloudasset Assets History
      methods:
        batch_get_assets_history:
          operation:
            $ref: '#/paths/~1v1~1{parent}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    assets:
      id: google.cloudasset.assets
      name: assets
      title: Assets
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1{parent}~1assets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.assets
        _list:
          operation:
            $ref: '#/paths/~1v1~1{parent}~1assets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assets/methods/list'
        insert: []
        update: []
        delete: []
paths:
  '/v1/{scope}/effectiveIamPolicies':
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Gets effective IAM policies for a batch of resources.
      operationId: cloudasset.effectiveIamPolicies.batchGet
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetEffectiveIamPoliciesResponse'
      parameters:
        - in: path
          name: scope
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
      x-stackQL-resource: effective_iam_policies
      x-stackQL-method: batch_get
      x-stackQL-verb: exec
  '/v1/{name}':
    parameters: *ref_1
    patch:
      description: Updates an asset feed configuration.
      operationId: cloudasset.feeds.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFeedRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feed'
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      x-stackQL-resource: feeds
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes an asset feed.
      operationId: cloudasset.feeds.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      x-stackQL-resource: feeds
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: cloudasset.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/{parent}/savedQueries':
    parameters: *ref_1
    post:
      description: Creates a saved query in a parent project/folder/organization.
      operationId: cloudasset.savedQueries.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavedQuery'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedQuery'
      parameters:
        - in: path
          name: parent
          required: true
          schema:
            type: string
        - in: query
          name: savedQueryId
          schema:
            type: string
      x-stackQL-resource: saved_queries
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists all saved queries in a parent project/folder/organization.
      operationId: cloudasset.savedQueries.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSavedQueriesResponse'
      parameters:
        - in: path
          name: parent
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: saved_queries
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.savedQueries
  '/v1/{parent}/feeds':
    parameters: *ref_1
    get:
      description: Lists all asset feeds in a parent project/folder/organization.
      operationId: cloudasset.feeds.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFeedsResponse'
      parameters:
        - in: path
          name: parent
          required: true
          schema:
            type: string
      x-stackQL-resource: feeds
      x-stackQL-method: list
      x-stackQL-verb: select
    post:
      description: Creates a feed in a parent project/folder/organization to listen to its asset updates.
      operationId: cloudasset.feeds.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeedRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feed'
      parameters:
        - in: path
          name: parent
          required: true
          schema:
            type: string
      x-stackQL-resource: feeds
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/{scope}':
    parameters: *ref_1
    get:
      description: 'Analyzes organization policies governed containers (projects, folders or organization) under a scope.'
      operationId: cloudasset.analyzeOrgPolicyGovernedContainers
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeOrgPolicyGovernedContainersResponse'
      parameters:
        - in: path
          name: scope
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: constraint
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: cloudasset
      x-stackQL-method: analyze_org_policy_governed_containers
      x-stackQL-verb: exec
    post:
      description: 'Analyzes IAM policies asynchronously to answer which identities have what accesses on which resources, and writes the analysis results to a Google Cloud Storage or a BigQuery destination. For Cloud Storage destination, the output format is the JSON format that represents a AnalyzeIamPolicyResponse. This method implements the google.longrunning.Operation, which allows you to track the operation status. We recommend intervals of at least 2 seconds with exponential backoff retry to poll the operation result. The metadata contains the metadata for the long-running operation.'
      operationId: cloudasset.analyzeIamPolicyLongrunning
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzeIamPolicyLongrunningRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: scope
          required: true
          schema:
            type: string
      x-stackQL-resource: cloudasset_iam_policies
      x-stackQL-method: analyze_iam_policy_longrunning
      x-stackQL-verb: exec
  '/v1/{parent}':
    parameters: *ref_1
    get:
      description: 'Batch gets the update history of assets that overlap a time window. For IAM_POLICY content, this API outputs history when the asset and its attached IAM POLICY both exist. This can create gaps in the output history. Otherwise, this API outputs history with asset in both non-delete or deleted status. If a specified asset does not exist, this API returns an INVALID_ARGUMENT error.'
      operationId: cloudasset.batchGetAssetsHistory
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetAssetsHistoryResponse'
      parameters:
        - in: path
          name: parent
          required: true
          schema:
            type: string
        - in: query
          name: assetNames
          schema:
            type: string
        - in: query
          name: readTimeWindow.endTime
          schema:
            type: string
        - in: query
          name: contentType
          schema:
            type: string
        - in: query
          name: readTimeWindow.startTime
          schema:
            type: string
        - in: query
          name: relationshipTypes
          schema:
            type: string
      x-stackQL-resource: cloudasset_assets_history
      x-stackQL-method: batch_get_assets_history
      x-stackQL-verb: exec
    post:
      description: 'Issue a job that queries assets using a SQL statement compatible with [BigQuery SQL](https://cloud.google.com/bigquery/docs/introduction-sql). If the query execution finishes within timeout and there''s no pagination, the full query results will be returned in the `QueryAssetsResponse`. Otherwise, full query results can be obtained by issuing extra requests with the `job_reference` from the a previous `QueryAssets` call. Note, the query result has approximately 10 GB limitation enforced by [BigQuery](https://cloud.google.com/bigquery/docs/best-practices-performance-output). Queries return larger results will result in errors.'
      operationId: cloudasset.queryAssets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryAssetsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryAssetsResponse'
      parameters:
        - in: path
          name: parent
          required: true
          schema:
            type: string
      x-stackQL-resource: cloudasset
      x-stackQL-method: query_assets
      x-stackQL-verb: exec
  '/v1/{resource}':
    parameters: *ref_1
    get:
      description: Analyze moving a resource to a specified destination without kicking off the actual move. The analysis is best effort depending on the user's permissions of viewing different hierarchical policies and configurations. The policies and configuration are subject to change before the actual resource migration takes place.
      operationId: cloudasset.analyzeMove
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeMoveResponse'
      parameters:
        - in: path
          name: resource
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: destinationParent
          schema:
            type: string
      x-stackQL-resource: cloudasset
      x-stackQL-method: analyze_move
      x-stackQL-verb: exec
  '/v1/{parent}/assets':
    parameters: *ref_1
    get:
      description: Lists assets with time and resource types and returns paged results in response.
      operationId: cloudasset.assets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssetsResponse'
      parameters:
        - in: path
          name: parent
          required: true
          schema:
            type: string
        - in: query
          name: assetTypes
          schema:
            type: string
        - in: query
          name: contentType
          schema:
            type: string
        - in: query
          name: relationshipTypes
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: readTime
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: assets
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.assets
