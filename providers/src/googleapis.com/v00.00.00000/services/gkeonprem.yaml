openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Anthos On-Prem API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230815'
  x-generated-date: '2023-08-28'
externalDocs:
  url: 'https://cloud.google.com/anthos/clusters/docs/on-prem/'
servers:
  - url: 'https://gkeonprem.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    BareMetalDrainedMachine:
      id: BareMetalDrainedMachine
      type: object
      properties:
        nodeIp:
          type: string
          description: Drained machine IP address.
      description: Represents a machine that is currently drained.
    VmwareMetalLbConfig:
      id: VmwareMetalLbConfig
      description: Represents configuration parameters for the MetalLB load balancer.
      type: object
      properties:
        addressPools:
          description: Required. AddressPools is a list of non-overlapping IP pools used by load balancer typed services. All addresses must be routable to load balancer nodes. IngressVIP must be included in the pools.
          items:
            $ref: '#/components/schemas/VmwareAddressPool'
          type: array
    BareMetalNodePoolConfig:
      type: object
      description: BareMetalNodePoolConfig describes the configuration of all nodes within a given bare metal node pool.
      properties:
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'The labels assigned to nodes of this node pool. An object containing a list of key/value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.'
        taints:
          description: The initial taints assigned to nodes of this node pool.
          items:
            $ref: '#/components/schemas/NodeTaint'
          type: array
        operatingSystem:
          enum:
            - OPERATING_SYSTEM_UNSPECIFIED
            - LINUX
          enumDescriptions:
            - No operating system runtime selected.
            - Linux operating system.
          type: string
          description: 'Specifies the nodes operating system (default: LINUX).'
        nodeConfigs:
          description: Required. The list of machine addresses in the bare metal node pool.
          items:
            $ref: '#/components/schemas/BareMetalNodeConfig'
          type: array
        kubeletConfig:
          $ref: '#/components/schemas/BareMetalKubeletConfig'
          description: The modifiable kubelet configurations for the bare metal machines.
      id: BareMetalNodePoolConfig
    QueryBareMetalVersionConfigResponse:
      properties:
        versions:
          items:
            $ref: '#/components/schemas/BareMetalVersionInfo'
          type: array
          description: List of available versions to install or to upgrade to.
      type: object
      description: Response message for querying bare metal admin cluster version config.
      id: QueryBareMetalVersionConfigResponse
    ClusterUser:
      description: ClusterUser configures user principals for an RBAC policy.
      type: object
      properties:
        username:
          type: string
          description: 'Required. The name of the user, e.g. `my-gcp-id@gmail.com`.'
      id: ClusterUser
    BareMetalLoadBalancerAddressPool:
      description: Represents an IP pool used by the load balancer.
      type: object
      properties:
        avoidBuggyIps:
          type: boolean
          description: 'If true, avoid using IPs ending in .0 or .255. This avoids buggy consumer devices mistakenly dropping IPv4 traffic for those special IP addresses.'
        pool:
          type: string
          description: Required. The name of the address pool.
        manualAssign:
          type: boolean
          description: 'If true, prevent IP addresses from being automatically assigned.'
        addresses:
          items:
            type: string
          description: Required. The addresses that are part of this pool. Each address must be either in the CIDR form (1.2.3.0/24) or range form (1.2.3.1-1.2.3.5).
          type: array
      id: BareMetalLoadBalancerAddressPool
    OperationProgress:
      properties:
        stages:
          type: array
          items:
            $ref: '#/components/schemas/OperationStage'
          description: The stages of the operation.
      type: object
      description: Information about operation progress. LINT.IfChange
      id: OperationProgress
    SetIamPolicyRequest:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
      description: Request message for `SetIamPolicy` method.
      id: SetIamPolicyRequest
    OperationStage:
      id: OperationStage
      description: Information about a particular stage of an operation.
      properties:
        state:
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - FAILED
          description: Output only. State of the stage.
          type: string
          readOnly: true
          enumDescriptions:
            - Not set.
            - The stage is pending.
            - The stage is running
            - The stage has completed successfully.
            - The stage has failed.
        stage:
          enum:
            - STAGE_UNSPECIFIED
            - PREFLIGHT_CHECK
            - CONFIGURE
            - DEPLOY
            - HEALTH_CHECK
            - UPDATE
          description: The high-level stage of the operation.
          enumDescriptions:
            - Not set.
            - Preflight checks are running.
            - Resource is being configured.
            - Resource is being deployed.
            - Waiting for the resource to become healthy.
            - Resource is being updated.
          type: string
        metrics:
          description: Progress metric bundle.
          type: array
          items:
            $ref: '#/components/schemas/Metric'
        startTime:
          type: string
          description: Time the stage started.
          format: google-datetime
        endTime:
          type: string
          format: google-datetime
          description: Time the stage ended.
      type: object
    BareMetalDrainingMachine:
      id: BareMetalDrainingMachine
      type: object
      description: Represents a machine that is currently draining.
      properties:
        podCount:
          type: integer
          format: int32
          description: The count of pods yet to drain.
        nodeIp:
          type: string
          description: Draining machine IP address.
    NodeTaint:
      properties:
        value:
          description: Value associated with the effect.
          type: string
        key:
          type: string
          description: Key associated with the effect.
        effect:
          enum:
            - EFFECT_UNSPECIFIED
            - NO_SCHEDULE
            - PREFER_NO_SCHEDULE
            - NO_EXECUTE
          type: string
          enumDescriptions:
            - Not set.
            - 'Do not allow new pods to schedule onto the node unless they tolerate the taint, but allow all pods submitted to Kubelet without going through the scheduler to start, and allow all already-running pods to continue running. Enforced by the scheduler.'
            - 'Like TaintEffectNoSchedule, but the scheduler tries not to schedule new pods onto the node, rather than prohibiting new pods from scheduling onto the node entirely. Enforced by the scheduler.'
            - Evict any already-running pods that do not tolerate the taint. Currently enforced by NodeController.
          description: The taint effect.
      id: NodeTaint
      description: NodeTaint applied to every Kubernetes node in a node pool. Kubernetes taints can be used together with tolerations to control how workloads are scheduled to your nodes. Node taints are permanent.
      type: object
    BareMetalMetalLbConfig:
      description: Represents configuration parameters for a MetalLB load balancer.
      properties:
        loadBalancerNodePoolConfig:
          $ref: '#/components/schemas/BareMetalLoadBalancerNodePoolConfig'
          description: 'Specifies the node pool running the load balancer. L2 connectivity is required among nodes in this pool. If missing, the control plane node pool is used as the load balancer pool.'
        addressPools:
          type: array
          description: Required. AddressPools is a list of non-overlapping IP pools used by load balancer typed services. All addresses must be routable to load balancer nodes. IngressVIP must be included in the pools.
          items:
            $ref: '#/components/schemas/BareMetalLoadBalancerAddressPool'
      type: object
      id: BareMetalMetalLbConfig
    BareMetalCluster:
      description: Resource that represents a bare metal user cluster.
      properties:
        nodeAccessConfig:
          description: Node access related configurations.
          $ref: '#/components/schemas/BareMetalNodeAccessConfig'
        bareMetalVersion:
          description: Required. The Anthos clusters on bare metal version for your user cluster.
          type: string
        binaryAuthorization:
          description: Binary Authorization related configurations.
          $ref: '#/components/schemas/BinaryAuthorization'
        status:
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
          description: Output only. Detailed cluster status.
        annotations:
          description: 'Annotations on the bare metal user cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.'
          additionalProperties:
            type: string
          type: object
        updateTime:
          type: string
          format: google-datetime
          description: Output only. The time when the bare metal user cluster was last updated.
          readOnly: true
        validationCheck:
          $ref: '#/components/schemas/ValidationCheck'
          description: Output only. The result of the preflight check.
          readOnly: true
        networkConfig:
          description: Required. Network configuration.
          $ref: '#/components/schemas/BareMetalNetworkConfig'
        etag:
          type: string
          readOnly: true
          description: 'Output only. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.'
        description:
          type: string
          description: A human readable description of this bare metal user cluster.
        name:
          type: string
          description: Immutable. The bare metal user cluster resource name.
        clusterOperations:
          $ref: '#/components/schemas/BareMetalClusterOperationsConfig'
          description: Cluster operations configuration.
        state:
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - RECONCILING
            - STOPPING
            - ERROR
            - DEGRADED
          type: string
          readOnly: true
          enumDescriptions:
            - Not set.
            - The PROVISIONING state indicates the cluster is being created.
            - The RUNNING state indicates the cluster has been created and is fully usable.
            - 'The RECONCILING state indicates that the cluster is being updated. It remains available, but potentially with degraded performance.'
            - The STOPPING state indicates the cluster is being deleted.
            - The ERROR state indicates the cluster is in a broken unrecoverable state.
            - The DEGRADED state indicates the cluster requires user action to restore full functionality.
          description: Output only. The current state of the bare metal user cluster.
        adminClusterName:
          readOnly: true
          description: Output only. The resource name of the bare metal admin cluster managing this user cluster.
          type: string
        osEnvironmentConfig:
          description: OS environment related configurations.
          $ref: '#/components/schemas/BareMetalOsEnvironmentConfig'
        deleteTime:
          format: google-datetime
          type: string
          description: 'Output only. The time when the bare metal user cluster was deleted. If the resource is not deleted, this must be empty'
          readOnly: true
        upgradePolicy:
          $ref: '#/components/schemas/BareMetalClusterUpgradePolicy'
          description: The cluster upgrade policy.
        proxy:
          $ref: '#/components/schemas/BareMetalProxyConfig'
          description: Proxy configuration.
        uid:
          readOnly: true
          type: string
          description: Output only. The unique identifier of the bare metal user cluster.
        endpoint:
          type: string
          description: Output only. The IP address of the bare metal user cluster's API server.
          readOnly: true
        reconciling:
          type: boolean
          description: 'Output only. If set, there are currently changes in flight to the bare metal user cluster.'
          readOnly: true
        storage:
          description: Required. Storage configuration.
          $ref: '#/components/schemas/BareMetalStorageConfig'
        nodeConfig:
          $ref: '#/components/schemas/BareMetalWorkloadNodeConfig'
          description: Workload node configuration.
        fleet:
          readOnly: true
          $ref: '#/components/schemas/Fleet'
          description: Output only. Fleet configuration for the cluster.
        controlPlane:
          $ref: '#/components/schemas/BareMetalControlPlaneConfig'
          description: Required. Control plane configuration.
        securityConfig:
          description: Security related setting configuration.
          $ref: '#/components/schemas/BareMetalSecurityConfig'
        loadBalancer:
          description: Required. Load balancer configuration.
          $ref: '#/components/schemas/BareMetalLoadBalancerConfig'
        createTime:
          description: Output only. The time when the bare metal user cluster was created.
          type: string
          format: google-datetime
          readOnly: true
        maintenanceConfig:
          $ref: '#/components/schemas/BareMetalMaintenanceConfig'
          description: Maintenance configuration.
        localName:
          type: string
          readOnly: true
          description: 'Output only. The object name of the bare metal user cluster custom resource on the associated admin cluster. This field is used to support conflicting names when enrolling existing clusters to the API. When used as a part of cluster enrollment, this field will differ from the name in the resource name. For new clusters, this field will match the user provided cluster name and be visible in the last component of the resource name. It is not modifiable. When the local name and cluster name differ, the local name is used in the admin cluster controller logs. You use the cluster name when accessing the cluster using bmctl and kubectl.'
        maintenanceStatus:
          description: Output only. Status of on-going maintenance tasks.
          $ref: '#/components/schemas/BareMetalMaintenanceStatus'
          readOnly: true
        adminClusterMembership:
          type: string
          description: Required. The admin cluster this bare metal user cluster belongs to. This is the full resource name of the admin cluster's fleet membership.
      id: BareMetalCluster
      type: object
    BareMetalAdminNetworkConfig:
      description: BareMetalAdminNetworkConfig specifies the cluster network configuration.
      type: object
      id: BareMetalAdminNetworkConfig
      properties:
        islandModeCidr:
          description: Configuration for Island mode CIDR.
          $ref: '#/components/schemas/BareMetalAdminIslandModeCidrConfig'
    Authorization:
      description: Authorization defines the On-Prem cluster authorization configuration to bootstrap onto the admin cluster.
      properties:
        adminUsers:
          description: 'Required. For VMware and bare metal user clusters, users will be granted the cluster-admin role on the cluster, which provides full administrative access to the cluster. For bare metal admin clusters, users will be granted the cluster-view role, which limits users to read-only access.'
          items:
            $ref: '#/components/schemas/ClusterUser'
          type: array
      id: Authorization
      type: object
    VmwareBundleConfig:
      id: VmwareBundleConfig
      description: VmwareBundleConfig represents configuration for the bundle.
      properties:
        version:
          type: string
          description: The version of the bundle.
        status:
          $ref: '#/components/schemas/ResourceStatus'
          description: Output only. Resource status for the bundle.
          readOnly: true
      type: object
    UpgradeDependency:
      description: UpgradeDependency represents a dependency when upgrading a resource.
      properties:
        currentVersion:
          description: Current version of the dependency e.g. 1.15.0.
          type: string
        targetVersion:
          type: string
          description: Target version of the dependency e.g. 1.16.1. This is the version the dependency needs to be upgraded to before a resource can be upgraded.
        resourceName:
          type: string
          description: Resource name of the dependency.
        localName:
          description: Local name of the dependency.
          type: string
      id: UpgradeDependency
      type: object
    BareMetalPortConfig:
      properties:
        controlPlaneLoadBalancerPort:
          format: int32
          type: integer
          description: The port that control plane hosted load balancers will listen on.
      description: Specifies load balancer ports for the bare metal user cluster.
      id: BareMetalPortConfig
      type: object
    VmwareAdminHAControlPlaneConfig:
      type: object
      properties:
        controlPlaneIpBlock:
          $ref: '#/components/schemas/VmwareIpBlock'
          description: Static IP addresses for the admin control plane nodes.
      id: VmwareAdminHAControlPlaneConfig
      description: Specifies HA admin control plane config.
    BareMetalControlPlaneConfig:
      type: object
      description: Specifies the control plane configuration.
      id: BareMetalControlPlaneConfig
      properties:
        apiServerArgs:
          description: 'Customizes the default API server args. Only a subset of customized flags are supported. For the exact format, refer to the [API server documentation](https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/).'
          type: array
          items:
            $ref: '#/components/schemas/BareMetalApiServerArgument'
        controlPlaneNodePoolConfig:
          description: Required. Configures the node pool running the control plane.
          $ref: '#/components/schemas/BareMetalControlPlaneNodePoolConfig'
    ListVmwareAdminClustersResponse:
      type: object
      id: ListVmwareAdminClustersResponse
      description: Response message for listing VMware admin clusters.
      properties:
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return. If the token is not empty this means that more results are available and should be retrieved by repeating the request with the provided page token.
        vmwareAdminClusters:
          items:
            $ref: '#/components/schemas/VmwareAdminCluster'
          type: array
          description: The list of VMware admin cluster.
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    VmwareVCenterConfig:
      description: Represents configuration for the VMware VCenter for the user cluster.
      id: VmwareVCenterConfig
      type: object
      properties:
        storagePolicyName:
          description: The name of the vCenter storage policy for the user cluster.
          type: string
        folder:
          type: string
          description: The name of the vCenter folder for the user cluster.
        caCertData:
          description: Contains the vCenter CA certificate public key for SSL verification.
          type: string
        address:
          type: string
          description: The vCenter IP address.
        datacenter:
          type: string
          description: The name of the vCenter datacenter for the user cluster.
        cluster:
          description: The name of the vCenter cluster for the user cluster.
          type: string
        datastore:
          type: string
          description: The name of the vCenter datastore for the user cluster.
        resourcePool:
          type: string
          description: The name of the vCenter resource pool for the user cluster.
    VmwareAdminNetworkConfig:
      properties:
        serviceAddressCidrBlocks:
          items:
            type: string
          type: array
          description: Required. All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
        hostConfig:
          description: Represents common network settings irrespective of the host's IP address.
          $ref: '#/components/schemas/VmwareHostConfig'
        vcenterNetwork:
          type: string
          description: vcenter_network specifies vCenter network name.
        staticIpConfig:
          description: Configuration settings for a static IP configuration.
          $ref: '#/components/schemas/VmwareStaticIpConfig'
        podAddressCidrBlocks:
          items:
            type: string
          type: array
          description: Required. All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
        dhcpIpConfig:
          description: Configuration settings for a DHCP IP configuration.
          $ref: '#/components/schemas/VmwareDhcpIpConfig'
        haControlPlaneConfig:
          $ref: '#/components/schemas/VmwareAdminHAControlPlaneConfig'
          description: Configuration for HA admin cluster control plane.
      id: VmwareAdminNetworkConfig
      description: VmwareAdminNetworkConfig contains network configuration for VMware admin cluster.
      type: object
    ValidationCheckStatus:
      id: ValidationCheckStatus
      description: ValidationCheckStatus defines the detailed validation check status.
      type: object
      properties:
        result:
          items:
            $ref: '#/components/schemas/ValidationCheckResult'
          type: array
          description: Individual checks which failed as part of the Preflight check execution.
    VmwareAdminVipConfig:
      properties:
        addonsVip:
          description: The VIP to configure the load balancer for add-ons.
          type: string
        controlPlaneVip:
          description: The VIP which you previously set aside for the Kubernetes API of the admin cluster.
          type: string
      type: object
      id: VmwareAdminVipConfig
      description: VmwareAdminVipConfig for VMware load balancer configurations.
    BareMetalVipConfig:
      id: BareMetalVipConfig
      properties:
        ingressVip:
          description: The VIP which you previously set aside for ingress traffic into this bare metal user cluster.
          type: string
        controlPlaneVip:
          type: string
          description: The VIP which you previously set aside for the Kubernetes API of this bare metal user cluster.
      type: object
      description: Specifies the VIP config for the bare metal load balancer.
    BareMetalProxyConfig:
      id: BareMetalProxyConfig
      type: object
      properties:
        uri:
          type: string
          description: 'Required. Specifies the address of your proxy server. Examples: `http://domain` Do not provide credentials in the format `http://(username:password@)domain` these will be rejected by the server.'
        noProxy:
          items:
            type: string
          type: array
          description: 'A list of IPs, hostnames, and domains that should skip the proxy. Examples: ["127.0.0.1", "example.com", ".corp", "localhost"].'
      description: Specifies the cluster proxy configuration.
    VmwareStaticIpConfig:
      properties:
        ipBlocks:
          items:
            $ref: '#/components/schemas/VmwareIpBlock'
          description: Represents the configuration values for static IP allocation to nodes.
          type: array
      type: object
      id: VmwareStaticIpConfig
      description: Represents the network configuration required for the VMware user clusters with Static IP configurations.
    BareMetalAdminClusterOperationsConfig:
      type: object
      properties:
        enableApplicationLogs:
          type: boolean
          description: Whether collection of application logs/metrics should be enabled (in addition to system logs/metrics).
      description: BareMetalAdminClusterOperationsConfig specifies the admin cluster's observability infrastructure.
      id: BareMetalAdminClusterOperationsConfig
    EnrollVmwareAdminClusterRequest:
      description: Message for enrolling an existing VMware admin cluster to the GKE on-prem API.
      id: EnrollVmwareAdminClusterRequest
      type: object
      properties:
        vmwareAdminClusterId:
          description: 'User provided OnePlatform identifier that is used as part of the resource name. This must be unique among all GKE on-prem clusters within a project and location and will return a 409 if the cluster already exists. (https://tools.ietf.org/html/rfc1123) format.'
          type: string
        membership:
          description: Required. This is the full resource name of this admin cluster's fleet membership.
          type: string
    ResourceStatus:
      properties:
        conditions:
          type: array
          description: ResourceCondition provide a standard mechanism for higher-level status reporting from controller.
          items:
            $ref: '#/components/schemas/ResourceCondition'
        errorMessage:
          type: string
          description: 'Human-friendly representation of the error message from controller. The error message can be temporary as the controller controller creates a cluster or node pool. If the error message persists for a longer period of time, it can be used to surface error message to indicate real problems requiring user intervention.'
      id: ResourceStatus
      description: 'ResourceStatus describes why a cluster or node pool has a certain status. (e.g., ERROR or DEGRADED).'
      type: object
    BareMetalAdminControlPlaneNodePoolConfig:
      description: BareMetalAdminControlPlaneNodePoolConfig specifies the control plane node pool configuration. We have a control plane specific node pool config so that we can flexible about supporting control plane specific fields in the future.
      properties:
        nodePoolConfig:
          description: Required. The generic configuration for a node pool running the control plane.
          $ref: '#/components/schemas/BareMetalNodePoolConfig'
      id: BareMetalAdminControlPlaneNodePoolConfig
      type: object
    VmwareNodeConfig:
      description: Parameters that describe the configuration of all nodes within a given node pool.
      properties:
        enableLoadBalancer:
          type: boolean
          description: Allow node pool traffic to be load balanced. Only works for clusters with MetalLB load balancers.
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it''s best to assume the behavior is undefined and conflicts should be avoided. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/'
        replicas:
          description: The number of nodes in the node pool.
          format: int64
          type: string
        bootDiskSizeGb:
          type: string
          format: int64
          description: VMware disk size to be used during creation.
        vsphereConfig:
          $ref: '#/components/schemas/VmwareVsphereConfig'
          description: Specifies the vSphere config for node pool.
        taints:
          description: The initial taints assigned to nodes of this node pool.
          type: array
          items:
            $ref: '#/components/schemas/NodeTaint'
        imageType:
          description: 'Required. The OS image to be used for each node in a node pool. Currently `cos`, `ubuntu`, `ubuntu_containerd` and `windows` are supported.'
          type: string
        cpus:
          format: int64
          type: string
          description: The number of CPUs for each node in the node pool.
        image:
          type: string
          description: 'The OS image name in vCenter, only valid when using Windows.'
        memoryMb:
          type: string
          format: int64
          description: The megabytes of memory for each node in the node pool.
      type: object
      id: VmwareNodeConfig
    VmwareF5BigIpConfig:
      description: Represents configuration parameters for an F5 BIG-IP load balancer.
      type: object
      id: VmwareF5BigIpConfig
      properties:
        partition:
          description: 'The preexisting partition to be used by the load balancer. This partition is usually created for the admin cluster for example: ''my-f5-admin-partition''.'
          type: string
        address:
          description: The load balancer's IP address.
          type: string
        snatPool:
          description: 'The pool name. Only necessary, if using SNAT.'
          type: string
    VmwareAdminF5BigIpConfig:
      properties:
        partition:
          type: string
          description: 'The preexisting partition to be used by the load balancer. This partition is usually created for the admin cluster for example: ''my-f5-admin-partition''.'
        snatPool:
          type: string
          description: 'The pool name. Only necessary, if using SNAT.'
        address:
          description: The load balancer's IP address.
          type: string
      description: VmwareAdminF5BigIpConfig represents configuration parameters for an F5 BIG-IP load balancer.
      type: object
      id: VmwareAdminF5BigIpConfig
    BareMetalAdminStorageConfig:
      type: object
      id: BareMetalAdminStorageConfig
      description: BareMetalAdminStorageConfig specifies the cluster storage configuration.
      properties:
        lvpNodeMountsConfig:
          description: 'Required. Specifies the config for local PersistentVolumes backed by mounted node disks. These disks need to be formatted and mounted by the user, which can be done before or after cluster creation.'
          $ref: '#/components/schemas/BareMetalLvpConfig'
        lvpShareConfig:
          $ref: '#/components/schemas/BareMetalLvpShareConfig'
          description: Required. Specifies the config for local PersistentVolumes backed by subdirectories in a shared filesystem. These subdirectores are automatically created during cluster creation.
    QueryVmwareVersionConfigResponse:
      properties:
        versions:
          description: List of available versions to install or to upgrade to.
          items:
            $ref: '#/components/schemas/VmwareVersionInfo'
          type: array
      type: object
      description: Response message for querying VMware user cluster version config.
      id: QueryVmwareVersionConfigResponse
    BareMetalClusterOperationsConfig:
      properties:
        enableApplicationLogs:
          description: Whether collection of application logs/metrics should be enabled (in addition to system logs/metrics).
          type: boolean
      description: Specifies the bare metal user cluster's observability infrastructure.
      type: object
      id: BareMetalClusterOperationsConfig
    Fleet:
      description: 'Fleet related configuration. Fleets are a Google Cloud concept for logically organizing clusters, letting you use and manage multi-cluster capabilities and apply consistent policies across your systems. See [Anthos Fleets](`https://cloud.google.com/anthos/multicluster-management/fleets`) for more details on Anthos multi-cluster capabilities using Fleets. ##'
      type: object
      id: Fleet
      properties:
        membership:
          description: Output only. The name of the managed fleet Membership resource associated to this cluster. Membership names are formatted as `projects//locations//memberships/`.
          readOnly: true
          type: string
    BareMetalMultipleNetworkInterfacesConfig:
      id: BareMetalMultipleNetworkInterfacesConfig
      description: Specifies the multiple networking interfaces cluster configuration.
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether to enable multiple network interfaces for your pods. When set network_config.advanced_networking is automatically set to true.
    BareMetalAdminControlPlaneConfig:
      type: object
      properties:
        apiServerArgs:
          items:
            $ref: '#/components/schemas/BareMetalAdminApiServerArgument'
          type: array
          description: 'Customizes the default API server args. Only a subset of customized flags are supported. Please refer to the API server documentation below to know the exact format: https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/'
        controlPlaneNodePoolConfig:
          description: Required. Configures the node pool running the control plane. If specified the corresponding NodePool will be created for the cluster's control plane. The NodePool will have the same name and namespace as the cluster.
          $ref: '#/components/schemas/BareMetalAdminControlPlaneNodePoolConfig'
      id: BareMetalAdminControlPlaneConfig
      description: BareMetalAdminControlPlaneConfig specifies the control plane configuration.
    VmwareVersionInfo:
      description: Contains information about a specific Anthos on VMware version.
      properties:
        isInstalled:
          type: boolean
          description: 'If set, the version is installed in the admin cluster. Otherwise, the version bundle must be downloaded and installed before a user cluster can be created at or upgraded to this version.'
        hasDependencies:
          description: 'If set, the cluster dependencies (e.g. the admin cluster, other user clusters managed by the same admin cluster) must be upgraded before this version can be installed or upgraded to.'
          type: boolean
        version:
          description: Version number e.g. 1.13.1-gke.1000.
          type: string
      type: object
      id: VmwareVersionInfo
    BareMetalAdminMachineDrainStatus:
      properties:
        drainingMachines:
          items:
            $ref: '#/components/schemas/BareMetalAdminDrainingMachine'
          type: array
          description: The list of draning machines.
        drainedMachines:
          type: array
          description: The list of drained machines.
          items:
            $ref: '#/components/schemas/BareMetalAdminDrainedMachine'
      type: object
      id: BareMetalAdminMachineDrainStatus
      description: BareMetalAdminMachineDrainStatus represents the status of bare metal node machines that are undergoing drain operations.
    BareMetalBgpLbConfig:
      properties:
        addressPools:
          items:
            $ref: '#/components/schemas/BareMetalLoadBalancerAddressPool'
          description: Required. AddressPools is a list of non-overlapping IP pools used by load balancer typed services. All addresses must be routable to load balancer nodes. IngressVIP must be included in the pools.
          type: array
        bgpPeerConfigs:
          items:
            $ref: '#/components/schemas/BareMetalBgpPeerConfig'
          type: array
          description: Required. The list of BGP peers that the cluster will connect to. At least one peer must be configured for each control plane node. Control plane nodes will connect to these peers to advertise the control plane VIP. The Services load balancer also uses these peers by default. This field can be updated after cluster creation.
        asn:
          description: Required. BGP autonomous system number (ASN) of the cluster. This field can be updated after cluster creation.
          format: int64
          type: string
        loadBalancerNodePoolConfig:
          description: 'Specifies the node pool running data plane load balancing. L2 connectivity is required among nodes in this pool. If missing, the control plane node pool is used for data plane load balancing.'
          $ref: '#/components/schemas/BareMetalLoadBalancerNodePoolConfig'
      description: BareMetalBgpLbConfig represents configuration parameters for a Border Gateway Protocol (BGP) load balancer.
      id: BareMetalBgpLbConfig
      type: object
    BareMetalLoadBalancerConfig:
      type: object
      description: Specifies the load balancer configuration.
      id: BareMetalLoadBalancerConfig
      properties:
        manualLbConfig:
          description: Manually configured load balancers.
          $ref: '#/components/schemas/BareMetalManualLbConfig'
        bgpLbConfig:
          $ref: '#/components/schemas/BareMetalBgpLbConfig'
          description: Configuration for BGP typed load balancers. When set network_config.advanced_networking is automatically set to true.
        portConfig:
          $ref: '#/components/schemas/BareMetalPortConfig'
          description: Configures the ports that the load balancer will listen on.
        vipConfig:
          $ref: '#/components/schemas/BareMetalVipConfig'
          description: The VIPs used by the load balancer.
        metalLbConfig:
          description: Configuration for MetalLB load balancers.
          $ref: '#/components/schemas/BareMetalMetalLbConfig'
    BareMetalLoadBalancerNodePoolConfig:
      id: BareMetalLoadBalancerNodePoolConfig
      description: Specifies the load balancer's node pool configuration.
      properties:
        nodePoolConfig:
          $ref: '#/components/schemas/BareMetalNodePoolConfig'
          description: The generic configuration for a node pool running a load balancer.
      type: object
    BareMetalAdminManualLbConfig:
      properties:
        enabled:
          description: Whether manual load balancing is enabled.
          type: boolean
      description: BareMetalAdminManualLbConfig represents configuration parameters for a manual load balancer.
      id: BareMetalAdminManualLbConfig
      type: object
    VmwareStorageConfig:
      description: Specifies vSphere CSI components deployment config in the VMware user cluster.
      id: VmwareStorageConfig
      properties:
        vsphereCsiDisabled:
          description: Whether or not to deploy vSphere CSI components in the VMware user cluster. Enabled by default.
          type: boolean
      type: object
    VmwareAdminSeesawConfig:
      type: object
      id: VmwareAdminSeesawConfig
      description: 'VmwareSeesawConfig represents configuration parameters for an already existing Seesaw load balancer. IMPORTANT: Please note that the Anthos On-Prem API will not generate or update Seesaw configurations it can only bind a pre-existing configuration to a new user cluster. IMPORTANT: When attempting to create a user cluster with a pre-existing Seesaw load balancer you will need to follow some preparation steps before calling the ''CreateVmwareCluster'' API method. First you will need to create the user cluster''s namespace via kubectl. The namespace will need to use the following naming convention : -gke-onprem-mgmt or -gke-onprem-mgmt depending on whether you used the ''VmwareCluster.local_name'' to disambiguate collisions; for more context see the documentation of ''VmwareCluster.local_name''. Once the namespace is created you will need to create a secret resource via kubectl. This secret will contain copies of your Seesaw credentials. The Secret must be called ''user-cluster-creds'' and contain Seesaw''s SSH and Cert credentials. The credentials must be keyed with the following names: ''seesaw-ssh-private-key'', ''seesaw-ssh-public-key'', ''seesaw-ssh-ca-key'', ''seesaw-ssh-ca-cert''.'
      properties:
        ipBlocks:
          type: array
          description: The IP Blocks to be used by the Seesaw load balancer
          items:
            $ref: '#/components/schemas/VmwareIpBlock'
        vms:
          description: Names of the VMs created for this Seesaw group.
          type: array
          items:
            type: string
        stackdriverName:
          description: Name to be used by Stackdriver.
          type: string
        enableHa:
          description: Enable two load balancer VMs to achieve a highly-available Seesaw load balancer.
          type: boolean
        masterIp:
          description: MasterIP is the IP announced by the master of Seesaw group.
          type: string
        group:
          description: 'In general the following format should be used for the Seesaw group name: seesaw-for-[cluster_name].'
          type: string
    BareMetalManualLbConfig:
      properties:
        enabled:
          type: boolean
          description: Whether manual load balancing is enabled.
      id: BareMetalManualLbConfig
      type: object
      description: Represents configuration parameters for a manual load balancer.
    VmwareClusterUpgradePolicy:
      description: VmwareClusterUpgradePolicy defines the cluster upgrade policy.
      type: object
      id: VmwareClusterUpgradePolicy
      properties:
        controlPlaneOnly:
          description: Controls whether the upgrade applies to the control plane only.
          type: boolean
    EnrollVmwareNodePoolRequest:
      type: object
      id: EnrollVmwareNodePoolRequest
      description: Message for enrolling a VMware node pool.
      properties:
        vmwareNodePoolId:
          description: The target node pool id to be enrolled.
          type: string
    Expr:
      id: Expr
      type: object
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      properties:
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        description:
          type: string
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
        title:
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
          type: string
        location:
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
          type: string
    Status:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        details:
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
        code:
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
          format: int32
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
      id: Status
      type: object
    VmwareVsphereConfig:
      properties:
        hostGroups:
          type: array
          items:
            type: string
          description: Vsphere host groups to apply to all VMs in the node pool
        datastore:
          type: string
          description: The name of the vCenter datastore. Inherited from the user cluster.
        tags:
          items:
            $ref: '#/components/schemas/VmwareVsphereTag'
          type: array
          description: Tags to apply to VMs.
      description: VmwareVsphereConfig represents configuration for the VMware VCenter for node pool.
      type: object
      id: VmwareVsphereConfig
    Policy:
      id: Policy
      properties:
        etag:
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          format: byte
          type: string
        bindings:
          items:
            $ref: '#/components/schemas/Binding'
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
          type: array
        version:
          type: integer
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          format: int32
      type: object
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
    BareMetalAdminSecurityConfig:
      type: object
      properties:
        authorization:
          $ref: '#/components/schemas/Authorization'
          description: Configures user access to the admin cluster.
      description: Specifies the security related settings for the bare metal admin cluster.
      id: BareMetalAdminSecurityConfig
    VmwareAdminAddonNodeConfig:
      properties:
        autoResizeConfig:
          $ref: '#/components/schemas/VmwareAutoResizeConfig'
          description: VmwareAutoResizeConfig config specifies auto resize config.
      id: VmwareAdminAddonNodeConfig
      type: object
      description: VmwareAdminAddonNodeConfig contains add-on node configurations for VMware admin cluster.
    BareMetalNodePoolUpgradePolicy:
      properties:
        parallelUpgradeConfig:
          $ref: '#/components/schemas/BareMetalParallelUpgradeConfig'
          description: The parallel upgrade settings for worker node pools.
      description: BareMetalNodePoolUpgradePolicy defines the node pool upgrade policy.
      type: object
      id: BareMetalNodePoolUpgradePolicy
    BareMetalVersionInfo:
      description: Contains information about a specific Anthos on bare metal version.
      properties:
        hasDependencies:
          description: 'If set, the cluster dependencies (e.g. the admin cluster, other user clusters managed by the same admin cluster, version skew policy, etc) must be upgraded before this version can be installed or upgraded to.'
          type: boolean
        version:
          description: Version number e.g. 1.13.1.
          type: string
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/UpgradeDependency'
          description: The list of upgrade dependencies for this version.
      type: object
      id: BareMetalVersionInfo
    BareMetalAdminVipConfig:
      type: object
      description: BareMetalAdminVipConfig for bare metal load balancer configurations.
      properties:
        controlPlaneVip:
          type: string
          description: The VIP which you previously set aside for the Kubernetes API of this bare metal admin cluster.
      id: BareMetalAdminVipConfig
    BareMetalBgpPeerConfig:
      description: BareMetalBgpPeerConfig represents configuration parameters for a Border Gateway Protocol (BGP) peer.
      id: BareMetalBgpPeerConfig
      type: object
      properties:
        ipAddress:
          type: string
          description: Required. The IP address of the external peer device.
        asn:
          type: string
          format: int64
          description: Required. BGP autonomous system number (ASN) for the network that contains the external peer device.
        controlPlaneNodes:
          description: 'The IP address of the control plane node that connects to the external peer. If you don''t specify any control plane nodes, all control plane nodes can connect to the external peer. If you specify one or more IP addresses, only the nodes specified participate in peering sessions.'
          items:
            type: string
          type: array
    VmwareNodePoolAutoscalingConfig:
      type: object
      properties:
        maxReplicas:
          format: int32
          type: integer
          description: Maximum number of replicas in the NodePool.
        minReplicas:
          type: integer
          description: Minimum number of replicas in the NodePool.
          format: int32
      id: VmwareNodePoolAutoscalingConfig
      description: NodePoolAutoscaling config for the NodePool to allow for the kubernetes to scale NodePool.
    BareMetalMaintenanceStatus:
      id: BareMetalMaintenanceStatus
      properties:
        machineDrainStatus:
          description: The maintenance status of node machines.
          $ref: '#/components/schemas/BareMetalMachineDrainStatus'
      type: object
      description: Represents the maintenance status of the bare metal user cluster.
    VmwareAdminManualLbConfig:
      id: VmwareAdminManualLbConfig
      properties:
        addonsNodePort:
          format: int32
          description: NodePort for add-ons server in the admin cluster.
          type: integer
        konnectivityServerNodePort:
          description: NodePort for konnectivity server service running as a sidecar in each kube-apiserver pod (ex. 30564).
          type: integer
          format: int32
        ingressHttpNodePort:
          description: NodePort for ingress service's http. The ingress service in the admin cluster is implemented as a Service of type NodePort (ex. 32527).
          format: int32
          type: integer
        controlPlaneNodePort:
          type: integer
          format: int32
          description: NodePort for control plane service. The Kubernetes API server in the admin cluster is implemented as a Service of type NodePort (ex. 30968).
        ingressHttpsNodePort:
          format: int32
          description: NodePort for ingress service's https. The ingress service in the admin cluster is implemented as a Service of type NodePort (ex. 30139).
          type: integer
      type: object
    VmwareIpBlock:
      id: VmwareIpBlock
      properties:
        ips:
          type: array
          description: The node's network configurations used by the VMware user cluster.
          items:
            $ref: '#/components/schemas/VmwareHostIp'
        gateway:
          description: The network gateway used by the VMware user cluster.
          type: string
        netmask:
          description: The netmask used by the VMware user cluster.
          type: string
      description: Represents a collection of IP addresses to assign to nodes.
      type: object
    VmwareHostIp:
      properties:
        hostname:
          type: string
          description: Hostname of the machine. VM's name will be used if this field is empty.
        ip:
          type: string
          description: IP could be an IP address (like 1.2.3.4) or a CIDR (like 1.2.3.0/24).
      description: Represents VMware user cluster node's network configuration.
      id: VmwareHostIp
      type: object
    VmwareAutoRepairConfig:
      description: Specifies config to enable/disable auto repair. The cluster-health-controller is deployed only if Enabled is true.
      properties:
        enabled:
          type: boolean
          description: Whether auto repair is enabled.
      type: object
      id: VmwareAutoRepairConfig
    ListVmwareNodePoolsResponse:
      type: object
      description: Response message for listing VMware node pools.
      properties:
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        vmwareNodePools:
          items:
            $ref: '#/components/schemas/VmwareNodePool'
          type: array
          description: The node pools from the specified parent resource.
      id: ListVmwareNodePoolsResponse
    VmwareHostConfig:
      description: Represents the common parameters for all the hosts irrespective of their IP address.
      id: VmwareHostConfig
      properties:
        dnsSearchDomains:
          items:
            type: string
          description: DNS search domains.
          type: array
        dnsServers:
          items:
            type: string
          description: DNS servers.
          type: array
        ntpServers:
          description: NTP servers.
          items:
            type: string
          type: array
      type: object
    VmwareControlPlaneNodeConfig:
      properties:
        replicas:
          type: string
          format: int64
          description: 'The number of control plane nodes for this VMware user cluster. (default: 1 replica).'
        cpus:
          type: string
          description: 'The number of CPUs for each admin cluster node that serve as control planes for this VMware user cluster. (default: 4 CPUs)'
          format: int64
        vsphereConfig:
          $ref: '#/components/schemas/VmwareControlPlaneVsphereConfig'
          description: Vsphere-specific config.
        memory:
          type: string
          description: 'The megabytes of memory for each admin cluster node that serves as a control plane for this VMware user cluster (default: 8192 MB memory).'
          format: int64
        autoResizeConfig:
          description: AutoResizeConfig provides auto resizing configurations.
          $ref: '#/components/schemas/VmwareAutoResizeConfig'
      description: Specifies control plane node config for the VMware user cluster.
      id: VmwareControlPlaneNodeConfig
      type: object
    Location:
      type: object
      properties:
        labels:
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
          additionalProperties:
            type: string
        metadata:
          description: Service-specific metadata. For example the available capacity at the given location.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        displayName:
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
          type: string
      id: Location
      description: A resource that represents a Google Cloud location.
    VmwareControlPlaneV2Config:
      id: VmwareControlPlaneV2Config
      properties:
        controlPlaneIpBlock:
          $ref: '#/components/schemas/VmwareIpBlock'
          description: Static IP addresses for the control plane nodes.
      description: Specifies control plane V2 config.
      type: object
    BareMetalParallelUpgradeConfig:
      properties:
        minimumAvailableNodes:
          type: integer
          description: 'The minimum number of nodes that should be healthy and available during an upgrade. If set to the default value of 0, it is possible that none of the nodes will be available during an upgrade.'
          format: int32
        concurrentNodes:
          format: int32
          description: The maximum number of nodes that can be upgraded at once.
          type: integer
      type: object
      description: BareMetalParallelUpgradeConfig defines the parallel upgrade settings for worker node pools.
      id: BareMetalParallelUpgradeConfig
    Empty:
      type: object
      id: Empty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
    VmwareAdminVCenterConfig:
      id: VmwareAdminVCenterConfig
      type: object
      properties:
        resourcePool:
          description: The name of the vCenter resource pool for the admin cluster.
          type: string
        caCertData:
          description: Contains the vCenter CA certificate public key for SSL verification.
          type: string
        dataDisk:
          description: The name of the virtual machine disk (VMDK) for the admin cluster.
          type: string
        cluster:
          description: The name of the vCenter cluster for the admin cluster.
          type: string
        folder:
          type: string
          description: The name of the vCenter folder for the admin cluster.
        address:
          description: The vCenter IP address.
          type: string
        datastore:
          type: string
          description: The name of the vCenter datastore for the admin cluster.
        datacenter:
          description: The name of the vCenter datacenter for the admin cluster.
          type: string
      description: VmwareAdminVCenterConfig contains VCenter configuration for VMware admin cluster.
    Operation:
      id: Operation
      properties:
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
        metadata:
          type: object
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        response:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          type: object
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
    VmwareDataplaneV2Config:
      type: object
      description: 'Contains configurations for Dataplane V2, which is optimized dataplane for Kubernetes networking. For more information, see: https://cloud.google.com/kubernetes-engine/docs/concepts/dataplane-v2'
      id: VmwareDataplaneV2Config
      properties:
        advancedNetworking:
          description: Enable advanced networking which requires dataplane_v2_enabled to be set true.
          type: boolean
        dataplaneV2Enabled:
          description: Enables Dataplane V2.
          type: boolean
        windowsDataplaneV2Enabled:
          description: Enable Dataplane V2 for clusters with Windows nodes.
          type: boolean
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      id: TestIamPermissionsResponse
      properties:
        permissions:
          type: array
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
      type: object
    VmwareAdminLoadBalancerConfig:
      id: VmwareAdminLoadBalancerConfig
      properties:
        manualLbConfig:
          description: Manually configured load balancers.
          $ref: '#/components/schemas/VmwareAdminManualLbConfig'
        seesawConfig:
          $ref: '#/components/schemas/VmwareAdminSeesawConfig'
          readOnly: true
          description: Output only. Configuration for Seesaw typed load balancers.
        vipConfig:
          description: The VIPs used by the load balancer.
          $ref: '#/components/schemas/VmwareAdminVipConfig'
        f5Config:
          description: Configuration for F5 Big IP typed load balancers.
          $ref: '#/components/schemas/VmwareAdminF5BigIpConfig'
        metalLbConfig:
          $ref: '#/components/schemas/VmwareAdminMetalLbConfig'
          description: MetalLB load balancers.
      description: VmwareAdminLoadBalancerConfig contains load balancer configuration for VMware admin cluster.
      type: object
    BareMetalAdminMaintenanceStatus:
      description: BareMetalAdminMaintenanceStatus represents the maintenance status for bare metal Admin cluster CR's nodes.
      type: object
      properties:
        machineDrainStatus:
          description: Represents the status of draining and drained machine nodes. This is used to show the progress of cluster upgrade.
          $ref: '#/components/schemas/BareMetalAdminMachineDrainStatus'
      id: BareMetalAdminMaintenanceStatus
    VmwareNodePool:
      description: 'Resource VmwareNodePool represents a VMware node pool. ##'
      id: VmwareNodePool
      properties:
        displayName:
          description: The display name for the node pool.
          type: string
        updateTime:
          readOnly: true
          description: Output only. The time at which this node pool was last updated.
          type: string
          format: google-datetime
        status:
          $ref: '#/components/schemas/ResourceStatus'
          readOnly: true
          description: Output only. ResourceStatus representing the detailed VMware node pool state.
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time at which this node pool was created.
        onPremVersion:
          description: Anthos version for the node pool. Defaults to the user cluster version.
          type: string
        annotations:
          additionalProperties:
            type: string
          type: object
          description: 'Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.'
        state:
          description: Output only. The current state of the node pool.
          enumDescriptions:
            - Not set.
            - The PROVISIONING state indicates the node pool is being created.
            - The RUNNING state indicates the node pool has been created and is fully usable.
            - 'The RECONCILING state indicates that the node pool is being updated. It remains available, but potentially with degraded performance.'
            - The STOPPING state indicates the cluster is being deleted
            - The ERROR state indicates the node pool is in a broken unrecoverable state.
            - The DEGRADED state indicates the node pool requires user action to restore full functionality.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - RECONCILING
            - STOPPING
            - ERROR
            - DEGRADED
          readOnly: true
          type: string
        etag:
          type: string
          description: 'This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.'
        deleteTime:
          description: 'Output only. The time at which this node pool was deleted. If the resource is not deleted, this must be empty'
          format: google-datetime
          readOnly: true
          type: string
        name:
          description: Immutable. The resource name of this node pool.
          type: string
        nodePoolAutoscaling:
          $ref: '#/components/schemas/VmwareNodePoolAutoscalingConfig'
          description: Node pool autoscaling config for the node pool.
        config:
          description: Required. The node configuration of the node pool.
          $ref: '#/components/schemas/VmwareNodeConfig'
        uid:
          type: string
          readOnly: true
          description: Output only. The unique identifier of the node pool.
        reconciling:
          description: 'Output only. If set, there are currently changes in flight to the node pool.'
          readOnly: true
          type: boolean
      type: object
    VmwareSeesawConfig:
      type: object
      id: VmwareSeesawConfig
      properties:
        stackdriverName:
          type: string
          description: Name to be used by Stackdriver.
        enableHa:
          description: Enable two load balancer VMs to achieve a highly-available Seesaw load balancer.
          type: boolean
        ipBlocks:
          items:
            $ref: '#/components/schemas/VmwareIpBlock'
          type: array
          description: Required. The IP Blocks to be used by the Seesaw load balancer
        masterIp:
          type: string
          description: Required. MasterIP is the IP announced by the master of Seesaw group.
        group:
          type: string
          description: 'Required. In general the following format should be used for the Seesaw group name: seesaw-for-[cluster_name].'
        vms:
          description: Names of the VMs created for this Seesaw group.
          type: array
          items:
            type: string
      description: 'VmwareSeesawConfig represents configuration parameters for an already existing Seesaw load balancer. IMPORTANT: Please note that the Anthos On-Prem API will not generate or update Seesaw configurations it can only bind a pre-existing configuration to a new user cluster. IMPORTANT: When attempting to create a user cluster with a pre-existing Seesaw load balancer you will need to follow some preparation steps before calling the ''CreateVmwareCluster'' API method. First you will need to create the user cluster''s namespace via kubectl. The namespace will need to use the following naming convention : -gke-onprem-mgmt or -gke-onprem-mgmt depending on whether you used the ''VmwareCluster.local_name'' to disambiguate collisions; for more context see the documentation of ''VmwareCluster.local_name''. Once the namespace is created you will need to create a secret resource via kubectl. This secret will contain copies of your Seesaw credentials. The Secret must be called ''user-cluster-creds'' and contain Seesaw''s SSH and Cert credentials. The credentials must be keyed with the following names: ''seesaw-ssh-private-key'', ''seesaw-ssh-public-key'', ''seesaw-ssh-ca-key'', ''seesaw-ssh-ca-cert''.'
    BareMetalWorkloadNodeConfig:
      id: BareMetalWorkloadNodeConfig
      properties:
        maxPodsPerNode:
          description: The maximum number of pods a node can run. The size of the CIDR range assigned to the node will be derived from this parameter.
          type: string
          format: int64
        containerRuntime:
          enum:
            - CONTAINER_RUNTIME_UNSPECIFIED
            - CONTAINERD
          enumDescriptions:
            - No container runtime selected.
            - Containerd runtime.
          type: string
          description: Specifies which container runtime will be used.
      description: Specifies the workload node configurations.
      type: object
    CancelOperationRequest:
      id: CancelOperationRequest
      properties: {}
      type: object
      description: The request message for Operations.CancelOperation.
    BinaryAuthorization:
      type: object
      description: Configuration for Binary Authorization.
      id: BinaryAuthorization
      properties:
        evaluationMode:
          enumDescriptions:
            - Default value
            - Disable BinaryAuthorization
            - Enforce Kubernetes admission requests with BinaryAuthorization using the project's singleton policy.
          type: string
          enum:
            - EVALUATION_MODE_UNSPECIFIED
            - DISABLED
            - PROJECT_SINGLETON_POLICY_ENFORCE
          description: 'Mode of operation for binauthz policy evaluation. If unspecified, defaults to DISABLED.'
    VmwareAAGConfig:
      description: Specifies anti affinity group config for the VMware user cluster.
      type: object
      id: VmwareAAGConfig
      properties:
        aagConfigDisabled:
          description: Spread nodes across at least three physical hosts (requires at least three hosts). Enabled by default.
          type: boolean
    BareMetalAdminLoadBalancerConfig:
      properties:
        vipConfig:
          $ref: '#/components/schemas/BareMetalAdminVipConfig'
          description: The VIPs used by the load balancer.
        portConfig:
          $ref: '#/components/schemas/BareMetalAdminPortConfig'
          description: Configures the ports that the load balancer will listen on.
        manualLbConfig:
          $ref: '#/components/schemas/BareMetalAdminManualLbConfig'
          description: Manually configured load balancers.
      description: BareMetalAdminLoadBalancerConfig specifies the load balancer configuration.
      id: BareMetalAdminLoadBalancerConfig
      type: object
    VmwareAutoResizeConfig:
      id: VmwareAutoResizeConfig
      type: object
      properties:
        enabled:
          description: Whether to enable controle plane node auto resizing.
          type: boolean
      description: Represents auto resizing configurations for the VMware user cluster.
    BareMetalAdminOsEnvironmentConfig:
      id: BareMetalAdminOsEnvironmentConfig
      properties:
        packageRepoExcluded:
          type: boolean
          description: Whether the package repo should be added when initializing bare metal machines.
      description: Specifies operating system operation settings for cluster provisioning.
      type: object
    BareMetalAdminPortConfig:
      id: BareMetalAdminPortConfig
      properties:
        controlPlaneLoadBalancerPort:
          description: The port that control plane hosted load balancers will listen on.
          format: int32
          type: integer
      type: object
      description: BareMetalAdminPortConfig is the specification of load balancer ports.
    VmwareVsphereTag:
      properties:
        category:
          description: The Vsphere tag category.
          type: string
        tag:
          description: The Vsphere tag name.
          type: string
      type: object
      id: VmwareVsphereTag
      description: 'VmwareVsphereTag describes a vSphere tag to be placed on VMs in the node pool. For more information, see https://docs.vmware.com/en/VMware-vSphere/7.0/com.vmware.vsphere.vcenterhost.doc/GUID-E8E854DD-AA97-4E0C-8419-CE84F93C4058.html'
    BareMetalIslandModeCidrConfig:
      id: BareMetalIslandModeCidrConfig
      description: Specifies the cluster CIDR configuration while running in island mode.
      type: object
      properties:
        serviceAddressCidrBlocks:
          description: Required. All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field is mutable after creation starting with version 1.15.
          items:
            type: string
          type: array
        podAddressCidrBlocks:
          items:
            type: string
          description: Required. All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
          type: array
    OperationMetadata:
      type: object
      properties:
        requestedCancellation:
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have [Operation.error] value with a [google.rpc.Status.code] of 1, corresponding to `Code.CANCELLED`.'
          type: boolean
          readOnly: true
        controlPlaneDisconnected:
          type: boolean
          readOnly: true
          description: Output only. Denotes if the local managing cluster's control plane is currently disconnected. This is expected to occur temporarily during self-managed cluster upgrades.
        progress:
          description: Output only. Detailed progress information for the operation.
          $ref: '#/components/schemas/OperationProgress'
          readOnly: true
        type:
          description: Output only. Type of operation being executed.
          type: string
          enumDescriptions:
            - Not set.
            - The resource is being created.
            - The resource is being deleted.
            - The resource is being updated.
            - The resource is being upgraded.
            - The platform is being upgraded.
          enum:
            - OPERATION_TYPE_UNSPECIFIED
            - CREATE
            - DELETE
            - UPDATE
            - UPGRADE
            - PLATFORM_UPGRADE
          readOnly: true
        statusMessage:
          description: 'Output only. Human-readable status of the operation, if any.'
          readOnly: true
          type: string
        apiVersion:
          description: Output only. API version used to start the operation.
          type: string
          readOnly: true
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          type: string
          readOnly: true
        verb:
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
          type: string
        target:
          type: string
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
          readOnly: true
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
    EnrollVmwareClusterRequest:
      id: EnrollVmwareClusterRequest
      type: object
      description: Message for enrolling an existing VMware cluster to the Anthos On-Prem API.
      properties:
        adminClusterMembership:
          description: 'Required. The admin cluster this VMware user cluster belongs to. This is the full resource name of the admin cluster''s fleet membership. In the future, references to other resource types might be allowed if admin clusters are modeled as their own resources.'
          type: string
        validateOnly:
          description: Validate the request without actually doing any updates.
          type: boolean
        vmwareClusterId:
          description: 'User provided OnePlatform identifier that is used as part of the resource name. This must be unique among all GKE on-prem clusters within a project and location and will return a 409 if the cluster already exists. (https://tools.ietf.org/html/rfc1123) format.'
          type: string
        localName:
          type: string
          description: 'Optional. The object name of the VMware OnPremUserCluster custom resource on the associated admin cluster. This field is used to support conflicting resource names when enrolling existing clusters to the API. When not provided, this field will resolve to the vmware_cluster_id. Otherwise, it must match the object name of the VMware OnPremUserCluster custom resource. It is not modifiable outside / beyond the enrollment operation.'
    EnrollBareMetalAdminClusterRequest:
      id: EnrollBareMetalAdminClusterRequest
      type: object
      properties:
        membership:
          description: Required. This is the full resource name of this admin cluster's fleet membership.
          type: string
        bareMetalAdminClusterId:
          type: string
          description: 'User provided OnePlatform identifier that is used as part of the resource name. This must be unique among all GKE on-prem clusters within a project and location and will return a 409 if the cluster already exists. (https://tools.ietf.org/html/rfc1123) format.'
      description: Message for enrolling an existing bare metal admin cluster to the GKE on-prem API.
    BareMetalAdminApiServerArgument:
      properties:
        value:
          type: string
          description: Required. The value of the arg as it will be passed to the API Server command line.
        argument:
          description: Required. The argument name as it appears on the API Server command line please make sure to remove the leading dashes.
          type: string
      description: 'BareMetalAdminApiServerArgument represents an arg name->value pair. Only a subset of customized flags are supported. Please refer to the API server documentation below to know the exact format: https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/'
      type: object
      id: BareMetalAdminApiServerArgument
    VmwareAdminControlPlaneNodeConfig:
      properties:
        cpus:
          format: int64
          type: string
          description: The number of vCPUs for the control-plane node of the admin cluster.
        replicas:
          type: string
          format: int64
          description: 'The number of control plane nodes for this VMware admin cluster. (default: 1 replica).'
        memory:
          format: int64
          type: string
          description: The number of mebibytes of memory for the control-plane node of the admin cluster.
      id: VmwareAdminControlPlaneNodeConfig
      type: object
      description: VmwareAdminControlPlaneNodeConfig contains control plane node configuration for VMware admin cluster.
    BareMetalKubeletConfig:
      id: BareMetalKubeletConfig
      properties:
        serializeImagePullsDisabled:
          description: 'Prevents the Kubelet from pulling multiple images at a time. We recommend *not* changing the default value on nodes that run docker daemon with version < 1.9 or an Another Union File System (Aufs) storage backend. Issue https://github.com/kubernetes/kubernetes/issues/10959 has more details.'
          type: boolean
        registryPullQps:
          description: The limit of registry pulls per second. Setting this value to 0 means no limit. Updating this field may impact scalability by changing the amount of traffic produced by image pulls. Defaults to 5.
          format: int32
          type: integer
        registryBurst:
          description: 'The maximum size of bursty pulls, temporarily allows pulls to burst to this number, while still not exceeding registry_pull_qps. The value must not be a negative number. Updating this field may impact scalability by changing the amount of traffic produced by image pulls. Defaults to 10.'
          type: integer
          format: int32
      description: 'KubeletConfig defines the modifiable kubelet configurations for bare metal machines. Note: this list includes fields supported in GKE (see https://cloud.google.com/kubernetes-engine/docs/how-to/node-system-config#kubelet-options).'
      type: object
    ListLocationsResponse:
      id: ListLocationsResponse
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        locations:
          items:
            $ref: '#/components/schemas/Location'
          type: array
          description: A list of locations that matches the specified filter in the request.
      type: object
      description: The response message for Locations.ListLocations.
    VmwarePlatformConfig:
      description: VmwarePlatformConfig represents configuration for the VMware platform.
      properties:
        status:
          description: Output only. Resource status for the platform.
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
        platformVersion:
          description: Output only. The platform version e.g. 1.13.2.
          type: string
          readOnly: true
        bundles:
          description: Output only. The list of bundles installed in the admin cluster.
          type: array
          items:
            $ref: '#/components/schemas/VmwareBundleConfig'
          readOnly: true
        requiredPlatformVersion:
          description: 'Input only. The required platform version e.g. 1.13.1. If the current platform version is lower than the target version, the platform version will be updated to the target version. If the target version is not installed in the platform (bundle versions), download the target version bundle.'
          type: string
      type: object
      id: VmwarePlatformConfig
    Metric:
      properties:
        doubleValue:
          format: double
          description: For metrics with floating point value.
          type: number
        stringValue:
          description: 'For metrics with custom values (ratios, visual progress, etc.).'
          type: string
        metric:
          enumDescriptions:
            - Not set.
            - The total number of nodes being actuated.
            - The number of nodes draining.
            - The number of nodes actively upgrading.
            - The number of nodes to be upgraded.
            - The number of nodes upgraded.
            - The number of nodes to fail actuation.
            - The number of nodes healthy.
            - The number of nodes reconciling.
            - The number of nodes in maintenance mode.
            - The number of completed preflight checks.
            - The number of preflight checks running.
            - The number of preflight checks failed.
            - The total number of preflight checks.
          enum:
            - METRIC_ID_UNSPECIFIED
            - NODES_TOTAL
            - NODES_DRAINING
            - NODES_UPGRADING
            - NODES_PENDING_UPGRADE
            - NODES_UPGRADED
            - NODES_FAILED
            - NODES_HEALTHY
            - NODES_RECONCILING
            - NODES_IN_MAINTENANCE
            - PREFLIGHTS_COMPLETED
            - PREFLIGHTS_RUNNING
            - PREFLIGHTS_FAILED
            - PREFLIGHTS_TOTAL
          type: string
          description: Required. The metric name.
        intValue:
          description: For metrics with integer value.
          format: int64
          type: string
      description: 'Progress metric is (string, int|float|string) pair.'
      id: Metric
      type: object
    VmwareDhcpIpConfig:
      type: object
      description: Represents the network configuration required for the VMware user clusters with DHCP IP configurations.
      id: VmwareDhcpIpConfig
      properties:
        enabled:
          type: boolean
          description: enabled is a flag to mark if DHCP IP allocation is used for VMware user clusters.
    BareMetalNodeAccessConfig:
      properties:
        loginUser:
          description: LoginUser is the user name used to access node machines. It defaults to "root" if not set.
          type: string
      type: object
      id: BareMetalNodeAccessConfig
      description: Specifies the node access related settings for the bare metal user cluster.
    BareMetalControlPlaneNodePoolConfig:
      description: Specifies the control plane node pool configuration.
      properties:
        nodePoolConfig:
          description: Required. The generic configuration for a node pool running the control plane.
          $ref: '#/components/schemas/BareMetalNodePoolConfig'
      id: BareMetalControlPlaneNodePoolConfig
      type: object
    ListBareMetalClustersResponse:
      type: object
      description: Response message for listing bare metal Clusters.
      id: ListBareMetalClustersResponse
      properties:
        nextPageToken:
          description: A token identifying a page of results the server should return. If the token is not empty this means that more results are available and should be retrieved by repeating the request with the provided page token.
          type: string
        bareMetalClusters:
          items:
            $ref: '#/components/schemas/BareMetalCluster'
          description: The list of bare metal Clusters.
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
    ValidationCheck:
      properties:
        option:
          enumDescriptions:
            - Default value. Standard preflight validation check will be used.
            - Prevent failed preflight checks from failing.
            - Skip all preflight check validations.
          description: Options used for the validation check
          type: string
          enum:
            - OPTIONS_UNSPECIFIED
            - SKIP_VALIDATION_CHECK_BLOCKING
            - SKIP_VALIDATION_ALL
        status:
          description: Output only. The detailed validation check status.
          readOnly: true
          $ref: '#/components/schemas/ValidationCheckStatus'
        scenario:
          type: string
          enum:
            - SCENARIO_UNSPECIFIED
            - CREATE
            - UPDATE
          description: Output only. The scenario when the preflight checks were run.
          enumDescriptions:
            - Default value. This value is unused.
            - The validation check occurred during a create flow.
            - The validation check occurred during an update flow.
          readOnly: true
      description: ValidationCheck represents the result of preflight check.
      type: object
      id: ValidationCheck
    BareMetalClusterUpgradePolicy:
      id: BareMetalClusterUpgradePolicy
      properties:
        policy:
          enumDescriptions:
            - No upgrade policy selected.
            - Upgrade worker node pools sequentially.
            - Upgrade all worker node pools in parallel.
          type: string
          description: Specifies which upgrade policy to use.
          enum:
            - NODE_POOL_POLICY_UNSPECIFIED
            - SERIAL
            - CONCURRENT
      description: BareMetalClusterUpgradePolicy defines the cluster upgrade policy.
      type: object
    BareMetalMachineDrainStatus:
      description: Represents the status of node machines that are undergoing drain operations.
      type: object
      properties:
        drainingMachines:
          items:
            $ref: '#/components/schemas/BareMetalDrainingMachine'
          type: array
          description: The list of draning machines.
        drainedMachines:
          items:
            $ref: '#/components/schemas/BareMetalDrainedMachine'
          description: The list of drained machines.
          type: array
      id: BareMetalMachineDrainStatus
    BareMetalAdminProxyConfig:
      description: BareMetalAdminProxyConfig specifies the cluster proxy configuration.
      properties:
        noProxy:
          type: array
          items:
            type: string
          description: 'A list of IPs, hostnames, and domains that should skip the proxy. Examples: ["127.0.0.1", "example.com", ".corp", "localhost"].'
        uri:
          description: 'Required. Specifies the address of your proxy server. Examples: `http://domain` WARNING: Do not provide credentials in the format `http://(username:password@)domain` these will be rejected by the server.'
          type: string
      type: object
      id: BareMetalAdminProxyConfig
    VmwareManualLbConfig:
      properties:
        konnectivityServerNodePort:
          description: NodePort for konnectivity server service running as a sidecar in each kube-apiserver pod (ex. 30564).
          format: int32
          type: integer
        controlPlaneNodePort:
          type: integer
          format: int32
          description: NodePort for control plane service. The Kubernetes API server in the admin cluster is implemented as a Service of type NodePort (ex. 30968).
        ingressHttpNodePort:
          type: integer
          format: int32
          description: NodePort for ingress service's http. The ingress service in the admin cluster is implemented as a Service of type NodePort (ex. 32527).
        ingressHttpsNodePort:
          format: int32
          type: integer
          description: NodePort for ingress service's https. The ingress service in the admin cluster is implemented as a Service of type NodePort (ex. 30139).
      id: VmwareManualLbConfig
      description: 'Represents configuration parameters for an already existing manual load balancer. Given the nature of manual load balancers it is expected that said load balancer will be fully managed by users. IMPORTANT: Please note that the Anthos On-Prem API will not generate or update ManualLB configurations it can only bind a pre-existing configuration to a new VMware user cluster.'
      type: object
    ListVmwareClustersResponse:
      type: object
      id: ListVmwareClustersResponse
      properties:
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return. If the token is not empty this means that more results are available and should be retrieved by repeating the request with the provided page token.
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        vmwareClusters:
          type: array
          items:
            $ref: '#/components/schemas/VmwareCluster'
          description: The list of VMware Cluster.
      description: Response message for listing VMware Clusters.
    BareMetalLvpConfig:
      properties:
        path:
          type: string
          description: Required. The host machine path.
        storageClass:
          type: string
          description: Required. The StorageClass name that PVs will be created with.
      description: Specifies the configs for local persistent volumes (PVs).
      id: BareMetalLvpConfig
      type: object
    BareMetalApiServerArgument:
      properties:
        value:
          type: string
          description: Required. The value of the arg as it will be passed to the API Server command line.
        argument:
          type: string
          description: 'Required. The argument name as it appears on the API Server command line, make sure to remove the leading dashes.'
      type: object
      description: 'Represents an arg name->value pair. Only a subset of customized flags are supported. For the exact format, refer to the [API server documentation](https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/).'
      id: BareMetalApiServerArgument
    ListBareMetalAdminClustersResponse:
      id: ListBareMetalAdminClustersResponse
      type: object
      description: Response message for listing bare metal admin clusters.
      properties:
        nextPageToken:
          description: A token identifying a page of results the server should return. If the token is not empty this means that more results are available and should be retrieved by repeating the request with the provided page token.
          type: string
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        bareMetalAdminClusters:
          type: array
          description: The list of bare metal admin cluster.
          items:
            $ref: '#/components/schemas/BareMetalAdminCluster'
    BareMetalAdminMaintenanceConfig:
      properties:
        maintenanceAddressCidrBlocks:
          items:
            type: string
          type: array
          description: 'Required. All IPv4 address from these ranges will be placed into maintenance mode. Nodes in maintenance mode will be cordoned and drained. When both of these are true, the "baremetal.cluster.gke.io/maintenance" annotation will be set on the node resource.'
      type: object
      id: BareMetalAdminMaintenanceConfig
      description: BareMetalAdminMaintenanceConfig specifies configurations to put bare metal Admin cluster CRs nodes in and out of maintenance.
    BareMetalAdminCluster:
      id: BareMetalAdminCluster
      properties:
        loadBalancer:
          $ref: '#/components/schemas/BareMetalAdminLoadBalancerConfig'
          description: Load balancer configuration.
        controlPlane:
          description: Control plane configuration.
          $ref: '#/components/schemas/BareMetalAdminControlPlaneConfig'
        osEnvironmentConfig:
          $ref: '#/components/schemas/BareMetalAdminOsEnvironmentConfig'
          description: OS environment related configurations.
        validationCheck:
          $ref: '#/components/schemas/ValidationCheck'
          readOnly: true
          description: Output only. ValidationCheck representing the result of the preflight check.
        reconciling:
          description: 'Output only. If set, there are currently changes in flight to the bare metal Admin Cluster.'
          readOnly: true
          type: boolean
        localName:
          readOnly: true
          description: 'Output only. The object name of the bare metal cluster custom resource. This field is used to support conflicting names when enrolling existing clusters to the API. When used as a part of cluster enrollment, this field will differ from the ID in the resource name. For new clusters, this field will match the user provided cluster name and be visible in the last component of the resource name. It is not modifiable. All users should use this name to access their cluster using gkectl or kubectl and should expect to see the local name when viewing admin cluster controller logs.'
          type: string
        annotations:
          type: object
          additionalProperties:
            type: string
          description: 'Annotations on the bare metal admin cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.'
        state:
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - RECONCILING
            - STOPPING
            - ERROR
            - DEGRADED
          description: Output only. The current state of the bare metal admin cluster.
          type: string
          enumDescriptions:
            - Not set.
            - The PROVISIONING state indicates the cluster is being created.
            - The RUNNING state indicates the cluster has been created and is fully usable.
            - 'The RECONCILING state indicates that the cluster is being updated. It remains available, but potentially with degraded performance.'
            - The STOPPING state indicates the cluster is being deleted.
            - The ERROR state indicates the cluster is in a broken unrecoverable state.
            - The DEGRADED state indicates the cluster requires user action to restore full functionality.
          readOnly: true
        updateTime:
          description: Output only. The time at which this bare metal admin cluster was last updated.
          readOnly: true
          format: google-datetime
          type: string
        maintenanceConfig:
          description: Maintenance configuration.
          $ref: '#/components/schemas/BareMetalAdminMaintenanceConfig'
        storage:
          $ref: '#/components/schemas/BareMetalAdminStorageConfig'
          description: Storage configuration.
        networkConfig:
          $ref: '#/components/schemas/BareMetalAdminNetworkConfig'
          description: Network configuration.
        endpoint:
          description: Output only. The IP address name of bare metal admin cluster's API server.
          readOnly: true
          type: string
        fleet:
          $ref: '#/components/schemas/Fleet'
          description: Output only. Fleet configuration for the cluster.
          readOnly: true
        createTime:
          type: string
          format: google-datetime
          description: Output only. The time at which this bare metal admin cluster was created.
          readOnly: true
        status:
          readOnly: true
          description: Output only. ResourceStatus representing detailed cluster status.
          $ref: '#/components/schemas/ResourceStatus'
        bareMetalVersion:
          description: The Anthos clusters on bare metal version for the bare metal admin cluster.
          type: string
        deleteTime:
          readOnly: true
          description: 'Output only. The time at which this bare metal admin cluster was deleted. If the resource is not deleted, this must be empty'
          type: string
          format: google-datetime
        uid:
          type: string
          description: Output only. The unique identifier of the bare metal admin cluster.
          readOnly: true
        binaryAuthorization:
          description: Binary Authorization related configurations.
          $ref: '#/components/schemas/BinaryAuthorization'
        proxy:
          $ref: '#/components/schemas/BareMetalAdminProxyConfig'
          description: Proxy configuration.
        description:
          description: A human readable description of this bare metal admin cluster.
          type: string
        nodeAccessConfig:
          $ref: '#/components/schemas/BareMetalAdminNodeAccessConfig'
          description: Node access related configurations.
        securityConfig:
          description: Security related configuration.
          $ref: '#/components/schemas/BareMetalAdminSecurityConfig'
        etag:
          description: 'This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.'
          type: string
        clusterOperations:
          description: Cluster operations configuration.
          $ref: '#/components/schemas/BareMetalAdminClusterOperationsConfig'
        name:
          description: Immutable. The bare metal admin cluster resource name.
          type: string
        maintenanceStatus:
          description: Output only. MaintenanceStatus representing state of maintenance.
          readOnly: true
          $ref: '#/components/schemas/BareMetalAdminMaintenanceStatus'
        nodeConfig:
          description: Workload node configuration.
          $ref: '#/components/schemas/BareMetalAdminWorkloadNodeConfig'
      type: object
      description: '## Resource that represents a bare metal admin cluster.'
    EnrollBareMetalClusterRequest:
      id: EnrollBareMetalClusterRequest
      description: Message for enrolling an existing bare metal cluster to the Anthos On-Prem API.
      properties:
        adminClusterMembership:
          type: string
          description: 'Required. The admin cluster this bare metal user cluster belongs to. This is the full resource name of the admin cluster''s fleet membership. In the future, references to other resource types might be allowed if admin clusters are modeled as their own resources.'
        localName:
          description: 'Optional. The object name of the bare metal cluster custom resource on the associated admin cluster. This field is used to support conflicting resource names when enrolling existing clusters to the API. When not provided, this field will resolve to the bare_metal_cluster_id. Otherwise, it must match the object name of the bare metal cluster custom resource. It is not modifiable outside / beyond the enrollment operation.'
          type: string
        bareMetalClusterId:
          description: 'User provided OnePlatform identifier that is used as part of the resource name. This must be unique among all bare metal clusters within a project and location and will return a 409 if the cluster already exists. (https://tools.ietf.org/html/rfc1123) format.'
          type: string
      type: object
    ValidationCheckResult:
      type: object
      description: ValidationCheckResult defines the details about the validation check.
      properties:
        state:
          description: The validation check state.
          enumDescriptions:
            - The default value. The check result is unknown.
            - The check failed.
            - The check was skipped.
            - The check itself failed to complete.
            - The check encountered a warning.
          enum:
            - STATE_UNKNOWN
            - STATE_FAILURE
            - STATE_SKIPPED
            - STATE_FATAL
            - STATE_WARNING
          type: string
        category:
          description: The category of the validation.
          type: string
        details:
          type: string
          description: 'Detailed failure information, which might be unformatted.'
        reason:
          description: A human-readable message of the check failure.
          type: string
        description:
          type: string
          description: The description of the validation check.
      id: ValidationCheckResult
    ListOperationsResponse:
      type: object
      description: The response message for Operations.ListOperations.
      id: ListOperationsResponse
      properties:
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          type: array
          description: A list of operations that matches the specified filter in the request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
    Binding:
      id: Binding
      description: 'Associates `members`, or principals, with a `role`.'
      type: object
      properties:
        members:
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
          items:
            type: string
          type: array
        condition:
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          $ref: '#/components/schemas/Expr'
        role:
          type: string
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
    BareMetalAdminDrainedMachine:
      description: BareMetalAdminDrainedMachine represents the machines that are drained.
      id: BareMetalAdminDrainedMachine
      properties:
        nodeIp:
          type: string
          description: Drained machine IP address.
      type: object
    VmwareControlPlaneVsphereConfig:
      type: object
      id: VmwareControlPlaneVsphereConfig
      properties:
        datastore:
          description: The Vsphere datastore used by the control plane Node.
          type: string
        storagePolicyName:
          description: The Vsphere storage policy used by the control plane Node.
          type: string
      description: Specifies control plane node config.
    VmwareNetworkConfig:
      type: object
      description: Specifies network config for the VMware user cluster.
      properties:
        podAddressCidrBlocks:
          type: array
          items:
            type: string
          description: Required. All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
        staticIpConfig:
          description: Configuration settings for a static IP configuration.
          $ref: '#/components/schemas/VmwareStaticIpConfig'
        hostConfig:
          $ref: '#/components/schemas/VmwareHostConfig'
          description: Represents common network settings irrespective of the host's IP address.
        vcenterNetwork:
          readOnly: true
          type: string
          description: Output only. vcenter_network specifies vCenter network name. Inherited from the admin cluster.
        dhcpIpConfig:
          description: Configuration settings for a DHCP IP configuration.
          $ref: '#/components/schemas/VmwareDhcpIpConfig'
        serviceAddressCidrBlocks:
          description: Required. All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
          items:
            type: string
          type: array
        controlPlaneV2Config:
          $ref: '#/components/schemas/VmwareControlPlaneV2Config'
          description: Configuration for control plane V2 mode.
      id: VmwareNetworkConfig
    VmwareCluster:
      properties:
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - RECONCILING
            - STOPPING
            - ERROR
            - DEGRADED
          readOnly: true
          description: Output only. The current state of VMware user cluster.
          enumDescriptions:
            - Not set.
            - The PROVISIONING state indicates the cluster is being created.
            - The RUNNING state indicates the cluster has been created and is fully usable.
            - 'The RECONCILING state indicates that the cluster is being updated. It remains available, but potentially with degraded performance.'
            - The STOPPING state indicates the cluster is being deleted.
            - The ERROR state indicates the cluster is in a broken unrecoverable state.
            - The DEGRADED state indicates the cluster requires user action to restore full functionality.
        endpoint:
          type: string
          readOnly: true
          description: Output only. The DNS name of VMware user cluster's API server.
        uid:
          description: Output only. The unique identifier of the VMware user cluster.
          type: string
          readOnly: true
        validationCheck:
          $ref: '#/components/schemas/ValidationCheck'
          readOnly: true
          description: Output only. ValidationCheck represents the result of the preflight check job.
        createTime:
          format: google-datetime
          description: Output only. The time at which VMware user cluster was created.
          type: string
          readOnly: true
        adminClusterName:
          description: Output only. The resource name of the VMware admin cluster hosting this user cluster.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time at which VMware user cluster was last updated.
          format: google-datetime
          type: string
          readOnly: true
        adminClusterMembership:
          type: string
          description: 'Required. The admin cluster this VMware user cluster belongs to. This is the full resource name of the admin cluster''s fleet membership. In the future, references to other resource types might be allowed if admin clusters are modeled as their own resources.'
        onPremVersion:
          type: string
          description: Required. The Anthos clusters on the VMware version for your user cluster.
        annotations:
          description: 'Annotations on the VMware user cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.'
          type: object
          additionalProperties:
            type: string
        authorization:
          $ref: '#/components/schemas/Authorization'
          description: RBAC policy that will be applied and managed by the Anthos On-Prem API.
        storage:
          description: Storage configuration.
          $ref: '#/components/schemas/VmwareStorageConfig'
        description:
          description: A human readable description of this VMware user cluster.
          type: string
        networkConfig:
          description: The VMware user cluster network configuration.
          $ref: '#/components/schemas/VmwareNetworkConfig'
        reconciling:
          type: boolean
          readOnly: true
          description: 'Output only. If set, there are currently changes in flight to the VMware user cluster.'
        dataplaneV2:
          $ref: '#/components/schemas/VmwareDataplaneV2Config'
          description: VmwareDataplaneV2Config specifies configuration for Dataplane V2.
        deleteTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time at which VMware user cluster was deleted.
        status:
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
          description: Output only. ResourceStatus representing detailed cluster state.
        fleet:
          description: Output only. Fleet configuration for the cluster.
          readOnly: true
          $ref: '#/components/schemas/Fleet'
        loadBalancer:
          description: Load balancer configuration.
          $ref: '#/components/schemas/VmwareLoadBalancerConfig'
        enableControlPlaneV2:
          type: boolean
          description: Enable control plane V2. Default to false.
        disableBundledIngress:
          type: boolean
          description: Disable bundled ingress.
        vcenter:
          readOnly: true
          description: Output only. VmwareVCenterConfig specifies vCenter config for the user cluster. Inherited from the admin cluster.
          $ref: '#/components/schemas/VmwareVCenterConfig'
        name:
          description: Immutable. The VMware user cluster resource name.
          type: string
        controlPlaneNode:
          $ref: '#/components/schemas/VmwareControlPlaneNodeConfig'
          description: VMware user cluster control plane nodes must have either 1 or 3 replicas.
        localName:
          readOnly: true
          description: 'Output only. The object name of the VMware OnPremUserCluster custom resource on the associated admin cluster. This field is used to support conflicting names when enrolling existing clusters to the API. When used as a part of cluster enrollment, this field will differ from the ID in the resource name. For new clusters, this field will match the user provided cluster name and be visible in the last component of the resource name. It is not modifiable. All users should use this name to access their cluster using gkectl or kubectl and should expect to see the local name when viewing admin cluster controller logs.'
          type: string
        vmTrackingEnabled:
          description: Enable VM tracking.
          type: boolean
        upgradePolicy:
          $ref: '#/components/schemas/VmwareClusterUpgradePolicy'
          description: Specifies upgrade policy for the cluster.
        etag:
          description: 'This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.'
          type: string
        autoRepairConfig:
          $ref: '#/components/schemas/VmwareAutoRepairConfig'
          description: Configuration for auto repairing.
        antiAffinityGroups:
          $ref: '#/components/schemas/VmwareAAGConfig'
          description: AAGConfig specifies whether to spread VMware user cluster nodes across at least three physical hosts in the datacenter.
      type: object
      id: VmwareCluster
      description: 'Resource that represents a VMware user cluster. ##'
    BareMetalAdminDrainingMachine:
      properties:
        nodeIp:
          type: string
          description: Draining machine IP address.
        podCount:
          format: int32
          type: integer
          description: The count of pods yet to drain.
      description: BareMetalAdminDrainingMachine represents the machines that are currently draining.
      type: object
      id: BareMetalAdminDrainingMachine
    VmwareLoadBalancerConfig:
      properties:
        seesawConfig:
          description: Output only. Configuration for Seesaw typed load balancers.
          $ref: '#/components/schemas/VmwareSeesawConfig'
          readOnly: true
        f5Config:
          $ref: '#/components/schemas/VmwareF5BigIpConfig'
          description: Configuration for F5 Big IP typed load balancers.
        vipConfig:
          $ref: '#/components/schemas/VmwareVipConfig'
          description: The VIPs used by the load balancer.
        metalLbConfig:
          description: Configuration for MetalLB typed load balancers.
          $ref: '#/components/schemas/VmwareMetalLbConfig'
        manualLbConfig:
          $ref: '#/components/schemas/VmwareManualLbConfig'
          description: Manually configured load balancers.
      type: object
      description: Specifies the locad balancer config for the VMware user cluster.
      id: VmwareLoadBalancerConfig
    QueryBareMetalAdminVersionConfigResponse:
      id: QueryBareMetalAdminVersionConfigResponse
      properties:
        versions:
          type: array
          items:
            $ref: '#/components/schemas/BareMetalVersionInfo'
          description: List of available versions to install or to upgrade to.
      description: Response message for querying bare metal admin cluster version config.
      type: object
    VmwareAdminCluster:
      type: object
      id: VmwareAdminCluster
      properties:
        addonNode:
          description: The VMware admin cluster addon node configuration.
          $ref: '#/components/schemas/VmwareAdminAddonNodeConfig'
        controlPlaneNode:
          description: The VMware admin cluster control plane node configuration.
          $ref: '#/components/schemas/VmwareAdminControlPlaneNodeConfig'
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time at which VMware admin cluster was last updated.
        fleet:
          description: Output only. Fleet configuration for the cluster.
          readOnly: true
          $ref: '#/components/schemas/Fleet'
        description:
          description: A human readable description of this VMware admin cluster.
          type: string
        loadBalancer:
          description: The VMware admin cluster load balancer configuration.
          $ref: '#/components/schemas/VmwareAdminLoadBalancerConfig'
        vcenter:
          $ref: '#/components/schemas/VmwareAdminVCenterConfig'
          description: The VMware admin cluster VCenter configuration.
        platformConfig:
          description: The VMware platform configuration.
          $ref: '#/components/schemas/VmwarePlatformConfig'
        reconciling:
          description: 'Output only. If set, there are currently changes in flight to the VMware admin cluster.'
          readOnly: true
          type: boolean
        etag:
          type: string
          description: 'This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.'
        uid:
          type: string
          description: Output only. The unique identifier of the VMware admin cluster.
          readOnly: true
        bootstrapClusterMembership:
          description: The bootstrap cluster this VMware admin cluster belongs to.
          type: string
        name:
          type: string
          description: Immutable. The VMware admin cluster resource name.
        status:
          description: Output only. ResourceStatus representing detailed cluster state.
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
        state:
          description: Output only. The current state of VMware admin cluster.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - RECONCILING
            - STOPPING
            - ERROR
            - DEGRADED
          readOnly: true
          enumDescriptions:
            - Not set.
            - The PROVISIONING state indicates the cluster is being created.
            - The RUNNING state indicates the cluster has been created and is fully usable.
            - 'The RECONCILING state indicates that the cluster is being updated. It remains available, but potentially with degraded performance.'
            - The STOPPING state indicates the cluster is being deleted.
            - The ERROR state indicates the cluster is in a broken unrecoverable state.
            - The DEGRADED state indicates the cluster requires user action to restore full functionality.
          type: string
        localName:
          readOnly: true
          description: 'Output only. The object name of the VMware OnPremAdminCluster custom resource. This field is used to support conflicting names when enrolling existing clusters to the API. When used as a part of cluster enrollment, this field will differ from the ID in the resource name. For new clusters, this field will match the user provided cluster name and be visible in the last component of the resource name. It is not modifiable. All users should use this name to access their cluster using gkectl or kubectl and should expect to see the local name when viewing admin cluster controller logs.'
          type: string
        autoRepairConfig:
          $ref: '#/components/schemas/VmwareAutoRepairConfig'
          description: The VMware admin cluster auto repair configuration.
        endpoint:
          readOnly: true
          description: Output only. The DNS name of VMware admin cluster's API server.
          type: string
        onPremVersion:
          type: string
          description: The Anthos clusters on the VMware version for the admin cluster.
        imageType:
          type: string
          description: The OS image type for the VMware admin cluster.
        antiAffinityGroups:
          $ref: '#/components/schemas/VmwareAAGConfig'
          description: The VMware admin cluster anti affinity group configuration.
        networkConfig:
          $ref: '#/components/schemas/VmwareAdminNetworkConfig'
          description: The VMware admin cluster network configuration.
        createTime:
          readOnly: true
          description: Output only. The time at which VMware admin cluster was created.
          format: google-datetime
          type: string
        annotations:
          description: 'Annotations on the VMware admin cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.'
          additionalProperties:
            type: string
          type: object
      description: Resource that represents a VMware admin cluster.
    BareMetalAdminIslandModeCidrConfig:
      properties:
        podAddressCidrBlocks:
          items:
            type: string
          type: array
          description: Required. All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
        serviceAddressCidrBlocks:
          description: Required. All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
          items:
            type: string
          type: array
      id: BareMetalAdminIslandModeCidrConfig
      description: BareMetalAdminIslandModeCidrConfig specifies the cluster CIDR configuration while running in island mode.
      type: object
    BareMetalLvpShareConfig:
      properties:
        sharedPathPvCount:
          format: int32
          type: integer
          description: The number of subdirectories to create under path.
        lvpConfig:
          description: Required. Defines the machine path and storage class for the LVP Share.
          $ref: '#/components/schemas/BareMetalLvpConfig'
      id: BareMetalLvpShareConfig
      description: Specifies the configs for local persistent volumes under a shared file system.
      type: object
    BareMetalOsEnvironmentConfig:
      id: BareMetalOsEnvironmentConfig
      type: object
      properties:
        packageRepoExcluded:
          type: boolean
          description: Whether the package repo should not be included when initializing bare metal machines.
      description: Specifies operating system settings for cluster provisioning.
    BareMetalNodePool:
      properties:
        updateTime:
          readOnly: true
          type: string
          description: Output only. The time at which this bare metal node pool was last updated.
          format: google-datetime
        reconciling:
          type: boolean
          readOnly: true
          description: 'Output only. If set, there are currently changes in flight to the bare metal node pool.'
        deleteTime:
          readOnly: true
          format: google-datetime
          description: 'Output only. The time at which this bare metal node pool was deleted. If the resource is not deleted, this must be empty'
          type: string
        uid:
          readOnly: true
          description: Output only. The unique identifier of the bare metal node pool.
          type: string
        name:
          description: Immutable. The bare metal node pool resource name.
          type: string
        status:
          readOnly: true
          description: Output only. ResourceStatus representing the detailed node pool status.
          $ref: '#/components/schemas/ResourceStatus'
        nodePoolConfig:
          description: Required. Node pool configuration.
          $ref: '#/components/schemas/BareMetalNodePoolConfig'
        upgradePolicy:
          $ref: '#/components/schemas/BareMetalNodePoolUpgradePolicy'
          description: The worker node pool upgrade policy.
        state:
          description: Output only. The current state of the bare metal node pool.
          enumDescriptions:
            - Not set.
            - The PROVISIONING state indicates the bare metal node pool is being created.
            - The RUNNING state indicates the bare metal node pool has been created and is fully usable.
            - 'The RECONCILING state indicates that the bare metal node pool is being updated. It remains available, but potentially with degraded performance.'
            - The STOPPING state indicates the bare metal node pool is being deleted.
            - The ERROR state indicates the bare metal node pool is in a broken unrecoverable state.
            - The DEGRADED state indicates the bare metal node pool requires user action to restore full functionality.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - RECONCILING
            - STOPPING
            - ERROR
            - DEGRADED
          type: string
        annotations:
          type: object
          additionalProperties:
            type: string
          description: 'Annotations on the bare metal node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.'
        etag:
          description: 'This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.'
          type: string
        displayName:
          description: The display name for the bare metal node pool.
          type: string
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time at which this bare metal node pool was created.
          type: string
      id: BareMetalNodePool
      type: object
      description: Resource that represents a bare metal node pool.
    BareMetalAdminWorkloadNodeConfig:
      type: object
      description: BareMetalAdminWorkloadNodeConfig specifies the workload node configurations.
      properties:
        maxPodsPerNode:
          description: The maximum number of pods a node can run. The size of the CIDR range assigned to the node will be derived from this parameter. By default 110 Pods are created per Node. Upper bound is 250 for both HA and non-HA admin cluster. Lower bound is 64 for non-HA admin cluster and 32 for HA admin cluster.
          type: string
          format: int64
      id: BareMetalAdminWorkloadNodeConfig
    BareMetalSecurityConfig:
      description: Specifies the security related settings for the bare metal user cluster.
      type: object
      id: BareMetalSecurityConfig
      properties:
        authorization:
          description: Configures user access to the user cluster.
          $ref: '#/components/schemas/Authorization'
    BareMetalNetworkConfig:
      id: BareMetalNetworkConfig
      description: Specifies the cluster network configuration.
      type: object
      properties:
        srIovConfig:
          description: Configuration for SR-IOV.
          $ref: '#/components/schemas/BareMetalSrIovConfig'
        islandModeCidr:
          $ref: '#/components/schemas/BareMetalIslandModeCidrConfig'
          description: 'Configuration for island mode CIDR. In an island-mode network, nodes have unique IP addresses, but pods don''t have unique addresses across clusters. This doesn''t cause problems because pods in one cluster never directly communicate with pods in another cluster. Instead, there are gateways that mediate between a pod in one cluster and a pod in another cluster.'
        multipleNetworkInterfacesConfig:
          $ref: '#/components/schemas/BareMetalMultipleNetworkInterfacesConfig'
          description: Configuration for multiple network interfaces.
        advancedNetworking:
          type: boolean
          description: 'Enables the use of advanced Anthos networking features, such as Bundled Load Balancing with BGP or the egress NAT gateway. Setting configuration for advanced networking features will automatically set this flag.'
    ResourceCondition:
      description: ResourceCondition provides a standard mechanism for higher-level status reporting from controller.
      id: ResourceCondition
      properties:
        type:
          description: 'Type of the condition. (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)'
          type: string
        reason:
          description: Machine-readable message indicating details about last transition.
          type: string
        lastTransitionTime:
          type: string
          format: google-datetime
          description: Last time the condition transit from one status to another.
        message:
          description: Human-readable message indicating details about last transition.
          type: string
        state:
          enumDescriptions:
            - Not set.
            - Resource is in the condition.
            - Resource is not in the condition.
            - Kubernetes controller can't decide if the resource is in the condition or not.
          description: state of the condition.
          enum:
            - STATE_UNSPECIFIED
            - STATE_TRUE
            - STATE_FALSE
            - STATE_UNKNOWN
          type: string
      type: object
    BareMetalSrIovConfig:
      id: BareMetalSrIovConfig
      type: object
      properties:
        enabled:
          description: Whether to install the SR-IOV operator.
          type: boolean
      description: Specifies the SR-IOV networking operator config.
    VmwareAdminMetalLbConfig:
      type: object
      id: VmwareAdminMetalLbConfig
      description: 'VmwareAdminMetalLbConfig represents configuration parameters for a MetalLB load balancer. For admin clusters, currently no configurations is needed.'
      properties: {}
    EnrollBareMetalNodePoolRequest:
      description: Message for enrolling an existing bare metal node pool to the GKE on-prem API.
      id: EnrollBareMetalNodePoolRequest
      properties:
        validateOnly:
          type: boolean
          description: 'If set, only validate the request, but do not actually enroll the node pool.'
        bareMetalNodePoolId:
          description: 'User provided OnePlatform identifier that is used as part of the resource name. (https://tools.ietf.org/html/rfc1123) format.'
          type: string
      type: object
    VmwareAddressPool:
      description: Represents an IP pool used by the load balancer.
      type: object
      properties:
        addresses:
          type: array
          items:
            type: string
          description: Required. The addresses that are part of this pool. Each address must be either in the CIDR form (1.2.3.0/24) or range form (1.2.3.1-1.2.3.5).
        manualAssign:
          type: boolean
          description: 'If true, prevent IP addresses from being automatically assigned.'
        avoidBuggyIps:
          type: boolean
          description: 'If true, avoid using IPs ending in .0 or .255. This avoids buggy consumer devices mistakenly dropping IPv4 traffic for those special IP addresses.'
        pool:
          description: Required. The name of the address pool.
          type: string
      id: VmwareAddressPool
    BareMetalStorageConfig:
      type: object
      description: BareMetalStorageConfig specifies the cluster storage configuration.
      id: BareMetalStorageConfig
      properties:
        lvpShareConfig:
          $ref: '#/components/schemas/BareMetalLvpShareConfig'
          description: Required. Specifies the config for local PersistentVolumes backed by subdirectories in a shared filesystem. These subdirectores are automatically created during cluster creation.
        lvpNodeMountsConfig:
          $ref: '#/components/schemas/BareMetalLvpConfig'
          description: 'Required. Specifies the config for local PersistentVolumes backed by mounted node disks. These disks need to be formatted and mounted by the user, which can be done before or after cluster creation.'
    BareMetalNodeConfig:
      type: object
      properties:
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'The labels assigned to this node. An object containing a list of key/value pairs. The labels here, unioned with the labels set on BareMetalNodePoolConfig are the set of labels that will be applied to the node. If there are any conflicts, the BareMetalNodeConfig labels take precedence. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.'
        nodeIp:
          type: string
          description: 'The default IPv4 address for SSH access and Kubernetes node. Example: 192.168.0.1'
      id: BareMetalNodeConfig
      description: BareMetalNodeConfig lists machine addresses to access Nodes.
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          items:
            type: string
          type: array
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
      id: TestIamPermissionsRequest
    BareMetalAdminNodeAccessConfig:
      type: object
      id: BareMetalAdminNodeAccessConfig
      description: Specifies the node access related settings for the bare metal admin cluster.
      properties:
        loginUser:
          type: string
          description: Required. LoginUser is the user name used to access node machines. It defaults to "root" if not set.
    ListBareMetalNodePoolsResponse:
      type: object
      properties:
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
        nextPageToken:
          type: string
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
        bareMetalNodePools:
          type: array
          description: The node pools from the specified parent resource.
          items:
            $ref: '#/components/schemas/BareMetalNodePool'
      id: ListBareMetalNodePoolsResponse
      description: Response message for listing bare metal node pools.
    VmwareVipConfig:
      description: Specifies the VIP config for the VMware user cluster load balancer.
      id: VmwareVipConfig
      type: object
      properties:
        ingressVip:
          type: string
          description: The VIP which you previously set aside for ingress traffic into this cluster.
        controlPlaneVip:
          type: string
          description: The VIP which you previously set aside for the Kubernetes API of this cluster.
    BareMetalMaintenanceConfig:
      description: Specifies configurations to put bare metal nodes in and out of maintenance.
      type: object
      id: BareMetalMaintenanceConfig
      properties:
        maintenanceAddressCidrBlocks:
          description: 'Required. All IPv4 address from these ranges will be placed into maintenance mode. Nodes in maintenance mode will be cordoned and drained. When both of these are true, the "baremetal.cluster.gke.io/maintenance" annotation will be set on the node resource.'
          items:
            type: string
          type: array
  parameters:
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
  x-stackQL-resources:
    locations:
      id: google.gkeonprem.locations
      name: locations
      title: Locations
      methods:
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
    operations:
      id: google.gkeonprem.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_bare_metal_node_pools_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_bare_metal_clusters_bare_metal_node_pools_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_bare_metal_node_pools_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_bare_metal_clusters_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_admin_clusters_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters~1{bareMetalAdminClustersId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_admin_clusters_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters~1{bareMetalAdminClustersId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_bare_metal_admin_clusters_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters~1{bareMetalAdminClustersId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_admin_clusters_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters~1{vmwareAdminClustersId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_vmware_admin_clusters_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters~1{vmwareAdminClustersId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_admin_clusters_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters~1{vmwareAdminClustersId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_vmware_node_pools_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_vmware_node_pools_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_vmware_clusters_vmware_node_pools_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_vmware_clusters_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_bare_metal_clusters_bare_metal_node_pools_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_bare_metal_clusters_bare_metal_node_pools_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_bare_metal_clusters_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_bare_metal_clusters_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_bare_metal_admin_clusters_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_bare_metal_admin_clusters_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_vmware_admin_clusters_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_vmware_admin_clusters_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_vmware_clusters_vmware_node_pools_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_vmware_clusters_vmware_node_pools_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_vmware_clusters_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_vmware_clusters_operations_get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
    bare_metal_clusters_iam_policies:
      id: google.gkeonprem.bare_metal_clusters_iam_policies
      name: bare_metal_clusters_iam_policies
      title: Bare Metal Clusters Iam Policies
      methods:
        projects_locations_bare_metal_clusters_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _projects_locations_bare_metal_clusters_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bare_metal_clusters_iam_policies/methods/projects_locations_bare_metal_clusters_get_iam_policy'
        insert: []
        update: []
        delete: []
    bare_metal_clusters:
      id: google.gkeonprem.bare_metal_clusters
      name: bare_metal_clusters
      title: Bare Metal Clusters
      methods:
        projects_locations_bare_metal_clusters_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_query_version_config:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters:queryVersionConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bareMetalClusters
        _projects_locations_bare_metal_clusters_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_enroll:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters:enroll/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_unenroll:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}:unenroll/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bare_metal_clusters/methods/projects_locations_bare_metal_clusters_get'
          - $ref: '#/components/x-stackQL-resources/bare_metal_clusters/methods/projects_locations_bare_metal_clusters_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/bare_metal_clusters/methods/projects_locations_bare_metal_clusters_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/bare_metal_clusters/methods/projects_locations_bare_metal_clusters_delete'
    bare_metal_node_pools:
      id: google.gkeonprem.bare_metal_node_pools
      name: bare_metal_node_pools
      title: Bare Metal Node Pools
      methods:
        projects_locations_bare_metal_clusters_bare_metal_node_pools_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_bare_metal_node_pools_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bareMetalNodePools
        _projects_locations_bare_metal_clusters_bare_metal_node_pools_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_bare_metal_node_pools_unenroll:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}:unenroll/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_bare_metal_node_pools_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_bare_metal_node_pools_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_bare_metal_node_pools_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_bare_metal_node_pools_enroll:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools:enroll/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bare_metal_node_pools/methods/projects_locations_bare_metal_clusters_bare_metal_node_pools_list'
          - $ref: '#/components/x-stackQL-resources/bare_metal_node_pools/methods/projects_locations_bare_metal_clusters_bare_metal_node_pools_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/bare_metal_node_pools/methods/projects_locations_bare_metal_clusters_bare_metal_node_pools_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/bare_metal_node_pools/methods/projects_locations_bare_metal_clusters_bare_metal_node_pools_delete'
    bare_metal_node_pools_iam_policies:
      id: google.gkeonprem.bare_metal_node_pools_iam_policies
      name: bare_metal_node_pools_iam_policies
      title: Bare Metal Node Pools Iam Policies
      methods:
        projects_locations_bare_metal_clusters_bare_metal_node_pools_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_bare_metal_node_pools_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_bare_metal_node_pools_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _projects_locations_bare_metal_clusters_bare_metal_node_pools_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bare_metal_node_pools_iam_policies/methods/projects_locations_bare_metal_clusters_bare_metal_node_pools_get_iam_policy'
        insert: []
        update: []
        delete: []
    bare_metal_admin_clusters:
      id: google.gkeonprem.bare_metal_admin_clusters
      name: bare_metal_admin_clusters
      title: Bare Metal Admin Clusters
      methods:
        projects_locations_bare_metal_admin_clusters_unenroll:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters~1{bareMetalAdminClustersId}:unenroll/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_admin_clusters_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters~1{bareMetalAdminClustersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_admin_clusters_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters~1{bareMetalAdminClustersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_admin_clusters_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_admin_clusters_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bareMetalAdminClusters
        _projects_locations_bare_metal_admin_clusters_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_admin_clusters_enroll:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters:enroll/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_admin_clusters_query_version_config:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters:queryVersionConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bare_metal_admin_clusters/methods/projects_locations_bare_metal_admin_clusters_get'
          - $ref: '#/components/x-stackQL-resources/bare_metal_admin_clusters/methods/projects_locations_bare_metal_admin_clusters_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/bare_metal_admin_clusters/methods/projects_locations_bare_metal_admin_clusters_create'
        update: []
        delete: []
    bare_metal_admin_clusters_iam_policies:
      id: google.gkeonprem.bare_metal_admin_clusters_iam_policies
      name: bare_metal_admin_clusters_iam_policies
      title: Bare Metal Admin Clusters Iam Policies
      methods:
        projects_locations_bare_metal_admin_clusters_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters~1{bareMetalAdminClustersId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _projects_locations_bare_metal_admin_clusters_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters~1{bareMetalAdminClustersId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_admin_clusters_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters~1{bareMetalAdminClustersId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_admin_clusters_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters~1{bareMetalAdminClustersId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bare_metal_admin_clusters_iam_policies/methods/projects_locations_bare_metal_admin_clusters_get_iam_policy'
        insert: []
        update: []
        delete: []
    vmware_admin_clusters_iam_policies:
      id: google.gkeonprem.vmware_admin_clusters_iam_policies
      name: vmware_admin_clusters_iam_policies
      title: Vmware Admin Clusters Iam Policies
      methods:
        projects_locations_vmware_admin_clusters_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters~1{vmwareAdminClustersId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_admin_clusters_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters~1{vmwareAdminClustersId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_admin_clusters_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters~1{vmwareAdminClustersId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _projects_locations_vmware_admin_clusters_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters~1{vmwareAdminClustersId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vmware_admin_clusters_iam_policies/methods/projects_locations_vmware_admin_clusters_get_iam_policy'
        insert: []
        update: []
        delete: []
    vmware_admin_clusters:
      id: google.gkeonprem.vmware_admin_clusters
      name: vmware_admin_clusters
      title: Vmware Admin Clusters
      methods:
        projects_locations_vmware_admin_clusters_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters~1{vmwareAdminClustersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_admin_clusters_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters~1{vmwareAdminClustersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_admin_clusters_unenroll:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters~1{vmwareAdminClustersId}:unenroll/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_admin_clusters_enroll:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters:enroll/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_admin_clusters_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.vmwareAdminClusters
        _projects_locations_vmware_admin_clusters_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vmware_admin_clusters/methods/projects_locations_vmware_admin_clusters_get'
          - $ref: '#/components/x-stackQL-resources/vmware_admin_clusters/methods/projects_locations_vmware_admin_clusters_list'
        insert: []
        update: []
        delete: []
    vmware_clusters:
      id: google.gkeonprem.vmware_clusters
      name: vmware_clusters
      title: Vmware Clusters
      methods:
        projects_locations_vmware_clusters_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.vmwareClusters
        _projects_locations_vmware_clusters_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_enroll:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters:enroll/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_unenroll:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}:unenroll/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_query_version_config:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters:queryVersionConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vmware_clusters/methods/projects_locations_vmware_clusters_get'
          - $ref: '#/components/x-stackQL-resources/vmware_clusters/methods/projects_locations_vmware_clusters_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/vmware_clusters/methods/projects_locations_vmware_clusters_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/vmware_clusters/methods/projects_locations_vmware_clusters_delete'
    vmware_clusters_iam_policies:
      id: google.gkeonprem.vmware_clusters_iam_policies
      name: vmware_clusters_iam_policies
      title: Vmware Clusters Iam Policies
      methods:
        projects_locations_vmware_clusters_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _projects_locations_vmware_clusters_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vmware_clusters_iam_policies/methods/projects_locations_vmware_clusters_get_iam_policy'
        insert: []
        update: []
        delete: []
    vmware_node_pools:
      id: google.gkeonprem.vmware_node_pools
      name: vmware_node_pools
      title: Vmware Node Pools
      methods:
        projects_locations_vmware_clusters_vmware_node_pools_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_vmware_node_pools_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_vmware_node_pools_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_vmware_node_pools_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_vmware_node_pools_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.vmwareNodePools
        _projects_locations_vmware_clusters_vmware_node_pools_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_vmware_node_pools_unenroll:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}:unenroll/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_vmware_node_pools_enroll:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools:enroll/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vmware_node_pools/methods/projects_locations_vmware_clusters_vmware_node_pools_get'
          - $ref: '#/components/x-stackQL-resources/vmware_node_pools/methods/projects_locations_vmware_clusters_vmware_node_pools_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/vmware_node_pools/methods/projects_locations_vmware_clusters_vmware_node_pools_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/vmware_node_pools/methods/projects_locations_vmware_clusters_vmware_node_pools_delete'
    vmware_node_pools_iam_policies:
      id: google.gkeonprem.vmware_node_pools_iam_policies
      name: vmware_node_pools_iam_policies
      title: Vmware Node Pools Iam Policies
      methods:
        projects_locations_vmware_clusters_vmware_node_pools_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _projects_locations_vmware_clusters_vmware_node_pools_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_vmware_node_pools_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_vmware_node_pools_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vmware_node_pools_iam_policies/methods/projects_locations_vmware_clusters_vmware_node_pools_get_iam_policy'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
    get:
      description: Gets information about a location.
      operationId: gkeonprem.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: gkeonprem.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: gkeonprem.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_get
      x-stackQL-verb: select
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: gkeonprem.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: gkeonprem.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: gkeonprem.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkeonprem.projects.locations.bareMetalClusters.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: bare_metal_clusters_iam_policies
      x-stackQL-method: projects_locations_bare_metal_clusters_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}':
    parameters: *ref_1
    delete:
      description: Deletes a single bare metal Cluster.
      operationId: gkeonprem.projects.locations.bareMetalClusters.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: ignoreErrors
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: bare_metal_clusters
      x-stackQL-method: projects_locations_bare_metal_clusters_delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single bare metal Cluster.
      operationId: gkeonprem.projects.locations.bareMetalClusters.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BareMetalCluster'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: bare_metal_clusters
      x-stackQL-method: projects_locations_bare_metal_clusters_get
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a single bare metal Cluster.
      operationId: gkeonprem.projects.locations.bareMetalClusters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalCluster'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: bare_metal_clusters
      x-stackQL-method: projects_locations_bare_metal_clusters_patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters:queryVersionConfig':
    parameters: *ref_1
    post:
      description: Queries the bare metal user cluster version config.
      operationId: gkeonprem.projects.locations.bareMetalClusters.queryVersionConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryBareMetalVersionConfigResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: createConfig.adminClusterName
          schema:
            type: string
        - in: query
          name: createConfig.adminClusterMembership
          schema:
            type: string
        - in: query
          name: upgradeConfig.clusterName
          schema:
            type: string
      x-stackQL-resource: bare_metal_clusters
      x-stackQL-method: projects_locations_bare_metal_clusters_query_version_config
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters':
    parameters: *ref_1
    post:
      description: Creates a new bare metal cluster in a given project and location.
      operationId: gkeonprem.projects.locations.bareMetalClusters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalCluster'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: bareMetalClusterId
          schema:
            type: string
      x-stackQL-resource: bare_metal_clusters
      x-stackQL-method: projects_locations_bare_metal_clusters_create
      x-stackQL-verb: insert
    get:
      description: Lists bare metal clusters in a given project and location.
      operationId: gkeonprem.projects.locations.bareMetalClusters.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBareMetalClustersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: bare_metal_clusters
      x-stackQL-method: projects_locations_bare_metal_clusters_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bareMetalClusters
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters:enroll':
    parameters: *ref_1
    post:
      description: 'Enrolls an existing bare metal user cluster and its node pools to the Anthos On-Prem API within a given project and location. Through enrollment, an existing cluster will become Anthos On-Prem API managed. The corresponding GCP resources will be created and all future modifications to the cluster and/or its node pools will be expected to be performed through the API.'
      operationId: gkeonprem.projects.locations.bareMetalClusters.enroll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollBareMetalClusterRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: bare_metal_clusters
      x-stackQL-method: projects_locations_bare_metal_clusters_enroll
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkeonprem.projects.locations.bareMetalClusters.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: bare_metal_clusters_iam_policies
      x-stackQL-method: projects_locations_bare_metal_clusters_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: gkeonprem.projects.locations.bareMetalClusters.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: bare_metal_clusters_iam_policies
      x-stackQL-method: projects_locations_bare_metal_clusters_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}:unenroll':
    parameters: *ref_1
    delete:
      description: 'Unenrolls an existing bare metal user cluster and its node pools from the Anthos On-Prem API within a given project and location. Unenrollment removes the Cloud reference to the cluster without modifying the underlying OnPrem Resources. Clusters and node pools will continue to run; however, they will no longer be accessible through the Anthos On-Prem API or its clients.'
      operationId: gkeonprem.projects.locations.bareMetalClusters.unenroll
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: bare_metal_clusters
      x-stackQL-method: projects_locations_bare_metal_clusters_unenroll
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_bare_metal_clusters_bare_metal_node_pools_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalNodePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_bare_metal_clusters_bare_metal_node_pools_operations_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools':
    parameters: *ref_1
    post:
      description: 'Creates a new bare metal node pool in a given project, location and Bare Metal cluster.'
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalNodePool'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: query
          name: bareMetalNodePoolId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: bare_metal_node_pools
      x-stackQL-method: projects_locations_bare_metal_clusters_bare_metal_node_pools_create
      x-stackQL-verb: insert
    get:
      description: 'Lists bare metal node pools in a given project, location and bare metal cluster.'
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBareMetalNodePoolsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: bare_metal_node_pools
      x-stackQL-method: projects_locations_bare_metal_clusters_bare_metal_node_pools_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bareMetalNodePools
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalNodePoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: bare_metal_node_pools_iam_policies
      x-stackQL-method: projects_locations_bare_metal_clusters_bare_metal_node_pools_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalNodePoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: bare_metal_node_pools_iam_policies
      x-stackQL-method: projects_locations_bare_metal_clusters_bare_metal_node_pools_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}:unenroll':
    parameters: *ref_1
    delete:
      description: Unenrolls a bare metal node pool from Anthos On-Prem API.
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.unenroll
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: bare_metal_node_pools
      x-stackQL-method: projects_locations_bare_metal_clusters_bare_metal_node_pools_unenroll
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single bare metal node pool.
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalNodePool'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: bare_metal_node_pools
      x-stackQL-method: projects_locations_bare_metal_clusters_bare_metal_node_pools_patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a single bare metal node pool.
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: ignoreErrors
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: bare_metal_node_pools
      x-stackQL-method: projects_locations_bare_metal_clusters_bare_metal_node_pools_delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single bare metal node pool.
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BareMetalNodePool'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: bare_metal_node_pools
      x-stackQL-method: projects_locations_bare_metal_clusters_bare_metal_node_pools_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: bare_metal_node_pools_iam_policies
      x-stackQL-method: projects_locations_bare_metal_clusters_bare_metal_node_pools_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools:enroll':
    parameters: *ref_1
    post:
      description: 'Enrolls an existing bare metal node pool to the Anthos On-Prem API within a given project and location. Through enrollment, an existing node pool will become Anthos On-Prem API managed. The corresponding GCP resources will be created.'
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.enroll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollBareMetalNodePoolRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: bare_metal_node_pools
      x-stackQL-method: projects_locations_bare_metal_clusters_bare_metal_node_pools_enroll
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: gkeonprem.projects.locations.bareMetalClusters.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_bare_metal_clusters_operations_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: gkeonprem.projects.locations.bareMetalClusters.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_bare_metal_clusters_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalAdminClustersId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_bare_metal_admin_clusters_operations_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_bare_metal_admin_clusters_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}:unenroll':
    parameters: *ref_1
    delete:
      description: 'Unenrolls an existing bare metal admin cluster from the Anthos On-Prem API within a given project and location. Unenrollment removes the Cloud reference to the cluster without modifying the underlying OnPrem Resources. Clusters will continue to run; however, they will no longer be accessible through the Anthos On-Prem API or its clients.'
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.unenroll
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: ignoreErrors
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: bare_metal_admin_clusters
      x-stackQL-method: projects_locations_bare_metal_admin_clusters_unenroll
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: bare_metal_admin_clusters_iam_policies
      x-stackQL-method: projects_locations_bare_metal_admin_clusters_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single bare metal admin cluster.
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalAdminCluster'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: bare_metal_admin_clusters
      x-stackQL-method: projects_locations_bare_metal_admin_clusters_patch
      x-stackQL-verb: exec
    get:
      description: Gets details of a single bare metal admin cluster.
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BareMetalAdminCluster'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: bare_metal_admin_clusters
      x-stackQL-method: projects_locations_bare_metal_admin_clusters_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalAdminClustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: bare_metal_admin_clusters_iam_policies
      x-stackQL-method: projects_locations_bare_metal_admin_clusters_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters':
    parameters: *ref_1
    post:
      description: 'Creates a new bare metal admin cluster in a given project and location. The API needs to be combined with creating a bootstrap cluster to work. See: https://cloud.google.com/anthos/clusters/docs/bare-metal/latest/installing/creating-clusters/create-admin-cluster-api#prepare_bootstrap_environment'
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalAdminCluster'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: bareMetalAdminClusterId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: bare_metal_admin_clusters
      x-stackQL-method: projects_locations_bare_metal_admin_clusters_create
      x-stackQL-verb: insert
    get:
      description: Lists bare metal admin clusters in a given project and location.
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBareMetalAdminClustersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: bare_metal_admin_clusters
      x-stackQL-method: projects_locations_bare_metal_admin_clusters_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bareMetalAdminClusters
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalAdminClustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: bare_metal_admin_clusters_iam_policies
      x-stackQL-method: projects_locations_bare_metal_admin_clusters_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters:enroll':
    parameters: *ref_1
    post:
      description: 'Enrolls an existing bare metal admin cluster to the Anthos On-Prem API within a given project and location. Through enrollment, an existing admin cluster will become Anthos On-Prem API managed. The corresponding GCP resources will be created and all future modifications to the cluster will be expected to be performed through the API.'
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.enroll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollBareMetalAdminClusterRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: bare_metal_admin_clusters
      x-stackQL-method: projects_locations_bare_metal_admin_clusters_enroll
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters:queryVersionConfig':
    parameters: *ref_1
    post:
      description: Queries the bare metal admin cluster version config.
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.queryVersionConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryBareMetalAdminVersionConfigResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: upgradeConfig.clusterName
          schema:
            type: string
      x-stackQL-resource: bare_metal_admin_clusters
      x-stackQL-method: projects_locations_bare_metal_admin_clusters_query_version_config
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareAdminClustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: vmware_admin_clusters_iam_policies
      x-stackQL-method: projects_locations_vmware_admin_clusters_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single VMware admin cluster.
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareAdminCluster'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: vmware_admin_clusters
      x-stackQL-method: projects_locations_vmware_admin_clusters_patch
      x-stackQL-verb: exec
    get:
      description: Gets details of a single VMware admin cluster.
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareAdminCluster'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: vmware_admin_clusters
      x-stackQL-method: projects_locations_vmware_admin_clusters_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}:unenroll':
    parameters: *ref_1
    delete:
      description: 'Unenrolls an existing VMware admin cluster from the Anthos On-Prem API within a given project and location. Unenrollment removes the Cloud reference to the cluster without modifying the underlying OnPrem Resources. Clusters will continue to run; however, they will no longer be accessible through the Anthos On-Prem API or its clients.'
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.unenroll
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: vmware_admin_clusters
      x-stackQL-method: projects_locations_vmware_admin_clusters_unenroll
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters:enroll':
    parameters: *ref_1
    post:
      description: 'Enrolls an existing VMware admin cluster to the Anthos On-Prem API within a given project and location. Through enrollment, an existing admin cluster will become Anthos On-Prem API managed. The corresponding GCP resources will be created and all future modifications to the cluster will be expected to be performed through the API.'
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.enroll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollVmwareAdminClusterRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: vmware_admin_clusters
      x-stackQL-method: projects_locations_vmware_admin_clusters_enroll
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareAdminClustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: vmware_admin_clusters_iam_policies
      x-stackQL-method: projects_locations_vmware_admin_clusters_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: vmware_admin_clusters_iam_policies
      x-stackQL-method: projects_locations_vmware_admin_clusters_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters':
    parameters: *ref_1
    get:
      description: Lists VMware admin clusters in a given project and location.
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVmwareAdminClustersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: vmware_admin_clusters
      x-stackQL-method: projects_locations_vmware_admin_clusters_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.vmwareAdminClusters
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_vmware_admin_clusters_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareAdminClustersId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_vmware_admin_clusters_operations_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single VMware cluster.
      operationId: gkeonprem.projects.locations.vmwareClusters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareCluster'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: vmware_clusters
      x-stackQL-method: projects_locations_vmware_clusters_patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a single VMware Cluster.
      operationId: gkeonprem.projects.locations.vmwareClusters.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: ignoreErrors
          schema:
            type: boolean
      x-stackQL-resource: vmware_clusters
      x-stackQL-method: projects_locations_vmware_clusters_delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single VMware Cluster.
      operationId: gkeonprem.projects.locations.vmwareClusters.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareCluster'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: vmware_clusters
      x-stackQL-method: projects_locations_vmware_clusters_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkeonprem.projects.locations.vmwareClusters.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: vmware_clusters_iam_policies
      x-stackQL-method: projects_locations_vmware_clusters_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkeonprem.projects.locations.vmwareClusters.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: vmware_clusters_iam_policies
      x-stackQL-method: projects_locations_vmware_clusters_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters':
    parameters: *ref_1
    post:
      description: Creates a new VMware user cluster in a given project and location.
      operationId: gkeonprem.projects.locations.vmwareClusters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareCluster'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: vmwareClusterId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: vmware_clusters
      x-stackQL-method: projects_locations_vmware_clusters_create
      x-stackQL-verb: insert
    get:
      description: Lists VMware Clusters in a given project and location.
      operationId: gkeonprem.projects.locations.vmwareClusters.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVmwareClustersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: vmware_clusters
      x-stackQL-method: projects_locations_vmware_clusters_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.vmwareClusters
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters:enroll':
    parameters: *ref_1
    post:
      description: 'Enrolls an existing VMware user cluster and its node pools to the Anthos On-Prem API within a given project and location. Through enrollment, an existing cluster will become Anthos On-Prem API managed. The corresponding GCP resources will be created and all future modifications to the cluster and/or its node pools will be expected to be performed through the API.'
      operationId: gkeonprem.projects.locations.vmwareClusters.enroll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollVmwareClusterRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: vmware_clusters
      x-stackQL-method: projects_locations_vmware_clusters_enroll
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}:unenroll':
    parameters: *ref_1
    delete:
      description: 'Unenrolls an existing VMware user cluster and its node pools from the Anthos On-Prem API within a given project and location. Unenrollment removes the Cloud reference to the cluster without modifying the underlying OnPrem Resources. Clusters and node pools will continue to run; however, they will no longer be accessible through the Anthos On-Prem API or UI.'
      operationId: gkeonprem.projects.locations.vmwareClusters.unenroll
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: vmware_clusters
      x-stackQL-method: projects_locations_vmware_clusters_unenroll
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters:queryVersionConfig':
    parameters: *ref_1
    post:
      description: Queries the VMware user cluster version config.
      operationId: gkeonprem.projects.locations.vmwareClusters.queryVersionConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryVmwareVersionConfigResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: upgradeConfig.clusterName
          schema:
            type: string
        - in: query
          name: createConfig.adminClusterMembership
          schema:
            type: string
        - in: query
          name: createConfig.adminClusterName
          schema:
            type: string
      x-stackQL-resource: vmware_clusters
      x-stackQL-method: projects_locations_vmware_clusters_query_version_config
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: gkeonprem.projects.locations.vmwareClusters.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: vmware_clusters_iam_policies
      x-stackQL-method: projects_locations_vmware_clusters_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareNodePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_vmware_clusters_vmware_node_pools_operations_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_vmware_clusters_vmware_node_pools_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single VMware node pool.
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareNodePool'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: vmware_node_pools
      x-stackQL-method: projects_locations_vmware_clusters_vmware_node_pools_patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a single VMware node pool.
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: ignoreErrors
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: vmware_node_pools
      x-stackQL-method: projects_locations_vmware_clusters_vmware_node_pools_delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single VMware node pool.
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareNodePool'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: vmware_node_pools
      x-stackQL-method: projects_locations_vmware_clusters_vmware_node_pools_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools':
    parameters: *ref_1
    post:
      description: 'Creates a new VMware node pool in a given project, location and VMWare cluster.'
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareNodePool'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: vmwareNodePoolId
          schema:
            type: string
      x-stackQL-resource: vmware_node_pools
      x-stackQL-method: projects_locations_vmware_clusters_vmware_node_pools_create
      x-stackQL-verb: insert
    get:
      description: 'Lists VMware node pools in a given project, location and VMWare cluster.'
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVmwareNodePoolsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: vmware_node_pools
      x-stackQL-method: projects_locations_vmware_clusters_vmware_node_pools_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.vmwareNodePools
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}:unenroll':
    parameters: *ref_1
    delete:
      description: Unenrolls a VMware node pool to Anthos On-Prem API
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.unenroll
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: vmware_node_pools
      x-stackQL-method: projects_locations_vmware_clusters_vmware_node_pools_unenroll
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: vmware_node_pools_iam_policies
      x-stackQL-method: projects_locations_vmware_clusters_vmware_node_pools_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareNodePoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: vmware_node_pools_iam_policies
      x-stackQL-method: projects_locations_vmware_clusters_vmware_node_pools_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareNodePoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: vmware_node_pools_iam_policies
      x-stackQL-method: projects_locations_vmware_clusters_vmware_node_pools_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools:enroll':
    parameters: *ref_1
    post:
      description: Enrolls a VMware node pool to Anthos On-Prem API
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.enroll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollVmwareNodePoolRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: vmware_node_pools
      x-stackQL-method: projects_locations_vmware_clusters_vmware_node_pools_enroll
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: gkeonprem.projects.locations.vmwareClusters.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_vmware_clusters_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: gkeonprem.projects.locations.vmwareClusters.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_vmware_clusters_operations_get
      x-stackQL-verb: select
