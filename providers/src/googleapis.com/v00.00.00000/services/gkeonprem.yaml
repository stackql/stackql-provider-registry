openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Anthos On-Prem API
  description: ''
  version: v1
  x-discovery-doc-revision: '20240228'
  x-generated-date: '2024-06-03'
externalDocs:
  url: https://cloud.google.com/anthos/clusters/docs/on-prem/
servers:
  - url: https://gkeonprem.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    BareMetalCluster:
      id: BareMetalCluster
      description: Resource that represents a bare metal user cluster.
      type: object
      properties:
        name:
          description: Immutable. The bare metal user cluster resource name.
          type: string
        adminClusterMembership:
          description: >-
            Required. The admin cluster this bare metal user cluster belongs to.
            This is the full resource name of the admin cluster's fleet
            membership.
          type: string
        description:
          description: A human readable description of this bare metal user cluster.
          type: string
        bareMetalVersion:
          description: >-
            Required. The Anthos clusters on bare metal version for your user
            cluster.
          type: string
        uid:
          description: Output only. The unique identifier of the bare metal user cluster.
          readOnly: true
          type: string
        state:
          description: Output only. The current state of the bare metal user cluster.
          readOnly: true
          type: string
          enumDescriptions:
            - Not set.
            - The PROVISIONING state indicates the cluster is being created.
            - >-
              The RUNNING state indicates the cluster has been created and is
              fully usable.
            - >-
              The RECONCILING state indicates that the cluster is being updated.
              It remains available, but potentially with degraded performance.
            - The STOPPING state indicates the cluster is being deleted.
            - >-
              The ERROR state indicates the cluster is in a broken unrecoverable
              state.
            - >-
              The DEGRADED state indicates the cluster requires user action to
              restore full functionality.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - RECONCILING
            - STOPPING
            - ERROR
            - DEGRADED
        endpoint:
          description: >-
            Output only. The IP address of the bare metal user cluster's API
            server.
          readOnly: true
          type: string
        reconciling:
          description: >-
            Output only. If set, there are currently changes in flight to the
            bare metal user cluster.
          readOnly: true
          type: boolean
        createTime:
          description: Output only. The time when the bare metal user cluster was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The time when the bare metal user cluster was last
            updated.
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: >-
            Output only. The time when the bare metal user cluster was deleted.
            If the resource is not deleted, this must be empty
          readOnly: true
          type: string
          format: google-datetime
        localName:
          description: >-
            Output only. The object name of the bare metal user cluster custom
            resource on the associated admin cluster. This field is used to
            support conflicting names when enrolling existing clusters to the
            API. When used as a part of cluster enrollment, this field will
            differ from the name in the resource name. For new clusters, this
            field will match the user provided cluster name and be visible in
            the last component of the resource name. It is not modifiable. When
            the local name and cluster name differ, the local name is used in
            the admin cluster controller logs. You use the cluster name when
            accessing the cluster using bmctl and kubectl.
          readOnly: true
          type: string
        etag:
          description: >-
            Output only. This checksum is computed by the server based on the
            value of other fields, and may be sent on update and delete requests
            to ensure the client has an up-to-date value before proceeding.
            Allows clients to perform consistent read-modify-writes through
            optimistic concurrency control.
          readOnly: true
          type: string
        annotations:
          description: >-
            Annotations on the bare metal user cluster. This field has the same
            restrictions as Kubernetes annotations. The total size of all keys
            and values combined is limited to 256k. Key can have 2 segments:
            prefix (optional) and name (required), separated by a slash (/).
            Prefix must be a DNS subdomain. Name must be 63 characters or less,
            begin and end with alphanumerics, with dashes (-), underscores (_),
            dots (.), and alphanumerics between.
          type: object
          additionalProperties:
            type: string
        networkConfig:
          description: Required. Network configuration.
          $ref: '#/components/schemas/BareMetalNetworkConfig'
        controlPlane:
          description: Required. Control plane configuration.
          $ref: '#/components/schemas/BareMetalControlPlaneConfig'
        loadBalancer:
          description: Required. Load balancer configuration.
          $ref: '#/components/schemas/BareMetalLoadBalancerConfig'
        storage:
          description: Required. Storage configuration.
          $ref: '#/components/schemas/BareMetalStorageConfig'
        proxy:
          description: Proxy configuration.
          $ref: '#/components/schemas/BareMetalProxyConfig'
        clusterOperations:
          description: Cluster operations configuration.
          $ref: '#/components/schemas/BareMetalClusterOperationsConfig'
        maintenanceConfig:
          description: Maintenance configuration.
          $ref: '#/components/schemas/BareMetalMaintenanceConfig'
        nodeConfig:
          description: Workload node configuration.
          $ref: '#/components/schemas/BareMetalWorkloadNodeConfig'
        fleet:
          description: Output only. Fleet configuration for the cluster.
          readOnly: true
          $ref: '#/components/schemas/Fleet'
        status:
          description: Output only. Detailed cluster status.
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
        validationCheck:
          description: Output only. The result of the preflight check.
          readOnly: true
          $ref: '#/components/schemas/ValidationCheck'
        securityConfig:
          description: Security related setting configuration.
          $ref: '#/components/schemas/BareMetalSecurityConfig'
        maintenanceStatus:
          description: Output only. Status of on-going maintenance tasks.
          readOnly: true
          $ref: '#/components/schemas/BareMetalMaintenanceStatus'
        adminClusterName:
          description: >-
            Output only. The resource name of the bare metal admin cluster
            managing this user cluster.
          readOnly: true
          type: string
        nodeAccessConfig:
          description: Node access related configurations.
          $ref: '#/components/schemas/BareMetalNodeAccessConfig'
        osEnvironmentConfig:
          description: OS environment related configurations.
          $ref: '#/components/schemas/BareMetalOsEnvironmentConfig'
        binaryAuthorization:
          description: Binary Authorization related configurations.
          $ref: '#/components/schemas/BinaryAuthorization'
        upgradePolicy:
          description: The cluster upgrade policy.
          $ref: '#/components/schemas/BareMetalClusterUpgradePolicy'
    BareMetalNetworkConfig:
      id: BareMetalNetworkConfig
      description: Specifies the cluster network configuration.
      type: object
      properties:
        islandModeCidr:
          description: >-
            Configuration for island mode CIDR. In an island-mode network, nodes
            have unique IP addresses, but pods don't have unique addresses
            across clusters. This doesn't cause problems because pods in one
            cluster never directly communicate with pods in another cluster.
            Instead, there are gateways that mediate between a pod in one
            cluster and a pod in another cluster.
          $ref: '#/components/schemas/BareMetalIslandModeCidrConfig'
        advancedNetworking:
          description: >-
            Enables the use of advanced Anthos networking features, such as
            Bundled Load Balancing with BGP or the egress NAT gateway. Setting
            configuration for advanced networking features will automatically
            set this flag.
          type: boolean
        multipleNetworkInterfacesConfig:
          description: Configuration for multiple network interfaces.
          $ref: '#/components/schemas/BareMetalMultipleNetworkInterfacesConfig'
        srIovConfig:
          description: Configuration for SR-IOV.
          $ref: '#/components/schemas/BareMetalSrIovConfig'
    BareMetalIslandModeCidrConfig:
      id: BareMetalIslandModeCidrConfig
      description: Specifies the cluster CIDR configuration while running in island mode.
      type: object
      properties:
        serviceAddressCidrBlocks:
          description: >-
            Required. All services in the cluster are assigned an RFC1918 IPv4
            address from these ranges. This field is mutable after creation
            starting with version 1.15.
          type: array
          items:
            type: string
        podAddressCidrBlocks:
          description: >-
            Required. All pods in the cluster are assigned an RFC1918 IPv4
            address from these ranges. This field cannot be changed after
            creation.
          type: array
          items:
            type: string
    BareMetalMultipleNetworkInterfacesConfig:
      id: BareMetalMultipleNetworkInterfacesConfig
      description: Specifies the multiple networking interfaces cluster configuration.
      type: object
      properties:
        enabled:
          description: >-
            Whether to enable multiple network interfaces for your pods. When
            set network_config.advanced_networking is automatically set to true.
          type: boolean
    BareMetalSrIovConfig:
      id: BareMetalSrIovConfig
      description: Specifies the SR-IOV networking operator config.
      type: object
      properties:
        enabled:
          description: Whether to install the SR-IOV operator.
          type: boolean
    BareMetalControlPlaneConfig:
      id: BareMetalControlPlaneConfig
      description: Specifies the control plane configuration.
      type: object
      properties:
        controlPlaneNodePoolConfig:
          description: Required. Configures the node pool running the control plane.
          $ref: '#/components/schemas/BareMetalControlPlaneNodePoolConfig'
        apiServerArgs:
          description: >-
            Customizes the default API server args. Only a subset of customized
            flags are supported. For the exact format, refer to the [API server
            documentation](https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/).
          type: array
          items:
            $ref: '#/components/schemas/BareMetalApiServerArgument'
    BareMetalControlPlaneNodePoolConfig:
      id: BareMetalControlPlaneNodePoolConfig
      description: Specifies the control plane node pool configuration.
      type: object
      properties:
        nodePoolConfig:
          description: >-
            Required. The generic configuration for a node pool running the
            control plane.
          $ref: '#/components/schemas/BareMetalNodePoolConfig'
    BareMetalNodePoolConfig:
      id: BareMetalNodePoolConfig
      description: >-
        BareMetalNodePoolConfig describes the configuration of all nodes within
        a given bare metal node pool.
      type: object
      properties:
        nodeConfigs:
          description: Required. The list of machine addresses in the bare metal node pool.
          type: array
          items:
            $ref: '#/components/schemas/BareMetalNodeConfig'
        operatingSystem:
          description: 'Specifies the nodes operating system (default: LINUX).'
          type: string
          enumDescriptions:
            - No operating system runtime selected.
            - Linux operating system.
          enum:
            - OPERATING_SYSTEM_UNSPECIFIED
            - LINUX
        taints:
          description: The initial taints assigned to nodes of this node pool.
          type: array
          items:
            $ref: '#/components/schemas/NodeTaint'
        labels:
          description: >-
            The labels assigned to nodes of this node pool. An object containing
            a list of key/value pairs. Example: { "name": "wrench", "mass":
            "1.3kg", "count": "3" }.
          type: object
          additionalProperties:
            type: string
        kubeletConfig:
          description: The modifiable kubelet configurations for the bare metal machines.
          $ref: '#/components/schemas/BareMetalKubeletConfig'
    BareMetalNodeConfig:
      id: BareMetalNodeConfig
      description: BareMetalNodeConfig lists machine addresses to access Nodes.
      type: object
      properties:
        nodeIp:
          description: >-
            The default IPv4 address for SSH access and Kubernetes node.
            Example: 192.168.0.1
          type: string
        labels:
          description: >-
            The labels assigned to this node. An object containing a list of
            key/value pairs. The labels here, unioned with the labels set on
            BareMetalNodePoolConfig are the set of labels that will be applied
            to the node. If there are any conflicts, the BareMetalNodeConfig
            labels take precedence. Example: { "name": "wrench", "mass":
            "1.3kg", "count": "3" }.
          type: object
          additionalProperties:
            type: string
    NodeTaint:
      id: NodeTaint
      description: >-
        NodeTaint applied to every Kubernetes node in a node pool. Kubernetes
        taints can be used together with tolerations to control how workloads
        are scheduled to your nodes. Node taints are permanent.
      type: object
      properties:
        key:
          description: Key associated with the effect.
          type: string
        value:
          description: Value associated with the effect.
          type: string
        effect:
          description: The taint effect.
          type: string
          enumDescriptions:
            - Not set.
            - >-
              Do not allow new pods to schedule onto the node unless they
              tolerate the taint, but allow all pods submitted to Kubelet
              without going through the scheduler to start, and allow all
              already-running pods to continue running. Enforced by the
              scheduler.
            - >-
              Like TaintEffectNoSchedule, but the scheduler tries not to
              schedule new pods onto the node, rather than prohibiting new pods
              from scheduling onto the node entirely. Enforced by the scheduler.
            - >-
              Evict any already-running pods that do not tolerate the taint.
              Currently enforced by NodeController.
          enum:
            - EFFECT_UNSPECIFIED
            - NO_SCHEDULE
            - PREFER_NO_SCHEDULE
            - NO_EXECUTE
    BareMetalKubeletConfig:
      id: BareMetalKubeletConfig
      description: >-
        KubeletConfig defines the modifiable kubelet configurations for bare
        metal machines. Note: this list includes fields supported in GKE (see
        https://cloud.google.com/kubernetes-engine/docs/how-to/node-system-config#kubelet-options).
      type: object
      properties:
        registryPullQps:
          description: >-
            The limit of registry pulls per second. Setting this value to 0
            means no limit. Updating this field may impact scalability by
            changing the amount of traffic produced by image pulls. Defaults to
            5.
          type: integer
          format: int32
        registryBurst:
          description: >-
            The maximum size of bursty pulls, temporarily allows pulls to burst
            to this number, while still not exceeding registry_pull_qps. The
            value must not be a negative number. Updating this field may impact
            scalability by changing the amount of traffic produced by image
            pulls. Defaults to 10.
          type: integer
          format: int32
        serializeImagePullsDisabled:
          description: >-
            Prevents the Kubelet from pulling multiple images at a time. We
            recommend *not* changing the default value on nodes that run docker
            daemon with version < 1.9 or an Another Union File System (Aufs)
            storage backend. Issue
            https://github.com/kubernetes/kubernetes/issues/10959 has more
            details.
          type: boolean
    BareMetalApiServerArgument:
      id: BareMetalApiServerArgument
      description: >-
        Represents an arg name->value pair. Only a subset of customized flags
        are supported. For the exact format, refer to the [API server
        documentation](https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/).
      type: object
      properties:
        argument:
          description: >-
            Required. The argument name as it appears on the API Server command
            line, make sure to remove the leading dashes.
          type: string
        value:
          description: >-
            Required. The value of the arg as it will be passed to the API
            Server command line.
          type: string
    BareMetalLoadBalancerConfig:
      id: BareMetalLoadBalancerConfig
      description: Specifies the load balancer configuration.
      type: object
      properties:
        vipConfig:
          description: The VIPs used by the load balancer.
          $ref: '#/components/schemas/BareMetalVipConfig'
        portConfig:
          description: Configures the ports that the load balancer will listen on.
          $ref: '#/components/schemas/BareMetalPortConfig'
        metalLbConfig:
          description: Configuration for MetalLB load balancers.
          $ref: '#/components/schemas/BareMetalMetalLbConfig'
        manualLbConfig:
          description: Manually configured load balancers.
          $ref: '#/components/schemas/BareMetalManualLbConfig'
        bgpLbConfig:
          description: >-
            Configuration for BGP typed load balancers. When set
            network_config.advanced_networking is automatically set to true.
          $ref: '#/components/schemas/BareMetalBgpLbConfig'
    BareMetalVipConfig:
      id: BareMetalVipConfig
      description: Specifies the VIP config for the bare metal load balancer.
      type: object
      properties:
        controlPlaneVip:
          description: >-
            The VIP which you previously set aside for the Kubernetes API of
            this bare metal user cluster.
          type: string
        ingressVip:
          description: >-
            The VIP which you previously set aside for ingress traffic into this
            bare metal user cluster.
          type: string
    BareMetalPortConfig:
      id: BareMetalPortConfig
      description: Specifies load balancer ports for the bare metal user cluster.
      type: object
      properties:
        controlPlaneLoadBalancerPort:
          description: The port that control plane hosted load balancers will listen on.
          type: integer
          format: int32
    BareMetalMetalLbConfig:
      id: BareMetalMetalLbConfig
      description: Represents configuration parameters for a MetalLB load balancer.
      type: object
      properties:
        addressPools:
          description: >-
            Required. AddressPools is a list of non-overlapping IP pools used by
            load balancer typed services. All addresses must be routable to load
            balancer nodes. IngressVIP must be included in the pools.
          type: array
          items:
            $ref: '#/components/schemas/BareMetalLoadBalancerAddressPool'
        loadBalancerNodePoolConfig:
          description: >-
            Specifies the node pool running the load balancer. L2 connectivity
            is required among nodes in this pool. If missing, the control plane
            node pool is used as the load balancer pool.
          $ref: '#/components/schemas/BareMetalLoadBalancerNodePoolConfig'
    BareMetalLoadBalancerAddressPool:
      id: BareMetalLoadBalancerAddressPool
      description: Represents an IP pool used by the load balancer.
      type: object
      properties:
        pool:
          description: Required. The name of the address pool.
          type: string
        addresses:
          description: >-
            Required. The addresses that are part of this pool. Each address
            must be either in the CIDR form (1.2.3.0/24) or range form
            (1.2.3.1-1.2.3.5).
          type: array
          items:
            type: string
        avoidBuggyIps:
          description: >-
            If true, avoid using IPs ending in .0 or .255. This avoids buggy
            consumer devices mistakenly dropping IPv4 traffic for those special
            IP addresses.
          type: boolean
        manualAssign:
          description: If true, prevent IP addresses from being automatically assigned.
          type: boolean
    BareMetalLoadBalancerNodePoolConfig:
      id: BareMetalLoadBalancerNodePoolConfig
      description: Specifies the load balancer's node pool configuration.
      type: object
      properties:
        nodePoolConfig:
          description: The generic configuration for a node pool running a load balancer.
          $ref: '#/components/schemas/BareMetalNodePoolConfig'
    BareMetalManualLbConfig:
      id: BareMetalManualLbConfig
      description: Represents configuration parameters for a manual load balancer.
      type: object
      properties:
        enabled:
          description: Whether manual load balancing is enabled.
          type: boolean
    BareMetalBgpLbConfig:
      id: BareMetalBgpLbConfig
      description: >-
        BareMetalBgpLbConfig represents configuration parameters for a Border
        Gateway Protocol (BGP) load balancer.
      type: object
      properties:
        asn:
          description: >-
            Required. BGP autonomous system number (ASN) of the cluster. This
            field can be updated after cluster creation.
          type: string
          format: int64
        bgpPeerConfigs:
          description: >-
            Required. The list of BGP peers that the cluster will connect to. At
            least one peer must be configured for each control plane node.
            Control plane nodes will connect to these peers to advertise the
            control plane VIP. The Services load balancer also uses these peers
            by default. This field can be updated after cluster creation.
          type: array
          items:
            $ref: '#/components/schemas/BareMetalBgpPeerConfig'
        addressPools:
          description: >-
            Required. AddressPools is a list of non-overlapping IP pools used by
            load balancer typed services. All addresses must be routable to load
            balancer nodes. IngressVIP must be included in the pools.
          type: array
          items:
            $ref: '#/components/schemas/BareMetalLoadBalancerAddressPool'
        loadBalancerNodePoolConfig:
          description: >-
            Specifies the node pool running data plane load balancing. L2
            connectivity is required among nodes in this pool. If missing, the
            control plane node pool is used for data plane load balancing.
          $ref: '#/components/schemas/BareMetalLoadBalancerNodePoolConfig'
    BareMetalBgpPeerConfig:
      id: BareMetalBgpPeerConfig
      description: >-
        BareMetalBgpPeerConfig represents configuration parameters for a Border
        Gateway Protocol (BGP) peer.
      type: object
      properties:
        asn:
          description: >-
            Required. BGP autonomous system number (ASN) for the network that
            contains the external peer device.
          type: string
          format: int64
        ipAddress:
          description: Required. The IP address of the external peer device.
          type: string
        controlPlaneNodes:
          description: >-
            The IP address of the control plane node that connects to the
            external peer. If you don't specify any control plane nodes, all
            control plane nodes can connect to the external peer. If you specify
            one or more IP addresses, only the nodes specified participate in
            peering sessions.
          type: array
          items:
            type: string
    BareMetalStorageConfig:
      id: BareMetalStorageConfig
      description: BareMetalStorageConfig specifies the cluster storage configuration.
      type: object
      properties:
        lvpShareConfig:
          description: >-
            Required. Specifies the config for local PersistentVolumes backed by
            subdirectories in a shared filesystem. These subdirectores are
            automatically created during cluster creation.
          $ref: '#/components/schemas/BareMetalLvpShareConfig'
        lvpNodeMountsConfig:
          description: >-
            Required. Specifies the config for local PersistentVolumes backed by
            mounted node disks. These disks need to be formatted and mounted by
            the user, which can be done before or after cluster creation.
          $ref: '#/components/schemas/BareMetalLvpConfig'
    BareMetalLvpShareConfig:
      id: BareMetalLvpShareConfig
      description: >-
        Specifies the configs for local persistent volumes under a shared file
        system.
      type: object
      properties:
        lvpConfig:
          description: >-
            Required. Defines the machine path and storage class for the LVP
            Share.
          $ref: '#/components/schemas/BareMetalLvpConfig'
        sharedPathPvCount:
          description: The number of subdirectories to create under path.
          type: integer
          format: int32
    BareMetalLvpConfig:
      id: BareMetalLvpConfig
      description: Specifies the configs for local persistent volumes (PVs).
      type: object
      properties:
        path:
          description: Required. The host machine path.
          type: string
        storageClass:
          description: Required. The StorageClass name that PVs will be created with.
          type: string
    BareMetalProxyConfig:
      id: BareMetalProxyConfig
      description: Specifies the cluster proxy configuration.
      type: object
      properties:
        uri:
          description: >-
            Required. Specifies the address of your proxy server. Examples:
            `http://domain` Do not provide credentials in the format
            `http://(username:password@)domain` these will be rejected by the
            server.
          type: string
        noProxy:
          description: >-
            A list of IPs, hostnames, and domains that should skip the proxy.
            Examples: ["127.0.0.1", "example.com", ".corp", "localhost"].
          type: array
          items:
            type: string
    BareMetalClusterOperationsConfig:
      id: BareMetalClusterOperationsConfig
      description: Specifies the bare metal user cluster's observability infrastructure.
      type: object
      properties:
        enableApplicationLogs:
          description: >-
            Whether collection of application logs/metrics should be enabled (in
            addition to system logs/metrics).
          type: boolean
    BareMetalMaintenanceConfig:
      id: BareMetalMaintenanceConfig
      description: >-
        Specifies configurations to put bare metal nodes in and out of
        maintenance.
      type: object
      properties:
        maintenanceAddressCidrBlocks:
          description: >-
            Required. All IPv4 address from these ranges will be placed into
            maintenance mode. Nodes in maintenance mode will be cordoned and
            drained. When both of these are true, the
            "baremetal.cluster.gke.io/maintenance" annotation will be set on the
            node resource.
          type: array
          items:
            type: string
    BareMetalWorkloadNodeConfig:
      id: BareMetalWorkloadNodeConfig
      description: Specifies the workload node configurations.
      type: object
      properties:
        maxPodsPerNode:
          description: >-
            The maximum number of pods a node can run. The size of the CIDR
            range assigned to the node will be derived from this parameter.
          type: string
          format: int64
        containerRuntime:
          description: Specifies which container runtime will be used.
          type: string
          enumDescriptions:
            - No container runtime selected.
            - Containerd runtime.
          enum:
            - CONTAINER_RUNTIME_UNSPECIFIED
            - CONTAINERD
    Fleet:
      id: Fleet
      description: >-
        Fleet related configuration. Fleets are a Google Cloud concept for
        logically organizing clusters, letting you use and manage multi-cluster
        capabilities and apply consistent policies across your systems. See
        [Anthos
        Fleets](`https://cloud.google.com/anthos/multicluster-management/fleets`)
        for more details on Anthos multi-cluster capabilities using Fleets. ##
      type: object
      properties:
        membership:
          description: >-
            Output only. The name of the managed fleet Membership resource
            associated to this cluster. Membership names are formatted as
            `projects//locations//memberships/`.
          readOnly: true
          type: string
    ResourceStatus:
      id: ResourceStatus
      description: >-
        ResourceStatus describes why a cluster or node pool has a certain
        status. (e.g., ERROR or DEGRADED).
      type: object
      properties:
        errorMessage:
          description: >-
            Human-friendly representation of the error message from controller.
            The error message can be temporary as the controller controller
            creates a cluster or node pool. If the error message persists for a
            longer period of time, it can be used to surface error message to
            indicate real problems requiring user intervention.
          type: string
        conditions:
          description: >-
            ResourceCondition provide a standard mechanism for higher-level
            status reporting from controller.
          type: array
          items:
            $ref: '#/components/schemas/ResourceCondition'
    ResourceCondition:
      id: ResourceCondition
      description: >-
        ResourceCondition provides a standard mechanism for higher-level status
        reporting from controller.
      type: object
      properties:
        type:
          description: >-
            Type of the condition. (e.g., ClusterRunning, NodePoolRunning or
            ServerSidePreflightReady)
          type: string
        reason:
          description: Machine-readable message indicating details about last transition.
          type: string
        message:
          description: Human-readable message indicating details about last transition.
          type: string
        lastTransitionTime:
          description: Last time the condition transit from one status to another.
          type: string
          format: google-datetime
        state:
          description: state of the condition.
          type: string
          enumDescriptions:
            - Not set.
            - Resource is in the condition.
            - Resource is not in the condition.
            - >-
              Kubernetes controller can't decide if the resource is in the
              condition or not.
          enum:
            - STATE_UNSPECIFIED
            - STATE_TRUE
            - STATE_FALSE
            - STATE_UNKNOWN
    ValidationCheck:
      id: ValidationCheck
      description: ValidationCheck represents the result of preflight check.
      type: object
      properties:
        option:
          description: Options used for the validation check
          type: string
          enumDescriptions:
            - Default value. Standard preflight validation check will be used.
            - Prevent failed preflight checks from failing.
            - Skip all preflight check validations.
          enum:
            - OPTIONS_UNSPECIFIED
            - SKIP_VALIDATION_CHECK_BLOCKING
            - SKIP_VALIDATION_ALL
        status:
          description: Output only. The detailed validation check status.
          readOnly: true
          $ref: '#/components/schemas/ValidationCheckStatus'
        scenario:
          description: Output only. The scenario when the preflight checks were run.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The validation check occurred during a create flow.
            - The validation check occurred during an update flow.
          enum:
            - SCENARIO_UNSPECIFIED
            - CREATE
            - UPDATE
    ValidationCheckStatus:
      id: ValidationCheckStatus
      description: ValidationCheckStatus defines the detailed validation check status.
      type: object
      properties:
        result:
          description: >-
            Individual checks which failed as part of the Preflight check
            execution.
          type: array
          items:
            $ref: '#/components/schemas/ValidationCheckResult'
    ValidationCheckResult:
      id: ValidationCheckResult
      description: ValidationCheckResult defines the details about the validation check.
      type: object
      properties:
        state:
          description: The validation check state.
          type: string
          enumDescriptions:
            - The default value. The check result is unknown.
            - The check failed.
            - The check was skipped.
            - The check itself failed to complete.
            - The check encountered a warning.
          enum:
            - STATE_UNKNOWN
            - STATE_FAILURE
            - STATE_SKIPPED
            - STATE_FATAL
            - STATE_WARNING
        description:
          description: The description of the validation check.
          type: string
        category:
          description: The category of the validation.
          type: string
        reason:
          description: A human-readable message of the check failure.
          type: string
        details:
          description: Detailed failure information, which might be unformatted.
          type: string
    BareMetalSecurityConfig:
      id: BareMetalSecurityConfig
      description: Specifies the security related settings for the bare metal user cluster.
      type: object
      properties:
        authorization:
          description: Configures user access to the user cluster.
          $ref: '#/components/schemas/Authorization'
    Authorization:
      id: Authorization
      description: >-
        Authorization defines the On-Prem cluster authorization configuration to
        bootstrap onto the admin cluster.
      type: object
      properties:
        adminUsers:
          description: >-
            For VMware and bare metal user clusters, users will be granted the
            cluster-admin role on the cluster, which provides full
            administrative access to the cluster. For bare metal admin clusters,
            users will be granted the cluster-view role, which limits users to
            read-only access.
          type: array
          items:
            $ref: '#/components/schemas/ClusterUser'
    ClusterUser:
      id: ClusterUser
      description: ClusterUser configures user principals for an RBAC policy.
      type: object
      properties:
        username:
          description: Required. The name of the user, e.g. `my-gcp-id@gmail.com`.
          type: string
    BareMetalMaintenanceStatus:
      id: BareMetalMaintenanceStatus
      description: Represents the maintenance status of the bare metal user cluster.
      type: object
      properties:
        machineDrainStatus:
          description: The maintenance status of node machines.
          $ref: '#/components/schemas/BareMetalMachineDrainStatus'
    BareMetalMachineDrainStatus:
      id: BareMetalMachineDrainStatus
      description: >-
        Represents the status of node machines that are undergoing drain
        operations.
      type: object
      properties:
        drainingMachines:
          description: The list of draning machines.
          type: array
          items:
            $ref: '#/components/schemas/BareMetalDrainingMachine'
        drainedMachines:
          description: The list of drained machines.
          type: array
          items:
            $ref: '#/components/schemas/BareMetalDrainedMachine'
    BareMetalDrainingMachine:
      id: BareMetalDrainingMachine
      description: Represents a machine that is currently draining.
      type: object
      properties:
        nodeIp:
          description: Draining machine IP address.
          type: string
        podCount:
          description: The count of pods yet to drain.
          type: integer
          format: int32
    BareMetalDrainedMachine:
      id: BareMetalDrainedMachine
      description: Represents a machine that is currently drained.
      type: object
      properties:
        nodeIp:
          description: Drained machine IP address.
          type: string
    BareMetalNodeAccessConfig:
      id: BareMetalNodeAccessConfig
      description: >-
        Specifies the node access related settings for the bare metal user
        cluster.
      type: object
      properties:
        loginUser:
          description: >-
            LoginUser is the user name used to access node machines. It defaults
            to "root" if not set.
          type: string
    BareMetalOsEnvironmentConfig:
      id: BareMetalOsEnvironmentConfig
      description: Specifies operating system settings for cluster provisioning.
      type: object
      properties:
        packageRepoExcluded:
          description: >-
            Whether the package repo should not be included when initializing
            bare metal machines.
          type: boolean
    BinaryAuthorization:
      id: BinaryAuthorization
      description: Configuration for Binary Authorization.
      type: object
      properties:
        evaluationMode:
          description: >-
            Mode of operation for binauthz policy evaluation. If unspecified,
            defaults to DISABLED.
          type: string
          enumDescriptions:
            - Default value
            - Disable BinaryAuthorization
            - >-
              Enforce Kubernetes admission requests with BinaryAuthorization
              using the project's singleton policy.
          enum:
            - EVALUATION_MODE_UNSPECIFIED
            - DISABLED
            - PROJECT_SINGLETON_POLICY_ENFORCE
    BareMetalClusterUpgradePolicy:
      id: BareMetalClusterUpgradePolicy
      description: BareMetalClusterUpgradePolicy defines the cluster upgrade policy.
      type: object
      properties:
        policy:
          description: Specifies which upgrade policy to use.
          type: string
          enumDescriptions:
            - No upgrade policy selected.
            - Upgrade worker node pools sequentially.
            - Upgrade all worker node pools in parallel.
          enum:
            - NODE_POOL_POLICY_UNSPECIFIED
            - SERIAL
            - CONCURRENT
    EnrollBareMetalClusterRequest:
      id: EnrollBareMetalClusterRequest
      description: >-
        Message for enrolling an existing bare metal cluster to the Anthos
        On-Prem API.
      type: object
      properties:
        bareMetalClusterId:
          description: >-
            User provided OnePlatform identifier that is used as part of the
            resource name. This must be unique among all bare metal clusters
            within a project and location and will return a 409 if the cluster
            already exists. (https://tools.ietf.org/html/rfc1123) format.
          type: string
        localName:
          description: >-
            Optional. The object name of the bare metal cluster custom resource
            on the associated admin cluster. This field is used to support
            conflicting resource names when enrolling existing clusters to the
            API. When not provided, this field will resolve to the
            bare_metal_cluster_id. Otherwise, it must match the object name of
            the bare metal cluster custom resource. It is not modifiable outside
            / beyond the enrollment operation.
          type: string
        adminClusterMembership:
          description: >-
            Required. The admin cluster this bare metal user cluster belongs to.
            This is the full resource name of the admin cluster's fleet
            membership. In the future, references to other resource types might
            be allowed if admin clusters are modeled as their own resources.
          type: string
    ListBareMetalClustersResponse:
      id: ListBareMetalClustersResponse
      description: Response message for listing bare metal Clusters.
      type: object
      properties:
        bareMetalClusters:
          description: The list of bare metal Clusters.
          type: array
          items:
            $ref: '#/components/schemas/BareMetalCluster'
        nextPageToken:
          description: >-
            A token identifying a page of results the server should return. If
            the token is not empty this means that more results are available
            and should be retrieved by repeating the request with the provided
            page token.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    QueryBareMetalVersionConfigResponse:
      id: QueryBareMetalVersionConfigResponse
      description: Response message for querying bare metal admin cluster version config.
      type: object
      properties:
        versions:
          description: List of available versions to install or to upgrade to.
          type: array
          items:
            $ref: '#/components/schemas/BareMetalVersionInfo'
    BareMetalVersionInfo:
      id: BareMetalVersionInfo
      description: Contains information about a specific Anthos on bare metal version.
      type: object
      properties:
        version:
          description: Version number e.g. 1.13.1.
          type: string
        hasDependencies:
          description: >-
            If set, the cluster dependencies (e.g. the admin cluster, other user
            clusters managed by the same admin cluster, version skew policy,
            etc) must be upgraded before this version can be installed or
            upgraded to.
          type: boolean
        dependencies:
          description: The list of upgrade dependencies for this version.
          type: array
          items:
            $ref: '#/components/schemas/UpgradeDependency'
    UpgradeDependency:
      id: UpgradeDependency
      description: UpgradeDependency represents a dependency when upgrading a resource.
      type: object
      properties:
        resourceName:
          description: Resource name of the dependency.
          type: string
        currentVersion:
          description: Current version of the dependency e.g. 1.15.0.
          type: string
        targetVersion:
          description: >-
            Target version of the dependency e.g. 1.16.1. This is the version
            the dependency needs to be upgraded to before a resource can be
            upgraded.
          type: string
        membership:
          description: >-
            Membership names are formatted as
            `projects//locations//memberships/`.
          type: string
    EnrollVmwareClusterRequest:
      id: EnrollVmwareClusterRequest
      description: >-
        Message for enrolling an existing VMware cluster to the Anthos On-Prem
        API.
      type: object
      properties:
        vmwareClusterId:
          description: >-
            User provided OnePlatform identifier that is used as part of the
            resource name. This must be unique among all GKE on-prem clusters
            within a project and location and will return a 409 if the cluster
            already exists. (https://tools.ietf.org/html/rfc1123) format.
          type: string
        localName:
          description: >-
            Optional. The object name of the VMware OnPremUserCluster custom
            resource on the associated admin cluster. This field is used to
            support conflicting resource names when enrolling existing clusters
            to the API. When not provided, this field will resolve to the
            vmware_cluster_id. Otherwise, it must match the object name of the
            VMware OnPremUserCluster custom resource. It is not modifiable
            outside / beyond the enrollment operation.
          type: string
        adminClusterMembership:
          description: >-
            Required. The admin cluster this VMware user cluster belongs to.
            This is the full resource name of the admin cluster's fleet
            membership. In the future, references to other resource types might
            be allowed if admin clusters are modeled as their own resources.
          type: string
        validateOnly:
          description: Validate the request without actually doing any updates.
          type: boolean
    VmwareCluster:
      id: VmwareCluster
      description: 'Resource that represents a VMware user cluster. ##'
      type: object
      properties:
        name:
          description: Immutable. The VMware user cluster resource name.
          type: string
        adminClusterMembership:
          description: >-
            Required. The admin cluster this VMware user cluster belongs to.
            This is the full resource name of the admin cluster's fleet
            membership. In the future, references to other resource types might
            be allowed if admin clusters are modeled as their own resources.
          type: string
        description:
          description: A human readable description of this VMware user cluster.
          type: string
        onPremVersion:
          description: >-
            Required. The Anthos clusters on the VMware version for your user
            cluster.
          type: string
        uid:
          description: Output only. The unique identifier of the VMware user cluster.
          readOnly: true
          type: string
        state:
          description: Output only. The current state of VMware user cluster.
          readOnly: true
          type: string
          enumDescriptions:
            - Not set.
            - The PROVISIONING state indicates the cluster is being created.
            - >-
              The RUNNING state indicates the cluster has been created and is
              fully usable.
            - >-
              The RECONCILING state indicates that the cluster is being updated.
              It remains available, but potentially with degraded performance.
            - The STOPPING state indicates the cluster is being deleted.
            - >-
              The ERROR state indicates the cluster is in a broken unrecoverable
              state.
            - >-
              The DEGRADED state indicates the cluster requires user action to
              restore full functionality.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - RECONCILING
            - STOPPING
            - ERROR
            - DEGRADED
        endpoint:
          description: Output only. The DNS name of VMware user cluster's API server.
          readOnly: true
          type: string
        reconciling:
          description: >-
            Output only. If set, there are currently changes in flight to the
            VMware user cluster.
          readOnly: true
          type: boolean
        createTime:
          description: Output only. The time at which VMware user cluster was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time at which VMware user cluster was last updated.
          readOnly: true
          type: string
          format: google-datetime
        localName:
          description: >-
            Output only. The object name of the VMware OnPremUserCluster custom
            resource on the associated admin cluster. This field is used to
            support conflicting names when enrolling existing clusters to the
            API. When used as a part of cluster enrollment, this field will
            differ from the ID in the resource name. For new clusters, this
            field will match the user provided cluster name and be visible in
            the last component of the resource name. It is not modifiable. All
            users should use this name to access their cluster using gkectl or
            kubectl and should expect to see the local name when viewing admin
            cluster controller logs.
          readOnly: true
          type: string
        etag:
          description: >-
            This checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding. Allows clients to
            perform consistent read-modify-writes through optimistic concurrency
            control.
          type: string
        annotations:
          description: >-
            Annotations on the VMware user cluster. This field has the same
            restrictions as Kubernetes annotations. The total size of all keys
            and values combined is limited to 256k. Key can have 2 segments:
            prefix (optional) and name (required), separated by a slash (/).
            Prefix must be a DNS subdomain. Name must be 63 characters or less,
            begin and end with alphanumerics, with dashes (-), underscores (_),
            dots (.), and alphanumerics between.
          type: object
          additionalProperties:
            type: string
        controlPlaneNode:
          description: >-
            VMware user cluster control plane nodes must have either 1 or 3
            replicas.
          $ref: '#/components/schemas/VmwareControlPlaneNodeConfig'
        antiAffinityGroups:
          description: >-
            AAGConfig specifies whether to spread VMware user cluster nodes
            across at least three physical hosts in the datacenter.
          $ref: '#/components/schemas/VmwareAAGConfig'
        storage:
          description: Storage configuration.
          $ref: '#/components/schemas/VmwareStorageConfig'
        networkConfig:
          description: The VMware user cluster network configuration.
          $ref: '#/components/schemas/VmwareNetworkConfig'
        loadBalancer:
          description: Load balancer configuration.
          $ref: '#/components/schemas/VmwareLoadBalancerConfig'
        vcenter:
          description: >-
            VmwareVCenterConfig specifies vCenter config for the user cluster.
            If unspecified, it is inherited from the admin cluster.
          $ref: '#/components/schemas/VmwareVCenterConfig'
        status:
          description: Output only. ResourceStatus representing detailed cluster state.
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
        dataplaneV2:
          description: VmwareDataplaneV2Config specifies configuration for Dataplane V2.
          $ref: '#/components/schemas/VmwareDataplaneV2Config'
        vmTrackingEnabled:
          description: Enable VM tracking.
          type: boolean
        autoRepairConfig:
          description: Configuration for auto repairing.
          $ref: '#/components/schemas/VmwareAutoRepairConfig'
        fleet:
          description: Output only. Fleet configuration for the cluster.
          readOnly: true
          $ref: '#/components/schemas/Fleet'
        authorization:
          description: >-
            RBAC policy that will be applied and managed by the Anthos On-Prem
            API.
          $ref: '#/components/schemas/Authorization'
        deleteTime:
          description: Output only. The time at which VMware user cluster was deleted.
          readOnly: true
          type: string
          format: google-datetime
        validationCheck:
          description: >-
            Output only. ValidationCheck represents the result of the preflight
            check job.
          readOnly: true
          $ref: '#/components/schemas/ValidationCheck'
        adminClusterName:
          description: >-
            Output only. The resource name of the VMware admin cluster hosting
            this user cluster.
          readOnly: true
          type: string
        enableControlPlaneV2:
          description: Enable control plane V2. Default to false.
          type: boolean
        binaryAuthorization:
          description: Binary Authorization related configurations.
          $ref: '#/components/schemas/BinaryAuthorization'
        upgradePolicy:
          description: Specifies upgrade policy for the cluster.
          $ref: '#/components/schemas/VmwareClusterUpgradePolicy'
        disableBundledIngress:
          description: Disable bundled ingress.
          type: boolean
    VmwareControlPlaneNodeConfig:
      id: VmwareControlPlaneNodeConfig
      description: Specifies control plane node config for the VMware user cluster.
      type: object
      properties:
        cpus:
          description: >-
            The number of CPUs for each admin cluster node that serve as control
            planes for this VMware user cluster. (default: 4 CPUs)
          type: string
          format: int64
        memory:
          description: >-
            The megabytes of memory for each admin cluster node that serves as a
            control plane for this VMware user cluster (default: 8192 MB
            memory).
          type: string
          format: int64
        replicas:
          description: >-
            The number of control plane nodes for this VMware user cluster.
            (default: 1 replica).
          type: string
          format: int64
        autoResizeConfig:
          description: AutoResizeConfig provides auto resizing configurations.
          $ref: '#/components/schemas/VmwareAutoResizeConfig'
        vsphereConfig:
          description: Vsphere-specific config.
          $ref: '#/components/schemas/VmwareControlPlaneVsphereConfig'
    VmwareAutoResizeConfig:
      id: VmwareAutoResizeConfig
      description: Represents auto resizing configurations for the VMware user cluster.
      type: object
      properties:
        enabled:
          description: Whether to enable controle plane node auto resizing.
          type: boolean
    VmwareControlPlaneVsphereConfig:
      id: VmwareControlPlaneVsphereConfig
      description: Specifies control plane node config.
      type: object
      properties:
        datastore:
          description: The Vsphere datastore used by the control plane Node.
          type: string
        storagePolicyName:
          description: The Vsphere storage policy used by the control plane Node.
          type: string
    VmwareAAGConfig:
      id: VmwareAAGConfig
      description: Specifies anti affinity group config for the VMware user cluster.
      type: object
      properties:
        aagConfigDisabled:
          description: >-
            Spread nodes across at least three physical hosts (requires at least
            three hosts). Enabled by default.
          type: boolean
    VmwareStorageConfig:
      id: VmwareStorageConfig
      description: >-
        Specifies vSphere CSI components deployment config in the VMware user
        cluster.
      type: object
      properties:
        vsphereCsiDisabled:
          description: >-
            Whether or not to deploy vSphere CSI components in the VMware user
            cluster. Enabled by default.
          type: boolean
    VmwareNetworkConfig:
      id: VmwareNetworkConfig
      description: Specifies network config for the VMware user cluster.
      type: object
      properties:
        serviceAddressCidrBlocks:
          description: >-
            Required. All services in the cluster are assigned an RFC1918 IPv4
            address from these ranges. Only a single range is supported. This
            field cannot be changed after creation.
          type: array
          items:
            type: string
        podAddressCidrBlocks:
          description: >-
            Required. All pods in the cluster are assigned an RFC1918 IPv4
            address from these ranges. Only a single range is supported. This
            field cannot be changed after creation.
          type: array
          items:
            type: string
        staticIpConfig:
          description: Configuration settings for a static IP configuration.
          $ref: '#/components/schemas/VmwareStaticIpConfig'
        dhcpIpConfig:
          description: Configuration settings for a DHCP IP configuration.
          $ref: '#/components/schemas/VmwareDhcpIpConfig'
        vcenterNetwork:
          description: >-
            vcenter_network specifies vCenter network name. Inherited from the
            admin cluster.
          type: string
        hostConfig:
          description: >-
            Represents common network settings irrespective of the host's IP
            address.
          $ref: '#/components/schemas/VmwareHostConfig'
        controlPlaneV2Config:
          description: Configuration for control plane V2 mode.
          $ref: '#/components/schemas/VmwareControlPlaneV2Config'
    VmwareStaticIpConfig:
      id: VmwareStaticIpConfig
      description: >-
        Represents the network configuration required for the VMware user
        clusters with Static IP configurations.
      type: object
      properties:
        ipBlocks:
          description: >-
            Represents the configuration values for static IP allocation to
            nodes.
          type: array
          items:
            $ref: '#/components/schemas/VmwareIpBlock'
    VmwareIpBlock:
      id: VmwareIpBlock
      description: Represents a collection of IP addresses to assign to nodes.
      type: object
      properties:
        netmask:
          description: The netmask used by the VMware user cluster.
          type: string
        gateway:
          description: The network gateway used by the VMware user cluster.
          type: string
        ips:
          description: The node's network configurations used by the VMware user cluster.
          type: array
          items:
            $ref: '#/components/schemas/VmwareHostIp'
    VmwareHostIp:
      id: VmwareHostIp
      description: Represents VMware user cluster node's network configuration.
      type: object
      properties:
        ip:
          description: >-
            IP could be an IP address (like 1.2.3.4) or a CIDR (like
            1.2.3.0/24).
          type: string
        hostname:
          description: >-
            Hostname of the machine. VM's name will be used if this field is
            empty.
          type: string
    VmwareDhcpIpConfig:
      id: VmwareDhcpIpConfig
      description: >-
        Represents the network configuration required for the VMware user
        clusters with DHCP IP configurations.
      type: object
      properties:
        enabled:
          description: >-
            enabled is a flag to mark if DHCP IP allocation is used for VMware
            user clusters.
          type: boolean
    VmwareHostConfig:
      id: VmwareHostConfig
      description: >-
        Represents the common parameters for all the hosts irrespective of their
        IP address.
      type: object
      properties:
        dnsServers:
          description: DNS servers.
          type: array
          items:
            type: string
        ntpServers:
          description: NTP servers.
          type: array
          items:
            type: string
        dnsSearchDomains:
          description: DNS search domains.
          type: array
          items:
            type: string
    VmwareControlPlaneV2Config:
      id: VmwareControlPlaneV2Config
      description: Specifies control plane V2 config.
      type: object
      properties:
        controlPlaneIpBlock:
          description: Static IP addresses for the control plane nodes.
          $ref: '#/components/schemas/VmwareIpBlock'
    VmwareLoadBalancerConfig:
      id: VmwareLoadBalancerConfig
      description: Specifies the locad balancer config for the VMware user cluster.
      type: object
      properties:
        vipConfig:
          description: The VIPs used by the load balancer.
          $ref: '#/components/schemas/VmwareVipConfig'
        f5Config:
          description: Configuration for F5 Big IP typed load balancers.
          $ref: '#/components/schemas/VmwareF5BigIpConfig'
        manualLbConfig:
          description: Manually configured load balancers.
          $ref: '#/components/schemas/VmwareManualLbConfig'
        seesawConfig:
          description: Output only. Configuration for Seesaw typed load balancers.
          readOnly: true
          $ref: '#/components/schemas/VmwareSeesawConfig'
        metalLbConfig:
          description: Configuration for MetalLB typed load balancers.
          $ref: '#/components/schemas/VmwareMetalLbConfig'
    VmwareVipConfig:
      id: VmwareVipConfig
      description: Specifies the VIP config for the VMware user cluster load balancer.
      type: object
      properties:
        controlPlaneVip:
          description: >-
            The VIP which you previously set aside for the Kubernetes API of
            this cluster.
          type: string
        ingressVip:
          description: >-
            The VIP which you previously set aside for ingress traffic into this
            cluster.
          type: string
    VmwareF5BigIpConfig:
      id: VmwareF5BigIpConfig
      description: Represents configuration parameters for an F5 BIG-IP load balancer.
      type: object
      properties:
        address:
          description: The load balancer's IP address.
          type: string
        partition:
          description: >-
            The preexisting partition to be used by the load balancer. This
            partition is usually created for the admin cluster for example:
            'my-f5-admin-partition'.
          type: string
        snatPool:
          description: The pool name. Only necessary, if using SNAT.
          type: string
    VmwareManualLbConfig:
      id: VmwareManualLbConfig
      description: >-
        Represents configuration parameters for an already existing manual load
        balancer. Given the nature of manual load balancers it is expected that
        said load balancer will be fully managed by users. IMPORTANT: Please
        note that the Anthos On-Prem API will not generate or update ManualLB
        configurations it can only bind a pre-existing configuration to a new
        VMware user cluster.
      type: object
      properties:
        ingressHttpNodePort:
          description: >-
            NodePort for ingress service's http. The ingress service in the
            admin cluster is implemented as a Service of type NodePort (ex.
            32527).
          type: integer
          format: int32
        ingressHttpsNodePort:
          description: >-
            NodePort for ingress service's https. The ingress service in the
            admin cluster is implemented as a Service of type NodePort (ex.
            30139).
          type: integer
          format: int32
        controlPlaneNodePort:
          description: >-
            NodePort for control plane service. The Kubernetes API server in the
            admin cluster is implemented as a Service of type NodePort (ex.
            30968).
          type: integer
          format: int32
        konnectivityServerNodePort:
          description: >-
            NodePort for konnectivity server service running as a sidecar in
            each kube-apiserver pod (ex. 30564).
          type: integer
          format: int32
    VmwareSeesawConfig:
      id: VmwareSeesawConfig
      description: >-
        VmwareSeesawConfig represents configuration parameters for an already
        existing Seesaw load balancer. IMPORTANT: Please note that the Anthos
        On-Prem API will not generate or update Seesaw configurations it can
        only bind a pre-existing configuration to a new user cluster. IMPORTANT:
        When attempting to create a user cluster with a pre-existing Seesaw load
        balancer you will need to follow some preparation steps before calling
        the 'CreateVmwareCluster' API method. First you will need to create the
        user cluster's namespace via kubectl. The namespace will need to use the
        following naming convention : -gke-onprem-mgmt or -gke-onprem-mgmt
        depending on whether you used the 'VmwareCluster.local_name' to
        disambiguate collisions; for more context see the documentation of
        'VmwareCluster.local_name'. Once the namespace is created you will need
        to create a secret resource via kubectl. This secret will contain copies
        of your Seesaw credentials. The Secret must be called
        'user-cluster-creds' and contain Seesaw's SSH and Cert credentials. The
        credentials must be keyed with the following names:
        'seesaw-ssh-private-key', 'seesaw-ssh-public-key', 'seesaw-ssh-ca-key',
        'seesaw-ssh-ca-cert'.
      type: object
      properties:
        group:
          description: >-
            Required. In general the following format should be used for the
            Seesaw group name: seesaw-for-[cluster_name].
          type: string
        masterIp:
          description: >-
            Required. MasterIP is the IP announced by the master of Seesaw
            group.
          type: string
        ipBlocks:
          description: Required. The IP Blocks to be used by the Seesaw load balancer
          type: array
          items:
            $ref: '#/components/schemas/VmwareIpBlock'
        enableHa:
          description: >-
            Enable two load balancer VMs to achieve a highly-available Seesaw
            load balancer.
          type: boolean
        vms:
          description: Names of the VMs created for this Seesaw group.
          type: array
          items:
            type: string
        stackdriverName:
          description: Name to be used by Stackdriver.
          type: string
    VmwareMetalLbConfig:
      id: VmwareMetalLbConfig
      description: Represents configuration parameters for the MetalLB load balancer.
      type: object
      properties:
        addressPools:
          description: >-
            Required. AddressPools is a list of non-overlapping IP pools used by
            load balancer typed services. All addresses must be routable to load
            balancer nodes. IngressVIP must be included in the pools.
          type: array
          items:
            $ref: '#/components/schemas/VmwareAddressPool'
    VmwareAddressPool:
      id: VmwareAddressPool
      description: Represents an IP pool used by the load balancer.
      type: object
      properties:
        pool:
          description: Required. The name of the address pool.
          type: string
        addresses:
          description: >-
            Required. The addresses that are part of this pool. Each address
            must be either in the CIDR form (1.2.3.0/24) or range form
            (1.2.3.1-1.2.3.5).
          type: array
          items:
            type: string
        avoidBuggyIps:
          description: >-
            If true, avoid using IPs ending in .0 or .255. This avoids buggy
            consumer devices mistakenly dropping IPv4 traffic for those special
            IP addresses.
          type: boolean
        manualAssign:
          description: If true, prevent IP addresses from being automatically assigned.
          type: boolean
    VmwareVCenterConfig:
      id: VmwareVCenterConfig
      description: Represents configuration for the VMware VCenter for the user cluster.
      type: object
      properties:
        resourcePool:
          description: The name of the vCenter resource pool for the user cluster.
          type: string
        datastore:
          description: The name of the vCenter datastore for the user cluster.
          type: string
        datacenter:
          description: The name of the vCenter datacenter for the user cluster.
          type: string
        cluster:
          description: The name of the vCenter cluster for the user cluster.
          type: string
        folder:
          description: The name of the vCenter folder for the user cluster.
          type: string
        caCertData:
          description: Contains the vCenter CA certificate public key for SSL verification.
          type: string
        address:
          description: Output only. The vCenter IP address.
          readOnly: true
          type: string
        storagePolicyName:
          description: The name of the vCenter storage policy for the user cluster.
          type: string
    VmwareDataplaneV2Config:
      id: VmwareDataplaneV2Config
      description: >-
        Contains configurations for Dataplane V2, which is optimized dataplane
        for Kubernetes networking. For more information, see:
        https://cloud.google.com/kubernetes-engine/docs/concepts/dataplane-v2
      type: object
      properties:
        dataplaneV2Enabled:
          description: Enables Dataplane V2.
          type: boolean
        windowsDataplaneV2Enabled:
          description: Enable Dataplane V2 for clusters with Windows nodes.
          type: boolean
        advancedNetworking:
          description: >-
            Enable advanced networking which requires dataplane_v2_enabled to be
            set true.
          type: boolean
        forwardMode:
          description: Configure ForwardMode for Dataplane v2.
          type: string
    VmwareAutoRepairConfig:
      id: VmwareAutoRepairConfig
      description: >-
        Specifies config to enable/disable auto repair. The
        cluster-health-controller is deployed only if Enabled is true.
      type: object
      properties:
        enabled:
          description: Whether auto repair is enabled.
          type: boolean
    VmwareClusterUpgradePolicy:
      id: VmwareClusterUpgradePolicy
      description: VmwareClusterUpgradePolicy defines the cluster upgrade policy.
      type: object
      properties:
        controlPlaneOnly:
          description: Controls whether the upgrade applies to the control plane only.
          type: boolean
    ListVmwareClustersResponse:
      id: ListVmwareClustersResponse
      description: Response message for listing VMware Clusters.
      type: object
      properties:
        vmwareClusters:
          description: The list of VMware Cluster.
          type: array
          items:
            $ref: '#/components/schemas/VmwareCluster'
        nextPageToken:
          description: >-
            A token identifying a page of results the server should return. If
            the token is not empty this means that more results are available
            and should be retrieved by repeating the request with the provided
            page token.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    BareMetalNodePool:
      id: BareMetalNodePool
      description: Resource that represents a bare metal node pool.
      type: object
      properties:
        name:
          description: Immutable. The bare metal node pool resource name.
          type: string
        displayName:
          description: The display name for the bare metal node pool.
          type: string
        uid:
          description: Output only. The unique identifier of the bare metal node pool.
          readOnly: true
          type: string
        state:
          description: Output only. The current state of the bare metal node pool.
          readOnly: true
          type: string
          enumDescriptions:
            - Not set.
            - >-
              The PROVISIONING state indicates the bare metal node pool is being
              created.
            - >-
              The RUNNING state indicates the bare metal node pool has been
              created and is fully usable.
            - >-
              The RECONCILING state indicates that the bare metal node pool is
              being updated. It remains available, but potentially with degraded
              performance.
            - >-
              The STOPPING state indicates the bare metal node pool is being
              deleted.
            - >-
              The ERROR state indicates the bare metal node pool is in a broken
              unrecoverable state.
            - >-
              The DEGRADED state indicates the bare metal node pool requires
              user action to restore full functionality.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - RECONCILING
            - STOPPING
            - ERROR
            - DEGRADED
        reconciling:
          description: >-
            Output only. If set, there are currently changes in flight to the
            bare metal node pool.
          readOnly: true
          type: boolean
        createTime:
          description: >-
            Output only. The time at which this bare metal node pool was
            created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The time at which this bare metal node pool was last
            updated.
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: >-
            Output only. The time at which this bare metal node pool was
            deleted. If the resource is not deleted, this must be empty
          readOnly: true
          type: string
          format: google-datetime
        etag:
          description: >-
            This checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding. Allows clients to
            perform consistent read-modify-writes through optimistic concurrency
            control.
          type: string
        annotations:
          description: >-
            Annotations on the bare metal node pool. This field has the same
            restrictions as Kubernetes annotations. The total size of all keys
            and values combined is limited to 256k. Key can have 2 segments:
            prefix (optional) and name (required), separated by a slash (/).
            Prefix must be a DNS subdomain. Name must be 63 characters or less,
            begin and end with alphanumerics, with dashes (-), underscores (_),
            dots (.), and alphanumerics between.
          type: object
          additionalProperties:
            type: string
        nodePoolConfig:
          description: Required. Node pool configuration.
          $ref: '#/components/schemas/BareMetalNodePoolConfig'
        status:
          description: >-
            Output only. ResourceStatus representing the detailed node pool
            status.
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
        upgradePolicy:
          description: The worker node pool upgrade policy.
          $ref: '#/components/schemas/BareMetalNodePoolUpgradePolicy'
    BareMetalNodePoolUpgradePolicy:
      id: BareMetalNodePoolUpgradePolicy
      description: BareMetalNodePoolUpgradePolicy defines the node pool upgrade policy.
      type: object
      properties:
        parallelUpgradeConfig:
          description: The parallel upgrade settings for worker node pools.
          $ref: '#/components/schemas/BareMetalParallelUpgradeConfig'
    BareMetalParallelUpgradeConfig:
      id: BareMetalParallelUpgradeConfig
      description: >-
        BareMetalParallelUpgradeConfig defines the parallel upgrade settings for
        worker node pools.
      type: object
      properties:
        concurrentNodes:
          description: The maximum number of nodes that can be upgraded at once.
          type: integer
          format: int32
        minimumAvailableNodes:
          description: >-
            The minimum number of nodes that should be healthy and available
            during an upgrade. If set to the default value of 0, it is possible
            that none of the nodes will be available during an upgrade.
          type: integer
          format: int32
    EnrollBareMetalNodePoolRequest:
      id: EnrollBareMetalNodePoolRequest
      description: >-
        Message for enrolling an existing bare metal node pool to the GKE
        on-prem API.
      type: object
      properties:
        bareMetalNodePoolId:
          description: >-
            User provided OnePlatform identifier that is used as part of the
            resource name. (https://tools.ietf.org/html/rfc1123) format.
          type: string
        validateOnly:
          description: >-
            If set, only validate the request, but do not actually enroll the
            node pool.
          type: boolean
    ListBareMetalNodePoolsResponse:
      id: ListBareMetalNodePoolsResponse
      description: Response message for listing bare metal node pools.
      type: object
      properties:
        bareMetalNodePools:
          description: The node pools from the specified parent resource.
          type: array
          items:
            $ref: '#/components/schemas/BareMetalNodePool'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    VmwareNodePool:
      id: VmwareNodePool
      description: 'Resource VmwareNodePool represents a VMware node pool. ##'
      type: object
      properties:
        name:
          description: Immutable. The resource name of this node pool.
          type: string
        displayName:
          description: The display name for the node pool.
          type: string
        uid:
          description: Output only. The unique identifier of the node pool.
          readOnly: true
          type: string
        state:
          description: Output only. The current state of the node pool.
          readOnly: true
          type: string
          enumDescriptions:
            - Not set.
            - The PROVISIONING state indicates the node pool is being created.
            - >-
              The RUNNING state indicates the node pool has been created and is
              fully usable.
            - >-
              The RECONCILING state indicates that the node pool is being
              updated. It remains available, but potentially with degraded
              performance.
            - The STOPPING state indicates the cluster is being deleted
            - >-
              The ERROR state indicates the node pool is in a broken
              unrecoverable state.
            - >-
              The DEGRADED state indicates the node pool requires user action to
              restore full functionality.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - RECONCILING
            - STOPPING
            - ERROR
            - DEGRADED
        reconciling:
          description: >-
            Output only. If set, there are currently changes in flight to the
            node pool.
          readOnly: true
          type: boolean
        createTime:
          description: Output only. The time at which this node pool was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time at which this node pool was last updated.
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: >-
            Output only. The time at which this node pool was deleted. If the
            resource is not deleted, this must be empty
          readOnly: true
          type: string
          format: google-datetime
        etag:
          description: >-
            This checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding. Allows clients to
            perform consistent read-modify-writes through optimistic concurrency
            control.
          type: string
        annotations:
          description: >-
            Annotations on the node pool. This field has the same restrictions
            as Kubernetes annotations. The total size of all keys and values
            combined is limited to 256k. Key can have 2 segments: prefix
            (optional) and name (required), separated by a slash (/). Prefix
            must be a DNS subdomain. Name must be 63 characters or less, begin
            and end with alphanumerics, with dashes (-), underscores (_), dots
            (.), and alphanumerics between.
          type: object
          additionalProperties:
            type: string
        nodePoolAutoscaling:
          description: Node pool autoscaling config for the node pool.
          $ref: '#/components/schemas/VmwareNodePoolAutoscalingConfig'
        config:
          description: Required. The node configuration of the node pool.
          $ref: '#/components/schemas/VmwareNodeConfig'
        status:
          description: >-
            Output only. ResourceStatus representing the detailed VMware node
            pool state.
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
        onPremVersion:
          description: >-
            Anthos version for the node pool. Defaults to the user cluster
            version.
          type: string
    VmwareNodePoolAutoscalingConfig:
      id: VmwareNodePoolAutoscalingConfig
      description: >-
        NodePoolAutoscaling config for the NodePool to allow for the kubernetes
        to scale NodePool.
      type: object
      properties:
        minReplicas:
          description: Minimum number of replicas in the NodePool.
          type: integer
          format: int32
        maxReplicas:
          description: Maximum number of replicas in the NodePool.
          type: integer
          format: int32
    VmwareNodeConfig:
      id: VmwareNodeConfig
      description: >-
        Parameters that describe the configuration of all nodes within a given
        node pool.
      type: object
      properties:
        cpus:
          description: The number of CPUs for each node in the node pool.
          type: string
          format: int64
        memoryMb:
          description: The megabytes of memory for each node in the node pool.
          type: string
          format: int64
        replicas:
          description: The number of nodes in the node pool.
          type: string
          format: int64
        imageType:
          description: >-
            Required. The OS image to be used for each node in a node pool.
            Currently `cos`, `cos_cgv2`, `ubuntu`, `ubuntu_cgv2`,
            `ubuntu_containerd` and `windows` are supported.
          type: string
        image:
          description: The OS image name in vCenter, only valid when using Windows.
          type: string
        bootDiskSizeGb:
          description: VMware disk size to be used during creation.
          type: string
          format: int64
        taints:
          description: The initial taints assigned to nodes of this node pool.
          type: array
          items:
            $ref: '#/components/schemas/NodeTaint'
        labels:
          description: >-
            The map of Kubernetes labels (key/value pairs) to be applied to each
            node. These will added in addition to any default label(s) that
            Kubernetes may apply to the node. In case of conflict in label keys,
            the applied set may differ depending on the Kubernetes version --
            it's best to assume the behavior is undefined and conflicts should
            be avoided. For more information, including usage and the valid
            values, see:
            https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
          type: object
          additionalProperties:
            type: string
        vsphereConfig:
          description: Specifies the vSphere config for node pool.
          $ref: '#/components/schemas/VmwareVsphereConfig'
        enableLoadBalancer:
          description: >-
            Allow node pool traffic to be load balanced. Only works for clusters
            with MetalLB load balancers.
          type: boolean
    VmwareVsphereConfig:
      id: VmwareVsphereConfig
      description: >-
        VmwareVsphereConfig represents configuration for the VMware VCenter for
        node pool.
      type: object
      properties:
        datastore:
          description: The name of the vCenter datastore. Inherited from the user cluster.
          type: string
        tags:
          description: Tags to apply to VMs.
          type: array
          items:
            $ref: '#/components/schemas/VmwareVsphereTag'
        hostGroups:
          description: Vsphere host groups to apply to all VMs in the node pool
          type: array
          items:
            type: string
    VmwareVsphereTag:
      id: VmwareVsphereTag
      description: >-
        VmwareVsphereTag describes a vSphere tag to be placed on VMs in the node
        pool. For more information, see
        https://docs.vmware.com/en/VMware-vSphere/7.0/com.vmware.vsphere.vcenterhost.doc/GUID-E8E854DD-AA97-4E0C-8419-CE84F93C4058.html
      type: object
      properties:
        category:
          description: The Vsphere tag category.
          type: string
        tag:
          description: The Vsphere tag name.
          type: string
    ListVmwareNodePoolsResponse:
      id: ListVmwareNodePoolsResponse
      description: Response message for listing VMware node pools.
      type: object
      properties:
        vmwareNodePools:
          description: The node pools from the specified parent resource.
          type: array
          items:
            $ref: '#/components/schemas/VmwareNodePool'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    EnrollVmwareNodePoolRequest:
      id: EnrollVmwareNodePoolRequest
      description: Message for enrolling a VMware node pool.
      type: object
      properties:
        vmwareNodePoolId:
          description: The target node pool id to be enrolled.
          type: string
    ListVmwareAdminClustersResponse:
      id: ListVmwareAdminClustersResponse
      description: Response message for listing VMware admin clusters.
      type: object
      properties:
        vmwareAdminClusters:
          description: The list of VMware admin cluster.
          type: array
          items:
            $ref: '#/components/schemas/VmwareAdminCluster'
        nextPageToken:
          description: >-
            A token identifying a page of results the server should return. If
            the token is not empty this means that more results are available
            and should be retrieved by repeating the request with the provided
            page token.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    VmwareAdminCluster:
      id: VmwareAdminCluster
      description: Resource that represents a VMware admin cluster.
      type: object
      properties:
        name:
          description: Immutable. The VMware admin cluster resource name.
          type: string
        description:
          description: A human readable description of this VMware admin cluster.
          type: string
        uid:
          description: Output only. The unique identifier of the VMware admin cluster.
          readOnly: true
          type: string
        etag:
          description: >-
            This checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding. Allows clients to
            perform consistent read-modify-writes through optimistic concurrency
            control.
          type: string
        createTime:
          description: Output only. The time at which VMware admin cluster was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The time at which VMware admin cluster was last
            updated.
          readOnly: true
          type: string
          format: google-datetime
        annotations:
          description: >-
            Annotations on the VMware admin cluster. This field has the same
            restrictions as Kubernetes annotations. The total size of all keys
            and values combined is limited to 256k. Key can have 2 segments:
            prefix (optional) and name (required), separated by a slash (/).
            Prefix must be a DNS subdomain. Name must be 63 characters or less,
            begin and end with alphanumerics, with dashes (-), underscores (_),
            dots (.), and alphanumerics between.
          type: object
          additionalProperties:
            type: string
        state:
          description: Output only. The current state of VMware admin cluster.
          readOnly: true
          type: string
          enumDescriptions:
            - Not set.
            - The PROVISIONING state indicates the cluster is being created.
            - >-
              The RUNNING state indicates the cluster has been created and is
              fully usable.
            - >-
              The RECONCILING state indicates that the cluster is being updated.
              It remains available, but potentially with degraded performance.
            - The STOPPING state indicates the cluster is being deleted.
            - >-
              The ERROR state indicates the cluster is in a broken unrecoverable
              state.
            - >-
              The DEGRADED state indicates the cluster requires user action to
              restore full functionality.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - RECONCILING
            - STOPPING
            - ERROR
            - DEGRADED
        endpoint:
          description: Output only. The DNS name of VMware admin cluster's API server.
          readOnly: true
          type: string
        reconciling:
          description: >-
            Output only. If set, there are currently changes in flight to the
            VMware admin cluster.
          readOnly: true
          type: boolean
        localName:
          description: >-
            Output only. The object name of the VMware OnPremAdminCluster custom
            resource. This field is used to support conflicting names when
            enrolling existing clusters to the API. When used as a part of
            cluster enrollment, this field will differ from the ID in the
            resource name. For new clusters, this field will match the user
            provided cluster name and be visible in the last component of the
            resource name. It is not modifiable. All users should use this name
            to access their cluster using gkectl or kubectl and should expect to
            see the local name when viewing admin cluster controller logs.
          readOnly: true
          type: string
        bootstrapClusterMembership:
          description: The bootstrap cluster this VMware admin cluster belongs to.
          type: string
        onPremVersion:
          description: The Anthos clusters on the VMware version for the admin cluster.
          type: string
        fleet:
          description: Output only. Fleet configuration for the cluster.
          readOnly: true
          $ref: '#/components/schemas/Fleet'
        imageType:
          description: The OS image type for the VMware admin cluster.
          type: string
        vcenter:
          description: The VMware admin cluster VCenter configuration.
          $ref: '#/components/schemas/VmwareAdminVCenterConfig'
        networkConfig:
          description: The VMware admin cluster network configuration.
          $ref: '#/components/schemas/VmwareAdminNetworkConfig'
        loadBalancer:
          description: The VMware admin cluster load balancer configuration.
          $ref: '#/components/schemas/VmwareAdminLoadBalancerConfig'
        controlPlaneNode:
          description: The VMware admin cluster control plane node configuration.
          $ref: '#/components/schemas/VmwareAdminControlPlaneNodeConfig'
        addonNode:
          description: The VMware admin cluster addon node configuration.
          $ref: '#/components/schemas/VmwareAdminAddonNodeConfig'
        antiAffinityGroups:
          description: The VMware admin cluster anti affinity group configuration.
          $ref: '#/components/schemas/VmwareAAGConfig'
        autoRepairConfig:
          description: The VMware admin cluster auto repair configuration.
          $ref: '#/components/schemas/VmwareAutoRepairConfig'
        status:
          description: Output only. ResourceStatus representing detailed cluster state.
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
        platformConfig:
          description: The VMware platform configuration.
          $ref: '#/components/schemas/VmwarePlatformConfig'
        preparedSecrets:
          description: >-
            Output only. The VMware admin cluster prepared secrets
            configuration. It should always be enabled by the Central API,
            instead of letting users set it.
          readOnly: true
          $ref: '#/components/schemas/VmwareAdminPreparedSecretsConfig'
        authorization:
          description: The VMware admin cluster authorization configuration.
          $ref: '#/components/schemas/VmwareAdminAuthorizationConfig'
    VmwareAdminVCenterConfig:
      id: VmwareAdminVCenterConfig
      description: >-
        VmwareAdminVCenterConfig contains VCenter configuration for VMware admin
        cluster.
      type: object
      properties:
        resourcePool:
          description: The name of the vCenter resource pool for the admin cluster.
          type: string
        datastore:
          description: The name of the vCenter datastore for the admin cluster.
          type: string
        datacenter:
          description: The name of the vCenter datacenter for the admin cluster.
          type: string
        cluster:
          description: The name of the vCenter cluster for the admin cluster.
          type: string
        folder:
          description: The name of the vCenter folder for the admin cluster.
          type: string
        caCertData:
          description: Contains the vCenter CA certificate public key for SSL verification.
          type: string
        address:
          description: The vCenter IP address.
          type: string
        dataDisk:
          description: The name of the virtual machine disk (VMDK) for the admin cluster.
          type: string
        storagePolicyName:
          description: The name of the vCenter storage policy for the user cluster.
          type: string
    VmwareAdminNetworkConfig:
      id: VmwareAdminNetworkConfig
      description: >-
        VmwareAdminNetworkConfig contains network configuration for VMware admin
        cluster.
      type: object
      properties:
        serviceAddressCidrBlocks:
          description: >-
            Required. All services in the cluster are assigned an RFC1918 IPv4
            address from these ranges. Only a single range is supported. This
            field cannot be changed after creation.
          type: array
          items:
            type: string
        podAddressCidrBlocks:
          description: >-
            Required. All pods in the cluster are assigned an RFC1918 IPv4
            address from these ranges. Only a single range is supported. This
            field cannot be changed after creation.
          type: array
          items:
            type: string
        staticIpConfig:
          description: Configuration settings for a static IP configuration.
          $ref: '#/components/schemas/VmwareStaticIpConfig'
        dhcpIpConfig:
          description: Configuration settings for a DHCP IP configuration.
          $ref: '#/components/schemas/VmwareDhcpIpConfig'
        vcenterNetwork:
          description: vcenter_network specifies vCenter network name.
          type: string
        hostConfig:
          description: >-
            Represents common network settings irrespective of the host's IP
            address.
          $ref: '#/components/schemas/VmwareHostConfig'
        haControlPlaneConfig:
          description: Configuration for HA admin cluster control plane.
          $ref: '#/components/schemas/VmwareAdminHAControlPlaneConfig'
    VmwareAdminHAControlPlaneConfig:
      id: VmwareAdminHAControlPlaneConfig
      description: Specifies HA admin control plane config.
      type: object
      properties:
        controlPlaneIpBlock:
          description: Static IP addresses for the admin control plane nodes.
          $ref: '#/components/schemas/VmwareIpBlock'
    VmwareAdminLoadBalancerConfig:
      id: VmwareAdminLoadBalancerConfig
      description: >-
        VmwareAdminLoadBalancerConfig contains load balancer configuration for
        VMware admin cluster.
      type: object
      properties:
        vipConfig:
          description: The VIPs used by the load balancer.
          $ref: '#/components/schemas/VmwareAdminVipConfig'
        f5Config:
          description: Configuration for F5 Big IP typed load balancers.
          $ref: '#/components/schemas/VmwareAdminF5BigIpConfig'
        manualLbConfig:
          description: Manually configured load balancers.
          $ref: '#/components/schemas/VmwareAdminManualLbConfig'
        metalLbConfig:
          description: MetalLB load balancers.
          $ref: '#/components/schemas/VmwareAdminMetalLbConfig'
        seesawConfig:
          description: Output only. Configuration for Seesaw typed load balancers.
          readOnly: true
          $ref: '#/components/schemas/VmwareAdminSeesawConfig'
    VmwareAdminVipConfig:
      id: VmwareAdminVipConfig
      description: VmwareAdminVipConfig for VMware load balancer configurations.
      type: object
      properties:
        controlPlaneVip:
          description: >-
            The VIP which you previously set aside for the Kubernetes API of the
            admin cluster.
          type: string
        addonsVip:
          description: The VIP to configure the load balancer for add-ons.
          type: string
    VmwareAdminF5BigIpConfig:
      id: VmwareAdminF5BigIpConfig
      description: >-
        VmwareAdminF5BigIpConfig represents configuration parameters for an F5
        BIG-IP load balancer.
      type: object
      properties:
        address:
          description: The load balancer's IP address.
          type: string
        partition:
          description: >-
            The preexisting partition to be used by the load balancer. This
            partition is usually created for the admin cluster for example:
            'my-f5-admin-partition'.
          type: string
        snatPool:
          description: The pool name. Only necessary, if using SNAT.
          type: string
    VmwareAdminManualLbConfig:
      id: VmwareAdminManualLbConfig
      type: object
      properties:
        ingressHttpNodePort:
          description: >-
            NodePort for ingress service's http. The ingress service in the
            admin cluster is implemented as a Service of type NodePort (ex.
            32527).
          type: integer
          format: int32
        ingressHttpsNodePort:
          description: >-
            NodePort for ingress service's https. The ingress service in the
            admin cluster is implemented as a Service of type NodePort (ex.
            30139).
          type: integer
          format: int32
        controlPlaneNodePort:
          description: >-
            NodePort for control plane service. The Kubernetes API server in the
            admin cluster is implemented as a Service of type NodePort (ex.
            30968).
          type: integer
          format: int32
        konnectivityServerNodePort:
          description: >-
            NodePort for konnectivity server service running as a sidecar in
            each kube-apiserver pod (ex. 30564).
          type: integer
          format: int32
        addonsNodePort:
          description: NodePort for add-ons server in the admin cluster.
          type: integer
          format: int32
    VmwareAdminMetalLbConfig:
      id: VmwareAdminMetalLbConfig
      description: >-
        VmwareAdminMetalLbConfig represents configuration parameters for a
        MetalLB load balancer. For admin clusters, currently no configurations
        is needed.
      type: object
      properties: {}
    VmwareAdminSeesawConfig:
      id: VmwareAdminSeesawConfig
      description: >-
        VmwareSeesawConfig represents configuration parameters for an already
        existing Seesaw load balancer. IMPORTANT: Please note that the Anthos
        On-Prem API will not generate or update Seesaw configurations it can
        only bind a pre-existing configuration to a new user cluster. IMPORTANT:
        When attempting to create a user cluster with a pre-existing Seesaw load
        balancer you will need to follow some preparation steps before calling
        the 'CreateVmwareCluster' API method. First you will need to create the
        user cluster's namespace via kubectl. The namespace will need to use the
        following naming convention : -gke-onprem-mgmt or -gke-onprem-mgmt
        depending on whether you used the 'VmwareCluster.local_name' to
        disambiguate collisions; for more context see the documentation of
        'VmwareCluster.local_name'. Once the namespace is created you will need
        to create a secret resource via kubectl. This secret will contain copies
        of your Seesaw credentials. The Secret must be called
        'user-cluster-creds' and contain Seesaw's SSH and Cert credentials. The
        credentials must be keyed with the following names:
        'seesaw-ssh-private-key', 'seesaw-ssh-public-key', 'seesaw-ssh-ca-key',
        'seesaw-ssh-ca-cert'.
      type: object
      properties:
        group:
          description: >-
            In general the following format should be used for the Seesaw group
            name: seesaw-for-[cluster_name].
          type: string
        masterIp:
          description: MasterIP is the IP announced by the master of Seesaw group.
          type: string
        ipBlocks:
          description: The IP Blocks to be used by the Seesaw load balancer
          type: array
          items:
            $ref: '#/components/schemas/VmwareIpBlock'
        enableHa:
          description: >-
            Enable two load balancer VMs to achieve a highly-available Seesaw
            load balancer.
          type: boolean
        vms:
          description: Names of the VMs created for this Seesaw group.
          type: array
          items:
            type: string
        stackdriverName:
          description: Name to be used by Stackdriver.
          type: string
    VmwareAdminControlPlaneNodeConfig:
      id: VmwareAdminControlPlaneNodeConfig
      description: >-
        VmwareAdminControlPlaneNodeConfig contains control plane node
        configuration for VMware admin cluster.
      type: object
      properties:
        cpus:
          description: The number of vCPUs for the control-plane node of the admin cluster.
          type: string
          format: int64
        memory:
          description: >-
            The number of mebibytes of memory for the control-plane node of the
            admin cluster.
          type: string
          format: int64
        replicas:
          description: >-
            The number of control plane nodes for this VMware admin cluster.
            (default: 1 replica).
          type: string
          format: int64
    VmwareAdminAddonNodeConfig:
      id: VmwareAdminAddonNodeConfig
      description: >-
        VmwareAdminAddonNodeConfig contains add-on node configurations for
        VMware admin cluster.
      type: object
      properties:
        autoResizeConfig:
          description: VmwareAutoResizeConfig config specifies auto resize config.
          $ref: '#/components/schemas/VmwareAutoResizeConfig'
    VmwarePlatformConfig:
      id: VmwarePlatformConfig
      description: VmwarePlatformConfig represents configuration for the VMware platform.
      type: object
      properties:
        requiredPlatformVersion:
          description: >-
            Input only. The required platform version e.g. 1.13.1. If the
            current platform version is lower than the target version, the
            platform version will be updated to the target version. If the
            target version is not installed in the platform (bundle versions),
            download the target version bundle.
          type: string
        platformVersion:
          description: Output only. The platform version e.g. 1.13.2.
          readOnly: true
          type: string
        bundles:
          description: Output only. The list of bundles installed in the admin cluster.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/VmwareBundleConfig'
        status:
          description: Output only. Resource status for the platform.
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
    VmwareBundleConfig:
      id: VmwareBundleConfig
      description: VmwareBundleConfig represents configuration for the bundle.
      type: object
      properties:
        version:
          description: The version of the bundle.
          type: string
        status:
          description: Output only. Resource status for the bundle.
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
    VmwareAdminPreparedSecretsConfig:
      id: VmwareAdminPreparedSecretsConfig
      description: >-
        VmwareAdminPreparedSecretsConfig represents configuration for admin
        cluster prepared secrets.
      type: object
      properties:
        enabled:
          description: Whether prepared secrets is enabled.
          type: boolean
    VmwareAdminAuthorizationConfig:
      id: VmwareAdminAuthorizationConfig
      description: >-
        VmwareAdminAuthorizationConfig represents configuration for admin
        cluster authorization.
      type: object
      properties:
        viewerUsers:
          description: >-
            For VMware admin clusters, users will be granted the cluster-viewer
            role on the cluster.
          type: array
          items:
            $ref: '#/components/schemas/ClusterUser'
    EnrollVmwareAdminClusterRequest:
      id: EnrollVmwareAdminClusterRequest
      description: >-
        Message for enrolling an existing VMware admin cluster to the GKE
        on-prem API.
      type: object
      properties:
        vmwareAdminClusterId:
          description: >-
            User provided OnePlatform identifier that is used as part of the
            resource name. This must be unique among all GKE on-prem clusters
            within a project and location and will return a 409 if the cluster
            already exists. (https://tools.ietf.org/html/rfc1123) format.
          type: string
        membership:
          description: >-
            Required. This is the full resource name of this admin cluster's
            fleet membership.
          type: string
    QueryVmwareVersionConfigResponse:
      id: QueryVmwareVersionConfigResponse
      description: Response message for querying VMware user cluster version config.
      type: object
      properties:
        versions:
          description: List of available versions to install or to upgrade to.
          type: array
          items:
            $ref: '#/components/schemas/VmwareVersionInfo'
    VmwareVersionInfo:
      id: VmwareVersionInfo
      description: Contains information about a specific Anthos on VMware version.
      type: object
      properties:
        version:
          description: Version number e.g. 1.13.1-gke.1000.
          type: string
        hasDependencies:
          description: >-
            If set, the cluster dependencies (e.g. the admin cluster, other user
            clusters managed by the same admin cluster) must be upgraded before
            this version can be installed or upgraded to.
          type: boolean
        isInstalled:
          description: >-
            If set, the version is installed in the admin cluster. Otherwise,
            the version bundle must be downloaded and installed before a user
            cluster can be created at or upgraded to this version.
          type: boolean
        dependencies:
          description: The list of upgrade dependencies for this version.
          type: array
          items:
            $ref: '#/components/schemas/UpgradeDependency'
    BareMetalAdminCluster:
      id: BareMetalAdminCluster
      description: Resource that represents a bare metal admin cluster.
      type: object
      properties:
        name:
          description: Immutable. The bare metal admin cluster resource name.
          type: string
        description:
          description: A human readable description of this bare metal admin cluster.
          type: string
        uid:
          description: Output only. The unique identifier of the bare metal admin cluster.
          readOnly: true
          type: string
        bareMetalVersion:
          description: >-
            The Anthos clusters on bare metal version for the bare metal admin
            cluster.
          type: string
        state:
          description: Output only. The current state of the bare metal admin cluster.
          readOnly: true
          type: string
          enumDescriptions:
            - Not set.
            - The PROVISIONING state indicates the cluster is being created.
            - >-
              The RUNNING state indicates the cluster has been created and is
              fully usable.
            - >-
              The RECONCILING state indicates that the cluster is being updated.
              It remains available, but potentially with degraded performance.
            - The STOPPING state indicates the cluster is being deleted.
            - >-
              The ERROR state indicates the cluster is in a broken unrecoverable
              state.
            - >-
              The DEGRADED state indicates the cluster requires user action to
              restore full functionality.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - RECONCILING
            - STOPPING
            - ERROR
            - DEGRADED
        endpoint:
          description: >-
            Output only. The IP address name of bare metal admin cluster's API
            server.
          readOnly: true
          type: string
        reconciling:
          description: >-
            Output only. If set, there are currently changes in flight to the
            bare metal Admin Cluster.
          readOnly: true
          type: boolean
        createTime:
          description: >-
            Output only. The time at which this bare metal admin cluster was
            created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The time at which this bare metal admin cluster was
            last updated.
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: >-
            Output only. The time at which this bare metal admin cluster was
            deleted. If the resource is not deleted, this must be empty
          readOnly: true
          type: string
          format: google-datetime
        localName:
          description: >-
            Output only. The object name of the bare metal cluster custom
            resource. This field is used to support conflicting names when
            enrolling existing clusters to the API. When used as a part of
            cluster enrollment, this field will differ from the ID in the
            resource name. For new clusters, this field will match the user
            provided cluster name and be visible in the last component of the
            resource name. It is not modifiable. All users should use this name
            to access their cluster using gkectl or kubectl and should expect to
            see the local name when viewing admin cluster controller logs.
          readOnly: true
          type: string
        etag:
          description: >-
            This checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding. Allows clients to
            perform consistent read-modify-writes through optimistic concurrency
            control.
          type: string
        annotations:
          description: >-
            Annotations on the bare metal admin cluster. This field has the same
            restrictions as Kubernetes annotations. The total size of all keys
            and values combined is limited to 256k. Key can have 2 segments:
            prefix (optional) and name (required), separated by a slash (/).
            Prefix must be a DNS subdomain. Name must be 63 characters or less,
            begin and end with alphanumerics, with dashes (-), underscores (_),
            dots (.), and alphanumerics between.
          type: object
          additionalProperties:
            type: string
        networkConfig:
          description: Network configuration.
          $ref: '#/components/schemas/BareMetalAdminNetworkConfig'
        controlPlane:
          description: Control plane configuration.
          $ref: '#/components/schemas/BareMetalAdminControlPlaneConfig'
        loadBalancer:
          description: Load balancer configuration.
          $ref: '#/components/schemas/BareMetalAdminLoadBalancerConfig'
        storage:
          description: Storage configuration.
          $ref: '#/components/schemas/BareMetalAdminStorageConfig'
        fleet:
          description: Output only. Fleet configuration for the cluster.
          readOnly: true
          $ref: '#/components/schemas/Fleet'
        clusterOperations:
          description: Cluster operations configuration.
          $ref: '#/components/schemas/BareMetalAdminClusterOperationsConfig'
        status:
          description: Output only. ResourceStatus representing detailed cluster status.
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
        maintenanceConfig:
          description: Maintenance configuration.
          $ref: '#/components/schemas/BareMetalAdminMaintenanceConfig'
        maintenanceStatus:
          description: Output only. MaintenanceStatus representing state of maintenance.
          readOnly: true
          $ref: '#/components/schemas/BareMetalAdminMaintenanceStatus'
        validationCheck:
          description: >-
            Output only. ValidationCheck representing the result of the
            preflight check.
          readOnly: true
          $ref: '#/components/schemas/ValidationCheck'
        nodeConfig:
          description: Workload node configuration.
          $ref: '#/components/schemas/BareMetalAdminWorkloadNodeConfig'
        proxy:
          description: Proxy configuration.
          $ref: '#/components/schemas/BareMetalAdminProxyConfig'
        securityConfig:
          description: Security related configuration.
          $ref: '#/components/schemas/BareMetalAdminSecurityConfig'
        nodeAccessConfig:
          description: Node access related configurations.
          $ref: '#/components/schemas/BareMetalAdminNodeAccessConfig'
        osEnvironmentConfig:
          description: OS environment related configurations.
          $ref: '#/components/schemas/BareMetalAdminOsEnvironmentConfig'
        binaryAuthorization:
          description: Binary Authorization related configurations.
          $ref: '#/components/schemas/BinaryAuthorization'
    BareMetalAdminNetworkConfig:
      id: BareMetalAdminNetworkConfig
      description: BareMetalAdminNetworkConfig specifies the cluster network configuration.
      type: object
      properties:
        islandModeCidr:
          description: Configuration for Island mode CIDR.
          $ref: '#/components/schemas/BareMetalAdminIslandModeCidrConfig'
    BareMetalAdminIslandModeCidrConfig:
      id: BareMetalAdminIslandModeCidrConfig
      description: >-
        BareMetalAdminIslandModeCidrConfig specifies the cluster CIDR
        configuration while running in island mode.
      type: object
      properties:
        serviceAddressCidrBlocks:
          description: >-
            Required. All services in the cluster are assigned an RFC1918 IPv4
            address from these ranges. This field cannot be changed after
            creation.
          type: array
          items:
            type: string
        podAddressCidrBlocks:
          description: >-
            Required. All pods in the cluster are assigned an RFC1918 IPv4
            address from these ranges. This field cannot be changed after
            creation.
          type: array
          items:
            type: string
    BareMetalAdminControlPlaneConfig:
      id: BareMetalAdminControlPlaneConfig
      description: >-
        BareMetalAdminControlPlaneConfig specifies the control plane
        configuration.
      type: object
      properties:
        controlPlaneNodePoolConfig:
          description: >-
            Required. Configures the node pool running the control plane. If
            specified the corresponding NodePool will be created for the
            cluster's control plane. The NodePool will have the same name and
            namespace as the cluster.
          $ref: '#/components/schemas/BareMetalAdminControlPlaneNodePoolConfig'
        apiServerArgs:
          description: >-
            Customizes the default API server args. Only a subset of customized
            flags are supported. Please refer to the API server documentation
            below to know the exact format:
            https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
          type: array
          items:
            $ref: '#/components/schemas/BareMetalAdminApiServerArgument'
    BareMetalAdminControlPlaneNodePoolConfig:
      id: BareMetalAdminControlPlaneNodePoolConfig
      description: >-
        BareMetalAdminControlPlaneNodePoolConfig specifies the control plane
        node pool configuration. We have a control plane specific node pool
        config so that we can flexible about supporting control plane specific
        fields in the future.
      type: object
      properties:
        nodePoolConfig:
          description: >-
            Required. The generic configuration for a node pool running the
            control plane.
          $ref: '#/components/schemas/BareMetalNodePoolConfig'
    BareMetalAdminApiServerArgument:
      id: BareMetalAdminApiServerArgument
      description: >-
        BareMetalAdminApiServerArgument represents an arg name->value pair. Only
        a subset of customized flags are supported. Please refer to the API
        server documentation below to know the exact format:
        https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
      type: object
      properties:
        argument:
          description: >-
            Required. The argument name as it appears on the API Server command
            line please make sure to remove the leading dashes.
          type: string
        value:
          description: >-
            Required. The value of the arg as it will be passed to the API
            Server command line.
          type: string
    BareMetalAdminLoadBalancerConfig:
      id: BareMetalAdminLoadBalancerConfig
      description: >-
        BareMetalAdminLoadBalancerConfig specifies the load balancer
        configuration.
      type: object
      properties:
        vipConfig:
          description: The VIPs used by the load balancer.
          $ref: '#/components/schemas/BareMetalAdminVipConfig'
        portConfig:
          description: Configures the ports that the load balancer will listen on.
          $ref: '#/components/schemas/BareMetalAdminPortConfig'
        manualLbConfig:
          description: Manually configured load balancers.
          $ref: '#/components/schemas/BareMetalAdminManualLbConfig'
    BareMetalAdminVipConfig:
      id: BareMetalAdminVipConfig
      description: BareMetalAdminVipConfig for bare metal load balancer configurations.
      type: object
      properties:
        controlPlaneVip:
          description: >-
            The VIP which you previously set aside for the Kubernetes API of
            this bare metal admin cluster.
          type: string
    BareMetalAdminPortConfig:
      id: BareMetalAdminPortConfig
      description: BareMetalAdminPortConfig is the specification of load balancer ports.
      type: object
      properties:
        controlPlaneLoadBalancerPort:
          description: The port that control plane hosted load balancers will listen on.
          type: integer
          format: int32
    BareMetalAdminManualLbConfig:
      id: BareMetalAdminManualLbConfig
      description: >-
        BareMetalAdminManualLbConfig represents configuration parameters for a
        manual load balancer.
      type: object
      properties:
        enabled:
          description: Whether manual load balancing is enabled.
          type: boolean
    BareMetalAdminStorageConfig:
      id: BareMetalAdminStorageConfig
      description: BareMetalAdminStorageConfig specifies the cluster storage configuration.
      type: object
      properties:
        lvpShareConfig:
          description: >-
            Required. Specifies the config for local PersistentVolumes backed by
            subdirectories in a shared filesystem. These subdirectores are
            automatically created during cluster creation.
          $ref: '#/components/schemas/BareMetalLvpShareConfig'
        lvpNodeMountsConfig:
          description: >-
            Required. Specifies the config for local PersistentVolumes backed by
            mounted node disks. These disks need to be formatted and mounted by
            the user, which can be done before or after cluster creation.
          $ref: '#/components/schemas/BareMetalLvpConfig'
    BareMetalAdminClusterOperationsConfig:
      id: BareMetalAdminClusterOperationsConfig
      description: >-
        BareMetalAdminClusterOperationsConfig specifies the admin cluster's
        observability infrastructure.
      type: object
      properties:
        enableApplicationLogs:
          description: >-
            Whether collection of application logs/metrics should be enabled (in
            addition to system logs/metrics).
          type: boolean
    BareMetalAdminMaintenanceConfig:
      id: BareMetalAdminMaintenanceConfig
      description: >-
        BareMetalAdminMaintenanceConfig specifies configurations to put bare
        metal Admin cluster CRs nodes in and out of maintenance.
      type: object
      properties:
        maintenanceAddressCidrBlocks:
          description: >-
            Required. All IPv4 address from these ranges will be placed into
            maintenance mode. Nodes in maintenance mode will be cordoned and
            drained. When both of these are true, the
            "baremetal.cluster.gke.io/maintenance" annotation will be set on the
            node resource.
          type: array
          items:
            type: string
    BareMetalAdminMaintenanceStatus:
      id: BareMetalAdminMaintenanceStatus
      description: >-
        BareMetalAdminMaintenanceStatus represents the maintenance status for
        bare metal Admin cluster CR's nodes.
      type: object
      properties:
        machineDrainStatus:
          description: >-
            Represents the status of draining and drained machine nodes. This is
            used to show the progress of cluster upgrade.
          $ref: '#/components/schemas/BareMetalAdminMachineDrainStatus'
    BareMetalAdminMachineDrainStatus:
      id: BareMetalAdminMachineDrainStatus
      description: >-
        BareMetalAdminMachineDrainStatus represents the status of bare metal
        node machines that are undergoing drain operations.
      type: object
      properties:
        drainingMachines:
          description: The list of draning machines.
          type: array
          items:
            $ref: '#/components/schemas/BareMetalAdminDrainingMachine'
        drainedMachines:
          description: The list of drained machines.
          type: array
          items:
            $ref: '#/components/schemas/BareMetalAdminDrainedMachine'
    BareMetalAdminDrainingMachine:
      id: BareMetalAdminDrainingMachine
      description: >-
        BareMetalAdminDrainingMachine represents the machines that are currently
        draining.
      type: object
      properties:
        nodeIp:
          description: Draining machine IP address.
          type: string
        podCount:
          description: The count of pods yet to drain.
          type: integer
          format: int32
    BareMetalAdminDrainedMachine:
      id: BareMetalAdminDrainedMachine
      description: BareMetalAdminDrainedMachine represents the machines that are drained.
      type: object
      properties:
        nodeIp:
          description: Drained machine IP address.
          type: string
    BareMetalAdminWorkloadNodeConfig:
      id: BareMetalAdminWorkloadNodeConfig
      description: >-
        BareMetalAdminWorkloadNodeConfig specifies the workload node
        configurations.
      type: object
      properties:
        maxPodsPerNode:
          description: >-
            The maximum number of pods a node can run. The size of the CIDR
            range assigned to the node will be derived from this parameter. By
            default 110 Pods are created per Node. Upper bound is 250 for both
            HA and non-HA admin cluster. Lower bound is 64 for non-HA admin
            cluster and 32 for HA admin cluster.
          type: string
          format: int64
    BareMetalAdminProxyConfig:
      id: BareMetalAdminProxyConfig
      description: BareMetalAdminProxyConfig specifies the cluster proxy configuration.
      type: object
      properties:
        uri:
          description: >-
            Required. Specifies the address of your proxy server. Examples:
            `http://domain` WARNING: Do not provide credentials in the format
            `http://(username:password@)domain` these will be rejected by the
            server.
          type: string
        noProxy:
          description: >-
            A list of IPs, hostnames, and domains that should skip the proxy.
            Examples: ["127.0.0.1", "example.com", ".corp", "localhost"].
          type: array
          items:
            type: string
    BareMetalAdminSecurityConfig:
      id: BareMetalAdminSecurityConfig
      description: >-
        Specifies the security related settings for the bare metal admin
        cluster.
      type: object
      properties:
        authorization:
          description: Configures user access to the admin cluster.
          $ref: '#/components/schemas/Authorization'
    BareMetalAdminNodeAccessConfig:
      id: BareMetalAdminNodeAccessConfig
      description: >-
        Specifies the node access related settings for the bare metal admin
        cluster.
      type: object
      properties:
        loginUser:
          description: >-
            Required. LoginUser is the user name used to access node machines.
            It defaults to "root" if not set.
          type: string
    BareMetalAdminOsEnvironmentConfig:
      id: BareMetalAdminOsEnvironmentConfig
      description: Specifies operating system operation settings for cluster provisioning.
      type: object
      properties:
        packageRepoExcluded:
          description: >-
            Whether the package repo should be added when initializing bare
            metal machines.
          type: boolean
    ListBareMetalAdminClustersResponse:
      id: ListBareMetalAdminClustersResponse
      description: Response message for listing bare metal admin clusters.
      type: object
      properties:
        bareMetalAdminClusters:
          description: The list of bare metal admin cluster.
          type: array
          items:
            $ref: '#/components/schemas/BareMetalAdminCluster'
        nextPageToken:
          description: >-
            A token identifying a page of results the server should return. If
            the token is not empty this means that more results are available
            and should be retrieved by repeating the request with the provided
            page token.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    EnrollBareMetalAdminClusterRequest:
      id: EnrollBareMetalAdminClusterRequest
      description: >-
        Message for enrolling an existing bare metal admin cluster to the GKE
        on-prem API.
      type: object
      properties:
        bareMetalAdminClusterId:
          description: >-
            User provided OnePlatform identifier that is used as part of the
            resource name. This must be unique among all GKE on-prem clusters
            within a project and location and will return a 409 if the cluster
            already exists. (https://tools.ietf.org/html/rfc1123) format.
          type: string
        membership:
          description: >-
            Required. This is the full resource name of this admin cluster's
            fleet membership.
          type: string
    QueryBareMetalAdminVersionConfigResponse:
      id: QueryBareMetalAdminVersionConfigResponse
      description: Response message for querying bare metal admin cluster version config.
      type: object
      properties:
        versions:
          description: List of available versions to install or to upgrade to.
          type: array
          items:
            $ref: '#/components/schemas/BareMetalVersionInfo'
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
    Policy:
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
          format: byte
    Binding:
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
          items:
            type: string
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
    Expr:
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
          items:
            type: string
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have [Operation.error] value with a [google.rpc.Status.code] of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        type:
          description: Output only. Type of operation being executed.
          readOnly: true
          type: string
          enumDescriptions:
            - Not set.
            - The resource is being created.
            - The resource is being deleted.
            - The resource is being updated.
            - The resource is being upgraded.
            - The platform is being upgraded.
          enum:
            - OPERATION_TYPE_UNSPECIFIED
            - CREATE
            - DELETE
            - UPDATE
            - UPGRADE
            - PLATFORM_UPGRADE
        progress:
          description: Output only. Detailed progress information for the operation.
          readOnly: true
          $ref: '#/components/schemas/OperationProgress'
        controlPlaneDisconnected:
          description: >-
            Output only. Denotes if the local managing cluster's control plane
            is currently disconnected. This is expected to occur temporarily
            during self-managed cluster upgrades.
          readOnly: true
          type: boolean
    OperationProgress:
      id: OperationProgress
      description: Information about operation progress.
      type: object
      properties:
        stages:
          description: The stages of the operation.
          type: array
          items:
            $ref: '#/components/schemas/OperationStage'
    OperationStage:
      id: OperationStage
      description: Information about a particular stage of an operation.
      type: object
      properties:
        stage:
          description: The high-level stage of the operation.
          type: string
          enumDescriptions:
            - Not set.
            - Preflight checks are running.
            - Resource is being configured.
            - Resource is being deployed.
            - Waiting for the resource to become healthy.
            - Resource is being updated.
          enum:
            - STAGE_UNSPECIFIED
            - PREFLIGHT_CHECK
            - CONFIGURE
            - DEPLOY
            - HEALTH_CHECK
            - UPDATE
        metrics:
          description: Progress metric bundle.
          type: array
          items:
            $ref: '#/components/schemas/Metric'
        startTime:
          description: Time the stage started.
          type: string
          format: google-datetime
        endTime:
          description: Time the stage ended.
          type: string
          format: google-datetime
        state:
          description: Output only. State of the stage.
          readOnly: true
          type: string
          enumDescriptions:
            - Not set.
            - The stage is pending.
            - The stage is running
            - The stage has completed successfully.
            - The stage has failed.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - FAILED
    Metric:
      id: Metric
      description: Progress metric is (string, int|float|string) pair.
      type: object
      properties:
        metric:
          description: Required. The metric name.
          type: string
          enumDescriptions:
            - Not set.
            - The total number of nodes being actuated.
            - The number of nodes draining.
            - The number of nodes actively upgrading.
            - The number of nodes to be upgraded.
            - The number of nodes upgraded.
            - The number of nodes to fail actuation.
            - The number of nodes healthy.
            - The number of nodes reconciling.
            - The number of nodes in maintenance mode.
            - The number of completed preflight checks.
            - The number of preflight checks running.
            - The number of preflight checks failed.
            - The total number of preflight checks.
          enum:
            - METRIC_ID_UNSPECIFIED
            - NODES_TOTAL
            - NODES_DRAINING
            - NODES_UPGRADING
            - NODES_PENDING_UPGRADE
            - NODES_UPGRADED
            - NODES_FAILED
            - NODES_HEALTHY
            - NODES_RECONCILING
            - NODES_IN_MAINTENANCE
            - PREFLIGHTS_COMPLETED
            - PREFLIGHTS_RUNNING
            - PREFLIGHTS_FAILED
            - PREFLIGHTS_TOTAL
        intValue:
          description: For metrics with integer value.
          type: string
          format: int64
        doubleValue:
          description: For metrics with floating point value.
          type: number
          format: double
        stringValue:
          description: For metrics with custom values (ratios, visual progress, etc.).
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.gkeonprem.locations
      name: locations
      title: Locations
      methods:
        _projects_locations_list:
          operation: &ref_1
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response: &ref_2
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        projects_locations_list:
          operation: *ref_1
          response: *ref_2
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/locations/methods/projects_locations_get
          - $ref: >-
              #/components/x-stackQL-resources/locations/methods/projects_locations_list
        insert: []
        update: []
        delete: []
    operations:
      id: google.gkeonprem.operations
      name: operations
      title: Operations
      methods:
        _projects_locations_operations_list:
          operation: &ref_3
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response: &ref_4
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_operations_list:
          operation: *ref_3
          response: *ref_4
        projects_locations_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_bare_metal_clusters_operations_list:
          operation: &ref_5
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1operations/get
          response: &ref_6
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_bare_metal_clusters_operations_list:
          operation: *ref_5
          response: *ref_6
        projects_locations_bare_metal_clusters_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_bare_metal_clusters_bare_metal_node_pools_operations_list:
          operation: &ref_7
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}~1operations/get
          response: &ref_8
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_bare_metal_clusters_bare_metal_node_pools_operations_list:
          operation: *ref_7
          response: *ref_8
        projects_locations_bare_metal_clusters_bare_metal_node_pools_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_vmware_clusters_operations_list:
          operation: &ref_9
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1operations/get
          response: &ref_10
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_vmware_clusters_operations_list:
          operation: *ref_9
          response: *ref_10
        projects_locations_vmware_clusters_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_vmware_clusters_vmware_node_pools_operations_list:
          operation: &ref_11
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}~1operations/get
          response: &ref_12
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_vmware_clusters_vmware_node_pools_operations_list:
          operation: *ref_11
          response: *ref_12
        projects_locations_vmware_clusters_vmware_node_pools_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_vmware_admin_clusters_operations_list:
          operation: &ref_13
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters~1{vmwareAdminClustersId}~1operations/get
          response: &ref_14
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_vmware_admin_clusters_operations_list:
          operation: *ref_13
          response: *ref_14
        projects_locations_vmware_admin_clusters_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters~1{vmwareAdminClustersId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_bare_metal_admin_clusters_operations_list:
          operation: &ref_15
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters~1{bareMetalAdminClustersId}~1operations/get
          response: &ref_16
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_bare_metal_admin_clusters_operations_list:
          operation: *ref_15
          response: *ref_16
        projects_locations_bare_metal_admin_clusters_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters~1{bareMetalAdminClustersId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_bare_metal_clusters_bare_metal_node_pools_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_vmware_clusters_vmware_node_pools_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_bare_metal_clusters_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_bare_metal_clusters_bare_metal_node_pools_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_vmware_clusters_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_vmware_clusters_vmware_node_pools_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_vmware_admin_clusters_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_bare_metal_admin_clusters_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_bare_metal_clusters_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_vmware_clusters_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_vmware_admin_clusters_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_bare_metal_admin_clusters_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_operations_list
        insert: []
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete
    bare_metal_clusters:
      id: google.gkeonprem.bare_metal_clusters
      name: bare_metal_clusters
      title: Bare_metal_clusters
      methods:
        projects_locations_bare_metal_clusters_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_bare_metal_clusters_list:
          operation: &ref_17
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters/get
          response: &ref_18
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bareMetalClusters
        projects_locations_bare_metal_clusters_list:
          operation: *ref_17
          response: *ref_18
        projects_locations_bare_metal_clusters_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_enroll:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters:enroll/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_unenroll:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}:unenroll/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_query_version_config:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters:queryVersionConfig/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/bare_metal_clusters/methods/projects_locations_bare_metal_clusters_get
          - $ref: >-
              #/components/x-stackQL-resources/bare_metal_clusters/methods/projects_locations_bare_metal_clusters_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/bare_metal_clusters/methods/projects_locations_bare_metal_clusters_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/bare_metal_clusters/methods/projects_locations_bare_metal_clusters_patch
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/bare_metal_clusters/methods/projects_locations_bare_metal_clusters_delete
    bare_metal_clusters_iam_policies:
      id: google.gkeonprem.bare_metal_clusters_iam_policies
      name: bare_metal_clusters_iam_policies
      title: Bare_metal_clusters_iam_policies
      methods:
        projects_locations_bare_metal_clusters_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_bare_metal_clusters_get_iam_policy:
          operation: &ref_19
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}:getIamPolicy/get
          response: &ref_20
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_bare_metal_clusters_get_iam_policy:
          operation: *ref_19
          response: *ref_20
        projects_locations_bare_metal_clusters_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/bare_metal_clusters_iam_policies/methods/projects_locations_bare_metal_clusters_get_iam_policy
        insert: []
        update: []
        delete: []
    bare_metal_node_pools:
      id: google.gkeonprem.bare_metal_node_pools
      name: bare_metal_node_pools
      title: Bare_metal_node_pools
      methods:
        projects_locations_bare_metal_clusters_bare_metal_node_pools_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_bare_metal_clusters_bare_metal_node_pools_list:
          operation: &ref_21
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools/get
          response: &ref_22
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bareMetalNodePools
        projects_locations_bare_metal_clusters_bare_metal_node_pools_list:
          operation: *ref_21
          response: *ref_22
        projects_locations_bare_metal_clusters_bare_metal_node_pools_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_bare_metal_node_pools_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_bare_metal_node_pools_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_bare_metal_node_pools_enroll:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools:enroll/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_clusters_bare_metal_node_pools_unenroll:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}:unenroll/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/bare_metal_node_pools/methods/projects_locations_bare_metal_clusters_bare_metal_node_pools_get
          - $ref: >-
              #/components/x-stackQL-resources/bare_metal_node_pools/methods/projects_locations_bare_metal_clusters_bare_metal_node_pools_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/bare_metal_node_pools/methods/projects_locations_bare_metal_clusters_bare_metal_node_pools_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/bare_metal_node_pools/methods/projects_locations_bare_metal_clusters_bare_metal_node_pools_patch
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/bare_metal_node_pools/methods/projects_locations_bare_metal_clusters_bare_metal_node_pools_delete
    bare_metal_node_pools_iam_policies:
      id: google.gkeonprem.bare_metal_node_pools_iam_policies
      name: bare_metal_node_pools_iam_policies
      title: Bare_metal_node_pools_iam_policies
      methods:
        projects_locations_bare_metal_clusters_bare_metal_node_pools_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_bare_metal_clusters_bare_metal_node_pools_get_iam_policy:
          operation: &ref_23
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}:getIamPolicy/get
          response: &ref_24
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_bare_metal_clusters_bare_metal_node_pools_get_iam_policy:
          operation: *ref_23
          response: *ref_24
        projects_locations_bare_metal_clusters_bare_metal_node_pools_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalClusters~1{bareMetalClustersId}~1bareMetalNodePools~1{bareMetalNodePoolsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/bare_metal_node_pools_iam_policies/methods/projects_locations_bare_metal_clusters_bare_metal_node_pools_get_iam_policy
        insert: []
        update: []
        delete: []
    vmware_clusters:
      id: google.gkeonprem.vmware_clusters
      name: vmware_clusters
      title: Vmware_clusters
      methods:
        projects_locations_vmware_clusters_enroll:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters:enroll/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_unenroll:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}:unenroll/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_vmware_clusters_list:
          operation: &ref_25
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters/get
          response: &ref_26
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.vmwareClusters
        projects_locations_vmware_clusters_list:
          operation: *ref_25
          response: *ref_26
        projects_locations_vmware_clusters_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_query_version_config:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters:queryVersionConfig/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/vmware_clusters/methods/projects_locations_vmware_clusters_get
          - $ref: >-
              #/components/x-stackQL-resources/vmware_clusters/methods/projects_locations_vmware_clusters_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/vmware_clusters/methods/projects_locations_vmware_clusters_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/vmware_clusters/methods/projects_locations_vmware_clusters_patch
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/vmware_clusters/methods/projects_locations_vmware_clusters_delete
    vmware_clusters_iam_policies:
      id: google.gkeonprem.vmware_clusters_iam_policies
      name: vmware_clusters_iam_policies
      title: Vmware_clusters_iam_policies
      methods:
        projects_locations_vmware_clusters_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_vmware_clusters_get_iam_policy:
          operation: &ref_27
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}:getIamPolicy/get
          response: &ref_28
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_vmware_clusters_get_iam_policy:
          operation: *ref_27
          response: *ref_28
        projects_locations_vmware_clusters_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/vmware_clusters_iam_policies/methods/projects_locations_vmware_clusters_get_iam_policy
        insert: []
        update: []
        delete: []
    vmware_node_pools:
      id: google.gkeonprem.vmware_node_pools
      name: vmware_node_pools
      title: Vmware_node_pools
      methods:
        projects_locations_vmware_clusters_vmware_node_pools_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_vmware_clusters_vmware_node_pools_list:
          operation: &ref_29
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools/get
          response: &ref_30
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.vmwareNodePools
        projects_locations_vmware_clusters_vmware_node_pools_list:
          operation: *ref_29
          response: *ref_30
        projects_locations_vmware_clusters_vmware_node_pools_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_vmware_node_pools_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_vmware_node_pools_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_vmware_node_pools_enroll:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools:enroll/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_clusters_vmware_node_pools_unenroll:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}:unenroll/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/vmware_node_pools/methods/projects_locations_vmware_clusters_vmware_node_pools_get
          - $ref: >-
              #/components/x-stackQL-resources/vmware_node_pools/methods/projects_locations_vmware_clusters_vmware_node_pools_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/vmware_node_pools/methods/projects_locations_vmware_clusters_vmware_node_pools_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/vmware_node_pools/methods/projects_locations_vmware_clusters_vmware_node_pools_patch
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/vmware_node_pools/methods/projects_locations_vmware_clusters_vmware_node_pools_delete
    vmware_node_pools_iam_policies:
      id: google.gkeonprem.vmware_node_pools_iam_policies
      name: vmware_node_pools_iam_policies
      title: Vmware_node_pools_iam_policies
      methods:
        projects_locations_vmware_clusters_vmware_node_pools_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_vmware_clusters_vmware_node_pools_get_iam_policy:
          operation: &ref_31
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}:getIamPolicy/get
          response: &ref_32
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_vmware_clusters_vmware_node_pools_get_iam_policy:
          operation: *ref_31
          response: *ref_32
        projects_locations_vmware_clusters_vmware_node_pools_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareClusters~1{vmwareClustersId}~1vmwareNodePools~1{vmwareNodePoolsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/vmware_node_pools_iam_policies/methods/projects_locations_vmware_clusters_vmware_node_pools_get_iam_policy
        insert: []
        update: []
        delete: []
    vmware_admin_clusters:
      id: google.gkeonprem.vmware_admin_clusters
      name: vmware_admin_clusters
      title: Vmware_admin_clusters
      methods:
        _projects_locations_vmware_admin_clusters_list:
          operation: &ref_33
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters/get
          response: &ref_34
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.vmwareAdminClusters
        projects_locations_vmware_admin_clusters_list:
          operation: *ref_33
          response: *ref_34
        projects_locations_vmware_admin_clusters_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters~1{vmwareAdminClustersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_admin_clusters_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters~1{vmwareAdminClustersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_admin_clusters_enroll:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters:enroll/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_vmware_admin_clusters_unenroll:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters~1{vmwareAdminClustersId}:unenroll/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/vmware_admin_clusters/methods/projects_locations_vmware_admin_clusters_get
          - $ref: >-
              #/components/x-stackQL-resources/vmware_admin_clusters/methods/projects_locations_vmware_admin_clusters_list
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/vmware_admin_clusters/methods/projects_locations_vmware_admin_clusters_patch
        delete: []
    vmware_admin_clusters_iam_policies:
      id: google.gkeonprem.vmware_admin_clusters_iam_policies
      name: vmware_admin_clusters_iam_policies
      title: Vmware_admin_clusters_iam_policies
      methods:
        projects_locations_vmware_admin_clusters_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters~1{vmwareAdminClustersId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_vmware_admin_clusters_get_iam_policy:
          operation: &ref_35
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters~1{vmwareAdminClustersId}:getIamPolicy/get
          response: &ref_36
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_vmware_admin_clusters_get_iam_policy:
          operation: *ref_35
          response: *ref_36
        projects_locations_vmware_admin_clusters_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareAdminClusters~1{vmwareAdminClustersId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/vmware_admin_clusters_iam_policies/methods/projects_locations_vmware_admin_clusters_get_iam_policy
        insert: []
        update: []
        delete: []
    bare_metal_admin_clusters:
      id: google.gkeonprem.bare_metal_admin_clusters
      name: bare_metal_admin_clusters
      title: Bare_metal_admin_clusters
      methods:
        projects_locations_bare_metal_admin_clusters_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_bare_metal_admin_clusters_list:
          operation: &ref_37
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters/get
          response: &ref_38
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bareMetalAdminClusters
        projects_locations_bare_metal_admin_clusters_list:
          operation: *ref_37
          response: *ref_38
        projects_locations_bare_metal_admin_clusters_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters~1{bareMetalAdminClustersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_admin_clusters_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters~1{bareMetalAdminClustersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_admin_clusters_enroll:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters:enroll/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_admin_clusters_unenroll:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters~1{bareMetalAdminClustersId}:unenroll/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_bare_metal_admin_clusters_query_version_config:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters:queryVersionConfig/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/bare_metal_admin_clusters/methods/projects_locations_bare_metal_admin_clusters_get
          - $ref: >-
              #/components/x-stackQL-resources/bare_metal_admin_clusters/methods/projects_locations_bare_metal_admin_clusters_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/bare_metal_admin_clusters/methods/projects_locations_bare_metal_admin_clusters_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/bare_metal_admin_clusters/methods/projects_locations_bare_metal_admin_clusters_patch
        delete: []
    bare_metal_admin_clusters_iam_policies:
      id: google.gkeonprem.bare_metal_admin_clusters_iam_policies
      name: bare_metal_admin_clusters_iam_policies
      title: Bare_metal_admin_clusters_iam_policies
      methods:
        projects_locations_bare_metal_admin_clusters_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters~1{bareMetalAdminClustersId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_bare_metal_admin_clusters_get_iam_policy:
          operation: &ref_39
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters~1{bareMetalAdminClustersId}:getIamPolicy/get
          response: &ref_40
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_bare_metal_admin_clusters_get_iam_policy:
          operation: *ref_39
          response: *ref_40
        projects_locations_bare_metal_admin_clusters_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1bareMetalAdminClusters~1{bareMetalAdminClustersId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/bare_metal_admin_clusters_iam_policies/methods/projects_locations_bare_metal_admin_clusters_get_iam_policy
        insert: []
        update: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_41
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: gkeonprem.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_41
    get:
      description: Gets information about a location.
      operationId: gkeonprem.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_41
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: gkeonprem.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_41
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: gkeonprem.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: gkeonprem.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_41
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: gkeonprem.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters:
    parameters: *ref_41
    post:
      description: Creates a new bare metal cluster in a given project and location.
      operationId: gkeonprem.projects.locations.bareMetalClusters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalCluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: bareMetalClusterId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists bare metal clusters in a given project and location.
      operationId: gkeonprem.projects.locations.bareMetalClusters.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBareMetalClustersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}:
    parameters: *ref_41
    delete:
      description: Deletes a single bare metal Cluster.
      operationId: gkeonprem.projects.locations.bareMetalClusters.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: ignoreErrors
          schema:
            type: boolean
    get:
      description: Gets details of a single bare metal Cluster.
      operationId: gkeonprem.projects.locations.bareMetalClusters.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BareMetalCluster'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    patch:
      description: Updates the parameters of a single bare metal Cluster.
      operationId: gkeonprem.projects.locations.bareMetalClusters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalCluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters:enroll:
    parameters: *ref_41
    post:
      description: >-
        Enrolls an existing bare metal user cluster and its node pools to the
        Anthos On-Prem API within a given project and location. Through
        enrollment, an existing cluster will become Anthos On-Prem API managed.
        The corresponding GCP resources will be created and all future
        modifications to the cluster and/or its node pools will be expected to
        be performed through the API.
      operationId: gkeonprem.projects.locations.bareMetalClusters.enroll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollBareMetalClusterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}:unenroll:
    parameters: *ref_41
    delete:
      description: >-
        Unenrolls an existing bare metal user cluster and its node pools from
        the Anthos On-Prem API within a given project and location. Unenrollment
        removes the Cloud reference to the cluster without modifying the
        underlying OnPrem Resources. Clusters and node pools will continue to
        run; however, they will no longer be accessible through the Anthos
        On-Prem API or its clients.
      operationId: gkeonprem.projects.locations.bareMetalClusters.unenroll
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters:queryVersionConfig:
    parameters: *ref_41
    post:
      description: Queries the bare metal user cluster version config.
      operationId: gkeonprem.projects.locations.bareMetalClusters.queryVersionConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryBareMetalVersionConfigResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: createConfig.adminClusterMembership
          schema:
            type: string
        - in: query
          name: createConfig.adminClusterName
          schema:
            type: string
        - in: query
          name: upgradeConfig.clusterName
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}:setIamPolicy:
    parameters: *ref_41
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: gkeonprem.projects.locations.bareMetalClusters.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}:getIamPolicy:
    parameters: *ref_41
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: gkeonprem.projects.locations.bareMetalClusters.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}:testIamPermissions:
    parameters: *ref_41
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: gkeonprem.projects.locations.bareMetalClusters.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/operations:
    parameters: *ref_41
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: gkeonprem.projects.locations.bareMetalClusters.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/operations/{operationsId}:
    parameters: *ref_41
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: gkeonprem.projects.locations.bareMetalClusters.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools:
    parameters: *ref_41
    post:
      description: >-
        Creates a new bare metal node pool in a given project, location and Bare
        Metal cluster.
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalNodePool'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: query
          name: bareMetalNodePoolId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: >-
        Lists bare metal node pools in a given project, location and bare metal
        cluster.
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBareMetalNodePoolsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}:
    parameters: *ref_41
    delete:
      description: Deletes a single bare metal node pool.
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: ignoreErrors
          schema:
            type: boolean
    get:
      description: Gets details of a single bare metal node pool.
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BareMetalNodePool'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    patch:
      description: Updates the parameters of a single bare metal node pool.
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalNodePool'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools:enroll:
    parameters: *ref_41
    post:
      description: >-
        Enrolls an existing bare metal node pool to the Anthos On-Prem API
        within a given project and location. Through enrollment, an existing
        node pool will become Anthos On-Prem API managed. The corresponding GCP
        resources will be created.
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.enroll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollBareMetalNodePoolRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}:unenroll:
    parameters: *ref_41
    delete:
      description: Unenrolls a bare metal node pool from Anthos On-Prem API.
      operationId: >-
        gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.unenroll
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}:setIamPolicy:
    parameters: *ref_41
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: >-
        gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalNodePoolsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}:getIamPolicy:
    parameters: *ref_41
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: >-
        gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}:testIamPermissions:
    parameters: *ref_41
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalNodePoolsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}/operations:
    parameters: *ref_41
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: >-
        gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}/operations/{operationsId}:
    parameters: *ref_41
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalClustersId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalNodePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters:enroll:
    parameters: *ref_41
    post:
      description: >-
        Enrolls an existing VMware user cluster and its node pools to the Anthos
        On-Prem API within a given project and location. Through enrollment, an
        existing cluster will become Anthos On-Prem API managed. The
        corresponding GCP resources will be created and all future modifications
        to the cluster and/or its node pools will be expected to be performed
        through the API.
      operationId: gkeonprem.projects.locations.vmwareClusters.enroll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollVmwareClusterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}:unenroll:
    parameters: *ref_41
    delete:
      description: >-
        Unenrolls an existing VMware user cluster and its node pools from the
        Anthos On-Prem API within a given project and location. Unenrollment
        removes the Cloud reference to the cluster without modifying the
        underlying OnPrem Resources. Clusters and node pools will continue to
        run; however, they will no longer be accessible through the Anthos
        On-Prem API or UI.
      operationId: gkeonprem.projects.locations.vmwareClusters.unenroll
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters:
    parameters: *ref_41
    post:
      description: Creates a new VMware user cluster in a given project and location.
      operationId: gkeonprem.projects.locations.vmwareClusters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareCluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: vmwareClusterId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists VMware Clusters in a given project and location.
      operationId: gkeonprem.projects.locations.vmwareClusters.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVmwareClustersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}:
    parameters: *ref_41
    delete:
      description: Deletes a single VMware Cluster.
      operationId: gkeonprem.projects.locations.vmwareClusters.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: ignoreErrors
          schema:
            type: boolean
    get:
      description: Gets details of a single VMware Cluster.
      operationId: gkeonprem.projects.locations.vmwareClusters.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareCluster'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    patch:
      description: Updates the parameters of a single VMware cluster.
      operationId: gkeonprem.projects.locations.vmwareClusters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareCluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters:queryVersionConfig:
    parameters: *ref_41
    post:
      description: Queries the VMware user cluster version config.
      operationId: gkeonprem.projects.locations.vmwareClusters.queryVersionConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryVmwareVersionConfigResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: createConfig.adminClusterMembership
          schema:
            type: string
        - in: query
          name: createConfig.adminClusterName
          schema:
            type: string
        - in: query
          name: upgradeConfig.clusterName
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}:setIamPolicy:
    parameters: *ref_41
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: gkeonprem.projects.locations.vmwareClusters.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}:getIamPolicy:
    parameters: *ref_41
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: gkeonprem.projects.locations.vmwareClusters.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}:testIamPermissions:
    parameters: *ref_41
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: gkeonprem.projects.locations.vmwareClusters.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/operations:
    parameters: *ref_41
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: gkeonprem.projects.locations.vmwareClusters.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/operations/{operationsId}:
    parameters: *ref_41
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: gkeonprem.projects.locations.vmwareClusters.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools:
    parameters: *ref_41
    post:
      description: >-
        Creates a new VMware node pool in a given project, location and VMWare
        cluster.
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareNodePool'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: query
          name: vmwareNodePoolId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists VMware node pools in a given project, location and VMWare cluster.
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVmwareNodePoolsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}:
    parameters: *ref_41
    delete:
      description: Deletes a single VMware node pool.
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: ignoreErrors
          schema:
            type: boolean
    get:
      description: Gets details of a single VMware node pool.
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareNodePool'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    patch:
      description: Updates the parameters of a single VMware node pool.
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareNodePool'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools:enroll:
    parameters: *ref_41
    post:
      description: Enrolls a VMware node pool to Anthos On-Prem API
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.enroll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollVmwareNodePoolRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}:unenroll:
    parameters: *ref_41
    delete:
      description: Unenrolls a VMware node pool to Anthos On-Prem API
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.unenroll
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}:setIamPolicy:
    parameters: *ref_41
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareNodePoolsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}:getIamPolicy:
    parameters: *ref_41
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}:testIamPermissions:
    parameters: *ref_41
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareNodePoolsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}/operations:
    parameters: *ref_41
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: >-
        gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareNodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}/operations/{operationsId}:
    parameters: *ref_41
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareClustersId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareNodePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters:
    parameters: *ref_41
    get:
      description: Lists VMware admin clusters in a given project and location.
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVmwareAdminClustersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}:
    parameters: *ref_41
    get:
      description: Gets details of a single VMware admin cluster.
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareAdminCluster'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    patch:
      description: Updates the parameters of a single VMware admin cluster.
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareAdminCluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters:enroll:
    parameters: *ref_41
    post:
      description: >-
        Enrolls an existing VMware admin cluster to the Anthos On-Prem API
        within a given project and location. Through enrollment, an existing
        admin cluster will become Anthos On-Prem API managed. The corresponding
        GCP resources will be created and all future modifications to the
        cluster will be expected to be performed through the API.
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.enroll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollVmwareAdminClusterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}:unenroll:
    parameters: *ref_41
    delete:
      description: >-
        Unenrolls an existing VMware admin cluster from the Anthos On-Prem API
        within a given project and location. Unenrollment removes the Cloud
        reference to the cluster without modifying the underlying OnPrem
        Resources. Clusters will continue to run; however, they will no longer
        be accessible through the Anthos On-Prem API or its clients.
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.unenroll
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}:setIamPolicy:
    parameters: *ref_41
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareAdminClustersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}:getIamPolicy:
    parameters: *ref_41
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}:testIamPermissions:
    parameters: *ref_41
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareAdminClustersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}/operations:
    parameters: *ref_41
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}/operations/{operationsId}:
    parameters: *ref_41
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareAdminClustersId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters:
    parameters: *ref_41
    post:
      description: >-
        Creates a new bare metal admin cluster in a given project and location.
        The API needs to be combined with creating a bootstrap cluster to work.
        See:
        https://cloud.google.com/anthos/clusters/docs/bare-metal/latest/installing/creating-clusters/create-admin-cluster-api#prepare_bootstrap_environment
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalAdminCluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: bareMetalAdminClusterId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists bare metal admin clusters in a given project and location.
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBareMetalAdminClustersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}:
    parameters: *ref_41
    get:
      description: Gets details of a single bare metal admin cluster.
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BareMetalAdminCluster'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    patch:
      description: Updates the parameters of a single bare metal admin cluster.
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalAdminCluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters:enroll:
    parameters: *ref_41
    post:
      description: >-
        Enrolls an existing bare metal admin cluster to the Anthos On-Prem API
        within a given project and location. Through enrollment, an existing
        admin cluster will become Anthos On-Prem API managed. The corresponding
        GCP resources will be created and all future modifications to the
        cluster will be expected to be performed through the API.
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.enroll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollBareMetalAdminClusterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}:unenroll:
    parameters: *ref_41
    delete:
      description: >-
        Unenrolls an existing bare metal admin cluster from the Anthos On-Prem
        API within a given project and location. Unenrollment removes the Cloud
        reference to the cluster without modifying the underlying OnPrem
        Resources. Clusters will continue to run; however, they will no longer
        be accessible through the Anthos On-Prem API or its clients.
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.unenroll
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: ignoreErrors
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters:queryVersionConfig:
    parameters: *ref_41
    post:
      description: Queries the bare metal admin cluster version config.
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.queryVersionConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryBareMetalAdminVersionConfigResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: upgradeConfig.clusterName
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}:setIamPolicy:
    parameters: *ref_41
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalAdminClustersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}:getIamPolicy:
    parameters: *ref_41
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}:testIamPermissions:
    parameters: *ref_41
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalAdminClustersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}/operations:
    parameters: *ref_41
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalAdminClustersId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}/operations/{operationsId}:
    parameters: *ref_41
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: bareMetalAdminClustersId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
