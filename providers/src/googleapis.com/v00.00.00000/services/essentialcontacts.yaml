openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Essential Contacts API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230824'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/essentialcontacts/docs/'
servers:
  - url: 'https://essentialcontacts.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudEssentialcontactsV1Contact:
      type: object
      description: A contact that will receive notifications from Google Cloud.
      properties:
        notificationCategorySubscriptions:
          type: array
          items:
            type: string
            enum:
              - NOTIFICATION_CATEGORY_UNSPECIFIED
              - ALL
              - SUSPENSION
              - SECURITY
              - TECHNICAL
              - BILLING
              - LEGAL
              - PRODUCT_UPDATES
              - TECHNICAL_INCIDENTS
            enumDescriptions:
              - Notification category is unrecognized or unspecified.
              - 'All notifications related to the resource, including notifications pertaining to categories added in the future.'
              - Notifications related to imminent account suspension.
              - 'Notifications related to security/privacy incidents, notifications, and vulnerabilities.'
              - 'Notifications related to technical events and issues such as outages, errors, or bugs.'
              - 'Notifications related to billing and payments notifications, price updates, errors, or credits.'
              - 'Notifications related to enforcement actions, regulatory compliance, or government notices.'
              - 'Notifications related to new versions, product terms updates, or deprecations.'
              - 'Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL.'
          description: Required. The categories of notifications that the contact will receive communications for.
        name:
          readOnly: true
          type: string
          description: 'Output only. The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}'
        languageTag:
          type: string
          description: 'Required. The preferred language for notifications, as a ISO 639-1 language code. See [Supported languages](https://cloud.google.com/resource-manager/docs/managing-notification-contacts#supported-languages) for a list of supported languages.'
        validateTime:
          format: google-datetime
          description: 'The last time the validation_state was updated, either manually or automatically. A contact is considered stale if its validation state was updated more than 1 year ago.'
          type: string
        email:
          description: Required. The email address to send notifications to. The email address does not need to be a Google Account.
          type: string
        validationState:
          enumDescriptions:
            - The validation state is unknown or unspecified.
            - The contact is marked as valid. This is usually done manually by the contact admin. All new contacts begin in the valid state.
            - The contact is considered invalid. This may become the state if the contact's email is found to be unreachable.
          enum:
            - VALIDATION_STATE_UNSPECIFIED
            - VALID
            - INVALID
          description: The validity of the contact. A contact is considered valid if it is the correct recipient for notifications for a particular resource.
          type: string
      id: GoogleCloudEssentialcontactsV1Contact
    GoogleProtobufEmpty:
      id: GoogleProtobufEmpty
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
    GoogleCloudEssentialcontactsV1SendTestMessageRequest:
      type: object
      properties:
        contacts:
          description: 'Required. The list of names of the contacts to send a test message to. Format: organizations/{organization_id}/contacts/{contact_id}, folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}'
          items:
            type: string
          type: array
        notificationCategory:
          description: Required. The notification category to send the test message for. All contacts must be subscribed to this category.
          enumDescriptions:
            - Notification category is unrecognized or unspecified.
            - 'All notifications related to the resource, including notifications pertaining to categories added in the future.'
            - Notifications related to imminent account suspension.
            - 'Notifications related to security/privacy incidents, notifications, and vulnerabilities.'
            - 'Notifications related to technical events and issues such as outages, errors, or bugs.'
            - 'Notifications related to billing and payments notifications, price updates, errors, or credits.'
            - 'Notifications related to enforcement actions, regulatory compliance, or government notices.'
            - 'Notifications related to new versions, product terms updates, or deprecations.'
            - 'Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL.'
          enum:
            - NOTIFICATION_CATEGORY_UNSPECIFIED
            - ALL
            - SUSPENSION
            - SECURITY
            - TECHNICAL
            - BILLING
            - LEGAL
            - PRODUCT_UPDATES
            - TECHNICAL_INCIDENTS
          type: string
      description: Request message for the SendTestMessage method.
      id: GoogleCloudEssentialcontactsV1SendTestMessageRequest
    GoogleCloudEssentialcontactsV1ComputeContactsResponse:
      description: Response message for the ComputeContacts method.
      id: GoogleCloudEssentialcontactsV1ComputeContactsResponse
      properties:
        nextPageToken:
          description: 'If there are more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token` and the rest of the parameters the same as the original request.'
          type: string
        contacts:
          type: array
          description: 'All contacts for the resource that are subscribed to the specified notification categories, including contacts inherited from any parent resources.'
          items:
            $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1Contact'
      type: object
    GoogleCloudEssentialcontactsV1ListContactsResponse:
      id: GoogleCloudEssentialcontactsV1ListContactsResponse
      type: object
      properties:
        nextPageToken:
          description: 'If there are more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token` and the rest of the parameters the same as the original request.'
          type: string
        contacts:
          description: The contacts for the specified resource.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1Contact'
      description: Response message for the ListContacts method.
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
  x-stackQL-resources:
    contacts:
      id: google.essentialcontacts.contacts
      name: contacts
      title: Contacts
      methods:
        folders_contacts_patch:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1contacts~1{contactsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_contacts_get:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1contacts~1{contactsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_contacts_delete:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1contacts~1{contactsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_contacts_create:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1contacts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_contacts_list:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1contacts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.contacts
        _folders_contacts_list:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1contacts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_contacts_compute:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1contacts:compute/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_contacts_send_test_message:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1contacts:sendTestMessage/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_contacts_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1contacts~1{contactsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_contacts_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1contacts~1{contactsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_contacts_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1contacts~1{contactsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_contacts_send_test_message:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1contacts:sendTestMessage/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_contacts_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1contacts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_contacts_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1contacts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.contacts
        _projects_contacts_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1contacts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_contacts_compute:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1contacts:compute/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_contacts_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1contacts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.contacts
        _organizations_contacts_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1contacts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_contacts_create:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1contacts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_contacts_patch:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1contacts~1{contactsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_contacts_get:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1contacts~1{contactsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_contacts_delete:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1contacts~1{contactsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_contacts_send_test_message:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1contacts:sendTestMessage/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_contacts_compute:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1contacts:compute/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/contacts/methods/folders_contacts_get'
          - $ref: '#/components/x-stackQL-resources/contacts/methods/projects_contacts_get'
          - $ref: '#/components/x-stackQL-resources/contacts/methods/organizations_contacts_get'
          - $ref: '#/components/x-stackQL-resources/contacts/methods/folders_contacts_list'
          - $ref: '#/components/x-stackQL-resources/contacts/methods/projects_contacts_list'
          - $ref: '#/components/x-stackQL-resources/contacts/methods/organizations_contacts_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/contacts/methods/folders_contacts_create'
          - $ref: '#/components/x-stackQL-resources/contacts/methods/projects_contacts_create'
          - $ref: '#/components/x-stackQL-resources/contacts/methods/organizations_contacts_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/contacts/methods/folders_contacts_delete'
          - $ref: '#/components/x-stackQL-resources/contacts/methods/projects_contacts_delete'
          - $ref: '#/components/x-stackQL-resources/contacts/methods/organizations_contacts_delete'
paths:
  '/v1/folders/{foldersId}/contacts/{contactsId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/callback'
    patch:
      description: 'Updates a contact. Note: A contact''s email address cannot be changed.'
      operationId: essentialcontacts.folders.contacts.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1Contact'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1Contact'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: contactsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: contacts
      x-stackQL-method: folders_contacts_patch
      x-stackQL-verb: exec
    get:
      description: Gets a single contact.
      operationId: essentialcontacts.folders.contacts.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1Contact'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: contactsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contacts
      x-stackQL-method: folders_contacts_get
      x-stackQL-verb: select
    delete:
      description: Deletes a contact.
      operationId: essentialcontacts.folders.contacts.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: contactsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contacts
      x-stackQL-method: folders_contacts_delete
      x-stackQL-verb: delete
  '/v1/folders/{foldersId}/contacts':
    parameters: *ref_1
    post:
      description: Adds a new contact for a resource.
      operationId: essentialcontacts.folders.contacts.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1Contact'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1Contact'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
      x-stackQL-resource: contacts
      x-stackQL-method: folders_contacts_create
      x-stackQL-verb: insert
    get:
      description: Lists the contacts that have been set on a resource.
      operationId: essentialcontacts.folders.contacts.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1ListContactsResponse'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: contacts
      x-stackQL-method: folders_contacts_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.contacts
  '/v1/folders/{foldersId}/contacts:compute':
    parameters: *ref_1
    get:
      description: 'Lists all contacts for the resource that are subscribed to the specified notification categories, including contacts inherited from any parent resources.'
      operationId: essentialcontacts.folders.contacts.compute
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1ComputeContactsResponse'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: notificationCategories
          schema:
            type: string
      x-stackQL-resource: contacts
      x-stackQL-method: folders_contacts_compute
      x-stackQL-verb: exec
  '/v1/folders/{foldersId}/contacts:sendTestMessage':
    parameters: *ref_1
    post:
      description: Allows a contact admin to send a test message to contact to verify that it has been configured correctly.
      operationId: essentialcontacts.folders.contacts.sendTestMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1SendTestMessageRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
      x-stackQL-resource: contacts
      x-stackQL-method: folders_contacts_send_test_message
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/contacts/{contactsId}':
    parameters: *ref_1
    delete:
      description: Deletes a contact.
      operationId: essentialcontacts.projects.contacts.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: contactsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contacts
      x-stackQL-method: projects_contacts_delete
      x-stackQL-verb: delete
    get:
      description: Gets a single contact.
      operationId: essentialcontacts.projects.contacts.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1Contact'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: contactsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contacts
      x-stackQL-method: projects_contacts_get
      x-stackQL-verb: select
    patch:
      description: 'Updates a contact. Note: A contact''s email address cannot be changed.'
      operationId: essentialcontacts.projects.contacts.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1Contact'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1Contact'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: contactsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: contacts
      x-stackQL-method: projects_contacts_patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/contacts:sendTestMessage':
    parameters: *ref_1
    post:
      description: Allows a contact admin to send a test message to contact to verify that it has been configured correctly.
      operationId: essentialcontacts.projects.contacts.sendTestMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1SendTestMessageRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contacts
      x-stackQL-method: projects_contacts_send_test_message
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/contacts':
    parameters: *ref_1
    post:
      description: Adds a new contact for a resource.
      operationId: essentialcontacts.projects.contacts.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1Contact'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1Contact'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contacts
      x-stackQL-method: projects_contacts_create
      x-stackQL-verb: insert
    get:
      description: Lists the contacts that have been set on a resource.
      operationId: essentialcontacts.projects.contacts.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1ListContactsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: contacts
      x-stackQL-method: projects_contacts_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.contacts
  '/v1/projects/{projectsId}/contacts:compute':
    parameters: *ref_1
    get:
      description: 'Lists all contacts for the resource that are subscribed to the specified notification categories, including contacts inherited from any parent resources.'
      operationId: essentialcontacts.projects.contacts.compute
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1ComputeContactsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: notificationCategories
          schema:
            type: string
      x-stackQL-resource: contacts
      x-stackQL-method: projects_contacts_compute
      x-stackQL-verb: exec
  '/v1/organizations/{organizationsId}/contacts':
    parameters: *ref_1
    get:
      description: Lists the contacts that have been set on a resource.
      operationId: essentialcontacts.organizations.contacts.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1ListContactsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: contacts
      x-stackQL-method: organizations_contacts_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.contacts
    post:
      description: Adds a new contact for a resource.
      operationId: essentialcontacts.organizations.contacts.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1Contact'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1Contact'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contacts
      x-stackQL-method: organizations_contacts_create
      x-stackQL-verb: insert
  '/v1/organizations/{organizationsId}/contacts/{contactsId}':
    parameters: *ref_1
    patch:
      description: 'Updates a contact. Note: A contact''s email address cannot be changed.'
      operationId: essentialcontacts.organizations.contacts.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1Contact'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1Contact'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: contactsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: contacts
      x-stackQL-method: organizations_contacts_patch
      x-stackQL-verb: exec
    get:
      description: Gets a single contact.
      operationId: essentialcontacts.organizations.contacts.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1Contact'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: contactsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contacts
      x-stackQL-method: organizations_contacts_get
      x-stackQL-verb: select
    delete:
      description: Deletes a contact.
      operationId: essentialcontacts.organizations.contacts.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: contactsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contacts
      x-stackQL-method: organizations_contacts_delete
      x-stackQL-verb: delete
  '/v1/organizations/{organizationsId}/contacts:sendTestMessage':
    parameters: *ref_1
    post:
      description: Allows a contact admin to send a test message to contact to verify that it has been configured correctly.
      operationId: essentialcontacts.organizations.contacts.sendTestMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1SendTestMessageRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contacts
      x-stackQL-method: organizations_contacts_send_test_message
      x-stackQL-verb: exec
  '/v1/organizations/{organizationsId}/contacts:compute':
    parameters: *ref_1
    get:
      description: 'Lists all contacts for the resource that are subscribed to the specified notification categories, including contacts inherited from any parent resources.'
      operationId: essentialcontacts.organizations.contacts.compute
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudEssentialcontactsV1ComputeContactsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: notificationCategories
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: contacts
      x-stackQL-method: organizations_contacts_compute
      x-stackQL-verb: exec
