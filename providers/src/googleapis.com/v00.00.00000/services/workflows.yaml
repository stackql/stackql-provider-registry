openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Workflows API
  description: >-
    Manage workflow definitions. To execute workflows and manage executions, see
    the Workflows Executions API.
  version: v1
  x-discovery-doc-revision: '20240522'
  x-generated-date: '2024-06-02'
externalDocs:
  url: https://cloud.google.com/workflows
servers:
  - url: https://workflows.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    ListWorkflowsResponse:
      id: ListWorkflowsResponse
      description: Response for the ListWorkflows method.
      type: object
      properties:
        workflows:
          description: The workflows that match the request.
          type: array
          items:
            $ref: '#/components/schemas/Workflow'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Unreachable resources.
          type: array
          items:
            type: string
    Workflow:
      id: Workflow
      description: Workflow program to be executed by Workflows.
      type: object
      properties:
        name:
          description: >-
            The resource name of the workflow. Format:
            projects/{project}/locations/{location}/workflows/{workflow}. This
            is a workflow-wide field and is not tied to a specific revision.
          type: string
        description:
          description: >-
            Description of the workflow provided by the user. Must be at most
            1000 Unicode characters long. This is a workflow-wide field and is
            not tied to a specific revision.
          type: string
        state:
          description: Output only. State of the workflow deployment.
          readOnly: true
          type: string
          enumDescriptions:
            - Invalid state.
            - The workflow has been deployed successfully and is serving.
            - Workflow data is unavailable. See the `state_error` field.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - UNAVAILABLE
        revisionId:
          description: >-
            Output only. The revision of the workflow. A new revision of a
            workflow is created as a result of updating the following properties
            of a workflow: - Service account - Workflow code to be executed The
            format is "000001-a4d", where the first six characters define the
            zero-padded revision ordinal number. They are followed by a hyphen
            and three hexadecimal random characters.
          readOnly: true
          type: string
        createTime:
          description: >-
            Output only. The timestamp for when the workflow was created. This
            is a workflow-wide field and is not tied to a specific revision.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The timestamp for when the workflow was last updated.
            This is a workflow-wide field and is not tied to a specific
            revision.
          readOnly: true
          type: string
          format: google-datetime
        revisionCreateTime:
          description: >-
            Output only. The timestamp for the latest revision of the workflow's
            creation.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: >-
            Labels associated with this workflow. Labels can contain at most 64
            entries. Keys and values can be no longer than 63 characters and can
            only contain lowercase letters, numeric characters, underscores, and
            dashes. Label keys must start with a letter. International
            characters are allowed. This is a workflow-wide field and is not
            tied to a specific revision.
          type: object
          additionalProperties:
            type: string
        serviceAccount:
          description: >-
            The service account associated with the latest workflow version.
            This service account represents the identity of the workflow and
            determines what permissions the workflow has. Format:
            projects/{project}/serviceAccounts/{account} or {account} Using `-`
            as a wildcard for the `{project}` or not providing one at all will
            infer the project from the account. The `{account}` value can be the
            `email` address or the `unique_id` of the service account. If not
            provided, workflow will use the project's default service account.
            Modifying this field for an existing workflow results in a new
            workflow revision.
          type: string
        sourceContents:
          description: Workflow code to be executed. The size limit is 128KB.
          type: string
        cryptoKeyName:
          description: >-
            Optional. The resource name of a KMS crypto key used to encrypt or
            decrypt the data associated with the workflow. Format:
            projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
            Using `-` as a wildcard for the `{project}` or not providing one at
            all will infer the project from the account. If not provided, data
            associated with the workflow will not be CMEK-encrypted.
          type: string
        stateError:
          description: >-
            Output only. Error regarding the state of the workflow. For example,
            this field will have error details if the execution data is
            unavailable due to revoked KMS key permissions.
          readOnly: true
          $ref: '#/components/schemas/StateError'
        callLogLevel:
          description: >-
            Optional. Describes the level of platform logging to apply to calls
            and call responses during executions of this workflow. If both the
            workflow and the execution specify a logging level, the execution
            level takes precedence.
          type: string
          enumDescriptions:
            - No call logging level specified.
            - >-
              Log all call steps within workflows, all call returns, and all
              exceptions raised.
            - >-
              Log only exceptions that are raised from call steps within
              workflows.
            - Explicitly log nothing.
          enum:
            - CALL_LOG_LEVEL_UNSPECIFIED
            - LOG_ALL_CALLS
            - LOG_ERRORS_ONLY
            - LOG_NONE
        userEnvVars:
          description: >-
            Optional. User-defined environment variables associated with this
            workflow revision. This map has a maximum length of 20. Each string
            can take up to 4KiB. Keys cannot be empty strings and cannot start
            with "GOOGLE" or "WORKFLOWS".
          type: object
          additionalProperties:
            type: string
        allKmsKeys:
          description: >-
            Output only. A list of all KMS crypto keys used to encrypt or decrpt
            the data associated with the workflow.
          readOnly: true
          type: array
          items:
            type: string
        allKmsKeysVersions:
          description: >-
            Output only. A list of all KMS crypto keys versions used to encrypt
            or decrpt the data associated with the workflow.
          readOnly: true
          type: array
          items:
            type: string
        cryptoKeyVersion:
          description: >-
            Output only. The resource name of a KMS crypto key version used to
            encrypt or decrypt the data associated with the workflow. Format:
            projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}/cryptoKeyVersions/{cryptoKeyVersion}
          readOnly: true
          type: string
    StateError:
      id: StateError
      description: Describes an error related to the current state of the workflow.
      type: object
      properties:
        details:
          description: Provides specifics about the error.
          type: string
        type:
          description: The type of this state error.
          type: string
          enumDescriptions:
            - No type specified.
            - Caused by an issue with KMS.
          enum:
            - TYPE_UNSPECIFIED
            - KMS_ERROR
    ListWorkflowRevisionsResponse:
      id: ListWorkflowRevisionsResponse
      description: Response for the ListWorkflowRevisions method.
      type: object
      properties:
        workflows:
          description: >-
            The revisions of the workflow, ordered in reverse chronological
            order.
          type: array
          items:
            $ref: '#/components/schemas/Workflow'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          description: The time the operation finished running.
          type: string
          format: google-datetime
        target:
          description: Server-defined resource path for the target of the operation.
          type: string
        verb:
          description: Name of the verb executed by the operation.
          type: string
        apiVersion:
          description: API version used to start the operation.
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: workflows.locations
      name: locations
      title: Locations
      methods:
        _list:
          operation: &ref_1
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response: &ref_2
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        list:
          operation: *ref_1
          response: *ref_2
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
        insert: []
        update: []
        delete: []
    operations:
      id: workflows.operations
      name: operations
      title: Operations
      methods:
        _list:
          operation: &ref_3
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response: &ref_4
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        list:
          operation: *ref_3
          response: *ref_4
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    workflows:
      id: workflows.workflows
      name: workflows
      title: Workflows
      methods:
        _list:
          operation: &ref_5
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows/get
          response: &ref_6
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.workflows
        list:
          operation: *ref_5
          response: *ref_6
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflows/methods/list'
          - $ref: '#/components/x-stackQL-resources/workflows/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/workflows/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workflows/methods/delete'
    workflows_revisions:
      id: workflows.workflows_revisions
      name: workflows_revisions
      title: Workflows_revisions
      methods:
        _list_revisions:
          operation: &ref_7
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}:listRevisions/get
          response: &ref_8
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.workflows
        list_revisions:
          operation: *ref_7
          response: *ref_8
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/workflows_revisions/methods/list_revisions
        insert: []
        update: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_9
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: workflows.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_9
    get:
      description: Gets information about a location.
      operationId: workflows.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_9
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: workflows.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_9
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: workflows.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: workflows.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workflows:
    parameters: *ref_9
    get:
      description: >-
        Lists workflows in a given project and location. The default order is
        not specified.
      operationId: workflows.projects.locations.workflows.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkflowsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: >-
        Creates a new workflow. If a workflow with the specified name already
        exists in the specified project and location, the long running operation
        returns a ALREADY_EXISTS error.
      operationId: workflows.projects.locations.workflows.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workflow'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: workflowId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}:
    parameters: *ref_9
    get:
      description: Gets details of a single workflow.
      operationId: workflows.projects.locations.workflows.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
        - in: query
          name: revisionId
          schema:
            type: string
    delete:
      description: >-
        Deletes a workflow with the specified name. This method also cancels and
        deletes all running executions of the workflow.
      operationId: workflows.projects.locations.workflows.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates an existing workflow. Running this method has no impact on
        already running executions of the workflow. A new revision of the
        workflow might be created as a result of a successful update operation.
        In that case, the new revision is used in new workflow executions.
      operationId: workflows.projects.locations.workflows.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workflow'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}:listRevisions:
    parameters: *ref_9
    get:
      description: Lists revisions for a given workflow.
      operationId: workflows.projects.locations.workflows.listRevisions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkflowRevisionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
