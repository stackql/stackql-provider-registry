openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Filestore API
  description: The Cloud Filestore API is used for creating and managing cloud file servers.
  version: v1
  x-discovery-doc-revision: '20230720'
  x-generated-date: '2023-08-01'
externalDocs:
  url: 'https://cloud.google.com/filestore/'
servers:
  - url: 'https://file.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    MaintenanceWindow:
      type: object
      id: MaintenanceWindow
      description: MaintenanceWindow definition.
      properties:
        dailyCycle:
          description: Daily cycle.
          $ref: '#/components/schemas/DailyCycle'
        weeklyCycle:
          $ref: '#/components/schemas/WeeklyCycle'
          description: Weekly cycle.
    GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata:
      id: GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata
      description: SloMetadata contains resources required for proper SLO classification of the instance.
      properties:
        nodes:
          description: 'Optional. List of nodes. Some producers need to use per-node metadata to calculate SLO. This field allows such producers to publish per-node SLO meta data, which will be consumed by SSA Eligibility Exporter and published in the form of per node metric to Monarch.'
          items:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata'
          type: array
        perSliEligibility:
          $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility'
          description: Optional. Multiple per-instance SLI eligibilities which apply for individual SLIs.
        tier:
          description: Name of the SLO tier the Instance belongs to. This name will be expected to match the tiers specified in the service SLO configuration. Field is mandatory and must not be empty.
          type: string
      type: object
    OperationMetadata:
      id: OperationMetadata
      properties:
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
        verb:
          description: Output only. Name of the verb executed by the operation.
          type: string
          readOnly: true
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        statusDetail:
          description: 'Output only. Human-readable status of the operation, if any.'
          type: string
          readOnly: true
        cancelRequested:
          type: boolean
          readOnly: true
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
        endTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
          readOnly: true
      description: Represents the metadata of the long-running operation.
      type: object
    Status:
      properties:
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        details:
          type: array
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
        code:
          type: integer
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
      type: object
      id: Status
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility:
      type: object
      id: GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility
      properties:
        eligibilities:
          description: 'An entry in the eligibilities map specifies an eligibility for a particular SLI for the given instance. The SLI key in the name must be a valid SLI name specified in the Eligibility Exporter binary flags otherwise an error will be emitted by Eligibility Exporter and the oncaller will be alerted. If an SLI has been defined in the binary flags but the eligibilities map does not contain it, the corresponding SLI time series will not be emitted by the Eligibility Exporter. This ensures a smooth rollout and compatibility between the data produced by different versions of the Eligibility Exporters. If eligibilities map contains a key for an SLI which has not been declared in the binary flags, there will be an error message emitted in the Eligibility Exporter log and the metric for the SLI in question will not be emitted.'
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility'
          type: object
      description: PerSliSloEligibility is a mapping from an SLI name to eligibility.
    GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata:
      id: GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata
      description: 'Node information for custom per-node SLO implementations. SSA does not support per-node SLO, but producers can populate per-node information in SloMetadata for custom precomputations. SSA Eligibility Exporter will emit per-node metric based on this information.'
      properties:
        perSliEligibility:
          description: 'If present, this will override eligibility for the node coming from instance or exclusions for specified SLIs.'
          $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility'
        location:
          description: 'The location of the node, if different from instance location.'
          type: string
        nodeId:
          type: string
          description: The id of the node. This should be equal to SaasInstanceNode.node_id.
      type: object
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      type: object
      properties: {}
    ListInstancesResponse:
      id: ListInstancesResponse
      type: object
      description: ListInstancesResponse is the result of ListInstancesRequest.
      properties:
        nextPageToken:
          description: The token you can use to retrieve the next page of results. Not returned if there are no more results in the list.
          type: string
        instances:
          items:
            $ref: '#/components/schemas/Instance'
          type: array
          description: 'A list of instances in the project for the specified location. If the `{location}` value in the request is "-", the response contains a list of instances from all locations. If any location is unreachable, the response will only return instances in reachable locations and the "unreachable" field will be populated with a list of unreachable locations.'
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
    MaintenancePolicy:
      description: LINT.IfChange Defines policies to service maintenance events.
      properties:
        name:
          description: 'Required. MaintenancePolicy name using the form: `projects/{project_id}/locations/{location_id}/maintenancePolicies/{maintenance_policy_id}` where {project_id} refers to a GCP consumer project ID, {location_id} refers to a GCP region/zone, {maintenance_policy_id} must be 1-63 characters long and match the regular expression `[a-z0-9]([-a-z0-9]*[a-z0-9])?`.'
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'Optional. Resource labels to represent user provided metadata. Each label is a key-value pair, where both the key and the value are arbitrary strings provided by the user.'
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The time when the resource was updated.
        description:
          description: Optional. Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512.
          type: string
        createTime:
          format: google-datetime
          description: Output only. The time when the resource was created.
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - READY
            - DELETING
          description: Optional. The state of the policy.
          enumDescriptions:
            - Unspecified state.
            - Resource is ready to be used.
            - Resource is being deleted. It can no longer be attached to instances.
          type: string
        updatePolicy:
          description: Maintenance policy applicable to instance update.
          $ref: '#/components/schemas/UpdatePolicy'
      id: MaintenancePolicy
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility:
      description: 'SloEligibility is a tuple containing eligibility value: true if an instance is eligible for SLO calculation or false if it should be excluded from all SLO-related calculations along with a user-defined reason.'
      type: object
      properties:
        eligible:
          type: boolean
          description: Whether an instance is eligible or ineligible.
        reason:
          description: 'User-defined reason for the current value of instance eligibility. Usually, this can be directly mapped to the internal state. An empty reason is allowed.'
          type: string
      id: GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility
    ListSnapshotsResponse:
      id: ListSnapshotsResponse
      description: ListSnapshotsResponse is the result of ListSnapshotsRequest.
      type: object
      properties:
        snapshots:
          type: array
          description: A list of snapshots in the project for the specified instance.
          items:
            $ref: '#/components/schemas/Snapshot'
        nextPageToken:
          type: string
          description: The token you can use to retrieve the next page of results. Not returned if there are no more results in the list.
    Snapshot:
      type: object
      id: Snapshot
      properties:
        filesystemUsedBytes:
          type: string
          description: Output only. The amount of bytes needed to allocate a full copy of the snapshot content
          readOnly: true
          format: int64
        labels:
          additionalProperties:
            type: string
          type: object
          description: Resource labels to represent user provided metadata.
        createTime:
          format: google-datetime
          description: Output only. The time when the snapshot was created.
          readOnly: true
          type: string
        state:
          description: Output only. The snapshot state.
          enumDescriptions:
            - State not set.
            - Snapshot is being created.
            - Snapshot is available for use.
            - Snapshot is being deleted.
          readOnly: true
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
        description:
          description: A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
          type: string
        name:
          type: string
          description: 'Output only. The resource name of the snapshot, in the format `projects/{project_id}/locations/{location_id}/instances/{instance_id}/snapshots/{snapshot_id}`.'
          readOnly: true
      description: A Filestore snapshot.
    RevertInstanceRequest:
      description: RevertInstanceRequest reverts the given instance's file share to the specified snapshot.
      type: object
      id: RevertInstanceRequest
      properties:
        targetSnapshotId:
          type: string
          description: 'Required. The snapshot resource ID, in the format ''my-snapshot'', where the specified ID is the {snapshot_id} of the fully qualified name like projects/{project_id}/locations/{location_id}/instances/{instance_id}/snapshots/{snapshot_id}'
    Backup:
      type: object
      id: Backup
      properties:
        storageBytes:
          format: int64
          description: 'Output only. The size of the storage used by the backup. As backups share storage, this number is expected to change with backup creation/deletion.'
          type: string
          readOnly: true
        sourceInstanceTier:
          readOnly: true
          description: Output only. The service tier of the source Filestore instance that this backup is created from.
          enum:
            - TIER_UNSPECIFIED
            - STANDARD
            - PREMIUM
            - BASIC_HDD
            - BASIC_SSD
            - HIGH_SCALE_SSD
            - ENTERPRISE
            - ZONAL
          type: string
          enumDescriptions:
            - Not set.
            - STANDARD tier. BASIC_HDD is the preferred term for this tier.
            - PREMIUM tier. BASIC_SSD is the preferred term for this tier.
            - 'BASIC instances offer a maximum capacity of 63.9 TB. BASIC_HDD is an alias for STANDARD Tier, offering economical performance backed by HDD.'
            - 'BASIC instances offer a maximum capacity of 63.9 TB. BASIC_SSD is an alias for PREMIUM Tier, and offers improved performance backed by SSD.'
            - HIGH_SCALE instances offer expanded capacity and performance scaling capabilities.
            - ENTERPRISE instances offer the features and availability needed for mission-critical workloads.
            - ZONAL instances offer expanded capacity and performance scaling capabilities.
        kmsKey:
          description: Immutable. KMS key name used for data encryption.
          type: string
        sourceFileShare:
          description: Name of the file share in the source Filestore instance that the backup is created from.
          type: string
        labels:
          description: Resource labels to represent user provided metadata.
          type: object
          additionalProperties:
            type: string
        capacityGb:
          description: Output only. Capacity of the source file share when the backup was created.
          type: string
          format: int64
          readOnly: true
        sourceInstance:
          description: 'The resource name of the source Filestore instance, in the format `projects/{project_number}/locations/{location_id}/instances/{instance_id}`, used to create this backup.'
          type: string
        name:
          type: string
          readOnly: true
          description: 'Output only. The resource name of the backup, in the format `projects/{project_number}/locations/{location_id}/backups/{backup_id}`.'
        description:
          description: A description of the backup with 2048 characters or less. Requests with longer descriptions will be rejected.
          type: string
        satisfiesPzs:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        downloadBytes:
          readOnly: true
          description: 'Output only. Amount of bytes that will be downloaded if the backup is restored. This may be different than storage bytes, since sequential backups of the same disk will share storage.'
          format: int64
          type: string
        state:
          type: string
          description: Output only. The backup state.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - FINALIZING
            - READY
            - DELETING
            - INVALID
          enumDescriptions:
            - State not set.
            - Backup is being created.
            - 'Backup has been taken and the operation is being finalized. At this point, changes to the file share will not be reflected in the backup.'
            - Backup is available for use.
            - Backup is being deleted.
            - Backup is not valid and cannot be used for creating new instances or restoring existing instances.
          readOnly: true
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time when the backup was created.
      description: A Filestore backup.
    GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter:
      description: Contains notification related data.
      type: object
      properties:
        values:
          description: Optional. Array of string values. e.g. instance's replica information.
          items:
            type: string
          type: array
      id: GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter
    WeeklyCycle:
      description: Time window specified for weekly operations.
      id: WeeklyCycle
      properties:
        schedule:
          description: User can specify multiple windows in a week. Minimum of 1 window.
          type: array
          items:
            $ref: '#/components/schemas/Schedule'
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      id: Location
      type: object
      properties:
        displayName:
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
          type: string
        labels:
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          additionalProperties:
            type: string
          type: object
        metadata:
          description: Service-specific metadata. For example the available capacity at the given location.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
    DenyMaintenancePeriod:
      id: DenyMaintenancePeriod
      type: object
      properties:
        endDate:
          $ref: '#/components/schemas/Date'
          description: 'Deny period end date. This can be: * A full date, with non-zero year, month and day values. * A month and day value, with a zero year. Allows recurring deny periods each year. Date matching this period will have to be before the end.'
        startDate:
          description: 'Deny period start date. This can be: * A full date, with non-zero year, month and day values. * A month and day value, with a zero year. Allows recurring deny periods each year. Date matching this period will have to be the same or after the start.'
          $ref: '#/components/schemas/Date'
        time:
          $ref: '#/components/schemas/TimeOfDay'
          description: 'Time in UTC when the Blackout period starts on start_date and ends on end_date. This can be: * Full time. * All zeros for 00:00:00 UTC'
      description: DenyMaintenancePeriod definition. Maintenance is forbidden within the deny period. The start_date must be less than the end_date.
    Date:
      properties:
        day:
          description: 'Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn''t significant.'
          type: integer
          format: int32
        month:
          description: 'Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.'
          format: int32
          type: integer
        year:
          type: integer
          format: int32
          description: 'Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.'
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      type: object
      id: Date
    UpdatePolicy:
      type: object
      id: UpdatePolicy
      description: Maintenance policy applicable to instance updates.
      properties:
        denyMaintenancePeriods:
          items:
            $ref: '#/components/schemas/DenyMaintenancePeriod'
          description: Deny Maintenance Period that is applied to resource to indicate when maintenance is forbidden. User can specify zero or more non-overlapping deny periods. Maximum number of deny_maintenance_periods expected is one.
          type: array
        window:
          description: Optional. Maintenance window that is applied to resources covered by this policy.
          $ref: '#/components/schemas/MaintenanceWindow'
        channel:
          description: Optional. Relative scheduling channel applied to resource.
          type: string
          enum:
            - UPDATE_CHANNEL_UNSPECIFIED
            - EARLIER
            - LATER
            - WEEK1
            - WEEK2
            - WEEK5
          enumDescriptions:
            - Unspecified channel.
            - Early channel within a customer project.
            - Later channel within a customer project.
            - '! ! The follow channels can ONLY be used if you adopt the new MW system! ! ! NOTE: all WEEK channels are assumed to be under a weekly window. ! There is currently no dedicated channel definitions for Daily windows. ! If you use Daily window, the system will assume a 1d (24Hours) advanced ! notification period b/w EARLY and LATER. ! We may consider support more flexible daily channel specifications in ! the future. WEEK1 == EARLIER with minimum 7d advanced notification. {7d, 14d} The system will treat them equally and will use WEEK1 whenever it can. New customers are encouraged to use this channel annotation.'
            - 'WEEK2 == LATER with minimum 14d advanced notification {14d, 21d}.'
            - 'WEEK5 == 40d support. minimum 35d advanced notification {35d, 42d}.'
    RestoreInstanceRequest:
      id: RestoreInstanceRequest
      description: RestoreInstanceRequest restores an existing instance's file share from a backup.
      type: object
      properties:
        sourceBackup:
          description: 'The resource name of the backup, in the format `projects/{project_number}/locations/{location_id}/backups/{backup_id}`.'
          type: string
        fileShare:
          type: string
          description: Required. Name of the file share in the Filestore instance that the backup is being restored to.
    GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings:
      properties:
        isRollback:
          description: 'Optional. If the update call is triggered from rollback, set the value as true.'
          type: boolean
        maintenancePolicies:
          additionalProperties:
            $ref: '#/components/schemas/MaintenancePolicy'
          type: object
          description: 'Optional. The MaintenancePolicies that have been attached to the instance. The key must be of the type name of the oneof policy name defined in MaintenancePolicy, and the embedded policy must define the same policy type. For details, please refer to go/cloud-saas-mw-ug. Should not be set if maintenance_policy_names is set. If only the name is needed, then only populate MaintenancePolicy.name.'
        exclude:
          description: 'Optional. Exclude instance from maintenance. When true, rollout service will not attempt maintenance on the instance. Rollout service will include the instance in reported rollout progress as not attempted.'
          type: boolean
      id: GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings
      description: Maintenance settings associated with instance. Allows service producers and end users to assign settings that controls maintenance on this instance.
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource:
      properties:
        resourceType:
          type: string
          description: 'Type of the resource. This can be either a GCP resource or a custom one (e.g. another cloud provider''s VM). For GCP compute resources use singular form of the names listed in GCP compute API documentation (https://cloud.google.com/compute/docs/reference/rest/v1/), prefixed with ''compute-'', for example: ''compute-instance'', ''compute-disk'', ''compute-autoscaler''.'
        resourceUrl:
          description: 'URL identifying the resource, e.g. "https://www.googleapis.com/compute/v1/projects/...)".'
          type: string
      description: Describes provisioned dataplane resources.
      type: object
      id: GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource
    Schedule:
      properties:
        startTime:
          description: Time within the window to start the operations.
          $ref: '#/components/schemas/TimeOfDay'
        day:
          description: Allows to define schedule that runs specified day of the week.
          type: string
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        duration:
          format: google-duration
          type: string
          description: 'Output only. Duration of the time window, set by service producer.'
      description: Configure the schedule.
      type: object
      id: Schedule
    Operation:
      id: Operation
      properties:
        metadata:
          type: object
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        response:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: 'The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
    DailyCycle:
      description: Time window specified for daily operations.
      type: object
      id: DailyCycle
      properties:
        duration:
          type: string
          format: google-duration
          description: 'Output only. Duration of the time window, set by service producer.'
        startTime:
          $ref: '#/components/schemas/TimeOfDay'
          description: Time within the day to start the operations.
    NfsExportOptions:
      properties:
        squashMode:
          enum:
            - SQUASH_MODE_UNSPECIFIED
            - NO_ROOT_SQUASH
            - ROOT_SQUASH
          description: 'Either NO_ROOT_SQUASH, for allowing root access on the exported directory, or ROOT_SQUASH, for not allowing root access. The default is NO_ROOT_SQUASH.'
          type: string
          enumDescriptions:
            - SquashMode not set.
            - The Root user has root access to the file share (default).
            - The Root user has squashed access to the anonymous uid/gid.
        ipRanges:
          description: 'List of either an IPv4 addresses in the format `{octet1}.{octet2}.{octet3}.{octet4}` or CIDR ranges in the format `{octet1}.{octet2}.{octet3}.{octet4}/{mask size}` which may mount the file share. Overlapping IP ranges are not allowed, both within and across NfsExportOptions. An error will be returned. The limit is 64 IP ranges/addresses for each FileShareConfig among all NfsExportOptions.'
          items:
            type: string
          type: array
        accessMode:
          description: 'Either READ_ONLY, for allowing only read requests on the exported directory, or READ_WRITE, for allowing both read and write requests. The default is READ_WRITE.'
          enum:
            - ACCESS_MODE_UNSPECIFIED
            - READ_ONLY
            - READ_WRITE
          enumDescriptions:
            - AccessMode not set.
            - The client can only read the file share.
            - The client can read and write the file share (default).
          type: string
        anonUid:
          type: string
          format: int64
          description: An integer representing the anonymous user id with a default value of 65534. Anon_uid may only be set with squash_mode of ROOT_SQUASH. An error will be returned if this field is specified for other squash_mode settings.
        anonGid:
          description: An integer representing the anonymous group id with a default value of 65534. Anon_gid may only be set with squash_mode of ROOT_SQUASH. An error will be returned if this field is specified for other squash_mode settings.
          format: int64
          type: string
      id: NfsExportOptions
      type: object
      description: NFS export options specifications.
    TimeOfDay:
      type: object
      properties:
        seconds:
          format: int32
          type: integer
          description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
        nanos:
          format: int32
          description: 'Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.'
          type: integer
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          type: integer
          format: int32
        hours:
          description: 'Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.'
          format: int32
          type: integer
      id: TimeOfDay
      description: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
    GoogleCloudSaasacceleratorManagementProvidersV1Instance:
      description: 'Instance represents the interface for SLM services to actuate the state of control plane resources. Example Instance in JSON, where consumer-project-number=123456, producer-project-id=cloud-sql: ```json Instance: { "name": "projects/123456/locations/us-east1/instances/prod-instance", "create_time": { "seconds": 1526406431, }, "labels": { "env": "prod", "foo": "bar" }, "state": READY, "software_versions": { "software_update": "cloud-sql-09-28-2018", }, "maintenance_policy_names": { "UpdatePolicy": "projects/123456/locations/us-east1/maintenancePolicies/prod-update-policy", } "tenant_project_id": "cloud-sql-test-tenant", "producer_metadata": { "cloud-sql-tier": "basic", "cloud-sql-instance-size": "1G", }, "provisioned_resources": [ { "resource-type": "compute-instance", "resource-url": "https://www.googleapis.com/compute/v1/projects/cloud-sql/zones/us-east1-b/instances/vm-1", } ], "maintenance_schedules": { "csa_rollout": { "start_time": { "seconds": 1526406431, }, "end_time": { "seconds": 1535406431, }, }, "ncsa_rollout": { "start_time": { "seconds": 1526406431, }, "end_time": { "seconds": 1535406431, }, } }, "consumer_defined_name": "my-sql-instance1", } ``` LINT.IfChange'
      type: object
      properties:
        sloMetadata:
          description: Output only. SLO metadata for instance classification in the Standardized dataplane SLO platform. See go/cloud-ssa-standard-slo for feature description.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata'
        instanceType:
          type: string
          description: 'Optional. The instance_type of this instance of format: projects/{project_number}/locations/{location_id}/instanceTypes/{instance_type_id}. Instance Type represents a high-level tier or SKU of the service that this instance belong to. When enabled(eg: Maintenance Rollout), Rollout uses ''instance_type'' along with ''software_versions'' to determine whether instance needs an update or not.'
        state:
          description: Output only. Current lifecycle state of the resource (e.g. if it's being created or ready to use).
          enumDescriptions:
            - Unspecified state.
            - Instance is being created.
            - Instance has been created and is ready to use.
            - Instance is being updated.
            - Instance is unheathy and under repair.
            - Instance is being deleted.
            - Instance encountered an error and is in indeterministic state.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - UPDATING
            - REPAIRING
            - DELETING
            - ERROR
          type: string
          readOnly: true
        maintenanceSettings:
          description: Optional. The MaintenanceSettings associated with instance.
          $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings'
        notificationParameters:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter'
          description: Optional. notification_parameter are information that service producers may like to include that is not relevant to Rollout. This parameter will only be passed to Gamma and Cloud Logging for notification/logging purpose.
          type: object
        maintenanceSchedules:
          description: The MaintenanceSchedule contains the scheduling information of published maintenance schedule with same key as software_versions.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule'
        consumerDefinedName:
          type: string
          description: consumer_defined_name is the name of the instance set by the service consumers. Generally this is different from the `name` field which reperesents the system-assigned id of the instance which the service consumers do not recognize. This is a required field for tenants onboarding to Maintenance Window notifications (go/slm-rollout-maintenance-policies#prerequisites).
        softwareVersions:
          type: object
          description: Software versions that are used to deploy this instance. This can be mutated by rollout services.
          additionalProperties:
            type: string
        labels:
          description: 'Optional. Resource labels to represent user provided metadata. Each label is a key-value pair, where both the key and the value are arbitrary strings provided by the user.'
          type: object
          additionalProperties:
            type: string
        updateTime:
          description: Output only. Timestamp when the resource was last modified.
          format: google-datetime
          type: string
          readOnly: true
        provisionedResources:
          readOnly: true
          description: 'Output only. The list of data plane resources provisioned for this instance, e.g. compute VMs. See go/get-instance-metadata.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource'
        slmInstanceTemplate:
          type: string
          description: Link to the SLM instance template. Only populated when updating SLM instances via SSA's Actuation service adaptor. Service producers with custom control plane (e.g. Cloud SQL) doesn't need to populate this field. Instead they should use software_versions.
        producerMetadata:
          description: Output only. Custom string attributes used primarily to expose producer-specific information in monitoring dashboards. See go/get-instance-metadata.
          type: object
          readOnly: true
          additionalProperties:
            type: string
        tenantProjectId:
          readOnly: true
          type: string
          description: Output only. ID of the associated GCP tenant project. See go/get-instance-metadata.
        name:
          description: 'Unique name of the resource. It uses the form: `projects/{project_number}/locations/{location_id}/instances/{instance_id}` Note: This name is passed, stored and logged across the rollout system. So use of consumer project_id or any other consumer PII in the name is strongly discouraged for wipeout (go/wipeout) compliance. See go/elysium/project_ids#storage-guidance for more details.'
          type: string
        maintenancePolicyNames:
          type: object
          additionalProperties:
            type: string
          description: 'Optional. The MaintenancePolicies that have been attached to the instance. The key must be of the type name of the oneof policy name defined in MaintenancePolicy, and the referenced policy must define the same policy type. For details, please refer to go/cloud-saas-mw-ug. Should not be set if maintenance_settings.maintenance_policies is set.'
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. Timestamp when the resource was created.
      id: GoogleCloudSaasacceleratorManagementProvidersV1Instance
    NetworkConfig:
      id: NetworkConfig
      description: Network configuration for the instance.
      properties:
        ipAddresses:
          items:
            type: string
          readOnly: true
          description: 'Output only. IPv4 addresses in the format `{octet1}.{octet2}.{octet3}.{octet4}` or IPv6 addresses in the format `{block1}:{block2}:{block3}:{block4}:{block5}:{block6}:{block7}:{block8}`.'
          type: array
        network:
          type: string
          description: 'The name of the Google Compute Engine [VPC network](https://cloud.google.com/vpc/docs/vpc) to which the instance is connected.'
        reservedIpRange:
          description: 'Optional, reserved_ip_range can have one of the following two types of values. * CIDR range value when using DIRECT_PEERING connect mode. * [Allocated IP address range](https://cloud.google.com/compute/docs/ip-addresses/reserve-static-internal-ip-address) when using PRIVATE_SERVICE_ACCESS connect mode. When the name of an allocated IP address range is specified, it must be one of the ranges associated with the private service access connection. When specified as a direct CIDR value, it must be a /29 CIDR block for Basic tier, a /24 CIDR block for High Scale tier, or a /26 CIDR block for Enterprise tier in one of the [internal IP address ranges](https://www.arin.net/reference/research/statistics/address_filters/) that identifies the range of IP addresses reserved for this instance. For example, 10.0.0.0/29, 192.168.0.0/24 or 192.168.0.0/26, respectively. The range you specify can''t overlap with either existing subnets or assigned IP address ranges for other Filestore instances in the selected VPC network.'
          type: string
        modes:
          type: array
          items:
            enum:
              - ADDRESS_MODE_UNSPECIFIED
              - MODE_IPV4
            enumDescriptions:
              - Internet protocol not set.
              - Use the IPv4 internet protocol.
            type: string
          description: 'Internet protocol versions for which the instance has IP addresses assigned. For this version, only MODE_IPV4 is supported.'
        connectMode:
          type: string
          enum:
            - CONNECT_MODE_UNSPECIFIED
            - DIRECT_PEERING
            - PRIVATE_SERVICE_ACCESS
          enumDescriptions:
            - Not set.
            - Connect via direct peering to the Filestore service.
            - 'Connect to your Filestore instance using Private Service Access. Private services access provides an IP address range for multiple Google Cloud services, including Filestore.'
          description: 'The network connect mode of the Filestore instance. If not provided, the connect mode defaults to DIRECT_PEERING.'
      type: object
    CancelOperationRequest:
      type: object
      description: The request message for Operations.CancelOperation.
      properties: {}
      id: CancelOperationRequest
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Location'
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      id: ListLocationsResponse
      type: object
    FileShareConfig:
      description: File share configuration for the instance.
      properties:
        nfsExportOptions:
          description: Nfs Export Options. There is a limit of 10 export options per file share.
          items:
            $ref: '#/components/schemas/NfsExportOptions'
          type: array
        name:
          type: string
          description: The name of the file share (must be 16 characters or less).
        capacityGb:
          format: int64
          type: string
          description: File share capacity in gigabytes (GB). Filestore defines 1 GB as 1024^3 bytes.
        sourceBackup:
          type: string
          description: 'The resource name of the backup, in the format `projects/{project_number}/locations/{location_id}/backups/{backup_id}`, that this file share has been restored from.'
      type: object
      id: FileShareConfig
    ListOperationsResponse:
      type: object
      description: The response message for Operations.ListOperations.
      id: ListOperationsResponse
      properties:
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Instance:
      type: object
      properties:
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time when the instance was created.
        description:
          type: string
          description: The description of the instance (2048 characters or less).
        labels:
          additionalProperties:
            type: string
          description: Resource labels to represent user provided metadata.
          type: object
        fileShares:
          type: array
          items:
            $ref: '#/components/schemas/FileShareConfig'
          description: 'File system shares on the instance. For this version, only a single file share is supported.'
        suspensionReasons:
          items:
            enum:
              - SUSPENSION_REASON_UNSPECIFIED
              - KMS_KEY_ISSUE
            type: string
            enumDescriptions:
              - Not set.
              - The KMS key used by the instance is either revoked or denied access to.
          description: Output only. Field indicates all the reasons the instance is in "SUSPENDED" state.
          readOnly: true
          type: array
        statusMessage:
          type: string
          readOnly: true
          description: 'Output only. Additional information about the instance state, if available.'
        kmsKeyName:
          description: KMS key name used for data encryption.
          type: string
        networks:
          type: array
          description: 'VPC networks to which the instance is connected. For this version, only a single network is supported.'
          items:
            $ref: '#/components/schemas/NetworkConfig'
        state:
          type: string
          enumDescriptions:
            - State not set.
            - The instance is being created.
            - The instance is available for use.
            - Work is being done on the instance. You can get further details from the `statusMessage` field of the `Instance` resource.
            - The instance is shutting down.
            - The instance is experiencing an issue and might be unusable. You can get further details from the `statusMessage` field of the `Instance` resource.
            - The instance is restoring a backup to an existing file share and may be unusable during this time.
            - The instance is suspended. You can get further details from the `suspension_reasons` field of the `Instance` resource.
            - The instance is in the process of becoming suspended.
            - The instance is in the process of becoming active.
            - The instance is reverting to a snapshot.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - REPAIRING
            - DELETING
            - ERROR
            - RESTORING
            - SUSPENDED
            - SUSPENDING
            - RESUMING
            - REVERTING
          description: Output only. The instance state.
          readOnly: true
        name:
          readOnly: true
          type: string
          description: 'Output only. The resource name of the instance, in the format `projects/{project}/locations/{location}/instances/{instance}`.'
        tier:
          enumDescriptions:
            - Not set.
            - STANDARD tier. BASIC_HDD is the preferred term for this tier.
            - PREMIUM tier. BASIC_SSD is the preferred term for this tier.
            - 'BASIC instances offer a maximum capacity of 63.9 TB. BASIC_HDD is an alias for STANDARD Tier, offering economical performance backed by HDD.'
            - 'BASIC instances offer a maximum capacity of 63.9 TB. BASIC_SSD is an alias for PREMIUM Tier, and offers improved performance backed by SSD.'
            - HIGH_SCALE instances offer expanded capacity and performance scaling capabilities.
            - ENTERPRISE instances offer the features and availability needed for mission-critical workloads.
            - ZONAL instances offer expanded capacity and performance scaling capabilities.
          enum:
            - TIER_UNSPECIFIED
            - STANDARD
            - PREMIUM
            - BASIC_HDD
            - BASIC_SSD
            - HIGH_SCALE_SSD
            - ENTERPRISE
            - ZONAL
          description: The service tier of the instance.
          type: string
        satisfiesPzs:
          readOnly: true
          description: Output only. Reserved for future use.
          type: boolean
        etag:
          description: Server-specified ETag for the instance resource to prevent simultaneous updates from overwriting each other.
          type: string
      description: A Filestore instance.
      id: Instance
    GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule:
      id: GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule
      description: 'Maintenance schedule which is exposed to customer and potentially end user, indicating published upcoming future maintenance schedule'
      type: object
      properties:
        canReschedule:
          type: boolean
          description: 'This field is deprecated, and will be always set to true since reschedule can happen multiple times now. This field should not be removed until all service producers remove this for their customers.'
          deprecated: true
        rolloutManagementPolicy:
          description: 'The rollout management policy this maintenance schedule is associated with. When doing reschedule update request, the reschedule should be against this given policy.'
          type: string
        scheduleDeadlineTime:
          type: string
          description: 'schedule_deadline_time is the time deadline any schedule start time cannot go beyond, including reschedule. It''s normally the initial schedule start time plus maintenance window length (1 day or 1 week). Maintenance cannot be scheduled to start beyond this deadline.'
          format: google-datetime
        startTime:
          format: google-datetime
          description: The scheduled start time for the maintenance.
          type: string
        endTime:
          format: google-datetime
          type: string
          description: The scheduled end time for the maintenance.
    ListBackupsResponse:
      description: ListBackupsResponse is the result of ListBackupsRequest.
      properties:
        backups:
          type: array
          items:
            $ref: '#/components/schemas/Backup'
          description: 'A list of backups in the project for the specified location. If the `{location}` value in the request is "-", the response contains a list of backups from all locations. If any location is unreachable, the response will only return backups in reachable locations and the "unreachable" field will be populated with a list of unreachable locations.'
        nextPageToken:
          type: string
          description: The token you can use to retrieve the next page of results. Not returned if there are no more results in the list.
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
      id: ListBackupsResponse
      type: object
  parameters:
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  x-stackQL-resources:
    instances:
      id: google.file.instances
      name: instances
      title: Instances
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restore:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:restore/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        revert:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:revert/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/instances/methods/delete'
    snapshots:
      id: google.file.snapshots
      name: snapshots
      title: Snapshots
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1snapshots~1{snapshotsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1snapshots~1{snapshotsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1snapshots~1{snapshotsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1snapshots/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1snapshots/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/delete'
    backups:
      id: google.file.backups
      name: backups
      title: Backups
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backups~1{backupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backups~1{backupsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backups~1{backupsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/backups/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backups/methods/delete'
    operations:
      id: google.file.operations
      name: operations
      title: Operations
      methods:
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    locations:
      id: google.file.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
    get:
      description: Gets the details of a specific instance.
      operationId: file.projects.locations.instances.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes an instance.
      operationId: file.projects.locations.instances.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: instances
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates the settings of a specific instance.
      operationId: file.projects.locations.instances.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:restore':
    parameters: *ref_1
    post:
      description: Restores an existing instance's file share from a backup. The capacity of the instance needs to be equal to or larger than the capacity of the backup (and also equal to or larger than the minimum capacity of the tier).
      operationId: file.projects.locations.instances.restore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreInstanceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: restore
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:revert':
    parameters: *ref_1
    post:
      description: Revert an existing instance's file system to a specified snapshot.
      operationId: file.projects.locations.instances.revert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevertInstanceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: revert
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/instances':
    parameters: *ref_1
    post:
      description: 'Creates an instance. When creating from a backup, the capacity of the new instance needs to be equal to or larger than the capacity of the backup (and also equal to or larger than the minimum capacity of the tier).'
      operationId: file.projects.locations.instances.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: instanceId
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists all instances in a project for either a specified location or for all locations.
      operationId: file.projects.locations.instances.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/snapshots/{snapshotsId}':
    parameters: *ref_1
    get:
      description: Gets the details of a specific snapshot.
      operationId: file.projects.locations.instances.snapshots.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: get
      x-stackQL-verb: exec
    patch:
      description: Updates the settings of a specific snapshot.
      operationId: file.projects.locations.instances.snapshots.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshot'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a snapshot.
      operationId: file.projects.locations.instances.snapshots.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/snapshots':
    parameters: *ref_1
    get:
      description: Lists all snapshots in a project for either a specified location or for all locations.
      operationId: file.projects.locations.instances.snapshots.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: list
      x-stackQL-verb: select
    post:
      description: Creates a snapshot.
      operationId: file.projects.locations.instances.snapshots.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshot'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: snapshotId
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/backups':
    parameters: *ref_1
    get:
      description: Lists all backups in a project for either a specified location or for all locations.
      operationId: file.projects.locations.backups.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: backups
      x-stackQL-method: list
      x-stackQL-verb: select
    post:
      description: Creates a backup.
      operationId: file.projects.locations.backups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: backupId
          schema:
            type: string
      x-stackQL-resource: backups
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/backups/{backupsId}':
    parameters: *ref_1
    get:
      description: Gets the details of a specific backup.
      operationId: file.projects.locations.backups.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: backups
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes a backup.
      operationId: file.projects.locations.backups.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: backups
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates the settings of a specific backup.
      operationId: file.projects.locations.backups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: backups
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: file.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: file.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: file.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: file.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: file.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: includeUnrevealedLocations
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: file.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: exec
