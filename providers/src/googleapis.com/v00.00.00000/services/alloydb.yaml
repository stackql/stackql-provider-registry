openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: AlloyDB API
  description: >-
    AlloyDB for PostgreSQL is an open source-compatible database service that
    provides a powerful option for migrating, modernizing, or building
    commercial-grade applications. It offers full compatibility with standard
    PostgreSQL, and is more than 4x faster for transactional workloads and up to
    100x faster for analytical queries than standard PostgreSQL in our
    performance tests. AlloyDB for PostgreSQL offers a 99.99 percent
    availability SLA inclusive of maintenance. AlloyDB is optimized for the most
    demanding use cases, allowing you to build new applications that require
    high transaction throughput, large database sizes, or multiple read
    resources; scale existing PostgreSQL workloads with no application changes;
    and modernize legacy proprietary databases. 
  version: v1
  x-discovery-doc-revision: '20240828'
  x-generated-date: '2024-09-13'
externalDocs:
  url: https://cloud.google.com/alloydb/
servers:
  - url: https://alloydb.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    ListClustersResponse:
      id: ListClustersResponse
      description: Message for response to listing Clusters
      type: object
      properties:
        clusters:
          description: The list of Cluster
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Cluster:
      id: Cluster
      description: >-
        A cluster is a collection of regional AlloyDB resources. It can include
        a primary instance and one or more read pool instances. All cluster
        resources share a storage layer, which scales as needed.
      type: object
      properties:
        backupSource:
          description: Output only. Cluster created from backup.
          readOnly: true
          $ref: '#/components/schemas/BackupSource'
        migrationSource:
          description: Output only. Cluster created via DMS migration.
          readOnly: true
          $ref: '#/components/schemas/MigrationSource'
        name:
          description: >-
            Output only. The name of the cluster resource with the format: *
            projects/{project}/locations/{region}/clusters/{cluster_id} where
            the cluster ID segment should satisfy the regex expression
            `[a-z0-9-]+`. For more details see https://google.aip.dev/122. The
            prefix of the cluster resource name is the name of the parent
            resource: * projects/{project}/locations/{region}
          readOnly: true
          type: string
        displayName:
          description: User-settable and human-readable display name for the Cluster.
          type: string
        uid:
          description: >-
            Output only. The system-generated UID of the resource. The UID is
            assigned when the resource is created, and it is retained until it
            is deleted.
          readOnly: true
          type: string
        createTime:
          description: Output only. Create time stamp
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Update time stamp
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: Output only. Delete time stamp
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Labels as key value pairs
          type: object
          additionalProperties:
            type: string
        state:
          description: Output only. The current serving state of the cluster.
          readOnly: true
          type: string
          enumDescriptions:
            - The state of the cluster is unknown.
            - The cluster is active and running.
            - >-
              The cluster is stopped. All instances in the cluster are stopped.
              Customers can start a stopped cluster at any point and all their
              instances will come back to life with same names and IP resources.
              In this state, customer pays for storage. Associated backups could
              also be present in a stopped cluster.
            - >-
              The cluster is empty and has no associated resources. All
              instances, associated storage and backups have been deleted.
            - The cluster is being created.
            - The cluster is being deleted.
            - The creation of the cluster failed.
            - >-
              The cluster is bootstrapping with data from some other source.
              Direct mutations to the cluster (e.g. adding read pool) are not
              allowed.
            - >-
              The cluster is under maintenance. AlloyDB regularly performs
              maintenance and upgrades on customer clusters. Updates on the
              cluster are not allowed while the cluster is in this state.
            - The cluster is being promoted.
          enum:
            - STATE_UNSPECIFIED
            - READY
            - STOPPED
            - EMPTY
            - CREATING
            - DELETING
            - FAILED
            - BOOTSTRAPPING
            - MAINTENANCE
            - PROMOTING
        clusterType:
          description: >-
            Output only. The type of the cluster. This is an output-only field
            and it's populated at the Cluster creation time or the Cluster
            promotion time. The cluster type is determined by which RPC was used
            to create the cluster (i.e. `CreateCluster` vs.
            `CreateSecondaryCluster`
          readOnly: true
          type: string
          enumDescriptions:
            - The type of the cluster is unknown.
            - Primary cluster that support read and write operations.
            - >-
              Secondary cluster that is replicating from another region. This
              only supports read.
          enum:
            - CLUSTER_TYPE_UNSPECIFIED
            - PRIMARY
            - SECONDARY
        databaseVersion:
          description: >-
            Optional. The database engine major version. This is an optional
            field and it is populated at the Cluster creation time. If a
            database version is not supplied at cluster creation time, then a
            default database version will be used.
          type: string
          enumDescriptions:
            - This is an unknown database version.
            - DEPRECATED - The database version is Postgres 13.
            - The database version is Postgres 14.
            - The database version is Postgres 15.
          enumDeprecated:
            - false
            - true
            - false
            - false
          enum:
            - DATABASE_VERSION_UNSPECIFIED
            - POSTGRES_13
            - POSTGRES_14
            - POSTGRES_15
        networkConfig:
          $ref: '#/components/schemas/NetworkConfig'
        network:
          description: >-
            Required. The resource link for the VPC network in which cluster
            resources are created and from which they are accessible via Private
            IP. The network must belong to the same project as the cluster. It
            is specified in the form:
            `projects/{project}/global/networks/{network_id}`. This is required
            to create a cluster. Deprecated, use network_config.network instead.
          deprecated: true
          type: string
        etag:
          description: For Resource freshness validation (https://google.aip.dev/154)
          type: string
        annotations:
          description: >-
            Annotations to allow client tools to store small amount of arbitrary
            data. This is distinct from labels. https://google.aip.dev/128
          type: object
          additionalProperties:
            type: string
        reconciling:
          description: >-
            Output only. Reconciling
            (https://google.aip.dev/128#reconciliation). Set to true if the
            current state of Cluster does not match the user's intended state,
            and the service is actively updating the resource to reconcile them.
            This can happen due to user-triggered updates or system actions like
            failover or maintenance.
          readOnly: true
          type: boolean
        initialUser:
          description: >-
            Input only. Initial user to setup during cluster creation. Required.
            If used in `RestoreCluster` this is ignored.
          $ref: '#/components/schemas/UserPassword'
        automatedBackupPolicy:
          description: >-
            The automated backup policy for this cluster. If no policy is
            provided then the default policy will be used. If backups are
            supported for the cluster, the default policy takes one backup a
            day, has a backup window of 1 hour, and retains backups for 14 days.
            For more information on the defaults, consult the documentation for
            the message type.
          $ref: '#/components/schemas/AutomatedBackupPolicy'
        sslConfig:
          description: SSL configuration for this AlloyDB cluster.
          deprecated: true
          $ref: '#/components/schemas/SslConfig'
        encryptionConfig:
          description: >-
            Optional. The encryption config can be specified to encrypt the data
            disks and other persistent data resources of a cluster with a
            customer-managed encryption key (CMEK). When this field is not
            specified, the cluster will then use default encryption scheme to
            protect the user data.
          $ref: '#/components/schemas/EncryptionConfig'
        encryptionInfo:
          description: Output only. The encryption information for the cluster.
          readOnly: true
          $ref: '#/components/schemas/EncryptionInfo'
        continuousBackupConfig:
          description: Optional. Continuous backup configuration for this cluster.
          $ref: '#/components/schemas/ContinuousBackupConfig'
        continuousBackupInfo:
          description: Output only. Continuous backup properties for this cluster.
          readOnly: true
          $ref: '#/components/schemas/ContinuousBackupInfo'
        secondaryConfig:
          description: Cross Region replication config specific to SECONDARY cluster.
          $ref: '#/components/schemas/SecondaryConfig'
        primaryConfig:
          description: >-
            Output only. Cross Region replication config specific to PRIMARY
            cluster.
          readOnly: true
          $ref: '#/components/schemas/PrimaryConfig'
        satisfiesPzs:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        pscConfig:
          description: >-
            Optional. The configuration for Private Service Connect (PSC) for
            the cluster.
          $ref: '#/components/schemas/PscConfig'
        maintenanceUpdatePolicy:
          description: >-
            Optional. The maintenance update policy determines when to allow or
            deny updates.
          $ref: '#/components/schemas/MaintenanceUpdatePolicy'
        maintenanceSchedule:
          description: >-
            Output only. The maintenance schedule for the cluster, generated for
            a specific rollout if a maintenance window is set.
          readOnly: true
          $ref: '#/components/schemas/MaintenanceSchedule'
        subscriptionType:
          description: Optional. Subscription type of the cluster.
          type: string
          enumDescriptions:
            - >-
              This is an unknown Subscription type (By default, Subscription
              Type is STANDARD)
            - Standard subscription.
            - Trial subscription.
          enum:
            - SUBSCRIPTION_TYPE_UNSPECIFIED
            - STANDARD
            - TRIAL
        trialMetadata:
          description: Output only. Metadata for free trial clusters
          readOnly: true
          $ref: '#/components/schemas/TrialMetadata'
    BackupSource:
      id: BackupSource
      description: Message describing a BackupSource.
      type: object
      properties:
        backupUid:
          description: >-
            Output only. The system-generated UID of the backup which was used
            to create this resource. The UID is generated when the backup is
            created, and it is retained until the backup is deleted.
          readOnly: true
          type: string
        backupName:
          description: >-
            Required. The name of the backup resource with the format: *
            projects/{project}/locations/{region}/backups/{backup_id}
          type: string
    MigrationSource:
      id: MigrationSource
      description: >-
        Subset of the source instance configuration that is available when
        reading the cluster resource.
      type: object
      properties:
        hostPort:
          description: >-
            Output only. The host and port of the on-premises instance in
            host:port format
          readOnly: true
          type: string
        referenceId:
          description: >-
            Output only. Place holder for the external source identifier(e.g DMS
            job name) that created the cluster.
          readOnly: true
          type: string
        sourceType:
          description: Output only. Type of migration source.
          readOnly: true
          type: string
          enumDescriptions:
            - Migration source is unknown.
            - DMS source means the cluster was created via DMS migration job.
          enum:
            - MIGRATION_SOURCE_TYPE_UNSPECIFIED
            - DMS
    NetworkConfig:
      id: NetworkConfig
      description: Metadata related to network configuration.
      type: object
      properties:
        network:
          description: >-
            Optional. The resource link for the VPC network in which cluster
            resources are created and from which they are accessible via Private
            IP. The network must belong to the same project as the cluster. It
            is specified in the form:
            `projects/{project_number}/global/networks/{network_id}`. This is
            required to create a cluster.
          type: string
        allocatedIpRange:
          description: >-
            Optional. Name of the allocated IP range for the private IP AlloyDB
            cluster, for example: "google-managed-services-default". If set, the
            instance IPs for this cluster will be created in the allocated
            range. The range name must comply with RFC 1035. Specifically, the
            name must be 1-63 characters long and match the regular expression
            `[a-z]([-a-z0-9]*[a-z0-9])?`. Field name is intended to be
            consistent with Cloud SQL.
          type: string
    UserPassword:
      id: UserPassword
      description: >-
        The username/password for a database user. Used for specifying initial
        users at cluster creation time.
      type: object
      properties:
        user:
          description: The database username.
          type: string
        password:
          description: The initial password for the user.
          type: string
    AutomatedBackupPolicy:
      id: AutomatedBackupPolicy
      description: >-
        Message describing the user-specified automated backup policy. All
        fields in the automated backup policy are optional. Defaults for each
        field are provided if they are not set.
      type: object
      properties:
        weeklySchedule:
          description: Weekly schedule for the Backup.
          $ref: '#/components/schemas/WeeklySchedule'
        timeBasedRetention:
          description: Time-based Backup retention policy.
          $ref: '#/components/schemas/TimeBasedRetention'
        quantityBasedRetention:
          description: Quantity-based Backup retention policy to retain recent backups.
          $ref: '#/components/schemas/QuantityBasedRetention'
        enabled:
          description: >-
            Whether automated automated backups are enabled. If not set,
            defaults to true.
          type: boolean
        backupWindow:
          description: >-
            The length of the time window during which a backup can be taken. If
            a backup does not succeed within this time window, it will be
            canceled and considered failed. The backup window must be at least 5
            minutes long. There is no upper bound on the window. If not set, it
            defaults to 1 hour.
          type: string
          format: google-duration
        encryptionConfig:
          description: >-
            Optional. The encryption config can be specified to encrypt the
            backups with a customer-managed encryption key (CMEK). When this
            field is not specified, the backup will then use default encryption
            scheme to protect the user data.
          $ref: '#/components/schemas/EncryptionConfig'
        location:
          description: >-
            The location where the backup will be stored. Currently, the only
            supported option is to store the backup in the same region as the
            cluster. If empty, defaults to the region of the cluster.
          type: string
        labels:
          description: Labels to apply to backups created using this configuration.
          type: object
          additionalProperties:
            type: string
    WeeklySchedule:
      id: WeeklySchedule
      description: >-
        A weekly schedule starts a backup at prescribed start times within a
        day, for the specified days of the week. The weekly schedule message is
        flexible and can be used to create many types of schedules. For example,
        to have a daily backup that starts at 22:00, configure the `start_times`
        field to have one element "22:00" and the `days_of_week` field to have
        all seven days of the week.
      type: object
      properties:
        startTimes:
          description: >-
            The times during the day to start a backup. The start times are
            assumed to be in UTC and to be an exact hour (e.g., 04:00:00). If no
            start times are provided, a single fixed start time is chosen
            arbitrarily.
          type: array
          items:
            $ref: '#/components/schemas/GoogleTypeTimeOfDay'
        daysOfWeek:
          description: >-
            The days of the week to perform a backup. If this field is left
            empty, the default of every day of the week is used.
          type: array
          items:
            type: string
            enumDescriptions:
              - The day of the week is unspecified.
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
              - Sunday
            enum:
              - DAY_OF_WEEK_UNSPECIFIED
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
    GoogleTypeTimeOfDay:
      id: GoogleTypeTimeOfDay
      description: >-
        Represents a time of day. The date and time zone are either not
        significant or are specified elsewhere. An API may choose to allow leap
        seconds. Related types are google.type.Date and
        `google.protobuf.Timestamp`.
      type: object
      properties:
        hours:
          description: >-
            Hours of day in 24 hour format. Should be from 0 to 23. An API may
            choose to allow the value "24:00:00" for scenarios like business
            closing time.
          type: integer
          format: int32
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          type: integer
          format: int32
        seconds:
          description: >-
            Seconds of minutes of the time. Must normally be from 0 to 59. An
            API may allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          type: integer
          format: int32
    TimeBasedRetention:
      id: TimeBasedRetention
      description: >-
        A time based retention policy specifies that all backups within a
        certain time period should be retained.
      type: object
      properties:
        retentionPeriod:
          description: The retention period.
          type: string
          format: google-duration
    QuantityBasedRetention:
      id: QuantityBasedRetention
      description: >-
        A quantity based policy specifies that a certain number of the most
        recent successful backups should be retained.
      type: object
      properties:
        count:
          description: The number of backups to retain.
          type: integer
          format: int32
    EncryptionConfig:
      id: EncryptionConfig
      description: >-
        EncryptionConfig describes the encryption config of a cluster or a
        backup that is encrypted with a CMEK (customer-managed encryption key).
      type: object
      properties:
        kmsKeyName:
          description: >-
            The fully-qualified resource name of the KMS key. Each Cloud KMS key
            is regionalized and has the following format:
            projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME]
          type: string
    SslConfig:
      id: SslConfig
      description: SSL configuration.
      type: object
      properties:
        sslMode:
          description: >-
            Optional. SSL mode. Specifies client-server SSL/TLS connection
            behavior.
          type: string
          enumDescriptions:
            - SSL mode not specified. Defaults to ENCRYPTED_ONLY.
            - SSL connections are optional. CA verification not enforced.
            - >-
              SSL connections are required. CA verification not enforced.
              Clients may use locally self-signed certificates (default psql
              client behavior).
            - >-
              SSL connections are required. CA verification enforced. Clients
              must have certificates signed by a Cluster CA, e.g. via
              GenerateClientCertificate.
            - SSL connections are optional. CA verification not enforced.
            - SSL connections are required. CA verification not enforced.
          enumDeprecated:
            - false
            - true
            - true
            - true
            - false
            - false
          enum:
            - SSL_MODE_UNSPECIFIED
            - SSL_MODE_ALLOW
            - SSL_MODE_REQUIRE
            - SSL_MODE_VERIFY_CA
            - ALLOW_UNENCRYPTED_AND_ENCRYPTED
            - ENCRYPTED_ONLY
        caSource:
          description: >-
            Optional. Certificate Authority (CA) source. Only CA_SOURCE_MANAGED
            is supported currently, and is the default value.
          type: string
          enumDescriptions:
            - >-
              Certificate Authority (CA) source not specified. Defaults to
              CA_SOURCE_MANAGED.
            - Certificate Authority (CA) managed by the AlloyDB Cluster.
          enum:
            - CA_SOURCE_UNSPECIFIED
            - CA_SOURCE_MANAGED
    EncryptionInfo:
      id: EncryptionInfo
      description: >-
        EncryptionInfo describes the encryption information of a cluster or a
        backup.
      type: object
      properties:
        encryptionType:
          description: Output only. Type of encryption.
          readOnly: true
          type: string
          enumDescriptions:
            - >-
              Encryption type not specified. Defaults to
              GOOGLE_DEFAULT_ENCRYPTION.
            - >-
              The data is encrypted at rest with a key that is fully managed by
              Google. No key version will be populated. This is the default
              state.
            - >-
              The data is encrypted at rest with a key that is managed by the
              customer. KMS key versions will be populated.
          enum:
            - TYPE_UNSPECIFIED
            - GOOGLE_DEFAULT_ENCRYPTION
            - CUSTOMER_MANAGED_ENCRYPTION
        kmsKeyVersions:
          description: >-
            Output only. Cloud KMS key versions that are being used to protect
            the database or the backup.
          readOnly: true
          type: array
          items:
            type: string
    ContinuousBackupConfig:
      id: ContinuousBackupConfig
      description: >-
        ContinuousBackupConfig describes the continuous backups recovery
        configurations of a cluster.
      type: object
      properties:
        enabled:
          description: Whether ContinuousBackup is enabled.
          type: boolean
        recoveryWindowDays:
          description: >-
            The number of days that are eligible to restore from using PITR. To
            support the entire recovery window, backups and logs are retained
            for one day more than the recovery window. If not set, defaults to
            14 days.
          type: integer
          format: int32
        encryptionConfig:
          description: >-
            The encryption config can be specified to encrypt the backups with a
            customer-managed encryption key (CMEK). When this field is not
            specified, the backup will then use default encryption scheme to
            protect the user data.
          $ref: '#/components/schemas/EncryptionConfig'
    ContinuousBackupInfo:
      id: ContinuousBackupInfo
      description: >-
        ContinuousBackupInfo describes the continuous backup properties of a
        cluster.
      type: object
      properties:
        encryptionInfo:
          description: >-
            Output only. The encryption information for the WALs and backups
            required for ContinuousBackup.
          readOnly: true
          $ref: '#/components/schemas/EncryptionInfo'
        enabledTime:
          description: >-
            Output only. When ContinuousBackup was most recently enabled. Set to
            null if ContinuousBackup is not enabled.
          readOnly: true
          type: string
          format: google-datetime
        schedule:
          description: >-
            Output only. Days of the week on which a continuous backup is taken.
            Output only field. Ignored if passed into the request.
          readOnly: true
          type: array
          items:
            type: string
            enumDescriptions:
              - The day of the week is unspecified.
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
              - Sunday
            enum:
              - DAY_OF_WEEK_UNSPECIFIED
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
        earliestRestorableTime:
          description: >-
            Output only. The earliest restorable time that can be restored to.
            Output only field.
          readOnly: true
          type: string
          format: google-datetime
    SecondaryConfig:
      id: SecondaryConfig
      description: >-
        Configuration information for the secondary cluster. This should be set
        if and only if the cluster is of type SECONDARY.
      type: object
      properties:
        primaryClusterName:
          description: >-
            The name of the primary cluster name with the format: *
            projects/{project}/locations/{region}/clusters/{cluster_id}
          type: string
    PrimaryConfig:
      id: PrimaryConfig
      description: >-
        Configuration for the primary cluster. It has the list of clusters that
        are replicating from this cluster. This should be set if and only if the
        cluster is of type PRIMARY.
      type: object
      properties:
        secondaryClusterNames:
          description: >-
            Output only. Names of the clusters that are replicating from this
            cluster.
          readOnly: true
          type: array
          items:
            type: string
    PscConfig:
      id: PscConfig
      description: PscConfig contains PSC related configuration at a cluster level.
      type: object
      properties:
        pscEnabled:
          description: >-
            Optional. Create an instance that allows connections from Private
            Service Connect endpoints to the instance.
          type: boolean
    MaintenanceUpdatePolicy:
      id: MaintenanceUpdatePolicy
      description: MaintenanceUpdatePolicy defines the policy for system updates.
      type: object
      properties:
        maintenanceWindows:
          description: Preferred windows to perform maintenance. Currently limited to 1.
          type: array
          items:
            $ref: '#/components/schemas/MaintenanceWindow'
    MaintenanceWindow:
      id: MaintenanceWindow
      description: MaintenanceWindow specifies a preferred day and time for maintenance.
      type: object
      properties:
        day:
          description: >-
            Preferred day of the week for maintenance, e.g. MONDAY, TUESDAY,
            etc.
          type: string
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        startTime:
          description: >-
            Preferred time to start the maintenance operation on the specified
            day. Maintenance will start within 1 hour of this time.
          $ref: '#/components/schemas/GoogleTypeTimeOfDay'
    MaintenanceSchedule:
      id: MaintenanceSchedule
      description: >-
        MaintenanceSchedule stores the maintenance schedule generated from the
        MaintenanceUpdatePolicy, once a maintenance rollout is triggered, if
        MaintenanceWindow is set, and if there is no conflicting DenyPeriod. The
        schedule is cleared once the update takes place. This field cannot be
        manually changed; modify the MaintenanceUpdatePolicy instead.
      type: object
      properties:
        startTime:
          description: Output only. The scheduled start time for the maintenance.
          readOnly: true
          type: string
          format: google-datetime
    TrialMetadata:
      id: TrialMetadata
      description: Contains information and all metadata related to TRIAL clusters.
      type: object
      properties:
        startTime:
          description: start time of the trial cluster.
          type: string
          format: google-datetime
        endTime:
          description: End time of the trial cluster.
          type: string
          format: google-datetime
        upgradeTime:
          description: Upgrade time of trial cluster to Standard cluster.
          type: string
          format: google-datetime
        graceEndTime:
          description: grace end time of the cluster.
          type: string
          format: google-datetime
    UpgradeClusterRequest:
      id: UpgradeClusterRequest
      description: Upgrades a cluster.
      type: object
      properties:
        version:
          description: Required. The version the cluster is going to be upgraded to.
          type: string
          enumDescriptions:
            - This is an unknown database version.
            - DEPRECATED - The database version is Postgres 13.
            - The database version is Postgres 14.
            - The database version is Postgres 15.
          enumDeprecated:
            - false
            - true
            - false
            - false
          enum:
            - DATABASE_VERSION_UNSPECIFIED
            - POSTGRES_13
            - POSTGRES_14
            - POSTGRES_15
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes after the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
        validateOnly:
          description: >-
            Optional. If set, performs request validation (e.g. permission
            checks and any other type of validation), but does not actually
            execute the upgrade.
          type: boolean
        etag:
          description: >-
            Optional. The current etag of the Cluster. If an etag is provided
            and does not match the current etag of the Cluster, upgrade will be
            blocked and an ABORTED error will be returned.
          type: string
    PromoteClusterRequest:
      id: PromoteClusterRequest
      description: Message for promoting a Cluster
      type: object
      properties:
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes after the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
        etag:
          description: >-
            Optional. The current etag of the Cluster. If an etag is provided
            and does not match the current etag of the Cluster, deletion will be
            blocked and an ABORTED error will be returned.
          type: string
        validateOnly:
          description: >-
            Optional. If set, performs request validation (e.g. permission
            checks and any other type of validation), but do not actually
            execute the delete.
          type: boolean
    SwitchoverClusterRequest:
      id: SwitchoverClusterRequest
      description: Message for switching over to a cluster
      type: object
      properties:
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes after the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
        validateOnly:
          description: >-
            Optional. If set, performs request validation (e.g. permission
            checks and any other type of validation), but do not actually
            execute the delete.
          type: boolean
    RestoreClusterRequest:
      id: RestoreClusterRequest
      description: >-
        Message for restoring a Cluster from a backup or another cluster at a
        given point in time.
      type: object
      properties:
        backupSource:
          description: Backup source.
          $ref: '#/components/schemas/BackupSource'
        continuousBackupSource:
          description: >-
            ContinuousBackup source. Continuous backup needs to be enabled in
            the source cluster for this operation to succeed.
          $ref: '#/components/schemas/ContinuousBackupSource'
        clusterId:
          description: Required. ID of the requesting object.
          type: string
        cluster:
          description: Required. The resource being created
          $ref: '#/components/schemas/Cluster'
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes since the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
        validateOnly:
          description: >-
            Optional. If set, performs request validation (e.g. permission
            checks and any other type of validation), but do not actually
            execute the import request.
          type: boolean
    ContinuousBackupSource:
      id: ContinuousBackupSource
      description: Message describing a ContinuousBackupSource.
      type: object
      properties:
        cluster:
          description: >-
            Required. The source cluster from which to restore. This cluster
            must have continuous backup enabled for this operation to succeed.
            For the required format, see the comment on the Cluster.name field.
          type: string
        pointInTime:
          description: Required. The point in time to restore to.
          type: string
          format: google-datetime
    ListInstancesResponse:
      id: ListInstancesResponse
      description: Message for response to listing Instances
      type: object
      properties:
        instances:
          description: The list of Instance
          type: array
          items:
            $ref: '#/components/schemas/Instance'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Instance:
      id: Instance
      description: >-
        An Instance is a computing unit that an end customer can connect to.
        It's the main unit of computing resources in AlloyDB.
      type: object
      properties:
        name:
          description: >-
            Output only. The name of the instance resource with the format: *
            projects/{project}/locations/{region}/clusters/{cluster_id}/instances/{instance_id}
            where the cluster and instance ID segments should satisfy the regex
            expression `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`, e.g. 1-63 characters
            of lowercase letters, numbers, and dashes, starting with a letter,
            and ending with a letter or number. For more details see
            https://google.aip.dev/122. The prefix of the instance resource name
            is the name of the parent resource: *
            projects/{project}/locations/{region}/clusters/{cluster_id}
          readOnly: true
          type: string
        displayName:
          description: User-settable and human-readable display name for the Instance.
          type: string
        uid:
          description: >-
            Output only. The system-generated UID of the resource. The UID is
            assigned when the resource is created, and it is retained until it
            is deleted.
          readOnly: true
          type: string
        createTime:
          description: Output only. Create time stamp
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Update time stamp
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: Output only. Delete time stamp
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Labels as key value pairs
          type: object
          additionalProperties:
            type: string
        state:
          description: Output only. The current serving state of the instance.
          readOnly: true
          type: string
          enumDescriptions:
            - The state of the instance is unknown.
            - The instance is active and running.
            - >-
              The instance is stopped. Instance name and IP resources are
              preserved.
            - The instance is being created.
            - The instance is being deleted.
            - The instance is down for maintenance.
            - >-
              The creation of the instance failed or a fatal error occurred
              during an operation on the instance. Note: Instances in this state
              would tried to be auto-repaired. And Customers should be able to
              restart, update or delete these instances.
            - >-
              Index 7 is used in the producer apis for ROLLED_BACK state.
              Keeping that index unused in case that state also needs to exposed
              via consumer apis in future. The instance has been configured to
              sync data from some other source.
            - The instance is being promoted.
          enum:
            - STATE_UNSPECIFIED
            - READY
            - STOPPED
            - CREATING
            - DELETING
            - MAINTENANCE
            - FAILED
            - BOOTSTRAPPING
            - PROMOTING
        instanceType:
          description: Required. The type of the instance. Specified at creation time.
          type: string
          enumDescriptions:
            - The type of the instance is unknown.
            - PRIMARY instances support read and write operations.
            - >-
              READ POOL instances support read operations only. Each read pool
              instance consists of one or more homogeneous nodes. * Read pool of
              size 1 can only have zonal availability. * Read pools with node
              count of 2 or more can have regional availability (nodes are
              present in 2 or more zones in a region).
            - >-
              SECONDARY instances support read operations only. SECONDARY
              instance is a cross-region read replica
          enum:
            - INSTANCE_TYPE_UNSPECIFIED
            - PRIMARY
            - READ_POOL
            - SECONDARY
        machineConfig:
          description: >-
            Configurations for the machines that host the underlying database
            engine.
          $ref: '#/components/schemas/MachineConfig'
        availabilityType:
          description: >-
            Availability type of an Instance. If empty, defaults to REGIONAL for
            primary instances. For read pools, availability_type is always
            UNSPECIFIED. Instances in the read pools are evenly distributed
            across available zones within the region (i.e. read pools with more
            than one node will have a node in at least two zones).
          type: string
          enumDescriptions:
            - This is an unknown Availability type.
            - Zonal available instance.
            - Regional (or Highly) available instance.
          enum:
            - AVAILABILITY_TYPE_UNSPECIFIED
            - ZONAL
            - REGIONAL
        gceZone:
          description: >-
            The Compute Engine zone that the instance should serve from, per
            https://cloud.google.com/compute/docs/regions-zones This can ONLY be
            specified for ZONAL instances. If present for a REGIONAL instance,
            an error will be thrown. If this is absent for a ZONAL instance,
            instance is created in a random zone with available capacity.
          type: string
        databaseFlags:
          description: >-
            Database flags. Set at instance level. * They are copied from
            primary instance on read instance creation. * Read instances can set
            new or override existing flags that are relevant for reads, e.g. for
            enabling columnar cache on a read instance. Flags set on read
            instance may or may not be present on primary. This is a list of
            "key": "value" pairs. "key": The name of the flag. These flags are
            passed at instance setup time, so include both server options and
            system variables for Postgres. Flags are specified with underscores,
            not hyphens. "value": The value of the flag. Booleans are set to
            **on** for true and **off** for false. This field must be omitted if
            the flag doesn't take a value.
          type: object
          additionalProperties:
            type: string
        writableNode:
          description: >-
            Output only. This is set for the read-write VM of the PRIMARY
            instance only.
          readOnly: true
          $ref: '#/components/schemas/Node'
        nodes:
          description: >-
            Output only. List of available read-only VMs in this instance,
            including the standby for a PRIMARY instance.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Node'
        queryInsightsConfig:
          description: Configuration for query insights.
          $ref: '#/components/schemas/QueryInsightsInstanceConfig'
        readPoolConfig:
          description: >-
            Read pool instance configuration. This is required if the value of
            instanceType is READ_POOL.
          $ref: '#/components/schemas/ReadPoolConfig'
        ipAddress:
          description: >-
            Output only. The IP address for the Instance. This is the connection
            endpoint for an end-user application.
          readOnly: true
          type: string
        publicIpAddress:
          description: >-
            Output only. The public IP addresses for the Instance. This is
            available ONLY when enable_public_ip is set. This is the connection
            endpoint for an end-user application.
          readOnly: true
          type: string
        reconciling:
          description: >-
            Output only. Reconciling
            (https://google.aip.dev/128#reconciliation). Set to true if the
            current state of Instance does not match the user's intended state,
            and the service is actively updating the resource to reconcile them.
            This can happen due to user-triggered updates or system actions like
            failover or maintenance.
          readOnly: true
          type: boolean
        etag:
          description: For Resource freshness validation (https://google.aip.dev/154)
          type: string
        annotations:
          description: >-
            Annotations to allow client tools to store small amount of arbitrary
            data. This is distinct from labels. https://google.aip.dev/128
          type: object
          additionalProperties:
            type: string
        clientConnectionConfig:
          description: Optional. Client connection specific configurations
          $ref: '#/components/schemas/ClientConnectionConfig'
        satisfiesPzs:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        pscInstanceConfig:
          description: >-
            Optional. The configuration for Private Service Connect (PSC) for
            the instance.
          $ref: '#/components/schemas/PscInstanceConfig'
        networkConfig:
          description: Optional. Instance level network configuration.
          $ref: '#/components/schemas/InstanceNetworkConfig'
        outboundPublicIpAddresses:
          description: >-
            Output only. All outbound public IP addresses configured for the
            instance.
          readOnly: true
          type: array
          items:
            type: string
    MachineConfig:
      id: MachineConfig
      description: MachineConfig describes the configuration of a machine.
      type: object
      properties:
        cpuCount:
          description: The number of CPU's in the VM instance.
          type: integer
          format: int32
    Node:
      id: Node
      description: >-
        Details of a single node in the instance. Nodes in an AlloyDB instance
        are ephemereal, they can change during update, failover, autohealing and
        resize operations.
      type: object
      properties:
        zoneId:
          description: The Compute Engine zone of the VM e.g. "us-central1-b".
          type: string
        id:
          description: The identifier of the VM e.g. "test-read-0601-407e52be-ms3l".
          type: string
        ip:
          description: The private IP address of the VM e.g. "10.57.0.34".
          type: string
        state:
          description: >-
            Determined by state of the compute VM and postgres-service health.
            Compute VM state can have values listed in
            https://cloud.google.com/compute/docs/instances/instance-life-cycle
            and postgres-service health can have values: HEALTHY and UNHEALTHY.
          type: string
    QueryInsightsInstanceConfig:
      id: QueryInsightsInstanceConfig
      description: QueryInsights Instance specific configuration.
      type: object
      properties:
        recordApplicationTags:
          description: >-
            Record application tags for an instance. This flag is turned "on" by
            default.
          type: boolean
        recordClientAddress:
          description: >-
            Record client address for an instance. Client address is PII
            information. This flag is turned "on" by default.
          type: boolean
        queryStringLength:
          description: >-
            Query string length. The default value is 1024. Any integer between
            256 and 4500 is considered valid.
          type: integer
          format: uint32
        queryPlansPerMinute:
          description: >-
            Number of query execution plans captured by Insights per minute for
            all queries combined. The default value is 5. Any integer between 0
            and 20 is considered valid.
          type: integer
          format: uint32
    ReadPoolConfig:
      id: ReadPoolConfig
      description: Configuration for a read pool instance.
      type: object
      properties:
        nodeCount:
          description: Read capacity, i.e. number of nodes in a read pool instance.
          type: integer
          format: int32
    ClientConnectionConfig:
      id: ClientConnectionConfig
      description: Client connection configuration
      type: object
      properties:
        requireConnectors:
          description: >-
            Optional. Configuration to enforce connectors only (ex: AuthProxy)
            connections to the database.
          type: boolean
        sslConfig:
          description: Optional. SSL config option for this instance.
          $ref: '#/components/schemas/SslConfig'
    PscInstanceConfig:
      id: PscInstanceConfig
      description: >-
        PscInstanceConfig contains PSC related configuration at an instance
        level.
      type: object
      properties:
        serviceAttachmentLink:
          description: >-
            Output only. The service attachment created when Private Service
            Connect (PSC) is enabled for the instance. The name of the resource
            will be in the format of `projects//regions//serviceAttachments/`
          readOnly: true
          type: string
        allowedConsumerProjects:
          description: >-
            Optional. List of consumer projects that are allowed to create PSC
            endpoints to service-attachments to this instance.
          type: array
          items:
            type: string
        pscDnsName:
          description: >-
            Output only. The DNS name of the instance for PSC connectivity. Name
            convention: ...alloydb-psc.goog
          readOnly: true
          type: string
    InstanceNetworkConfig:
      id: InstanceNetworkConfig
      description: Metadata related to instance level network configuration.
      type: object
      properties:
        authorizedExternalNetworks:
          description: >-
            Optional. A list of external network authorized to access this
            instance.
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedNetwork'
        enablePublicIp:
          description: Optional. Enabling public ip for the instance.
          type: boolean
        enableOutboundPublicIp:
          description: >-
            Optional. Enabling an outbound public IP address to support a
            database server sending requests out into the internet.
          type: boolean
    AuthorizedNetwork:
      id: AuthorizedNetwork
      description: AuthorizedNetwork contains metadata for an authorized network.
      type: object
      properties:
        cidrRange:
          description: CIDR range for one authorzied network of the instance.
          type: string
    FailoverInstanceRequest:
      id: FailoverInstanceRequest
      description: Message for triggering failover on an Instance
      type: object
      properties:
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes after the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
        validateOnly:
          description: >-
            Optional. If set, performs request validation (e.g. permission
            checks and any other type of validation), but do not actually
            execute the failover.
          type: boolean
    InjectFaultRequest:
      id: InjectFaultRequest
      description: Message for triggering fault injection on an instance
      type: object
      properties:
        faultType:
          description: Required. The type of fault to be injected in an instance.
          type: string
          enumDescriptions:
            - The fault type is unknown.
            - Stop the VM
          enum:
            - FAULT_TYPE_UNSPECIFIED
            - STOP_VM
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes after the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
        validateOnly:
          description: >-
            Optional. If set, performs request validation (e.g. permission
            checks and any other type of validation), but do not actually
            execute the fault injection.
          type: boolean
    RestartInstanceRequest:
      id: RestartInstanceRequest
      type: object
      properties:
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes after the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
        validateOnly:
          description: >-
            Optional. If set, performs request validation (e.g. permission
            checks and any other type of validation), but do not actually
            execute the restart.
          type: boolean
        nodeIds:
          description: >-
            Optional. Full name of the nodes as obtained from INSTANCE_VIEW_FULL
            to restart upon. Only applicable for read instances.
          type: array
          items:
            type: string
    ListBackupsResponse:
      id: ListBackupsResponse
      description: Message for response to listing Backups
      type: object
      properties:
        backups:
          description: The list of Backup
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Backup:
      id: Backup
      description: Message describing Backup object
      type: object
      properties:
        name:
          description: >-
            Output only. The name of the backup resource with the format: *
            projects/{project}/locations/{region}/backups/{backup_id} where the
            cluster and backup ID segments should satisfy the regex expression
            `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`, e.g. 1-63 characters of lowercase
            letters, numbers, and dashes, starting with a letter, and ending
            with a letter or number. For more details see
            https://google.aip.dev/122. The prefix of the backup resource name
            is the name of the parent resource: *
            projects/{project}/locations/{region}
          readOnly: true
          type: string
        displayName:
          description: User-settable and human-readable display name for the Backup.
          type: string
        uid:
          description: >-
            Output only. The system-generated UID of the resource. The UID is
            assigned when the resource is created, and it is retained until it
            is deleted.
          readOnly: true
          type: string
        createTime:
          description: Output only. Create time stamp
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Update time stamp
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: Output only. Delete time stamp
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Labels as key value pairs
          type: object
          additionalProperties:
            type: string
        state:
          description: Output only. The current state of the backup.
          readOnly: true
          type: string
          enumDescriptions:
            - The state of the backup is unknown.
            - The backup is ready.
            - The backup is creating.
            - The backup failed.
            - The backup is being deleted.
          enum:
            - STATE_UNSPECIFIED
            - READY
            - CREATING
            - FAILED
            - DELETING
        type:
          description: The backup type, which suggests the trigger for the backup.
          type: string
          enumDescriptions:
            - Backup Type is unknown.
            - >-
              ON_DEMAND backups that were triggered by the customer (e.g., not
              AUTOMATED).
            - >-
              AUTOMATED backups triggered by the automated backups scheduler
              pursuant to an automated backup policy.
            - >-
              CONTINUOUS backups triggered by the automated backups scheduler
              due to a continuous backup policy.
          enum:
            - TYPE_UNSPECIFIED
            - ON_DEMAND
            - AUTOMATED
            - CONTINUOUS
        description:
          description: User-provided description of the backup.
          type: string
        clusterUid:
          description: >-
            Output only. The system-generated UID of the cluster which was used
            to create this resource.
          readOnly: true
          type: string
        clusterName:
          description: >-
            Required. The full resource name of the backup source cluster (e.g.,
            projects/{project}/locations/{region}/clusters/{cluster_id}).
          type: string
        reconciling:
          description: >-
            Output only. Reconciling
            (https://google.aip.dev/128#reconciliation), if true, indicates that
            the service is actively updating the resource. This can happen due
            to user-triggered updates or system actions like failover or
            maintenance.
          readOnly: true
          type: boolean
        encryptionConfig:
          description: >-
            Optional. The encryption config can be specified to encrypt the
            backup with a customer-managed encryption key (CMEK). When this
            field is not specified, the backup will then use default encryption
            scheme to protect the user data.
          $ref: '#/components/schemas/EncryptionConfig'
        encryptionInfo:
          description: Output only. The encryption information for the backup.
          readOnly: true
          $ref: '#/components/schemas/EncryptionInfo'
        etag:
          description: For Resource freshness validation (https://google.aip.dev/154)
          type: string
        annotations:
          description: >-
            Annotations to allow client tools to store small amount of arbitrary
            data. This is distinct from labels. https://google.aip.dev/128
          type: object
          additionalProperties:
            type: string
        sizeBytes:
          description: Output only. The size of the backup in bytes.
          readOnly: true
          type: string
          format: int64
        expiryTime:
          description: >-
            Output only. The time at which after the backup is eligible to be
            garbage collected. It is the duration specified by the backup's
            retention policy, added to the backup's create_time.
          readOnly: true
          type: string
          format: google-datetime
        expiryQuantity:
          description: >-
            Output only. The QuantityBasedExpiry of the backup, specified by the
            backup's retention policy. Once the expiry quantity is over
            retention, the backup is eligible to be garbage collected.
          readOnly: true
          $ref: '#/components/schemas/QuantityBasedExpiry'
        satisfiesPzs:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        databaseVersion:
          description: >-
            Output only. The database engine major version of the cluster this
            backup was created from. Any restored cluster created from this
            backup will have the same database version.
          readOnly: true
          type: string
          enumDescriptions:
            - This is an unknown database version.
            - DEPRECATED - The database version is Postgres 13.
            - The database version is Postgres 14.
            - The database version is Postgres 15.
          enumDeprecated:
            - false
            - true
            - false
            - false
          enum:
            - DATABASE_VERSION_UNSPECIFIED
            - POSTGRES_13
            - POSTGRES_14
            - POSTGRES_15
    QuantityBasedExpiry:
      id: QuantityBasedExpiry
      description: >-
        A backup's position in a quantity-based retention queue, of backups with
        the same source cluster and type, with length, retention, specified by
        the backup's retention policy. Once the position is greater than the
        retention, the backup is eligible to be garbage collected. Example: 5
        backups from the same source cluster and type with a quantity-based
        retention of 3 and denoted by backup_id (position, retention). Safe:
        backup_5 (1, 3), backup_4, (2, 3), backup_3 (3, 3). Awaiting garbage
        collection: backup_2 (4, 3), backup_1 (5, 3)
      type: object
      properties:
        retentionCount:
          description: >-
            Output only. The backup's position among its backups with the same
            source cluster and type, by descending chronological order create
            time(i.e. newest first).
          readOnly: true
          type: integer
          format: int32
        totalRetentionCount:
          description: >-
            Output only. The length of the quantity-based queue, specified by
            the backup's retention policy.
          readOnly: true
          type: integer
          format: int32
    ListSupportedDatabaseFlagsResponse:
      id: ListSupportedDatabaseFlagsResponse
      description: Message for response to listing SupportedDatabaseFlags.
      type: object
      properties:
        supportedDatabaseFlags:
          description: The list of SupportedDatabaseFlags.
          type: array
          items:
            $ref: '#/components/schemas/SupportedDatabaseFlag'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    SupportedDatabaseFlag:
      id: SupportedDatabaseFlag
      description: >-
        SupportedDatabaseFlag gives general information about a database flag,
        like type and allowed values. This is a static value that is defined on
        the server side, and it cannot be modified by callers. To set the
        Database flags on a particular Instance, a caller should modify the
        Instance.database_flags field.
      type: object
      properties:
        stringRestrictions:
          description: Restriction on STRING type value.
          $ref: '#/components/schemas/StringRestrictions'
        integerRestrictions:
          description: Restriction on INTEGER type value.
          $ref: '#/components/schemas/IntegerRestrictions'
        name:
          description: >-
            The name of the flag resource, following Google Cloud conventions,
            e.g.: * projects/{project}/locations/{location}/flags/{flag} This
            field currently has no semantic meaning.
          type: string
        flagName:
          description: >-
            The name of the database flag, e.g. "max_allowed_packets". The is a
            possibly key for the Instance.database_flags map field.
          type: string
        valueType:
          type: string
          enumDescriptions:
            - This is an unknown flag type.
            - String type flag.
            - Integer type flag.
            - Float type flag.
            - Denotes that the flag does not accept any values.
          enum:
            - VALUE_TYPE_UNSPECIFIED
            - STRING
            - INTEGER
            - FLOAT
            - NONE
        acceptsMultipleValues:
          description: >-
            Whether the database flag accepts multiple values. If true, a
            comma-separated list of stringified values may be specified.
          type: boolean
        supportedDbVersions:
          description: Major database engine versions for which this flag is supported.
          type: array
          items:
            type: string
            enumDescriptions:
              - This is an unknown database version.
              - DEPRECATED - The database version is Postgres 13.
              - The database version is Postgres 14.
              - The database version is Postgres 15.
            enumDeprecated:
              - false
              - true
              - false
              - false
            enum:
              - DATABASE_VERSION_UNSPECIFIED
              - POSTGRES_13
              - POSTGRES_14
              - POSTGRES_15
        requiresDbRestart:
          description: >-
            Whether setting or updating this flag on an Instance requires a
            database restart. If a flag that requires database restart is set,
            the backend will automatically restart the database (making sure to
            satisfy any availability SLO's).
          type: boolean
    StringRestrictions:
      id: StringRestrictions
      description: Restrictions on STRING type values
      type: object
      properties:
        allowedValues:
          description: >-
            The list of allowed values, if bounded. This field will be empty if
            there is a unbounded number of allowed values.
          type: array
          items:
            type: string
    IntegerRestrictions:
      id: IntegerRestrictions
      description: Restrictions on INTEGER type values.
      type: object
      properties:
        minValue:
          description: The minimum value that can be specified, if applicable.
          type: string
          format: int64
        maxValue:
          description: The maximum value that can be specified, if applicable.
          type: string
          format: int64
    ConnectionInfo:
      id: ConnectionInfo
      description: ConnectionInfo singleton resource. https://google.aip.dev/156
      type: object
      properties:
        name:
          description: >-
            The name of the ConnectionInfo singleton resource, e.g.:
            projects/{project}/locations/{location}/clusters/*/instances/*/connectionInfo
            This field currently has no semantic meaning.
          type: string
        ipAddress:
          description: >-
            Output only. The private network IP address for the Instance. This
            is the default IP for the instance and is always created (even if
            enable_public_ip is set). This is the connection endpoint for an
            end-user application.
          readOnly: true
          type: string
        publicIpAddress:
          description: >-
            Output only. The public IP addresses for the Instance. This is
            available ONLY when enable_public_ip is set. This is the connection
            endpoint for an end-user application.
          readOnly: true
          type: string
        instanceUid:
          description: Output only. The unique ID of the Instance.
          readOnly: true
          type: string
    ListUsersResponse:
      id: ListUsersResponse
      description: Message for response to listing Users
      type: object
      properties:
        users:
          description: The list of User
          type: array
          items:
            $ref: '#/components/schemas/User'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    User:
      id: User
      description: Message describing User object.
      type: object
      properties:
        name:
          description: >-
            Output only. Name of the resource in the form of
            projects/{project}/locations/{location}/cluster/{cluster}/users/{user}.
          readOnly: true
          type: string
        password:
          description: Input only. Password for the user.
          type: string
        databaseRoles:
          description: >-
            Optional. List of database roles this user has. The database role
            strings are subject to the PostgreSQL naming conventions.
          type: array
          items:
            type: string
        userType:
          description: Optional. Type of this user.
          type: string
          enumDescriptions:
            - Unspecified user type.
            - >-
              The default user type that authenticates via password-based
              authentication.
            - Database user that can authenticate via IAM-Based authentication.
          enum:
            - USER_TYPE_UNSPECIFIED
            - ALLOYDB_BUILT_IN
            - ALLOYDB_IAM_USER
        keepExtraRoles:
          description: >-
            Input only. If the user already exists and it has additional roles,
            keep them granted.
          type: boolean
    GoogleCloudLocationListLocationsResponse:
      id: GoogleCloudLocationListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudLocationLocation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    GoogleCloudLocationLocation:
      id: GoogleCloudLocationLocation
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
    UpgradeClusterResponse:
      id: UpgradeClusterResponse
      description: >-
        UpgradeClusterResponse contains the response for upgrade cluster
        operation.
      type: object
      properties:
        status:
          description: Status of upgrade operation.
          type: string
          enumDescriptions:
            - Unspecified status.
            - Not started.
            - In progress.
            - Operation succeeded.
            - Operation failed.
            - Operation partially succeeded.
          enum:
            - STATUS_UNSPECIFIED
            - NOT_STARTED
            - IN_PROGRESS
            - SUCCESS
            - FAILED
            - PARTIAL_SUCCESS
        message:
          description: >-
            A user friendly message summarising the upgrade operation details
            and the next steps for the user if there is any.
          type: string
        clusterUpgradeDetails:
          description: >-
            Array of upgrade details for the current cluster and all the
            secondary clusters associated with this cluster.
          type: array
          items:
            $ref: '#/components/schemas/ClusterUpgradeDetails'
    ClusterUpgradeDetails:
      id: ClusterUpgradeDetails
      description: Upgrade details of a cluster. This cluster can be primary or secondary.
      type: object
      properties:
        name:
          description: Normalized name of the cluster
          type: string
        upgradeStatus:
          description: Upgrade status of the cluster.
          type: string
          enumDescriptions:
            - Unspecified status.
            - Not started.
            - In progress.
            - Operation succeeded.
            - Operation failed.
            - Operation partially succeeded.
          enum:
            - STATUS_UNSPECIFIED
            - NOT_STARTED
            - IN_PROGRESS
            - SUCCESS
            - FAILED
            - PARTIAL_SUCCESS
        clusterType:
          description: Cluster type which can either be primary or secondary.
          type: string
          enumDescriptions:
            - The type of the cluster is unknown.
            - Primary cluster that support read and write operations.
            - >-
              Secondary cluster that is replicating from another region. This
              only supports read.
          enum:
            - CLUSTER_TYPE_UNSPECIFIED
            - PRIMARY
            - SECONDARY
        databaseVersion:
          description: >-
            Database version of the cluster after the upgrade operation. This
            will be the target version if the upgrade was successful otherwise
            it remains the same as that before the upgrade operation.
          type: string
          enumDescriptions:
            - This is an unknown database version.
            - DEPRECATED - The database version is Postgres 13.
            - The database version is Postgres 14.
            - The database version is Postgres 15.
          enumDeprecated:
            - false
            - true
            - false
            - false
          enum:
            - DATABASE_VERSION_UNSPECIFIED
            - POSTGRES_13
            - POSTGRES_14
            - POSTGRES_15
        stageInfo:
          description: Array containing stage info associated with this cluster.
          type: array
          items:
            $ref: '#/components/schemas/StageInfo'
        instanceUpgradeDetails:
          description: >-
            Upgrade details of the instances directly associated with this
            cluster.
          type: array
          items:
            $ref: '#/components/schemas/InstanceUpgradeDetails'
    StageInfo:
      id: StageInfo
      description: Stage information for different stages in the upgrade process.
      type: object
      properties:
        stage:
          description: The stage.
          type: string
          enumDescriptions:
            - Unspecified stage.
            - Pre-upgrade custom checks, not covered by pg_upgrade.
            - Pre-upgrade pg_upgrade checks.
            - Clone the original cluster.
            - Upgrade the primary instance(downtime).
            - This stage is read pool upgrade.
            - Rollback in case of critical failures.
            - Cleanup.
          enum:
            - STAGE_UNSPECIFIED
            - ALLOYDB_PRECHECK
            - PG_UPGRADE_CHECK
            - PREPARE_FOR_UPGRADE
            - PRIMARY_INSTANCE_UPGRADE
            - READ_POOL_INSTANCES_UPGRADE
            - ROLLBACK
            - CLEANUP
        status:
          description: Status of the stage.
          type: string
          enumDescriptions:
            - Unspecified status.
            - Not started.
            - In progress.
            - Operation succeeded.
            - Operation failed.
            - Operation partially succeeded.
          enum:
            - STATUS_UNSPECIFIED
            - NOT_STARTED
            - IN_PROGRESS
            - SUCCESS
            - FAILED
            - PARTIAL_SUCCESS
        logsUrl:
          description: >-
            logs_url is the URL for the logs associated with a stage if that
            stage has logs. Right now, only three stages have logs:
            ALLOYDB_PRECHECK, PG_UPGRADE_CHECK, PRIMARY_INSTANCE_UPGRADE.
          type: string
    InstanceUpgradeDetails:
      id: InstanceUpgradeDetails
      description: Details regarding the upgrade of instaces associated with a cluster.
      type: object
      properties:
        name:
          description: Normalized name of the instance.
          type: string
        upgradeStatus:
          description: Upgrade status of the instance.
          type: string
          enumDescriptions:
            - Unspecified status.
            - Not started.
            - In progress.
            - Operation succeeded.
            - Operation failed.
            - Operation partially succeeded.
          enum:
            - STATUS_UNSPECIFIED
            - NOT_STARTED
            - IN_PROGRESS
            - SUCCESS
            - FAILED
            - PARTIAL_SUCCESS
        instanceType:
          description: Instance type.
          type: string
          enumDescriptions:
            - The type of the instance is unknown.
            - PRIMARY instances support read and write operations.
            - >-
              READ POOL instances support read operations only. Each read pool
              instance consists of one or more homogeneous nodes. * Read pool of
              size 1 can only have zonal availability. * Read pools with node
              count of 2 or more can have regional availability (nodes are
              present in 2 or more zones in a region).
            - >-
              SECONDARY instances support read operations only. SECONDARY
              instance is a cross-region read replica
          enum:
            - INSTANCE_TYPE_UNSPECIFIED
            - PRIMARY
            - READ_POOL
            - SECONDARY
    StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed:
      id: StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed
      description: >-
        DatabaseResourceFeed is the top level proto to be used to ingest
        different database resource level events into Condor platform.
      type: object
      properties:
        resourceId:
          description: >-
            Primary key associated with the Resource. resource_id is available
            in individual feed level as well.
          deprecated: true
          $ref: >-
            #/components/schemas/StorageDatabasecenterPartnerapiV1mainDatabaseResourceId
        feedTimestamp:
          description: Required. Timestamp when feed is generated.
          type: string
          format: google-datetime
        feedType:
          description: Required. Type feed to be ingested into condor
          type: string
          enumDescriptions:
            - ''
            - Database resource metadata feed from control plane
            - Database resource monitoring data
            - Database resource security health signal data
            - Database resource recommendation signal data
          enum:
            - FEEDTYPE_UNSPECIFIED
            - RESOURCE_METADATA
            - OBSERVABILITY_DATA
            - SECURITY_FINDING_DATA
            - RECOMMENDATION_SIGNAL_DATA
        resourceMetadata:
          $ref: >-
            #/components/schemas/StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata
        resourceHealthSignalData:
          $ref: >-
            #/components/schemas/StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData
        recommendationSignalData:
          $ref: >-
            #/components/schemas/StorageDatabasecenterPartnerapiV1mainDatabaseResourceRecommendationSignalData
        observabilityMetricData:
          $ref: >-
            #/components/schemas/StorageDatabasecenterPartnerapiV1mainObservabilityMetricData
    StorageDatabasecenterPartnerapiV1mainDatabaseResourceId:
      id: StorageDatabasecenterPartnerapiV1mainDatabaseResourceId
      description: >-
        DatabaseResourceId will serve as primary key for any resource ingestion
        event.
      type: object
      properties:
        provider:
          description: 'Required. Cloud provider name. Ex: GCP/AWS/Azure/OnPrem/SelfManaged'
          type: string
          enumDescriptions:
            - ''
            - Google cloud platform provider
            - Amazon web service
            - Azure web service
            - On-prem database resources.
            - >-
              Self-managed database provider. These are resources on a cloud
              platform, e.g., database resource installed in a GCE VM, but not a
              managed database service.
            - >-
              For the rest of the other categories. Other refers to the rest of
              other database service providers, this could be smaller cloud
              provider. This needs to be provided when the provider is known,
              but it is not present in the existing set of enum values.
          enum:
            - PROVIDER_UNSPECIFIED
            - GCP
            - AWS
            - AZURE
            - ONPREM
            - SELFMANAGED
            - PROVIDER_OTHER
        providerDescription:
          description: Optional. Needs to be used only when the provider is PROVIDER_OTHER.
          type: string
        uniqueId:
          description: >-
            Required. A service-local token that distinguishes this resource
            from other resources within the same service.
          type: string
        resourceType:
          description: >-
            Required. The type of resource this ID is identifying. Ex
            redis.googleapis.com/Instance, redis.googleapis.com/Cluster,
            alloydb.googleapis.com/Cluster, alloydb.googleapis.com/Instance,
            spanner.googleapis.com/Instance, spanner.googleapis.com/Database,
            firestore.googleapis.com/Database, sqladmin.googleapis.com/Instance,
            bigtableadmin.googleapis.com/Cluster,
            bigtableadmin.googleapis.com/Instance REQUIRED Please refer
            go/condor-common-datamodel
          type: string
    StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata:
      id: StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata
      description: Common model for database resource instance metadata.
      type: object
      properties:
        id:
          description: Required. Unique identifier for a Database resource
          $ref: >-
            #/components/schemas/StorageDatabasecenterPartnerapiV1mainDatabaseResourceId
        resourceName:
          description: >-
            Required. Different from DatabaseResourceId.unique_id, a resource
            name can be reused over time. That is, after a resource named "ABC"
            is deleted, the name "ABC" can be used to to create a new resource
            within the same source. Resource name to follow CAIS resource_name
            format as noted here go/condor-common-datamodel
          type: string
        primaryResourceId:
          description: >-
            Identifier for this resource's immediate parent/primary resource if
            the current resource is a replica or derived form of another
            Database resource. Else it would be NULL. REQUIRED if the immediate
            parent exists when first time resource is getting ingested,
            otherwise optional.
          $ref: >-
            #/components/schemas/StorageDatabasecenterPartnerapiV1mainDatabaseResourceId
        resourceContainer:
          description: >-
            Closest parent Cloud Resource Manager container of this resource. It
            must be resource name of a Cloud Resource Manager project with the
            format of "/", such as "projects/123". For GCP provided resources,
            number should be project number.
          type: string
        location:
          description: The resource location. REQUIRED
          type: string
        creationTime:
          description: >-
            The creation time of the resource, i.e. the time when resource is
            created and recorded in partner service.
          type: string
          format: google-datetime
        updationTime:
          description: >-
            The time at which the resource was updated and recorded at partner
            service.
          type: string
          format: google-datetime
        expectedState:
          description: >-
            The state that the instance is expected to be in. For example, an
            instance state can transition to UNHEALTHY due to wrong patch
            update, while the expected state will remain at the HEALTHY.
          type: string
          enumDescriptions:
            - ''
            - The instance is running.
            - Instance being created, updated, deleted or under maintenance
            - When instance is suspended
            - Instance is deleted.
            - For rest of the other category
          enum:
            - STATE_UNSPECIFIED
            - HEALTHY
            - UNHEALTHY
            - SUSPENDED
            - DELETED
            - STATE_OTHER
        currentState:
          description: Current state of the instance.
          type: string
          enumDescriptions:
            - ''
            - The instance is running.
            - Instance being created, updated, deleted or under maintenance
            - When instance is suspended
            - Instance is deleted.
            - For rest of the other category
          enum:
            - STATE_UNSPECIFIED
            - HEALTHY
            - UNHEALTHY
            - SUSPENDED
            - DELETED
            - STATE_OTHER
        instanceType:
          description: The type of the instance. Specified at creation time.
          type: string
          enumDescriptions:
            - ''
            - For rest of the other categories.
            - A regular primary database instance.
            - A cluster or an instance acting as a secondary.
            - An instance acting as a read-replica.
            - For rest of the other categories.
            - A regular primary database instance.
            - A cluster or an instance acting as a secondary.
            - An instance acting as a read-replica.
            - For rest of the other categories.
          enumDeprecated:
            - true
            - false
            - true
            - true
            - true
            - true
            - false
            - false
            - false
            - false
          enum:
            - INSTANCE_TYPE_UNSPECIFIED
            - SUB_RESOURCE_TYPE_UNSPECIFIED
            - PRIMARY
            - SECONDARY
            - READ_REPLICA
            - OTHER
            - SUB_RESOURCE_TYPE_PRIMARY
            - SUB_RESOURCE_TYPE_SECONDARY
            - SUB_RESOURCE_TYPE_READ_REPLICA
            - SUB_RESOURCE_TYPE_OTHER
        product:
          description: The product this resource represents.
          $ref: '#/components/schemas/StorageDatabasecenterProtoCommonProduct'
        availabilityConfiguration:
          description: Availability configuration for this instance
          $ref: >-
            #/components/schemas/StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration
        backupConfiguration:
          description: Backup configuration for this instance
          $ref: >-
            #/components/schemas/StorageDatabasecenterPartnerapiV1mainBackupConfiguration
        backupRun:
          description: Latest backup run information for this instance
          $ref: '#/components/schemas/StorageDatabasecenterPartnerapiV1mainBackupRun'
        customMetadata:
          description: Any custom metadata associated with the resource
          $ref: >-
            #/components/schemas/StorageDatabasecenterPartnerapiV1mainCustomMetadataData
        entitlements:
          description: Entitlements associated with the resource
          type: array
          items:
            $ref: >-
              #/components/schemas/StorageDatabasecenterPartnerapiV1mainEntitlement
        userLabelSet:
          description: User-provided labels associated with the resource
          $ref: '#/components/schemas/StorageDatabasecenterPartnerapiV1mainUserLabels'
        machineConfiguration:
          description: Machine configuration for this resource.
          $ref: >-
            #/components/schemas/StorageDatabasecenterPartnerapiV1mainMachineConfiguration
    StorageDatabasecenterProtoCommonProduct:
      id: StorageDatabasecenterProtoCommonProduct
      description: Product specification for Condor resources.
      type: object
      properties:
        type:
          description: >-
            Type of specific database product. It could be CloudSQL, AlloyDB
            etc..
          type: string
          enumDescriptions:
            - UNSPECIFIED means product type is not known or available.
            - Cloud SQL product area in GCP
            - Cloud SQL product area in GCP
            - AlloyDB product area in GCP
            - AlloyDB product area in GCP
            - Spanner product area in GCP
            - On premises database product.
            - On premises database product.
            - Memorystore product area in GCP
            - Bigtable product area in GCP
            - >-
              Other refers to rest of other product type. This is to be when
              product type is known, but it is not present in this enum.
            - Firestore product area in GCP.
          enumDeprecated:
            - false
            - false
            - true
            - false
            - true
            - false
            - false
            - true
            - false
            - false
            - false
            - false
          enum:
            - PRODUCT_TYPE_UNSPECIFIED
            - PRODUCT_TYPE_CLOUD_SQL
            - CLOUD_SQL
            - PRODUCT_TYPE_ALLOYDB
            - ALLOYDB
            - PRODUCT_TYPE_SPANNER
            - PRODUCT_TYPE_ON_PREM
            - ON_PREM
            - PRODUCT_TYPE_MEMORYSTORE
            - PRODUCT_TYPE_BIGTABLE
            - PRODUCT_TYPE_OTHER
            - PRODUCT_TYPE_FIRESTORE
        engine:
          description: The specific engine that the underlying database is running.
          type: string
          enumDescriptions:
            - UNSPECIFIED means engine type is not known or available.
            - MySQL binary running as an engine in the database instance.
            - MySQL binary running as engine in database instance.
            - Postgres binary running as engine in database instance.
            - Postgres binary running as engine in database instance.
            - SQLServer binary running as engine in database instance.
            - SQLServer binary running as engine in database instance.
            - Native database binary running as engine in instance.
            - Native database binary running as engine in instance.
            - Cloud Spanner with PostgreSQL dialect.
            - Cloud Spanner with Google SQL dialect.
            - Memorystore with Redis dialect.
            - Memorystore with Redis cluster dialect.
            - >-
              Other refers to rest of other database engine. This is to be when
              engine is known, but it is not present in this enum.
            - Firestore with native mode.
            - Firestore with datastore mode.
          enumDeprecated:
            - false
            - false
            - true
            - false
            - true
            - false
            - true
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
          enum:
            - ENGINE_UNSPECIFIED
            - ENGINE_MYSQL
            - MYSQL
            - ENGINE_POSTGRES
            - POSTGRES
            - ENGINE_SQL_SERVER
            - SQL_SERVER
            - ENGINE_NATIVE
            - NATIVE
            - ENGINE_CLOUD_SPANNER_WITH_POSTGRES_DIALECT
            - ENGINE_CLOUD_SPANNER_WITH_GOOGLESQL_DIALECT
            - ENGINE_MEMORYSTORE_FOR_REDIS
            - ENGINE_MEMORYSTORE_FOR_REDIS_CLUSTER
            - ENGINE_OTHER
            - ENGINE_FIRESTORE_WITH_NATIVE_MODE
            - ENGINE_FIRESTORE_WITH_DATASTORE_MODE
        version:
          description: >-
            Version of the underlying database engine. Example values: For
            MySQL, it could be "8.0", "5.7" etc.. For Postgres, it could be
            "14", "15" etc..
          type: string
    StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration:
      id: StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration
      description: Configuration for availability of database instance
      type: object
      properties:
        availabilityType:
          description: >-
            Availability type. Potential values: * `ZONAL`: The instance serves
            data from only one zone. Outages in that zone affect data
            accessibility. * `REGIONAL`: The instance can serve data from more
            than one zone in a region (it is highly available).
          type: string
          enumDescriptions:
            - ''
            - Zonal available instance.
            - Regional available instance.
            - Multi regional instance
            - For rest of the other category
          enum:
            - AVAILABILITY_TYPE_UNSPECIFIED
            - ZONAL
            - REGIONAL
            - MULTI_REGIONAL
            - AVAILABILITY_TYPE_OTHER
        externalReplicaConfigured:
          type: boolean
        promotableReplicaConfigured:
          type: boolean
        crossRegionReplicaConfigured:
          description: >-
            Checks for resources that are configured to have redundancy, and
            ongoing replication across regions
          type: boolean
        automaticFailoverRoutingConfigured:
          description: >-
            Checks for existence of (multi-cluster) routing configuration that
            allows automatic failover to a different zone/region in case of an
            outage. Applicable to Bigtable resources.
          type: boolean
    StorageDatabasecenterPartnerapiV1mainBackupConfiguration:
      id: StorageDatabasecenterPartnerapiV1mainBackupConfiguration
      description: Configuration for automatic backups
      type: object
      properties:
        automatedBackupEnabled:
          description: >-
            Whether customer visible automated backups are enabled on the
            instance.
          type: boolean
        backupRetentionSettings:
          description: Backup retention settings.
          $ref: >-
            #/components/schemas/StorageDatabasecenterPartnerapiV1mainRetentionSettings
        pointInTimeRecoveryEnabled:
          description: >-
            Whether point-in-time recovery is enabled. This is optional field,
            if the database service does not have this feature or metadata is
            not available in control plane, this can be omitted.
          type: boolean
    StorageDatabasecenterPartnerapiV1mainRetentionSettings:
      id: StorageDatabasecenterPartnerapiV1mainRetentionSettings
      type: object
      properties:
        retentionUnit:
          description: The unit that 'retained_backups' represents.
          type: string
          enumDescriptions:
            - Backup retention unit is unspecified, will be treated as COUNT.
            - >-
              Retention will be by count, eg. "retain the most recent 7
              backups".
            - Retention will be by Time, eg. "retain the last 7 days backups".
            - For rest of the other category
          enum:
            - RETENTION_UNIT_UNSPECIFIED
            - COUNT
            - TIME
            - RETENTION_UNIT_OTHER
        timeBasedRetention:
          type: string
          format: google-duration
        quantityBasedRetention:
          type: integer
          format: int32
    StorageDatabasecenterPartnerapiV1mainBackupRun:
      id: StorageDatabasecenterPartnerapiV1mainBackupRun
      description: A backup run.
      type: object
      properties:
        startTime:
          description: The time the backup operation started. REQUIRED
          type: string
          format: google-datetime
        endTime:
          description: The time the backup operation completed. REQUIRED
          type: string
          format: google-datetime
        status:
          description: The status of this run. REQUIRED
          type: string
          enumDescriptions:
            - ''
            - The backup was successful.
            - The backup was unsuccessful.
          enum:
            - STATUS_UNSPECIFIED
            - SUCCESSFUL
            - FAILED
        error:
          description: >-
            Information about why the backup operation failed. This is only
            present if the run has the FAILED status. OPTIONAL
          $ref: >-
            #/components/schemas/StorageDatabasecenterPartnerapiV1mainOperationError
    StorageDatabasecenterPartnerapiV1mainOperationError:
      id: StorageDatabasecenterPartnerapiV1mainOperationError
      description: An error that occurred during a backup creation operation.
      type: object
      properties:
        code:
          description: Identifies the specific error that occurred. REQUIRED
          type: string
        message:
          description: Additional information about the error encountered. REQUIRED
          type: string
        errorType:
          type: string
          enumDescriptions:
            - UNSPECIFIED means product type is not known or available.
            - >-
              key destroyed, expired, not found, unreachable or permission
              denied.
            - Database is not accessible
            - >-
              The zone or region does not have sufficient resources to handle
              the request at the moment
            - User initiated cancellation
            - SQL server specific error
            - Any other internal error.
          enum:
            - OPERATION_ERROR_TYPE_UNSPECIFIED
            - KMS_KEY_ERROR
            - DATABASE_ERROR
            - STOCKOUT_ERROR
            - CANCELLATION_ERROR
            - SQLSERVER_ERROR
            - INTERNAL_ERROR
    StorageDatabasecenterPartnerapiV1mainCustomMetadataData:
      id: StorageDatabasecenterPartnerapiV1mainCustomMetadataData
      description: >-
        Any custom metadata associated with the resource. e.g. A spanner
        instance can have multiple databases with its own unique metadata.
        Information for these individual databases can be captured in custom
        metadata data
      type: object
      properties:
        internalResourceMetadata:
          description: >-
            Metadata for individual internal resources in an instance. e.g.
            spanner instance can have multiple databases with unique
            configuration.
          type: array
          items:
            $ref: >-
              #/components/schemas/StorageDatabasecenterPartnerapiV1mainInternalResourceMetadata
    StorageDatabasecenterPartnerapiV1mainInternalResourceMetadata:
      id: StorageDatabasecenterPartnerapiV1mainInternalResourceMetadata
      description: >-
        Metadata for individual internal resources in an instance. e.g. spanner
        instance can have multiple databases with unique configuration settings.
        Similarly bigtable can have multiple clusters within same bigtable
        instance.
      type: object
      properties:
        resourceId:
          $ref: >-
            #/components/schemas/StorageDatabasecenterPartnerapiV1mainDatabaseResourceId
        resourceName:
          description: >-
            Required. internal resource name for spanner this will be database
            name
            e.g."spanner.googleapis.com/projects/123/abc/instances/inst1/databases/db1"
          type: string
        product:
          $ref: '#/components/schemas/StorageDatabasecenterProtoCommonProduct'
        backupConfiguration:
          description: Backup configuration for this database
          $ref: >-
            #/components/schemas/StorageDatabasecenterPartnerapiV1mainBackupConfiguration
        backupRun:
          description: Information about the last backup attempt for this database
          $ref: '#/components/schemas/StorageDatabasecenterPartnerapiV1mainBackupRun'
    StorageDatabasecenterPartnerapiV1mainEntitlement:
      id: StorageDatabasecenterPartnerapiV1mainEntitlement
      description: >-
        Proto representing the access that a user has to a specific
        feature/service. NextId: 3.
      type: object
      properties:
        type:
          description: An enum that represents the type of this entitlement.
          type: string
          enumDescriptions:
            - ''
            - The root entitlement representing Gemini package ownership.
          enum:
            - ENTITLEMENT_TYPE_UNSPECIFIED
            - GEMINI
        entitlementState:
          description: The current state of user's accessibility to a feature/benefit.
          type: string
          enumDescriptions:
            - ''
            - >-
              User is entitled to a feature/benefit, but whether it has been
              successfully provisioned is decided by provisioning state.
            - >-
              User is entitled to a feature/benefit, but it was requested to be
              revoked. Whether the revoke has been successful is decided by
              provisioning state.
          enum:
            - ENTITLEMENT_STATE_UNSPECIFIED
            - ENTITLED
            - REVOKED
    StorageDatabasecenterPartnerapiV1mainUserLabels:
      id: StorageDatabasecenterPartnerapiV1mainUserLabels
      description: >-
        Message type for storing user labels. User labels are used to tag App
        Engine resources, allowing users to search for resources matching a set
        of labels and to aggregate usage data by labels.
      type: object
      properties:
        labels:
          type: object
          additionalProperties:
            type: string
    StorageDatabasecenterPartnerapiV1mainMachineConfiguration:
      id: StorageDatabasecenterPartnerapiV1mainMachineConfiguration
      description: >-
        MachineConfiguration describes the configuration of a machine specific
        to Database Resource.
      type: object
      properties:
        cpuCount:
          description: >-
            The number of CPUs. TODO(b/342344482, b/342346271) add proto
            validations again after bug fix.
          type: integer
          format: int32
        memorySizeInBytes:
          description: >-
            Memory size in bytes. TODO(b/342344482, b/342346271) add proto
            validations again after bug fix.
          type: string
          format: int64
    StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData:
      id: StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData
      description: Common model for database resource health signal data.
      type: object
      properties:
        signalId:
          description: >-
            Required. Unique identifier for the signal. This is an unique id
            which would be mainatined by partner to identify a signal.
          type: string
        name:
          description: >-
            Required. The name of the signal, ex: PUBLIC_SQL_INSTANCE,
            SQL_LOG_ERROR_VERBOSITY etc.
          type: string
        externalUri:
          description: >-
            The external-uri of the signal, using which more information about
            this signal can be obtained. In GCP, this will take user to SCC page
            to get more details about signals.
          type: string
        resourceName:
          description: >-
            Required. Database resource name associated with the signal.
            Resource name to follow CAIS resource_name format as noted here
            go/condor-common-datamodel
          type: string
        provider:
          description: 'Cloud provider name. Ex: GCP/AWS/Azure/OnPrem/SelfManaged'
          type: string
          enumDescriptions:
            - ''
            - Google cloud platform provider
            - Amazon web service
            - Azure web service
            - On-prem database resources.
            - >-
              Self-managed database provider. These are resources on a cloud
              platform, e.g., database resource installed in a GCE VM, but not a
              managed database service.
            - >-
              For the rest of the other categories. Other refers to the rest of
              other database service providers, this could be smaller cloud
              provider. This needs to be provided when the provider is known,
              but it is not present in the existing set of enum values.
          enum:
            - PROVIDER_UNSPECIFIED
            - GCP
            - AWS
            - AZURE
            - ONPREM
            - SELFMANAGED
            - PROVIDER_OTHER
        resourceContainer:
          description: >-
            Closest parent container of this resource. In GCP, 'container'
            refers to a Cloud Resource Manager project. It must be resource name
            of a Cloud Resource Manager project with the format of "provider//",
            such as "projects/123". For GCP provided resources, number should be
            project number.
          type: string
        description:
          description: Description associated with signal
          type: string
        eventTime:
          description: >-
            Required. The last time at which the event described by this signal
            took place
          type: string
          format: google-datetime
        state:
          type: string
          enumDescriptions:
            - Unspecified state.
            - The signal requires attention and has not been addressed yet.
            - >-
              The signal has been fixed, triaged as a non-issue or otherwise
              addressed and is no longer active.
            - The signal has been muted.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - RESOLVED
            - MUTED
        signalClass:
          description: >-
            Required. The class of the signal, such as if it's a THREAT or
            VULNERABILITY.
          type: string
          enumDescriptions:
            - Unspecified signal class.
            - Describes unwanted or malicious activity.
            - >-
              Describes a potential weakness in software that increases risk to
              Confidentiality & Integrity & Availability.
            - >-
              Describes a potential weakness in cloud resource/asset
              configuration that increases risk.
            - >-
              Describes a security observation that is for informational
              purposes.
            - Describes an error that prevents some SCC functionality.
          enum:
            - CLASS_UNSPECIFIED
            - THREAT
            - VULNERABILITY
            - MISCONFIGURATION
            - OBSERVATION
            - ERROR
        signalSeverity:
          description: The severity of the signal, such as if it's a HIGH or LOW severity.
          type: string
          enumDescriptions:
            - >-
              This value is used for findings when a source doesn't write a
              severity value.
            - >-
              A critical vulnerability is easily discoverable by an external
              actor, exploitable.
            - >-
              A high risk vulnerability can be easily discovered and exploited
              in combination with other vulnerabilities.
            - >-
              A medium risk vulnerability could be used by an actor to gain
              access to resources or privileges that enable them to eventually
              gain access and the ability to execute arbitrary code or
              exfiltrate data.
            - >-
              A low risk vulnerability hampers a security organization's ability
              to detect vulnerabilities or active threats in their deployment.
          enum:
            - SIGNAL_SEVERITY_UNSPECIFIED
            - CRITICAL
            - HIGH
            - MEDIUM
            - LOW
        compliance:
          description: >-
            Industry standards associated with this signal; if this signal is an
            issue, that could be a violation of the associated industry
            standard(s). For example, AUTO_BACKUP_DISABLED signal is associated
            with CIS GCP 1.1, CIS GCP 1.2, CIS GCP 1.3, NIST 800-53 and
            ISO-27001 compliance standards. If a database resource does not have
            automated backup enable, it will violate these following industry
            standards.
          type: array
          items:
            $ref: >-
              #/components/schemas/StorageDatabasecenterPartnerapiV1mainCompliance
        additionalMetadata:
          description: Any other additional metadata
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        signalType:
          description: >-
            Required. Type of signal, for example,
            `AVAILABLE_IN_MULTIPLE_ZONES`, `LOGGING_MOST_ERRORS`, etc.
          type: string
          enumDescriptions:
            - Unspecified.
            - >-
              Represents if a resource is protected by automatic failover.
              Checks for resources that are configured to have redundancy within
              a region that enables automatic failover.
            - >-
              Represents if a group is replicating across regions. Checks for
              resources that are configured to have redundancy, and ongoing
              replication, across regions.
            - Represents if the resource is available in multiple zones or not.
            - Represents if a resource is available in multiple regions.
            - Represents if a resource has a promotable replica.
            - Represents if a resource has an automated backup policy.
            - Represents if a resources has a short backup retention period.
            - Represents if the last backup of a resource failed.
            - >-
              Represents if the last backup of a resource is older than some
              threshold value.
            - Represents if a resource violates CIS GCP Foundation 2.0.
            - Represents if a resource violates CIS GCP Foundation 1.3.
            - Represents if a resource violates CIS GCP Foundation 1.2.
            - Represents if a resource violates CIS GCP Foundation 1.1.
            - Represents if a resource violates CIS GCP Foundation 1.0.
            - Represents if a resource violates CIS Controls 8.0.
            - Represents if a resource violates NIST 800-53.
            - Represents if a resource violates NIST 800-53 R5.
            - >-
              Represents if a resource violates NIST Cybersecurity Framework
              1.0.
            - Represents if a resource violates ISO-27001.
            - Represents if a resource violates ISO 27001 2022.
            - Represents if a resource violates PCI-DSS v3.2.1.
            - Represents if a resource violates PCI-DSS v4.0.
            - Represents if a resource violates Cloud Controls Matrix v4.0.
            - Represents if a resource violates HIPAA.
            - Represents if a resource violates SOC2 v2017.
            - >-
              Represents if log_checkpoints database flag for a Cloud SQL for
              PostgreSQL instance is not set to on.
            - >-
              Represents if the log_duration database flag for a Cloud SQL for
              PostgreSQL instance is not set to on.
            - >-
              Represents if the log_error_verbosity database flag for a Cloud
              SQL for PostgreSQL instance is not set to default or stricter
              (default or terse).
            - >-
              Represents if the log_lock_waits database flag for a Cloud SQL for
              PostgreSQL instance is not set to on.
            - >-
              Represents if the log_min_error_statement database flag for a
              Cloud SQL for PostgreSQL instance is not set appropriately.
            - >-
              Represents if the log_min_error_statement database flag for a
              Cloud SQL for PostgreSQL instance does not have an appropriate
              severity level.
            - >-
              Represents if the log_min_messages database flag for a Cloud SQL
              for PostgreSQL instance is not set to warning or another
              recommended value.
            - >-
              Represents if the databaseFlags property of instance metadata for
              the log_executor_status field is set to on.
            - >-
              Represents if the log_hostname database flag for a Cloud SQL for
              PostgreSQL instance is not set to off.
            - >-
              Represents if the log_parser_stats database flag for a Cloud SQL
              for PostgreSQL instance is not set to off.
            - >-
              Represents if the log_planner_stats database flag for a Cloud SQL
              for PostgreSQL instance is not set to off.
            - >-
              Represents if the log_statement database flag for a Cloud SQL for
              PostgreSQL instance is not set to DDL (all data definition
              statements).
            - >-
              Represents if the log_statement_stats database flag for a Cloud
              SQL for PostgreSQL instance is not set to off.
            - >-
              Represents if the log_temp_files database flag for a Cloud SQL for
              PostgreSQL instance is not set to "0". (NOTE: 0 = ON)
            - >-
              Represents if the user connections database flag for a Cloud SQL
              for SQL Server instance is configured.
            - >-
              Represents if the user options database flag for Cloud SQL SQL
              Server instance is configured or not.
            - Represents if a resource is exposed to public access.
            - >-
              Represents if a resources requires all incoming connections to use
              SSL or not.
            - >-
              Represents if a Cloud SQL database has a password configured for
              the root account or not.
            - >-
              Represents if a Cloud SQL database has a weak password configured
              for the root account.
            - >-
              Represents if a SQL database instance is not encrypted with
              customer-managed encryption keys (CMEK).
            - >-
              Represents if The contained database authentication database flag
              for a Cloud SQL for SQL Server instance is not set to off.
            - >-
              Represents if the cross_db_ownership_chaining database flag for a
              Cloud SQL for SQL Server instance is not set to off.
            - >-
              Represents if he external scripts enabled database flag for a
              Cloud SQL for SQL Server instance is not set to off.
            - >-
              Represents if the local_infile database flag for a Cloud SQL for
              MySQL instance is not set to off.
            - >-
              Represents if the log_connections database flag for a Cloud SQL
              for PostgreSQL instance is not set to on.
            - >-
              Represents if the log_disconnections database flag for a Cloud SQL
              for PostgreSQL instance is not set to on.
            - >-
              Represents if the log_min_duration_statement database flag for a
              Cloud SQL for PostgreSQL instance is not set to -1.
            - >-
              Represents if the remote access database flag for a Cloud SQL for
              SQL Server instance is not set to off.
            - >-
              Represents if the skip_show_database database flag for a Cloud SQL
              for MySQL instance is not set to on.
            - >-
              Represents if the 3625 (trace flag) database flag for a Cloud SQL
              for SQL Server instance is not set to on.
            - Represents if public IP is enabled.
            - Represents Idle instance helps to reduce costs.
            - >-
              Represents instances that are unnecessarily large for given
              workload.
            - Represents high number of concurrently opened tables.
            - Represents high table count close to SLA limit.
            - Represents high number of unvacuumed transactions
            - Represents need for more CPU and/or memory
            - Represents out of disk.
            - Represents server certificate is near expiry.
            - Represents database auditing is disabled.
            - Represents not restricted to authorized networks.
            - Represents violate org policy restrict public ip.
            - Cluster nearing quota limit
            - No password policy set on resources
            - Performance impact of connections settings
            - Performance impact of temporary tables settings
            - Performance impact of transaction logs settings
            - Performance impact of high joins without indexes
            - >-
              Detects events where a Cloud SQL superuser (postgres for
              PostgreSQL servers or root for MySQL users) writes to non-system
              tables.
            - >-
              Detects events where a database user or role has been granted all
              privileges to a database, or to all tables, procedures, or
              functions in a schema.
            - >-
              Detects if database instance data exported to a Cloud Storage
              bucket outside of the organization.
            - >-
              Detects if database instance data exported to a Cloud Storage
              bucket that is owned by the organization and is publicly
              accessible.
          enumDeprecated:
            - false
            - false
            - false
            - true
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
          enum:
            - SIGNAL_TYPE_UNSPECIFIED
            - SIGNAL_TYPE_NOT_PROTECTED_BY_AUTOMATIC_FAILOVER
            - SIGNAL_TYPE_GROUP_NOT_REPLICATING_ACROSS_REGIONS
            - SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_ZONES
            - SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_REGIONS
            - SIGNAL_TYPE_NO_PROMOTABLE_REPLICA
            - SIGNAL_TYPE_NO_AUTOMATED_BACKUP_POLICY
            - SIGNAL_TYPE_SHORT_BACKUP_RETENTION
            - SIGNAL_TYPE_LAST_BACKUP_FAILED
            - SIGNAL_TYPE_LAST_BACKUP_OLD
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_2_0
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_3
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_2
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_1
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_0
            - SIGNAL_TYPE_VIOLATES_CIS_CONTROLS_V8_0
            - SIGNAL_TYPE_VIOLATES_NIST_800_53
            - SIGNAL_TYPE_VIOLATES_NIST_800_53_R5
            - SIGNAL_TYPE_VIOLATES_NIST_CYBERSECURITY_FRAMEWORK_V1_0
            - SIGNAL_TYPE_VIOLATES_ISO_27001
            - SIGNAL_TYPE_VIOLATES_ISO_27001_V2022
            - SIGNAL_TYPE_VIOLATES_PCI_DSS_V3_2_1
            - SIGNAL_TYPE_VIOLATES_PCI_DSS_V4_0
            - SIGNAL_TYPE_VIOLATES_CLOUD_CONTROLS_MATRIX_V4
            - SIGNAL_TYPE_VIOLATES_HIPAA
            - SIGNAL_TYPE_VIOLATES_SOC2_V2017
            - SIGNAL_TYPE_LOGS_NOT_OPTIMIZED_FOR_TROUBLESHOOTING
            - SIGNAL_TYPE_QUERY_DURATIONS_NOT_LOGGED
            - SIGNAL_TYPE_VERBOSE_ERROR_LOGGING
            - SIGNAL_TYPE_QUERY_LOCK_WAITS_NOT_LOGGED
            - SIGNAL_TYPE_LOGGING_MOST_ERRORS
            - SIGNAL_TYPE_LOGGING_ONLY_CRITICAL_ERRORS
            - SIGNAL_TYPE_MINIMAL_ERROR_LOGGING
            - SIGNAL_TYPE_QUERY_STATISTICS_LOGGED
            - SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_CLIENT_HOSTNAME
            - SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PARSER_STATISTICS
            - SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PLANNER_STATISTICS
            - SIGNAL_TYPE_NOT_LOGGING_ONLY_DDL_STATEMENTS
            - SIGNAL_TYPE_LOGGING_QUERY_STATISTICS
            - SIGNAL_TYPE_NOT_LOGGING_TEMPORARY_FILES
            - SIGNAL_TYPE_CONNECTION_MAX_NOT_CONFIGURED
            - SIGNAL_TYPE_USER_OPTIONS_CONFIGURED
            - SIGNAL_TYPE_EXPOSED_TO_PUBLIC_ACCESS
            - SIGNAL_TYPE_UNENCRYPTED_CONNECTIONS
            - SIGNAL_TYPE_NO_ROOT_PASSWORD
            - SIGNAL_TYPE_WEAK_ROOT_PASSWORD
            - SIGNAL_TYPE_ENCRYPTION_KEY_NOT_CUSTOMER_MANAGED
            - SIGNAL_TYPE_SERVER_AUTHENTICATION_NOT_REQUIRED
            - SIGNAL_TYPE_EXPOSED_BY_OWNERSHIP_CHAINING
            - SIGNAL_TYPE_EXPOSED_TO_EXTERNAL_SCRIPTS
            - SIGNAL_TYPE_EXPOSED_TO_LOCAL_DATA_LOADS
            - SIGNAL_TYPE_CONNECTION_ATTEMPTS_NOT_LOGGED
            - SIGNAL_TYPE_DISCONNECTIONS_NOT_LOGGED
            - SIGNAL_TYPE_LOGGING_EXCESSIVE_STATEMENT_INFO
            - SIGNAL_TYPE_EXPOSED_TO_REMOTE_ACCESS
            - SIGNAL_TYPE_DATABASE_NAMES_EXPOSED
            - SIGNAL_TYPE_SENSITIVE_TRACE_INFO_NOT_MASKED
            - SIGNAL_TYPE_PUBLIC_IP_ENABLED
            - SIGNAL_TYPE_IDLE
            - SIGNAL_TYPE_OVERPROVISIONED
            - SIGNAL_TYPE_HIGH_NUMBER_OF_OPEN_TABLES
            - SIGNAL_TYPE_HIGH_NUMBER_OF_TABLES
            - SIGNAL_TYPE_HIGH_TRANSACTION_ID_UTILIZATION
            - SIGNAL_TYPE_UNDERPROVISIONED
            - SIGNAL_TYPE_OUT_OF_DISK
            - SIGNAL_TYPE_SERVER_CERTIFICATE_NEAR_EXPIRY
            - SIGNAL_TYPE_DATABASE_AUDITING_DISABLED
            - SIGNAL_TYPE_RESTRICT_AUTHORIZED_NETWORKS
            - SIGNAL_TYPE_VIOLATE_POLICY_RESTRICT_PUBLIC_IP
            - SIGNAL_TYPE_QUOTA_LIMIT
            - SIGNAL_TYPE_NO_PASSWORD_POLICY
            - SIGNAL_TYPE_CONNECTIONS_PERFORMANCE_IMPACT
            - SIGNAL_TYPE_TMP_TABLES_PERFORMANCE_IMPACT
            - SIGNAL_TYPE_TRANS_LOGS_PERFORMANCE_IMPACT
            - SIGNAL_TYPE_HIGH_JOINS_WITHOUT_INDEXES
            - SIGNAL_TYPE_SUPERUSER_WRITING_TO_USER_TABLES
            - SIGNAL_TYPE_USER_GRANTED_ALL_PERMISSIONS
            - SIGNAL_TYPE_DATA_EXPORT_TO_EXTERNAL_CLOUD_STORAGE_BUCKET
            - SIGNAL_TYPE_DATA_EXPORT_TO_PUBLIC_CLOUD_STORAGE_BUCKET
    StorageDatabasecenterPartnerapiV1mainCompliance:
      id: StorageDatabasecenterPartnerapiV1mainCompliance
      description: >-
        Contains compliance information about a security standard indicating
        unmet recommendations.
      type: object
      properties:
        standard:
          description: >-
            Industry-wide compliance standards or benchmarks, such as CIS, PCI,
            and OWASP.
          type: string
        version:
          description: Version of the standard or benchmark, for example, 1.1
          type: string
    StorageDatabasecenterPartnerapiV1mainDatabaseResourceRecommendationSignalData:
      id: >-
        StorageDatabasecenterPartnerapiV1mainDatabaseResourceRecommendationSignalData
      description: Common model for database resource recommendation signal data.
      type: object
      properties:
        resourceName:
          description: >-
            Required. Database resource name associated with the signal.
            Resource name to follow CAIS resource_name format as noted here
            go/condor-common-datamodel
          type: string
        signalType:
          description: >-
            Required. Type of signal, for example, `SIGNAL_TYPE_IDLE`,
            `SIGNAL_TYPE_HIGH_NUMBER_OF_TABLES`, etc.
          type: string
          enumDescriptions:
            - Unspecified.
            - >-
              Represents if a resource is protected by automatic failover.
              Checks for resources that are configured to have redundancy within
              a region that enables automatic failover.
            - >-
              Represents if a group is replicating across regions. Checks for
              resources that are configured to have redundancy, and ongoing
              replication, across regions.
            - Represents if the resource is available in multiple zones or not.
            - Represents if a resource is available in multiple regions.
            - Represents if a resource has a promotable replica.
            - Represents if a resource has an automated backup policy.
            - Represents if a resources has a short backup retention period.
            - Represents if the last backup of a resource failed.
            - >-
              Represents if the last backup of a resource is older than some
              threshold value.
            - Represents if a resource violates CIS GCP Foundation 2.0.
            - Represents if a resource violates CIS GCP Foundation 1.3.
            - Represents if a resource violates CIS GCP Foundation 1.2.
            - Represents if a resource violates CIS GCP Foundation 1.1.
            - Represents if a resource violates CIS GCP Foundation 1.0.
            - Represents if a resource violates CIS Controls 8.0.
            - Represents if a resource violates NIST 800-53.
            - Represents if a resource violates NIST 800-53 R5.
            - >-
              Represents if a resource violates NIST Cybersecurity Framework
              1.0.
            - Represents if a resource violates ISO-27001.
            - Represents if a resource violates ISO 27001 2022.
            - Represents if a resource violates PCI-DSS v3.2.1.
            - Represents if a resource violates PCI-DSS v4.0.
            - Represents if a resource violates Cloud Controls Matrix v4.0.
            - Represents if a resource violates HIPAA.
            - Represents if a resource violates SOC2 v2017.
            - >-
              Represents if log_checkpoints database flag for a Cloud SQL for
              PostgreSQL instance is not set to on.
            - >-
              Represents if the log_duration database flag for a Cloud SQL for
              PostgreSQL instance is not set to on.
            - >-
              Represents if the log_error_verbosity database flag for a Cloud
              SQL for PostgreSQL instance is not set to default or stricter
              (default or terse).
            - >-
              Represents if the log_lock_waits database flag for a Cloud SQL for
              PostgreSQL instance is not set to on.
            - >-
              Represents if the log_min_error_statement database flag for a
              Cloud SQL for PostgreSQL instance is not set appropriately.
            - >-
              Represents if the log_min_error_statement database flag for a
              Cloud SQL for PostgreSQL instance does not have an appropriate
              severity level.
            - >-
              Represents if the log_min_messages database flag for a Cloud SQL
              for PostgreSQL instance is not set to warning or another
              recommended value.
            - >-
              Represents if the databaseFlags property of instance metadata for
              the log_executor_status field is set to on.
            - >-
              Represents if the log_hostname database flag for a Cloud SQL for
              PostgreSQL instance is not set to off.
            - >-
              Represents if the log_parser_stats database flag for a Cloud SQL
              for PostgreSQL instance is not set to off.
            - >-
              Represents if the log_planner_stats database flag for a Cloud SQL
              for PostgreSQL instance is not set to off.
            - >-
              Represents if the log_statement database flag for a Cloud SQL for
              PostgreSQL instance is not set to DDL (all data definition
              statements).
            - >-
              Represents if the log_statement_stats database flag for a Cloud
              SQL for PostgreSQL instance is not set to off.
            - >-
              Represents if the log_temp_files database flag for a Cloud SQL for
              PostgreSQL instance is not set to "0". (NOTE: 0 = ON)
            - >-
              Represents if the user connections database flag for a Cloud SQL
              for SQL Server instance is configured.
            - >-
              Represents if the user options database flag for Cloud SQL SQL
              Server instance is configured or not.
            - Represents if a resource is exposed to public access.
            - >-
              Represents if a resources requires all incoming connections to use
              SSL or not.
            - >-
              Represents if a Cloud SQL database has a password configured for
              the root account or not.
            - >-
              Represents if a Cloud SQL database has a weak password configured
              for the root account.
            - >-
              Represents if a SQL database instance is not encrypted with
              customer-managed encryption keys (CMEK).
            - >-
              Represents if The contained database authentication database flag
              for a Cloud SQL for SQL Server instance is not set to off.
            - >-
              Represents if the cross_db_ownership_chaining database flag for a
              Cloud SQL for SQL Server instance is not set to off.
            - >-
              Represents if he external scripts enabled database flag for a
              Cloud SQL for SQL Server instance is not set to off.
            - >-
              Represents if the local_infile database flag for a Cloud SQL for
              MySQL instance is not set to off.
            - >-
              Represents if the log_connections database flag for a Cloud SQL
              for PostgreSQL instance is not set to on.
            - >-
              Represents if the log_disconnections database flag for a Cloud SQL
              for PostgreSQL instance is not set to on.
            - >-
              Represents if the log_min_duration_statement database flag for a
              Cloud SQL for PostgreSQL instance is not set to -1.
            - >-
              Represents if the remote access database flag for a Cloud SQL for
              SQL Server instance is not set to off.
            - >-
              Represents if the skip_show_database database flag for a Cloud SQL
              for MySQL instance is not set to on.
            - >-
              Represents if the 3625 (trace flag) database flag for a Cloud SQL
              for SQL Server instance is not set to on.
            - Represents if public IP is enabled.
            - Represents Idle instance helps to reduce costs.
            - >-
              Represents instances that are unnecessarily large for given
              workload.
            - Represents high number of concurrently opened tables.
            - Represents high table count close to SLA limit.
            - Represents high number of unvacuumed transactions
            - Represents need for more CPU and/or memory
            - Represents out of disk.
            - Represents server certificate is near expiry.
            - Represents database auditing is disabled.
            - Represents not restricted to authorized networks.
            - Represents violate org policy restrict public ip.
            - Cluster nearing quota limit
            - No password policy set on resources
            - Performance impact of connections settings
            - Performance impact of temporary tables settings
            - Performance impact of transaction logs settings
            - Performance impact of high joins without indexes
            - >-
              Detects events where a Cloud SQL superuser (postgres for
              PostgreSQL servers or root for MySQL users) writes to non-system
              tables.
            - >-
              Detects events where a database user or role has been granted all
              privileges to a database, or to all tables, procedures, or
              functions in a schema.
            - >-
              Detects if database instance data exported to a Cloud Storage
              bucket outside of the organization.
            - >-
              Detects if database instance data exported to a Cloud Storage
              bucket that is owned by the organization and is publicly
              accessible.
          enumDeprecated:
            - false
            - false
            - false
            - true
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
          enum:
            - SIGNAL_TYPE_UNSPECIFIED
            - SIGNAL_TYPE_NOT_PROTECTED_BY_AUTOMATIC_FAILOVER
            - SIGNAL_TYPE_GROUP_NOT_REPLICATING_ACROSS_REGIONS
            - SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_ZONES
            - SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_REGIONS
            - SIGNAL_TYPE_NO_PROMOTABLE_REPLICA
            - SIGNAL_TYPE_NO_AUTOMATED_BACKUP_POLICY
            - SIGNAL_TYPE_SHORT_BACKUP_RETENTION
            - SIGNAL_TYPE_LAST_BACKUP_FAILED
            - SIGNAL_TYPE_LAST_BACKUP_OLD
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_2_0
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_3
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_2
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_1
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_0
            - SIGNAL_TYPE_VIOLATES_CIS_CONTROLS_V8_0
            - SIGNAL_TYPE_VIOLATES_NIST_800_53
            - SIGNAL_TYPE_VIOLATES_NIST_800_53_R5
            - SIGNAL_TYPE_VIOLATES_NIST_CYBERSECURITY_FRAMEWORK_V1_0
            - SIGNAL_TYPE_VIOLATES_ISO_27001
            - SIGNAL_TYPE_VIOLATES_ISO_27001_V2022
            - SIGNAL_TYPE_VIOLATES_PCI_DSS_V3_2_1
            - SIGNAL_TYPE_VIOLATES_PCI_DSS_V4_0
            - SIGNAL_TYPE_VIOLATES_CLOUD_CONTROLS_MATRIX_V4
            - SIGNAL_TYPE_VIOLATES_HIPAA
            - SIGNAL_TYPE_VIOLATES_SOC2_V2017
            - SIGNAL_TYPE_LOGS_NOT_OPTIMIZED_FOR_TROUBLESHOOTING
            - SIGNAL_TYPE_QUERY_DURATIONS_NOT_LOGGED
            - SIGNAL_TYPE_VERBOSE_ERROR_LOGGING
            - SIGNAL_TYPE_QUERY_LOCK_WAITS_NOT_LOGGED
            - SIGNAL_TYPE_LOGGING_MOST_ERRORS
            - SIGNAL_TYPE_LOGGING_ONLY_CRITICAL_ERRORS
            - SIGNAL_TYPE_MINIMAL_ERROR_LOGGING
            - SIGNAL_TYPE_QUERY_STATISTICS_LOGGED
            - SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_CLIENT_HOSTNAME
            - SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PARSER_STATISTICS
            - SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PLANNER_STATISTICS
            - SIGNAL_TYPE_NOT_LOGGING_ONLY_DDL_STATEMENTS
            - SIGNAL_TYPE_LOGGING_QUERY_STATISTICS
            - SIGNAL_TYPE_NOT_LOGGING_TEMPORARY_FILES
            - SIGNAL_TYPE_CONNECTION_MAX_NOT_CONFIGURED
            - SIGNAL_TYPE_USER_OPTIONS_CONFIGURED
            - SIGNAL_TYPE_EXPOSED_TO_PUBLIC_ACCESS
            - SIGNAL_TYPE_UNENCRYPTED_CONNECTIONS
            - SIGNAL_TYPE_NO_ROOT_PASSWORD
            - SIGNAL_TYPE_WEAK_ROOT_PASSWORD
            - SIGNAL_TYPE_ENCRYPTION_KEY_NOT_CUSTOMER_MANAGED
            - SIGNAL_TYPE_SERVER_AUTHENTICATION_NOT_REQUIRED
            - SIGNAL_TYPE_EXPOSED_BY_OWNERSHIP_CHAINING
            - SIGNAL_TYPE_EXPOSED_TO_EXTERNAL_SCRIPTS
            - SIGNAL_TYPE_EXPOSED_TO_LOCAL_DATA_LOADS
            - SIGNAL_TYPE_CONNECTION_ATTEMPTS_NOT_LOGGED
            - SIGNAL_TYPE_DISCONNECTIONS_NOT_LOGGED
            - SIGNAL_TYPE_LOGGING_EXCESSIVE_STATEMENT_INFO
            - SIGNAL_TYPE_EXPOSED_TO_REMOTE_ACCESS
            - SIGNAL_TYPE_DATABASE_NAMES_EXPOSED
            - SIGNAL_TYPE_SENSITIVE_TRACE_INFO_NOT_MASKED
            - SIGNAL_TYPE_PUBLIC_IP_ENABLED
            - SIGNAL_TYPE_IDLE
            - SIGNAL_TYPE_OVERPROVISIONED
            - SIGNAL_TYPE_HIGH_NUMBER_OF_OPEN_TABLES
            - SIGNAL_TYPE_HIGH_NUMBER_OF_TABLES
            - SIGNAL_TYPE_HIGH_TRANSACTION_ID_UTILIZATION
            - SIGNAL_TYPE_UNDERPROVISIONED
            - SIGNAL_TYPE_OUT_OF_DISK
            - SIGNAL_TYPE_SERVER_CERTIFICATE_NEAR_EXPIRY
            - SIGNAL_TYPE_DATABASE_AUDITING_DISABLED
            - SIGNAL_TYPE_RESTRICT_AUTHORIZED_NETWORKS
            - SIGNAL_TYPE_VIOLATE_POLICY_RESTRICT_PUBLIC_IP
            - SIGNAL_TYPE_QUOTA_LIMIT
            - SIGNAL_TYPE_NO_PASSWORD_POLICY
            - SIGNAL_TYPE_CONNECTIONS_PERFORMANCE_IMPACT
            - SIGNAL_TYPE_TMP_TABLES_PERFORMANCE_IMPACT
            - SIGNAL_TYPE_TRANS_LOGS_PERFORMANCE_IMPACT
            - SIGNAL_TYPE_HIGH_JOINS_WITHOUT_INDEXES
            - SIGNAL_TYPE_SUPERUSER_WRITING_TO_USER_TABLES
            - SIGNAL_TYPE_USER_GRANTED_ALL_PERMISSIONS
            - SIGNAL_TYPE_DATA_EXPORT_TO_EXTERNAL_CLOUD_STORAGE_BUCKET
            - SIGNAL_TYPE_DATA_EXPORT_TO_PUBLIC_CLOUD_STORAGE_BUCKET
        lastRefreshTime:
          description: Required. last time recommendationw as refreshed
          type: string
          format: google-datetime
        recommendationState:
          description: Required. Recommendation state
          type: string
          enumDescriptions:
            - ''
            - >-
              Recommendation is active and can be applied. ACTIVE
              recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.
            - >-
              Recommendation is in claimed state. Recommendations content is
              immutable and cannot be updated by Google. CLAIMED recommendations
              can be marked as CLAIMED, SUCCEEDED, or FAILED.
            - >-
              Recommendation is in succeeded state. Recommendations content is
              immutable and cannot be updated by Google. SUCCEEDED
              recommendations can be marked as SUCCEEDED, or FAILED.
            - >-
              Recommendation is in failed state. Recommendations content is
              immutable and cannot be updated by Google. FAILED recommendations
              can be marked as SUCCEEDED, or FAILED.
            - >-
              Recommendation is in dismissed state. Recommendation content can
              be updated by Google. DISMISSED recommendations can be marked as
              ACTIVE.
          enum:
            - UNSPECIFIED
            - ACTIVE
            - CLAIMED
            - SUCCEEDED
            - FAILED
            - DISMISSED
        recommender:
          description: >-
            Required. Name of recommendation. Examples:
            organizations/1234/locations/us-central1/recommenders/google.cloudsql.instance.PerformanceRecommender/recommendations/9876
          type: string
        recommenderId:
          description: >-
            Required. ID of recommender. Examples:
            "google.cloudsql.instance.PerformanceRecommender"
          type: string
        recommenderSubtype:
          description: >-
            Required. Contains an identifier for a subtype of recommendations
            produced for the same recommender. Subtype is a function of content
            and impact, meaning a new subtype might be added when significant
            changes to `content` or `primary_impact.category` are introduced.
            See the Recommenders section to see a list of subtypes for a given
            Recommender. Examples: For recommender =
            "google.cloudsql.instance.PerformanceRecommender",
            recommender_subtype can be
            "MYSQL_HIGH_NUMBER_OF_OPEN_TABLES_BEST_PRACTICE"/"POSTGRES_HIGH_TRANSACTION_ID_UTILIZATION_BEST_PRACTICE"
          type: string
        additionalMetadata:
          description: Optional. Any other additional metadata specific to recommendation
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    StorageDatabasecenterPartnerapiV1mainObservabilityMetricData:
      id: StorageDatabasecenterPartnerapiV1mainObservabilityMetricData
      type: object
      properties:
        resourceName:
          description: >-
            Required. Database resource name associated with the signal.
            Resource name to follow CAIS resource_name format as noted here
            go/condor-common-datamodel
          type: string
        metricType:
          description: Required. Type of metric like CPU, Memory, etc.
          type: string
          enumDescriptions:
            - Unspecified metric type.
            - >-
              CPU utilization for a resource. The value is a fraction between
              0.0 and 1.0 (may momentarily exceed 1.0 in some cases).
            - >-
              Memory utilization for a resource. The value is a fraction between
              0.0 and 1.0 (may momentarily exceed 1.0 in some cases).
            - Number of network connections for a resource.
            - >-
              Storage utilization for a resource. The value is a fraction
              between 0.0 and 1.0 (may momentarily exceed 1.0 in some cases).
            - Sotrage used by a resource.
          enum:
            - METRIC_TYPE_UNSPECIFIED
            - CPU_UTILIZATION
            - MEMORY_UTILIZATION
            - NETWORK_CONNECTIONS
            - STORAGE_UTILIZATION
            - STORAGE_USED_BYTES
        aggregationType:
          description: Required. Type of aggregation performed on the metric.
          type: string
          enumDescriptions:
            - Unspecified aggregation type.
            - PEAK aggregation type.
            - P99 aggregation type.
            - P95 aggregation type.
            - current aggregation type.
          enum:
            - AGGREGATION_TYPE_UNSPECIFIED
            - PEAK
            - P99
            - P95
            - CURRENT
        value:
          description: Required. Value of the metric type.
          $ref: '#/components/schemas/StorageDatabasecenterProtoCommonTypedValue'
        observationTime:
          description: Required. The time the metric value was observed.
          type: string
          format: google-datetime
    StorageDatabasecenterProtoCommonTypedValue:
      id: StorageDatabasecenterProtoCommonTypedValue
      description: >-
        TypedValue represents the value of a metric type. It can either be a
        double, an int64, a string or a bool.
      type: object
      properties:
        doubleValue:
          description: For double value
          type: number
          format: double
        int64Value:
          description: For integer value
          type: string
          format: int64
        stringValue:
          description: For string value
          type: string
        boolValue:
          description: For boolean value
          type: boolean
    CloudControl2SharedOperationsReconciliationOperationMetadata:
      id: CloudControl2SharedOperationsReconciliationOperationMetadata
      description: >-
        Operation metadata returned by the CLH during resource state
        reconciliation.
      type: object
      properties:
        deleteResource:
          description: DEPRECATED. Use exclusive_action instead.
          deprecated: true
          type: boolean
        exclusiveAction:
          description: Excluisive action returned by the CLH.
          type: string
          enumDescriptions:
            - Unknown repair action.
            - >-
              The resource has to be deleted. When using this bit, the CLH
              should fail the operation. DEPRECATED. Instead use DELETE_RESOURCE
              OperationSignal in SideChannel.
            - >-
              This resource could not be repaired but the repair should be tried
              again at a later time. This can happen if there is a dependency
              that needs to be resolved first- e.g. if a parent resource must be
              repaired before a child resource.
          enumDeprecated:
            - false
            - true
            - false
          enum:
            - UNKNOWN_REPAIR_ACTION
            - DELETE
            - RETRY
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.alloydb.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.alloydb.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    clusters:
      id: google.alloydb.clusters
      name: clusters
      title: Clusters
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.clusters
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upgrade:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}:upgrade/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        promote:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}:promote/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        switchover:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}:switchover/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restore:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters:restore/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/get'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/delete'
    clusters_secondary:
      id: google.alloydb.clusters_secondary
      name: clusters_secondary
      title: Clusters_secondary
      methods:
        createsecondary:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters:createsecondary/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/clusters_secondary/methods/createsecondary
        update: []
        replace: []
        delete: []
    instances:
      id: google.alloydb.instances
      name: instances
      title: Instances
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1instances/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.instances
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1instances/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1instances~1{instancesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1instances~1{instancesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1instances~1{instancesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        failover:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1instances~1{instancesId}:failover/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        inject_fault:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1instances~1{instancesId}:injectFault/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restart:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1instances~1{instancesId}:restart/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/instances/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/instances/methods/delete'
    instances_secondary:
      id: google.alloydb.instances_secondary
      name: instances_secondary
      title: Instances_secondary
      methods:
        createsecondary:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1instances:createsecondary/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/instances_secondary/methods/createsecondary
        update: []
        replace: []
        delete: []
    instances_connection_info:
      id: google.alloydb.instances_connection_info
      name: instances_connection_info
      title: Instances_connection_info
      methods:
        get_connection_info:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1instances~1{instancesId}~1connectionInfo/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/instances_connection_info/methods/get_connection_info
        insert: []
        update: []
        replace: []
        delete: []
    users:
      id: google.alloydb.users
      name: users
      title: Users
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1users/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.users
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1users/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1users~1{usersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1users~1{usersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1users~1{usersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/users/methods/get'
          - $ref: '#/components/x-stackQL-resources/users/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/users/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/users/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/users/methods/delete'
    backups:
      id: google.alloydb.backups
      name: backups
      title: Backups
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backups/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.backups
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backups/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backups~1{backupsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backups~1{backupsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backups~1{backupsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups/methods/get'
          - $ref: '#/components/x-stackQL-resources/backups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/backups/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/backups/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backups/methods/delete'
    supported_database_flags:
      id: google.alloydb.supported_database_flags
      name: supported_database_flags
      title: Supported_database_flags
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1supportedDatabaseFlags/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.supportedDatabaseFlags
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/supported_database_flags/methods/list
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: alloydb.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: alloydb.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationLocation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: alloydb.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: alloydb.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: alloydb.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: alloydb.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/clusters:
    parameters: *ref_1
    get:
      description: Lists Clusters in a given project and location.
      operationId: alloydb.projects.locations.clusters.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new Cluster in a given project and location.
      operationId: alloydb.projects.locations.clusters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: clusterId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Cluster.
      operationId: alloydb.projects.locations.clusters.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    patch:
      description: Updates the parameters of a single Cluster.
      operationId: alloydb.projects.locations.clusters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
    delete:
      description: Deletes a single Cluster.
      operationId: alloydb.projects.locations.clusters.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:upgrade:
    parameters: *ref_1
    patch:
      description: Upgrades a single Cluster. Imperative only.
      operationId: alloydb.projects.locations.clusters.upgrade
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeClusterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:promote:
    parameters: *ref_1
    post:
      description: >-
        Promotes a SECONDARY cluster. This turns down replication from the
        PRIMARY cluster and promotes a secondary cluster into its own standalone
        cluster. Imperative only.
      operationId: alloydb.projects.locations.clusters.promote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromoteClusterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:switchover:
    parameters: *ref_1
    post:
      description: >-
        Switches the role of PRIMARY and SECONDARY cluster without any data
        loss. This promotes the SECONDARY cluster to PRIMARY and sets up
        original PRIMARY cluster to replicate from this newly promoted cluster.
      operationId: alloydb.projects.locations.clusters.switchover
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SwitchoverClusterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/clusters:restore:
    parameters: *ref_1
    post:
      description: >-
        Creates a new Cluster in a given project and location, with a volume
        restored from the provided source, either a backup ID or a point-in-time
        and a source cluster.
      operationId: alloydb.projects.locations.clusters.restore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreClusterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/clusters:createsecondary:
    parameters: *ref_1
    post:
      description: >-
        Creates a cluster of type SECONDARY in the given location using the
        primary cluster as the source.
      operationId: alloydb.projects.locations.clusters.createsecondary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: clusterId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/instances:
    parameters: *ref_1
    get:
      description: Lists Instances in a given project and location.
      operationId: alloydb.projects.locations.clusters.instances.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new Instance in a given project and location.
      operationId: alloydb.projects.locations.clusters.instances.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: instanceId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/instances/{instancesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Instance.
      operationId: alloydb.projects.locations.clusters.instances.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    patch:
      description: Updates the parameters of a single Instance.
      operationId: alloydb.projects.locations.clusters.instances.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
    delete:
      description: Deletes a single Instance.
      operationId: alloydb.projects.locations.clusters.instances.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/instances:createsecondary:
    parameters: *ref_1
    post:
      description: Creates a new SECONDARY Instance in a given project and location.
      operationId: alloydb.projects.locations.clusters.instances.createsecondary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: instanceId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/instances/{instancesId}:failover:
    parameters: *ref_1
    post:
      description: >-
        Forces a Failover for a highly available instance. Failover promotes the
        HA standby instance as the new primary. Imperative only.
      operationId: alloydb.projects.locations.clusters.instances.failover
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailoverInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/instances/{instancesId}:injectFault:
    parameters: *ref_1
    post:
      description: Injects fault in an instance. Imperative only.
      operationId: alloydb.projects.locations.clusters.instances.injectFault
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InjectFaultRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/instances/{instancesId}:restart:
    parameters: *ref_1
    post:
      description: Restart an Instance in a cluster. Imperative only.
      operationId: alloydb.projects.locations.clusters.instances.restart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestartInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/instances/{instancesId}/connectionInfo:
    parameters: *ref_1
    get:
      description: Get instance metadata used for a connection.
      operationId: alloydb.projects.locations.clusters.instances.getConnectionInfo
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionInfo'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/users:
    parameters: *ref_1
    get:
      description: Lists Users in a given project and location.
      operationId: alloydb.projects.locations.clusters.users.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new User in a given project, location, and cluster.
      operationId: alloydb.projects.locations.clusters.users.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: userId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/users/{usersId}:
    parameters: *ref_1
    get:
      description: Gets details of a single User.
      operationId: alloydb.projects.locations.clusters.users.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: usersId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single User.
      operationId: alloydb.projects.locations.clusters.users.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: usersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
    delete:
      description: Deletes a single User.
      operationId: alloydb.projects.locations.clusters.users.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: usersId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/backups:
    parameters: *ref_1
    get:
      description: Lists Backups in a given project and location.
      operationId: alloydb.projects.locations.backups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new Backup in a given project and location.
      operationId: alloydb.projects.locations.backups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: backupId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/backups/{backupsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Backup.
      operationId: alloydb.projects.locations.backups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single Backup.
      operationId: alloydb.projects.locations.backups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
    delete:
      description: Deletes a single Backup.
      operationId: alloydb.projects.locations.backups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/supportedDatabaseFlags:
    parameters: *ref_1
    get:
      description: Lists SupportedDatabaseFlags for a given project and location.
      operationId: alloydb.projects.locations.supportedDatabaseFlags.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSupportedDatabaseFlagsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
