openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Deploy API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230809'
  x-generated-date: '2023-08-28'
externalDocs:
  url: 'https://cloud.google.com/deploy/'
servers:
  - url: 'https://clouddeploy.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    ApproveRolloutRequest:
      id: ApproveRolloutRequest
      properties:
        approved:
          type: boolean
          description: Required. True = approve; false = reject
      description: The request object used by `ApproveRollout`.
      type: object
    Config:
      type: object
      properties:
        supportedVersions:
          type: array
          items:
            $ref: '#/components/schemas/SkaffoldVersion'
          description: All supported versions of Skaffold.
        defaultSkaffoldVersion:
          type: string
          description: Default Skaffold version that is assigned when a Release is created without specifying a Skaffold version.
        name:
          type: string
          description: Name of the configuration.
      id: Config
      description: Service-wide configuration.
    AdvanceChildRolloutJobRun:
      type: object
      id: AdvanceChildRolloutJobRun
      description: AdvanceChildRolloutJobRun contains information specific to a advanceChildRollout `JobRun`.
      properties:
        rollout:
          type: string
          readOnly: true
          description: 'Output only. Name of the `ChildRollout`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/a-z{0,62}.'
        rolloutPhaseId:
          readOnly: true
          description: Output only. the ID of the ChildRollout's Phase.
          type: string
    CancelOperationRequest:
      type: object
      properties: {}
      description: The request message for Operations.CancelOperation.
      id: CancelOperationRequest
    DeployJobRun:
      type: object
      properties:
        build:
          description: 'Output only. The resource name of the Cloud Build `Build` object that is used to deploy. Format is projects/{project}/locations/{location}/builds/{build}.'
          type: string
          readOnly: true
        failureMessage:
          type: string
          readOnly: true
          description: 'Output only. Additional information about the deploy failure, if available.'
        failureCause:
          type: string
          readOnly: true
          description: Output only. The reason the deploy failed. This will always be unspecified while the deploy is in progress or if it succeeded.
          enumDescriptions:
            - No reason for failure is specified.
            - 'Cloud Build is not available, either because it is not enabled or because Cloud Deploy has insufficient permissions. See [Required permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).'
            - The deploy operation did not complete successfully; check Cloud Build logs.
            - The deploy job run did not complete within the alloted time.
            - There were missing resources in the runtime environment required for a canary deployment. Check the Cloud Build logs for more information.
            - Cloud Build failed to fulfill Cloud Deploy's request. See failure_message for additional details.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - MISSING_RESOURCES_FOR_CANARY
            - CLOUD_BUILD_REQUEST_FAILED
        metadata:
          readOnly: true
          $ref: '#/components/schemas/DeployJobRunMetadata'
          description: Output only. Metadata containing information about the deploy job run.
        artifact:
          description: 'Output only. The artifact of a deploy job run, if available.'
          $ref: '#/components/schemas/DeployArtifact'
          readOnly: true
      description: DeployJobRun contains information specific to a deploy `JobRun`.
      id: DeployJobRun
    Policy:
      id: Policy
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      properties:
        auditConfigs:
          type: array
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: '#/components/schemas/AuditConfig'
        etag:
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          type: string
          format: byte
        version:
          type: integer
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          format: int32
        bindings:
          type: array
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
          items:
            $ref: '#/components/schemas/Binding'
      type: object
    ReleaseReadyCondition:
      type: object
      id: ReleaseReadyCondition
      properties:
        status:
          description: True if the Release is in a valid state. Otherwise at least one condition in `ReleaseCondition` is in an invalid state. Iterate over those conditions and see which condition(s) has status = false to find out what is wrong with the Release.
          type: boolean
      description: 'ReleaseReadyCondition contains information around the status of the Release. If a release is not ready, you cannot create a rollout with the release.'
    AdvanceRolloutResponse:
      type: object
      id: AdvanceRolloutResponse
      properties: {}
      description: The response object from `AdvanceRollout`.
    Stage:
      type: object
      properties:
        strategy:
          $ref: '#/components/schemas/Strategy'
          description: Optional. The strategy to use for a `Rollout` to this stage.
        deployParameters:
          items:
            $ref: '#/components/schemas/DeployParameters'
          description: Optional. The deploy parameters to use for the target in this stage.
          type: array
        profiles:
          items:
            type: string
          type: array
          description: Skaffold profiles to use when rendering the manifest for this stage's `Target`.
        targetId:
          description: 'The target_id to which this stage points. This field refers exclusively to the last segment of a target name. For example, this field would just be `my-target` (rather than `projects/project/locations/location/targets/my-target`). The location of the `Target` is inferred to be the same as the location of the `DeliveryPipeline` that contains this `Stage`.'
          type: string
      description: Stage specifies a location to which to deploy.
      id: Stage
    AuditLogConfig:
      properties:
        logType:
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          description: The log type that this config enables.
          type: string
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
        exemptedMembers:
          items:
            type: string
          type: array
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      type: object
      id: AuditLogConfig
    Target:
      description: A `Target` resource in the Cloud Deploy API. A `Target` defines a location to which a Skaffold configuration can be deployed.
      type: object
      properties:
        executionConfigs:
          type: array
          items:
            $ref: '#/components/schemas/ExecutionConfig'
          description: 'Configurations for all execution that relates to this `Target`. Each `ExecutionEnvironmentUsage` value may only be used in a single configuration; using the same value multiple times is an error. When one or more configurations are specified, they must include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no configurations are specified, execution will use the default specified in `DefaultPool`.'
        run:
          $ref: '#/components/schemas/CloudRunLocation'
          description: Optional. Information specifying a Cloud Run deployment target.
        anthosCluster:
          description: Optional. Information specifying an Anthos Cluster.
          $ref: '#/components/schemas/AnthosCluster'
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. Time at which the `Target` was created.
        description:
          description: Optional. Description of the `Target`. Max length is 255 characters.
          type: string
        name:
          description: 'Optional. Name of the `Target`. Format is projects/{project}/locations/{location}/targets/a-z{0,62}.'
          type: string
        deployParameters:
          description: Optional. The deploy parameters to use for this target.
          type: object
          additionalProperties:
            type: string
        updateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. Most recent time at which the `Target` was updated.
        etag:
          type: string
          description: 'Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.'
        annotations:
          description: 'Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.'
          type: object
          additionalProperties:
            type: string
        requireApproval:
          type: boolean
          description: Optional. Whether or not the `Target` requires approval.
        uid:
          description: Output only. Unique identifier of the `Target`.
          type: string
          readOnly: true
        targetId:
          description: Output only. Resource id of the `Target`.
          readOnly: true
          type: string
        labels:
          description: 'Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.'
          type: object
          additionalProperties:
            type: string
        multiTarget:
          $ref: '#/components/schemas/MultiTarget'
          description: Optional. Information specifying a multiTarget.
        gke:
          $ref: '#/components/schemas/GkeCluster'
          description: Optional. Information specifying a GKE Cluster.
      id: Target
    CustomCanaryDeployment:
      type: object
      description: CustomCanaryDeployment represents the custom canary deployment configuration.
      properties:
        phaseConfigs:
          items:
            $ref: '#/components/schemas/PhaseConfig'
          description: Required. Configuration for each phase in the canary deployment in the order executed.
          type: array
      id: CustomCanaryDeployment
    PhaseConfig:
      id: PhaseConfig
      type: object
      properties:
        predeploy:
          description: 'Optional. Configuration for the predeploy job of this phase. If this is not configured, there will be no predeploy job for this phase.'
          $ref: '#/components/schemas/Predeploy'
        postdeploy:
          $ref: '#/components/schemas/Postdeploy'
          description: 'Optional. Configuration for the postdeploy job of this phase. If this is not configured, there will be no postdeploy job for this phase.'
        percentage:
          format: int32
          description: Required. Percentage deployment for the phase.
          type: integer
        phaseId:
          description: 'Required. The ID to assign to the `Rollout` phase. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`.'
          type: string
        verify:
          type: boolean
          description: Whether to run verify tests after the deployment.
        profiles:
          items:
            type: string
          type: array
          description: Skaffold profiles to use when rendering the manifest for this phase. These are in addition to the profiles list specified in the `DeliveryPipeline` stage.
      description: PhaseConfig represents the configuration for a phase in the custom canary deployment.
    ListRolloutsResponse:
      properties:
        nextPageToken:
          type: string
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        rollouts:
          type: array
          description: The `Rollout` objects.
          items:
            $ref: '#/components/schemas/Rollout'
      type: object
      id: ListRolloutsResponse
      description: ListRolloutsResponse is the response object reutrned by `ListRollouts`.
    AbandonReleaseRequest:
      description: The request object used by `AbandonRelease`.
      properties: {}
      id: AbandonReleaseRequest
      type: object
    Release:
      id: Release
      properties:
        abandoned:
          description: Output only. Indicates whether this is an abandoned release.
          readOnly: true
          type: boolean
        targetSnapshots:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Target'
          description: Output only. Snapshot of the targets taken at release creation time.
        targetRenders:
          additionalProperties:
            $ref: '#/components/schemas/TargetRender'
          readOnly: true
          type: object
          description: Output only. Map from target ID to details of the render operation for that target.
        annotations:
          description: 'User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.'
          additionalProperties:
            type: string
          type: object
        deployParameters:
          type: object
          description: Optional. The deploy parameters to use for all targets in this release.
          additionalProperties:
            type: string
        renderState:
          readOnly: true
          type: string
          enum:
            - RENDER_STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - IN_PROGRESS
          enumDescriptions:
            - The render state is unspecified.
            - All rendering operations have completed successfully.
            - 'All rendering operations have completed, and one or more have failed.'
            - Rendering has started and is not complete.
          description: Output only. Current state of the render operation.
        skaffoldVersion:
          type: string
          description: 'The Skaffold version to use when operating on this release, such as "1.20.0". Not all versions are valid; Cloud Deploy supports a specific set of versions. If unset, the most recent supported Skaffold version will be used.'
        buildArtifacts:
          description: List of artifacts to pass through to Skaffold command.
          type: array
          items:
            $ref: '#/components/schemas/BuildArtifact'
        name:
          description: 'Optional. Name of the `Release`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/a-z{0,62}.'
          type: string
        skaffoldConfigPath:
          description: Filepath of the Skaffold config inside of the config URI.
          type: string
        renderStartTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. Time at which the render began.
        targetArtifacts:
          additionalProperties:
            $ref: '#/components/schemas/TargetArtifact'
          readOnly: true
          type: object
          description: Output only. Map from target ID to the target artifacts created during the render operation.
        etag:
          type: string
          description: 'This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.'
        deliveryPipelineSnapshot:
          $ref: '#/components/schemas/DeliveryPipeline'
          description: Output only. Snapshot of the parent pipeline taken at release creation time.
          readOnly: true
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Time at which the `Release` was created.
        description:
          type: string
          description: Description of the `Release`. Max length is 255 characters.
        uid:
          readOnly: true
          description: Output only. Unique identifier of the `Release`.
          type: string
        labels:
          type: object
          description: 'Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.'
          additionalProperties:
            type: string
        skaffoldConfigUri:
          type: string
          description: Cloud Storage URI of tar.gz archive containing Skaffold configuration.
        renderEndTime:
          description: Output only. Time at which the render completed.
          type: string
          format: google-datetime
          readOnly: true
        condition:
          readOnly: true
          $ref: '#/components/schemas/ReleaseCondition'
          description: Output only. Information around the state of the Release.
      description: A `Release` resource in the Cloud Deploy API. A `Release` defines a specific Skaffold configuration instance that can be deployed.
      type: object
    TargetsPresentCondition:
      type: object
      id: TargetsPresentCondition
      description: TargetsPresentCondition contains information on any Targets defined in the Delivery Pipeline that do not actually exist.
      properties:
        status:
          description: True if there aren't any missing Targets.
          type: boolean
        missingTargets:
          items:
            type: string
          type: array
          description: 'The list of Target names that do not exist. For example, projects/{project_id}/locations/{location_name}/targets/{target_name}.'
        updateTime:
          type: string
          description: Last time the condition was updated.
          format: google-datetime
    IgnoreJobResponse:
      type: object
      id: IgnoreJobResponse
      properties: {}
      description: The response object from `IgnoreJob`.
    Rollout:
      id: Rollout
      description: A `Rollout` resource in the Cloud Deploy API. A `Rollout` contains information around a specific deployment to a `Target`.
      type: object
      properties:
        deployStartTime:
          format: google-datetime
          description: Output only. Time at which the `Rollout` started deploying.
          type: string
          readOnly: true
        deployEndTime:
          description: Output only. Time at which the `Rollout` finished deploying.
          readOnly: true
          type: string
          format: google-datetime
        name:
          type: string
          description: 'Optional. Name of the `Rollout`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/a-z{0,62}.'
        labels:
          description: 'Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.'
          additionalProperties:
            type: string
          type: object
        controllerRollout:
          type: string
          description: 'Output only. Name of the `ControllerRollout`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/a-z{0,62}.'
          readOnly: true
        metadata:
          $ref: '#/components/schemas/Metadata'
          readOnly: true
          description: Output only. Metadata contains information about the rollout.
        deployFailureCause:
          enumDescriptions:
            - No reason for failure is specified.
            - 'Cloud Build is not available, either because it is not enabled or because Cloud Deploy has insufficient permissions. See [required permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).'
            - The deploy operation did not complete successfully; check Cloud Build logs.
            - Deployment did not complete within the alloted time.
            - Release is in a failed state.
            - Release is abandoned.
            - No skaffold verify configuration was found.
            - Cloud Build failed to fulfill Cloud Deploy's request. See failure_message for additional details.
          type: string
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - RELEASE_FAILED
            - RELEASE_ABANDONED
            - VERIFICATION_CONFIG_NOT_FOUND
            - CLOUD_BUILD_REQUEST_FAILED
          description: Output only. The reason this rollout failed. This will always be unspecified while the rollout is in progress.
          readOnly: true
        description:
          type: string
          description: Description of the `Rollout` for user purposes. Max length is 255 characters.
        failureReason:
          readOnly: true
          type: string
          description: 'Output only. Additional information about the rollout failure, if available.'
        approvalState:
          description: Output only. Approval state of the `Rollout`.
          readOnly: true
          enumDescriptions:
            - The `Rollout` has an unspecified approval state.
            - The `Rollout` requires approval.
            - The `Rollout` does not require approval.
            - The `Rollout` has been approved.
            - The `Rollout` has been rejected.
          type: string
          enum:
            - APPROVAL_STATE_UNSPECIFIED
            - NEEDS_APPROVAL
            - DOES_NOT_NEED_APPROVAL
            - APPROVED
            - REJECTED
        etag:
          description: 'This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.'
          type: string
        targetId:
          type: string
          description: Required. The ID of Target to which this `Rollout` is deploying.
        approveTime:
          format: google-datetime
          description: Output only. Time at which the `Rollout` was approved.
          type: string
          readOnly: true
        phases:
          items:
            $ref: '#/components/schemas/Phase'
          description: Output only. The phases that represent the workflows of this `Rollout`.
          type: array
          readOnly: true
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Time at which the `Rollout` was created.
        enqueueTime:
          type: string
          readOnly: true
          description: Output only. Time at which the `Rollout` was enqueued.
          format: google-datetime
        state:
          description: Output only. Current state of the `Rollout`.
          enumDescriptions:
            - The `Rollout` has an unspecified state.
            - The `Rollout` has completed successfully.
            - The `Rollout` has failed.
            - The `Rollout` is being deployed.
            - The `Rollout` needs approval.
            - An approver rejected the `Rollout`.
            - The `Rollout` is waiting for an earlier Rollout(s) to complete on this `Target`.
            - The `Rollout` is waiting for the `Release` to be fully rendered.
            - The `Rollout` is in the process of being cancelled.
            - The `Rollout` has been cancelled.
            - The `Rollout` is halted.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - IN_PROGRESS
            - PENDING_APPROVAL
            - APPROVAL_REJECTED
            - PENDING
            - PENDING_RELEASE
            - CANCELLING
            - CANCELLED
            - HALTED
          type: string
        deployingBuild:
          readOnly: true
          type: string
          description: 'Output only. The resource name of the Cloud Build `Build` object that is used to deploy the Rollout. Format is `projects/{project}/locations/{location}/builds/{build}`.'
        annotations:
          additionalProperties:
            type: string
          description: 'User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.'
          type: object
        uid:
          readOnly: true
          type: string
          description: Output only. Unique identifier of the `Rollout`.
    RuntimeConfig:
      id: RuntimeConfig
      type: object
      properties:
        cloudRun:
          $ref: '#/components/schemas/CloudRunConfig'
          description: Cloud Run runtime configuration.
        kubernetes:
          $ref: '#/components/schemas/KubernetesConfig'
          description: Kubernetes runtime configuration.
      description: RuntimeConfig contains the runtime specific configurations for a deployment strategy.
    AdvanceRolloutRequest:
      description: The request object used by `AdvanceRollout`.
      id: AdvanceRolloutRequest
      type: object
      properties:
        phaseId:
          type: string
          description: Required. The phase ID to advance the `Rollout` to.
    ListDeliveryPipelinesResponse:
      properties:
        deliveryPipelines:
          items:
            $ref: '#/components/schemas/DeliveryPipeline'
          type: array
          description: The `DeliveryPipeline` objects.
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
      type: object
      description: The response object from `ListDeliveryPipelines`.
      id: ListDeliveryPipelinesResponse
    PostdeployJob:
      properties:
        actions:
          description: Output only. The custom actions that the postdeploy Job executes.
          readOnly: true
          type: array
          items:
            type: string
      description: A postdeploy Job.
      id: PostdeployJob
      type: object
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      type: object
      properties:
        permissions:
          items:
            type: string
          type: array
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
      description: Request message for `TestIamPermissions` method.
    PredeployJob:
      id: PredeployJob
      type: object
      description: A predeploy Job.
      properties:
        actions:
          readOnly: true
          description: Output only. The custom actions that the predeploy Job executes.
          type: array
          items:
            type: string
    ServiceNetworking:
      type: object
      id: ServiceNetworking
      properties:
        service:
          description: Required. Name of the Kubernetes Service.
          type: string
        disablePodOverprovisioning:
          type: boolean
          description: Optional. Whether to disable Pod overprovisioning. If Pod overprovisioning is disabled then Cloud Deploy will limit the number of total Pods used for the deployment strategy to the number of Pods the Deployment has on the cluster.
        deployment:
          type: string
          description: Required. Name of the Kubernetes Deployment whose traffic is managed by the specified Service.
      description: Information about the Kubernetes Service networking configuration.
    ReleaseNotificationEvent:
      properties:
        release:
          description: The name of the `Release`.
          type: string
        type:
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - true
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - Restriction check failed.
            - Resource deleted.
            - 'Deprecated: This field is never used. Use release_render log type instead.'
          type: string
          description: 'Type of this notification, e.g. for a Pub/Sub failure.'
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_RENDER_STATUES_CHANGE
        message:
          description: Debug message for when a notification fails to send.
          type: string
      id: ReleaseNotificationEvent
      type: object
      description: Payload proto for "clouddeploy.googleapis.com/release_notification" Platform Log event that describes the failure to send release status change Pub/Sub notification.
    PhaseArtifact:
      id: PhaseArtifact
      description: 'Contains the paths to the artifacts, relative to the URI, for a phase.'
      type: object
      properties:
        skaffoldConfigPath:
          readOnly: true
          type: string
          description: Output only. File path of the resolved Skaffold configuration relative to the URI.
        manifestPath:
          description: Output only. File path of the rendered manifest relative to the URI.
          type: string
          readOnly: true
        jobManifestsPath:
          readOnly: true
          description: Output only. File path of the directory of rendered job manifests relative to the URI. This is only set if it is applicable.
          type: string
    DeployParameters:
      description: DeployParameters contains deploy parameters information.
      id: DeployParameters
      properties:
        matchTargetLabels:
          type: object
          description: 'Optional. Deploy parameters are applied to targets with match labels. If unspecified, deploy parameters are applied to all targets (including child targets of a multi-target).'
          additionalProperties:
            type: string
        values:
          additionalProperties:
            type: string
          description: Required. Values are deploy parameters in key-value pairs.
          type: object
      type: object
    SetIamPolicyRequest:
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
        updateMask:
          type: string
          format: google-fieldmask
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
      type: object
      description: Request message for `SetIamPolicy` method.
      id: SetIamPolicyRequest
    Empty:
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
      id: Empty
    PipelineReadyCondition:
      properties:
        status:
          description: True if the Pipeline is in a valid state. Otherwise at least one condition in `PipelineCondition` is in an invalid state. Iterate over those conditions and see which condition(s) has status = false to find out what is wrong with the Pipeline.
          type: boolean
        updateTime:
          format: google-datetime
          type: string
          description: Last time the condition was updated.
      id: PipelineReadyCondition
      description: PipelineReadyCondition contains information around the status of the Pipeline.
      type: object
    Binding:
      description: 'Associates `members`, or principals, with a `role`.'
      id: Binding
      type: object
      properties:
        role:
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
          type: string
        condition:
          $ref: '#/components/schemas/Expr'
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
        members:
          items:
            type: string
          type: array
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
    Standard:
      description: Standard represents the standard deployment strategy.
      properties:
        postdeploy:
          $ref: '#/components/schemas/Postdeploy'
          description: 'Optional. Configuration for the postdeploy job. If this is not configured, postdeploy job will not be present.'
        verify:
          type: boolean
          description: Whether to verify a deployment.
        predeploy:
          $ref: '#/components/schemas/Predeploy'
          description: 'Optional. Configuration for the predeploy job. If this is not configured, predeploy job will not be present.'
      id: Standard
      type: object
    VerifyJob:
      type: object
      properties: {}
      description: A verify Job.
      id: VerifyJob
    BuildArtifact:
      type: object
      id: BuildArtifact
      properties:
        tag:
          description: 'Image tag to use. This will generally be the full path to an image, such as "gcr.io/my-project/busybox:1.2.3" or "gcr.io/my-project/busybox@sha256:abc123".'
          type: string
        image:
          description: Image name in Skaffold configuration.
          type: string
      description: Description of an a image to use during Skaffold rendering.
    GkeCluster:
      properties:
        cluster:
          description: 'Information specifying a GKE Cluster. Format is `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}.'
          type: string
        internalIp:
          type: boolean
          description: 'Optional. If true, `cluster` is accessed using the private IP address of the control plane endpoint. Otherwise, the default IP address of the control plane endpoint is used. The default IP address is the private IP address for clusters with private control-plane endpoints and the public IP address otherwise. Only specify this option when `cluster` is a [private GKE cluster](https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept).'
      description: Information specifying a GKE Cluster.
      type: object
      id: GkeCluster
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
        apiVersion:
          readOnly: true
          type: string
          description: Output only. API version used to start the operation.
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
          format: google-datetime
        statusMessage:
          description: 'Output only. Human-readable status of the operation, if any.'
          readOnly: true
          type: string
        target:
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
        requestedCancellation:
          readOnly: true
          type: boolean
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
        verb:
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
          type: string
    RetryJobResponse:
      description: The response object from 'RetryJob'.
      type: object
      properties: {}
      id: RetryJobResponse
    ListReleasesResponse:
      type: object
      description: The response object from `ListReleases`.
      id: ListReleasesResponse
      properties:
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        releases:
          description: The `Release` objects.
          type: array
          items:
            $ref: '#/components/schemas/Release'
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    JobRun:
      properties:
        startTime:
          readOnly: true
          description: Output only. Time at which the `JobRun` was started.
          format: google-datetime
          type: string
        name:
          description: 'Optional. Name of the `JobRun`. Format is projects/{project}/locations/{location}/ deliveryPipelines/{deliveryPipeline}/releases/{releases}/rollouts/ {rollouts}/jobRuns/{uuid}.'
          type: string
        predeployJobRun:
          readOnly: true
          description: Output only. Information specific to a predeploy `JobRun`.
          $ref: '#/components/schemas/PredeployJobRun'
        jobId:
          description: Output only. ID of the `Rollout` job this `JobRun` corresponds to.
          type: string
          readOnly: true
        etag:
          description: 'Output only. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.'
          readOnly: true
          type: string
        createChildRolloutJobRun:
          $ref: '#/components/schemas/CreateChildRolloutJobRun'
          description: Output only. Information specific to a createChildRollout `JobRun`.
          readOnly: true
        postdeployJobRun:
          readOnly: true
          $ref: '#/components/schemas/PostdeployJobRun'
          description: Output only. Information specific to a postdeploy `JobRun`.
        deployJobRun:
          $ref: '#/components/schemas/DeployJobRun'
          description: Output only. Information specific to a deploy `JobRun`.
          readOnly: true
        uid:
          description: Output only. Unique identifier of the `JobRun`.
          type: string
          readOnly: true
        state:
          enum:
            - STATE_UNSPECIFIED
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - TERMINATING
            - TERMINATED
          readOnly: true
          type: string
          enumDescriptions:
            - The `JobRun` has an unspecified state.
            - The `JobRun` is in progress.
            - The `JobRun` has succeeded.
            - The `JobRun` has failed.
            - The `JobRun` is terminating.
            - The `JobRun` was terminated.
          description: Output only. The current state of the `JobRun`.
        createTime:
          description: Output only. Time at which the `JobRun` was created.
          readOnly: true
          type: string
          format: google-datetime
        phaseId:
          type: string
          description: Output only. ID of the `Rollout` phase this `JobRun` belongs in.
          readOnly: true
        endTime:
          description: Output only. Time at which the `JobRun` ended.
          type: string
          format: google-datetime
          readOnly: true
        verifyJobRun:
          description: Output only. Information specific to a verify `JobRun`.
          $ref: '#/components/schemas/VerifyJobRun'
          readOnly: true
        advanceChildRolloutJobRun:
          readOnly: true
          description: Output only. Information specific to an advanceChildRollout `JobRun`
          $ref: '#/components/schemas/AdvanceChildRolloutJobRun'
      description: A `JobRun` resource in the Cloud Deploy API. A `JobRun` contains information of a single `Rollout` job evaluation.
      type: object
      id: JobRun
    ListJobRunsResponse:
      type: object
      properties:
        unreachable:
          description: Locations that could not be reached
          type: array
          items:
            type: string
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        jobRuns:
          type: array
          items:
            $ref: '#/components/schemas/JobRun'
          description: The `JobRun` objects.
      id: ListJobRunsResponse
      description: ListJobRunsResponse is the response object returned by `ListJobRuns`.
    Canary:
      type: object
      id: Canary
      properties:
        canaryDeployment:
          $ref: '#/components/schemas/CanaryDeployment'
          description: Configures the progressive based deployment for a Target.
        runtimeConfig:
          description: Optional. Runtime specific configurations for the deployment strategy. The runtime configuration is used to determine how Cloud Deploy will split traffic to enable a progressive deployment.
          $ref: '#/components/schemas/RuntimeConfig'
        customCanaryDeployment:
          $ref: '#/components/schemas/CustomCanaryDeployment'
          description: 'Configures the progressive based deployment for a Target, but allows customizing at the phase level where a phase represents each of the percentage deployments.'
      description: Canary represents the canary deployment strategy.
    SkaffoldSupportedCondition:
      properties:
        status:
          description: True if the version of skaffold used by this release is supported.
          type: boolean
        maintenanceModeTime:
          type: string
          description: The time at which this release's version of skaffold will enter maintenance mode.
          format: google-datetime
        supportExpirationTime:
          type: string
          format: google-datetime
          description: The time at which this release's version of skaffold will no longer be supported.
        skaffoldSupportState:
          description: The skaffold support state for this release's version of skaffold.
          enum:
            - SKAFFOLD_SUPPORT_STATE_UNSPECIFIED
            - SKAFFOLD_SUPPORT_STATE_SUPPORTED
            - SKAFFOLD_SUPPORT_STATE_MAINTENANCE_MODE
            - SKAFFOLD_SUPPORT_STATE_UNSUPPORTED
          enumDescriptions:
            - Default value. This value is unused.
            - This skaffold version is currently supported.
            - This skaffold version is in maintenance mode.
            - This skaffold version is no longer supported.
          type: string
      type: object
      id: SkaffoldSupportedCondition
      description: SkaffoldSupportedCondition contains information about when support for the release's version of skaffold ends.
    RolloutNotificationEvent:
      properties:
        targetId:
          description: ID of the `Target` that the rollout is deployed to.
          type: string
        type:
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - Restriction check failed.
            - Resource deleted.
            - 'Deprecated: This field is never used. Use release_render log type instead.'
          type: string
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - true
          description: 'Type of this notification, e.g. for a Pub/Sub failure.'
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_RENDER_STATUES_CHANGE
        rollout:
          description: The name of the `Rollout`.
          type: string
        releaseUid:
          type: string
          description: Unique identifier of the `Release`.
        pipelineUid:
          description: Unique identifier of the `DeliveryPipeline`.
          type: string
        message:
          description: Debug message for when a notification fails to send.
          type: string
      description: Payload proto for "clouddeploy.googleapis.com/rollout_notification" Platform Log event that describes the failure to send rollout status change Pub/Sub notification.
      id: RolloutNotificationEvent
      type: object
    DeliveryPipelineNotificationEvent:
      properties:
        deliveryPipeline:
          type: string
          description: The name of the `Delivery Pipeline`.
        message:
          type: string
          description: Debug message for when a notification fails to send.
        type:
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - true
          description: 'Type of this notification, e.g. for a Pub/Sub failure.'
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - Restriction check failed.
            - Resource deleted.
            - 'Deprecated: This field is never used. Use release_render log type instead.'
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_RENDER_STATUES_CHANGE
          type: string
      type: object
      description: Payload proto for "clouddeploy.googleapis.com/deliverypipeline_notification" Platform Log event that describes the failure to send delivery pipeline status change Pub/Sub notification.
      id: DeliveryPipelineNotificationEvent
    SerialPipeline:
      description: SerialPipeline defines a sequential set of stages for a `DeliveryPipeline`.
      id: SerialPipeline
      type: object
      properties:
        stages:
          description: Each stage specifies configuration for a `Target`. The ordering of this list defines the promotion flow.
          type: array
          items:
            $ref: '#/components/schemas/Stage'
    TargetNotificationEvent:
      properties:
        target:
          type: string
          description: The name of the `Target`.
        type:
          type: string
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - true
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_RENDER_STATUES_CHANGE
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - Restriction check failed.
            - Resource deleted.
            - 'Deprecated: This field is never used. Use release_render log type instead.'
          description: 'Type of this notification, e.g. for a Pub/Sub failure.'
        message:
          description: Debug message for when a notification fails to send.
          type: string
      id: TargetNotificationEvent
      type: object
      description: Payload proto for "clouddeploy.googleapis.com/target_notification" Platform Log event that describes the failure to send target status change Pub/Sub notification.
    TerminateJobRunResponse:
      properties: {}
      id: TerminateJobRunResponse
      description: The response object from `TerminateJobRun`.
      type: object
    DeployArtifact:
      properties:
        manifestPaths:
          description: Output only. File paths of the manifests applied during the deploy operation relative to the URI.
          items:
            type: string
          readOnly: true
          type: array
        artifactUri:
          readOnly: true
          type: string
          description: Output only. URI of a directory containing the artifacts. All paths are relative to this location.
      type: object
      id: DeployArtifact
      description: The artifacts produced by a deploy operation.
    ReleaseCondition:
      properties:
        skaffoldSupportedCondition:
          description: Details around the support state of the release's skaffold version.
          $ref: '#/components/schemas/SkaffoldSupportedCondition'
        releaseReadyCondition:
          $ref: '#/components/schemas/ReleaseReadyCondition'
          description: Details around the Releases's overall status.
      id: ReleaseCondition
      description: ReleaseCondition contains all conditions relevant to a Release.
      type: object
    Operation:
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
      properties:
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          type: object
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        response:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
    PrivatePool:
      properties:
        artifactStorage:
          type: string
          description: 'Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket ("gs://my-bucket") or a path within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default bucket located in the same region will be used.'
        serviceAccount:
          description: 'Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) will be used.'
          type: string
        workerPool:
          description: 'Required. Resource name of the Cloud Build worker pool to use. The format is `projects/{project}/locations/{location}/workerPools/{pool}`.'
          type: string
      id: PrivatePool
      description: Execution using a private Cloud Build pool.
      type: object
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      type: object
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          items:
            type: string
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          type: array
    KubernetesConfig:
      id: KubernetesConfig
      description: KubernetesConfig contains the Kubernetes runtime configuration.
      properties:
        gatewayServiceMesh:
          $ref: '#/components/schemas/GatewayServiceMesh'
          description: Kubernetes Gateway API service mesh configuration.
        serviceNetworking:
          description: Kubernetes Service networking configuration.
          $ref: '#/components/schemas/ServiceNetworking'
      type: object
    ReleaseRenderEvent:
      properties:
        message:
          type: string
          description: Debug message for when a render transition occurs. Provides further details as rendering progresses through render states.
        release:
          description: The name of the `Release`.
          type: string
      id: ReleaseRenderEvent
      description: Payload proto for "clouddeploy.googleapis.com/release_render" Platform Log event that describes the render status change.
      type: object
    Status:
      id: Status
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
      properties:
        code:
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
          type: integer
        details:
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
    TargetsTypeCondition:
      id: TargetsTypeCondition
      description: TargetsTypeCondition contains information on whether the Targets defined in the Delivery Pipeline are of the same type.
      type: object
      properties:
        errorDetails:
          type: string
          description: Human readable error message.
        status:
          description: True if the targets are all a comparable type. For example this is true if all targets are GKE clusters. This is false if some targets are Cloud Run targets and others are GKE clusters.
          type: boolean
    CancelRolloutRequest:
      type: object
      id: CancelRolloutRequest
      properties: {}
      description: The request object used by `CancelRollout`.
    Phase:
      description: Phase represents a collection of jobs that are logically grouped together for a `Rollout`.
      id: Phase
      type: object
      properties:
        skipMessage:
          description: 'Output only. Additional information on why the Phase was skipped, if available.'
          type: string
          readOnly: true
        state:
          enumDescriptions:
            - The Phase has an unspecified state.
            - The Phase is waiting for an earlier Phase(s) to complete.
            - The Phase is in progress.
            - The Phase has succeeded.
            - The Phase has failed.
            - The Phase was aborted.
            - The Phase was skipped.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - ABORTED
            - SKIPPED
          type: string
          readOnly: true
          description: Output only. Current state of the Phase.
        id:
          readOnly: true
          description: Output only. The ID of the Phase.
          type: string
        deploymentJobs:
          $ref: '#/components/schemas/DeploymentJobs'
          description: Output only. Deployment job composition.
          readOnly: true
        childRolloutJobs:
          $ref: '#/components/schemas/ChildRolloutJobs'
          readOnly: true
          description: Output only. ChildRollout job composition.
    Strategy:
      description: Strategy contains deployment strategy information.
      type: object
      properties:
        canary:
          description: Canary deployment strategy provides progressive percentage based deployments to a Target.
          $ref: '#/components/schemas/Canary'
        standard:
          description: Standard deployment strategy executes a single deploy and allows verifying the deployment.
          $ref: '#/components/schemas/Standard'
      id: Strategy
    CancelRolloutResponse:
      description: The response object from `CancelRollout`.
      id: CancelRolloutResponse
      type: object
      properties: {}
    GatewayServiceMesh:
      type: object
      id: GatewayServiceMesh
      properties:
        service:
          description: Required. Name of the Kubernetes Service.
          type: string
        httpRoute:
          description: Required. Name of the Gateway API HTTPRoute.
          type: string
        deployment:
          description: Required. Name of the Kubernetes Deployment whose traffic is managed by the specified HTTPRoute and Service.
          type: string
        routeUpdateWaitTime:
          format: google-duration
          type: string
          description: 'Optional. The time to wait for route updates to propagate. The maximum configurable time is 3 hours, in seconds format. If unspecified, there is no wait time.'
      description: Information about the Kubernetes Gateway API service mesh configuration.
    RenderMetadata:
      properties:
        cloudRun:
          $ref: '#/components/schemas/CloudRunRenderMetadata'
          readOnly: true
          description: Output only. Metadata associated with rendering for Cloud Run.
      description: RenderMetadata includes information associated with a `Release` render.
      type: object
      id: RenderMetadata
    Predeploy:
      description: Predeploy contains the predeploy job configuration information.
      id: Predeploy
      properties:
        actions:
          description: Optional. A sequence of Skaffold custom actions to invoke during execution of the predeploy job.
          items:
            type: string
          type: array
      type: object
    ApproveRolloutResponse:
      type: object
      properties: {}
      id: ApproveRolloutResponse
      description: The response object from `ApproveRollout`.
    ListOperationsResponse:
      type: object
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          description: A list of operations that matches the specified filter in the request.
          type: array
      id: ListOperationsResponse
    ListTargetsResponse:
      id: ListTargetsResponse
      type: object
      properties:
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        targets:
          type: array
          description: The `Target` objects.
          items:
            $ref: '#/components/schemas/Target'
      description: The response object from `ListTargets`.
    Expr:
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      id: Expr
      properties:
        description:
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
          type: string
        title:
          type: string
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
        expression:
          type: string
          description: Textual representation of an expression in Common Expression Language syntax.
        location:
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
          type: string
      type: object
    TargetArtifact:
      type: object
      properties:
        skaffoldConfigPath:
          readOnly: true
          description: Output only. File path of the resolved Skaffold configuration relative to the URI.
          type: string
        artifactUri:
          readOnly: true
          type: string
          description: 'Output only. URI of a directory containing the artifacts. This contains deployment configuration used by Skaffold during a rollout, and all paths are relative to this location.'
        phaseArtifacts:
          description: Output only. Map from the phase ID to the phase artifacts for the `Target`.
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/PhaseArtifact'
          type: object
        manifestPath:
          type: string
          description: Output only. File path of the rendered manifest relative to the URI.
          readOnly: true
      id: TargetArtifact
      description: The artifacts produced by a target render operation.
    CloudRunRenderMetadata:
      id: CloudRunRenderMetadata
      description: CloudRunRenderMetadata contains Cloud Run information associated with a `Release` render.
      type: object
      properties:
        service:
          readOnly: true
          description: 'Output only. The name of the Cloud Run Service in the rendered manifest. Format is projects/{project}/locations/{location}/services/{service}.'
          type: string
    AuditConfig:
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      id: AuditConfig
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
        service:
          type: string
          description: 'Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.'
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
          description: A list of locations that matches the specified filter in the request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
      type: object
      id: ListLocationsResponse
    PostdeployJobRun:
      type: object
      properties:
        build:
          readOnly: true
          description: 'Output only. The resource name of the Cloud Build `Build` object that is used to execute the custom actions associated with the postdeploy Job. Format is projects/{project}/locations/{location}/builds/{build}.'
          type: string
        failureCause:
          type: string
          description: Output only. The reason the postdeploy failed. This will always be unspecified while the postdeploy is in progress or if it succeeded.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - CLOUD_BUILD_REQUEST_FAILED
          enumDescriptions:
            - No reason for failure is specified.
            - 'Cloud Build is not available, either because it is not enabled or because Cloud Deploy has insufficient permissions. See [required permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).'
            - The postdeploy operation did not complete successfully; check Cloud Build logs.
            - The postdeploy job run did not complete within the alloted time.
            - Cloud Build failed to fulfill Cloud Deploy's request. See failure_message for additional details.
          readOnly: true
        failureMessage:
          type: string
          description: 'Output only. Additional information about the postdeploy failure, if available.'
          readOnly: true
      description: PostdeployJobRun contains information specific to a postdeploy `JobRun`.
      id: PostdeployJobRun
    AnthosCluster:
      properties:
        membership:
          type: string
          description: 'Membership of the GKE Hub-registered cluster to which to apply the Skaffold configuration. Format is `projects/{project}/locations/{location}/memberships/{membership_name}`.'
      description: Information specifying an Anthos Cluster.
      id: AnthosCluster
      type: object
    ChildRolloutJobs:
      description: ChildRollouts job composition
      properties:
        createRolloutJobs:
          items:
            $ref: '#/components/schemas/Job'
          readOnly: true
          type: array
          description: Output only. List of CreateChildRolloutJobs
        advanceRolloutJobs:
          description: Output only. List of AdvanceChildRolloutJobs
          readOnly: true
          items:
            $ref: '#/components/schemas/Job'
          type: array
      type: object
      id: ChildRolloutJobs
    CreateChildRolloutJobRun:
      properties:
        rollout:
          readOnly: true
          description: 'Output only. Name of the `ChildRollout`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/a-z{0,62}.'
          type: string
        rolloutPhaseId:
          description: Output only. The ID of the childRollout Phase initiated by this JobRun.
          type: string
          readOnly: true
      description: CreateChildRolloutJobRun contains information specific to a createChildRollout `JobRun`.
      id: CreateChildRolloutJobRun
      type: object
    Location:
      type: object
      description: A resource that represents a Google Cloud location.
      properties:
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          type: object
          description: Service-specific metadata. For example the available capacity at the given location.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        displayName:
          type: string
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      id: Location
    Date:
      properties:
        year:
          format: int32
          type: integer
          description: 'Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.'
        day:
          description: 'Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn''t significant.'
          type: integer
          format: int32
        month:
          format: int32
          description: 'Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.'
          type: integer
      type: object
      id: Date
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
    PipelineCondition:
      type: object
      description: PipelineCondition contains all conditions relevant to a Delivery Pipeline.
      properties:
        targetsPresentCondition:
          $ref: '#/components/schemas/TargetsPresentCondition'
          description: Details around targets enumerated in the pipeline.
        pipelineReadyCondition:
          $ref: '#/components/schemas/PipelineReadyCondition'
          description: Details around the Pipeline's overall status.
        targetsTypeCondition:
          $ref: '#/components/schemas/TargetsTypeCondition'
          description: Details on the whether the targets enumerated in the pipeline are of the same type.
      id: PipelineCondition
    TerminateJobRunRequest:
      type: object
      id: TerminateJobRunRequest
      properties: {}
      description: The request object used by `TerminateJobRun`.
    DeployJob:
      properties: {}
      id: DeployJob
      type: object
      description: A deploy Job.
    CanaryDeployment:
      description: CanaryDeployment represents the canary deployment configuration
      properties:
        verify:
          type: boolean
          description: Whether to run verify tests after each percentage deployment.
        postdeploy:
          description: 'Optional. Configuration for the postdeploy job of the last phase. If this is not configured, there will be no postdeploy job for this phase.'
          $ref: '#/components/schemas/Postdeploy'
        percentages:
          type: array
          description: Required. The percentage based deployments that will occur as a part of a `Rollout`. List is expected in ascending order and each integer n is 0 <= n < 100.
          items:
            format: int32
            type: integer
        predeploy:
          $ref: '#/components/schemas/Predeploy'
          description: 'Optional. Configuration for the predeploy job of the first phase. If this is not configured, there will be no predeploy job for this phase.'
      type: object
      id: CanaryDeployment
    JobRunNotificationEvent:
      id: JobRunNotificationEvent
      properties:
        message:
          description: Debug message for when a notification fails to send.
          type: string
        type:
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - true
          type: string
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - Restriction check failed.
            - Resource deleted.
            - 'Deprecated: This field is never used. Use release_render log type instead.'
          description: 'Type of this notification, e.g. for a Pub/Sub failure.'
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_RENDER_STATUES_CHANGE
        jobRun:
          description: The name of the `JobRun`.
          type: string
        releaseUid:
          type: string
          description: Unique identifier of the `Release`.
        pipelineUid:
          type: string
          description: Unique identifier of the `DeliveryPipeline`.
        targetId:
          description: ID of the `Target`.
          type: string
        rolloutUid:
          description: Unique identifier of the `Rollout`.
          type: string
      description: Payload proto for "clouddeploy.googleapis.com/jobrun_notification" Platform Log event that describes the failure to send JobRun resource update Pub/Sub notification.
      type: object
    DeploymentJobs:
      properties:
        verifyJob:
          description: Output only. The verify Job. Runs after a deploy if the deploy succeeds.
          $ref: '#/components/schemas/Job'
          readOnly: true
        predeployJob:
          readOnly: true
          description: 'Output only. The predeploy Job, which is the first job on the phase.'
          $ref: '#/components/schemas/Job'
        postdeployJob:
          $ref: '#/components/schemas/Job'
          readOnly: true
          description: 'Output only. The postdeploy Job, which is the last job on the phase.'
        deployJob:
          readOnly: true
          $ref: '#/components/schemas/Job'
          description: Output only. The deploy Job. This is the deploy job in the phase.
      description: Deployment job composition.
      type: object
      id: DeploymentJobs
    SkaffoldVersion:
      id: SkaffoldVersion
      description: Details of a supported Skaffold version.
      properties:
        supportEndDate:
          description: Date when this version is expected to no longer be supported.
          $ref: '#/components/schemas/Date'
        supportExpirationTime:
          format: google-datetime
          description: The time at which this version of skaffold will no longer be supported.
          type: string
        maintenanceModeTime:
          description: The time at which this version of skaffold will enter maintenance mode.
          type: string
          format: google-datetime
        version:
          type: string
          description: 'Release version number. For example, "1.20.3".'
      type: object
    ExecutionConfig:
      description: Configuration of the environment to use when calling Skaffold.
      properties:
        workerPool:
          type: string
          description: 'Optional. The resource name of the `WorkerPool`, with the format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. If this optional field is unspecified, the default Cloud Build pool will be used.'
        defaultPool:
          $ref: '#/components/schemas/DefaultPool'
          description: Optional. Use default Cloud Build pool.
        privatePool:
          $ref: '#/components/schemas/PrivatePool'
          description: Optional. Use private Cloud Build pool.
        executionTimeout:
          format: google-duration
          type: string
          description: 'Optional. Execution timeout for a Cloud Build Execution. This must be between 10m and 24h in seconds format. If unspecified, a default timeout of 1h is used.'
        usages:
          description: Required. Usages when this configuration should be applied.
          type: array
          items:
            type: string
            enum:
              - EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED
              - RENDER
              - DEPLOY
              - VERIFY
              - PREDEPLOY
              - POSTDEPLOY
            enumDescriptions:
              - Default value. This value is unused.
              - Use for rendering.
              - Use for deploying and deployment hooks.
              - Use for deployment verification.
              - Use for predeploy job execution.
              - Use for postdeploy job execution.
        serviceAccount:
          description: 'Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) is used.'
          type: string
        artifactStorage:
          description: 'Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket ("gs://my-bucket") or a path within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default bucket located in the same region will be used.'
          type: string
      id: ExecutionConfig
      type: object
    MultiTarget:
      properties:
        targetIds:
          items:
            type: string
          type: array
          description: Required. The target_ids of this multiTarget.
      description: Information specifying a multiTarget.
      type: object
      id: MultiTarget
    VerifyJobRun:
      id: VerifyJobRun
      properties:
        failureMessage:
          readOnly: true
          type: string
          description: 'Output only. Additional information about the verify failure, if available.'
        eventLogPath:
          readOnly: true
          description: Output only. File path of the Skaffold event log relative to the artifact URI.
          type: string
        failureCause:
          enumDescriptions:
            - No reason for failure is specified.
            - 'Cloud Build is not available, either because it is not enabled or because Cloud Deploy has insufficient permissions. See [required permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).'
            - The verify operation did not complete successfully; check Cloud Build logs.
            - The verify job run did not complete within the alloted time.
            - No Skaffold verify configuration was found.
            - Cloud Build failed to fulfill Cloud Deploy's request. See failure_message for additional details.
          readOnly: true
          description: Output only. The reason the verify failed. This will always be unspecified while the verify is in progress or if it succeeded.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - VERIFICATION_CONFIG_NOT_FOUND
            - CLOUD_BUILD_REQUEST_FAILED
          type: string
        build:
          readOnly: true
          type: string
          description: 'Output only. The resource name of the Cloud Build `Build` object that is used to verify. Format is projects/{project}/locations/{location}/builds/{build}.'
        artifactUri:
          description: Output only. URI of a directory containing the verify artifacts. This contains the Skaffold event log.
          readOnly: true
          type: string
      type: object
      description: VerifyJobRun contains information specific to a verify `JobRun`.
    CreateChildRolloutJob:
      id: CreateChildRolloutJob
      properties: {}
      type: object
      description: A createChildRollout Job.
    Metadata:
      description: Metadata includes information associated with a `Rollout`.
      id: Metadata
      type: object
      properties:
        cloudRun:
          description: Output only. The name of the Cloud Run Service that is associated with a `Rollout`.
          readOnly: true
          $ref: '#/components/schemas/CloudRunMetadata'
    PredeployJobRun:
      description: PredeployJobRun contains information specific to a predeploy `JobRun`.
      properties:
        failureCause:
          enumDescriptions:
            - No reason for failure is specified.
            - 'Cloud Build is not available, either because it is not enabled or because Cloud Deploy has insufficient permissions. See [required permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).'
            - The predeploy operation did not complete successfully; check Cloud Build logs.
            - The predeploy job run did not complete within the alloted time.
            - Cloud Build failed to fulfill Cloud Deploy's request. See failure_message for additional details.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - CLOUD_BUILD_REQUEST_FAILED
          readOnly: true
          type: string
          description: Output only. The reason the predeploy failed. This will always be unspecified while the predeploy is in progress or if it succeeded.
        failureMessage:
          readOnly: true
          type: string
          description: 'Output only. Additional information about the predeploy failure, if available.'
        build:
          type: string
          description: 'Output only. The resource name of the Cloud Build `Build` object that is used to execute the custom actions associated with the predeploy Job. Format is projects/{project}/locations/{location}/builds/{build}.'
          readOnly: true
      id: PredeployJobRun
      type: object
    CloudRunMetadata:
      description: CloudRunMetadata contains information from a Cloud Run deployment.
      type: object
      properties:
        serviceUrls:
          description: Output only. The Cloud Run Service urls that are associated with a `Rollout`.
          type: array
          items:
            type: string
          readOnly: true
        revision:
          type: string
          readOnly: true
          description: Output only. The Cloud Run Revision id associated with a `Rollout`.
        service:
          readOnly: true
          description: 'Output only. The name of the Cloud Run Service that is associated with a `Rollout`. Format is projects/{project}/locations/{location}/services/{service}.'
          type: string
      id: CloudRunMetadata
    DeliveryPipeline:
      id: DeliveryPipeline
      type: object
      description: A `DeliveryPipeline` resource in the Cloud Deploy API. A `DeliveryPipeline` defines a pipeline through which a Skaffold configuration can progress.
      properties:
        condition:
          description: Output only. Information around the state of the Delivery Pipeline.
          readOnly: true
          $ref: '#/components/schemas/PipelineCondition'
        updateTime:
          readOnly: true
          description: Output only. Most recent time at which the pipeline was updated.
          format: google-datetime
          type: string
        etag:
          type: string
          description: 'This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.'
        description:
          type: string
          description: Description of the `DeliveryPipeline`. Max length is 255 characters.
        name:
          description: 'Optional. Name of the `DeliveryPipeline`. Format is projects/{project}/ locations/{location}/deliveryPipelines/a-z{0,62}.'
          type: string
        createTime:
          description: Output only. Time at which the pipeline was created.
          type: string
          format: google-datetime
          readOnly: true
        suspended:
          type: boolean
          description: 'When suspended, no new releases or rollouts can be created, but in-progress ones will complete.'
        annotations:
          additionalProperties:
            type: string
          description: 'User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy.'
          type: object
        uid:
          description: Output only. Unique identifier of the `DeliveryPipeline`.
          type: string
          readOnly: true
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.'
        serialPipeline:
          description: SerialPipeline defines a sequential set of stages for a `DeliveryPipeline`.
          $ref: '#/components/schemas/SerialPipeline'
    AbandonReleaseResponse:
      type: object
      id: AbandonReleaseResponse
      description: The response object for `AbandonRelease`.
      properties: {}
    IgnoreJobRequest:
      description: The request object used by `IgnoreJob`.
      type: object
      id: IgnoreJobRequest
      properties:
        jobId:
          type: string
          description: Required. The job ID for the Job to ignore.
        phaseId:
          description: Required. The phase ID the Job to ignore belongs to.
          type: string
    DefaultPool:
      type: object
      properties:
        serviceAccount:
          type: string
          description: 'Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) will be used.'
        artifactStorage:
          type: string
          description: 'Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket ("gs://my-bucket") or a path within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default bucket located in the same region will be used.'
      id: DefaultPool
      description: Execution using the default Cloud Build pool.
    DeployJobRunMetadata:
      type: object
      description: DeployJobRunMetadata surfaces information associated with a `DeployJobRun` to the user.
      properties:
        cloudRun:
          $ref: '#/components/schemas/CloudRunMetadata'
          readOnly: true
          description: Output only. The name of the Cloud Run Service that is associated with a `DeployJobRun`.
      id: DeployJobRunMetadata
    Job:
      description: Job represents an operation for a `Rollout`.
      properties:
        deployJob:
          $ref: '#/components/schemas/DeployJob'
          description: Output only. A deploy Job.
          readOnly: true
        id:
          type: string
          readOnly: true
          description: Output only. The ID of the Job.
        postdeployJob:
          readOnly: true
          description: Output only. A postdeploy Job.
          $ref: '#/components/schemas/PostdeployJob'
        verifyJob:
          readOnly: true
          description: Output only. A verify Job.
          $ref: '#/components/schemas/VerifyJob'
        advanceChildRolloutJob:
          description: Output only. An advanceChildRollout Job.
          readOnly: true
          $ref: '#/components/schemas/AdvanceChildRolloutJob'
        createChildRolloutJob:
          $ref: '#/components/schemas/CreateChildRolloutJob'
          readOnly: true
          description: Output only. A createChildRollout Job.
        skipMessage:
          type: string
          description: 'Output only. Additional information on why the Job was skipped, if available.'
          readOnly: true
        state:
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - DISABLED
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - ABORTED
            - SKIPPED
            - IGNORED
          enumDescriptions:
            - The Job has an unspecified state.
            - The Job is waiting for an earlier Phase(s) or Job(s) to complete.
            - The Job is disabled.
            - The Job is in progress.
            - The Job succeeded.
            - The Job failed.
            - The Job was aborted.
            - The Job was skipped.
            - The Job was ignored.
          type: string
          readOnly: true
          description: Output only. The current state of the Job.
        predeployJob:
          $ref: '#/components/schemas/PredeployJob'
          description: Output only. A predeploy Job.
          readOnly: true
        jobRun:
          description: Output only. The name of the `JobRun` responsible for the most recent invocation of this Job.
          type: string
          readOnly: true
      type: object
      id: Job
    CloudRunLocation:
      properties:
        location:
          type: string
          description: 'Required. The location for the Cloud Run Service. Format must be `projects/{project}/locations/{location}`.'
      type: object
      description: Information specifying where to deploy a Cloud Run Service.
      id: CloudRunLocation
    RetryJobRequest:
      type: object
      description: RetryJobRequest is the request object used by `RetryJob`.
      properties:
        phaseId:
          description: Required. The phase ID the Job to retry belongs to.
          type: string
        jobId:
          description: Required. The job ID for the Job to retry.
          type: string
      id: RetryJobRequest
    CloudRunConfig:
      type: object
      properties:
        automaticTrafficControl:
          description: 'Whether Cloud Deploy should update the traffic stanza in a Cloud Run Service on the user''s behalf to facilitate traffic splitting. This is required to be true for CanaryDeployments, but optional for CustomCanaryDeployments.'
          type: boolean
      description: CloudRunConfig contains the Cloud Run runtime configuration.
      id: CloudRunConfig
    Postdeploy:
      properties:
        actions:
          items:
            type: string
          description: Optional. A sequence of Skaffold custom actions to invoke during execution of the postdeploy job.
          type: array
      id: Postdeploy
      description: Postdeploy contains the postdeploy job configuration information.
      type: object
    TargetRender:
      properties:
        renderingBuild:
          type: string
          description: 'Output only. The resource name of the Cloud Build `Build` object that is used to render the manifest for this target. Format is `projects/{project}/locations/{location}/builds/{build}`.'
          readOnly: true
        renderingState:
          readOnly: true
          description: Output only. Current state of the render operation for this Target.
          enumDescriptions:
            - The render operation state is unspecified.
            - The render operation has completed successfully.
            - The render operation has failed.
            - The render operation is in progress.
          type: string
          enum:
            - TARGET_RENDER_STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - IN_PROGRESS
        failureMessage:
          type: string
          readOnly: true
          description: 'Output only. Additional information about the render failure, if available.'
        metadata:
          readOnly: true
          $ref: '#/components/schemas/RenderMetadata'
          description: Output only. Metadata related to the `Release` render for this Target.
        failureCause:
          description: Output only. Reason this render failed. This will always be unspecified while the render in progress.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - CLOUD_BUILD_REQUEST_FAILED
            - CUSTOM_ACTION_NOT_FOUND
          enumDescriptions:
            - No reason for failure is specified.
            - 'Cloud Build is not available, either because it is not enabled or because Cloud Deploy has insufficient permissions. See [required permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).'
            - The render operation did not complete successfully; check Cloud Build logs.
            - Cloud Build failed to fulfill Cloud Deploy's request. See failure_message for additional details.
            - The render operation did not complete successfully because the custom action required for predeploy or postdeploy was not found in the skaffold configuration. See failure_message for additional details.
          readOnly: true
          type: string
      type: object
      description: Details of rendering for a single target.
      id: TargetRender
    AdvanceChildRolloutJob:
      properties: {}
      id: AdvanceChildRolloutJob
      type: object
      description: An advanceChildRollout Job.
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  x-stackQL-resources:
    locations:
      id: google.clouddeploy.locations
      name: locations
      title: Locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
    config:
      id: google.clouddeploy.config
      name: config
      title: Config
      methods:
        get_config:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/config/methods/get_config'
        insert: []
        update: []
        delete: []
    operations:
      id: google.clouddeploy.operations
      name: operations
      title: Operations
      methods:
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    targets_iam_policies:
      id: google.clouddeploy.targets_iam_policies
      name: targets_iam_policies
      title: Targets Iam Policies
      methods:
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/targets_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    targets:
      id: google.clouddeploy.targets
      name: targets
      title: Targets
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.targets
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/targets/methods/list'
          - $ref: '#/components/x-stackQL-resources/targets/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/targets/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/targets/methods/delete'
    releases:
      id: google.clouddeploy.releases
      name: releases
      title: Releases
      methods:
        abandon:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}:abandon/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.releases
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/releases/methods/list'
          - $ref: '#/components/x-stackQL-resources/releases/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/releases/methods/create'
        update: []
        delete: []
    rollouts:
      id: google.clouddeploy.rollouts
      name: rollouts
      title: Rollouts
      methods:
        ignore_job:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}:ignoreJob/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.rollouts
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        approve:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}:approve/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        retry_job:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}:retryJob/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        advance:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}:advance/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/rollouts/methods/list'
          - $ref: '#/components/x-stackQL-resources/rollouts/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/rollouts/methods/create'
        update: []
        delete: []
    job_runs:
      id: google.clouddeploy.job_runs
      name: job_runs
      title: Job Runs
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}~1jobRuns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobRuns
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}~1jobRuns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}~1jobRuns~1{jobRunsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        terminate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}~1jobRuns~1{jobRunsId}:terminate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/job_runs/methods/list'
          - $ref: '#/components/x-stackQL-resources/job_runs/methods/get'
        insert: []
        update: []
        delete: []
    delivery_pipelines_iam_policies:
      id: google.clouddeploy.delivery_pipelines_iam_policies
      name: delivery_pipelines_iam_policies
      title: Delivery Pipelines Iam Policies
      methods:
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/delivery_pipelines_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    delivery_pipelines:
      id: google.clouddeploy.delivery_pipelines
      name: delivery_pipelines
      title: Delivery Pipelines
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.deliveryPipelines
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/delivery_pipelines/methods/get'
          - $ref: '#/components/x-stackQL-resources/delivery_pipelines/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/delivery_pipelines/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/delivery_pipelines/methods/delete'
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
    get:
      description: Gets information about a location.
      operationId: clouddeploy.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: clouddeploy.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v1/projects/{projectsId}/locations/{locationsId}/config':
    parameters: *ref_1
    get:
      description: Gets the configuration for a location.
      operationId: clouddeploy.projects.locations.getConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: config
      x-stackQL-method: get_config
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: clouddeploy.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: clouddeploy.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: clouddeploy.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: clouddeploy.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: clouddeploy.projects.locations.targets.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: targets_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: clouddeploy.projects.locations.targets.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: targets_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/targets':
    parameters: *ref_1
    post:
      description: Creates a new Target in a given project and location.
      operationId: clouddeploy.projects.locations.targets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: targetId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: targets
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists Targets in a given project and location.
      operationId: clouddeploy.projects.locations.targets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: targets
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.targets
  '/v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}':
    parameters: *ref_1
    get:
      description: Gets details of a single Target.
      operationId: clouddeploy.projects.locations.targets.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: targets
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a single Target.
      operationId: clouddeploy.projects.locations.targets.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: targets
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates the parameters of a single Target.
      operationId: clouddeploy.projects.locations.targets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: targets
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: clouddeploy.projects.locations.targets.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: targets_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}:abandon':
    parameters: *ref_1
    post:
      description: Abandons a Release in the Delivery Pipeline.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.abandon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbandonReleaseRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbandonReleaseResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
      x-stackQL-resource: releases
      x-stackQL-method: abandon
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases':
    parameters: *ref_1
    post:
      description: Creates a new Release in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Release'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: releaseId
          schema:
            type: string
      x-stackQL-resource: releases
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists Releases in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReleasesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: releases
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.releases
  '/v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}':
    parameters: *ref_1
    get:
      description: Gets details of a single Release.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
      x-stackQL-resource: releases
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:ignoreJob':
    parameters: *ref_1
    post:
      description: Ignores the specified Job in a Rollout.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.ignoreJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IgnoreJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IgnoreJobResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rollouts
      x-stackQL-method: ignore_job
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:cancel':
    parameters: *ref_1
    post:
      description: Cancels a Rollout in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelRolloutRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelRolloutResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rollouts
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts':
    parameters: *ref_1
    post:
      description: Creates a new Rollout in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rollout'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: query
          name: rolloutId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: startingPhaseId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: rollouts
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists Rollouts in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRolloutsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: rollouts
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.rollouts
  '/v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:approve':
    parameters: *ref_1
    post:
      description: Approves a Rollout.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.approve
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveRolloutRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApproveRolloutResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rollouts
      x-stackQL-method: approve
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:retryJob':
    parameters: *ref_1
    post:
      description: Retries the specified Job in a Rollout.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.retryJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetryJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryJobResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rollouts
      x-stackQL-method: retry_job
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}':
    parameters: *ref_1
    get:
      description: Gets details of a single Rollout.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rollout'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rollouts
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:advance':
    parameters: *ref_1
    post:
      description: Advances a Rollout in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.advance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvanceRolloutRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvanceRolloutResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rollouts
      x-stackQL-method: advance
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}/jobRuns':
    parameters: *ref_1
    get:
      description: Lists JobRuns in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobRunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: job_runs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.jobRuns
  '/v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}/jobRuns/{jobRunsId}':
    parameters: *ref_1
    get:
      description: Gets details of a single JobRun.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
        - in: path
          name: jobRunsId
          required: true
          schema:
            type: string
      x-stackQL-resource: job_runs
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}/jobRuns/{jobRunsId}:terminate':
    parameters: *ref_1
    post:
      description: Terminates a Job Run in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.terminate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminateJobRunRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminateJobRunResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
        - in: path
          name: jobRunsId
          required: true
          schema:
            type: string
      x-stackQL-resource: job_runs
      x-stackQL-method: terminate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: clouddeploy.projects.locations.deliveryPipelines.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: delivery_pipelines_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single DeliveryPipeline.
      operationId: clouddeploy.projects.locations.deliveryPipelines.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryPipeline'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: delivery_pipelines
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a single DeliveryPipeline.
      operationId: clouddeploy.projects.locations.deliveryPipelines.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: delivery_pipelines
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single DeliveryPipeline.
      operationId: clouddeploy.projects.locations.deliveryPipelines.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryPipeline'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: delivery_pipelines
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: clouddeploy.projects.locations.deliveryPipelines.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: delivery_pipelines_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines':
    parameters: *ref_1
    post:
      description: Creates a new DeliveryPipeline in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryPipeline'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: deliveryPipelineId
          schema:
            type: string
      x-stackQL-resource: delivery_pipelines
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists DeliveryPipelines in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeliveryPipelinesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: delivery_pipelines
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.deliveryPipelines
  '/v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: clouddeploy.projects.locations.deliveryPipelines.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: delivery_pipelines_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
