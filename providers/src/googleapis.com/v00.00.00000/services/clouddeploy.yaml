openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Cloud Deploy API
  description: ''
  version: v1
  x-discovery-doc-revision: '20221213'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://cloud.google.com/deploy/
servers:
  - url: https://clouddeploy.googleapis.com
components:
  schemas:
    RolloutNotificationEvent:
      description: Payload proto for "clouddeploy.googleapis.com/rollout_notification" Platform Log event that describes the failure to send rollout status change Pub/Sub notification.
      type: object
      properties:
        targetId:
          description: ID of the `Target` that the rollout is deployed to.
          type: string
        pipelineUid:
          description: Unique identifier of the `DeliveryPipeline`.
          type: string
        releaseUid:
          description: Unique identifier of the `Release`.
          type: string
        message:
          description: Debug message for when a notification fails to send.
          type: string
        type:
          description: Type of this notification, e.g. for a Pub/Sub failure.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RENDER_STATUES_CHANGE
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - 'Deprecated: This field is never used. Use release_render log type instead.'
        rollout:
          type: string
          description: The name of the `Rollout`.
      id: RolloutNotificationEvent
    Expr:
      type: object
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      properties:
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        expression:
          type: string
          description: Textual representation of an expression in Common Expression Language syntax.
        description:
          type: string
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
        title:
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
      id: Expr
    Standard:
      properties:
        verify:
          type: boolean
          description: Whether to verify a deployment.
      description: Standard represents the standard deployment strategy.
      id: Standard
      type: object
    Policy:
      type: object
      id: Policy
      properties:
        etag:
          format: byte
          type: string
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
        bindings:
          type: array
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: '#/components/schemas/Binding'
        auditConfigs:
          items:
            $ref: '#/components/schemas/AuditConfig'
          description: Specifies cloud audit logging configuration for this policy.
          type: array
        version:
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          type: integer
          format: int32
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
    OperationMetadata:
      properties:
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          type: string
          readOnly: true
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          type: string
          readOnly: true
        requestedCancellation:
          readOnly: true
          type: boolean
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
        apiVersion:
          type: string
          readOnly: true
          description: Output only. API version used to start the operation.
      description: Represents the metadata of the long-running operation.
      id: OperationMetadata
      type: object
    ListReleasesResponse:
      properties:
        releases:
          type: array
          items:
            $ref: '#/components/schemas/Release'
          description: The `Release` objects.
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
      type: object
      id: ListReleasesResponse
      description: The response object from `ListReleases`.
    Location:
      description: A resource that represents Google Cloud Platform location.
      id: Location
      type: object
      properties:
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
        metadata:
          type: object
          description: Service-specific metadata. For example the available capacity at the given location.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
    ListRolloutsResponse:
      properties:
        rollouts:
          type: array
          items:
            $ref: '#/components/schemas/Rollout'
          description: The `Rollout` objects.
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
      type: object
      id: ListRolloutsResponse
      description: ListRolloutsResponse is the response object reutrned by `ListRollouts`.
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      id: SetIamPolicyRequest
      type: object
      properties:
        updateMask:
          format: google-fieldmask
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          type: string
        policy:
          $ref: '#/components/schemas/Policy'
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
    TargetsTypeCondition:
      type: object
      properties:
        errorDetails:
          type: string
          description: Human readable error message.
        status:
          type: boolean
          description: True if the targets are all a comparable type. For example this is true if all targets are GKE clusters. This is false if some targets are Cloud Run targets and others are GKE clusters.
      description: TargetsTypeCondition contains information on whether the Targets defined in the Delivery Pipeline are of the same type.
      id: TargetsTypeCondition
    Status:
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
        details:
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
    DeploymentJobs:
      type: object
      properties:
        deployJob:
          $ref: '#/components/schemas/Job'
          description: Output only. The deploy Job. This is the first job run in the phase.
          readOnly: true
        verifyJob:
          readOnly: true
          $ref: '#/components/schemas/Job'
          description: Output only. The verify Job. Runs after a deploy if the deploy succeeds.
      description: Deployment job composition.
      id: DeploymentJobs
    VerifyJob:
      type: object
      description: A verify Job.
      properties: {}
      id: VerifyJob
    TargetRender:
      description: Details of rendering for a single target.
      type: object
      id: TargetRender
      properties:
        failureMessage:
          readOnly: true
          type: string
          description: Output only. Additional information about the render failure, if available.
        failureCause:
          enumDescriptions:
            - No reason for failure is specified.
            - Cloud Build is not available, either because it is not enabled or because Google Cloud Deploy has insufficient permissions. See [required permission](/deploy/docs/cloud-deploy-service-account#required_permissions).
            - The render operation did not complete successfully; check Cloud Build logs.
            - Cloud Build failed to fulfill Google Cloud Deploy's request. See failure_message for additional details.
          type: string
          description: Output only. Reason this render failed. This will always be unspecified while the render in progress.
          readOnly: true
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - CLOUD_BUILD_REQUEST_FAILED
        renderingState:
          enumDescriptions:
            - The render operation state is unspecified.
            - The render operation has completed successfully.
            - The render operation has failed.
            - The render operation is in progress.
          enum:
            - TARGET_RENDER_STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - IN_PROGRESS
          readOnly: true
          type: string
          description: Output only. Current state of the render operation for this Target.
        renderingBuild:
          description: Output only. The resource name of the Cloud Build `Build` object that is used to render the manifest for this target. Format is `projects/{project}/locations/{location}/builds/{build}`.
          type: string
          readOnly: true
    Operation:
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        response:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
        name:
          type: string
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
      description: This resource represents a long-running operation that is the result of a network API call.
      id: Operation
      type: object
    ListTargetsResponse:
      description: The response object from `ListTargets`.
      type: object
      id: ListTargetsResponse
      properties:
        targets:
          description: The `Target` objects.
          type: array
          items:
            $ref: '#/components/schemas/Target'
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
    Rollout:
      description: A `Rollout` resource in the Google Cloud Deploy API. A `Rollout` contains information around a specific deployment to a `Target`.
      id: Rollout
      type: object
      properties:
        annotations:
          type: object
          description: User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
          additionalProperties:
            type: string
        uid:
          readOnly: true
          description: Output only. Unique identifier of the `Rollout`.
          type: string
        deployEndTime:
          type: string
          readOnly: true
          description: Output only. Time at which the `Rollout` finished deploying.
          format: google-datetime
        deployStartTime:
          type: string
          format: google-datetime
          description: Output only. Time at which the `Rollout` started deploying.
          readOnly: true
        approvalState:
          enum:
            - APPROVAL_STATE_UNSPECIFIED
            - NEEDS_APPROVAL
            - DOES_NOT_NEED_APPROVAL
            - APPROVED
            - REJECTED
          type: string
          readOnly: true
          description: Output only. Approval state of the `Rollout`.
          enumDescriptions:
            - The `Rollout` has an unspecified approval state.
            - The `Rollout` requires approval.
            - The `Rollout` does not require approval.
            - The `Rollout` has been approved.
            - The `Rollout` has been rejected.
        approveTime:
          readOnly: true
          description: Output only. Time at which the `Rollout` was approved.
          type: string
          format: google-datetime
        metadata:
          description: Output only. Metadata contains information about the rollout.
          $ref: '#/components/schemas/Metadata'
          readOnly: true
        failureReason:
          description: Output only. Additional information about the rollout failure, if available.
          type: string
          readOnly: true
        deployingBuild:
          readOnly: true
          description: Output only. The resource name of the Cloud Build `Build` object that is used to deploy the Rollout. Format is `projects/{project}/locations/{location}/builds/{build}`.
          type: string
        targetId:
          type: string
          description: Required. The ID of Target to which this `Rollout` is deploying.
        enqueueTime:
          type: string
          format: google-datetime
          description: Output only. Time at which the `Rollout` was enqueued.
          readOnly: true
        state:
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - IN_PROGRESS
            - PENDING_APPROVAL
            - APPROVAL_REJECTED
            - PENDING
            - PENDING_RELEASE
          type: string
          enumDescriptions:
            - The `Rollout` has an unspecified state.
            - The `Rollout` has completed successfully.
            - The `Rollout` has failed.
            - The `Rollout` is being deployed.
            - The `Rollout` needs approval.
            - An approver rejected the `Rollout`.
            - The `Rollout` is waiting for an earlier Rollout(s) to complete on this `Target`.
            - The `Rollout` is waiting for the `Release` to be fully rendered.
          description: Output only. Current state of the `Rollout`.
          readOnly: true
        deployFailureCause:
          enumDescriptions:
            - No reason for failure is specified.
            - Cloud Build is not available, either because it is not enabled or because Cloud Deploy has insufficient permissions. See [required permission](/deploy/docs/cloud-deploy-service-account#required_permissions).
            - The deploy operation did not complete successfully; check Cloud Build logs.
            - Deployment did not complete within the alloted time.
            - Release is in a failed state.
            - Release is abandoned.
            - No skaffold verify configuration was found.
            - Cloud Build failed to fulfill Google Cloud Deploy's request. See failure_message for additional details.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - RELEASE_FAILED
            - RELEASE_ABANDONED
            - VERIFICATION_CONFIG_NOT_FOUND
            - CLOUD_BUILD_REQUEST_FAILED
          description: Output only. The reason this rollout failed. This will always be unspecified while the rollout is in progress.
          type: string
          readOnly: true
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. Time at which the `Rollout` was created.
        labels:
          description: 'Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.'
          type: object
          additionalProperties:
            type: string
        name:
          type: string
          description: Optional. Name of the `Rollout`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/a-z{0,62}.
        phases:
          items:
            $ref: '#/components/schemas/Phase'
          type: array
          readOnly: true
          description: Output only. The phases that represent the workflows of this `Rollout`.
        etag:
          description: This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          type: string
        description:
          type: string
          description: Description of the `Rollout` for user purposes. Max length is 255 characters.
    CloudRunLocation:
      description: Information specifying where to deploy a Cloud Run Service.
      properties:
        location:
          description: Required. The location for the Cloud Run Service. Format must be `projects/{project}/locations/{location}`.
          type: string
      type: object
      id: CloudRunLocation
    VerifyJobRun:
      description: VerifyJobRun contains information specific to a verify `JobRun`.
      type: object
      properties:
        artifactUri:
          description: Output only. URI of a directory containing the verify artifacts. This contains the Skaffold event log.
          type: string
          readOnly: true
        build:
          type: string
          readOnly: true
          description: Output only. The resource name of the Cloud Build `Build` object that is used to verify. Format is projects/{project}/locations/{location}/builds/{build}.
        failureMessage:
          type: string
          description: Output only. Additional information about the verify failure, if available.
          readOnly: true
        failureCause:
          description: Output only. The reason the verify failed. This will always be unspecified while the verify is in progress or if it succeeded.
          type: string
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - VERIFICATION_CONFIG_NOT_FOUND
            - CLOUD_BUILD_REQUEST_FAILED
          readOnly: true
          enumDescriptions:
            - No reason for failure is specified.
            - Cloud Build is not available, either because it is not enabled or because Google Cloud Deploy has insufficient permissions. See [required permission](/deploy/docs/cloud-deploy-service-account#required_permissions).
            - The verify operation did not complete successfully; check Cloud Build logs.
            - The verify build did not complete within the alloted time.
            - No Skaffold verify configuration was found.
            - Cloud Build failed to fulfill Google Cloud Deploy's request. See failure_message for additional details.
        eventLogPath:
          type: string
          description: Output only. File path of the Skaffold event log relative to the artifact URI.
          readOnly: true
      id: VerifyJobRun
    Strategy:
      type: object
      properties:
        standard:
          description: Standard deployment strategy executes a single deploy and allows verifying the deployment.
          $ref: '#/components/schemas/Standard'
      id: Strategy
      description: Strategy contains deployment strategy information.
    ListDeliveryPipelinesResponse:
      description: The response object from `ListDeliveryPipelines`.
      id: ListDeliveryPipelinesResponse
      properties:
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        deliveryPipelines:
          items:
            $ref: '#/components/schemas/DeliveryPipeline'
          type: array
          description: The `DeliveryPipeline` objects.
      type: object
    Stage:
      properties:
        profiles:
          type: array
          items:
            type: string
          description: Skaffold profiles to use when rendering the manifest for this stage's `Target`.
        strategy:
          description: Optional. The strategy to use for a `Rollout` to this stage.
          $ref: '#/components/schemas/Strategy'
        targetId:
          type: string
          description: The target_id to which this stage points. This field refers exclusively to the last segment of a target name. For example, this field would just be `my-target` (rather than `projects/project/locations/location/targets/my-target`). The location of the `Target` is inferred to be the same as the location of the `DeliveryPipeline` that contains this `Stage`.
      type: object
      description: Stage specifies a location to which to deploy.
      id: Stage
    JobRun:
      type: object
      id: JobRun
      properties:
        jobId:
          description: Output only. ID of the `Rollout` job this `JobRun` corresponds to.
          readOnly: true
          type: string
        etag:
          type: string
          readOnly: true
          description: Output only. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. Time at which the `JobRun` was created.
        startTime:
          type: string
          format: google-datetime
          description: Output only. Time at which the `JobRun` was started.
          readOnly: true
        name:
          description: Optional. Name of the `JobRun`. Format is projects/{project}/locations/{location}/ deliveryPipelines/{deliveryPipeline}/releases/{releases}/rollouts/ {rollouts}/jobRuns/{uuid}.
          type: string
        phaseId:
          readOnly: true
          description: Output only. ID of the `Rollout` phase this `JobRun` belongs in.
          type: string
        endTime:
          type: string
          description: Output only. Time at which the `JobRun` ended.
          format: google-datetime
          readOnly: true
        deployJobRun:
          description: Output only. Information specific to a deploy `JobRun`.
          readOnly: true
          $ref: '#/components/schemas/DeployJobRun'
        verifyJobRun:
          description: Output only. Information specific to a verify `JobRun`.
          $ref: '#/components/schemas/VerifyJobRun'
          readOnly: true
        state:
          type: string
          enumDescriptions:
            - The `JobRun` has an unspecified state.
            - The `JobRun` is in progress.
            - The `JobRun` has succeeded.
            - The `JobRun` has failed.
          enum:
            - STATE_UNSPECIFIED
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
          readOnly: true
          description: Output only. The current state of the `JobRun`.
        uid:
          type: string
          readOnly: true
          description: Output only. Unique identifier of the `JobRun`.
      description: A `JobRun` resource in the Google Cloud Deploy API. A `JobRun` contains information of a single `Rollout` job evaluation.
    ListOperationsResponse:
      type: object
      description: The response message for Operations.ListOperations.
      id: ListOperationsResponse
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          type: array
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
    ListJobRunsResponse:
      type: object
      description: ListJobRunsResponse is the response object returned by `ListJobRuns`.
      properties:
        unreachable:
          type: array
          description: Locations that could not be reached
          items:
            type: string
        jobRuns:
          description: The `JobRun` objects.
          items:
            $ref: '#/components/schemas/JobRun'
          type: array
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
      id: ListJobRunsResponse
    AuditLogConfig:
      type: object
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      properties:
        exemptedMembers:
          type: array
          items:
            type: string
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
        logType:
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          description: The log type that this config enables.
      id: AuditLogConfig
    DeployJobRun:
      id: DeployJobRun
      properties:
        failureMessage:
          readOnly: true
          description: Output only. Additional information about the deploy failure, if available.
          type: string
        metadata:
          $ref: '#/components/schemas/DeployJobRunMetadata'
          description: Output only. Metadata containing information about the deploy job run.
          readOnly: true
        failureCause:
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - CLOUD_BUILD_REQUEST_FAILED
          type: string
          enumDescriptions:
            - No reason for failure is specified.
            - Cloud Build is not available, either because it is not enabled or because Google Cloud Deploy has insufficient permissions. See [Required permission](/deploy/docs/cloud-deploy-service-account#required_permissions).
            - The deploy operation did not complete successfully; check Cloud Build logs.
            - The deploy build did not complete within the alloted time.
            - Cloud Build failed to fulfill Google Cloud Deploy's request. See failure_message for additional details.
          readOnly: true
          description: Output only. The reason the deploy failed. This will always be unspecified while the deploy is in progress or if it succeeded.
        build:
          readOnly: true
          type: string
          description: Output only. The resource name of the Cloud Build `Build` object that is used to deploy. Format is projects/{project}/locations/{location}/builds/{build}.
      description: DeployJobRun contains information specific to a deploy `JobRun`.
      type: object
    AbandonReleaseResponse:
      description: The response object for `AbandonRelease`.
      properties: {}
      type: object
      id: AbandonReleaseResponse
    AnthosCluster:
      properties:
        membership:
          description: Membership of the GKE Hub-registered cluster to which to apply the Skaffold configuration. Format is `projects/{project}/locations/{location}/memberships/{membership_name}`.
          type: string
      type: object
      description: Information specifying an Anthos Cluster.
      id: AnthosCluster
    GkeCluster:
      type: object
      properties:
        cluster:
          description: Information specifying a GKE Cluster. Format is `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}.
          type: string
        internalIp:
          description: Optional. If true, `cluster` is accessed using the private IP address of the control plane endpoint. Otherwise, the default IP address of the control plane endpoint is used. The default IP address is the private IP address for clusters with private control-plane endpoints and the public IP address otherwise. Only specify this option when `cluster` is a [private GKE cluster](https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept).
          type: boolean
      description: Information specifying a GKE Cluster.
      id: GkeCluster
    DeliveryPipelineNotificationEvent:
      id: DeliveryPipelineNotificationEvent
      properties:
        deliveryPipeline:
          type: string
          description: The name of the `Delivery Pipeline`.
        message:
          type: string
          description: Debug message for when a notification fails to send.
        type:
          description: Type of this notification, e.g. for a Pub/Sub failure.
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - 'Deprecated: This field is never used. Use release_render log type instead.'
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RENDER_STATUES_CHANGE
          type: string
      description: Payload proto for "clouddeploy.googleapis.com/deliverypipeline_notification" Platform Log event that describes the failure to send delivery pipeline status change Pub/Sub notification.
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      id: ListLocationsResponse
      properties:
        locations:
          items:
            $ref: '#/components/schemas/Location'
          description: A list of locations that matches the specified filter in the request.
          type: array
        nextPageToken:
          type: string
          description: The standard List next-page token.
      type: object
    TargetNotificationEvent:
      type: object
      description: Payload proto for "clouddeploy.googleapis.com/target_notification" Platform Log event that describes the failure to send target status change Pub/Sub notification.
      properties:
        message:
          description: Debug message for when a notification fails to send.
          type: string
        type:
          type: string
          description: Type of this notification, e.g. for a Pub/Sub failure.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RENDER_STATUES_CHANGE
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - 'Deprecated: This field is never used. Use release_render log type instead.'
        target:
          description: The name of the `Target`.
          type: string
      id: TargetNotificationEvent
    ReleaseRenderEvent:
      id: ReleaseRenderEvent
      properties:
        release:
          type: string
          description: The name of the `Release`.
        message:
          type: string
          description: Debug message for when a render transition occurs. Provides further details as rendering progresses through render states.
      description: Payload proto for "clouddeploy.googleapis.com/release_render" Platform Log event that describes the render status change.
      type: object
    CancelOperationRequest:
      type: object
      properties: {}
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
    ApproveRolloutResponse:
      id: ApproveRolloutResponse
      description: The response object from `ApproveRollout`.
      type: object
      properties: {}
    Binding:
      id: Binding
      type: object
      properties:
        members:
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. '
          items:
            type: string
          type: array
        role:
          type: string
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
        condition:
          $ref: '#/components/schemas/Expr'
          description: The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
      description: Associates `members`, or principals, with a `role`.
    Target:
      properties:
        run:
          description: Information specifying a Cloud Run deployment target.
          $ref: '#/components/schemas/CloudRunLocation'
        createTime:
          description: Output only. Time at which the `Target` was created.
          readOnly: true
          format: google-datetime
          type: string
        name:
          type: string
          description: Optional. Name of the `Target`. Format is projects/{project}/locations/{location}/targets/a-z{0,62}.
        requireApproval:
          description: Optional. Whether or not the `Target` requires approval.
          type: boolean
        executionConfigs:
          description: Configurations for all execution that relates to this `Target`. Each `ExecutionEnvironmentUsage` value may only be used in a single configuration; using the same value multiple times is an error. When one or more configurations are specified, they must include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no configurations are specified, execution will use the default specified in `DefaultPool`.
          items:
            $ref: '#/components/schemas/ExecutionConfig'
          type: array
        labels:
          description: 'Optional. Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.'
          additionalProperties:
            type: string
          type: object
        description:
          description: Optional. Description of the `Target`. Max length is 255 characters.
          type: string
        anthosCluster:
          $ref: '#/components/schemas/AnthosCluster'
          description: Information specifying an Anthos Cluster.
        uid:
          description: Output only. Unique identifier of the `Target`.
          type: string
          readOnly: true
        etag:
          description: Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          type: string
        annotations:
          type: object
          additionalProperties:
            type: string
          description: Optional. User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
        gke:
          description: Information specifying a GKE Cluster.
          $ref: '#/components/schemas/GkeCluster'
        targetId:
          readOnly: true
          type: string
          description: Output only. Resource id of the `Target`.
        updateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. Most recent time at which the `Target` was updated.
      type: object
      description: A `Target` resource in the Google Cloud Deploy API. A `Target` defines a location to which a Skaffold configuration can be deployed.
      id: Target
    Config:
      id: Config
      properties:
        defaultSkaffoldVersion:
          type: string
          description: Default Skaffold version that is assigned when a Release is created without specifying a Skaffold version.
        supportedVersions:
          description: All supported versions of Skaffold.
          items:
            $ref: '#/components/schemas/SkaffoldVersion'
          type: array
        name:
          description: Name of the configuration.
          type: string
      type: object
      description: Service-wide configuration.
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
    Metadata:
      properties:
        cloudRun:
          readOnly: true
          $ref: '#/components/schemas/CloudRunMetadata'
          description: Output only. The name of the Cloud Run Service that is associated with a `Rollout`.
      description: Metadata includes information associated with a `Rollout`.
      id: Metadata
      type: object
    Empty:
      id: Empty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      type: object
    RetryJobRequest:
      id: RetryJobRequest
      properties:
        jobId:
          type: string
          description: Required. The job ID for the Job to retry.
        phaseId:
          description: Required. The phase ID the Job to retry belongs to.
          type: string
      description: RetryJobRequest is the request object used by `RetryJob`.
      type: object
    Phase:
      id: Phase
      type: object
      description: Phase represents a collection of jobs that are logically grouped together for a `Rollout`.
      properties:
        id:
          description: Output only. The ID of the Phase.
          type: string
          readOnly: true
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - ABORTED
          readOnly: true
          enumDescriptions:
            - The Phase has an unspecified state.
            - The Phase is waiting for an earlier Phase(s) to complete.
            - The Phase is in progress.
            - The Phase has succeeded.
            - The Phase has failed.
            - The Phase was aborted.
          description: Output only. Current state of the Phase.
        deploymentJobs:
          $ref: '#/components/schemas/DeploymentJobs'
          description: Output only. Deployment job composition.
          readOnly: true
    JobRunNotificationEvent:
      description: Payload proto for "clouddeploy.googleapis.com/jobrun_notification" Platform Log event that describes the failure to send JobRun resource update Pub/Sub notification.
      properties:
        message:
          description: Debug message for when a notification fails to send.
          type: string
        releaseUid:
          type: string
          description: Unique identifier of the `Release`.
        pipelineUid:
          description: Unique identifier of the `DeliveryPipeline`.
          type: string
        jobRun:
          type: string
          description: The name of the `JobRun`.
        rolloutUid:
          type: string
          description: Unique identifier of the `Rollout`.
        type:
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - 'Deprecated: This field is never used. Use release_render log type instead.'
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RENDER_STATUES_CHANGE
          description: Type of this notification, e.g. for a Pub/Sub failure.
        targetId:
          type: string
          description: ID of the `Target`.
      type: object
      id: JobRunNotificationEvent
    AuditConfig:
      type: object
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      properties:
        auditLogConfigs:
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          type: array
          description: The configuration for logging of each type of permission.
        service:
          description: Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
          type: string
      id: AuditConfig
    AbandonReleaseRequest:
      description: The request object used by `AbandonRelease`.
      type: object
      properties: {}
      id: AbandonReleaseRequest
    Job:
      type: object
      properties:
        id:
          description: Output only. The ID of the Job.
          readOnly: true
          type: string
        verifyJob:
          $ref: '#/components/schemas/VerifyJob'
          description: Output only. A verify Job.
          readOnly: true
        deployJob:
          $ref: '#/components/schemas/DeployJob'
          description: Output only. A deploy Job.
          readOnly: true
        jobRun:
          description: Output only. The name of the `JobRun` responsible for the most recent invocation of this Job.
          readOnly: true
          type: string
        state:
          enumDescriptions:
            - The Job has an unspecified state.
            - The Job is waiting for an earlier Phase(s) or Job(s) to complete.
            - The Job is disabled.
            - The Job is in progress.
            - The Job succeeded.
            - The Job failed.
            - The Job was aborted.
          type: string
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - DISABLED
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - ABORTED
          description: Output only. The current state of the Job.
      description: Job represents an operation for a `Rollout`.
      id: Job
    ReleaseNotificationEvent:
      description: Payload proto for "clouddeploy.googleapis.com/release_notification" Platform Log event that describes the failure to send release status change Pub/Sub notification.
      type: object
      properties:
        message:
          description: Debug message for when a notification fails to send.
          type: string
        type:
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RENDER_STATUES_CHANGE
          type: string
          description: Type of this notification, e.g. for a Pub/Sub failure.
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - 'Deprecated: This field is never used. Use release_render log type instead.'
        release:
          description: The name of the `Release`.
          type: string
      id: ReleaseNotificationEvent
    BuildArtifact:
      properties:
        tag:
          description: Image tag to use. This will generally be the full path to an image, such as "gcr.io/my-project/busybox:1.2.3" or "gcr.io/my-project/busybox@sha256:abc123".
          type: string
        image:
          description: Image name in Skaffold configuration.
          type: string
      description: Description of an a image to use during Skaffold rendering.
      type: object
      id: BuildArtifact
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      id: TestIamPermissionsResponse
      type: object
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
          type: array
    SerialPipeline:
      description: SerialPipeline defines a sequential set of stages for a `DeliveryPipeline`.
      id: SerialPipeline
      properties:
        stages:
          description: Each stage specifies configuration for a `Target`. The ordering of this list defines the promotion flow.
          items:
            $ref: '#/components/schemas/Stage'
          type: array
      type: object
    PipelineCondition:
      properties:
        targetsPresentCondition:
          description: Details around targets enumerated in the pipeline.
          $ref: '#/components/schemas/TargetsPresentCondition'
        pipelineReadyCondition:
          $ref: '#/components/schemas/PipelineReadyCondition'
          description: Details around the Pipeline's overall status.
        targetsTypeCondition:
          description: Details on the whether the targets enumerated in the pipeline are of the same type.
          $ref: '#/components/schemas/TargetsTypeCondition'
      id: PipelineCondition
      type: object
      description: PipelineCondition contains all conditions relevant to a Delivery Pipeline.
    Release:
      description: A `Release` resource in the Google Cloud Deploy API. A `Release` defines a specific Skaffold configuration instance that can be deployed.
      id: Release
      properties:
        buildArtifacts:
          items:
            $ref: '#/components/schemas/BuildArtifact'
          type: array
          description: List of artifacts to pass through to Skaffold command.
        renderState:
          type: string
          enumDescriptions:
            - The render state is unspecified.
            - All rendering operations have completed successfully.
            - All rendering operations have completed, and one or more have failed.
            - Rendering has started and is not complete.
          readOnly: true
          enum:
            - RENDER_STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - IN_PROGRESS
          description: Output only. Current state of the render operation.
        name:
          type: string
          description: Optional. Name of the `Release`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/a-z{0,62}.
        uid:
          description: Output only. Unique identifier of the `Release`.
          type: string
          readOnly: true
        deliveryPipelineSnapshot:
          description: Output only. Snapshot of the parent pipeline taken at release creation time.
          $ref: '#/components/schemas/DeliveryPipeline'
          readOnly: true
        abandoned:
          readOnly: true
          type: boolean
          description: Output only. Indicates whether this is an abandoned release.
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. Time at which the `Release` was created.
        skaffoldConfigPath:
          description: Filepath of the Skaffold config inside of the config URI.
          type: string
        etag:
          description: This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          type: string
        skaffoldConfigUri:
          description: Cloud Storage URI of tar.gz archive containing Skaffold configuration.
          type: string
        targetArtifacts:
          additionalProperties:
            $ref: '#/components/schemas/TargetArtifact'
          type: object
          description: Output only. Map from target ID to the target artifacts created during the render operation.
          readOnly: true
        renderEndTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. Time at which the render completed.
        skaffoldVersion:
          description: The Skaffold version to use when operating on this release, such as "1.20.0". Not all versions are valid; Google Cloud Deploy supports a specific set of versions. If unset, the most recent supported Skaffold version will be used.
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.'
        targetRenders:
          description: Output only. Map from target ID to details of the render operation for that target.
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/TargetRender'
          type: object
        annotations:
          type: object
          additionalProperties:
            type: string
          description: User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
        targetSnapshots:
          description: Output only. Snapshot of the targets taken at release creation time.
          items:
            $ref: '#/components/schemas/Target'
          readOnly: true
          type: array
        renderStartTime:
          description: Output only. Time at which the render began.
          format: google-datetime
          type: string
          readOnly: true
        description:
          description: Description of the `Release`. Max length is 255 characters.
          type: string
      type: object
    TargetArtifact:
      id: TargetArtifact
      properties:
        skaffoldConfigPath:
          description: Output only. File path of the resolved Skaffold configuration relative to the URI.
          type: string
          readOnly: true
        manifestPath:
          description: Output only. File path of the rendered manifest relative to the URI.
          readOnly: true
          type: string
        artifactUri:
          readOnly: true
          description: Output only. URI of a directory containing the artifacts. This contains deployment configuration used by Skaffold during a rollout, and all paths are relative to this location.
          type: string
      type: object
      description: The artifacts produced by a target render operation.
    DefaultPool:
      type: object
      id: DefaultPool
      properties:
        serviceAccount:
          type: string
          description: Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) will be used.
        artifactStorage:
          description: Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket ("gs://my-bucket") or a path within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default bucket located in the same region will be used.
          type: string
      description: Execution using the default Cloud Build pool.
    RetryJobResponse:
      properties: {}
      description: The response object from 'RetryJob'.
      type: object
      id: RetryJobResponse
    Date:
      properties:
        year:
          type: integer
          format: int32
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
        day:
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
          format: int32
          type: integer
        month:
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
          type: integer
          format: int32
      id: Date
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      type: object
    PrivatePool:
      type: object
      description: Execution using a private Cloud Build pool.
      properties:
        artifactStorage:
          type: string
          description: Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket ("gs://my-bucket") or a path within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default bucket located in the same region will be used.
        serviceAccount:
          description: Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) will be used.
          type: string
        workerPool:
          description: Required. Resource name of the Cloud Build worker pool to use. The format is `projects/{project}/locations/{location}/workerPools/{pool}`.
          type: string
      id: PrivatePool
    ExecutionConfig:
      description: Configuration of the environment to use when calling Skaffold.
      type: object
      properties:
        privatePool:
          $ref: '#/components/schemas/PrivatePool'
          description: Optional. Use private Cloud Build pool.
        defaultPool:
          $ref: '#/components/schemas/DefaultPool'
          description: Optional. Use default Cloud Build pool.
        executionTimeout:
          description: Optional. Execution timeout for a Cloud Build Execution. This must be between 10m and 24h in seconds format. If unspecified, a default timeout of 1h is used.
          type: string
          format: google-duration
        usages:
          type: array
          description: Required. Usages when this configuration should be applied.
          items:
            type: string
            enumDescriptions:
              - Default value. This value is unused.
              - Use for rendering.
              - Use for deploying and deployment hooks.
              - Use for deployment verification.
            enum:
              - EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED
              - RENDER
              - DEPLOY
              - VERIFY
        serviceAccount:
          type: string
          description: Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) is used.
        workerPool:
          type: string
          description: Optional. The resource name of the `WorkerPool`, with the format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. If this optional field is unspecified, the default Cloud Build pool will be used.
        artifactStorage:
          type: string
          description: Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket ("gs://my-bucket") or a path within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default bucket located in the same region will be used.
      id: ExecutionConfig
    DeployJob:
      description: A deploy Job.
      id: DeployJob
      properties: {}
      type: object
    PipelineReadyCondition:
      properties:
        updateTime:
          format: google-datetime
          description: Last time the condition was updated.
          type: string
        status:
          type: boolean
          description: True if the Pipeline is in a valid state. Otherwise at least one condition in `PipelineCondition` is in an invalid state. Iterate over those conditions and see which condition(s) has status = false to find out what is wrong with the Pipeline.
      id: PipelineReadyCondition
      description: PipelineReadyCondition contains information around the status of the Pipeline.
      type: object
    TargetsPresentCondition:
      type: object
      properties:
        status:
          type: boolean
          description: True if there aren't any missing Targets.
        missingTargets:
          description: The list of Target names that do not exist. For example, projects/{project_id}/locations/{location_name}/targets/{target_name}.
          items:
            type: string
          type: array
        updateTime:
          format: google-datetime
          type: string
          description: Last time the condition was updated.
      description: TargetsPresentCondition contains information on any Targets defined in the Delivery Pipeline that do not actually exist.
      id: TargetsPresentCondition
    DeployJobRunMetadata:
      description: DeployJobRunMetadata surfaces information associated with a `DeployJobRun` to the user.
      type: object
      properties:
        cloudRun:
          $ref: '#/components/schemas/CloudRunMetadata'
          description: Output only. The name of the Cloud Run Service that is associated with a `DeployJobRun`.
          readOnly: true
      id: DeployJobRunMetadata
    CloudRunMetadata:
      id: CloudRunMetadata
      type: object
      description: CloudRunMetadata contains information from a Cloud Run deployment.
      properties:
        service:
          readOnly: true
          description: Output only. The name of the Cloud Run Service that is associated with a `Rollout`. Format is projects/{project}/locations/{location}/services/{service}.
          type: string
        revision:
          description: Output only. The Cloud Run Revision id associated with a `Rollout`.
          type: string
          readOnly: true
        serviceUrls:
          readOnly: true
          type: array
          description: Output only. The Cloud Run Service urls that are associated with a `Rollout`.
          items:
            type: string
    SkaffoldVersion:
      id: SkaffoldVersion
      description: Details of a supported Skaffold version.
      properties:
        supportEndDate:
          description: Date when this version is expected to no longer be supported. For a more precise time, use the `support_expiration_time` field.
          $ref: '#/components/schemas/Date'
        version:
          description: Release version number. For example, "1.20.3".
          type: string
      type: object
    DeliveryPipeline:
      id: DeliveryPipeline
      type: object
      description: A `DeliveryPipeline` resource in the Google Cloud Deploy API. A `DeliveryPipeline` defines a pipeline through which a Skaffold configuration can progress.
      properties:
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.'
        createTime:
          description: Output only. Time at which the pipeline was created.
          readOnly: true
          type: string
          format: google-datetime
        etag:
          type: string
          description: This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
        description:
          description: Description of the `DeliveryPipeline`. Max length is 255 characters.
          type: string
        updateTime:
          format: google-datetime
          type: string
          description: Output only. Most recent time at which the pipeline was updated.
          readOnly: true
        annotations:
          description: User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy.
          additionalProperties:
            type: string
          type: object
        serialPipeline:
          $ref: '#/components/schemas/SerialPipeline'
          description: SerialPipeline defines a sequential set of stages for a `DeliveryPipeline`.
        name:
          type: string
          description: Optional. Name of the `DeliveryPipeline`. Format is projects/{project}/ locations/{location}/deliveryPipelines/a-z{0,62}.
        condition:
          description: Output only. Information around the state of the Delivery Pipeline.
          readOnly: true
          $ref: '#/components/schemas/PipelineCondition'
        uid:
          description: Output only. Unique identifier of the `DeliveryPipeline`.
          type: string
          readOnly: true
        suspended:
          description: When suspended, no new releases or rollouts can be created, but in-progress ones will complete.
          type: boolean
    ApproveRolloutRequest:
      description: The request object used by `ApproveRollout`.
      id: ApproveRolloutRequest
      properties:
        approved:
          type: boolean
          description: Required. True = approve; false = reject
      type: object
  parameters:
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    locations:
      id: google.clouddeploy.locations
      name: locations
      title: Locations
      methods:
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: locations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
    locations__config:
      id: google.clouddeploy.locations__config
      name: locations__config
      title: Locations__config
      methods:
        projects_locations_getConfig:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations__config/methods/projects_locations_getConfig'
        insert: []
        update: []
        delete: []
    job_runs:
      id: google.clouddeploy.job_runs
      name: job_runs
      title: Job_runs
      methods:
        projects_locations_deliveryPipelines_releases_rollouts_jobRuns_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}~1jobRuns~1{jobRunsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_deliveryPipelines_releases_rollouts_jobRuns_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}~1jobRuns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/job_runs/methods/projects_locations_deliveryPipelines_releases_rollouts_jobRuns_get'
          - $ref: '#/components/x-stackQL-resources/job_runs/methods/projects_locations_deliveryPipelines_releases_rollouts_jobRuns_list'
        insert: []
        update: []
        delete: []
    rollouts:
      id: google.clouddeploy.rollouts
      name: rollouts
      title: Rollouts
      methods:
        projects_locations_deliveryPipelines_releases_rollouts_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_deliveryPipelines_releases_rollouts_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_deliveryPipelines_releases_rollouts_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_deliveryPipelines_releases_rollouts_approve:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}:approve/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_deliveryPipelines_releases_rollouts_retryJob:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}:retryJob/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/rollouts/methods/projects_locations_deliveryPipelines_releases_rollouts_get'
          - $ref: '#/components/x-stackQL-resources/rollouts/methods/projects_locations_deliveryPipelines_releases_rollouts_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/rollouts/methods/projects_locations_deliveryPipelines_releases_rollouts_create'
        update: []
        delete: []
    releases:
      id: google.clouddeploy.releases
      name: releases
      title: Releases
      methods:
        projects_locations_deliveryPipelines_releases_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_deliveryPipelines_releases_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_deliveryPipelines_releases_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_deliveryPipelines_releases_abandon:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}:abandon/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/releases/methods/projects_locations_deliveryPipelines_releases_get'
          - $ref: '#/components/x-stackQL-resources/releases/methods/projects_locations_deliveryPipelines_releases_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/releases/methods/projects_locations_deliveryPipelines_releases_create'
        update: []
        delete: []
    delivery_pipelines:
      id: google.clouddeploy.delivery_pipelines
      name: delivery_pipelines
      title: Delivery_pipelines
      methods:
        projects_locations_deliveryPipelines_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_deliveryPipelines_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_deliveryPipelines_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_deliveryPipelines_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_deliveryPipelines_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/delivery_pipelines/methods/projects_locations_deliveryPipelines_get'
          - $ref: '#/components/x-stackQL-resources/delivery_pipelines/methods/projects_locations_deliveryPipelines_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/delivery_pipelines/methods/projects_locations_deliveryPipelines_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/delivery_pipelines/methods/projects_locations_deliveryPipelines_delete'
    delivery_pipelines_iam_policies:
      id: google.clouddeploy.delivery_pipelines_iam_policies
      name: delivery_pipelines_iam_policies
      title: Delivery_pipelines_iam_policies
      methods:
        projects_locations_deliveryPipelines_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_deliveryPipelines_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_deliveryPipelines_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/delivery_pipelines_iam_policies/methods/projects_locations_deliveryPipelines_getIamPolicy'
        insert: []
        update: []
        delete: []
    operations:
      id: google.clouddeploy.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: operations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
    targets_iam_policies:
      id: google.clouddeploy.targets_iam_policies
      name: targets_iam_policies
      title: Targets_iam_policies
      methods:
        projects_locations_targets_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_targets_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_targets_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/targets_iam_policies/methods/projects_locations_targets_getIamPolicy'
        insert: []
        update: []
        delete: []
    targets:
      id: google.clouddeploy.targets
      name: targets
      title: Targets
      methods:
        projects_locations_targets_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_targets_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_targets_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_targets_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_targets_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/targets/methods/projects_locations_targets_get'
          - $ref: '#/components/x-stackQL-resources/targets/methods/projects_locations_targets_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/targets/methods/projects_locations_targets_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/targets/methods/projects_locations_targets_delete'
    delivery_pipelines_iam_bindings:
      id: google.clouddeploy.delivery_pipelines_iam_bindings
      name: delivery_pipelines_iam_bindings
      title: delivery_pipelines_iam_bindings
      methods:
        projects_locations_deliveryPipelines_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/delivery_pipelines_iam_bindings/methods/projects_locations_deliveryPipelines_getIamPolicy'
    delivery_pipelines_iam_audit_configs:
      id: google.clouddeploy.delivery_pipelines_iam_audit_configs
      name: delivery_pipelines_iam_audit_configs
      title: delivery_pipelines_iam_audit_configs
      methods:
        projects_locations_deliveryPipelines_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/delivery_pipelines_iam_audit_configs/methods/projects_locations_deliveryPipelines_getIamPolicy'
    targets_iam_bindings:
      id: google.clouddeploy.targets_iam_bindings
      name: targets_iam_bindings
      title: targets_iam_bindings
      methods:
        projects_locations_targets_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/targets_iam_bindings/methods/projects_locations_targets_getIamPolicy'
    targets_iam_audit_configs:
      id: google.clouddeploy.targets_iam_audit_configs
      name: targets_iam_audit_configs
      title: targets_iam_audit_configs
      methods:
        projects_locations_targets_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/targets_iam_audit_configs/methods/projects_locations_targets_getIamPolicy'
paths:
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
    get:
      description: Gets information about a location.
      operationId: clouddeploy.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/config:
    parameters: *ref_1
    get:
      description: Gets the configuration for a location.
      operationId: clouddeploy.projects.locations.getConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations__config
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: clouddeploy.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}/jobRuns/{jobRunsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single JobRun.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
        - in: path
          name: jobRunsId
          required: true
          schema:
            type: string
      x-stackQL-resource: job_runs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}/jobRuns:
    parameters: *ref_1
    get:
      description: Lists JobRuns in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobRunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: job_runs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts:
    parameters: *ref_1
    get:
      description: Lists Rollouts in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRolloutsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: rollouts
      x-stackQL-verb: select
    post:
      description: Creates a new Rollout in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rollout'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: rolloutId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: rollouts
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Rollout.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rollout'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rollouts
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:approve:
    parameters: *ref_1
    post:
      description: Approves a Rollout.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.approve
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveRolloutRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApproveRolloutResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rollouts
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:retryJob:
    parameters: *ref_1
    post:
      description: Retries the specified Job in a Rollout.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.retryJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetryJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryJobResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rollouts
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Release.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
      x-stackQL-resource: releases
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases:
    parameters: *ref_1
    get:
      description: Lists Releases in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReleasesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: releases
      x-stackQL-verb: select
    post:
      description: Creates a new Release in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Release'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: releaseId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: releases
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}:abandon:
    parameters: *ref_1
    post:
      description: Abandons a Release in the Delivery Pipeline.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.abandon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbandonReleaseRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbandonReleaseResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
      x-stackQL-resource: releases
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single DeliveryPipeline.
      operationId: clouddeploy.projects.locations.deliveryPipelines.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryPipeline'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: delivery_pipelines
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a single DeliveryPipeline.
      operationId: clouddeploy.projects.locations.deliveryPipelines.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryPipeline'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: delivery_pipelines
      x-stackQL-verb: exec
    delete:
      description: Deletes a single DeliveryPipeline.
      operationId: clouddeploy.projects.locations.deliveryPipelines.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: delivery_pipelines
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: clouddeploy.projects.locations.deliveryPipelines.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: delivery_pipelines_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines:
    parameters: *ref_1
    post:
      description: Creates a new DeliveryPipeline in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryPipeline'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: deliveryPipelineId
          schema:
            type: string
      x-stackQL-resource: delivery_pipelines
      x-stackQL-verb: insert
    get:
      description: Lists DeliveryPipelines in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeliveryPipelinesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: delivery_pipelines
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: clouddeploy.projects.locations.deliveryPipelines.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: delivery_pipelines_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: clouddeploy.projects.locations.deliveryPipelines.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: delivery_pipelines_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: clouddeploy.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: clouddeploy.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: clouddeploy.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.'
      operationId: clouddeploy.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: clouddeploy.projects.locations.targets.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: targets_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/targets:
    parameters: *ref_1
    get:
      description: Lists Targets in a given project and location.
      operationId: clouddeploy.projects.locations.targets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: targets
      x-stackQL-verb: select
    post:
      description: Creates a new Target in a given project and location.
      operationId: clouddeploy.projects.locations.targets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: targetId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: targets
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: clouddeploy.projects.locations.targets.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: targets_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Target.
      operationId: clouddeploy.projects.locations.targets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: targets
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a single Target.
      operationId: clouddeploy.projects.locations.targets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: targets
      x-stackQL-verb: exec
    delete:
      description: Deletes a single Target.
      operationId: clouddeploy.projects.locations.targets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: targets
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: clouddeploy.projects.locations.targets.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: targets_iam_policies
      x-stackQL-verb: exec
