openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Deploy API
  description: ''
  version: v1
  x-discovery-doc-revision: '20250813'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/deploy/
servers:
  - url: https://clouddeploy.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    ListDeliveryPipelinesResponse:
      id: ListDeliveryPipelinesResponse
      description: The response object from `ListDeliveryPipelines`.
      type: object
      properties:
        deliveryPipelines:
          description: The `DeliveryPipeline` objects.
          type: array
          items:
            $ref: '#/components/schemas/DeliveryPipeline'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    DeliveryPipeline:
      id: DeliveryPipeline
      description: >-
        A `DeliveryPipeline` resource in the Cloud Deploy API. A
        `DeliveryPipeline` defines a pipeline through which a Skaffold
        configuration can progress.
      type: object
      properties:
        name:
          description: >-
            Identifier. Name of the `DeliveryPipeline`. Format is
            `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}`.
            The `deliveryPipeline` component must match
            `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`
          type: string
        uid:
          description: Output only. Unique identifier of the `DeliveryPipeline`.
          readOnly: true
          type: string
        description:
          description: >-
            Optional. Description of the `DeliveryPipeline`. Max length is 255
            characters.
          type: string
        annotations:
          description: >-
            Optional. User annotations. These attributes can only be set and
            used by the user, and not by Cloud Deploy.
          type: object
          additionalProperties:
            type: string
        labels:
          description: >-
            Labels are attributes that can be set and used by both the user and
            by Cloud Deploy. Labels must meet the following constraints: * Keys
            and values can contain only lowercase letters, numeric characters,
            underscores, and dashes. * All characters must use UTF-8 encoding,
            and international characters are allowed. * Keys must start with a
            lowercase letter or international character. * Each resource is
            limited to a maximum of 64 labels. Both keys and values are
            additionally constrained to be <= 128 bytes.
          type: object
          additionalProperties:
            type: string
        createTime:
          description: Output only. Time at which the pipeline was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Most recent time at which the pipeline was updated.
          readOnly: true
          type: string
          format: google-datetime
        serialPipeline:
          description: >-
            Optional. SerialPipeline defines a sequential set of stages for a
            `DeliveryPipeline`.
          $ref: '#/components/schemas/SerialPipeline'
        condition:
          description: Output only. Information around the state of the Delivery Pipeline.
          readOnly: true
          $ref: '#/components/schemas/PipelineCondition'
        etag:
          description: >-
            This checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding.
          type: string
        suspended:
          description: >-
            Optional. When suspended, no new releases or rollouts can be
            created, but in-progress ones will complete.
          type: boolean
    SerialPipeline:
      id: SerialPipeline
      description: >-
        SerialPipeline defines a sequential set of stages for a
        `DeliveryPipeline`.
      type: object
      properties:
        stages:
          description: >-
            Optional. Each stage specifies configuration for a `Target`. The
            ordering of this list defines the promotion flow.
          type: array
          items:
            $ref: '#/components/schemas/Stage'
    Stage:
      id: Stage
      description: Stage specifies a location to which to deploy.
      type: object
      properties:
        targetId:
          description: >-
            Optional. The target_id to which this stage points. This field
            refers exclusively to the last segment of a target name. For
            example, this field would just be `my-target` (rather than
            `projects/project/locations/location/targets/my-target`). The
            location of the `Target` is inferred to be the same as the location
            of the `DeliveryPipeline` that contains this `Stage`.
          type: string
        profiles:
          description: >-
            Optional. Skaffold profiles to use when rendering the manifest for
            this stage's `Target`.
          type: array
          items:
            type: string
        strategy:
          description: Optional. The strategy to use for a `Rollout` to this stage.
          $ref: '#/components/schemas/Strategy'
        deployParameters:
          description: Optional. The deploy parameters to use for the target in this stage.
          type: array
          items:
            $ref: '#/components/schemas/DeployParameters'
    Strategy:
      id: Strategy
      description: Strategy contains deployment strategy information.
      type: object
      properties:
        standard:
          description: >-
            Optional. Standard deployment strategy executes a single deploy and
            allows verifying the deployment.
          $ref: '#/components/schemas/Standard'
        canary:
          description: >-
            Optional. Canary deployment strategy provides progressive percentage
            based deployments to a Target.
          $ref: '#/components/schemas/Canary'
    Standard:
      id: Standard
      description: Standard represents the standard deployment strategy.
      type: object
      properties:
        verify:
          description: Optional. Whether to verify a deployment via `skaffold verify`.
          type: boolean
        predeploy:
          description: >-
            Optional. Configuration for the predeploy job. If this is not
            configured, the predeploy job will not be present.
          $ref: '#/components/schemas/Predeploy'
        postdeploy:
          description: >-
            Optional. Configuration for the postdeploy job. If this is not
            configured, the postdeploy job will not be present.
          $ref: '#/components/schemas/Postdeploy'
    Predeploy:
      id: Predeploy
      description: Predeploy contains the predeploy job configuration information.
      type: object
      properties:
        actions:
          description: >-
            Optional. A sequence of Skaffold custom actions to invoke during
            execution of the predeploy job.
          type: array
          items:
            type: string
    Postdeploy:
      id: Postdeploy
      description: Postdeploy contains the postdeploy job configuration information.
      type: object
      properties:
        actions:
          description: >-
            Optional. A sequence of Skaffold custom actions to invoke during
            execution of the postdeploy job.
          type: array
          items:
            type: string
    Canary:
      id: Canary
      description: Canary represents the canary deployment strategy.
      type: object
      properties:
        runtimeConfig:
          description: >-
            Optional. Runtime specific configurations for the deployment
            strategy. The runtime configuration is used to determine how Cloud
            Deploy will split traffic to enable a progressive deployment.
          $ref: '#/components/schemas/RuntimeConfig'
        canaryDeployment:
          description: Optional. Configures the progressive based deployment for a Target.
          $ref: '#/components/schemas/CanaryDeployment'
        customCanaryDeployment:
          description: >-
            Optional. Configures the progressive based deployment for a Target,
            but allows customizing at the phase level where a phase represents
            each of the percentage deployments.
          $ref: '#/components/schemas/CustomCanaryDeployment'
    RuntimeConfig:
      id: RuntimeConfig
      description: >-
        RuntimeConfig contains the runtime specific configurations for a
        deployment strategy.
      type: object
      properties:
        kubernetes:
          description: Optional. Kubernetes runtime configuration.
          $ref: '#/components/schemas/KubernetesConfig'
        cloudRun:
          description: Optional. Cloud Run runtime configuration.
          $ref: '#/components/schemas/CloudRunConfig'
    KubernetesConfig:
      id: KubernetesConfig
      description: KubernetesConfig contains the Kubernetes runtime configuration.
      type: object
      properties:
        gatewayServiceMesh:
          description: Optional. Kubernetes Gateway API service mesh configuration.
          $ref: '#/components/schemas/GatewayServiceMesh'
        serviceNetworking:
          description: Optional. Kubernetes Service networking configuration.
          $ref: '#/components/schemas/ServiceNetworking'
    GatewayServiceMesh:
      id: GatewayServiceMesh
      description: Information about the Kubernetes Gateway API service mesh configuration.
      type: object
      properties:
        httpRoute:
          description: Required. Name of the Gateway API HTTPRoute.
          type: string
        service:
          description: Required. Name of the Kubernetes Service.
          type: string
        deployment:
          description: >-
            Required. Name of the Kubernetes Deployment whose traffic is managed
            by the specified HTTPRoute and Service.
          type: string
        routeUpdateWaitTime:
          description: >-
            Optional. The time to wait for route updates to propagate. The
            maximum configurable time is 3 hours, in seconds format. If
            unspecified, there is no wait time.
          type: string
          format: google-duration
        stableCutbackDuration:
          description: >-
            Optional. The amount of time to migrate traffic back from the canary
            Service to the original Service during the stable phase deployment.
            If specified, must be between 15s and 3600s. If unspecified, there
            is no cutback time.
          type: string
          format: google-duration
        podSelectorLabel:
          description: >-
            Optional. The label to use when selecting Pods for the Deployment
            and Service resources. This label must already be present in both
            resources.
          type: string
        routeDestinations:
          description: >-
            Optional. Route destinations allow configuring the Gateway API
            HTTPRoute to be deployed to additional clusters. This option is
            available for multi-cluster service mesh set ups that require the
            route to exist in the clusters that call the service. If
            unspecified, the HTTPRoute will only be deployed to the Target
            cluster.
          $ref: '#/components/schemas/RouteDestinations'
    RouteDestinations:
      id: RouteDestinations
      description: Information about route destinations for the Gateway API service mesh.
      type: object
      properties:
        destinationIds:
          description: >-
            Required. The clusters where the Gateway API HTTPRoute resource will
            be deployed to. Valid entries include the associated entities IDs
            configured in the Target resource and "@self" to include the Target
            cluster.
          type: array
          items:
            type: string
        propagateService:
          description: >-
            Optional. Whether to propagate the Kubernetes Service to the route
            destination clusters. The Service will always be deployed to the
            Target cluster even if the HTTPRoute is not. This option may be used
            to facilitate successful DNS lookup in the route destination
            clusters. Can only be set to true if destinations are specified.
          type: boolean
    ServiceNetworking:
      id: ServiceNetworking
      description: Information about the Kubernetes Service networking configuration.
      type: object
      properties:
        service:
          description: Required. Name of the Kubernetes Service.
          type: string
        deployment:
          description: >-
            Required. Name of the Kubernetes Deployment whose traffic is managed
            by the specified Service.
          type: string
        disablePodOverprovisioning:
          description: >-
            Optional. Whether to disable Pod overprovisioning. If Pod
            overprovisioning is disabled then Cloud Deploy will limit the number
            of total Pods used for the deployment strategy to the number of Pods
            the Deployment has on the cluster.
          type: boolean
        podSelectorLabel:
          description: >-
            Optional. The label to use when selecting Pods for the Deployment
            resource. This label must already be present in the Deployment.
          type: string
    CloudRunConfig:
      id: CloudRunConfig
      description: CloudRunConfig contains the Cloud Run runtime configuration.
      type: object
      properties:
        automaticTrafficControl:
          description: >-
            Optional. Whether Cloud Deploy should update the traffic stanza in a
            Cloud Run Service on the user's behalf to facilitate traffic
            splitting. This is required to be true for CanaryDeployments, but
            optional for CustomCanaryDeployments.
          type: boolean
        canaryRevisionTags:
          description: >-
            Optional. A list of tags that are added to the canary revision while
            the canary phase is in progress.
          type: array
          items:
            type: string
        priorRevisionTags:
          description: >-
            Optional. A list of tags that are added to the prior revision while
            the canary phase is in progress.
          type: array
          items:
            type: string
        stableRevisionTags:
          description: >-
            Optional. A list of tags that are added to the final stable revision
            when the stable phase is applied.
          type: array
          items:
            type: string
    CanaryDeployment:
      id: CanaryDeployment
      description: CanaryDeployment represents the canary deployment configuration
      type: object
      properties:
        percentages:
          description: >-
            Required. The percentage based deployments that will occur as a part
            of a `Rollout`. List is expected in ascending order and each integer
            n is 0 <= n < 100. If the GatewayServiceMesh is configured for
            Kubernetes, then the range for n is 0 <= n <= 100.
          type: array
          items:
            type: integer
            format: int32
        verify:
          description: >-
            Optional. Whether to run verify tests after each percentage
            deployment via `skaffold verify`.
          type: boolean
        predeploy:
          description: >-
            Optional. Configuration for the predeploy job of the first phase. If
            this is not configured, there will be no predeploy job for this
            phase.
          $ref: '#/components/schemas/Predeploy'
        postdeploy:
          description: >-
            Optional. Configuration for the postdeploy job of the last phase. If
            this is not configured, there will be no postdeploy job for this
            phase.
          $ref: '#/components/schemas/Postdeploy'
    CustomCanaryDeployment:
      id: CustomCanaryDeployment
      description: >-
        CustomCanaryDeployment represents the custom canary deployment
        configuration.
      type: object
      properties:
        phaseConfigs:
          description: >-
            Required. Configuration for each phase in the canary deployment in
            the order executed.
          type: array
          items:
            $ref: '#/components/schemas/PhaseConfig'
    PhaseConfig:
      id: PhaseConfig
      description: >-
        PhaseConfig represents the configuration for a phase in the custom
        canary deployment.
      type: object
      properties:
        phaseId:
          description: >-
            Required. The ID to assign to the `Rollout` phase. This value must
            consist of lower-case letters, numbers, and hyphens, start with a
            letter and end with a letter or a number, and have a max length of
            63 characters. In other words, it must match the following regex:
            `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`.
          type: string
        percentage:
          description: Required. Percentage deployment for the phase.
          type: integer
          format: int32
        profiles:
          description: >-
            Optional. Skaffold profiles to use when rendering the manifest for
            this phase. These are in addition to the profiles list specified in
            the `DeliveryPipeline` stage.
          type: array
          items:
            type: string
        verify:
          description: >-
            Optional. Whether to run verify tests after the deployment via
            `skaffold verify`.
          type: boolean
        predeploy:
          description: >-
            Optional. Configuration for the predeploy job of this phase. If this
            is not configured, there will be no predeploy job for this phase.
          $ref: '#/components/schemas/Predeploy'
        postdeploy:
          description: >-
            Optional. Configuration for the postdeploy job of this phase. If
            this is not configured, there will be no postdeploy job for this
            phase.
          $ref: '#/components/schemas/Postdeploy'
    DeployParameters:
      id: DeployParameters
      description: DeployParameters contains deploy parameters information.
      type: object
      properties:
        values:
          description: Required. Values are deploy parameters in key-value pairs.
          type: object
          additionalProperties:
            type: string
        matchTargetLabels:
          description: >-
            Optional. Deploy parameters are applied to targets with match
            labels. If unspecified, deploy parameters are applied to all targets
            (including child targets of a multi-target).
          type: object
          additionalProperties:
            type: string
    PipelineCondition:
      id: PipelineCondition
      description: >-
        PipelineCondition contains all conditions relevant to a Delivery
        Pipeline.
      type: object
      properties:
        pipelineReadyCondition:
          description: Details around the Pipeline's overall status.
          $ref: '#/components/schemas/PipelineReadyCondition'
        targetsPresentCondition:
          description: Details around targets enumerated in the pipeline.
          $ref: '#/components/schemas/TargetsPresentCondition'
        targetsTypeCondition:
          description: >-
            Details on the whether the targets enumerated in the pipeline are of
            the same type.
          $ref: '#/components/schemas/TargetsTypeCondition'
    PipelineReadyCondition:
      id: PipelineReadyCondition
      description: >-
        PipelineReadyCondition contains information around the status of the
        Pipeline.
      type: object
      properties:
        status:
          description: >-
            True if the Pipeline is in a valid state. Otherwise at least one
            condition in `PipelineCondition` is in an invalid state. Iterate
            over those conditions and see which condition(s) has status = false
            to find out what is wrong with the Pipeline.
          type: boolean
        updateTime:
          description: Last time the condition was updated.
          type: string
          format: google-datetime
    TargetsPresentCondition:
      id: TargetsPresentCondition
      description: >-
        `TargetsPresentCondition` contains information on any Targets referenced
        in the Delivery Pipeline that do not actually exist.
      type: object
      properties:
        status:
          description: True if there aren't any missing Targets.
          type: boolean
        missingTargets:
          description: >-
            The list of Target names that do not exist. For example,
            `projects/{project_id}/locations/{location_name}/targets/{target_name}`.
          type: array
          items:
            type: string
        updateTime:
          description: Last time the condition was updated.
          type: string
          format: google-datetime
    TargetsTypeCondition:
      id: TargetsTypeCondition
      description: >-
        TargetsTypeCondition contains information on whether the Targets defined
        in the Delivery Pipeline are of the same type.
      type: object
      properties:
        status:
          description: >-
            True if the targets are all a comparable type. For example this is
            true if all targets are GKE clusters. This is false if some targets
            are Cloud Run targets and others are GKE clusters.
          type: boolean
        errorDetails:
          description: Human readable error message.
          type: string
    ListTargetsResponse:
      id: ListTargetsResponse
      description: The response object from `ListTargets`.
      type: object
      properties:
        targets:
          description: The `Target` objects.
          type: array
          items:
            $ref: '#/components/schemas/Target'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Target:
      id: Target
      description: >-
        A `Target` resource in the Cloud Deploy API. A `Target` defines a
        location to which a Skaffold configuration can be deployed.
      type: object
      properties:
        name:
          description: >-
            Identifier. Name of the `Target`. Format is
            `projects/{project}/locations/{location}/targets/{target}`. The
            `target` component must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`
          type: string
        targetId:
          description: Output only. Resource id of the `Target`.
          readOnly: true
          type: string
        uid:
          description: Output only. Unique identifier of the `Target`.
          readOnly: true
          type: string
        description:
          description: Optional. Description of the `Target`. Max length is 255 characters.
          type: string
        annotations:
          description: >-
            Optional. User annotations. These attributes can only be set and
            used by the user, and not by Cloud Deploy. See
            https://google.aip.dev/128#annotations for more details such as
            format and size limitations.
          type: object
          additionalProperties:
            type: string
        labels:
          description: >-
            Optional. Labels are attributes that can be set and used by both the
            user and by Cloud Deploy. Labels must meet the following
            constraints: * Keys and values can contain only lowercase letters,
            numeric characters, underscores, and dashes. * All characters must
            use UTF-8 encoding, and international characters are allowed. * Keys
            must start with a lowercase letter or international character. *
            Each resource is limited to a maximum of 64 labels. Both keys and
            values are additionally constrained to be <= 128 bytes.
          type: object
          additionalProperties:
            type: string
        requireApproval:
          description: Optional. Whether or not the `Target` requires approval.
          type: boolean
        createTime:
          description: Output only. Time at which the `Target` was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Most recent time at which the `Target` was updated.
          readOnly: true
          type: string
          format: google-datetime
        gke:
          description: Optional. Information specifying a GKE Cluster.
          $ref: '#/components/schemas/GkeCluster'
        anthosCluster:
          description: Optional. Information specifying an Anthos Cluster.
          $ref: '#/components/schemas/AnthosCluster'
        run:
          description: Optional. Information specifying a Cloud Run deployment target.
          $ref: '#/components/schemas/CloudRunLocation'
        multiTarget:
          description: Optional. Information specifying a multiTarget.
          $ref: '#/components/schemas/MultiTarget'
        customTarget:
          description: Optional. Information specifying a Custom Target.
          $ref: '#/components/schemas/CustomTarget'
        associatedEntities:
          description: >-
            Optional. Map of entity IDs to their associated entities. Associated
            entities allows specifying places other than the deployment target
            for specific features. For example, the Gateway API canary can be
            configured to deploy the HTTPRoute to a different cluster(s) than
            the deployment cluster using associated entities. An entity ID must
            consist of lower-case letters, numbers, and hyphens, start with a
            letter and end with a letter or a number, and have a max length of
            63 characters. In other words, it must match the following regex:
            `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AssociatedEntities'
        etag:
          description: >-
            Optional. This checksum is computed by the server based on the value
            of other fields, and may be sent on update and delete requests to
            ensure the client has an up-to-date value before proceeding.
          type: string
        executionConfigs:
          description: >-
            Optional. Configurations for all execution that relates to this
            `Target`. Each `ExecutionEnvironmentUsage` value may only be used in
            a single configuration; using the same value multiple times is an
            error. When one or more configurations are specified, they must
            include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage`
            values. When no configurations are specified, execution will use the
            default specified in `DefaultPool`.
          type: array
          items:
            $ref: '#/components/schemas/ExecutionConfig'
        deployParameters:
          description: Optional. The deploy parameters to use for this target.
          type: object
          additionalProperties:
            type: string
    GkeCluster:
      id: GkeCluster
      description: Information specifying a GKE Cluster.
      type: object
      properties:
        cluster:
          description: >-
            Optional. Information specifying a GKE Cluster. Format is
            `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}`.
          type: string
        internalIp:
          description: >-
            Optional. If true, `cluster` is accessed using the private IP
            address of the control plane endpoint. Otherwise, the default IP
            address of the control plane endpoint is used. The default IP
            address is the private IP address for clusters with private
            control-plane endpoints and the public IP address otherwise. Only
            specify this option when `cluster` is a [private GKE
            cluster](https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept).
            Note that `internal_ip` and `dns_endpoint` cannot both be set to
            true.
          type: boolean
        proxyUrl:
          description: >-
            Optional. If set, used to configure a
            [proxy](https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/#proxy)
            to the Kubernetes server.
          type: string
        dnsEndpoint:
          description: >-
            Optional. If set, the cluster will be accessed using the DNS
            endpoint. Note that both `dns_endpoint` and `internal_ip` cannot be
            set to true.
          type: boolean
    AnthosCluster:
      id: AnthosCluster
      description: Information specifying an Anthos Cluster.
      type: object
      properties:
        membership:
          description: >-
            Optional. Membership of the GKE Hub-registered cluster to which to
            apply the Skaffold configuration. Format is
            `projects/{project}/locations/{location}/memberships/{membership_name}`.
          type: string
    CloudRunLocation:
      id: CloudRunLocation
      description: Information specifying where to deploy a Cloud Run Service.
      type: object
      properties:
        location:
          description: >-
            Required. The location for the Cloud Run Service. Format must be
            `projects/{project}/locations/{location}`.
          type: string
    MultiTarget:
      id: MultiTarget
      description: Information specifying a multiTarget.
      type: object
      properties:
        targetIds:
          description: Required. The target_ids of this multiTarget.
          type: array
          items:
            type: string
    CustomTarget:
      id: CustomTarget
      description: Information specifying a Custom Target.
      type: object
      properties:
        customTargetType:
          description: >-
            Required. The name of the CustomTargetType. Format must be
            `projects/{project}/locations/{location}/customTargetTypes/{custom_target_type}`.
          type: string
    AssociatedEntities:
      id: AssociatedEntities
      description: Information about entities associated with a `Target`.
      type: object
      properties:
        gkeClusters:
          description: >-
            Optional. Information specifying GKE clusters as associated
            entities.
          type: array
          items:
            $ref: '#/components/schemas/GkeCluster'
        anthosClusters:
          description: >-
            Optional. Information specifying Anthos clusters as associated
            entities.
          type: array
          items:
            $ref: '#/components/schemas/AnthosCluster'
    ExecutionConfig:
      id: ExecutionConfig
      description: Configuration of the environment to use when calling Skaffold.
      type: object
      properties:
        usages:
          description: Required. Usages when this configuration should be applied.
          type: array
          items:
            type: string
            enumDescriptions:
              - Default value. This value is unused.
              - Use for rendering.
              - Use for deploying and deployment hooks.
              - Use for deployment verification.
              - Use for predeploy job execution.
              - Use for postdeploy job execution.
            enum:
              - EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED
              - RENDER
              - DEPLOY
              - VERIFY
              - PREDEPLOY
              - POSTDEPLOY
        defaultPool:
          description: Optional. Use default Cloud Build pool.
          $ref: '#/components/schemas/DefaultPool'
        privatePool:
          description: Optional. Use private Cloud Build pool.
          $ref: '#/components/schemas/PrivatePool'
        workerPool:
          description: >-
            Optional. The resource name of the `WorkerPool`, with the format
            `projects/{project}/locations/{location}/workerPools/{worker_pool}`.
            If this optional field is unspecified, the default Cloud Build pool
            will be used.
          type: string
        serviceAccount:
          description: >-
            Optional. Google service account to use for execution. If
            unspecified, the project execution service account
            (-compute@developer.gserviceaccount.com) is used.
          type: string
        artifactStorage:
          description: >-
            Optional. Cloud Storage location in which to store execution
            outputs. This can either be a bucket ("gs://my-bucket") or a path
            within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default
            bucket located in the same region will be used.
          type: string
        executionTimeout:
          description: >-
            Optional. Execution timeout for a Cloud Build Execution. This must
            be between 10m and 24h in seconds format. If unspecified, a default
            timeout of 1h is used.
          type: string
          format: google-duration
        verbose:
          description: >-
            Optional. If true, additional logging will be enabled when running
            builds in this execution environment.
          type: boolean
    DefaultPool:
      id: DefaultPool
      description: Execution using the default Cloud Build pool.
      type: object
      properties:
        serviceAccount:
          description: >-
            Optional. Google service account to use for execution. If
            unspecified, the project execution service account
            (-compute@developer.gserviceaccount.com) will be used.
          type: string
        artifactStorage:
          description: >-
            Optional. Cloud Storage location where execution outputs should be
            stored. This can either be a bucket ("gs://my-bucket") or a path
            within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default
            bucket located in the same region will be used.
          type: string
    PrivatePool:
      id: PrivatePool
      description: Execution using a private Cloud Build pool.
      type: object
      properties:
        workerPool:
          description: >-
            Required. Resource name of the Cloud Build worker pool to use. The
            format is
            `projects/{project}/locations/{location}/workerPools/{pool}`.
          type: string
        serviceAccount:
          description: >-
            Optional. Google service account to use for execution. If
            unspecified, the project execution service account
            (-compute@developer.gserviceaccount.com) will be used.
          type: string
        artifactStorage:
          description: >-
            Optional. Cloud Storage location where execution outputs should be
            stored. This can either be a bucket ("gs://my-bucket") or a path
            within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default
            bucket located in the same region will be used.
          type: string
    RollbackTargetRequest:
      id: RollbackTargetRequest
      description: The request object for `RollbackTarget`.
      type: object
      properties:
        targetId:
          description: Required. ID of the `Target` that is being rolled back.
          type: string
        rolloutId:
          description: Required. ID of the rollback `Rollout` to create.
          type: string
        releaseId:
          description: >-
            Optional. ID of the `Release` to roll back to. If this isn't
            specified, the previous successful `Rollout` to the specified target
            will be used to determine the `Release`.
          type: string
        rolloutToRollBack:
          description: >-
            Optional. If provided, this must be the latest `Rollout` that is on
            the `Target`.
          type: string
        rollbackConfig:
          description: Optional. Configs for the rollback `Rollout`.
          $ref: '#/components/schemas/RollbackTargetConfig'
        validateOnly:
          description: >-
            Optional. If set to true, the request is validated and the user is
            provided with a `RollbackTargetResponse`.
          type: boolean
        overrideDeployPolicy:
          description: >-
            Optional. Deploy policies to override. Format is
            `projects/{project}/locations/{location}/deployPolicies/{deploy_policy}`.
          type: array
          items:
            type: string
    RollbackTargetConfig:
      id: RollbackTargetConfig
      description: Configs for the Rollback rollout.
      type: object
      properties:
        rollout:
          description: Optional. The rollback `Rollout` to create.
          $ref: '#/components/schemas/Rollout'
        startingPhaseId:
          description: >-
            Optional. The starting phase ID for the `Rollout`. If unspecified,
            the `Rollout` will start in the stable phase.
          type: string
    Rollout:
      id: Rollout
      description: >-
        A `Rollout` resource in the Cloud Deploy API. A `Rollout` contains
        information around a specific deployment to a `Target`.
      type: object
      properties:
        name:
          description: >-
            Identifier. Name of the `Rollout`. Format is
            `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
            The `rollout` component must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`
          type: string
        uid:
          description: Output only. Unique identifier of the `Rollout`.
          readOnly: true
          type: string
        description:
          description: >-
            Optional. Description of the `Rollout` for user purposes. Max length
            is 255 characters.
          type: string
        annotations:
          description: >-
            Optional. User annotations. These attributes can only be set and
            used by the user, and not by Cloud Deploy. See
            https://google.aip.dev/128#annotations for more details such as
            format and size limitations.
          type: object
          additionalProperties:
            type: string
        labels:
          description: >-
            Labels are attributes that can be set and used by both the user and
            by Cloud Deploy. Labels must meet the following constraints: * Keys
            and values can contain only lowercase letters, numeric characters,
            underscores, and dashes. * All characters must use UTF-8 encoding,
            and international characters are allowed. * Keys must start with a
            lowercase letter or international character. * Each resource is
            limited to a maximum of 64 labels. Both keys and values are
            additionally constrained to be <= 128 bytes.
          type: object
          additionalProperties:
            type: string
        createTime:
          description: Output only. Time at which the `Rollout` was created.
          readOnly: true
          type: string
          format: google-datetime
        approveTime:
          description: Output only. Time at which the `Rollout` was approved.
          readOnly: true
          type: string
          format: google-datetime
        enqueueTime:
          description: Output only. Time at which the `Rollout` was enqueued.
          readOnly: true
          type: string
          format: google-datetime
        deployStartTime:
          description: Output only. Time at which the `Rollout` started deploying.
          readOnly: true
          type: string
          format: google-datetime
        deployEndTime:
          description: Output only. Time at which the `Rollout` finished deploying.
          readOnly: true
          type: string
          format: google-datetime
        targetId:
          description: Required. The ID of Target to which this `Rollout` is deploying.
          type: string
        approvalState:
          description: Output only. Approval state of the `Rollout`.
          readOnly: true
          type: string
          enumDescriptions:
            - The `Rollout` has an unspecified approval state.
            - The `Rollout` requires approval.
            - The `Rollout` does not require approval.
            - The `Rollout` has been approved.
            - The `Rollout` has been rejected.
          enum:
            - APPROVAL_STATE_UNSPECIFIED
            - NEEDS_APPROVAL
            - DOES_NOT_NEED_APPROVAL
            - APPROVED
            - REJECTED
        state:
          description: Output only. Current state of the `Rollout`.
          readOnly: true
          type: string
          enumDescriptions:
            - The `Rollout` has an unspecified state.
            - The `Rollout` has completed successfully.
            - The `Rollout` has failed.
            - The `Rollout` is being deployed.
            - The `Rollout` needs approval.
            - An approver rejected the `Rollout`.
            - >-
              The `Rollout` is waiting for an earlier Rollout(s) to complete on
              this `Target`.
            - The `Rollout` is waiting for the `Release` to be fully rendered.
            - The `Rollout` is in the process of being cancelled.
            - The `Rollout` has been cancelled.
            - The `Rollout` is halted.
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - IN_PROGRESS
            - PENDING_APPROVAL
            - APPROVAL_REJECTED
            - PENDING
            - PENDING_RELEASE
            - CANCELLING
            - CANCELLED
            - HALTED
        failureReason:
          description: >-
            Output only. Additional information about the rollout failure, if
            available.
          readOnly: true
          type: string
        deployingBuild:
          description: >-
            Output only. The resource name of the Cloud Build `Build` object
            that is used to deploy the Rollout. Format is
            `projects/{project}/locations/{location}/builds/{build}`.
          readOnly: true
          type: string
        etag:
          description: >-
            This checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding.
          type: string
        deployFailureCause:
          description: >-
            Output only. The reason this rollout failed. This will always be
            unspecified while the rollout is in progress.
          readOnly: true
          type: string
          enumDescriptions:
            - No reason for failure is specified.
            - >-
              Cloud Build is not available, either because it is not enabled or
              because Cloud Deploy has insufficient permissions. See [required
              permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).
            - >-
              The deploy operation did not complete successfully; check Cloud
              Build logs.
            - Deployment did not complete within the allotted time.
            - Release is in a failed state.
            - Release is abandoned.
            - No Skaffold verify configuration was found.
            - >-
              Cloud Build failed to fulfill Cloud Deploy's request. See
              failure_message for additional details.
            - >-
              A Rollout operation had a feature configured that is not
              supported.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - RELEASE_FAILED
            - RELEASE_ABANDONED
            - VERIFICATION_CONFIG_NOT_FOUND
            - CLOUD_BUILD_REQUEST_FAILED
            - OPERATION_FEATURE_NOT_SUPPORTED
        phases:
          description: >-
            Output only. The phases that represent the workflows of this
            `Rollout`.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Phase'
        metadata:
          description: Output only. Metadata contains information about the rollout.
          readOnly: true
          $ref: '#/components/schemas/Metadata'
        controllerRollout:
          description: >-
            Output only. Name of the `ControllerRollout`. Format is
            `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
          readOnly: true
          type: string
        rollbackOfRollout:
          description: >-
            Output only. Name of the `Rollout` that is rolled back by this
            `Rollout`. Empty if this `Rollout` wasn't created as a rollback.
          readOnly: true
          type: string
        rolledBackByRollouts:
          description: Output only. Names of `Rollouts` that rolled back this `Rollout`.
          readOnly: true
          type: array
          items:
            type: string
        activeRepairAutomationRun:
          description: Output only. The AutomationRun actively repairing the rollout.
          readOnly: true
          type: string
    Phase:
      id: Phase
      description: >-
        Phase represents a collection of jobs that are logically grouped
        together for a `Rollout`.
      type: object
      properties:
        id:
          description: Output only. The ID of the Phase.
          readOnly: true
          type: string
        state:
          description: Output only. Current state of the Phase.
          readOnly: true
          type: string
          enumDescriptions:
            - The Phase has an unspecified state.
            - The Phase is waiting for an earlier Phase(s) to complete.
            - The Phase is in progress.
            - The Phase has succeeded.
            - The Phase has failed.
            - The Phase was aborted.
            - The Phase was skipped.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - ABORTED
            - SKIPPED
        skipMessage:
          description: >-
            Output only. Additional information on why the Phase was skipped, if
            available.
          readOnly: true
          type: string
        deploymentJobs:
          description: Output only. Deployment job composition.
          readOnly: true
          $ref: '#/components/schemas/DeploymentJobs'
        childRolloutJobs:
          description: Output only. ChildRollout job composition.
          readOnly: true
          $ref: '#/components/schemas/ChildRolloutJobs'
    DeploymentJobs:
      id: DeploymentJobs
      description: Deployment job composition.
      type: object
      properties:
        predeployJob:
          description: Output only. The predeploy Job, which is the first job on the phase.
          readOnly: true
          $ref: '#/components/schemas/Job'
        deployJob:
          description: Output only. The deploy Job. This is the deploy job in the phase.
          readOnly: true
          $ref: '#/components/schemas/Job'
        verifyJob:
          description: >-
            Output only. The verify Job. Runs after a deploy if the deploy
            succeeds.
          readOnly: true
          $ref: '#/components/schemas/Job'
        postdeployJob:
          description: Output only. The postdeploy Job, which is the last job on the phase.
          readOnly: true
          $ref: '#/components/schemas/Job'
    Job:
      id: Job
      description: Job represents an operation for a `Rollout`.
      type: object
      properties:
        id:
          description: Output only. The ID of the Job.
          readOnly: true
          type: string
        state:
          description: Output only. The current state of the Job.
          readOnly: true
          type: string
          enumDescriptions:
            - The Job has an unspecified state.
            - The Job is waiting for an earlier Phase(s) or Job(s) to complete.
            - The Job is disabled.
            - The Job is in progress.
            - The Job succeeded.
            - The Job failed.
            - The Job was aborted.
            - The Job was skipped.
            - The Job was ignored.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - DISABLED
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - ABORTED
            - SKIPPED
            - IGNORED
        skipMessage:
          description: >-
            Output only. Additional information on why the Job was skipped, if
            available.
          readOnly: true
          type: string
        jobRun:
          description: >-
            Output only. The name of the `JobRun` responsible for the most
            recent invocation of this Job.
          readOnly: true
          type: string
        deployJob:
          description: Output only. A deploy Job.
          readOnly: true
          $ref: '#/components/schemas/DeployJob'
        verifyJob:
          description: Output only. A verify Job.
          readOnly: true
          $ref: '#/components/schemas/VerifyJob'
        predeployJob:
          description: Output only. A predeploy Job.
          readOnly: true
          $ref: '#/components/schemas/PredeployJob'
        postdeployJob:
          description: Output only. A postdeploy Job.
          readOnly: true
          $ref: '#/components/schemas/PostdeployJob'
        createChildRolloutJob:
          description: Output only. A createChildRollout Job.
          readOnly: true
          $ref: '#/components/schemas/CreateChildRolloutJob'
        advanceChildRolloutJob:
          description: Output only. An advanceChildRollout Job.
          readOnly: true
          $ref: '#/components/schemas/AdvanceChildRolloutJob'
    DeployJob:
      id: DeployJob
      description: A deploy Job.
      type: object
      properties: {}
    VerifyJob:
      id: VerifyJob
      description: A verify Job.
      type: object
      properties: {}
    PredeployJob:
      id: PredeployJob
      description: A predeploy Job.
      type: object
      properties:
        actions:
          description: Output only. The custom actions that the predeploy Job executes.
          readOnly: true
          type: array
          items:
            type: string
    PostdeployJob:
      id: PostdeployJob
      description: A postdeploy Job.
      type: object
      properties:
        actions:
          description: Output only. The custom actions that the postdeploy Job executes.
          readOnly: true
          type: array
          items:
            type: string
    CreateChildRolloutJob:
      id: CreateChildRolloutJob
      description: A createChildRollout Job.
      type: object
      properties: {}
    AdvanceChildRolloutJob:
      id: AdvanceChildRolloutJob
      description: An advanceChildRollout Job.
      type: object
      properties: {}
    ChildRolloutJobs:
      id: ChildRolloutJobs
      description: ChildRollouts job composition
      type: object
      properties:
        createRolloutJobs:
          description: Output only. List of CreateChildRolloutJobs
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Job'
        advanceRolloutJobs:
          description: Output only. List of AdvanceChildRolloutJobs
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Job'
    Metadata:
      id: Metadata
      description: Metadata includes information associated with a `Rollout`.
      type: object
      properties:
        cloudRun:
          description: >-
            Output only. The name of the Cloud Run Service that is associated
            with a `Rollout`.
          readOnly: true
          $ref: '#/components/schemas/CloudRunMetadata'
        automation:
          description: >-
            Output only. AutomationRolloutMetadata contains the information
            about the interactions between Automation service and this rollout.
          readOnly: true
          $ref: '#/components/schemas/AutomationRolloutMetadata'
        custom:
          description: >-
            Output only. Custom metadata provided by user-defined `Rollout`
            operations.
          readOnly: true
          $ref: '#/components/schemas/CustomMetadata'
    CloudRunMetadata:
      id: CloudRunMetadata
      description: CloudRunMetadata contains information from a Cloud Run deployment.
      type: object
      properties:
        service:
          description: >-
            Output only. The name of the Cloud Run Service that is associated
            with a `Rollout`. Format is
            `projects/{project}/locations/{location}/services/{service}`.
          readOnly: true
          type: string
        serviceUrls:
          description: >-
            Output only. The Cloud Run Service urls that are associated with a
            `Rollout`.
          readOnly: true
          type: array
          items:
            type: string
        revision:
          description: Output only. The Cloud Run Revision id associated with a `Rollout`.
          readOnly: true
          type: string
        job:
          description: >-
            Output only. The name of the Cloud Run job that is associated with a
            `Rollout`. Format is
            `projects/{project}/locations/{location}/jobs/{job_name}`.
          readOnly: true
          type: string
    AutomationRolloutMetadata:
      id: AutomationRolloutMetadata
      description: >-
        AutomationRolloutMetadata contains Automation-related actions that were
        performed on a rollout.
      type: object
      properties:
        promoteAutomationRun:
          description: >-
            Output only. The name of the AutomationRun initiated by a promote
            release rule.
          readOnly: true
          type: string
        advanceAutomationRuns:
          description: >-
            Output only. The names of the AutomationRuns initiated by an advance
            rollout rule.
          readOnly: true
          type: array
          items:
            type: string
        repairAutomationRuns:
          description: >-
            Output only. The names of the AutomationRuns initiated by a repair
            rollout rule.
          readOnly: true
          type: array
          items:
            type: string
    CustomMetadata:
      id: CustomMetadata
      description: CustomMetadata contains information from a user-defined operation.
      type: object
      properties:
        values:
          description: Output only. Key-value pairs provided by the user-defined operation.
          readOnly: true
          type: object
          additionalProperties:
            type: string
    RollbackTargetResponse:
      id: RollbackTargetResponse
      description: The response object from `RollbackTarget`.
      type: object
      properties:
        rollbackConfig:
          description: The config of the rollback `Rollout` created or will be created.
          $ref: '#/components/schemas/RollbackTargetConfig'
    ListCustomTargetTypesResponse:
      id: ListCustomTargetTypesResponse
      description: The response object from `ListCustomTargetTypes.`
      type: object
      properties:
        customTargetTypes:
          description: The `CustomTargetType` objects.
          type: array
          items:
            $ref: '#/components/schemas/CustomTargetType'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    CustomTargetType:
      id: CustomTargetType
      description: >-
        A `CustomTargetType` resource in the Cloud Deploy API. A
        `CustomTargetType` defines a type of custom target that can be
        referenced in a `Target` in order to facilitate deploying to other
        systems besides the supported runtimes.
      type: object
      properties:
        name:
          description: >-
            Identifier. Name of the `CustomTargetType`. Format is
            `projects/{project}/locations/{location}/customTargetTypes/{customTargetType}`.
            The `customTargetType` component must match
            `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`
          type: string
        customTargetTypeId:
          description: Output only. Resource id of the `CustomTargetType`.
          readOnly: true
          type: string
        uid:
          description: Output only. Unique identifier of the `CustomTargetType`.
          readOnly: true
          type: string
        description:
          description: >-
            Optional. Description of the `CustomTargetType`. Max length is 255
            characters.
          type: string
        annotations:
          description: >-
            Optional. User annotations. These attributes can only be set and
            used by the user, and not by Cloud Deploy. See
            https://google.aip.dev/128#annotations for more details such as
            format and size limitations.
          type: object
          additionalProperties:
            type: string
        labels:
          description: >-
            Optional. Labels are attributes that can be set and used by both the
            user and by Cloud Deploy. Labels must meet the following
            constraints: * Keys and values can contain only lowercase letters,
            numeric characters, underscores, and dashes. * All characters must
            use UTF-8 encoding, and international characters are allowed. * Keys
            must start with a lowercase letter or international character. *
            Each resource is limited to a maximum of 64 labels. Both keys and
            values are additionally constrained to be <= 128 bytes.
          type: object
          additionalProperties:
            type: string
        createTime:
          description: Output only. Time at which the `CustomTargetType` was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. Most recent time at which the `CustomTargetType` was
            updated.
          readOnly: true
          type: string
          format: google-datetime
        etag:
          description: >-
            Optional. This checksum is computed by the server based on the value
            of other fields, and may be sent on update and delete requests to
            ensure the client has an up-to-date value before proceeding.
          type: string
        customActions:
          description: >-
            Optional. Configures render and deploy for the `CustomTargetType`
            using Skaffold custom actions.
          $ref: '#/components/schemas/CustomTargetSkaffoldActions'
    CustomTargetSkaffoldActions:
      id: CustomTargetSkaffoldActions
      description: >-
        CustomTargetSkaffoldActions represents the `CustomTargetType`
        configuration using Skaffold custom actions.
      type: object
      properties:
        renderAction:
          description: >-
            Optional. The Skaffold custom action responsible for render
            operations. If not provided then Cloud Deploy will perform the
            render operations via `skaffold render`.
          type: string
        deployAction:
          description: >-
            Required. The Skaffold custom action responsible for deploy
            operations.
          type: string
        includeSkaffoldModules:
          description: >-
            Optional. List of Skaffold modules Cloud Deploy will include in the
            Skaffold Config as required before performing diagnose.
          type: array
          items:
            $ref: '#/components/schemas/SkaffoldModules'
    SkaffoldModules:
      id: SkaffoldModules
      description: Skaffold Config modules and their remote source.
      type: object
      properties:
        configs:
          description: >-
            Optional. The Skaffold Config modules to use from the specified
            source.
          type: array
          items:
            type: string
        git:
          description: >-
            Optional. Remote git repository containing the Skaffold Config
            modules.
          $ref: '#/components/schemas/SkaffoldGitSource'
        googleCloudStorage:
          description: >-
            Optional. Cloud Storage bucket containing the Skaffold Config
            modules.
          $ref: '#/components/schemas/SkaffoldGCSSource'
        googleCloudBuildRepo:
          description: >-
            Optional. Cloud Build V2 repository containing the Skaffold Config
            modules.
          $ref: '#/components/schemas/SkaffoldGCBRepoSource'
    SkaffoldGitSource:
      id: SkaffoldGitSource
      description: Git repository containing Skaffold Config modules.
      type: object
      properties:
        repo:
          description: Required. Git repository the package should be cloned from.
          type: string
        path:
          description: >-
            Optional. Relative path from the repository root to the Skaffold
            file.
          type: string
        ref:
          description: Optional. Git branch or tag to use when cloning the repository.
          type: string
    SkaffoldGCSSource:
      id: SkaffoldGCSSource
      description: Cloud Storage bucket containing Skaffold Config modules.
      type: object
      properties:
        source:
          description: >-
            Required. Cloud Storage source paths to copy recursively. For
            example, providing "gs://my-bucket/dir/configs/*" will result in
            Skaffold copying all files within the "dir/configs" directory in the
            bucket "my-bucket".
          type: string
        path:
          description: Optional. Relative path from the source to the Skaffold file.
          type: string
    SkaffoldGCBRepoSource:
      id: SkaffoldGCBRepoSource
      description: Cloud Build V2 Repository containing Skaffold Configs.
      type: object
      properties:
        repository:
          description: >-
            Required. Name of the Cloud Build V2 Repository. Format is
            projects/{project}/locations/{location}/connections/{connection}/repositories/{repository}.
          type: string
        path:
          description: >-
            Optional. Relative path from the repository root to the Skaffold
            Config file.
          type: string
        ref:
          description: Optional. Branch or tag to use when cloning the repository.
          type: string
    ListReleasesResponse:
      id: ListReleasesResponse
      description: The response object from `ListReleases`.
      type: object
      properties:
        releases:
          description: The `Release` objects.
          type: array
          items:
            $ref: '#/components/schemas/Release'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Release:
      id: Release
      description: >-
        A `Release` resource in the Cloud Deploy API. A `Release` defines a
        specific Skaffold configuration instance that can be deployed.
      type: object
      properties:
        name:
          description: >-
            Identifier. Name of the `Release`. Format is
            `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}`.
            The `release` component must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`
          type: string
        uid:
          description: Output only. Unique identifier of the `Release`.
          readOnly: true
          type: string
        description:
          description: >-
            Optional. Description of the `Release`. Max length is 255
            characters.
          type: string
        annotations:
          description: >-
            Optional. User annotations. These attributes can only be set and
            used by the user, and not by Cloud Deploy. See
            https://google.aip.dev/128#annotations for more details such as
            format and size limitations.
          type: object
          additionalProperties:
            type: string
        labels:
          description: >-
            Labels are attributes that can be set and used by both the user and
            by Cloud Deploy. Labels must meet the following constraints: * Keys
            and values can contain only lowercase letters, numeric characters,
            underscores, and dashes. * All characters must use UTF-8 encoding,
            and international characters are allowed. * Keys must start with a
            lowercase letter or international character. * Each resource is
            limited to a maximum of 64 labels. Both keys and values are
            additionally constrained to be <= 128 bytes.
          type: object
          additionalProperties:
            type: string
        abandoned:
          description: Output only. Indicates whether this is an abandoned release.
          readOnly: true
          type: boolean
        createTime:
          description: Output only. Time at which the `Release` was created.
          readOnly: true
          type: string
          format: google-datetime
        renderStartTime:
          description: Output only. Time at which the render began.
          readOnly: true
          type: string
          format: google-datetime
        renderEndTime:
          description: Output only. Time at which the render completed.
          readOnly: true
          type: string
          format: google-datetime
        skaffoldConfigUri:
          description: >-
            Optional. Cloud Storage URI of tar.gz archive containing Skaffold
            configuration.
          type: string
        skaffoldConfigPath:
          description: Optional. Filepath of the Skaffold config inside of the config URI.
          type: string
        buildArtifacts:
          description: Optional. List of artifacts to pass through to Skaffold command.
          type: array
          items:
            $ref: '#/components/schemas/BuildArtifact'
        deliveryPipelineSnapshot:
          description: >-
            Output only. Snapshot of the parent pipeline taken at release
            creation time.
          readOnly: true
          $ref: '#/components/schemas/DeliveryPipeline'
        targetSnapshots:
          description: Output only. Snapshot of the targets taken at release creation time.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Target'
        customTargetTypeSnapshots:
          description: >-
            Output only. Snapshot of the custom target types referenced by the
            targets taken at release creation time.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/CustomTargetType'
        renderState:
          description: Output only. Current state of the render operation.
          readOnly: true
          type: string
          enumDescriptions:
            - The render state is unspecified.
            - All rendering operations have completed successfully.
            - >-
              All rendering operations have completed, and one or more have
              failed.
            - Rendering has started and is not complete.
          enum:
            - RENDER_STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - IN_PROGRESS
        etag:
          description: >-
            This checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding.
          type: string
        skaffoldVersion:
          description: >-
            Optional. The Skaffold version to use when operating on this
            release, such as "1.20.0". Not all versions are valid; Cloud Deploy
            supports a specific set of versions. If unset, the most recent
            supported Skaffold version will be used.
          type: string
        targetArtifacts:
          description: >-
            Output only. Map from target ID to the target artifacts created
            during the render operation.
          readOnly: true
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TargetArtifact'
        targetRenders:
          description: >-
            Output only. Map from target ID to details of the render operation
            for that target.
          readOnly: true
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TargetRender'
        condition:
          description: Output only. Information around the state of the Release.
          readOnly: true
          $ref: '#/components/schemas/ReleaseCondition'
        deployParameters:
          description: >-
            Optional. The deploy parameters to use for all targets in this
            release.
          type: object
          additionalProperties:
            type: string
    BuildArtifact:
      id: BuildArtifact
      description: Description of an a image to use during Skaffold rendering.
      type: object
      properties:
        image:
          description: Optional. Image name in Skaffold configuration.
          type: string
        tag:
          description: >-
            Optional. Image tag to use. This will generally be the full path to
            an image, such as "gcr.io/my-project/busybox:1.2.3" or
            "gcr.io/my-project/busybox@sha256:abc123".
          type: string
    TargetArtifact:
      id: TargetArtifact
      description: The artifacts produced by a target render operation.
      type: object
      properties:
        artifactUri:
          description: >-
            Output only. URI of a directory containing the artifacts. This
            contains deployment configuration used by Skaffold during a rollout,
            and all paths are relative to this location.
          readOnly: true
          type: string
        skaffoldConfigPath:
          description: >-
            Output only. File path of the resolved Skaffold configuration for
            the stable phase, relative to the URI.
          readOnly: true
          type: string
        manifestPath:
          description: >-
            Output only. File path of the rendered manifest relative to the URI
            for the stable phase.
          readOnly: true
          type: string
        phaseArtifacts:
          description: >-
            Output only. Map from the phase ID to the phase artifacts for the
            `Target`.
          readOnly: true
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PhaseArtifact'
    PhaseArtifact:
      id: PhaseArtifact
      description: Contains the paths to the artifacts, relative to the URI, for a phase.
      type: object
      properties:
        skaffoldConfigPath:
          description: >-
            Output only. File path of the resolved Skaffold configuration
            relative to the URI.
          readOnly: true
          type: string
        manifestPath:
          description: Output only. File path of the rendered manifest relative to the URI.
          readOnly: true
          type: string
        jobManifestsPath:
          description: >-
            Output only. File path of the directory of rendered job manifests
            relative to the URI. This is only set if it is applicable.
          readOnly: true
          type: string
    TargetRender:
      id: TargetRender
      description: Details of rendering for a single target.
      type: object
      properties:
        renderingBuild:
          description: >-
            Output only. The resource name of the Cloud Build `Build` object
            that is used to render the manifest for this target. Format is
            `projects/{project}/locations/{location}/builds/{build}`.
          readOnly: true
          type: string
        renderingState:
          description: Output only. Current state of the render operation for this Target.
          readOnly: true
          type: string
          enumDescriptions:
            - The render operation state is unspecified.
            - The render operation has completed successfully.
            - The render operation has failed.
            - The render operation is in progress.
          enum:
            - TARGET_RENDER_STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - IN_PROGRESS
        metadata:
          description: >-
            Output only. Metadata related to the `Release` render for this
            Target.
          readOnly: true
          $ref: '#/components/schemas/RenderMetadata'
        failureCause:
          description: >-
            Output only. Reason this render failed. This will always be
            unspecified while the render in progress.
          readOnly: true
          type: string
          enumDescriptions:
            - No reason for failure is specified.
            - >-
              Cloud Build is not available, either because it is not enabled or
              because Cloud Deploy has insufficient permissions. See [required
              permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).
            - >-
              The render operation did not complete successfully; check Cloud
              Build logs.
            - >-
              Cloud Build failed to fulfill Cloud Deploy's request. See
              failure_message for additional details.
            - >-
              The render operation did not complete successfully because the
              verification stanza required for verify was not found on the
              Skaffold configuration.
            - >-
              The render operation did not complete successfully because the
              custom action(s) required for Rollout jobs were not found in the
              Skaffold configuration. See failure_message for additional
              details.
            - >-
              Release failed during rendering because the release configuration
              is not supported with the specified deployment strategy.
            - >-
              The render operation had a feature configured that is not
              supported.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - CLOUD_BUILD_REQUEST_FAILED
            - VERIFICATION_CONFIG_NOT_FOUND
            - CUSTOM_ACTION_NOT_FOUND
            - DEPLOYMENT_STRATEGY_NOT_SUPPORTED
            - RENDER_FEATURE_NOT_SUPPORTED
        failureMessage:
          description: >-
            Output only. Additional information about the render failure, if
            available.
          readOnly: true
          type: string
    RenderMetadata:
      id: RenderMetadata
      description: RenderMetadata includes information associated with a `Release` render.
      type: object
      properties:
        cloudRun:
          description: Output only. Metadata associated with rendering for Cloud Run.
          readOnly: true
          $ref: '#/components/schemas/CloudRunRenderMetadata'
        custom:
          description: >-
            Output only. Custom metadata provided by user-defined render
            operation.
          readOnly: true
          $ref: '#/components/schemas/CustomMetadata'
    CloudRunRenderMetadata:
      id: CloudRunRenderMetadata
      description: >-
        CloudRunRenderMetadata contains Cloud Run information associated with a
        `Release` render.
      type: object
      properties:
        service:
          description: >-
            Output only. The name of the Cloud Run Service in the rendered
            manifest. Format is
            `projects/{project}/locations/{location}/services/{service}`.
          readOnly: true
          type: string
    ReleaseCondition:
      id: ReleaseCondition
      description: ReleaseCondition contains all conditions relevant to a Release.
      type: object
      properties:
        releaseReadyCondition:
          description: Details around the Releases's overall status.
          $ref: '#/components/schemas/ReleaseReadyCondition'
        skaffoldSupportedCondition:
          description: Details around the support state of the release's Skaffold version.
          $ref: '#/components/schemas/SkaffoldSupportedCondition'
    ReleaseReadyCondition:
      id: ReleaseReadyCondition
      description: >-
        ReleaseReadyCondition contains information around the status of the
        Release. If a release is not ready, you cannot create a rollout with the
        release.
      type: object
      properties:
        status:
          description: >-
            True if the Release is in a valid state. Otherwise at least one
            condition in `ReleaseCondition` is in an invalid state. Iterate over
            those conditions and see which condition(s) has status = false to
            find out what is wrong with the Release.
          type: boolean
    SkaffoldSupportedCondition:
      id: SkaffoldSupportedCondition
      description: >-
        SkaffoldSupportedCondition contains information about when support for
        the release's version of Skaffold ends.
      type: object
      properties:
        status:
          description: True if the version of Skaffold used by this release is supported.
          type: boolean
        skaffoldSupportState:
          description: The Skaffold support state for this release's version of Skaffold.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - This Skaffold version is currently supported.
            - This Skaffold version is in maintenance mode.
            - This Skaffold version is no longer supported.
          enum:
            - SKAFFOLD_SUPPORT_STATE_UNSPECIFIED
            - SKAFFOLD_SUPPORT_STATE_SUPPORTED
            - SKAFFOLD_SUPPORT_STATE_MAINTENANCE_MODE
            - SKAFFOLD_SUPPORT_STATE_UNSUPPORTED
        maintenanceModeTime:
          description: >-
            The time at which this release's version of Skaffold will enter
            maintenance mode.
          type: string
          format: google-datetime
        supportExpirationTime:
          description: >-
            The time at which this release's version of Skaffold will no longer
            be supported.
          type: string
          format: google-datetime
    AbandonReleaseRequest:
      id: AbandonReleaseRequest
      description: The request object used by `AbandonRelease`.
      type: object
      properties: {}
    AbandonReleaseResponse:
      id: AbandonReleaseResponse
      description: The response object for `AbandonRelease`.
      type: object
      properties: {}
    DeployPolicy:
      id: DeployPolicy
      description: >-
        A `DeployPolicy` resource in the Cloud Deploy API. A `DeployPolicy`
        inhibits manual or automation-driven actions within a Delivery Pipeline
        or Target.
      type: object
      properties:
        name:
          description: >-
            Output only. Name of the `DeployPolicy`. Format is
            `projects/{project}/locations/{location}/deployPolicies/{deployPolicy}`.
            The `deployPolicy` component must match
            `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`
          readOnly: true
          type: string
        uid:
          description: Output only. Unique identifier of the `DeployPolicy`.
          readOnly: true
          type: string
        description:
          description: >-
            Optional. Description of the `DeployPolicy`. Max length is 255
            characters.
          type: string
        annotations:
          description: >-
            Optional. User annotations. These attributes can only be set and
            used by the user, and not by Cloud Deploy. Annotations must meet the
            following constraints: * Annotations are key/value pairs. * Valid
            annotation keys have two segments: an optional prefix and name,
            separated by a slash (`/`). * The name segment is required and must
            be 63 characters or less, beginning and ending with an alphanumeric
            character (`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots
            (`.`), and alphanumerics between. * The prefix is optional. If
            specified, the prefix must be a DNS subdomain: a series of DNS
            labels separated by dots(`.`), not longer than 253 characters in
            total, followed by a slash (`/`). See
            https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set
            for more details.
          type: object
          additionalProperties:
            type: string
        labels:
          description: >-
            Labels are attributes that can be set and used by both the user and
            by Cloud Deploy. Labels must meet the following constraints: * Keys
            and values can contain only lowercase letters, numeric characters,
            underscores, and dashes. * All characters must use UTF-8 encoding,
            and international characters are allowed. * Keys must start with a
            lowercase letter or international character. * Each resource is
            limited to a maximum of 64 labels. Both keys and values are
            additionally constrained to be <= 128 bytes.
          type: object
          additionalProperties:
            type: string
        createTime:
          description: Output only. Time at which the deploy policy was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. Most recent time at which the deploy policy was
            updated.
          readOnly: true
          type: string
          format: google-datetime
        suspended:
          description: >-
            Optional. When suspended, the policy will not prevent actions from
            occurring, even if the action violates the policy.
          type: boolean
        selectors:
          description: >-
            Required. Selected resources to which the policy will be applied. At
            least one selector is required. If one selector matches the resource
            the policy applies. For example, if there are two selectors and the
            action being attempted matches one of them, the policy will apply to
            that action.
          type: array
          items:
            $ref: '#/components/schemas/DeployPolicyResourceSelector'
        rules:
          description: Required. Rules to apply. At least one rule must be present.
          type: array
          items:
            $ref: '#/components/schemas/PolicyRule'
        etag:
          description: >-
            The weak etag of the `DeployPolicy` resource. This checksum is
            computed by the server based on the value of other fields, and may
            be sent on update and delete requests to ensure the client has an
            up-to-date value before proceeding.
          type: string
    DeployPolicyResourceSelector:
      id: DeployPolicyResourceSelector
      description: >-
        Contains information on the resources to select for a deploy policy.
        Attributes provided must all match the resource in order for policy
        restrictions to apply. For example, if delivery pipelines attributes
        given are an id "prod" and labels "foo: bar", a delivery pipeline
        resource must match both that id and have that label in order to be
        subject to the policy.
      type: object
      properties:
        deliveryPipeline:
          description: Optional. Contains attributes about a delivery pipeline.
          $ref: '#/components/schemas/DeliveryPipelineAttribute'
        target:
          description: Optional. Contains attributes about a target.
          $ref: '#/components/schemas/TargetAttribute'
    DeliveryPipelineAttribute:
      id: DeliveryPipelineAttribute
      description: Contains criteria for selecting DeliveryPipelines.
      type: object
      properties:
        id:
          description: >-
            Optional. ID of the `DeliveryPipeline`. The value of this field
            could be one of the following: * The last segment of a pipeline name
            * "*", all delivery pipelines in a location
          type: string
        labels:
          description: DeliveryPipeline labels.
          type: object
          additionalProperties:
            type: string
    TargetAttribute:
      id: TargetAttribute
      description: >-
        Contains criteria for selecting Targets. This could be used to select
        targets for a Deploy Policy or for an Automation.
      type: object
      properties:
        id:
          description: >-
            Optional. ID of the `Target`. The value of this field could be one
            of the following: * The last segment of a target name * "*", all
            targets in a location
          type: string
        labels:
          description: Target labels.
          type: object
          additionalProperties:
            type: string
    PolicyRule:
      id: PolicyRule
      description: Deploy Policy rule.
      type: object
      properties:
        rolloutRestriction:
          description: Optional. Rollout restrictions.
          $ref: '#/components/schemas/RolloutRestriction'
    RolloutRestriction:
      id: RolloutRestriction
      description: Rollout restrictions.
      type: object
      properties:
        id:
          description: >-
            Required. Restriction rule ID. Required and must be unique within a
            DeployPolicy. The format is `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.
          type: string
        invokers:
          description: >-
            Optional. What invoked the action. If left empty, all invoker types
            will be restricted.
          type: array
          items:
            type: string
            enumDescriptions:
              - Unspecified.
              - >-
                The action is user-driven. For example, creating a rollout
                manually via a gcloud create command.
              - Automated action by Cloud Deploy.
            enum:
              - INVOKER_UNSPECIFIED
              - USER
              - DEPLOY_AUTOMATION
        actions:
          description: >-
            Optional. Rollout actions to be restricted as part of the policy. If
            left empty, all actions will be restricted.
          type: array
          items:
            type: string
            enumDescriptions:
              - Unspecified.
              - Advance the rollout to the next phase.
              - Approve the rollout.
              - Cancel the rollout.
              - Create a rollout.
              - Ignore a job result on the rollout.
              - Retry a job for a rollout.
              - Rollback a rollout.
              - Terminate a jobrun.
            enum:
              - ROLLOUT_ACTIONS_UNSPECIFIED
              - ADVANCE
              - APPROVE
              - CANCEL
              - CREATE
              - IGNORE_JOB
              - RETRY_JOB
              - ROLLBACK
              - TERMINATE_JOBRUN
        timeWindows:
          description: Required. Time window within which actions are restricted.
          $ref: '#/components/schemas/TimeWindows'
    TimeWindows:
      id: TimeWindows
      description: >-
        Time windows within which actions are restricted. See the
        [documentation](https://cloud.google.com/deploy/docs/deploy-policy#dates_times)
        for more information on how to configure dates/times.
      type: object
      properties:
        timeZone:
          description: >-
            Required. The time zone in IANA format [IANA Time Zone
            Database](https://www.iana.org/time-zones) (e.g. America/New_York).
          type: string
        oneTimeWindows:
          description: Optional. One-time windows within which actions are restricted.
          type: array
          items:
            $ref: '#/components/schemas/OneTimeWindow'
        weeklyWindows:
          description: >-
            Optional. Recurring weekly windows within which actions are
            restricted.
          type: array
          items:
            $ref: '#/components/schemas/WeeklyWindow'
    OneTimeWindow:
      id: OneTimeWindow
      description: >-
        One-time window within which actions are restricted. For example,
        blocking actions over New Year's Eve from December 31st at 5pm to
        January 1st at 9am.
      type: object
      properties:
        startDate:
          description: Required. Start date.
          $ref: '#/components/schemas/Date'
        startTime:
          description: >-
            Required. Start time (inclusive). Use 00:00 for the beginning of the
            day.
          $ref: '#/components/schemas/TimeOfDay'
        endDate:
          description: Required. End date.
          $ref: '#/components/schemas/Date'
        endTime:
          description: >-
            Required. End time (exclusive). You may use 24:00 for the end of the
            day.
          $ref: '#/components/schemas/TimeOfDay'
    Date:
      id: Date
      description: >-
        Represents a whole or partial calendar date, such as a birthday. The
        time of day and time zone are either specified elsewhere or are
        insignificant. The date is relative to the Gregorian Calendar. This can
        represent one of the following: * A full date, with non-zero year,
        month, and day values. * A month and day, with a zero year (for example,
        an anniversary). * A year on its own, with a zero month and a zero day.
        * A year and month, with a zero day (for example, a credit card
        expiration date). Related types: * google.type.TimeOfDay *
        google.type.DateTime * google.protobuf.Timestamp
      type: object
      properties:
        year:
          description: >-
            Year of the date. Must be from 1 to 9999, or 0 to specify a date
            without a year.
          type: integer
          format: int32
        month:
          description: >-
            Month of a year. Must be from 1 to 12, or 0 to specify a year
            without a month and day.
          type: integer
          format: int32
        day:
          description: >-
            Day of a month. Must be from 1 to 31 and valid for the year and
            month, or 0 to specify a year by itself or a year and month where
            the day isn't significant.
          type: integer
          format: int32
    TimeOfDay:
      id: TimeOfDay
      description: >-
        Represents a time of day. The date and time zone are either not
        significant or are specified elsewhere. An API may choose to allow leap
        seconds. Related types are google.type.Date and
        `google.protobuf.Timestamp`.
      type: object
      properties:
        hours:
          description: >-
            Hours of a day in 24 hour format. Must be greater than or equal to 0
            and typically must be less than or equal to 23. An API may choose to
            allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          description: >-
            Minutes of an hour. Must be greater than or equal to 0 and less than
            or equal to 59.
          type: integer
          format: int32
        seconds:
          description: >-
            Seconds of a minute. Must be greater than or equal to 0 and
            typically must be less than or equal to 59. An API may allow the
            value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: >-
            Fractions of seconds, in nanoseconds. Must be greater than or equal
            to 0 and less than or equal to 999,999,999.
          type: integer
          format: int32
    WeeklyWindow:
      id: WeeklyWindow
      description: >-
        Weekly windows. For example, blocking actions every Saturday and Sunday.
        Another example would be blocking actions every weekday from 5pm to
        midnight.
      type: object
      properties:
        daysOfWeek:
          description: >-
            Optional. Days of week. If left empty, all days of the week will be
            included.
          type: array
          items:
            type: string
            enumDescriptions:
              - The day of the week is unspecified.
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
              - Sunday
            enum:
              - DAY_OF_WEEK_UNSPECIFIED
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
        startTime:
          description: >-
            Optional. Start time (inclusive). Use 00:00 for the beginning of the
            day. If you specify start_time you must also specify end_time. If
            left empty, this will block for the entire day for the days
            specified in days_of_week.
          $ref: '#/components/schemas/TimeOfDay'
        endTime:
          description: >-
            Optional. End time (exclusive). Use 24:00 to indicate midnight. If
            you specify end_time you must also specify start_time. If left
            empty, this will block for the entire day for the days specified in
            days_of_week.
          $ref: '#/components/schemas/TimeOfDay'
    ListDeployPoliciesResponse:
      id: ListDeployPoliciesResponse
      description: The response object from `ListDeployPolicies`.
      type: object
      properties:
        deployPolicies:
          description: The `DeployPolicy` objects.
          type: array
          items:
            $ref: '#/components/schemas/DeployPolicy'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    ApproveRolloutRequest:
      id: ApproveRolloutRequest
      description: The request object used by `ApproveRollout`.
      type: object
      properties:
        approved:
          description: Required. True = approve; false = reject
          type: boolean
        overrideDeployPolicy:
          description: >-
            Optional. Deploy policies to override. Format is
            `projects/{project}/locations/{location}/deployPolicies/{deployPolicy}`.
          type: array
          items:
            type: string
    ApproveRolloutResponse:
      id: ApproveRolloutResponse
      description: The response object from `ApproveRollout`.
      type: object
      properties: {}
    AdvanceRolloutRequest:
      id: AdvanceRolloutRequest
      description: The request object used by `AdvanceRollout`.
      type: object
      properties:
        phaseId:
          description: Required. The phase ID to advance the `Rollout` to.
          type: string
        overrideDeployPolicy:
          description: >-
            Optional. Deploy policies to override. Format is
            `projects/{project}/locations/{location}/deployPolicies/{deployPolicy}`.
          type: array
          items:
            type: string
    AdvanceRolloutResponse:
      id: AdvanceRolloutResponse
      description: The response object from `AdvanceRollout`.
      type: object
      properties: {}
    CancelRolloutRequest:
      id: CancelRolloutRequest
      description: The request object used by `CancelRollout`.
      type: object
      properties:
        overrideDeployPolicy:
          description: >-
            Optional. Deploy policies to override. Format is
            `projects/{project}/locations/{location}/deployPolicies/{deployPolicy}`.
          type: array
          items:
            type: string
    CancelRolloutResponse:
      id: CancelRolloutResponse
      description: The response object from `CancelRollout`.
      type: object
      properties: {}
    ListRolloutsResponse:
      id: ListRolloutsResponse
      description: ListRolloutsResponse is the response object returned by `ListRollouts`.
      type: object
      properties:
        rollouts:
          description: The `Rollout` objects.
          type: array
          items:
            $ref: '#/components/schemas/Rollout'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    IgnoreJobRequest:
      id: IgnoreJobRequest
      description: The request object used by `IgnoreJob`.
      type: object
      properties:
        phaseId:
          description: Required. The phase ID the Job to ignore belongs to.
          type: string
        jobId:
          description: Required. The job ID for the Job to ignore.
          type: string
        overrideDeployPolicy:
          description: >-
            Optional. Deploy policies to override. Format is
            `projects/{project}/locations/{location}/deployPolicies/{deployPolicy}`.
          type: array
          items:
            type: string
    IgnoreJobResponse:
      id: IgnoreJobResponse
      description: The response object from `IgnoreJob`.
      type: object
      properties: {}
    RetryJobRequest:
      id: RetryJobRequest
      description: RetryJobRequest is the request object used by `RetryJob`.
      type: object
      properties:
        phaseId:
          description: Required. The phase ID the Job to retry belongs to.
          type: string
        jobId:
          description: Required. The job ID for the Job to retry.
          type: string
        overrideDeployPolicy:
          description: >-
            Optional. Deploy policies to override. Format is
            `projects/{project}/locations/{location}/deployPolicies/{deployPolicy}`.
          type: array
          items:
            type: string
    RetryJobResponse:
      id: RetryJobResponse
      description: The response object from 'RetryJob'.
      type: object
      properties: {}
    ListJobRunsResponse:
      id: ListJobRunsResponse
      description: ListJobRunsResponse is the response object returned by `ListJobRuns`.
      type: object
      properties:
        jobRuns:
          description: The `JobRun` objects.
          type: array
          items:
            $ref: '#/components/schemas/JobRun'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached
          type: array
          items:
            type: string
    JobRun:
      id: JobRun
      description: >-
        A `JobRun` resource in the Cloud Deploy API. A `JobRun` contains
        information of a single `Rollout` job evaluation.
      type: object
      properties:
        name:
          description: >-
            Output only. Name of the `JobRun`. Format is
            `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{releases}/rollouts/{rollouts}/jobRuns/{uuid}`.
          readOnly: true
          type: string
        uid:
          description: Output only. Unique identifier of the `JobRun`.
          readOnly: true
          type: string
        phaseId:
          description: Output only. ID of the `Rollout` phase this `JobRun` belongs in.
          readOnly: true
          type: string
        jobId:
          description: Output only. ID of the `Rollout` job this `JobRun` corresponds to.
          readOnly: true
          type: string
        createTime:
          description: Output only. Time at which the `JobRun` was created.
          readOnly: true
          type: string
          format: google-datetime
        startTime:
          description: Output only. Time at which the `JobRun` was started.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. Time at which the `JobRun` ended.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. The current state of the `JobRun`.
          readOnly: true
          type: string
          enumDescriptions:
            - The `JobRun` has an unspecified state.
            - The `JobRun` is in progress.
            - The `JobRun` has succeeded.
            - The `JobRun` has failed.
            - The `JobRun` is terminating.
            - The `JobRun` was terminated.
          enum:
            - STATE_UNSPECIFIED
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - TERMINATING
            - TERMINATED
        deployJobRun:
          description: Output only. Information specific to a deploy `JobRun`.
          readOnly: true
          $ref: '#/components/schemas/DeployJobRun'
        verifyJobRun:
          description: Output only. Information specific to a verify `JobRun`.
          readOnly: true
          $ref: '#/components/schemas/VerifyJobRun'
        predeployJobRun:
          description: Output only. Information specific to a predeploy `JobRun`.
          readOnly: true
          $ref: '#/components/schemas/PredeployJobRun'
        postdeployJobRun:
          description: Output only. Information specific to a postdeploy `JobRun`.
          readOnly: true
          $ref: '#/components/schemas/PostdeployJobRun'
        createChildRolloutJobRun:
          description: Output only. Information specific to a createChildRollout `JobRun`.
          readOnly: true
          $ref: '#/components/schemas/CreateChildRolloutJobRun'
        advanceChildRolloutJobRun:
          description: Output only. Information specific to an advanceChildRollout `JobRun`
          readOnly: true
          $ref: '#/components/schemas/AdvanceChildRolloutJobRun'
        etag:
          description: >-
            Output only. This checksum is computed by the server based on the
            value of other fields, and may be sent on update and delete requests
            to ensure the client has an up-to-date value before proceeding.
          readOnly: true
          type: string
    DeployJobRun:
      id: DeployJobRun
      description: DeployJobRun contains information specific to a deploy `JobRun`.
      type: object
      properties:
        build:
          description: >-
            Output only. The resource name of the Cloud Build `Build` object
            that is used to deploy. Format is
            `projects/{project}/locations/{location}/builds/{build}`.
          readOnly: true
          type: string
        failureCause:
          description: >-
            Output only. The reason the deploy failed. This will always be
            unspecified while the deploy is in progress or if it succeeded.
          readOnly: true
          type: string
          enumDescriptions:
            - No reason for failure is specified.
            - >-
              Cloud Build is not available, either because it is not enabled or
              because Cloud Deploy has insufficient permissions. See [Required
              permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).
            - >-
              The deploy operation did not complete successfully; check Cloud
              Build logs.
            - The deploy job run did not complete within the allotted time.
            - >-
              There were missing resources in the runtime environment required
              for a canary deployment. Check the Cloud Build logs for more
              information.
            - >-
              Cloud Build failed to fulfill Cloud Deploy's request. See
              failure_message for additional details.
            - >-
              The deploy operation had a feature configured that is not
              supported.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - MISSING_RESOURCES_FOR_CANARY
            - CLOUD_BUILD_REQUEST_FAILED
            - DEPLOY_FEATURE_NOT_SUPPORTED
        failureMessage:
          description: >-
            Output only. Additional information about the deploy failure, if
            available.
          readOnly: true
          type: string
        metadata:
          description: >-
            Output only. Metadata containing information about the deploy job
            run.
          readOnly: true
          $ref: '#/components/schemas/DeployJobRunMetadata'
        artifact:
          description: Output only. The artifact of a deploy job run, if available.
          readOnly: true
          $ref: '#/components/schemas/DeployArtifact'
    DeployJobRunMetadata:
      id: DeployJobRunMetadata
      description: >-
        DeployJobRunMetadata surfaces information associated with a
        `DeployJobRun` to the user.
      type: object
      properties:
        cloudRun:
          description: >-
            Output only. The name of the Cloud Run Service that is associated
            with a `DeployJobRun`.
          readOnly: true
          $ref: '#/components/schemas/CloudRunMetadata'
        customTarget:
          description: >-
            Output only. Custom Target metadata associated with a
            `DeployJobRun`.
          readOnly: true
          $ref: '#/components/schemas/CustomTargetDeployMetadata'
        custom:
          description: >-
            Output only. Custom metadata provided by user-defined deploy
            operation.
          readOnly: true
          $ref: '#/components/schemas/CustomMetadata'
    CustomTargetDeployMetadata:
      id: CustomTargetDeployMetadata
      description: >-
        CustomTargetDeployMetadata contains information from a Custom Target
        deploy operation.
      type: object
      properties:
        skipMessage:
          description: >-
            Output only. Skip message provided in the results of a custom deploy
            operation.
          readOnly: true
          type: string
    DeployArtifact:
      id: DeployArtifact
      description: The artifacts produced by a deploy operation.
      type: object
      properties:
        artifactUri:
          description: >-
            Output only. URI of a directory containing the artifacts. All paths
            are relative to this location.
          readOnly: true
          type: string
        manifestPaths:
          description: >-
            Output only. File paths of the manifests applied during the deploy
            operation relative to the URI.
          readOnly: true
          type: array
          items:
            type: string
    VerifyJobRun:
      id: VerifyJobRun
      description: VerifyJobRun contains information specific to a verify `JobRun`.
      type: object
      properties:
        build:
          description: >-
            Output only. The resource name of the Cloud Build `Build` object
            that is used to verify. Format is
            `projects/{project}/locations/{location}/builds/{build}`.
          readOnly: true
          type: string
        artifactUri:
          description: >-
            Output only. URI of a directory containing the verify artifacts.
            This contains the Skaffold event log.
          readOnly: true
          type: string
        eventLogPath:
          description: >-
            Output only. File path of the Skaffold event log relative to the
            artifact URI.
          readOnly: true
          type: string
        failureCause:
          description: >-
            Output only. The reason the verify failed. This will always be
            unspecified while the verify is in progress or if it succeeded.
          readOnly: true
          type: string
          enumDescriptions:
            - No reason for failure is specified.
            - >-
              Cloud Build is not available, either because it is not enabled or
              because Cloud Deploy has insufficient permissions. See [required
              permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).
            - >-
              The verify operation did not complete successfully; check Cloud
              Build logs.
            - The verify job run did not complete within the allotted time.
            - No Skaffold verify configuration was found.
            - >-
              Cloud Build failed to fulfill Cloud Deploy's request. See
              failure_message for additional details.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - VERIFICATION_CONFIG_NOT_FOUND
            - CLOUD_BUILD_REQUEST_FAILED
        failureMessage:
          description: >-
            Output only. Additional information about the verify failure, if
            available.
          readOnly: true
          type: string
    PredeployJobRun:
      id: PredeployJobRun
      description: PredeployJobRun contains information specific to a predeploy `JobRun`.
      type: object
      properties:
        build:
          description: >-
            Output only. The resource name of the Cloud Build `Build` object
            that is used to execute the custom actions associated with the
            predeploy Job. Format is
            `projects/{project}/locations/{location}/builds/{build}`.
          readOnly: true
          type: string
        failureCause:
          description: >-
            Output only. The reason the predeploy failed. This will always be
            unspecified while the predeploy is in progress or if it succeeded.
          readOnly: true
          type: string
          enumDescriptions:
            - No reason for failure is specified.
            - >-
              Cloud Build is not available, either because it is not enabled or
              because Cloud Deploy has insufficient permissions. See [required
              permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).
            - >-
              The predeploy operation did not complete successfully; check Cloud
              Build logs.
            - The predeploy job run did not complete within the allotted time.
            - >-
              Cloud Build failed to fulfill Cloud Deploy's request. See
              failure_message for additional details.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - CLOUD_BUILD_REQUEST_FAILED
        failureMessage:
          description: >-
            Output only. Additional information about the predeploy failure, if
            available.
          readOnly: true
          type: string
    PostdeployJobRun:
      id: PostdeployJobRun
      description: PostdeployJobRun contains information specific to a postdeploy `JobRun`.
      type: object
      properties:
        build:
          description: >-
            Output only. The resource name of the Cloud Build `Build` object
            that is used to execute the custom actions associated with the
            postdeploy Job. Format is
            `projects/{project}/locations/{location}/builds/{build}`.
          readOnly: true
          type: string
        failureCause:
          description: >-
            Output only. The reason the postdeploy failed. This will always be
            unspecified while the postdeploy is in progress or if it succeeded.
          readOnly: true
          type: string
          enumDescriptions:
            - No reason for failure is specified.
            - >-
              Cloud Build is not available, either because it is not enabled or
              because Cloud Deploy has insufficient permissions. See [required
              permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).
            - >-
              The postdeploy operation did not complete successfully; check
              Cloud Build logs.
            - The postdeploy job run did not complete within the allotted time.
            - >-
              Cloud Build failed to fulfill Cloud Deploy's request. See
              failure_message for additional details.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - CLOUD_BUILD_REQUEST_FAILED
        failureMessage:
          description: >-
            Output only. Additional information about the postdeploy failure, if
            available.
          readOnly: true
          type: string
    CreateChildRolloutJobRun:
      id: CreateChildRolloutJobRun
      description: >-
        CreateChildRolloutJobRun contains information specific to a
        createChildRollout `JobRun`.
      type: object
      properties:
        rollout:
          description: >-
            Output only. Name of the `ChildRollout`. Format is
            `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
          readOnly: true
          type: string
        rolloutPhaseId:
          description: >-
            Output only. The ID of the childRollout Phase initiated by this
            JobRun.
          readOnly: true
          type: string
    AdvanceChildRolloutJobRun:
      id: AdvanceChildRolloutJobRun
      description: >-
        AdvanceChildRolloutJobRun contains information specific to a
        advanceChildRollout `JobRun`.
      type: object
      properties:
        rollout:
          description: >-
            Output only. Name of the `ChildRollout`. Format is
            `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
          readOnly: true
          type: string
        rolloutPhaseId:
          description: Output only. the ID of the ChildRollout's Phase.
          readOnly: true
          type: string
    TerminateJobRunRequest:
      id: TerminateJobRunRequest
      description: The request object used by `TerminateJobRun`.
      type: object
      properties:
        overrideDeployPolicy:
          description: >-
            Optional. Deploy policies to override. Format is
            `projects/{project}/locations/{location}/deployPolicies/{deployPolicy}`.
          type: array
          items:
            type: string
    TerminateJobRunResponse:
      id: TerminateJobRunResponse
      description: The response object from `TerminateJobRun`.
      type: object
      properties: {}
    Config:
      id: Config
      description: Service-wide configuration.
      type: object
      properties:
        name:
          description: Name of the configuration.
          type: string
        supportedVersions:
          description: All supported versions of Skaffold.
          type: array
          items:
            $ref: '#/components/schemas/SkaffoldVersion'
        defaultSkaffoldVersion:
          description: >-
            Default Skaffold version that is assigned when a Release is created
            without specifying a Skaffold version.
          type: string
    SkaffoldVersion:
      id: SkaffoldVersion
      description: Details of a supported Skaffold version.
      type: object
      properties:
        version:
          description: Release version number. For example, "1.20.3".
          type: string
        maintenanceModeTime:
          description: >-
            The time at which this version of Skaffold will enter maintenance
            mode.
          type: string
          format: google-datetime
        supportExpirationTime:
          description: >-
            The time at which this version of Skaffold will no longer be
            supported.
          type: string
          format: google-datetime
        supportEndDate:
          description: Date when this version is expected to no longer be supported.
          $ref: '#/components/schemas/Date'
    Automation:
      id: Automation
      description: >-
        An `Automation` resource in the Cloud Deploy API. An `Automation`
        enables the automation of manually driven actions for a Delivery
        Pipeline, which includes Release promotion among Targets, Rollout repair
        and Rollout deployment strategy advancement. The intention of Automation
        is to reduce manual intervention in the continuous delivery process.
      type: object
      properties:
        name:
          description: >-
            Output only. Name of the `Automation`. Format is
            `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automations/{automation}`.
          readOnly: true
          type: string
        uid:
          description: Output only. Unique identifier of the `Automation`.
          readOnly: true
          type: string
        description:
          description: >-
            Optional. Description of the `Automation`. Max length is 255
            characters.
          type: string
        createTime:
          description: Output only. Time at which the automation was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Time at which the automation was updated.
          readOnly: true
          type: string
          format: google-datetime
        annotations:
          description: >-
            Optional. User annotations. These attributes can only be set and
            used by the user, and not by Cloud Deploy. Annotations must meet the
            following constraints: * Annotations are key/value pairs. * Valid
            annotation keys have two segments: an optional prefix and name,
            separated by a slash (`/`). * The name segment is required and must
            be 63 characters or less, beginning and ending with an alphanumeric
            character (`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots
            (`.`), and alphanumerics between. * The prefix is optional. If
            specified, the prefix must be a DNS subdomain: a series of DNS
            labels separated by dots(`.`), not longer than 253 characters in
            total, followed by a slash (`/`). See
            https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set
            for more details.
          type: object
          additionalProperties:
            type: string
        labels:
          description: >-
            Optional. Labels are attributes that can be set and used by both the
            user and by Cloud Deploy. Labels must meet the following
            constraints: * Keys and values can contain only lowercase letters,
            numeric characters, underscores, and dashes. * All characters must
            use UTF-8 encoding, and international characters are allowed. * Keys
            must start with a lowercase letter or international character. *
            Each resource is limited to a maximum of 64 labels. Both keys and
            values are additionally constrained to be <= 63 characters.
          type: object
          additionalProperties:
            type: string
        etag:
          description: >-
            Optional. The weak etag of the `Automation` resource. This checksum
            is computed by the server based on the value of other fields, and
            may be sent on update and delete requests to ensure the client has
            an up-to-date value before proceeding.
          type: string
        suspended:
          description: Optional. When Suspended, automation is deactivated from execution.
          type: boolean
        serviceAccount:
          description: >-
            Required. Email address of the user-managed IAM service account that
            creates Cloud Deploy release and rollout resources.
          type: string
        selector:
          description: >-
            Required. Selected resources to which the automation will be
            applied.
          $ref: '#/components/schemas/AutomationResourceSelector'
        rules:
          description: >-
            Required. List of Automation rules associated with the Automation
            resource. Must have at least one rule and limited to 250 rules per
            Delivery Pipeline. Note: the order of the rules here is not the same
            as the order of execution.
          type: array
          items:
            $ref: '#/components/schemas/AutomationRule'
    AutomationResourceSelector:
      id: AutomationResourceSelector
      description: >-
        AutomationResourceSelector contains the information to select the
        resources to which an Automation is going to be applied.
      type: object
      properties:
        targets:
          description: Optional. Contains attributes about a target.
          type: array
          items:
            $ref: '#/components/schemas/TargetAttribute'
    AutomationRule:
      id: AutomationRule
      description: '`AutomationRule` defines the automation activities.'
      type: object
      properties:
        promoteReleaseRule:
          description: >-
            Optional. `PromoteReleaseRule` will automatically promote a release
            from the current target to a specified target.
          $ref: '#/components/schemas/PromoteReleaseRule'
        advanceRolloutRule:
          description: >-
            Optional. The `AdvanceRolloutRule` will automatically advance a
            successful Rollout.
          $ref: '#/components/schemas/AdvanceRolloutRule'
        repairRolloutRule:
          description: >-
            Optional. The `RepairRolloutRule` will automatically repair a failed
            rollout.
          $ref: '#/components/schemas/RepairRolloutRule'
        timedPromoteReleaseRule:
          description: >-
            Optional. The `TimedPromoteReleaseRule` will automatically promote a
            release from the current target(s) to the specified target(s) on a
            configured schedule.
          $ref: '#/components/schemas/TimedPromoteReleaseRule'
    PromoteReleaseRule:
      id: PromoteReleaseRule
      description: >-
        The `PromoteRelease` rule will automatically promote a release from the
        current target to a specified target.
      type: object
      properties:
        id:
          description: >-
            Required. ID of the rule. This id must be unique in the `Automation`
            resource to which this rule belongs. The format is
            `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.
          type: string
        wait:
          description: >-
            Optional. How long the release need to be paused until being
            promoted to the next target.
          type: string
          format: google-duration
        destinationTargetId:
          description: >-
            Optional. The ID of the stage in the pipeline to which this
            `Release` is deploying. If unspecified, default it to the next stage
            in the promotion flow. The value of this field could be one of the
            following: * The last segment of a target name * "@next", the next
            target in the promotion sequence
          type: string
        condition:
          description: Output only. Information around the state of the Automation rule.
          readOnly: true
          $ref: '#/components/schemas/AutomationRuleCondition'
        destinationPhase:
          description: >-
            Optional. The starting phase of the rollout created by this
            operation. Default to the first phase.
          type: string
    AutomationRuleCondition:
      id: AutomationRuleCondition
      description: >-
        `AutomationRuleCondition` contains conditions relevant to an
        `Automation` rule.
      type: object
      properties:
        targetsPresentCondition:
          description: Optional. Details around targets enumerated in the rule.
          $ref: '#/components/schemas/TargetsPresentCondition'
        timedPromoteReleaseCondition:
          description: >-
            Optional. TimedPromoteReleaseCondition contains rule conditions
            specific to a an Automation with a timed promote release rule
            defined.
          $ref: '#/components/schemas/TimedPromoteReleaseCondition'
    TimedPromoteReleaseCondition:
      id: TimedPromoteReleaseCondition
      description: >-
        `TimedPromoteReleaseCondition` contains conditions specific to an
        Automation with a Timed Promote Release rule defined.
      type: object
      properties:
        nextPromotionTime:
          description: Output only. When the next scheduled promotion(s) will occur.
          readOnly: true
          type: string
          format: google-datetime
        targetsList:
          description: >-
            Output only. A list of targets involved in the upcoming timed
            promotion(s).
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Targets'
    Targets:
      id: Targets
      description: The targets involved in a single timed promotion.
      type: object
      properties:
        sourceTargetId:
          description: Optional. The source target ID.
          type: string
        destinationTargetId:
          description: Optional. The destination target ID.
          type: string
    AdvanceRolloutRule:
      id: AdvanceRolloutRule
      description: >-
        The `AdvanceRollout` automation rule will automatically advance a
        successful Rollout to the next phase.
      type: object
      properties:
        id:
          description: >-
            Required. ID of the rule. This id must be unique in the `Automation`
            resource to which this rule belongs. The format is
            `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.
          type: string
        sourcePhases:
          description: >-
            Optional. Proceeds only after phase name matched any one in the
            list. This value must consist of lower-case letters, numbers, and
            hyphens, start with a letter and end with a letter or a number, and
            have a max length of 63 characters. In other words, it must match
            the following regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`.
          type: array
          items:
            type: string
        wait:
          description: Optional. How long to wait after a rollout is finished.
          type: string
          format: google-duration
        condition:
          description: Output only. Information around the state of the Automation rule.
          readOnly: true
          $ref: '#/components/schemas/AutomationRuleCondition'
    RepairRolloutRule:
      id: RepairRolloutRule
      description: >-
        The `RepairRolloutRule` automation rule will automatically repair a
        failed `Rollout`.
      type: object
      properties:
        id:
          description: >-
            Required. ID of the rule. This id must be unique in the `Automation`
            resource to which this rule belongs. The format is
            `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.
          type: string
        phases:
          description: >-
            Optional. Phases within which jobs are subject to automatic repair
            actions on failure. Proceeds only after phase name matched any one
            in the list, or for all phases if unspecified. This value must
            consist of lower-case letters, numbers, and hyphens, start with a
            letter and end with a letter or a number, and have a max length of
            63 characters. In other words, it must match the following regex:
            `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`.
          type: array
          items:
            type: string
        jobs:
          description: >-
            Optional. Jobs to repair. Proceeds only after job name matched any
            one in the list, or for all jobs if unspecified or empty. The phase
            that includes the job must match the phase ID specified in
            `source_phase`. This value must consist of lower-case letters,
            numbers, and hyphens, start with a letter and end with a letter or a
            number, and have a max length of 63 characters. In other words, it
            must match the following regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`.
          type: array
          items:
            type: string
        condition:
          description: Output only. Information around the state of the 'Automation' rule.
          readOnly: true
          $ref: '#/components/schemas/AutomationRuleCondition'
        repairPhases:
          description: >-
            Required. Defines the types of automatic repair phases for failed
            jobs.
          type: array
          items:
            $ref: '#/components/schemas/RepairPhaseConfig'
    RepairPhaseConfig:
      id: RepairPhaseConfig
      description: Configuration of the repair phase.
      type: object
      properties:
        retry:
          description: Optional. Retries a failed job.
          $ref: '#/components/schemas/Retry'
        rollback:
          description: Optional. Rolls back a `Rollout`.
          $ref: '#/components/schemas/Rollback'
    Retry:
      id: Retry
      description: Retries the failed job.
      type: object
      properties:
        attempts:
          description: >-
            Required. Total number of retries. Retry is skipped if set to 0; The
            minimum value is 1, and the maximum value is 10.
          type: string
          format: int64
        wait:
          description: >-
            Optional. How long to wait for the first retry. Default is 0, and
            the maximum value is 14d.
          type: string
          format: google-duration
        backoffMode:
          description: >-
            Optional. The pattern of how wait time will be increased. Default is
            linear. Backoff mode will be ignored if `wait` is 0.
          type: string
          enumDescriptions:
            - No WaitMode is specified.
            - Increases the wait time linearly.
            - Increases the wait time exponentially.
          enum:
            - BACKOFF_MODE_UNSPECIFIED
            - BACKOFF_MODE_LINEAR
            - BACKOFF_MODE_EXPONENTIAL
    Rollback:
      id: Rollback
      description: Rolls back a `Rollout`.
      type: object
      properties:
        destinationPhase:
          description: >-
            Optional. The starting phase ID for the `Rollout`. If unspecified,
            the `Rollout` will start in the stable phase.
          type: string
        disableRollbackIfRolloutPending:
          description: >-
            Optional. If pending rollout exists on the target, the rollback
            operation will be aborted.
          type: boolean
    TimedPromoteReleaseRule:
      id: TimedPromoteReleaseRule
      description: >-
        The `TimedPromoteReleaseRule` will automatically promote a release from
        the current target(s) to the specified target(s) on a configured
        schedule.
      type: object
      properties:
        id:
          description: >-
            Required. ID of the rule. This ID must be unique in the `Automation`
            resource to which this rule belongs. The format is
            `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.
          type: string
        destinationTargetId:
          description: >-
            Optional. The ID of the stage in the pipeline to which this
            `Release` is deploying. If unspecified, default it to the next stage
            in the promotion flow. The value of this field could be one of the
            following: * The last segment of a target name * "@next", the next
            target in the promotion sequence
          type: string
        schedule:
          description: >-
            Required. Schedule in crontab format. e.g. "0 9 * * 1" for every
            Monday at 9am.
          type: string
        timeZone:
          description: >-
            Required. The time zone in IANA format [IANA Time Zone
            Database](https://www.iana.org/time-zones) (e.g. America/New_York).
          type: string
        condition:
          description: Output only. Information around the state of the Automation rule.
          readOnly: true
          $ref: '#/components/schemas/AutomationRuleCondition'
        destinationPhase:
          description: >-
            Optional. The starting phase of the rollout created by this rule.
            Default to the first phase.
          type: string
    ListAutomationsResponse:
      id: ListAutomationsResponse
      description: The response object from `ListAutomations`.
      type: object
      properties:
        automations:
          description: The `Automation` objects.
          type: array
          items:
            $ref: '#/components/schemas/Automation'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    AutomationRun:
      id: AutomationRun
      description: >-
        An `AutomationRun` resource in the Cloud Deploy API. An `AutomationRun`
        represents an execution instance of an automation rule.
      type: object
      properties:
        name:
          description: >-
            Output only. Name of the `AutomationRun`. Format is
            `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automationRuns/{automation_run}`.
          readOnly: true
          type: string
        createTime:
          description: Output only. Time at which the `AutomationRun` was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Time at which the automationRun was updated.
          readOnly: true
          type: string
          format: google-datetime
        etag:
          description: >-
            Output only. The weak etag of the `AutomationRun` resource. This
            checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding.
          readOnly: true
          type: string
        serviceAccount:
          description: >-
            Output only. Email address of the user-managed IAM service account
            that performs the operations against Cloud Deploy resources.
          readOnly: true
          type: string
        automationSnapshot:
          description: >-
            Output only. Snapshot of the Automation taken at AutomationRun
            creation time.
          readOnly: true
          $ref: '#/components/schemas/Automation'
        targetId:
          description: >-
            Output only. The ID of the source target that initiates the
            `AutomationRun`. The value of this field is the last segment of a
            target name.
          readOnly: true
          type: string
        state:
          description: Output only. Current state of the `AutomationRun`.
          readOnly: true
          type: string
          enumDescriptions:
            - The `AutomationRun` has an unspecified state.
            - The `AutomationRun` has succeeded.
            - The `AutomationRun` was cancelled.
            - The `AutomationRun` has failed.
            - The `AutomationRun` is in progress.
            - The `AutomationRun` is pending.
            - The `AutomationRun` was aborted.
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - CANCELLED
            - FAILED
            - IN_PROGRESS
            - PENDING
            - ABORTED
        stateDescription:
          description: >-
            Output only. Explains the current state of the `AutomationRun`.
            Present only when an explanation is needed.
          readOnly: true
          type: string
        policyViolation:
          description: >-
            Output only. Contains information about what policies prevented the
            `AutomationRun` from proceeding.
          readOnly: true
          $ref: '#/components/schemas/PolicyViolation'
        expireTime:
          description: >-
            Output only. Time the `AutomationRun` expires. An `AutomationRun`
            expires after 14 days from its creation date.
          readOnly: true
          type: string
          format: google-datetime
        ruleId:
          description: >-
            Output only. The ID of the automation rule that initiated the
            operation.
          readOnly: true
          type: string
        automationId:
          description: Output only. The ID of the automation that initiated the operation.
          readOnly: true
          type: string
        promoteReleaseOperation:
          description: Output only. Promotes a release to a specified 'Target'.
          readOnly: true
          $ref: '#/components/schemas/PromoteReleaseOperation'
        advanceRolloutOperation:
          description: Output only. Advances a rollout to the next phase.
          readOnly: true
          $ref: '#/components/schemas/AdvanceRolloutOperation'
        repairRolloutOperation:
          description: Output only. Repairs a failed 'Rollout'.
          readOnly: true
          $ref: '#/components/schemas/RepairRolloutOperation'
        timedPromoteReleaseOperation:
          description: >-
            Output only. Promotes a release to a specified 'Target' as defined
            in a Timed Promote Release rule.
          readOnly: true
          $ref: '#/components/schemas/TimedPromoteReleaseOperation'
        waitUntilTime:
          description: >-
            Output only. Earliest time the `AutomationRun` will attempt to
            resume. Wait-time is configured by `wait` in automation rule.
          readOnly: true
          type: string
          format: google-datetime
    PolicyViolation:
      id: PolicyViolation
      description: >-
        Returned from an action if one or more policies were violated, and
        therefore the action was prevented. Contains information about what
        policies were violated and why.
      type: object
      properties:
        policyViolationDetails:
          description: Policy violation details.
          type: array
          items:
            $ref: '#/components/schemas/PolicyViolationDetails'
    PolicyViolationDetails:
      id: PolicyViolationDetails
      description: Policy violation details.
      type: object
      properties:
        policy:
          description: >-
            Name of the policy that was violated. Policy resource will be in the
            format of
            `projects/{project}/locations/{location}/policies/{policy}`.
          type: string
        ruleId:
          description: Id of the rule that triggered the policy violation.
          type: string
        failureMessage:
          description: >-
            User readable message about why the request violated a policy. This
            is not intended for machine parsing.
          type: string
    PromoteReleaseOperation:
      id: PromoteReleaseOperation
      description: Contains the information of an automated promote-release operation.
      type: object
      properties:
        targetId:
          description: >-
            Output only. The ID of the target that represents the promotion
            stage to which the release will be promoted. The value of this field
            is the last segment of a target name.
          readOnly: true
          type: string
        wait:
          description: Output only. How long the operation will be paused.
          readOnly: true
          type: string
          format: google-duration
        rollout:
          description: >-
            Output only. The name of the rollout that initiates the
            `AutomationRun`.
          readOnly: true
          type: string
        phase:
          description: >-
            Output only. The starting phase of the rollout created by this
            operation.
          readOnly: true
          type: string
    AdvanceRolloutOperation:
      id: AdvanceRolloutOperation
      description: Contains the information of an automated advance-rollout operation.
      type: object
      properties:
        sourcePhase:
          description: Output only. The phase of a deployment that initiated the operation.
          readOnly: true
          type: string
        wait:
          description: Output only. How long the operation will be paused.
          readOnly: true
          type: string
          format: google-duration
        rollout:
          description: >-
            Output only. The name of the rollout that initiates the
            `AutomationRun`.
          readOnly: true
          type: string
        destinationPhase:
          description: Output only. The phase the rollout will be advanced to.
          readOnly: true
          type: string
    RepairRolloutOperation:
      id: RepairRolloutOperation
      description: Contains the information for an automated `repair rollout` operation.
      type: object
      properties:
        rollout:
          description: >-
            Output only. The name of the rollout that initiates the
            `AutomationRun`.
          readOnly: true
          type: string
        currentRepairPhaseIndex:
          description: >-
            Output only. The index of the current repair action in the repair
            sequence.
          readOnly: true
          type: string
          format: int64
        repairPhases:
          description: >-
            Output only. Records of the repair attempts. Each repair phase may
            have multiple retry attempts or single rollback attempt.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RepairPhase'
        phaseId:
          description: >-
            Output only. The phase ID of the phase that includes the job being
            repaired.
          readOnly: true
          type: string
        jobId:
          description: Output only. The job ID for the Job to repair.
          readOnly: true
          type: string
    RepairPhase:
      id: RepairPhase
      description: >-
        RepairPhase tracks the repair attempts that have been made for each
        `RepairPhaseConfig` specified in the `Automation` resource.
      type: object
      properties:
        retry:
          description: Output only. Records of the retry attempts for retry repair mode.
          readOnly: true
          $ref: '#/components/schemas/RetryPhase'
        rollback:
          description: Output only. Rollback attempt for rollback repair mode .
          readOnly: true
          $ref: '#/components/schemas/RollbackAttempt'
    RetryPhase:
      id: RetryPhase
      description: >-
        RetryPhase contains the retry attempts and the metadata for initiating a
        new attempt.
      type: object
      properties:
        totalAttempts:
          description: Output only. The number of attempts that have been made.
          readOnly: true
          type: string
          format: int64
        backoffMode:
          description: >-
            Output only. The pattern of how the wait time of the retry attempt
            is calculated.
          readOnly: true
          type: string
          enumDescriptions:
            - No WaitMode is specified.
            - Increases the wait time linearly.
            - Increases the wait time exponentially.
          enum:
            - BACKOFF_MODE_UNSPECIFIED
            - BACKOFF_MODE_LINEAR
            - BACKOFF_MODE_EXPONENTIAL
        attempts:
          description: Output only. Detail of a retry action.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RetryAttempt'
    RetryAttempt:
      id: RetryAttempt
      description: >-
        RetryAttempt represents an action of retrying the failed Cloud Deploy
        job.
      type: object
      properties:
        attempt:
          description: Output only. The index of this retry attempt.
          readOnly: true
          type: string
          format: int64
        wait:
          description: Output only. How long the operation will be paused.
          readOnly: true
          type: string
          format: google-duration
        state:
          description: Output only. Valid state of this retry action.
          readOnly: true
          type: string
          enumDescriptions:
            - The `repair` has an unspecified state.
            - The `repair` action has succeeded.
            - The `repair` action was cancelled.
            - The `repair` action has failed.
            - The `repair` action is in progress.
            - The `repair` action is pending.
            - The `repair` action was aborted.
          enum:
            - REPAIR_STATE_UNSPECIFIED
            - REPAIR_STATE_SUCCEEDED
            - REPAIR_STATE_CANCELLED
            - REPAIR_STATE_FAILED
            - REPAIR_STATE_IN_PROGRESS
            - REPAIR_STATE_PENDING
            - REPAIR_STATE_ABORTED
        stateDesc:
          description: Output only. Description of the state of the Retry.
          readOnly: true
          type: string
    RollbackAttempt:
      id: RollbackAttempt
      description: >-
        RollbackAttempt represents an action of rolling back a Cloud Deploy
        'Target'.
      type: object
      properties:
        destinationPhase:
          description: Output only. The phase to which the rollout will be rolled back to.
          readOnly: true
          type: string
        rolloutId:
          description: Output only. ID of the rollback `Rollout` to create.
          readOnly: true
          type: string
        state:
          description: Output only. Valid state of this rollback action.
          readOnly: true
          type: string
          enumDescriptions:
            - The `repair` has an unspecified state.
            - The `repair` action has succeeded.
            - The `repair` action was cancelled.
            - The `repair` action has failed.
            - The `repair` action is in progress.
            - The `repair` action is pending.
            - The `repair` action was aborted.
          enum:
            - REPAIR_STATE_UNSPECIFIED
            - REPAIR_STATE_SUCCEEDED
            - REPAIR_STATE_CANCELLED
            - REPAIR_STATE_FAILED
            - REPAIR_STATE_IN_PROGRESS
            - REPAIR_STATE_PENDING
            - REPAIR_STATE_ABORTED
        stateDesc:
          description: Output only. Description of the state of the Rollback.
          readOnly: true
          type: string
        disableRollbackIfRolloutPending:
          description: >-
            Output only. If active rollout exists on the target, abort this
            rollback.
          readOnly: true
          type: boolean
    TimedPromoteReleaseOperation:
      id: TimedPromoteReleaseOperation
      description: >-
        Contains the information of an automated timed promote-release
        operation.
      type: object
      properties:
        targetId:
          description: >-
            Output only. The ID of the target that represents the promotion
            stage to which the release will be promoted. The value of this field
            is the last segment of a target name.
          readOnly: true
          type: string
        release:
          description: Output only. The name of the release to be promoted.
          readOnly: true
          type: string
        phase:
          description: >-
            Output only. The starting phase of the rollout created by this
            operation.
          readOnly: true
          type: string
    ListAutomationRunsResponse:
      id: ListAutomationRunsResponse
      description: The response object from `ListAutomationRuns`.
      type: object
      properties:
        automationRuns:
          description: The `AutomationRuns` objects.
          type: array
          items:
            $ref: '#/components/schemas/AutomationRun'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    CancelAutomationRunRequest:
      id: CancelAutomationRunRequest
      description: The request object used by `CancelAutomationRun`.
      type: object
      properties: {}
    CancelAutomationRunResponse:
      id: CancelAutomationRunResponse
      description: The response object from `CancelAutomationRun`.
      type: object
      properties: {}
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          type: string
          format: google-fieldmask
    Policy:
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
          format: byte
    Binding:
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
          items:
            type: string
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
    Expr:
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    AuditConfig:
      id: AuditConfig
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      type: object
      properties:
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
    AuditLogConfig:
      id: AuditLogConfig
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
      properties:
        logType:
          description: The log type that this config enables.
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
        exemptedMembers:
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          type: array
          items:
            type: string
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
          items:
            type: string
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have google.longrunning.Operation.error value with a
            google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
    CustomTargetTypeNotificationEvent:
      id: CustomTargetTypeNotificationEvent
      description: >-
        Payload proto for
        "clouddeploy.googleapis.com/customtargettype_notification" Platform Log
        event that describes the failure to send a custom target type status
        change Pub/Sub notification.
      type: object
      properties:
        message:
          description: Debug message for when a notification fails to send.
          type: string
        customTargetTypeUid:
          description: Unique identifier of the `CustomTargetType`.
          type: string
        customTargetType:
          description: The name of the `CustomTargetType`.
          type: string
        type:
          description: Type of this notification, e.g. for a Pub/Sub failure.
          type: string
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - Restriction check failed.
            - Resource deleted.
            - Rollout updated.
            - Deploy Policy evaluation.
            - >-
              Deprecated: This field is never used. Use release_render log type
              instead.
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
    DeliveryPipelineNotificationEvent:
      id: DeliveryPipelineNotificationEvent
      description: >-
        Payload proto for
        "clouddeploy.googleapis.com/deliverypipeline_notification" Platform Log
        event that describes the failure to send delivery pipeline status change
        Pub/Sub notification.
      type: object
      properties:
        message:
          description: Debug message for when a notification fails to send.
          type: string
        pipelineUid:
          description: Unique identifier of the `DeliveryPipeline`.
          type: string
        deliveryPipeline:
          description: The name of the `Delivery Pipeline`.
          type: string
        type:
          description: Type of this notification, e.g. for a Pub/Sub failure.
          type: string
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - Restriction check failed.
            - Resource deleted.
            - Rollout updated.
            - Deploy Policy evaluation.
            - >-
              Deprecated: This field is never used. Use release_render log type
              instead.
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
    DeployPolicyNotificationEvent:
      id: DeployPolicyNotificationEvent
      description: >-
        Payload proto for
        "clouddeploy.googleapis.com/deploypolicy_notification". Platform Log
        event that describes the failure to send a pub/sub notification when
        there is a DeployPolicy status change.
      type: object
      properties:
        message:
          description: >-
            Debug message for when a deploy policy fails to send a pub/sub
            notification.
          type: string
        deployPolicy:
          description: The name of the `DeployPolicy`.
          type: string
        deployPolicyUid:
          description: Unique identifier of the deploy policy.
          type: string
        type:
          description: Type of this notification, e.g. for a Pub/Sub failure.
          type: string
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - Restriction check failed.
            - Resource deleted.
            - Rollout updated.
            - Deploy Policy evaluation.
            - >-
              Deprecated: This field is never used. Use release_render log type
              instead.
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
    DeployPolicyEvaluationEvent:
      id: DeployPolicyEvaluationEvent
      description: >-
        Payload proto for "clouddeploy.googleapis.com/deploypolicy_evaluation"
        Platform Log event that describes the deploy policy evaluation event.
      type: object
      properties:
        message:
          description: Debug message for when a deploy policy event occurs.
          type: string
        ruleType:
          description: Rule type (e.g. Restrict Rollouts).
          type: string
        rule:
          description: Rule id.
          type: string
        pipelineUid:
          description: Unique identifier of the `Delivery Pipeline`.
          type: string
        deliveryPipeline:
          description: The name of the `Delivery Pipeline`.
          type: string
        targetUid:
          description: >-
            Unique identifier of the `Target`. This is an optional field, as a
            `Target` may not always be applicable to a policy.
          type: string
        target:
          description: >-
            The name of the `Target`. This is an optional field, as a `Target`
            may not always be applicable to a policy.
          type: string
        invoker:
          description: What invoked the action (e.g. a user or automation).
          type: string
          enumDescriptions:
            - Unspecified.
            - >-
              The action is user-driven. For example, creating a rollout
              manually via a gcloud create command.
            - Automated action by Cloud Deploy.
          enum:
            - INVOKER_UNSPECIFIED
            - USER
            - DEPLOY_AUTOMATION
        deployPolicy:
          description: The name of the `DeployPolicy`.
          type: string
        deployPolicyUid:
          description: Unique identifier of the `DeployPolicy`.
          type: string
        allowed:
          description: >-
            Whether the request is allowed. Allowed is set as true if: (1) the
            request complies with the policy; or (2) the request doesn't comply
            with the policy but the policy was overridden; or (3) the request
            doesn't comply with the policy but the policy was suspended
          type: boolean
        verdict:
          description: The policy verdict of the request.
          type: string
          enumDescriptions:
            - This should never happen.
            - >-
              Allowed by policy. This enum value is not currently used but may
              be used in the future. Currently logs are only generated when a
              request is denied by policy.
            - Denied by policy.
          enum:
            - POLICY_VERDICT_UNSPECIFIED
            - ALLOWED_BY_POLICY
            - DENIED_BY_POLICY
        overrides:
          description: >-
            Things that could have overridden the policy verdict. Overrides
            together with verdict decide whether the request is allowed.
          type: array
          items:
            type: string
            enumDescriptions:
              - This should never happen.
              - The policy was overridden.
              - The policy was suspended.
            enum:
              - POLICY_VERDICT_OVERRIDE_UNSPECIFIED
              - POLICY_OVERRIDDEN
              - POLICY_SUSPENDED
    ReleaseNotificationEvent:
      id: ReleaseNotificationEvent
      description: >-
        Payload proto for "clouddeploy.googleapis.com/release_notification"
        Platform Log event that describes the failure to send release status
        change Pub/Sub notification.
      type: object
      properties:
        message:
          description: Debug message for when a notification fails to send.
          type: string
        pipelineUid:
          description: Unique identifier of the `DeliveryPipeline`.
          type: string
        releaseUid:
          description: Unique identifier of the `Release`.
          type: string
        release:
          description: The name of the `Release`.
          type: string
        type:
          description: Type of this notification, e.g. for a Pub/Sub failure.
          type: string
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - Restriction check failed.
            - Resource deleted.
            - Rollout updated.
            - Deploy Policy evaluation.
            - >-
              Deprecated: This field is never used. Use release_render log type
              instead.
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
    ReleaseRenderEvent:
      id: ReleaseRenderEvent
      description: >-
        Payload proto for "clouddeploy.googleapis.com/release_render" Platform
        Log event that describes the render status change.
      type: object
      properties:
        message:
          description: >-
            Debug message for when a render transition occurs. Provides further
            details as rendering progresses through render states.
          type: string
        pipelineUid:
          description: Unique identifier of the `DeliveryPipeline`.
          type: string
        release:
          description: >-
            The name of the release. release_uid is not in this log message
            because we write some of these log messages at release creation
            time, before we've generated the uid.
          type: string
        type:
          description: >-
            Type of this notification, e.g. for a release render state change
            event.
          type: string
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - Restriction check failed.
            - Resource deleted.
            - Rollout updated.
            - Deploy Policy evaluation.
            - >-
              Deprecated: This field is never used. Use release_render log type
              instead.
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
        releaseRenderState:
          description: The state of the release render.
          type: string
          enumDescriptions:
            - The render state is unspecified.
            - All rendering operations have completed successfully.
            - >-
              All rendering operations have completed, and one or more have
              failed.
            - Rendering has started and is not complete.
          enum:
            - RENDER_STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - IN_PROGRESS
    RolloutNotificationEvent:
      id: RolloutNotificationEvent
      description: >-
        Payload proto for "clouddeploy.googleapis.com/rollout_notification"
        Platform Log event that describes the failure to send rollout status
        change Pub/Sub notification.
      type: object
      properties:
        message:
          description: Debug message for when a notification fails to send.
          type: string
        pipelineUid:
          description: Unique identifier of the `DeliveryPipeline`.
          type: string
        releaseUid:
          description: Unique identifier of the `Release`.
          type: string
        release:
          description: The name of the `Release`.
          type: string
        rolloutUid:
          description: Unique identifier of the `Rollout`.
          type: string
        rollout:
          description: The name of the `Rollout`.
          type: string
        targetId:
          description: ID of the `Target` that the rollout is deployed to.
          type: string
        type:
          description: Type of this notification, e.g. for a Pub/Sub failure.
          type: string
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - Restriction check failed.
            - Resource deleted.
            - Rollout updated.
            - Deploy Policy evaluation.
            - >-
              Deprecated: This field is never used. Use release_render log type
              instead.
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
    RolloutUpdateEvent:
      id: RolloutUpdateEvent
      description: >-
        Payload proto for "clouddeploy.googleapis.com/rollout_update" Platform
        Log event that describes the rollout update event.
      type: object
      properties:
        message:
          description: Debug message for when a rollout update event occurs.
          type: string
        pipelineUid:
          description: Unique identifier of the pipeline.
          type: string
        releaseUid:
          description: Unique identifier of the release.
          type: string
        release:
          description: The name of the `Release`.
          type: string
        rollout:
          description: >-
            The name of the rollout. rollout_uid is not in this log message
            because we write some of these log messages at rollout creation
            time, before we've generated the uid.
          type: string
        targetId:
          description: ID of the target.
          type: string
        type:
          description: Type of this notification, e.g. for a rollout update event.
          type: string
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - Restriction check failed.
            - Resource deleted.
            - Rollout updated.
            - Deploy Policy evaluation.
            - >-
              Deprecated: This field is never used. Use release_render log type
              instead.
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
        rolloutUpdateType:
          description: The type of the rollout update.
          type: string
          enumDescriptions:
            - Rollout update type unspecified.
            - rollout state updated to pending.
            - Rollout state updated to pending release.
            - Rollout state updated to in progress.
            - Rollout state updated to cancelling.
            - Rollout state updated to cancelled.
            - Rollout state updated to halted.
            - Rollout state updated to succeeded.
            - Rollout state updated to failed.
            - Rollout requires approval.
            - Rollout has been approved.
            - Rollout has been rejected.
            - Rollout requires advance to the next phase.
            - Rollout has been advanced.
          enum:
            - ROLLOUT_UPDATE_TYPE_UNSPECIFIED
            - PENDING
            - PENDING_RELEASE
            - IN_PROGRESS
            - CANCELLING
            - CANCELLED
            - HALTED
            - SUCCEEDED
            - FAILED
            - APPROVAL_REQUIRED
            - APPROVED
            - REJECTED
            - ADVANCE_REQUIRED
            - ADVANCED
    TargetNotificationEvent:
      id: TargetNotificationEvent
      description: >-
        Payload proto for "clouddeploy.googleapis.com/target_notification"
        Platform Log event that describes the failure to send target status
        change Pub/Sub notification.
      type: object
      properties:
        message:
          description: Debug message for when a notification fails to send.
          type: string
        target:
          description: The name of the `Target`.
          type: string
        type:
          description: Type of this notification, e.g. for a Pub/Sub failure.
          type: string
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - Restriction check failed.
            - Resource deleted.
            - Rollout updated.
            - Deploy Policy evaluation.
            - >-
              Deprecated: This field is never used. Use release_render log type
              instead.
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
    JobRunNotificationEvent:
      id: JobRunNotificationEvent
      description: >-
        Payload proto for "clouddeploy.googleapis.com/jobrun_notification"
        Platform Log event that describes the failure to send JobRun resource
        update Pub/Sub notification.
      type: object
      properties:
        message:
          description: Debug message for when a notification fails to send.
          type: string
        jobRun:
          description: The name of the `JobRun`.
          type: string
        pipelineUid:
          description: Unique identifier of the `DeliveryPipeline`.
          type: string
        releaseUid:
          description: Unique identifier of the `Release`.
          type: string
        release:
          description: The name of the `Release`.
          type: string
        rolloutUid:
          description: Unique identifier of the `Rollout`.
          type: string
        rollout:
          description: The name of the `Rollout`.
          type: string
        targetId:
          description: ID of the `Target`.
          type: string
        type:
          description: Type of this notification, e.g. for a Pub/Sub failure.
          type: string
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - Restriction check failed.
            - Resource deleted.
            - Rollout updated.
            - Deploy Policy evaluation.
            - >-
              Deprecated: This field is never used. Use release_render log type
              instead.
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
    AutomationEvent:
      id: AutomationEvent
      description: >-
        Payload proto for "clouddeploy.googleapis.com/automation" Platform Log
        event that describes the Automation related events.
      type: object
      properties:
        message:
          description: >-
            Debug message for when there is an update on the AutomationRun.
            Provides further details about the resource creation or state
            change.
          type: string
        automation:
          description: The name of the `AutomationRun`.
          type: string
        pipelineUid:
          description: Unique identifier of the `DeliveryPipeline`.
          type: string
        type:
          description: Type of this notification, e.g. for a Pub/Sub failure.
          type: string
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - Restriction check failed.
            - Resource deleted.
            - Rollout updated.
            - Deploy Policy evaluation.
            - >-
              Deprecated: This field is never used. Use release_render log type
              instead.
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
    AutomationRunEvent:
      id: AutomationRunEvent
      description: >-
        Payload proto for "clouddeploy.googleapis.com/automation_run" Platform
        Log event that describes the AutomationRun related events.
      type: object
      properties:
        message:
          description: >-
            Debug message for when there is an update on the AutomationRun.
            Provides further details about the resource creation or state
            change.
          type: string
        automationRun:
          description: The name of the `AutomationRun`.
          type: string
        pipelineUid:
          description: Unique identifier of the `DeliveryPipeline`.
          type: string
        automationId:
          description: Identifier of the `Automation`.
          type: string
        ruleId:
          description: Identifier of the `Automation` rule.
          type: string
        destinationTargetId:
          description: ID of the `Target` to which the `AutomationRun` is created.
          type: string
        type:
          description: Type of this notification, e.g. for a Pub/Sub failure.
          type: string
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - Restriction check failed.
            - Resource deleted.
            - Rollout updated.
            - Deploy Policy evaluation.
            - >-
              Deprecated: This field is never used. Use release_render log type
              instead.
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    config:
      id: google.clouddeploy.config
      name: config
      title: Config
      methods:
        get_config:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1config/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/config/methods/get_config'
        insert: []
        update: []
        replace: []
        delete: []
    locations:
      id: google.clouddeploy.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.clouddeploy.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    delivery_pipelines:
      id: google.clouddeploy.delivery_pipelines
      name: delivery_pipelines
      title: Delivery_pipelines
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.deliveryPipelines
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rollback_target:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}:rollbackTarget/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/delivery_pipelines/methods/get'
          - $ref: '#/components/x-stackQL-resources/delivery_pipelines/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/delivery_pipelines/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/delivery_pipelines/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/delivery_pipelines/methods/delete'
    delivery_pipelines_iam_policies:
      id: google.clouddeploy.delivery_pipelines_iam_policies
      name: delivery_pipelines_iam_policies
      title: Delivery_pipelines_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/delivery_pipelines_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/delivery_pipelines_iam_policies/methods/set_iam_policy
        delete: []
    releases:
      id: google.clouddeploy.releases
      name: releases
      title: Releases
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.releases
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        abandon:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}:abandon/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/releases/methods/get'
          - $ref: '#/components/x-stackQL-resources/releases/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/releases/methods/create'
        update: []
        replace: []
        delete: []
    rollouts:
      id: google.clouddeploy.rollouts
      name: rollouts
      title: Rollouts
      methods:
        approve:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}:approve/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        advance:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}:advance/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.rollouts
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ignore_job:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}:ignoreJob/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        retry_job:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}:retryJob/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/rollouts/methods/get'
          - $ref: '#/components/x-stackQL-resources/rollouts/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/rollouts/methods/create'
        update: []
        replace: []
        delete: []
    job_runs:
      id: google.clouddeploy.job_runs
      name: job_runs
      title: Job_runs
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}~1jobRuns/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobRuns
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}~1jobRuns~1{jobRunsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        terminate:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1releases~1{releasesId}~1rollouts~1{rolloutsId}~1jobRuns~1{jobRunsId}:terminate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/job_runs/methods/get'
          - $ref: '#/components/x-stackQL-resources/job_runs/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    automations:
      id: google.clouddeploy.automations
      name: automations
      title: Automations
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1automations/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1automations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.automations
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1automations~1{automationsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1automations~1{automationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1automations~1{automationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/automations/methods/get'
          - $ref: '#/components/x-stackQL-resources/automations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/automations/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/automations/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/automations/methods/delete'
    automation_runs:
      id: google.clouddeploy.automation_runs
      name: automation_runs
      title: Automation_runs
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1automationRuns~1{automationRunsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1automationRuns/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.automationRuns
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deliveryPipelines~1{deliveryPipelinesId}~1automationRuns~1{automationRunsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/automation_runs/methods/get'
          - $ref: '#/components/x-stackQL-resources/automation_runs/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    targets:
      id: google.clouddeploy.targets
      name: targets
      title: Targets
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.targets
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/targets/methods/get'
          - $ref: '#/components/x-stackQL-resources/targets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/targets/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/targets/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/targets/methods/delete'
    targets_iam_policies:
      id: google.clouddeploy.targets_iam_policies
      name: targets_iam_policies
      title: Targets_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targets~1{targetsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/targets_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/targets_iam_policies/methods/set_iam_policy
        delete: []
    custom_target_types:
      id: google.clouddeploy.custom_target_types
      name: custom_target_types
      title: Custom_target_types
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customTargetTypes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.customTargetTypes
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customTargetTypes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customTargetTypes~1{customTargetTypesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customTargetTypes~1{customTargetTypesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customTargetTypes~1{customTargetTypesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/custom_target_types/methods/get'
          - $ref: '#/components/x-stackQL-resources/custom_target_types/methods/list'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/custom_target_types/methods/create
        update:
          - $ref: '#/components/x-stackQL-resources/custom_target_types/methods/patch'
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/custom_target_types/methods/delete
    custom_target_types_iam_policies:
      id: google.clouddeploy.custom_target_types_iam_policies
      name: custom_target_types_iam_policies
      title: Custom_target_types_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customTargetTypes~1{customTargetTypesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customTargetTypes~1{customTargetTypesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/custom_target_types_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/custom_target_types_iam_policies/methods/set_iam_policy
        delete: []
    deploy_policies:
      id: google.clouddeploy.deploy_policies
      name: deploy_policies
      title: Deploy_policies
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deployPolicies/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deployPolicies/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.deployPolicies
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deployPolicies~1{deployPoliciesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deployPolicies~1{deployPoliciesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deployPolicies~1{deployPoliciesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deploy_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/deploy_policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/deploy_policies/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/deploy_policies/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/deploy_policies/methods/delete'
    deploy_policies_iam_policies:
      id: google.clouddeploy.deploy_policies_iam_policies
      name: deploy_policies_iam_policies
      title: Deploy_policies_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deployPolicies~1{deployPoliciesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deployPolicies~1{deployPoliciesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/deploy_policies_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/deploy_policies_iam_policies/methods/set_iam_policy
        delete: []
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/config:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Gets the configuration for a location.
      operationId: clouddeploy.projects.locations.getConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: clouddeploy.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: extraLocationTypes
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: clouddeploy.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: clouddeploy.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: clouddeploy.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: clouddeploy.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        `1`, corresponding to `Code.CANCELLED`.
      operationId: clouddeploy.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines:
    parameters: *ref_1
    get:
      description: Lists DeliveryPipelines in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeliveryPipelinesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new DeliveryPipeline in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryPipeline'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: deliveryPipelineId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single DeliveryPipeline.
      operationId: clouddeploy.projects.locations.deliveryPipelines.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryPipeline'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single DeliveryPipeline.
      operationId: clouddeploy.projects.locations.deliveryPipelines.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryPipeline'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: Deletes a single DeliveryPipeline.
      operationId: clouddeploy.projects.locations.deliveryPipelines.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:rollbackTarget:
    parameters: *ref_1
    post:
      description: Creates a `Rollout` to roll back the specified target.
      operationId: clouddeploy.projects.locations.deliveryPipelines.rollbackTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollbackTargetRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollbackTargetResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: clouddeploy.projects.locations.deliveryPipelines.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: clouddeploy.projects.locations.deliveryPipelines.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: clouddeploy.projects.locations.deliveryPipelines.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases:
    parameters: *ref_1
    get:
      description: Lists Releases in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReleasesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new Release in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Release'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: releaseId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: overrideDeployPolicy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Release.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}:abandon:
    parameters: *ref_1
    post:
      description: Abandons a Release in the Delivery Pipeline.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.abandon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbandonReleaseRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbandonReleaseResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:approve:
    parameters: *ref_1
    post:
      description: Approves a Rollout.
      operationId: >-
        clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.approve
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveRolloutRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApproveRolloutResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:advance:
    parameters: *ref_1
    post:
      description: Advances a Rollout in a given project and location.
      operationId: >-
        clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.advance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvanceRolloutRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvanceRolloutResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:cancel:
    parameters: *ref_1
    post:
      description: Cancels a Rollout in a given project and location.
      operationId: >-
        clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelRolloutRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelRolloutResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts:
    parameters: *ref_1
    get:
      description: Lists Rollouts in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRolloutsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new Rollout in a given project and location.
      operationId: >-
        clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rollout'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: query
          name: rolloutId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: overrideDeployPolicy
          schema:
            type: string
        - in: query
          name: startingPhaseId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Rollout.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rollout'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:ignoreJob:
    parameters: *ref_1
    post:
      description: Ignores the specified Job in a Rollout.
      operationId: >-
        clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.ignoreJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IgnoreJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IgnoreJobResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:retryJob:
    parameters: *ref_1
    post:
      description: Retries the specified Job in a Rollout.
      operationId: >-
        clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.retryJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetryJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryJobResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}/jobRuns:
    parameters: *ref_1
    get:
      description: Lists JobRuns in a given project and location.
      operationId: >-
        clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobRunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}/jobRuns/{jobRunsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single JobRun.
      operationId: >-
        clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
        - in: path
          name: jobRunsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}/jobRuns/{jobRunsId}:terminate:
    parameters: *ref_1
    post:
      description: Terminates a Job Run in a given project and location.
      operationId: >-
        clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.terminate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminateJobRunRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminateJobRunResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
        - in: path
          name: jobRunsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/automations:
    parameters: *ref_1
    post:
      description: Creates a new Automation in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.automations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Automation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: automationId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists Automations in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.automations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAutomationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/automations/{automationsId}:
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single Automation resource.
      operationId: clouddeploy.projects.locations.deliveryPipelines.automations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Automation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: automationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: Deletes a single Automation resource.
      operationId: clouddeploy.projects.locations.deliveryPipelines.automations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: automationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
    get:
      description: Gets details of a single Automation.
      operationId: clouddeploy.projects.locations.deliveryPipelines.automations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Automation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: automationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/automationRuns/{automationRunsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single AutomationRun.
      operationId: clouddeploy.projects.locations.deliveryPipelines.automationRuns.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationRun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: automationRunsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/automationRuns:
    parameters: *ref_1
    get:
      description: Lists AutomationRuns in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.automationRuns.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAutomationRunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/automationRuns/{automationRunsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Cancels an AutomationRun. The `state` of the `AutomationRun` after
        cancelling is `CANCELLED`. `CancelAutomationRun` can be called on
        AutomationRun in the state `IN_PROGRESS` and `PENDING`; AutomationRun in
        a different state returns an `FAILED_PRECONDITION` error.
      operationId: clouddeploy.projects.locations.deliveryPipelines.automationRuns.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelAutomationRunRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelAutomationRunResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: automationRunsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/targets:
    parameters: *ref_1
    get:
      description: Lists Targets in a given project and location.
      operationId: clouddeploy.projects.locations.targets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new Target in a given project and location.
      operationId: clouddeploy.projects.locations.targets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: targetId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Target.
      operationId: clouddeploy.projects.locations.targets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single Target.
      operationId: clouddeploy.projects.locations.targets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: Deletes a single Target.
      operationId: clouddeploy.projects.locations.targets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: clouddeploy.projects.locations.targets.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: clouddeploy.projects.locations.targets.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: clouddeploy.projects.locations.targets.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/customTargetTypes:
    parameters: *ref_1
    get:
      description: Lists CustomTargetTypes in a given project and location.
      operationId: clouddeploy.projects.locations.customTargetTypes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomTargetTypesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new CustomTargetType in a given project and location.
      operationId: clouddeploy.projects.locations.customTargetTypes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTargetType'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: customTargetTypeId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/customTargetTypes/{customTargetTypesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single CustomTargetType.
      operationId: clouddeploy.projects.locations.customTargetTypes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTargetType'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customTargetTypesId
          required: true
          schema:
            type: string
    patch:
      description: Updates a single CustomTargetType.
      operationId: clouddeploy.projects.locations.customTargetTypes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTargetType'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customTargetTypesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: Deletes a single CustomTargetType.
      operationId: clouddeploy.projects.locations.customTargetTypes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customTargetTypesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/customTargetTypes/{customTargetTypesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: clouddeploy.projects.locations.customTargetTypes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customTargetTypesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/customTargetTypes/{customTargetTypesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: clouddeploy.projects.locations.customTargetTypes.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customTargetTypesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/deployPolicies:
    parameters: *ref_1
    post:
      description: Creates a new DeployPolicy in a given project and location.
      operationId: clouddeploy.projects.locations.deployPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: deployPolicyId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists DeployPolicies in a given project and location.
      operationId: clouddeploy.projects.locations.deployPolicies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeployPoliciesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deployPolicies/{deployPoliciesId}:
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single DeployPolicy.
      operationId: clouddeploy.projects.locations.deployPolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deployPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: Deletes a single DeployPolicy.
      operationId: clouddeploy.projects.locations.deployPolicies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deployPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
    get:
      description: Gets details of a single DeployPolicy.
      operationId: clouddeploy.projects.locations.deployPolicies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deployPoliciesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deployPolicies/{deployPoliciesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: clouddeploy.projects.locations.deployPolicies.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deployPoliciesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deployPolicies/{deployPoliciesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: clouddeploy.projects.locations.deployPolicies.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deployPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
