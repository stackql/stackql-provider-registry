openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: reCAPTCHA Enterprise API
  description: Help protect your website from fraudulent activity, spam, and abuse without creating friction.
  version: v1
  x-discovery-doc-revision: '20230102'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://cloud.google.com/recaptcha-enterprise/
servers:
  - url: https://recaptchaenterprise.googleapis.com
components:
  schemas:
    GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment:
      type: object
      description: Account defender risk assessment.
      id: GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment
      properties:
        labels:
          type: array
          items:
            enumDescriptions:
              - Default unspecified type.
              - The request matches a known good profile for the user.
              - The request is potentially a suspicious login event and must be further verified either through multi-factor authentication or another system.
              - The request matched a profile that previously had suspicious account creation behavior. This can mean that this is a fake account.
              - The account in the request has a high number of related accounts. It does not necessarily imply that the account is bad but can require further investigation.
            enum:
              - ACCOUNT_DEFENDER_LABEL_UNSPECIFIED
              - PROFILE_MATCH
              - SUSPICIOUS_LOGIN_ACTIVITY
              - SUSPICIOUS_ACCOUNT_CREATION
              - RELATED_ACCOUNTS_NUMBER_HIGH
            type: string
          description: Labels for this request.
    GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo:
      type: object
      description: Information about account verification, used for identity verification.
      id: GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo
      properties:
        username:
          type: string
          description: Username of the account that is being verified. Deprecated. Customers should now provide the hashed account ID field in Event.
        latestVerificationResult:
          readOnly: true
          enum:
            - RESULT_UNSPECIFIED
            - SUCCESS_USER_VERIFIED
            - ERROR_USER_NOT_VERIFIED
            - ERROR_SITE_ONBOARDING_INCOMPLETE
            - ERROR_RECIPIENT_NOT_ALLOWED
            - ERROR_RECIPIENT_ABUSE_LIMIT_EXHAUSTED
            - ERROR_CRITICAL_INTERNAL
            - ERROR_CUSTOMER_QUOTA_EXHAUSTED
            - ERROR_VERIFICATION_BYPASSED
            - ERROR_VERDICT_MISMATCH
          type: string
          description: Output only. Result of the latest account verification challenge.
          enumDescriptions:
            - No information about the latest account verification.
            - The user was successfully verified. This means the account verification challenge was successfully completed.
            - The user failed the verification challenge.
            - The site is not properly onboarded to use the account verification feature.
            - The recipient is not allowed for account verification. This can occur during integration but should not occur in production.
            - The recipient has already been sent too many verification codes in a short amount of time.
            - The verification flow could not be completed due to a critical internal error.
            - The client has exceeded their two factor request quota for this period of time.
            - The request cannot be processed at the time because of an incident. This bypass can be restricted to a problematic destination email domain, a customer, or could affect the entire service.
            - The request parameters do not match with the token provided and cannot be processed.
        endpoints:
          type: array
          description: Endpoints that can be used for identity verification.
          items:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1EndpointVerificationInfo'
        languageCode:
          description: Language code preference for the verification message, set as a IETF BCP 47 language code.
          type: string
    GoogleCloudRecaptchaenterpriseV1ChallengeMetrics:
      id: GoogleCloudRecaptchaenterpriseV1ChallengeMetrics
      properties:
        passedCount:
          type: string
          format: int64
          description: Count of nocaptchas (successful verification without a challenge) plus submitted challenge solutions that were correct and resulted in verification.
        failedCount:
          type: string
          description: Count of submitted challenge solutions that were incorrect or otherwise deemed suspicious such that a subsequent challenge was triggered.
          format: int64
        nocaptchaCount:
          description: Count of nocaptchas (successful verification without a challenge) issued.
          type: string
          format: int64
        pageloadCount:
          type: string
          format: int64
          description: Count of reCAPTCHA checkboxes or badges rendered. This is mostly equivalent to a count of pageloads for pages that include reCAPTCHA.
      description: Metrics related to challenges.
      type: object
    GoogleCloudRecaptchaenterpriseV1ListKeysResponse:
      id: GoogleCloudRecaptchaenterpriseV1ListKeysResponse
      type: object
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results. It is set to empty if no keys remain in results.
          type: string
        keys:
          description: Key details.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      description: Response to request to list keys in a project.
    GoogleCloudRecaptchaenterpriseV1AndroidKeySettings:
      type: object
      id: GoogleCloudRecaptchaenterpriseV1AndroidKeySettings
      description: Settings specific to keys that can be used by Android apps.
      properties:
        allowedPackageNames:
          description: 'Android package names of apps allowed to use the key. Example: ''com.companyname.appname'''
          items:
            type: string
          type: array
        allowAllPackageNames:
          type: boolean
          description: If set to true, allowed_package_names are not enforced.
    GoogleCloudRecaptchaenterpriseV1ScoreDistribution:
      id: GoogleCloudRecaptchaenterpriseV1ScoreDistribution
      properties:
        scoreBuckets:
          type: object
          additionalProperties:
            format: int64
            type: string
          description: Map key is score value multiplied by 100. The scores are discrete values between [0, 1]. The maximum number of buckets is on order of a few dozen, but typically much lower (ie. 10).
      type: object
      description: Score distribution.
    GoogleCloudRecaptchaenterpriseV1WebKeySettings:
      description: Settings specific to keys that can be used by websites.
      type: object
      id: GoogleCloudRecaptchaenterpriseV1WebKeySettings
      properties:
        allowAllDomains:
          type: boolean
          description: If set to true, it means allowed_domains will not be enforced.
        challengeSecurityPreference:
          type: string
          description: Settings for the frequency and difficulty at which this key triggers captcha challenges. This should only be specified for IntegrationTypes CHECKBOX and INVISIBLE.
          enum:
            - CHALLENGE_SECURITY_PREFERENCE_UNSPECIFIED
            - USABILITY
            - BALANCE
            - SECURITY
          enumDescriptions:
            - Default type that indicates this enum hasn't been specified.
            - Key tends to show fewer and easier challenges.
            - Key tends to show balanced (in amount and difficulty) challenges.
            - Key tends to show more and harder challenges.
        allowAmpTraffic:
          description: If set to true, the key can be used on AMP (Accelerated Mobile Pages) websites. This is supported only for the SCORE integration type.
          type: boolean
        integrationType:
          type: string
          enum:
            - INTEGRATION_TYPE_UNSPECIFIED
            - SCORE
            - CHECKBOX
            - INVISIBLE
          enumDescriptions:
            - Default type that indicates this enum hasn't been specified. This is not a valid IntegrationType, one of the other types must be specified instead.
            - Only used to produce scores. It doesn't display the "I'm not a robot" checkbox and never shows captcha challenges.
            - Displays the "I'm not a robot" checkbox and may show captcha challenges after it is checked.
            - Doesn't display the "I'm not a robot" checkbox, but may show captcha challenges after risk analysis.
          description: Required. Describes how this key is integrated with the website.
        allowedDomains:
          description: 'Domains or subdomains of websites allowed to use the key. All subdomains of an allowed domain are automatically allowed. A valid domain requires a host and must not include any path, port, query or fragment. Examples: ''example.com'' or ''subdomain.example.com'''
          items:
            type: string
          type: array
    GoogleCloudRecaptchaenterpriseV1Key:
      type: object
      description: A key used to identify and configure applications (web and/or mobile) that use reCAPTCHA Enterprise.
      id: GoogleCloudRecaptchaenterpriseV1Key
      properties:
        labels:
          type: object
          description: See Creating and managing labels.
          additionalProperties:
            type: string
        displayName:
          type: string
          description: Human-readable display name of this key. Modifiable by user.
        name:
          type: string
          description: The resource name for the Key in the format "projects/{project}/keys/{key}".
        webSettings:
          description: Settings for keys that can be used by websites.
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1WebKeySettings'
        wafSettings:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1WafSettings'
          description: Settings for WAF
        testingOptions:
          description: Options for user acceptance testing.
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1TestingOptions'
        iosSettings:
          description: Settings for keys that can be used by iOS apps.
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1IOSKeySettings'
        createTime:
          format: google-datetime
          description: The timestamp corresponding to the creation of this Key.
          type: string
        androidSettings:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1AndroidKeySettings'
          description: Settings for keys that can be used by Android apps.
    GoogleCloudRecaptchaenterpriseV1RetrieveLegacySecretKeyResponse:
      description: Secret key is used only in legacy reCAPTCHA. It must be used in a 3rd party integration with legacy reCAPTCHA.
      type: object
      id: GoogleCloudRecaptchaenterpriseV1RetrieveLegacySecretKeyResponse
      properties:
        legacySecretKey:
          type: string
          description: The secret key (also known as shared secret) authorizes communication between your application backend and the reCAPTCHA Enterprise server to create an assessment. The secret key needs to be kept safe for security purposes.
    GoogleCloudRecaptchaenterpriseV1Assessment:
      description: A recaptcha assessment resource.
      id: GoogleCloudRecaptchaenterpriseV1Assessment
      type: object
      properties:
        accountVerification:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo'
          description: Account verification information for identity verification. The assessment event must include a token and site key to use this feature.
        tokenProperties:
          description: Output only. Properties of the provided event token.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1TokenProperties'
        event:
          description: The event being assessed.
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Event'
        accountDefenderAssessment:
          description: Assessment returned by account defender when a hashed_account_id is provided.
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment'
        riskAnalysis:
          readOnly: true
          description: Output only. The risk analysis result for the event being assessed.
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1RiskAnalysis'
        name:
          readOnly: true
          description: Output only. The resource name for the Assessment in the format "projects/{project}/assessments/{assessment}".
          type: string
        privatePasswordLeakVerification:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification'
          description: The private password leak verification field contains the parameters that are used to to check for leaks privately without sharing user credentials.
    GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse:
      id: GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse
      type: object
      properties: {}
      description: Empty response for AnnotateAssessment.
    GoogleCloudRecaptchaenterpriseV1RelatedAccountGroup:
      type: object
      properties:
        name:
          type: string
          description: Required. The resource name for the related account group in the format `projects/{project}/relatedaccountgroups/{related_account_group}`.
      id: GoogleCloudRecaptchaenterpriseV1RelatedAccountGroup
      description: A group of related accounts.
    GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest:
      properties:
        skipBillingCheck:
          type: boolean
          description: Optional. If true, skips the billing check. A reCAPTCHA Enterprise key or migrated key behaves differently than a reCAPTCHA (non-Enterprise version) key when you reach a quota limit (see https://cloud.google.com/recaptcha-enterprise/quotas#quota_limit). To avoid any disruption of your usage, we check that a billing account is present. If your usage of reCAPTCHA is under the free quota, you can safely skip the billing check and proceed with the migration. See https://cloud.google.com/recaptcha-enterprise/docs/billing-information.
      description: The migrate key request message.
      type: object
      id: GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest
    GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification:
      id: GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification
      properties:
        reencryptedUserCredentialsHash:
          type: string
          description: Output only. Corresponds to the re-encryption of the `encrypted_user_credentials_hash` field. It is used to match potential password leaks within `encrypted_leak_match_prefixes`.
          format: byte
          readOnly: true
        encryptedUserCredentialsHash:
          format: byte
          description: Optional. Encrypted Scrypt hash of the canonicalized username+password. It is re-encrypted by the server and returned through `reencrypted_user_credentials_hash`.
          type: string
        encryptedLeakMatchPrefixes:
          items:
            type: string
            format: byte
          description: Output only. List of prefixes of the encrypted potential password leaks that matched the given parameters. They must be compared with the client-side decryption prefix of `reencrypted_user_credentials_hash`
          type: array
          readOnly: true
        lookupHashPrefix:
          format: byte
          type: string
          description: Optional. Exactly 26-bit prefix of the SHA-256 hash of the canonicalized username. It is used to look up password leaks associated with that hash prefix.
      description: Private password leak verification info.
      type: object
    GoogleCloudRecaptchaenterpriseV1Event:
      id: GoogleCloudRecaptchaenterpriseV1Event
      type: object
      properties:
        siteKey:
          description: Optional. The site key that was used to invoke reCAPTCHA on your site and generate the token.
          type: string
        expectedAction:
          description: Optional. The expected action for this type of event. This should be the same action provided at token generation time on client-side platforms already integrated with recaptcha enterprise.
          type: string
        userIpAddress:
          type: string
          description: Optional. The IP address in the request from the user's device related to this event.
        hashedAccountId:
          description: Optional. Unique stable hashed user identifier for the request. The identifier must be hashed using hmac-sha256 with stable secret.
          type: string
          format: byte
        userAgent:
          type: string
          description: Optional. The user agent present in the request from the user's device related to this event.
        token:
          type: string
          description: Optional. The user response token provided by the reCAPTCHA client-side integration on your site.
    GoogleProtobufEmpty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
      id: GoogleProtobufEmpty
      properties: {}
    GoogleCloudRecaptchaenterpriseV1IOSKeySettings:
      id: GoogleCloudRecaptchaenterpriseV1IOSKeySettings
      description: Settings specific to keys that can be used by iOS apps.
      properties:
        allowedBundleIds:
          type: array
          description: 'iOS bundle ids of apps allowed to use the key. Example: ''com.companyname.productname.appname'''
          items:
            type: string
        allowAllBundleIds:
          type: boolean
          description: If set to true, allowed_bundle_ids are not enforced.
      type: object
    GoogleCloudRecaptchaenterpriseV1WafSettings:
      type: object
      id: GoogleCloudRecaptchaenterpriseV1WafSettings
      properties:
        wafFeature:
          type: string
          description: Required. The WAF feature for which this key is enabled.
          enum:
            - WAF_FEATURE_UNSPECIFIED
            - CHALLENGE_PAGE
            - SESSION_TOKEN
            - ACTION_TOKEN
          enumDescriptions:
            - Undefined feature.
            - Redirects suspicious traffic to reCAPTCHA.
            - Use reCAPTCHA session-tokens to protect the whole user session on the site's domain.
            - Use reCAPTCHA action-tokens to protect user actions.
        wafService:
          enum:
            - WAF_SERVICE_UNSPECIFIED
            - CA
          description: Required. The WAF service that uses this key.
          type: string
          enumDescriptions:
            - Undefined WAF
            - Cloud Armor
      description: Settings specific to keys that can be used for WAF (Web Application Firewall).
    GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse:
      description: The response to a `ListRelatedAccountGroups` call.
      type: object
      id: GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        relatedAccountGroups:
          items:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1RelatedAccountGroup'
          description: The groups of related accounts listed by the query.
          type: array
    GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupMembershipsResponse:
      properties:
        relatedAccountGroupMemberships:
          items:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership'
          description: The memberships listed by the query.
          type: array
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
      description: The response to a `ListRelatedAccountGroupMemberships` call.
      type: object
      id: GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupMembershipsResponse
    GoogleCloudRecaptchaenterpriseV1Metrics:
      id: GoogleCloudRecaptchaenterpriseV1Metrics
      description: Metrics for a single Key.
      properties:
        name:
          type: string
          description: Output only. The name of the metrics, in the format "projects/{project}/keys/{key}/metrics".
          readOnly: true
        challengeMetrics:
          description: Metrics will be continuous and in order by dates, and in the granularity of day. Only challenge-based keys (CHECKBOX, INVISIBLE), will have challenge-based data.
          items:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1ChallengeMetrics'
          type: array
        scoreMetrics:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1ScoreMetrics'
          description: Metrics will be continuous and in order by dates, and in the granularity of day. All Key types should have score-based data.
        startTime:
          type: string
          format: google-datetime
          description: Inclusive start time aligned to a day (UTC).
      type: object
    GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership:
      properties:
        name:
          type: string
          description: Required. The resource name for this membership in the format `projects/{project}/relatedaccountgroups/{relatedaccountgroup}/memberships/{membership}`.
        hashedAccountId:
          type: string
          format: byte
          description: The unique stable hashed user identifier of the member. The identifier corresponds to a `hashed_account_id` provided in a previous `CreateAssessment` or `AnnotateAssessment` call.
      description: A membership in a group of related accounts.
      id: GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership
      type: object
    GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsResponse:
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        relatedAccountGroupMemberships:
          description: The queried memberships.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership'
      id: GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsResponse
      description: The response to a `SearchRelatedAccountGroupMemberships` call.
      type: object
    GoogleCloudRecaptchaenterpriseV1TestingOptions:
      id: GoogleCloudRecaptchaenterpriseV1TestingOptions
      type: object
      properties:
        testingChallenge:
          description: For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this site will return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE.
          enum:
            - TESTING_CHALLENGE_UNSPECIFIED
            - NOCAPTCHA
            - UNSOLVABLE_CHALLENGE
          enumDescriptions:
            - Perform the normal risk analysis and return either nocaptcha or a challenge depending on risk and trust factors.
            - Challenge requests for this key always return a nocaptcha, which does not require a solution.
            - Challenge requests for this key always return an unsolvable challenge.
          type: string
        testingScore:
          type: number
          description: All assessments for this Key will return this score. Must be between 0 (likely not legitimate) and 1 (likely legitimate) inclusive.
          format: float
      description: Options for user acceptance testing.
    GoogleCloudRecaptchaenterpriseV1RiskAnalysis:
      id: GoogleCloudRecaptchaenterpriseV1RiskAnalysis
      type: object
      properties:
        reasons:
          description: Reasons contributing to the risk analysis verdict.
          items:
            type: string
            enum:
              - CLASSIFICATION_REASON_UNSPECIFIED
              - AUTOMATION
              - UNEXPECTED_ENVIRONMENT
              - TOO_MUCH_TRAFFIC
              - UNEXPECTED_USAGE_PATTERNS
              - LOW_CONFIDENCE_SCORE
            enumDescriptions:
              - Default unspecified type.
              - Interactions matched the behavior of an automated agent.
              - The event originated from an illegitimate environment.
              - Traffic volume from the event source is higher than normal.
              - Interactions with the site were significantly different than expected patterns.
              - Too little traffic has been received from this site thus far to generate quality risk analysis.
          type: array
        score:
          description: Legitimate event score from 0.0 to 1.0. (1.0 means very likely legitimate traffic while 0.0 means very likely non-legitimate traffic).
          format: float
          type: number
      description: Risk analysis result for an event.
    GoogleCloudRecaptchaenterpriseV1ScoreMetrics:
      properties:
        overallMetrics:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1ScoreDistribution'
          description: Aggregated score metrics for all traffic.
        actionMetrics:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1ScoreDistribution'
          description: Action-based metrics. The map key is the action name which specified by the site owners at time of the "execute" client-side call.
          type: object
      id: GoogleCloudRecaptchaenterpriseV1ScoreMetrics
      description: Metrics related to scoring.
      type: object
    GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsRequest:
      id: GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsRequest
      description: The request message to search related account group memberships.
      properties:
        hashedAccountId:
          type: string
          format: byte
          description: Optional. The unique stable hashed user identifier we should search connections to. The identifier should correspond to a `hashed_account_id` provided in a previous `CreateAssessment` or `AnnotateAssessment` call.
        pageSize:
          format: int32
          description: Optional. The maximum number of groups to return. The service might return fewer than this value. If unspecified, at most 50 groups are returned. The maximum value is 1000; values above 1000 are coerced to 1000.
          type: integer
        pageToken:
          description: Optional. A page token, received from a previous `SearchRelatedAccountGroupMemberships` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `SearchRelatedAccountGroupMemberships` must match the call that provided the page token.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1EndpointVerificationInfo:
      id: GoogleCloudRecaptchaenterpriseV1EndpointVerificationInfo
      type: object
      description: Information about a verification endpoint that can be used for 2FA.
      properties:
        emailAddress:
          type: string
          description: Email address for which to trigger a verification request.
        lastVerificationTime:
          readOnly: true
          type: string
          description: Output only. Timestamp of the last successful verification for the endpoint, if any.
          format: google-datetime
        requestToken:
          description: Output only. Token to provide to the client to trigger endpoint verification. It must be used within 15 minutes.
          type: string
          readOnly: true
        phoneNumber:
          type: string
          description: Phone number for which to trigger a verification request. Should be given in E.164 format.
    GoogleCloudRecaptchaenterpriseV1TokenProperties:
      type: object
      id: GoogleCloudRecaptchaenterpriseV1TokenProperties
      properties:
        valid:
          description: Whether the provided user response token is valid. When valid = false, the reason could be specified in invalid_reason or it could also be due to a user failing to solve a challenge or a sitekey mismatch (i.e the sitekey used to generate the token was different than the one specified in the assessment).
          type: boolean
        androidPackageName:
          description: The name of the Android package with which the token was generated (Android keys only).
          type: string
        action:
          description: Action name provided at token generation.
          type: string
        hostname:
          type: string
          description: The hostname of the page on which the token was generated (Web keys only).
        iosBundleId:
          type: string
          description: The ID of the iOS bundle with which the token was generated (iOS keys only).
        invalidReason:
          type: string
          description: Reason associated with the response when valid = false.
          enum:
            - INVALID_REASON_UNSPECIFIED
            - UNKNOWN_INVALID_REASON
            - MALFORMED
            - EXPIRED
            - DUPE
            - MISSING
            - BROWSER_ERROR
          enumDescriptions:
            - Default unspecified type.
            - If the failure reason was not accounted for.
            - The provided user verification token was malformed.
            - The user verification token had expired.
            - The user verification had already been seen.
            - The user verification token was not present.
            - A retriable error (such as network failure) occurred on the browser. Could easily be simulated by an attacker.
        createTime:
          format: google-datetime
          type: string
          description: The timestamp corresponding to the generation of the token.
    GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest:
      id: GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest
      properties:
        hashedAccountId:
          description: Optional. Unique stable hashed user identifier to apply to the assessment. This is an alternative to setting the hashed_account_id in CreateAssessment, for example when the account identifier is not yet known in the initial request. It is recommended that the identifier is hashed using hmac-sha256 with stable secret.
          format: byte
          type: string
        annotation:
          enumDescriptions:
            - Default unspecified type.
            - Provides information that the event turned out to be legitimate.
            - Provides information that the event turned out to be fraudulent.
            - Provides information that the event was related to a login event in which the user typed the correct password. Deprecated, prefer indicating CORRECT_PASSWORD through the reasons field instead.
            - Provides information that the event was related to a login event in which the user typed the incorrect password. Deprecated, prefer indicating INCORRECT_PASSWORD through the reasons field instead.
          enum:
            - ANNOTATION_UNSPECIFIED
            - LEGITIMATE
            - FRAUDULENT
            - PASSWORD_CORRECT
            - PASSWORD_INCORRECT
          type: string
          description: Optional. The annotation that will be assigned to the Event. This field can be left empty to provide reasons that apply to an event without concluding whether the event is legitimate or fraudulent.
        reasons:
          type: array
          description: Optional. Optional reasons for the annotation that will be assigned to the Event.
          items:
            type: string
            enumDescriptions:
              - Default unspecified reason.
              - Indicates that the transaction had a chargeback issued with no other details. When possible, specify the type by using CHARGEBACK_FRAUD or CHARGEBACK_DISPUTE instead.
              - Indicates that the transaction had a chargeback issued related to an alleged unauthorized transaction from the cardholder's perspective (for example, the card number was stolen).
              - Indicates that the transaction had a chargeback issued related to the cardholder having provided their card details but allegedly not being satisfied with the purchase (for example, misrepresentation, attempted cancellation).
              - Indicates that the completed payment transaction was refunded by the seller.
              - Indicates that the completed payment transaction was determined to be fraudulent by the seller, and was cancelled and refunded as a result.
              - Indicates that the payment transaction was accepted, and the user was charged.
              - Indicates that the payment transaction was declined, for example due to invalid card details.
              - Indicates the transaction associated with the assessment is suspected of being fraudulent based on the payment method, billing details, shipping address or other transaction information.
              - Indicates that the user was served a 2FA challenge. An old assessment with `ENUM_VALUES.INITIATED_TWO_FACTOR` reason that has not been overwritten with `PASSED_TWO_FACTOR` is treated as an abandoned 2FA flow. This is equivalent to `FAILED_TWO_FACTOR`.
              - Indicates that the user passed a 2FA challenge.
              - Indicates that the user failed a 2FA challenge.
              - Indicates the user provided the correct password.
              - Indicates the user provided an incorrect password.
              - Indicates that the user sent unwanted and abusive messages to other users of the platform, such as spam, scams, phishing, or social engineering.
            enum:
              - REASON_UNSPECIFIED
              - CHARGEBACK
              - CHARGEBACK_FRAUD
              - CHARGEBACK_DISPUTE
              - REFUND
              - REFUND_FRAUD
              - TRANSACTION_ACCEPTED
              - TRANSACTION_DECLINED
              - PAYMENT_HEURISTICS
              - INITIATED_TWO_FACTOR
              - PASSED_TWO_FACTOR
              - FAILED_TWO_FACTOR
              - CORRECT_PASSWORD
              - INCORRECT_PASSWORD
              - SOCIAL_SPAM
      description: The request message to annotate an Assessment.
      type: object
  parameters:
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    keys:
      id: google.recaptchaenterprise.keys
      name: keys
      title: Keys
      methods:
        projects_keys_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_keys_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_keys_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_keys_migrate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}:migrate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_keys_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_keys_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/keys/methods/projects_keys_get'
          - $ref: '#/components/x-stackQL-resources/keys/methods/projects_keys_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/keys/methods/projects_keys_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/keys/methods/projects_keys_delete'
    keys__metrics:
      id: google.recaptchaenterprise.keys__metrics
      name: keys__metrics
      title: Keys__metrics
      methods:
        projects_keys_getMetrics:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}~1metrics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/keys__metrics/methods/projects_keys_getMetrics'
        insert: []
        update: []
        delete: []
    keys__legacy_secret_key:
      id: google.recaptchaenterprise.keys__legacy_secret_key
      name: keys__legacy_secret_key
      title: Keys__legacy_secret_key
      methods:
        projects_keys_retrieveLegacySecretKey:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}:retrieveLegacySecretKey/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/keys__legacy_secret_key/methods/projects_keys_retrieveLegacySecretKey'
        insert: []
        update: []
        delete: []
    relatedaccountgroupmemberships:
      id: google.recaptchaenterprise.relatedaccountgroupmemberships
      name: relatedaccountgroupmemberships
      title: Relatedaccountgroupmemberships
      methods:
        projects_relatedaccountgroupmemberships_search:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1relatedaccountgroupmemberships:search/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    memberships:
      id: google.recaptchaenterprise.memberships
      name: memberships
      title: Memberships
      methods:
        projects_relatedaccountgroups_memberships_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1relatedaccountgroups~1{relatedaccountgroupsId}~1memberships/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/projects_relatedaccountgroups_memberships_list'
        insert: []
        update: []
        delete: []
    relatedaccountgroups:
      id: google.recaptchaenterprise.relatedaccountgroups
      name: relatedaccountgroups
      title: Relatedaccountgroups
      methods:
        projects_relatedaccountgroups_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1relatedaccountgroups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relatedaccountgroups/methods/projects_relatedaccountgroups_list'
        insert: []
        update: []
        delete: []
    assessments:
      id: google.recaptchaenterprise.assessments
      name: assessments
      title: Assessments
      methods:
        projects_assessments_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1assessments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_assessments_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1assessments~1{assessmentsId}:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/assessments/methods/projects_assessments_create'
        update: []
        delete: []
paths:
  /v1/projects/{projectsId}/keys/{keysId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/quotaUser'
    get:
      description: Returns the specified key.
      operationId: recaptchaenterprise.projects.keys.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: select
    patch:
      description: Updates the specified key.
      operationId: recaptchaenterprise.projects.keys.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: exec
    delete:
      description: Deletes the specified key.
      operationId: recaptchaenterprise.projects.keys.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/keys/{keysId}/metrics:
    parameters: *ref_1
    get:
      description: Get some aggregated metrics for a Key. This data can be used to build dashboards.
      operationId: recaptchaenterprise.projects.keys.getMetrics
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Metrics'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys__metrics
      x-stackQL-verb: select
  /v1/projects/{projectsId}/keys/{keysId}:migrate:
    parameters: *ref_1
    post:
      description: Migrates an existing key from reCAPTCHA to reCAPTCHA Enterprise. Once a key is migrated, it can be used from either product. SiteVerify requests are billed as CreateAssessment calls. You must be authenticated as one of the current owners of the reCAPTCHA Site Key, and your user must have the reCAPTCHA Enterprise Admin IAM role in the destination project.
      operationId: recaptchaenterprise.projects.keys.migrate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/keys/{keysId}:retrieveLegacySecretKey:
    parameters: *ref_1
    get:
      description: Returns the secret key related to the specified public key. You must use the legacy secret key only in a 3rd party integration with legacy reCAPTCHA.
      operationId: recaptchaenterprise.projects.keys.retrieveLegacySecretKey
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1RetrieveLegacySecretKeyResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys__legacy_secret_key
      x-stackQL-verb: select
  /v1/projects/{projectsId}/keys:
    parameters: *ref_1
    post:
      description: Creates a new reCAPTCHA Enterprise key.
      operationId: recaptchaenterprise.projects.keys.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: insert
    get:
      description: Returns the list of all keys that belong to a project.
      operationId: recaptchaenterprise.projects.keys.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1ListKeysResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: select
  /v1/projects/{projectsId}/relatedaccountgroupmemberships:search:
    parameters: *ref_1
    post:
      description: Search group memberships related to a given account.
      operationId: recaptchaenterprise.projects.relatedaccountgroupmemberships.search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: relatedaccountgroupmemberships
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/relatedaccountgroups/{relatedaccountgroupsId}/memberships:
    parameters: *ref_1
    get:
      description: Get memberships in a group of related accounts.
      operationId: recaptchaenterprise.projects.relatedaccountgroups.memberships.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupMembershipsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: relatedaccountgroupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: memberships
      x-stackQL-verb: select
  /v1/projects/{projectsId}/relatedaccountgroups:
    parameters: *ref_1
    get:
      description: List groups of related accounts.
      operationId: recaptchaenterprise.projects.relatedaccountgroups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: relatedaccountgroups
      x-stackQL-verb: select
  /v1/projects/{projectsId}/assessments:
    parameters: *ref_1
    post:
      description: Creates an Assessment of the likelihood an event is legitimate.
      operationId: recaptchaenterprise.projects.assessments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Assessment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Assessment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assessments
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/assessments/{assessmentsId}:annotate:
    parameters: *ref_1
    post:
      description: Annotates a previously created Assessment to provide additional information on whether the event turned out to be authentic or fraudulent.
      operationId: recaptchaenterprise.projects.assessments.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assessments
      x-stackQL-verb: exec
