openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: reCAPTCHA Enterprise API
  description: >-
    Help protect your website from fraudulent activity, spam, and abuse without
    creating friction.
  version: v1
  x-discovery-doc-revision: '20240906'
  x-generated-date: '2024-09-13'
externalDocs:
  url: https://cloud.google.com/recaptcha-enterprise/
servers:
  - url: https://recaptchaenterprise.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse:
      id: GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse
      type: object
      properties:
        relatedAccountGroups:
          type: array
          description: The groups of related accounts listed by the query.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1RelatedAccountGroup
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
      description: The response to a `ListRelatedAccountGroups` call.
    GoogleCloudRecaptchaenterpriseV1AddIpOverrideResponse:
      type: object
      description: Response for AddIpOverride.
      id: GoogleCloudRecaptchaenterpriseV1AddIpOverrideResponse
      properties: {}
    GoogleCloudRecaptchaenterpriseV1FirewallActionBlockAction:
      id: GoogleCloudRecaptchaenterpriseV1FirewallActionBlockAction
      type: object
      properties: {}
      description: >-
        A block action serves an HTTP error code a prevents the request from
        hitting the backend.
    GoogleCloudRecaptchaenterpriseV1FraudSignalsCardSignals:
      type: object
      properties:
        cardLabels:
          description: Output only. The labels for the payment card in this transaction.
          type: array
          readOnly: true
          items:
            type: string
            enum:
              - CARD_LABEL_UNSPECIFIED
              - PREPAID
              - VIRTUAL
              - UNEXPECTED_LOCATION
            enumDescriptions:
              - No label specified.
              - This card has been detected as prepaid.
              - >-
                This card has been detected as virtual, such as a card number
                generated for a single transaction or merchant.
              - >-
                This card has been detected as being used in an unexpected
                geographic location.
      description: Signals describing the payment card used in this transaction.
      id: GoogleCloudRecaptchaenterpriseV1FraudSignalsCardSignals
    GoogleCloudRecaptchaenterpriseV1UserId:
      properties:
        email:
          type: string
          description: Optional. An email address.
        username:
          type: string
          description: >-
            Optional. A unique username, if different from all the other
            identifiers and `account_id` that are provided. Can be a unique
            login handle or display name for a user.
        phoneNumber:
          description: Optional. A phone number. Should use the E.164 format.
          type: string
      id: GoogleCloudRecaptchaenterpriseV1UserId
      type: object
      description: An identifier associated with a user.
    GoogleCloudRecaptchaenterpriseV1TransactionDataUser:
      type: object
      properties:
        emailVerified:
          description: >-
            Optional. Whether the email has been verified to be accessible by
            the user (OTP or similar).
          type: boolean
        phoneNumber:
          type: string
          description: Optional. The phone number of the user, with country code.
        email:
          description: Optional. The email address of the user.
          type: string
        creationMs:
          description: Optional. The epoch milliseconds of the user's account creation.
          format: int64
          type: string
        accountId:
          description: >-
            Optional. Unique account identifier for this user. If using account
            defender, this should match the hashed_account_id field. Otherwise,
            a unique and persistent identifier for this account.
          type: string
        phoneVerified:
          description: >-
            Optional. Whether the phone number has been verified to be
            accessible by the user (OTP or similar).
          type: boolean
      description: Details about a user's account involved in the transaction.
      id: GoogleCloudRecaptchaenterpriseV1TransactionDataUser
    GoogleCloudRecaptchaenterpriseV1IpOverrideData:
      type: object
      properties:
        ip:
          description: >-
            Required. The IP address to override (can be IPv4, IPv6 or CIDR).
            The IP override must be a valid IPv4 or IPv6 address, or a CIDR
            range. The IP override must be a public IP address. Example of IPv4:
            168.192.5.6 Example of IPv6: 2001:0000:130F:0000:0000:09C0:876A:130B
            Example of IPv4 with CIDR: 168.192.5.0/24 Example of IPv6 with CIDR:
            2001:0DB8:1234::/48
          type: string
        overrideType:
          enumDescriptions:
            - >-
              Default override type that indicates this enum hasn't been
              specified.
            - >-
              Allowlist the IP address; i.e. give a `risk_analysis.score` of 0.9
              for all valid assessments.
          enum:
            - OVERRIDE_TYPE_UNSPECIFIED
            - ALLOW
          type: string
          description: Required. Describes the type of IP override.
      description: Information about the IP or IP range override.
      id: GoogleCloudRecaptchaenterpriseV1IpOverrideData
    GoogleCloudRecaptchaenterpriseV1TestingOptions:
      properties:
        testingScore:
          description: >-
            Optional. All assessments for this Key return this score. Must be
            between 0 (likely not legitimate) and 1 (likely legitimate)
            inclusive.
          format: float
          type: number
        testingChallenge:
          enum:
            - TESTING_CHALLENGE_UNSPECIFIED
            - NOCAPTCHA
            - UNSOLVABLE_CHALLENGE
          type: string
          enumDescriptions:
            - >-
              Perform the normal risk analysis and return either nocaptcha or a
              challenge depending on risk and trust factors.
            - >-
              Challenge requests for this key always return a nocaptcha, which
              does not require a solution.
            - >-
              Challenge requests for this key always return an unsolvable
              challenge.
          description: >-
            Optional. For challenge-based keys only (CHECKBOX, INVISIBLE), all
            challenge requests for this site return nocaptcha if NOCAPTCHA, or
            an unsolvable challenge if CHALLENGE.
      id: GoogleCloudRecaptchaenterpriseV1TestingOptions
      type: object
      description: Options for user acceptance testing.
    GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentCardTestingVerdict:
      type: object
      id: >-
        GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentCardTestingVerdict
      properties:
        risk:
          readOnly: true
          type: number
          description: >-
            Output only. Probability of this transaction attempt being part of a
            card testing attack. Values are from 0.0 (lowest) to 1.0 (highest).
          format: float
      description: >-
        Information about card testing fraud, where an adversary is testing
        fraudulently obtained cards or brute forcing their details.
    GoogleCloudRecaptchaenterpriseV1ReorderFirewallPoliciesResponse:
      type: object
      id: GoogleCloudRecaptchaenterpriseV1ReorderFirewallPoliciesResponse
      description: The reorder firewall policies response message.
      properties: {}
    GoogleCloudRecaptchaenterpriseV1AssessmentEnvironment:
      description: >-
        The environment creating the assessment. This describes your environment
        (the system invoking CreateAssessment), NOT the environment of your
        user.
      properties:
        version:
          type: string
          description: Optional. The version of the client module. For example, "1.0.0".
        client:
          type: string
          description: >-
            Optional. Identifies the client module initiating the
            CreateAssessment request. This can be the link to the client
            module's project. Examples include: -
            "github.com/GoogleCloudPlatform/recaptcha-enterprise-google-tag-manager"
            - "cloud.google.com/recaptcha/docs/implement-waf-akamai" -
            "cloud.google.com/recaptcha/docs/implement-waf-cloudflare" -
            "wordpress.org/plugins/recaptcha-something"
      type: object
      id: GoogleCloudRecaptchaenterpriseV1AssessmentEnvironment
    GoogleCloudRecaptchaenterpriseV1WafSettings:
      type: object
      id: GoogleCloudRecaptchaenterpriseV1WafSettings
      properties:
        wafFeature:
          type: string
          enum:
            - WAF_FEATURE_UNSPECIFIED
            - CHALLENGE_PAGE
            - SESSION_TOKEN
            - ACTION_TOKEN
            - EXPRESS
          enumDescriptions:
            - Undefined feature.
            - Redirects suspicious traffic to reCAPTCHA.
            - >-
              Use reCAPTCHA session-tokens to protect the whole user session on
              the site's domain.
            - Use reCAPTCHA action-tokens to protect user actions.
            - >-
              Use reCAPTCHA WAF express protection to protect any content other
              than web pages, like APIs and IoT devices.
          description: Required. The WAF feature for which this key is enabled.
        wafService:
          enum:
            - WAF_SERVICE_UNSPECIFIED
            - CA
            - FASTLY
            - CLOUDFLARE
            - AKAMAI
          description: Required. The WAF service that uses this key.
          type: string
          enumDescriptions:
            - Undefined WAF
            - Cloud Armor
            - Fastly
            - Cloudflare
            - Akamai
      description: >-
        Settings specific to keys that can be used for WAF (Web Application
        Firewall).
    GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentBehavioralTrustVerdict:
      description: Information about behavioral trust of the transaction.
      properties:
        trust:
          type: number
          format: float
          readOnly: true
          description: >-
            Output only. Probability of this transaction attempt being executed
            in a behaviorally trustworthy way. Values are from 0.0 (lowest) to
            1.0 (highest).
      type: object
      id: >-
        GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentBehavioralTrustVerdict
    GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        relatedAccountGroupMemberships:
          description: The queried memberships.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership
      id: >-
        GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsResponse
      description: The response to a `SearchRelatedAccountGroupMemberships` call.
      type: object
    GoogleCloudRecaptchaenterpriseV1ChallengeMetrics:
      properties:
        passedCount:
          description: >-
            Count of nocaptchas (successful verification without a challenge)
            plus submitted challenge solutions that were correct and resulted in
            verification.
          format: int64
          type: string
        nocaptchaCount:
          description: >-
            Count of nocaptchas (successful verification without a challenge)
            issued.
          format: int64
          type: string
        failedCount:
          type: string
          format: int64
          description: >-
            Count of submitted challenge solutions that were incorrect or
            otherwise deemed suspicious such that a subsequent challenge was
            triggered.
        pageloadCount:
          type: string
          description: >-
            Count of reCAPTCHA checkboxes or badges rendered. This is mostly
            equivalent to a count of pageloads for pages that include reCAPTCHA.
          format: int64
      description: Metrics related to challenges.
      type: object
      id: GoogleCloudRecaptchaenterpriseV1ChallengeMetrics
    GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest:
      id: GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest
      properties:
        skipBillingCheck:
          description: >-
            Optional. If true, skips the billing check. A reCAPTCHA Enterprise
            key or migrated key behaves differently than a reCAPTCHA
            (non-Enterprise version) key when you reach a quota limit (see
            https://cloud.google.com/recaptcha/quotas#quota_limit). To avoid any
            disruption of your usage, we check that a billing account is
            present. If your usage of reCAPTCHA is under the free quota, you can
            safely skip the billing check and proceed with the migration. See
            https://cloud.google.com/recaptcha/docs/billing-information.
          type: boolean
      description: The migrate key request message.
      type: object
    GoogleCloudRecaptchaenterpriseV1SmsTollFraudVerdict:
      properties:
        reasons:
          description: Output only. Reasons contributing to the SMS toll fraud verdict.
          type: array
          items:
            type: string
            enumDescriptions:
              - Default unspecified reason
              - The provided phone number was invalid
            enum:
              - SMS_TOLL_FRAUD_REASON_UNSPECIFIED
              - INVALID_PHONE_NUMBER
          readOnly: true
        risk:
          description: >-
            Output only. Probability of an SMS event being fraudulent. Values
            are from 0.0 (lowest) to 1.0 (highest).
          type: number
          readOnly: true
          format: float
      type: object
      id: GoogleCloudRecaptchaenterpriseV1SmsTollFraudVerdict
      description: Information about SMS toll fraud.
    GoogleRpcStatus:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        details:
          type: array
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      id: GoogleRpcStatus
    GoogleCloudRecaptchaenterpriseV1FirewallActionIncludeRecaptchaScriptAction:
      id: >-
        GoogleCloudRecaptchaenterpriseV1FirewallActionIncludeRecaptchaScriptAction
      type: object
      properties: {}
      description: >-
        An include reCAPTCHA script action involves injecting reCAPTCHA
        JavaScript code into the HTML returned by the site backend. This
        reCAPTCHA script is tasked with collecting user signals on the requested
        web page, issuing tokens as a cookie within the site domain, and
        enabling their utilization in subsequent page requests.
    GoogleCloudRecaptchaenterpriseV1FirewallActionRedirectAction:
      description: >-
        A redirect action returns a 307 (temporary redirect) response, pointing
        the user to a reCAPTCHA interstitial page to attach a token.
      type: object
      properties: {}
      id: GoogleCloudRecaptchaenterpriseV1FirewallActionRedirectAction
    GoogleCloudRecaptchaenterpriseV1TransactionDataItem:
      description: Line items being purchased in this transaction.
      properties:
        name:
          description: Optional. The full name of the item.
          type: string
        merchantAccountId:
          type: string
          description: >-
            Optional. When a merchant is specified, its corresponding
            account_id. Necessary to populate marketplace-style transactions.
        quantity:
          format: int64
          type: string
          description: Optional. The quantity of this item that is being purchased.
        value:
          type: number
          description: >-
            Optional. The value per item that the user is paying, in the
            transaction currency, after discounts.
          format: double
      id: GoogleCloudRecaptchaenterpriseV1TransactionDataItem
      type: object
    GoogleCloudRecaptchaenterpriseV1IOSKeySettings:
      description: Settings specific to keys that can be used by iOS apps.
      id: GoogleCloudRecaptchaenterpriseV1IOSKeySettings
      type: object
      properties:
        allowedBundleIds:
          type: array
          items:
            type: string
          description: >-
            Optional. iOS bundle ids of apps allowed to use the key. Example:
            'com.companyname.productname.appname'
        allowAllBundleIds:
          type: boolean
          description: Optional. If set to true, allowed_bundle_ids are not enforced.
        appleDeveloperId:
          description: >-
            Optional. Apple Developer account details for the app that is
            protected by the reCAPTCHA Key. reCAPTCHA leverages
            platform-specific checks like Apple App Attest and Apple DeviceCheck
            to protect your app from abuse. Providing these fields allows
            reCAPTCHA to get a better assessment of the integrity of your app.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1AppleDeveloperId
    GoogleCloudRecaptchaenterpriseV1TransactionEvent:
      id: GoogleCloudRecaptchaenterpriseV1TransactionEvent
      description: Describes an event in the lifecycle of a payment transaction.
      properties:
        value:
          description: >-
            Optional. The value that corresponds with this transaction event, if
            one exists. For example, a refund event where $5.00 was refunded.
            Currency is obtained from the original transaction data.
          type: number
          format: double
        eventTime:
          type: string
          description: >-
            Optional. Timestamp when this transaction event occurred; otherwise
            assumed to be the time of the API call.
          format: google-datetime
        reason:
          type: string
          description: >-
            Optional. The reason or standardized code that corresponds with this
            transaction event, if one exists. For example, a CHARGEBACK event
            with code 6005.
        eventType:
          enumDescriptions:
            - Default, unspecified event type.
            - >-
              Indicates that the transaction is approved by the merchant. The
              accompanying reasons can include terms such as 'INHOUSE',
              'ACCERTIFY', 'CYBERSOURCE', or 'MANUAL_REVIEW'.
            - >-
              Indicates that the transaction is denied and concluded due to
              risks detected by the merchant. The accompanying reasons can
              include terms such as 'INHOUSE', 'ACCERTIFY', 'CYBERSOURCE', or
              'MANUAL_REVIEW'.
            - >-
              Indicates that the transaction is being evaluated by a human, due
              to suspicion or risk.
            - >-
              Indicates that the authorization attempt with the card issuer
              succeeded.
            - >-
              Indicates that the authorization attempt with the card issuer
              failed. The accompanying reasons can include Visa's '54'
              indicating that the card is expired, or '82' indicating that the
              CVV is incorrect.
            - >-
              Indicates that the transaction is completed because the funds were
              settled.
            - >-
              Indicates that the transaction could not be completed because the
              funds were not settled.
            - >-
              Indicates that the transaction has been canceled. Specify the
              reason for the cancellation. For example,
              'INSUFFICIENT_INVENTORY'.
            - >-
              Indicates that the merchant has received a chargeback inquiry due
              to fraud for the transaction, requesting additional information
              before a fraud chargeback is officially issued and a formal
              chargeback notification is sent.
            - >-
              Indicates that the merchant has received a chargeback alert due to
              fraud for the transaction. The process of resolving the dispute
              without involving the payment network is started.
            - >-
              Indicates that a fraud notification is issued for the transaction,
              sent by the payment instrument's issuing bank because the
              transaction appears to be fraudulent. We recommend including TC40
              or SAFE data in the `reason` field for this event type. For
              partial chargebacks, we recommend that you include an amount in
              the `value` field.
            - >-
              Indicates that the merchant is informed by the payment network
              that the transaction has entered the chargeback process due to
              fraud. Reason code examples include Discover's '6005' and '6041'.
              For partial chargebacks, we recommend that you include an amount
              in the `value` field.
            - >-
              Indicates that the transaction has entered the chargeback process
              due to fraud, and that the merchant has chosen to enter
              representment. Reason examples include Discover's '6005' and
              '6041'. For partial chargebacks, we recommend that you include an
              amount in the `value` field.
            - >-
              Indicates that the transaction has had a fraud chargeback which
              was illegitimate and was reversed as a result. For partial
              chargebacks, we recommend that you include an amount in the
              `value` field.
            - >-
              Indicates that the merchant has received a refund for a completed
              transaction. For partial refunds, we recommend that you include an
              amount in the `value` field. Reason example: 'TAX_EXEMPT' (partial
              refund of exempt tax)
            - >-
              Indicates that the merchant has received a refund request for this
              transaction, but that they have declined it. For partial refunds,
              we recommend that you include an amount in the `value` field.
              Reason example: 'TAX_EXEMPT' (partial refund of exempt tax)
            - >-
              Indicates that the completed transaction was refunded by the
              merchant. For partial refunds, we recommend that you include an
              amount in the `value` field. Reason example: 'TAX_EXEMPT' (partial
              refund of exempt tax)
            - >-
              Indicates that the completed transaction was refunded by the
              merchant, and that this refund was reversed. For partial refunds,
              we recommend that you include an amount in the `value` field.
          type: string
          description: Optional. The type of this transaction event.
          enum:
            - TRANSACTION_EVENT_TYPE_UNSPECIFIED
            - MERCHANT_APPROVE
            - MERCHANT_DENY
            - MANUAL_REVIEW
            - AUTHORIZATION
            - AUTHORIZATION_DECLINE
            - PAYMENT_CAPTURE
            - PAYMENT_CAPTURE_DECLINE
            - CANCEL
            - CHARGEBACK_INQUIRY
            - CHARGEBACK_ALERT
            - FRAUD_NOTIFICATION
            - CHARGEBACK
            - CHARGEBACK_REPRESENTMENT
            - CHARGEBACK_REVERSE
            - REFUND_REQUEST
            - REFUND_DECLINE
            - REFUND
            - REFUND_REVERSE
      type: object
    GoogleCloudRecaptchaenterpriseV1RemoveIpOverrideResponse:
      properties: {}
      description: Response for RemoveIpOverride.
      id: GoogleCloudRecaptchaenterpriseV1RemoveIpOverrideResponse
      type: object
    GoogleCloudRecaptchaenterpriseV1FirewallActionSetHeaderAction:
      description: >-
        A set header action sets a header and forwards the request to the
        backend. This can be used to trigger custom protection implemented on
        the backend.
      properties:
        value:
          type: string
          description: >-
            Optional. The header value to set in the request to the backend
            server.
        key:
          type: string
          description: >-
            Optional. The header key to set in the request to the backend
            server.
      id: GoogleCloudRecaptchaenterpriseV1FirewallActionSetHeaderAction
      type: object
    GoogleCloudRecaptchaenterpriseV1EndpointVerificationInfo:
      properties:
        phoneNumber:
          type: string
          description: >-
            Phone number for which to trigger a verification request. Should be
            given in E.164 format.
        emailAddress:
          type: string
          description: Email address for which to trigger a verification request.
        lastVerificationTime:
          description: >-
            Output only. Timestamp of the last successful verification for the
            endpoint, if any.
          readOnly: true
          format: google-datetime
          type: string
        requestToken:
          description: >-
            Output only. Token to provide to the client to trigger endpoint
            verification. It must be used within 15 minutes.
          type: string
          readOnly: true
      description: Information about a verification endpoint that can be used for 2FA.
      id: GoogleCloudRecaptchaenterpriseV1EndpointVerificationInfo
      type: object
    GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership:
      properties:
        name:
          description: >-
            Required. Identifier. The resource name for this membership in the
            format
            `projects/{project}/relatedaccountgroups/{relatedaccountgroup}/memberships/{membership}`.
          type: string
        accountId:
          type: string
          description: >-
            The unique stable account identifier of the member. The identifier
            corresponds to an `account_id` provided in a previous
            `CreateAssessment` or `AnnotateAssessment` call.
        hashedAccountId:
          description: >-
            Deprecated: use `account_id` instead. The unique stable hashed
            account identifier of the member. The identifier corresponds to a
            `hashed_account_id` provided in a previous `CreateAssessment` or
            `AnnotateAssessment` call.
          deprecated: true
          format: byte
          type: string
      description: A membership in a group of related accounts.
      type: object
      id: GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership
    GoogleCloudRecaptchaenterpriseV1FirewallAction:
      properties:
        redirect:
          description: >-
            This action redirects the request to a reCAPTCHA interstitial to
            attach a token.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallActionRedirectAction
        allow:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallActionAllowAction
          description: >-
            The user request did not match any policy and should be allowed
            access to the requested resource.
        substitute:
          description: >-
            This action transparently serves a different page to an offending
            user.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallActionSubstituteAction
        includeRecaptchaScript:
          description: >-
            This action injects reCAPTCHA JavaScript code into the HTML page
            returned by the site backend.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallActionIncludeRecaptchaScriptAction
        block:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallActionBlockAction
          description: >-
            This action denies access to a given page. The user gets an HTTP
            error code.
        setHeader:
          description: >-
            This action sets a custom header but allow the request to continue
            to the customer backend.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallActionSetHeaderAction
      description: >-
        An individual action. Each action represents what to do if a policy
        matches.
      type: object
      id: GoogleCloudRecaptchaenterpriseV1FirewallAction
    GoogleCloudRecaptchaenterpriseV1RiskAnalysis:
      type: object
      description: Risk analysis result for an event.
      properties:
        score:
          description: >-
            Output only. Legitimate event score from 0.0 to 1.0. (1.0 means very
            likely legitimate traffic while 0.0 means very likely non-legitimate
            traffic).
          type: number
          format: float
          readOnly: true
        extendedVerdictReasons:
          description: >-
            Output only. Extended verdict reasons to be used for experimentation
            only. The set of possible reasons is subject to change.
          readOnly: true
          type: array
          items:
            type: string
        reasons:
          description: Output only. Reasons contributing to the risk analysis verdict.
          type: array
          items:
            type: string
            enum:
              - CLASSIFICATION_REASON_UNSPECIFIED
              - AUTOMATION
              - UNEXPECTED_ENVIRONMENT
              - TOO_MUCH_TRAFFIC
              - UNEXPECTED_USAGE_PATTERNS
              - LOW_CONFIDENCE_SCORE
              - SUSPECTED_CARDING
              - SUSPECTED_CHARGEBACK
            enumDescriptions:
              - Default unspecified type.
              - Interactions matched the behavior of an automated agent.
              - The event originated from an illegitimate environment.
              - Traffic volume from the event source is higher than normal.
              - >-
                Interactions with the site were significantly different than
                expected patterns.
              - >-
                Too little traffic has been received from this site thus far to
                generate quality risk analysis.
              - >-
                The request matches behavioral characteristics of a carding
                attack.
              - >-
                The request matches behavioral characteristics of chargebacks
                for fraud.
          readOnly: true
      id: GoogleCloudRecaptchaenterpriseV1RiskAnalysis
    GoogleCloudRecaptchaenterpriseV1Event:
      id: GoogleCloudRecaptchaenterpriseV1Event
      description: The event being assessed.
      properties:
        ja3:
          description: Optional. JA3 fingerprint for SSL clients.
          type: string
        expectedAction:
          type: string
          description: >-
            Optional. The expected action for this type of event. This should be
            the same action provided at token generation time on client-side
            platforms already integrated with recaptcha enterprise.
        hashedAccountId:
          deprecated: true
          description: >-
            Optional. Deprecated: use `user_info.account_id` instead. Unique
            stable hashed user identifier for the request. The identifier must
            be hashed using hmac-sha256 with stable secret.
          type: string
          format: byte
        fraudPrevention:
          enum:
            - FRAUD_PREVENTION_UNSPECIFIED
            - ENABLED
            - DISABLED
          enumDescriptions:
            - >-
              Default, unspecified setting. If opted in for automatic detection,
              `fraud_prevention_assessment` is returned based on the request.
              Otherwise, `fraud_prevention_assessment` is returned if
              `transaction_data` is present in the `Event` and Fraud Prevention
              is enabled in the Google Cloud console.
            - >-
              Enable Fraud Prevention for this assessment, if Fraud Prevention
              is enabled in the Google Cloud console.
            - >-
              Disable Fraud Prevention for this assessment, regardless of opt-in
              status or Google Cloud console settings.
          description: Optional. The Fraud Prevention setting for this assessment.
          type: string
        wafTokenAssessment:
          type: boolean
          description: >-
            Optional. Flag for running WAF token assessment. If enabled, the
            token must be specified, and have been created by a WAF-enabled key.
        express:
          type: boolean
          description: >-
            Optional. Flag for a reCAPTCHA express request for an assessment
            without a token. If enabled, `site_key` must reference an Express
            site key.
        firewallPolicyEvaluation:
          type: boolean
          description: >-
            Optional. Flag for enabling firewall policy config assessment. If
            this flag is enabled, the firewall policy is evaluated and a
            suggested firewall action is returned in the response.
        userAgent:
          type: string
          description: >-
            Optional. The user agent present in the request from the user's
            device related to this event.
        transactionData:
          description: >-
            Optional. Data describing a payment transaction to be assessed.
            Sending this data enables reCAPTCHA Enterprise Fraud Prevention and
            the FraudPreventionAssessment component in the response.
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionData'
        userInfo:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1UserInfo'
          description: >-
            Optional. Information about the user that generates this event, when
            they can be identified. They are often identified through the use of
            an account for logged-in requests or login/registration requests, or
            by providing user identifiers for guest actions like checkout.
        userIpAddress:
          type: string
          description: >-
            Optional. The IP address in the request from the user's device
            related to this event.
        siteKey:
          description: >-
            Optional. The site key that was used to invoke reCAPTCHA Enterprise
            on your site and generate the token.
          type: string
        token:
          type: string
          description: >-
            Optional. The user response token provided by the reCAPTCHA
            Enterprise client-side integration on your site.
        headers:
          description: Optional. HTTP header information about the request.
          type: array
          items:
            type: string
        requestedUri:
          description: >-
            Optional. The URI resource the user requested that triggered an
            assessment.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1PhoneFraudAssessment:
      properties:
        smsTollFraudVerdict:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1SmsTollFraudVerdict
          description: >-
            Output only. Assessment of this phone event for risk of SMS toll
            fraud.
          readOnly: true
      id: GoogleCloudRecaptchaenterpriseV1PhoneFraudAssessment
      type: object
      description: Assessment for Phone Fraud
    GoogleCloudRecaptchaenterpriseV1AddIpOverrideRequest:
      type: object
      id: GoogleCloudRecaptchaenterpriseV1AddIpOverrideRequest
      description: The AddIpOverride request message.
      properties:
        ipOverrideData:
          description: Required. IP override added to the key.
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1IpOverrideData'
    GoogleCloudRecaptchaenterpriseV1ListIpOverridesResponse:
      id: GoogleCloudRecaptchaenterpriseV1ListIpOverridesResponse
      type: object
      description: Response for ListIpOverrides.
      properties:
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results. If this field is empty,
            no keys remain in the results.
        ipOverrides:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1IpOverrideData
          type: array
          description: IP Overrides details.
    GoogleCloudRecaptchaenterpriseV1UserInfo:
      description: >-
        User information associated with a request protected by reCAPTCHA
        Enterprise.
      properties:
        userIds:
          items:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1UserId'
          type: array
          description: Optional. Identifiers associated with this user or request.
        accountId:
          type: string
          description: >-
            Optional. For logged-in requests or login/registration requests, the
            unique account identifier associated with this user. You can use the
            username if it is stable (meaning it is the same for every request
            associated with the same user), or any stable user ID of your
            choice. Leave blank for non logged-in actions or guest checkout.
        createAccountTime:
          description: >-
            Optional. Creation time for this account associated with this user.
            Leave blank for non logged-in actions, guest checkout, or when there
            is no account associated with the current user.
          type: string
          format: google-datetime
      id: GoogleCloudRecaptchaenterpriseV1UserInfo
      type: object
    GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo:
      description: Information about account verification, used for identity verification.
      properties:
        username:
          description: >-
            Username of the account that is being verified. Deprecated.
            Customers should now provide the `account_id` field in
            `event.user_info`.
          deprecated: true
          type: string
        languageCode:
          description: >-
            Optional. Language code preference for the verification message, set
            as a IETF BCP 47 language code.
          type: string
        endpoints:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1EndpointVerificationInfo
          description: Optional. Endpoints that can be used for identity verification.
          type: array
        latestVerificationResult:
          description: Output only. Result of the latest account verification challenge.
          readOnly: true
          type: string
          enumDescriptions:
            - No information about the latest account verification.
            - >-
              The user was successfully verified. This means the account
              verification challenge was successfully completed.
            - The user failed the verification challenge.
            - >-
              The site is not properly onboarded to use the account verification
              feature.
            - >-
              The recipient is not allowed for account verification. This can
              occur during integration but should not occur in production.
            - >-
              The recipient has already been sent too many verification codes in
              a short amount of time.
            - >-
              The verification flow could not be completed due to a critical
              internal error.
            - >-
              The client has exceeded their two factor request quota for this
              period of time.
            - >-
              The request cannot be processed at the time because of an
              incident. This bypass can be restricted to a problematic
              destination email domain, a customer, or could affect the entire
              service.
            - >-
              The request parameters do not match with the token provided and
              cannot be processed.
          enum:
            - RESULT_UNSPECIFIED
            - SUCCESS_USER_VERIFIED
            - ERROR_USER_NOT_VERIFIED
            - ERROR_SITE_ONBOARDING_INCOMPLETE
            - ERROR_RECIPIENT_NOT_ALLOWED
            - ERROR_RECIPIENT_ABUSE_LIMIT_EXHAUSTED
            - ERROR_CRITICAL_INTERNAL
            - ERROR_CUSTOMER_QUOTA_EXHAUSTED
            - ERROR_VERIFICATION_BYPASSED
            - ERROR_VERDICT_MISMATCH
      id: GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo
      type: object
    GoogleCloudRecaptchaenterpriseV1TransactionDataAddress:
      type: object
      properties:
        address:
          items:
            type: string
          type: array
          description: >-
            Optional. The first lines of the address. The first line generally
            contains the street name and number, and further lines may include
            information such as an apartment number.
        administrativeArea:
          description: >-
            Optional. The state, province, or otherwise administrative area of
            the address.
          type: string
        recipient:
          description: >-
            Optional. The recipient name, potentially including information such
            as "care of".
          type: string
        postalCode:
          description: Optional. The postal or ZIP code of the address.
          type: string
        locality:
          type: string
          description: Optional. The town/city of the address.
        regionCode:
          type: string
          description: Optional. The CLDR country/region of the address.
      id: GoogleCloudRecaptchaenterpriseV1TransactionDataAddress
      description: Structured address format for billing and shipping addresses.
    GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentStolenInstrumentVerdict:
      properties:
        risk:
          readOnly: true
          type: number
          description: >-
            Output only. Probability of this transaction being executed with a
            stolen instrument. Values are from 0.0 (lowest) to 1.0 (highest).
          format: float
      type: object
      id: >-
        GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentStolenInstrumentVerdict
      description: >-
        Information about stolen instrument fraud, where the user is not the
        legitimate owner of the instrument being used for the purchase.
    GoogleCloudRecaptchaenterpriseV1ScoreDistribution:
      type: object
      description: Score distribution.
      properties:
        scoreBuckets:
          additionalProperties:
            type: string
            format: int64
          type: object
          description: >-
            Map key is score value multiplied by 100. The scores are discrete
            values between [0, 1]. The maximum number of buckets is on order of
            a few dozen, but typically much lower (ie. 10).
      id: GoogleCloudRecaptchaenterpriseV1ScoreDistribution
    GoogleCloudRecaptchaenterpriseV1FraudSignalsUserSignals:
      type: object
      properties:
        activeDaysLowerBound:
          format: int32
          description: >-
            Output only. This user (based on email, phone, and other
            identifiers) has been seen on the internet for at least this number
            of days.
          type: integer
          readOnly: true
        syntheticRisk:
          readOnly: true
          type: number
          format: float
          description: >-
            Output only. Likelihood (from 0.0 to 1.0) this user includes
            synthetic components in their identity, such as a randomly generated
            email address, temporary phone number, or fake shipping address.
      description: Signals describing the user involved in this transaction.
      id: GoogleCloudRecaptchaenterpriseV1FraudSignalsUserSignals
    GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification:
      properties:
        encryptedLeakMatchPrefixes:
          items:
            type: string
            format: byte
          description: >-
            Output only. List of prefixes of the encrypted potential password
            leaks that matched the given parameters. They must be compared with
            the client-side decryption prefix of
            `reencrypted_user_credentials_hash`
          readOnly: true
          type: array
        lookupHashPrefix:
          description: >-
            Required. Exactly 26-bit prefix of the SHA-256 hash of the
            canonicalized username. It is used to look up password leaks
            associated with that hash prefix.
          format: byte
          type: string
        reencryptedUserCredentialsHash:
          readOnly: true
          type: string
          description: >-
            Output only. Corresponds to the re-encryption of the
            `encrypted_user_credentials_hash` field. It is used to match
            potential password leaks within `encrypted_leak_match_prefixes`.
          format: byte
        encryptedUserCredentialsHash:
          description: >-
            Optional. Encrypted Scrypt hash of the canonicalized
            username+password. It is re-encrypted by the server and returned
            through `reencrypted_user_credentials_hash`.
          type: string
          format: byte
      id: GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification
      description: Private password leak verification info.
      type: object
    GoogleCloudRecaptchaenterpriseV1Assessment:
      properties:
        accountVerification:
          description: >-
            Optional. Account verification information for identity
            verification. The assessment event must include a token and site key
            to use this feature.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo
        event:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Event'
          description: Optional. The event being assessed.
        fraudSignals:
          description: >-
            Output only. Fraud Signals specific to the users involved in a
            payment transaction.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1FraudSignals'
        fraudPreventionAssessment:
          description: >-
            Output only. Assessment returned by Fraud Prevention when
            TransactionData is provided.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment
          readOnly: true
        assessmentEnvironment:
          description: >-
            Optional. The environment creating the assessment. This describes
            your environment (the system invoking CreateAssessment), NOT the
            environment of your user.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1AssessmentEnvironment
        privatePasswordLeakVerification:
          description: >-
            Optional. The private password leak verification field contains the
            parameters that are used to to check for leaks privately without
            sharing user credentials.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification
        accountDefenderAssessment:
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment
          description: >-
            Output only. Assessment returned by account defender when an account
            identifier is provided.
        firewallPolicyAssessment:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicyAssessment
          description: >-
            Output only. Assessment returned when firewall policies belonging to
            the project are evaluated using the field
            firewall_policy_evaluation.
          readOnly: true
        tokenProperties:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1TokenProperties'
          description: Output only. Properties of the provided event token.
          readOnly: true
        phoneFraudAssessment:
          readOnly: true
          description: >-
            Output only. Assessment returned when a site key, a token, and a
            phone number as `user_id` are provided. Account defender and SMS
            toll fraud protection need to be enabled.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1PhoneFraudAssessment
        riskAnalysis:
          description: Output only. The risk analysis result for the event being assessed.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1RiskAnalysis'
        name:
          type: string
          description: >-
            Output only. Identifier. The resource name for the Assessment in the
            format `projects/{project}/assessments/{assessment}`.
          readOnly: true
      type: object
      description: A reCAPTCHA Enterprise assessment resource.
      id: GoogleCloudRecaptchaenterpriseV1Assessment
    GoogleCloudRecaptchaenterpriseV1TokenProperties:
      description: Properties of the provided event token.
      type: object
      properties:
        invalidReason:
          enumDescriptions:
            - Default unspecified type.
            - If the failure reason was not accounted for.
            - The provided user verification token was malformed.
            - The user verification token had expired.
            - The user verification had already been seen.
            - The user verification token was not present.
            - >-
              A retriable error (such as network failure) occurred on the
              browser. Could easily be simulated by an attacker.
          readOnly: true
          description: Output only. Reason associated with the response when valid = false.
          enum:
            - INVALID_REASON_UNSPECIFIED
            - UNKNOWN_INVALID_REASON
            - MALFORMED
            - EXPIRED
            - DUPE
            - MISSING
            - BROWSER_ERROR
          type: string
        hostname:
          description: >-
            Output only. The hostname of the page on which the token was
            generated (Web keys only).
          readOnly: true
          type: string
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: >-
            Output only. The timestamp corresponding to the generation of the
            token.
        valid:
          readOnly: true
          description: >-
            Output only. Whether the provided user response token is valid. When
            valid = false, the reason could be specified in invalid_reason or it
            could also be due to a user failing to solve a challenge or a
            sitekey mismatch (i.e the sitekey used to generate the token was
            different than the one specified in the assessment).
          type: boolean
        iosBundleId:
          type: string
          description: >-
            Output only. The ID of the iOS bundle with which the token was
            generated (iOS keys only).
          readOnly: true
        androidPackageName:
          readOnly: true
          type: string
          description: >-
            Output only. The name of the Android package with which the token
            was generated (Android keys only).
        action:
          type: string
          readOnly: true
          description: Output only. Action name provided at token generation.
      id: GoogleCloudRecaptchaenterpriseV1TokenProperties
    GoogleProtobufEmpty:
      properties: {}
      type: object
      id: GoogleProtobufEmpty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    GoogleCloudRecaptchaenterpriseV1FraudSignals:
      properties:
        cardSignals:
          description: >-
            Output only. Signals describing the payment card or cards used in
            this transaction.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FraudSignalsCardSignals
        userSignals:
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FraudSignalsUserSignals
          description: Output only. Signals describing the end user in this transaction.
      description: Fraud signals describing users and cards involved in the transaction.
      id: GoogleCloudRecaptchaenterpriseV1FraudSignals
      type: object
    GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment:
      properties:
        labels:
          type: array
          readOnly: true
          description: Output only. Labels for this request.
          items:
            type: string
            enumDescriptions:
              - Default unspecified type.
              - The request matches a known good profile for the user.
              - >-
                The request is potentially a suspicious login event and must be
                further verified either through multi-factor authentication or
                another system.
              - >-
                The request matched a profile that previously had suspicious
                account creation behavior. This can mean that this is a fake
                account.
              - >-
                The account in the request has a high number of related
                accounts. It does not necessarily imply that the account is bad
                but can require further investigation.
            enum:
              - ACCOUNT_DEFENDER_LABEL_UNSPECIFIED
              - PROFILE_MATCH
              - SUSPICIOUS_LOGIN_ACTIVITY
              - SUSPICIOUS_ACCOUNT_CREATION
              - RELATED_ACCOUNTS_NUMBER_HIGH
      description: Account defender risk assessment.
      type: object
      id: GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment
    GoogleCloudRecaptchaenterpriseV1Key:
      type: object
      description: >-
        A key used to identify and configure applications (web and/or mobile)
        that use reCAPTCHA Enterprise.
      properties:
        displayName:
          type: string
          description: >-
            Required. Human-readable display name of this key. Modifiable by
            user.
        name:
          description: >-
            Identifier. The resource name for the Key in the format
            `projects/{project}/keys/{key}`.
          type: string
        webSettings:
          description: Settings for keys that can be used by websites.
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1WebKeySettings'
        wafSettings:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1WafSettings'
          description: Optional. Settings for WAF
        testingOptions:
          description: Optional. Options for user acceptance testing.
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1TestingOptions'
        labels:
          additionalProperties:
            type: string
          description: >-
            Optional. See [Creating and managing labels]
            (https://cloud.google.com/recaptcha/docs/labels).
          type: object
        androidSettings:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1AndroidKeySettings
          description: Settings for keys that can be used by Android apps.
        expressSettings:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1ExpressKeySettings
          description: Settings for keys that can be used by reCAPTCHA Express.
        iosSettings:
          description: Settings for keys that can be used by iOS apps.
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1IOSKeySettings'
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: >-
            Output only. The timestamp corresponding to the creation of this
            key.
      id: GoogleCloudRecaptchaenterpriseV1Key
    GoogleCloudRecaptchaenterpriseV1ScoreMetrics:
      type: object
      id: GoogleCloudRecaptchaenterpriseV1ScoreMetrics
      properties:
        actionMetrics:
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1ScoreDistribution
          description: >-
            Action-based metrics. The map key is the action name which specified
            by the site owners at time of the "execute" client-side call.
          type: object
        overallMetrics:
          description: Aggregated score metrics for all traffic.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1ScoreDistribution
      description: Metrics related to scoring.
    GoogleCloudRecaptchaenterpriseV1FirewallActionAllowAction:
      description: An allow action continues processing a request unimpeded.
      id: GoogleCloudRecaptchaenterpriseV1FirewallActionAllowAction
      type: object
      properties: {}
    GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsRequest:
      id: >-
        GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsRequest
      properties:
        hashedAccountId:
          format: byte
          deprecated: true
          type: string
          description: >-
            Optional. Deprecated: use `account_id` instead. The unique stable
            hashed account identifier used to search connections. The identifier
            should correspond to a `hashed_account_id` provided in a previous
            `CreateAssessment` or `AnnotateAssessment` call. Either
            hashed_account_id or account_id must be set, but not both.
        pageToken:
          description: >-
            Optional. A page token, received from a previous
            `SearchRelatedAccountGroupMemberships` call. Provide this to
            retrieve the subsequent page. When paginating, all other parameters
            provided to `SearchRelatedAccountGroupMemberships` must match the
            call that provided the page token.
          type: string
        accountId:
          description: >-
            Optional. The unique stable account identifier used to search
            connections. The identifier should correspond to an `account_id`
            provided in a previous `CreateAssessment` or `AnnotateAssessment`
            call. Either hashed_account_id or account_id must be set, but not
            both.
          type: string
        pageSize:
          type: integer
          format: int32
          description: >-
            Optional. The maximum number of groups to return. The service might
            return fewer than this value. If unspecified, at most 50 groups are
            returned. The maximum value is 1000; values above 1000 are coerced
            to 1000.
      description: The request message to search related account group memberships.
      type: object
    GoogleCloudRecaptchaenterpriseV1ListFirewallPoliciesResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results. It is set to empty if no
            policies remain in results.
        firewallPolicies:
          description: Policy details.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicy
      description: Response to request to list firewall policies belonging to a project.
      type: object
      id: GoogleCloudRecaptchaenterpriseV1ListFirewallPoliciesResponse
    GoogleCloudRecaptchaenterpriseV1TransactionData:
      properties:
        value:
          format: double
          type: number
          description: >-
            Optional. The decimal value of the transaction in the specified
            currency.
        currencyCode:
          description: Optional. The currency code in ISO-4217 format.
          type: string
        merchants:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionDataUser
          type: array
          description: >-
            Optional. Information about the user or users fulfilling the
            transaction.
        transactionId:
          description: >-
            Unique identifier for the transaction. This custom identifier can be
            used to reference this transaction in the future, for example,
            labeling a refund or chargeback event. Two attempts at the same
            transaction should use the same transaction id.
          type: string
        cardBin:
          type: string
          description: >-
            Optional. The Bank Identification Number - generally the first 6 or
            8 digits of the card.
        billingAddress:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionDataAddress
          description: >-
            Optional. Address associated with the payment method when
            applicable.
        user:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionDataUser
          description: >-
            Optional. Information about the user paying/initiating the
            transaction.
        paymentMethod:
          type: string
          description: >-
            Optional. The payment method for the transaction. The allowed values
            are: * credit-card * debit-card * gift-card * processor-{name} (If a
            third-party is used, for example, processor-paypal) * custom-{name}
            (If an alternative method is used, for example, custom-crypto)
        cardLastFour:
          type: string
          description: Optional. The last four digits of the card.
        items:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionDataItem
          type: array
          description: Optional. Items purchased in this transaction.
        shippingAddress:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionDataAddress
          description: >-
            Optional. Destination address if this transaction involves shipping
            a physical item.
        shippingValue:
          description: >-
            Optional. The value of shipping in the specified currency. 0 for
            free or no shipping.
          format: double
          type: number
        gatewayInfo:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionDataGatewayInfo
          description: >-
            Optional. Information about the payment gateway's response to the
            transaction.
      description: >-
        Transaction data associated with a payment protected by reCAPTCHA
        Enterprise.
      type: object
      id: GoogleCloudRecaptchaenterpriseV1TransactionData
    GoogleCloudRecaptchaenterpriseV1FirewallPolicyAssessment:
      description: Policy config assessment.
      type: object
      properties:
        error:
          description: >-
            Output only. If the processing of a policy config fails, an error is
            populated and the firewall_policy is left empty.
          $ref: '#/components/schemas/GoogleRpcStatus'
          readOnly: true
        firewallPolicy:
          description: >-
            Output only. The policy that matched the request. If more than one
            policy may match, this is the first match. If no policy matches the
            incoming request, the policy field is left empty.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicy'
      id: GoogleCloudRecaptchaenterpriseV1FirewallPolicyAssessment
    GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse:
      description: Empty response for AnnotateAssessment.
      properties: {}
      type: object
      id: GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse
    GoogleCloudRecaptchaenterpriseV1Metrics:
      properties:
        challengeMetrics:
          type: array
          description: >-
            Metrics are continuous and in order by dates, and in the granularity
            of day. Only challenge-based keys (CHECKBOX, INVISIBLE) have
            challenge-based data.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1ChallengeMetrics
        scoreMetrics:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1ScoreMetrics'
          description: >-
            Metrics are continuous and in order by dates, and in the granularity
            of day. All Key types should have score-based data.
        startTime:
          type: string
          description: Inclusive start time aligned to a day (UTC).
          format: google-datetime
        name:
          readOnly: true
          description: >-
            Output only. Identifier. The name of the metrics, in the format
            `projects/{project}/keys/{key}/metrics`.
          type: string
      id: GoogleCloudRecaptchaenterpriseV1Metrics
      description: Metrics for a single Key.
      type: object
    GoogleCloudRecaptchaenterpriseV1FirewallActionSubstituteAction:
      type: object
      properties:
        path:
          type: string
          description: >-
            Optional. The address to redirect to. The target is a relative path
            in the current host. Example: "/blog/404.html".
      id: GoogleCloudRecaptchaenterpriseV1FirewallActionSubstituteAction
      description: >-
        A substitute action transparently serves a different page than the one
        requested.
    GoogleCloudRecaptchaenterpriseV1AndroidKeySettings:
      properties:
        supportNonGoogleAppStoreDistribution:
          type: boolean
          description: >-
            Optional. Set to true for keys that are used in an Android
            application that is available for download in app stores in addition
            to the Google Play Store.
        allowedPackageNames:
          type: array
          items:
            type: string
          description: >-
            Optional. Android package names of apps allowed to use the key.
            Example: 'com.companyname.appname'
        allowAllPackageNames:
          description: Optional. If set to true, allowed_package_names are not enforced.
          type: boolean
      type: object
      id: GoogleCloudRecaptchaenterpriseV1AndroidKeySettings
      description: Settings specific to keys that can be used by Android apps.
    GoogleCloudRecaptchaenterpriseV1RemoveIpOverrideRequest:
      type: object
      properties:
        ipOverrideData:
          description: Required. IP override to be removed from the key.
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1IpOverrideData'
      id: GoogleCloudRecaptchaenterpriseV1RemoveIpOverrideRequest
      description: The removeIpOverride request message.
    GoogleCloudRecaptchaenterpriseV1ReorderFirewallPoliciesRequest:
      properties:
        names:
          items:
            type: string
          type: array
          description: >-
            Required. A list containing all policy names, in the new order. Each
            name is in the format
            `projects/{project}/firewallpolicies/{firewallpolicy}`.
      id: GoogleCloudRecaptchaenterpriseV1ReorderFirewallPoliciesRequest
      description: The reorder firewall policies request message.
      type: object
    GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest:
      properties:
        transactionEvent:
          description: >-
            Optional. If the assessment is part of a payment transaction,
            provide details on payment lifecycle events that occur in the
            transaction.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionEvent
        reasons:
          type: array
          items:
            enumDescriptions:
              - Default unspecified reason.
              - >-
                Indicates that the transaction had a chargeback issued with no
                other details. When possible, specify the type by using
                CHARGEBACK_FRAUD or CHARGEBACK_DISPUTE instead.
              - >-
                Indicates that the transaction had a chargeback issued related
                to an alleged unauthorized transaction from the cardholder's
                perspective (for example, the card number was stolen).
              - >-
                Indicates that the transaction had a chargeback issued related
                to the cardholder having provided their card details but
                allegedly not being satisfied with the purchase (for example,
                misrepresentation, attempted cancellation).
              - >-
                Indicates that the completed payment transaction was refunded by
                the seller.
              - >-
                Indicates that the completed payment transaction was determined
                to be fraudulent by the seller, and was cancelled and refunded
                as a result.
              - >-
                Indicates that the payment transaction was accepted, and the
                user was charged.
              - >-
                Indicates that the payment transaction was declined, for example
                due to invalid card details.
              - >-
                Indicates the transaction associated with the assessment is
                suspected of being fraudulent based on the payment method,
                billing details, shipping address or other transaction
                information.
              - >-
                Indicates that the user was served a 2FA challenge. An old
                assessment with `ENUM_VALUES.INITIATED_TWO_FACTOR` reason that
                has not been overwritten with `PASSED_TWO_FACTOR` is treated as
                an abandoned 2FA flow. This is equivalent to
                `FAILED_TWO_FACTOR`.
              - Indicates that the user passed a 2FA challenge.
              - Indicates that the user failed a 2FA challenge.
              - Indicates the user provided the correct password.
              - Indicates the user provided an incorrect password.
              - >-
                Indicates that the user sent unwanted and abusive messages to
                other users of the platform, such as spam, scams, phishing, or
                social engineering.
            type: string
            enum:
              - REASON_UNSPECIFIED
              - CHARGEBACK
              - CHARGEBACK_FRAUD
              - CHARGEBACK_DISPUTE
              - REFUND
              - REFUND_FRAUD
              - TRANSACTION_ACCEPTED
              - TRANSACTION_DECLINED
              - PAYMENT_HEURISTICS
              - INITIATED_TWO_FACTOR
              - PASSED_TWO_FACTOR
              - FAILED_TWO_FACTOR
              - CORRECT_PASSWORD
              - INCORRECT_PASSWORD
              - SOCIAL_SPAM
          description: Optional. Reasons for the annotation that are assigned to the event.
        accountId:
          type: string
          description: >-
            Optional. A stable account identifier to apply to the assessment.
            This is an alternative to setting `account_id` in
            `CreateAssessment`, for example when a stable account identifier is
            not yet known in the initial request.
        hashedAccountId:
          type: string
          description: >-
            Optional. A stable hashed account identifier to apply to the
            assessment. This is an alternative to setting `hashed_account_id` in
            `CreateAssessment`, for example when a stable account identifier is
            not yet known in the initial request.
          format: byte
        annotation:
          enumDeprecated:
            - false
            - false
            - false
            - true
            - true
          enum:
            - ANNOTATION_UNSPECIFIED
            - LEGITIMATE
            - FRAUDULENT
            - PASSWORD_CORRECT
            - PASSWORD_INCORRECT
          type: string
          description: >-
            Optional. The annotation that is assigned to the Event. This field
            can be left empty to provide reasons that apply to an event without
            concluding whether the event is legitimate or fraudulent.
          enumDescriptions:
            - Default unspecified type.
            - Provides information that the event turned out to be legitimate.
            - Provides information that the event turned out to be fraudulent.
            - >-
              Provides information that the event was related to a login event
              in which the user typed the correct password. Deprecated, prefer
              indicating CORRECT_PASSWORD through the reasons field instead.
            - >-
              Provides information that the event was related to a login event
              in which the user typed the incorrect password. Deprecated, prefer
              indicating INCORRECT_PASSWORD through the reasons field instead.
      type: object
      description: The request message to annotate an Assessment.
      id: GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest
    GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupMembershipsResponse:
      type: object
      description: The response to a `ListRelatedAccountGroupMemberships` call.
      id: >-
        GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupMembershipsResponse
      properties:
        relatedAccountGroupMemberships:
          description: The memberships listed by the query.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership
          type: array
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
    GoogleCloudRecaptchaenterpriseV1ListKeysResponse:
      description: Response to request to list keys in a project.
      properties:
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results. It is set to empty if no
            keys remain in results.
        keys:
          description: Key details.
          items:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
          type: array
      type: object
      id: GoogleCloudRecaptchaenterpriseV1ListKeysResponse
    GoogleCloudRecaptchaenterpriseV1ExpressKeySettings:
      id: GoogleCloudRecaptchaenterpriseV1ExpressKeySettings
      properties: {}
      type: object
      description: Settings specific to keys that can be used for reCAPTCHA Express.
    GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment:
      type: object
      properties:
        behavioralTrustVerdict:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentBehavioralTrustVerdict
          description: Output only. Assessment of this transaction for behavioral trust.
          readOnly: true
        stolenInstrumentVerdict:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentStolenInstrumentVerdict
          description: >-
            Output only. Assessment of this transaction for risk of a stolen
            instrument.
          readOnly: true
        transactionRisk:
          readOnly: true
          format: float
          description: >-
            Output only. Probability of this transaction being fraudulent.
            Summarizes the combined risk of attack vectors below. Values are
            from 0.0 (lowest) to 1.0 (highest).
          type: number
        cardTestingVerdict:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentCardTestingVerdict
          description: >-
            Output only. Assessment of this transaction for risk of being part
            of a card testing attack.
          readOnly: true
      id: GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment
      description: Assessment for Fraud Prevention.
    GoogleCloudRecaptchaenterpriseV1RelatedAccountGroup:
      properties:
        name:
          type: string
          description: >-
            Required. Identifier. The resource name for the related account
            group in the format
            `projects/{project}/relatedaccountgroups/{related_account_group}`.
      type: object
      id: GoogleCloudRecaptchaenterpriseV1RelatedAccountGroup
      description: A group of related accounts.
    GoogleCloudRecaptchaenterpriseV1WebKeySettings:
      type: object
      description: Settings specific to keys that can be used by websites.
      id: GoogleCloudRecaptchaenterpriseV1WebKeySettings
      properties:
        challengeSecurityPreference:
          enumDescriptions:
            - Default type that indicates this enum hasn't been specified.
            - Key tends to show fewer and easier challenges.
            - Key tends to show balanced (in amount and difficulty) challenges.
            - Key tends to show more and harder challenges.
          description: >-
            Optional. Settings for the frequency and difficulty at which this
            key triggers captcha challenges. This should only be specified for
            IntegrationTypes CHECKBOX and INVISIBLE and SCORE_AND_CHALLENGE.
          type: string
          enum:
            - CHALLENGE_SECURITY_PREFERENCE_UNSPECIFIED
            - USABILITY
            - BALANCE
            - SECURITY
        allowAllDomains:
          type: boolean
          description: Optional. If set to true, it means allowed_domains are not enforced.
        allowAmpTraffic:
          description: >-
            Optional. If set to true, the key can be used on AMP (Accelerated
            Mobile Pages) websites. This is supported only for the SCORE
            integration type.
          type: boolean
        integrationType:
          enumDescriptions:
            - >-
              Default type that indicates this enum hasn't been specified. This
              is not a valid IntegrationType, one of the other types must be
              specified instead.
            - >-
              Only used to produce scores. It doesn't display the "I'm not a
              robot" checkbox and never shows captcha challenges.
            - >-
              Displays the "I'm not a robot" checkbox and may show captcha
              challenges after it is checked.
            - >-
              Doesn't display the "I'm not a robot" checkbox, but may show
              captcha challenges after risk analysis.
          description: Required. Describes how this key is integrated with the website.
          type: string
          enum:
            - INTEGRATION_TYPE_UNSPECIFIED
            - SCORE
            - CHECKBOX
            - INVISIBLE
        allowedDomains:
          type: array
          items:
            type: string
          description: >-
            Optional. Domains or subdomains of websites allowed to use the key.
            All subdomains of an allowed domain are automatically allowed. A
            valid domain requires a host and must not include any path, port,
            query or fragment. Examples: 'example.com' or
            'subdomain.example.com'
    GoogleCloudRecaptchaenterpriseV1AppleDeveloperId:
      type: object
      properties:
        keyId:
          type: string
          description: Required. The Apple developer key ID (10-character string).
        privateKey:
          description: >-
            Required. Input only. A private key (downloaded as a text file with
            a .p8 file extension) generated for your Apple Developer account.
            Ensure that Apple DeviceCheck is enabled for the private key.
          type: string
        teamId:
          description: >-
            Required. The Apple team ID (10-character string) owning the
            provisioning profile used to build your application.
          type: string
      id: GoogleCloudRecaptchaenterpriseV1AppleDeveloperId
      description: >-
        Contains fields that are required to perform Apple-specific integrity
        checks.
    GoogleCloudRecaptchaenterpriseV1TransactionDataGatewayInfo:
      properties:
        name:
          type: string
          description: >-
            Optional. Name of the gateway service (for example, stripe, square,
            paypal).
        cvvResponseCode:
          type: string
          description: >-
            Optional. CVV response code from the gateway (available only when
            reCAPTCHA Enterprise is called after authorization).
        avsResponseCode:
          description: >-
            Optional. AVS response code from the gateway (available only when
            reCAPTCHA Enterprise is called after authorization).
          type: string
        gatewayResponseCode:
          type: string
          description: >-
            Optional. Gateway response code describing the state of the
            transaction.
      id: GoogleCloudRecaptchaenterpriseV1TransactionDataGatewayInfo
      description: Details about the transaction from the gateway.
      type: object
    GoogleCloudRecaptchaenterpriseV1FirewallPolicy:
      type: object
      description: >-
        A FirewallPolicy represents a single matching pattern and resulting
        actions to take.
      properties:
        name:
          description: >-
            Identifier. The resource name for the FirewallPolicy in the format
            `projects/{project}/firewallpolicies/{firewallpolicy}`.
          type: string
        condition:
          type: string
          description: >-
            Optional. A CEL (Common Expression Language) conditional expression
            that specifies if this policy applies to an incoming user request.
            If this condition evaluates to true and the requested path matched
            the path pattern, the associated actions should be executed by the
            caller. The condition string is checked for CEL syntax correctness
            on creation. For more information, see the [CEL
            spec](https://github.com/google/cel-spec) and its [language
            definition](https://github.com/google/cel-spec/blob/master/doc/langdef.md).
            A condition has a max length of 500 characters.
        description:
          description: >-
            Optional. A description of what this policy aims to achieve, for
            convenience purposes. The description can at most include 256 UTF-8
            characters.
          type: string
        actions:
          type: array
          description: >-
            Optional. The actions that the caller should take regarding user
            access. There should be at most one terminal action. A terminal
            action is any action that forces a response, such as `AllowAction`,
            `BlockAction` or `SubstituteAction`. Zero or more non-terminal
            actions such as `SetHeader` might be specified. A single policy can
            contain up to 16 actions.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallAction
        path:
          type: string
          description: >-
            Optional. The path for which this policy applies, specified as a
            glob pattern. For more information on glob, see the [manual
            page](https://man7.org/linux/man-pages/man7/glob.7.html). A path has
            a max length of 200 characters.
      id: GoogleCloudRecaptchaenterpriseV1FirewallPolicy
    GoogleCloudRecaptchaenterpriseV1RetrieveLegacySecretKeyResponse:
      description: >-
        Secret key is used only in legacy reCAPTCHA. It must be used in a 3rd
        party integration with legacy reCAPTCHA.
      type: object
      properties:
        legacySecretKey:
          description: >-
            The secret key (also known as shared secret) authorizes
            communication between your application backend and the reCAPTCHA
            Enterprise server to create an assessment. The secret key needs to
            be kept safe for security purposes.
          type: string
      id: GoogleCloudRecaptchaenterpriseV1RetrieveLegacySecretKeyResponse
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
  x-stackQL-resources:
    firewallpolicies:
      id: google.recaptchaenterprise.firewallpolicies
      name: firewallpolicies
      title: Firewallpolicies
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1firewallpolicies~1{firewallpoliciesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1firewallpolicies~1{firewallpoliciesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1firewallpolicies~1{firewallpoliciesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reorder:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1firewallpolicies:reorder/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1firewallpolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.firewallPolicies
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1firewallpolicies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/firewallpolicies/methods/get'
          - $ref: '#/components/x-stackQL-resources/firewallpolicies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/firewallpolicies/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/firewallpolicies/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/firewallpolicies/methods/delete'
    keys_metrics:
      id: google.recaptchaenterprise.keys_metrics
      name: keys_metrics
      title: Keys_metrics
      methods:
        get_metrics:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}~1metrics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/keys_metrics/methods/get_metrics'
        insert: []
        update: []
        replace: []
        delete: []
    keys_ip_override:
      id: google.recaptchaenterprise.keys_ip_override
      name: keys_ip_override
      title: Keys_ip_override
      methods:
        add_ip_override:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}:addIpOverride/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove_ip_override:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}:removeIpOverride/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/keys_ip_override/methods/add_ip_override
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/keys_ip_override/methods/remove_ip_override
    keys:
      id: google.recaptchaenterprise.keys
      name: keys
      title: Keys
      methods:
        migrate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}:migrate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.keys
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/keys/methods/get'
          - $ref: '#/components/x-stackQL-resources/keys/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/keys/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/keys/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/keys/methods/delete'
    keys_ip_overrides:
      id: google.recaptchaenterprise.keys_ip_overrides
      name: keys_ip_overrides
      title: Keys_ip_overrides
      methods:
        list_ip_overrides:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}:listIpOverrides/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.ipOverrides
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/keys_ip_overrides/methods/list_ip_overrides
        insert: []
        update: []
        replace: []
        delete: []
    keys_legacy_secret_key:
      id: google.recaptchaenterprise.keys_legacy_secret_key
      name: keys_legacy_secret_key
      title: Keys_legacy_secret_key
      methods:
        retrieve_legacy_secret_key:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}:retrieveLegacySecretKey/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/keys_legacy_secret_key/methods/retrieve_legacy_secret_key
        insert: []
        update: []
        replace: []
        delete: []
    assessments:
      id: google.recaptchaenterprise.assessments
      name: assessments
      title: Assessments
      methods:
        annotate:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1assessments~1{assessmentsId}:annotate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1assessments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/assessments/methods/create'
        update: []
        replace: []
        delete: []
    memberships:
      id: google.recaptchaenterprise.memberships
      name: memberships
      title: Memberships
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1relatedaccountgroups~1{relatedaccountgroupsId}~1memberships/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.relatedAccountGroupMemberships
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    relatedaccountgroups:
      id: google.recaptchaenterprise.relatedaccountgroups
      name: relatedaccountgroups
      title: Relatedaccountgroups
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1relatedaccountgroups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.relatedAccountGroups
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relatedaccountgroups/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    relatedaccountgroupmemberships:
      id: google.recaptchaenterprise.relatedaccountgroupmemberships
      name: relatedaccountgroupmemberships
      title: Relatedaccountgroupmemberships
      methods:
        search:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1relatedaccountgroupmemberships:search/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/projects/{projectsId}/firewallpolicies/{firewallpoliciesId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
    get:
      description: Returns the specified firewall policy.
      operationId: recaptchaenterprise.projects.firewallpolicies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicy
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: firewallpoliciesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the specified firewall policy.
      operationId: recaptchaenterprise.projects.firewallpolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicy
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: firewallpoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes the specified firewall policy.
      operationId: recaptchaenterprise.projects.firewallpolicies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: firewallpoliciesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/firewallpolicies:reorder:
    parameters: *ref_1
    post:
      description: Reorders all firewall policies.
      operationId: recaptchaenterprise.projects.firewallpolicies.reorder
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecaptchaenterpriseV1ReorderFirewallPoliciesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1ReorderFirewallPoliciesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/firewallpolicies:
    parameters: *ref_1
    get:
      description: Returns the list of all firewall policies that belong to a project.
      operationId: recaptchaenterprise.projects.firewallpolicies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1ListFirewallPoliciesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
    post:
      description: >-
        Creates a new FirewallPolicy, specifying conditions at which reCAPTCHA
        Enterprise actions can be executed. A project may have a maximum of 1000
        policies.
      operationId: recaptchaenterprise.projects.firewallpolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicy
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/keys/{keysId}/metrics:
    parameters: *ref_1
    get:
      description: >-
        Get some aggregated metrics for a Key. This data can be used to build
        dashboards.
      operationId: recaptchaenterprise.projects.keys.getMetrics
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Metrics'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/keys/{keysId}:addIpOverride:
    parameters: *ref_1
    post:
      description: >-
        Adds an IP override to a key. The following restrictions hold: * The
        maximum number of IP overrides per key is 100. * For any conflict (such
        as IP already exists or IP part of an existing IP range), an error is
        returned.
      operationId: recaptchaenterprise.projects.keys.addIpOverride
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecaptchaenterpriseV1AddIpOverrideRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1AddIpOverrideResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/keys/{keysId}:migrate:
    parameters: *ref_1
    post:
      description: >-
        Migrates an existing key from reCAPTCHA to reCAPTCHA Enterprise. Once a
        key is migrated, it can be used from either product. SiteVerify requests
        are billed as CreateAssessment calls. You must be authenticated as one
        of the current owners of the reCAPTCHA Key, and your user must have the
        reCAPTCHA Enterprise Admin IAM role in the destination project.
      operationId: recaptchaenterprise.projects.keys.migrate
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/keys/{keysId}:removeIpOverride:
    parameters: *ref_1
    post:
      description: >-
        Removes an IP override from a key. The following restrictions hold: * If
        the IP isn't found in an existing IP override, a `NOT_FOUND` error is
        returned. * If the IP is found in an existing IP override, but the
        override type does not match, a `NOT_FOUND` error is returned.
      operationId: recaptchaenterprise.projects.keys.removeIpOverride
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecaptchaenterpriseV1RemoveIpOverrideRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1RemoveIpOverrideResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/keys/{keysId}:
    parameters: *ref_1
    delete:
      description: Deletes the specified key.
      operationId: recaptchaenterprise.projects.keys.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
    get:
      description: Returns the specified key.
      operationId: recaptchaenterprise.projects.keys.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
    patch:
      description: Updates the specified key.
      operationId: recaptchaenterprise.projects.keys.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/keys/{keysId}:listIpOverrides:
    parameters: *ref_1
    get:
      description: Lists all IP overrides for a key.
      operationId: recaptchaenterprise.projects.keys.listIpOverrides
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1ListIpOverridesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/keys:
    parameters: *ref_1
    get:
      description: Returns the list of all keys that belong to a project.
      operationId: recaptchaenterprise.projects.keys.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1ListKeysResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new reCAPTCHA Enterprise key.
      operationId: recaptchaenterprise.projects.keys.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/keys/{keysId}:retrieveLegacySecretKey:
    parameters: *ref_1
    get:
      description: >-
        Returns the secret key related to the specified public key. You must use
        the legacy secret key only in a 3rd party integration with legacy
        reCAPTCHA.
      operationId: recaptchaenterprise.projects.keys.retrieveLegacySecretKey
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1RetrieveLegacySecretKeyResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/assessments/{assessmentsId}:annotate:
    parameters: *ref_1
    post:
      description: >-
        Annotates a previously created Assessment to provide additional
        information on whether the event turned out to be authentic or
        fraudulent.
      operationId: recaptchaenterprise.projects.assessments.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/assessments:
    parameters: *ref_1
    post:
      description: Creates an Assessment of the likelihood an event is legitimate.
      operationId: recaptchaenterprise.projects.assessments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Assessment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1Assessment
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/relatedaccountgroups/{relatedaccountgroupsId}/memberships:
    parameters: *ref_1
    get:
      description: Get memberships in a group of related accounts.
      operationId: recaptchaenterprise.projects.relatedaccountgroups.memberships.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupMembershipsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: relatedaccountgroupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/relatedaccountgroups:
    parameters: *ref_1
    get:
      description: List groups of related accounts.
      operationId: recaptchaenterprise.projects.relatedaccountgroups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/relatedaccountgroupmemberships:search:
    parameters: *ref_1
    post:
      description: Search group memberships related to a given account.
      operationId: recaptchaenterprise.projects.relatedaccountgroupmemberships.search
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
