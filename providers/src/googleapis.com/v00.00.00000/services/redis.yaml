openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Google Cloud Memorystore for Redis API
  description: Creates and manages Redis instances on the Google Cloud Platform.
  version: v1
  x-discovery-doc-revision: '20230804'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/memorystore/docs/redis/'
servers:
  - url: 'https://redis.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    NodeInfo:
      properties:
        zone:
          type: string
          description: Output only. Location of the node.
          readOnly: true
        id:
          description: 'Output only. Node identifying string. e.g. ''node-0'', ''node-1'''
          readOnly: true
          type: string
      id: NodeInfo
      type: object
      description: Node specific properties.
    Status:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        details:
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
      id: Status
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      properties: {}
      type: object
    ListLocationsResponse:
      id: ListLocationsResponse
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Location'
          type: array
      description: The response message for Locations.ListLocations.
      type: object
    MaintenancePolicy:
      type: object
      id: MaintenancePolicy
      description: Maintenance policy for an instance.
      properties:
        createTime:
          description: Output only. The time when the policy was created.
          format: google-datetime
          type: string
          readOnly: true
        updateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time when the policy was last updated.
        weeklyMaintenanceWindow:
          description: 'Optional. Maintenance window that is applied to resources covered by this policy. Minimum 1. For the current version, the maximum number of weekly_window is expected to be one.'
          type: array
          items:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
        description:
          description: Optional. Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512.
          type: string
    ExportInstanceRequest:
      properties:
        outputConfig:
          $ref: '#/components/schemas/OutputConfig'
          description: Required. Specify data to be exported.
      type: object
      description: Request for Export.
      id: ExportInstanceRequest
    Location:
      type: object
      description: A resource that represents a Google Cloud location.
      id: Location
      properties:
        displayName:
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
          type: string
        locationId:
          description: 'Resource ID for the region. For example: "us-east1".'
          type: string
        name:
          description: 'Full resource name for the region. For example: "projects/example-project/locations/us-east1".'
          type: string
        metadata:
          description: 'Output only. The set of available zones in the location. The map is keyed by the lowercase ID of each zone, as defined by Compute Engine. These keys can be specified in `location_id` or `alternative_location_id` fields when creating a Redis instance.'
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
    FailoverInstanceRequest:
      id: FailoverInstanceRequest
      description: Request for Failover.
      type: object
      properties:
        dataProtectionMode:
          enum:
            - DATA_PROTECTION_MODE_UNSPECIFIED
            - LIMITED_DATA_LOSS
            - FORCE_DATA_LOSS
          enumDescriptions:
            - Defaults to LIMITED_DATA_LOSS if a data protection mode is not specified.
            - 'Instance failover will be protected with data loss control. More specifically, the failover will only be performed if the current replication offset diff between primary and replica is under a certain threshold.'
            - Instance failover will be performed without data loss control.
          description: 'Optional. Available data protection modes that the user can choose. If it''s unspecified, data protection mode will be LIMITED_DATA_LOSS by default.'
          type: string
    PersistenceConfig:
      type: object
      properties:
        persistenceMode:
          enum:
            - PERSISTENCE_MODE_UNSPECIFIED
            - DISABLED
            - RDB
          description: 'Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.'
          enumDescriptions:
            - Not set.
            - 'Persistence is disabled for the instance, and any existing snapshots are deleted.'
            - RDB based Persistence is enabled.
          type: string
        rdbNextSnapshotTime:
          description: Output only. The next time that a snapshot attempt is scheduled to occur.
          readOnly: true
          format: google-datetime
          type: string
        rdbSnapshotStartTime:
          type: string
          description: 'Optional. Date and time that the first snapshot was/will be attempted, and to which future snapshots will be aligned. If not provided, the current time will be used.'
          format: google-datetime
        rdbSnapshotPeriod:
          enumDescriptions:
            - Not set.
            - Snapshot every 1 hour.
            - Snapshot every 6 hours.
            - Snapshot every 12 hours.
            - Snapshot every 24 hours.
          type: string
          enum:
            - SNAPSHOT_PERIOD_UNSPECIFIED
            - ONE_HOUR
            - SIX_HOURS
            - TWELVE_HOURS
            - TWENTY_FOUR_HOURS
          description: 'Optional. Period between RDB snapshots. Snapshots will be attempted every period starting from the provided snapshot start time. For example, a start time of 01/01/2033 06:45 and SIX_HOURS snapshot period will do nothing until 01/01/2033, and then trigger snapshots every day at 06:45, 12:45, 18:45, and 00:45 the next day, and so on. If not provided, TWENTY_FOUR_HOURS will be used as default.'
      description: Configuration of the persistence functionality.
      id: PersistenceConfig
    GoogleCloudRedisV1OperationMetadata:
      id: GoogleCloudRedisV1OperationMetadata
      description: Represents the v1 metadata of the long-running operation.
      properties:
        cancelRequested:
          description: Specifies if cancellation was requested for the operation.
          type: boolean
        verb:
          description: Operation verb.
          type: string
        apiVersion:
          type: string
          description: API version.
        endTime:
          format: google-datetime
          description: End timestamp.
          type: string
        target:
          type: string
          description: Operation target.
        statusDetail:
          description: Operation status details.
          type: string
        createTime:
          description: Creation timestamp.
          format: google-datetime
          type: string
      type: object
    ImportInstanceRequest:
      type: object
      properties:
        inputConfig:
          description: Required. Specify data to be imported.
          $ref: '#/components/schemas/InputConfig'
      description: Request for Import.
      id: ImportInstanceRequest
    GoogleCloudRedisV1ZoneMetadata:
      properties: {}
      id: GoogleCloudRedisV1ZoneMetadata
      type: object
      description: Defines specific information for a particular zone. Currently empty and reserved for future use only.
    Operation:
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
      properties:
        response:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: '{ `createTime`: The time the operation was created. `endTime`: The time the operation finished running. `target`: Server-defined resource path for the target of the operation. `verb`: Name of the verb executed by the operation. `statusDetail`: Human-readable status of the operation, if any. `cancelRequested`: Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. `apiVersion`: API version used to start the operation. }'
          type: object
    ListOperationsResponse:
      type: object
      id: ListOperationsResponse
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          description: A list of operations that matches the specified filter in the request.
          type: array
      description: The response message for Operations.ListOperations.
    InstanceAuthString:
      type: object
      properties:
        authString:
          type: string
          description: AUTH string set on the instance.
      id: InstanceAuthString
      description: Instance AUTH string details.
    GoogleCloudRedisV1LocationMetadata:
      type: object
      description: This location metadata represents additional configuration options for a given location where a Redis instance may be created. All fields are output only. It is returned as content of the `google.cloud.location.Location.metadata` field.
      id: GoogleCloudRedisV1LocationMetadata
      properties:
        availableZones:
          description: 'Output only. The set of available zones in the location. The map is keyed by the lowercase ID of each zone, as defined by GCE. These keys can be specified in `location_id` or `alternative_location_id` fields when creating a Redis instance.'
          type: object
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudRedisV1ZoneMetadata'
    RescheduleMaintenanceRequest:
      id: RescheduleMaintenanceRequest
      type: object
      description: Request for RescheduleMaintenance.
      properties:
        rescheduleType:
          enumDescriptions:
            - Not set.
            - If the user wants to schedule the maintenance to happen now.
            - If the user wants to use the existing maintenance policy to find the next available window.
            - If the user wants to reschedule the maintenance to a specific time.
          type: string
          description: 'Required. If reschedule type is SPECIFIC_TIME, must set up schedule_time as well.'
          enum:
            - RESCHEDULE_TYPE_UNSPECIFIED
            - IMMEDIATE
            - NEXT_AVAILABLE_WINDOW
            - SPECIFIC_TIME
        scheduleTime:
          description: 'Optional. Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for example `2012-11-15T16:19:00.094Z`.'
          format: google-datetime
          type: string
    InputConfig:
      description: The input content
      type: object
      id: InputConfig
      properties:
        gcsSource:
          description: Google Cloud Storage location where input content is located.
          $ref: '#/components/schemas/GcsSource'
    TimeOfDay:
      type: object
      id: TimeOfDay
      properties:
        hours:
          format: int32
          description: 'Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.'
          type: integer
        nanos:
          description: 'Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.'
          type: integer
          format: int32
        minutes:
          type: integer
          format: int32
          description: Minutes of hour of day. Must be from 0 to 59.
        seconds:
          description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
      description: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
    Instance:
      type: object
      description: A Memorystore for Redis instance.
      id: Instance
      properties:
        name:
          description: 'Required. Unique name of the resource in this scope including project and location using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` Note: Redis instances are managed and addressed at regional level so location_id here refers to a GCP region; however, users may choose which specific zone (or collection of zones for cross-zone instances) an instance should be provisioned in. Refer to location_id and alternative_location_id fields for more details.'
          type: string
        redisConfigs:
          additionalProperties:
            type: string
          type: object
          description: 'Optional. Redis configuration parameters, according to http://redis.io/topics/config. Currently, the only supported parameters are: Redis version 3.2 and newer: * maxmemory-policy * notify-keyspace-events Redis version 4.0 and newer: * activedefrag * lfu-decay-time * lfu-log-factor * maxmemory-gb Redis version 5.0 and newer: * stream-node-max-bytes * stream-node-max-entries'
        readEndpoint:
          description: Output only. Hostname or IP address of the exposed readonly Redis endpoint. Standard tier only. Targets all healthy replica nodes in instance. Replication is asynchronous and replica nodes will exhibit some lag behind the primary. Write requests must target 'host'.
          readOnly: true
          type: string
        host:
          type: string
          description: Output only. Hostname or IP address of the exposed Redis endpoint used by clients to connect to the service.
          readOnly: true
        connectMode:
          enum:
            - CONNECT_MODE_UNSPECIFIED
            - DIRECT_PEERING
            - PRIVATE_SERVICE_ACCESS
          enumDescriptions:
            - Not set.
            - Connect via direct peering to the Memorystore for Redis hosted service.
            - 'Connect your Memorystore for Redis instance using Private Service Access. Private services access provides an IP address range for multiple Google Cloud services, including Memorystore.'
          description: 'Optional. The network connect mode of the Redis instance. If not provided, the connect mode defaults to DIRECT_PEERING.'
          type: string
        authorizedNetwork:
          description: 'Optional. The full name of the Google Compute Engine [network](https://cloud.google.com/vpc/docs/vpc) to which the instance is connected. If left unspecified, the `default` network will be used.'
          type: string
        currentLocationId:
          description: 'Output only. The current zone where the Redis primary node is located. In basic tier, this will always be the same as [location_id]. In standard tier, this can be the zone of any node in the instance.'
          readOnly: true
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: Resource labels to represent user provided metadata
        maintenanceVersion:
          type: string
          description: Optional. The self service update maintenance version. The version is date based such as "20210712_00_00".
        maintenancePolicy:
          $ref: '#/components/schemas/MaintenancePolicy'
          description: 'Optional. The maintenance policy for the instance. If not provided, maintenance events can be performed at any time.'
        readEndpointPort:
          format: int32
          type: integer
          readOnly: true
          description: Output only. The port number of the exposed readonly redis endpoint. Standard tier only. Write requests should target 'port'.
        alternativeLocationId:
          type: string
          description: 'Optional. If specified, at least one node will be provisioned in this zone in addition to the zone specified in location_id. Only applicable to standard tier. If provided, it must be a different zone from the one provided in [location_id]. Additional nodes beyond the first 2 will be placed in zones selected by the service.'
        authEnabled:
          description: Optional. Indicates whether OSS Redis AUTH is enabled for the instance. If set to "true" AUTH is enabled on the instance. Default value is "false" meaning AUTH is disabled.
          type: boolean
        persistenceConfig:
          $ref: '#/components/schemas/PersistenceConfig'
          description: Optional. Persistence configuration parameters
        readReplicasMode:
          type: string
          description: Optional. Read replicas mode for the instance. Defaults to READ_REPLICAS_DISABLED.
          enum:
            - READ_REPLICAS_MODE_UNSPECIFIED
            - READ_REPLICAS_DISABLED
            - READ_REPLICAS_ENABLED
          enumDescriptions:
            - 'If not set, Memorystore Redis backend will default to READ_REPLICAS_DISABLED.'
            - 'If disabled, read endpoint will not be provided and the instance cannot scale up or down the number of replicas.'
            - 'If enabled, read endpoint will be provided and the instance can scale up and down the number of replicas. Not valid for basic tier.'
        displayName:
          type: string
          description: An arbitrary and optional user-provided name for the instance.
        tier:
          enumDescriptions:
            - Not set.
            - 'BASIC tier: standalone instance'
            - 'STANDARD_HA tier: highly available primary/replica instances'
          description: Required. The service tier of the instance.
          type: string
          enum:
            - TIER_UNSPECIFIED
            - BASIC
            - STANDARD_HA
        locationId:
          description: 'Optional. The zone where the instance will be provisioned. If not provided, the service will choose a zone from the specified region for the instance. For standard tier, additional nodes will be added across multiple zones for protection against zonal failures. If specified, at least one node will be provisioned in this zone.'
          type: string
        nodes:
          readOnly: true
          description: Output only. Info per node.
          items:
            $ref: '#/components/schemas/NodeInfo'
          type: array
        createTime:
          type: string
          description: Output only. The time the instance was created.
          readOnly: true
          format: google-datetime
        maintenanceSchedule:
          readOnly: true
          $ref: '#/components/schemas/MaintenanceSchedule'
          description: Output only. Date and time of upcoming maintenance events which have been scheduled.
        serverCaCerts:
          type: array
          items:
            $ref: '#/components/schemas/TlsCertificate'
          description: Output only. List of server CA certificates for the instance.
          readOnly: true
        customerManagedKey:
          description: Optional. The KMS key reference that the customer provides when trying to create the instance.
          type: string
        redisVersion:
          type: string
          description: 'Optional. The version of Redis software. If not provided, latest supported version will be used. Currently, the supported values are: * `REDIS_3_2` for Redis 3.2 compatibility * `REDIS_4_0` for Redis 4.0 compatibility (default) * `REDIS_5_0` for Redis 5.0 compatibility * `REDIS_6_X` for Redis 6.x compatibility'
        transitEncryptionMode:
          description: 'Optional. The TLS mode of the Redis instance. If not provided, TLS is disabled for the instance.'
          type: string
          enumDescriptions:
            - Not set.
            - Client to Server traffic encryption enabled with server authentication.
            - TLS is disabled for the instance.
          enum:
            - TRANSIT_ENCRYPTION_MODE_UNSPECIFIED
            - SERVER_AUTHENTICATION
            - DISABLED
        secondaryIpRange:
          description: 'Optional. Additional IP range for node placement. Required when enabling read replicas on an existing instance. For DIRECT_PEERING mode value must be a CIDR range of size /28, or "auto". For PRIVATE_SERVICE_ACCESS mode value must be the name of an allocated address range associated with the private service access connection, or "auto".'
          type: string
        suspensionReasons:
          items:
            type: string
            enumDescriptions:
              - Not set.
              - Something wrong with the CMEK key provided by customer.
            enum:
              - SUSPENSION_REASON_UNSPECIFIED
              - CUSTOMER_MANAGED_KEY_ISSUE
          type: array
          description: Optional. reasons that causes instance in "SUSPENDED" state.
        statusMessage:
          description: 'Output only. Additional information about the current status of this instance, if available.'
          type: string
          readOnly: true
        persistenceIamIdentity:
          readOnly: true
          description: 'Output only. Cloud IAM identity used by import / export operations to transfer data to/from Cloud Storage. Format is "serviceAccount:". The value may change over time for a given instance so should be checked before each import/export operation.'
          type: string
        memorySizeGb:
          description: Required. Redis memory size in GiB.
          type: integer
          format: int32
        availableMaintenanceVersions:
          description: Optional. The available maintenance versions that an instance could update to.
          items:
            type: string
          type: array
        port:
          description: Output only. The port number of the exposed Redis endpoint.
          format: int32
          type: integer
          readOnly: true
        state:
          type: string
          readOnly: true
          enumDescriptions:
            - Not set.
            - Redis instance is being created.
            - Redis instance has been created and is fully usable.
            - Redis instance configuration is being updated. Certain kinds of updates may cause the instance to become unusable while the update is in progress.
            - Redis instance is being deleted.
            - Redis instance is being repaired and may be unusable.
            - Maintenance is being performed on this Redis instance.
            - Redis instance is importing data (availability may be affected).
            - Redis instance is failing over (availability may be affected).
          description: Output only. The current state of this instance.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - UPDATING
            - DELETING
            - REPAIRING
            - MAINTENANCE
            - IMPORTING
            - FAILING_OVER
        replicaCount:
          format: int32
          type: integer
          description: 'Optional. The number of replica nodes. The valid range for the Standard Tier with read replicas enabled is [1-5] and defaults to 2. If read replicas are not enabled for a Standard Tier instance, the only valid value is 1 and the default is 1. The valid value for basic tier is 0 and the default is also 0.'
        reservedIpRange:
          type: string
          description: 'Optional. For DIRECT_PEERING mode, the CIDR range of internal addresses that are reserved for this instance. Range must be unique and non-overlapping with existing subnets in an authorized network. For PRIVATE_SERVICE_ACCESS mode, the name of one allocated IP address ranges associated with this private service access connection. If not provided, the service will choose an unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29. For READ_REPLICAS_ENABLED the default block size is /28.'
    TlsCertificate:
      type: object
      id: TlsCertificate
      description: TlsCertificate Resource
      properties:
        expireTime:
          description: 'Output only. The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2020-05-18T00:00:00.094Z`.'
          type: string
          format: google-datetime
          readOnly: true
        createTime:
          description: 'Output only. The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2020-05-18T00:00:00.094Z`.'
          type: string
          format: google-datetime
          readOnly: true
        cert:
          description: PEM representation.
          type: string
        serialNumber:
          description: 'Serial number, as extracted from the certificate.'
          type: string
        sha1Fingerprint:
          type: string
          description: Sha1 Fingerprint of the certificate.
    ReconciliationOperationMetadata:
      properties:
        exclusiveAction:
          type: string
          enum:
            - UNKNOWN_REPAIR_ACTION
            - DELETE
            - RETRY
          enumDescriptions:
            - Unknown repair action.
            - 'The resource has to be deleted. When using this bit, the CLH should fail the operation. DEPRECATED. Instead use DELETE_RESOURCE OperationSignal in SideChannel.'
            - This resource could not be repaired but the repair should be tried again at a later time. This can happen if there is a dependency that needs to be resolved first- e.g. if a parent resource must be repaired before a child resource.
          enumDeprecated:
            - false
            - true
            - false
          description: Excluisive action returned by the CLH.
        deleteResource:
          deprecated: true
          description: DEPRECATED. Use exclusive_action instead.
          type: boolean
      type: object
      description: Operation metadata returned by the CLH during resource state reconciliation.
      id: ReconciliationOperationMetadata
    WeeklyMaintenanceWindow:
      type: object
      description: Time window in which disruptive maintenance updates occur. Non-disruptive updates can occur inside or outside this window.
      id: WeeklyMaintenanceWindow
      properties:
        day:
          type: string
          description: Required. The day of week that maintenance updates occur.
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        startTime:
          description: Required. Start time of the window in UTC time.
          $ref: '#/components/schemas/TimeOfDay'
        duration:
          type: string
          description: Output only. Duration of the maintenance window. The current window is fixed at 1 hour.
          readOnly: true
          format: google-duration
    UpgradeInstanceRequest:
      id: UpgradeInstanceRequest
      properties:
        redisVersion:
          description: Required. Specifies the target version of Redis software to upgrade to.
          type: string
      description: Request for UpgradeInstance.
      type: object
    GcsSource:
      id: GcsSource
      description: The Cloud Storage location for the input content
      properties:
        uri:
          type: string
          description: 'Required. Source data URI. (e.g. ''gs://my_bucket/my_object'').'
      type: object
    MaintenanceSchedule:
      properties:
        scheduleDeadlineTime:
          type: string
          description: 'Output only. The deadline that the maintenance schedule start time can not go beyond, including reschedule.'
          format: google-datetime
          readOnly: true
        canReschedule:
          description: 'If the scheduled maintenance can be rescheduled, default is true.'
          deprecated: true
          type: boolean
        endTime:
          readOnly: true
          description: Output only. The end time of any upcoming scheduled maintenance for this instance.
          type: string
          format: google-datetime
        startTime:
          readOnly: true
          format: google-datetime
          description: Output only. The start time of any upcoming scheduled maintenance for this instance.
          type: string
      type: object
      description: 'Upcoming maintenance schedule. If no maintenance is scheduled, fields are not populated.'
      id: MaintenanceSchedule
    GcsDestination:
      properties:
        uri:
          description: 'Required. Data destination URI (e.g. ''gs://my_bucket/my_object''). Existing files will be overwritten.'
          type: string
      description: The Cloud Storage location for the output content
      type: object
      id: GcsDestination
    OutputConfig:
      description: The output content
      type: object
      id: OutputConfig
      properties:
        gcsDestination:
          $ref: '#/components/schemas/GcsDestination'
          description: Google Cloud Storage destination for output content.
    ListInstancesResponse:
      description: Response for ListInstances.
      id: ListInstancesResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
        instances:
          items:
            $ref: '#/components/schemas/Instance'
          type: array
          description: 'A list of Redis instances in the project in the specified location, or across all locations. If the `location_id` in the parent field of the request is "-", all regions available to the project are queried, and the results aggregated. If in such an aggregated query a location is unavailable, a placeholder Redis entry is included in the response with the `name` field set to a value of the form `projects/{project_id}/locations/{location_id}/instances/`- and the `status` field set to ERROR and `status_message` field set to "location not available for ListInstances".'
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
  x-stackQL-resources:
    operations:
      id: google.redis.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    instances:
      id: google.redis.instances
      name: instances
      title: Instances
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        failover:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:failover/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.instances
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upgrade:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:upgrade/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        import:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:import/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:export/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reschedule_maintenance:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:rescheduleMaintenance/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/instances/methods/delete'
    instances_auth_string:
      id: google.redis.instances_auth_string
      name: instances_auth_string
      title: Instances Auth String
      methods:
        get_auth_string:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1authString/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances_auth_string/methods/get_auth_string'
        insert: []
        update: []
        delete: []
    locations:
      id: google.redis.locations
      name: locations
      title: Locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: &ref_1
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: redis.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: redis.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: redis.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: redis.projects.locations.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}':
    parameters: *ref_1
    get:
      description: Gets the details of a specific Redis instance.
      operationId: redis.projects.locations.instances.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a specific Redis instance. Instance stops serving and data is deleted.
      operationId: redis.projects.locations.instances.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: 'Updates the metadata and configuration of a specific Redis instance. Completed longrunning.Operation will contain the new instance object in the response field. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation.'
      operationId: redis.projects.locations.instances.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:failover':
    parameters: *ref_1
    post:
      description: Initiates a failover of the primary node to current replica node for a specific STANDARD tier Cloud Memorystore for Redis instance.
      operationId: redis.projects.locations.instances.failover
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailoverInstanceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: failover
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/instances':
    parameters: *ref_1
    get:
      description: 'Lists all Redis instances owned by a project in either the specified location (region) or all locations. The location should have the following format: * `projects/{project_id}/locations/{location_id}` If `location_id` is specified as `-` (wildcard), then all regions available to the project are queried, and the results are aggregated.'
      operationId: redis.projects.locations.instances.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.instances
    post:
      description: 'Creates a Redis instance based on the specified tier and memory size. By default, the instance is accessible from the project''s [default network](https://cloud.google.com/vpc/docs/vpc). The creation is executed asynchronously and callers may check the returned operation to track its progress. Once the operation is completed the Redis instance will be fully functional. Completed longrunning.Operation will contain the new instance object in the response field. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation.'
      operationId: redis.projects.locations.instances.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: instanceId
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:upgrade':
    parameters: *ref_1
    post:
      description: Upgrades Redis instance to the newer Redis version specified in the request.
      operationId: redis.projects.locations.instances.upgrade
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeInstanceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: upgrade
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:import':
    parameters: *ref_1
    post:
      description: 'Import a Redis RDB snapshot file from Cloud Storage into a Redis instance. Redis may stop serving during this operation. Instance state will be IMPORTING for entire operation. When complete, the instance will contain only data from the imported file. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation.'
      operationId: redis.projects.locations.instances.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportInstanceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: import
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/authString':
    parameters: *ref_1
    get:
      description: Gets the AUTH string for a Redis instance. If AUTH is not enabled for the instance the response will be empty. This information is not included in the details returned to GetInstance.
      operationId: redis.projects.locations.instances.getAuthString
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceAuthString'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances_auth_string
      x-stackQL-method: get_auth_string
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:export':
    parameters: *ref_1
    post:
      description: 'Export Redis instance data into a Redis RDB format file in Cloud Storage. Redis will continue serving during this operation. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation.'
      operationId: redis.projects.locations.instances.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportInstanceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: export
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:rescheduleMaintenance':
    parameters: *ref_1
    post:
      description: Reschedule maintenance for a given instance in a given project and location.
      operationId: redis.projects.locations.instances.rescheduleMaintenance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RescheduleMaintenanceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: reschedule_maintenance
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: redis.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: redis.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
