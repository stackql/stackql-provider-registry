openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Cloud Memorystore for Redis API
  description: Creates and manages Redis instances on the Google Cloud Platform.
  version: v1
  x-discovery-doc-revision: '20250819'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/memorystore/docs/redis/
servers:
  - url: https://redis.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            { `createTime`: The time the operation was created. `endTime`: The
            time the operation finished running. `target`: Server-defined
            resource path for the target of the operation. `verb`: Name of the
            verb executed by the operation. `statusDetail`: Human-readable
            status of the operation, if any. `cancelRequested`: Identifies
            whether the user has requested cancellation of the operation.
            Operations that have successfully been cancelled have
            Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`. `apiVersion`: API version used to
            start the operation. }
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Full resource name for the region. For example:
            "projects/example-project/locations/us-east1".
          type: string
        locationId:
          description: 'Resource ID for the region. For example: "us-east1".'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Output only. The set of available zones in the location. The map is
            keyed by the lowercase ID of each zone, as defined by Compute
            Engine. These keys can be specified in `location_id` or
            `alternative_location_id` fields when creating a Redis instance.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    ListClustersResponse:
      id: ListClustersResponse
      description: Response for ListClusters.
      type: object
      properties:
        clusters:
          description: >-
            A list of Redis clusters in the project in the specified location,
            or across all locations. If the `location_id` in the parent field of
            the request is "-", all regions available to the project are
            queried, and the results aggregated. If in such an aggregated query
            a location is unavailable, a placeholder Redis entry is included in
            the response with the `name` field set to a value of the form
            `projects/{project_id}/locations/{location_id}/clusters/`- and the
            `status` field set to ERROR and `status_message` field set to
            "location not available for ListClusters".
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Cluster:
      id: Cluster
      description: A cluster instance.
      type: object
      properties:
        gcsSource:
          description: >-
            Optional. Backups stored in Cloud Storage buckets. The Cloud Storage
            buckets need to be the same region as the clusters. Read permission
            is required to import from the provided Cloud Storage objects.
          $ref: '#/components/schemas/GcsBackupSource'
        managedBackupSource:
          description: Optional. Backups generated and managed by memorystore service.
          $ref: '#/components/schemas/ManagedBackupSource'
        name:
          description: >-
            Required. Identifier. Unique name of the resource in this scope
            including project and location using the form:
            `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}`
          type: string
        createTime:
          description: >-
            Output only. The timestamp associated with the cluster creation
            request.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: >-
            Output only. The current state of this cluster. Can be CREATING,
            READY, UPDATING, DELETING and SUSPENDED
          readOnly: true
          type: string
          enumDescriptions:
            - Not set.
            - Redis cluster is being created.
            - Redis cluster has been created and is fully usable.
            - Redis cluster configuration is being updated.
            - Redis cluster is being deleted.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - UPDATING
            - DELETING
        uid:
          description: Output only. System assigned, unique identifier for the cluster.
          readOnly: true
          type: string
        replicaCount:
          description: Optional. The number of replica nodes per shard.
          type: integer
          format: int32
        authorizationMode:
          description: >-
            Optional. The authorization mode of the Redis cluster. If not
            provided, auth feature is disabled for the cluster.
          type: string
          enumDescriptions:
            - Not set.
            - IAM basic authorization mode
            - Authorization disabled mode
          enum:
            - AUTH_MODE_UNSPECIFIED
            - AUTH_MODE_IAM_AUTH
            - AUTH_MODE_DISABLED
        transitEncryptionMode:
          description: >-
            Optional. The in-transit encryption for the Redis cluster. If not
            provided, encryption is disabled for the cluster.
          type: string
          enumDescriptions:
            - In-transit encryption not set.
            - In-transit encryption disabled.
            - Use server managed encryption for in-transit encryption.
          enum:
            - TRANSIT_ENCRYPTION_MODE_UNSPECIFIED
            - TRANSIT_ENCRYPTION_MODE_DISABLED
            - TRANSIT_ENCRYPTION_MODE_SERVER_AUTHENTICATION
        sizeGb:
          description: >-
            Output only. Redis memory size in GB for the entire cluster rounded
            up to the next integer.
          readOnly: true
          type: integer
          format: int32
        shardCount:
          description: Optional. Number of shards for the Redis cluster.
          type: integer
          format: int32
        pscConfigs:
          description: >-
            Optional. Each PscConfig configures the consumer network where IPs
            will be designated to the cluster for client access through Private
            Service Connect Automation. Currently, only one PscConfig is
            supported.
          type: array
          items:
            $ref: '#/components/schemas/PscConfig'
        discoveryEndpoints:
          description: >-
            Output only. Endpoints created on each given network, for Redis
            clients to connect to the cluster. Currently only one discovery
            endpoint is supported.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DiscoveryEndpoint'
        pscConnections:
          description: >-
            Output only. The list of PSC connections that are auto-created
            through service connectivity automation.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PscConnection'
        stateInfo:
          description: >-
            Output only. Additional information about the current state of the
            cluster.
          readOnly: true
          $ref: '#/components/schemas/StateInfo'
        nodeType:
          description: >-
            Optional. The type of a redis node in the cluster. NodeType
            determines the underlying machine-type of a redis node.
          type: string
          enumDescriptions:
            - Node type unspecified
            - Redis shared core nano node_type.
            - Redis highmem medium node_type.
            - Redis highmem xlarge node_type.
            - Redis standard small node_type.
          enum:
            - NODE_TYPE_UNSPECIFIED
            - REDIS_SHARED_CORE_NANO
            - REDIS_HIGHMEM_MEDIUM
            - REDIS_HIGHMEM_XLARGE
            - REDIS_STANDARD_SMALL
        persistenceConfig:
          description: Optional. Persistence config (RDB, AOF) for the cluster.
          $ref: '#/components/schemas/ClusterPersistenceConfig'
        redisConfigs:
          description: >-
            Optional. Key/Value pairs of customer overrides for mutable Redis
            Configs
          type: object
          additionalProperties:
            type: string
        preciseSizeGb:
          description: >-
            Output only. Precise value of redis memory size in GB for the entire
            cluster.
          readOnly: true
          type: number
          format: double
        zoneDistributionConfig:
          description: >-
            Optional. This config will be used to determine how the customer
            wants us to distribute cluster resources within the region.
          $ref: '#/components/schemas/ZoneDistributionConfig'
        crossClusterReplicationConfig:
          description: Optional. Cross cluster replication config.
          $ref: '#/components/schemas/CrossClusterReplicationConfig'
        deletionProtectionEnabled:
          description: >-
            Optional. The delete operation will fail when the value is set to
            true.
          type: boolean
        maintenancePolicy:
          description: >-
            Optional. ClusterMaintenancePolicy determines when to allow or deny
            updates.
          $ref: '#/components/schemas/ClusterMaintenancePolicy'
        maintenanceSchedule:
          description: >-
            Output only. ClusterMaintenanceSchedule Output only Published
            maintenance schedule.
          readOnly: true
          $ref: '#/components/schemas/ClusterMaintenanceSchedule'
        satisfiesPzs:
          description: Optional. Output only. Reserved for future use.
          readOnly: true
          type: boolean
        satisfiesPzi:
          description: Optional. Output only. Reserved for future use.
          readOnly: true
          type: boolean
        pscServiceAttachments:
          description: Output only. Service attachment details to configure Psc connections
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PscServiceAttachment'
        clusterEndpoints:
          description: Optional. A list of cluster endpoints.
          type: array
          items:
            $ref: '#/components/schemas/ClusterEndpoint'
        simulateMaintenanceEvent:
          description: Optional. Input only. Simulate a maintenance event.
          type: boolean
        backupCollection:
          description: >-
            Optional. Output only. The backup collection full resource name.
            Example:
            projects/{project}/locations/{location}/backupCollections/{collection}
          readOnly: true
          type: string
        kmsKey:
          description: >-
            Optional. The KMS key used to encrypt the at-rest data of the
            cluster.
          type: string
        ondemandMaintenance:
          description: >-
            Optional. Input only. Ondemand maintenance for the cluster. This
            field can be used to trigger ondemand critical update on the
            cluster.
          deprecated: true
          type: boolean
        automatedBackupConfig:
          description: Optional. The automated backup config for the cluster.
          $ref: '#/components/schemas/AutomatedBackupConfig'
        encryptionInfo:
          description: >-
            Output only. Encryption information of the data at rest of the
            cluster.
          readOnly: true
          $ref: '#/components/schemas/EncryptionInfo'
        asyncClusterEndpointsDeletionEnabled:
          description: >-
            Optional. If true, cluster endpoints that are created and registered
            by customers can be deleted asynchronously. That is, such a cluster
            endpoint can be de-registered before the forwarding rules in the
            cluster endpoint are deleted.
          type: boolean
        allowFewerZonesDeployment:
          description: >-
            Optional. Immutable. Allows customers to specify if they are okay
            with deploying a multi-zone cluster in less than 3 zones. Once set,
            if there is a zonal outage during the cluster creation, the cluster
            will only be deployed in 2 zones, and stay within the 2 zones for
            its lifecycle.
          type: boolean
    GcsBackupSource:
      id: GcsBackupSource
      description: >-
        Backups stored in Cloud Storage buckets. The Cloud Storage buckets need
        to be the same region as the clusters.
      type: object
      properties:
        uris:
          description: >-
            Optional. URIs of the Cloud Storage objects to import. Example:
            gs://bucket1/object1, gs://bucket2/folder2/object2
          type: array
          items:
            type: string
    ManagedBackupSource:
      id: ManagedBackupSource
      description: Backups that generated and managed by memorystore.
      type: object
      properties:
        backup:
          description: >-
            Optional. Example:
            //redis.googleapis.com/projects/{project}/locations/{location}/backupCollections/{collection}/backups/{backup}
            A shorter version (without the prefix) of the backup name is also
            supported, like
            projects/{project}/locations/{location}/backupCollections/{collection}/backups/{backup_id}
            In this case, it assumes the backup is under redis.googleapis.com.
          type: string
    PscConfig:
      id: PscConfig
      type: object
      properties:
        network:
          description: >-
            Required. The network where the IP address of the discovery endpoint
            will be reserved, in the form of
            projects/{network_project}/global/networks/{network_id}.
          type: string
    DiscoveryEndpoint:
      id: DiscoveryEndpoint
      description: Endpoints on each network, for Redis clients to connect to the cluster.
      type: object
      properties:
        address:
          description: >-
            Output only. Address of the exposed Redis endpoint used by clients
            to connect to the service. The address could be either IP or
            hostname.
          readOnly: true
          type: string
        port:
          description: Output only. The port number of the exposed Redis endpoint.
          readOnly: true
          type: integer
          format: int32
        pscConfig:
          description: >-
            Output only. Customer configuration for where the endpoint is
            created and accessed from.
          readOnly: true
          $ref: '#/components/schemas/PscConfig'
    PscConnection:
      id: PscConnection
      description: Details of consumer resources in a PSC connection.
      type: object
      properties:
        port:
          description: >-
            Output only. port will only be set for Primary/Reader or Discovery
            endpoint.
          readOnly: true
          type: integer
          format: int32
        pscConnectionId:
          description: >-
            Required. The PSC connection id of the forwarding rule connected to
            the service attachment.
          type: string
        address:
          description: >-
            Required. The IP allocated on the consumer network for the PSC
            forwarding rule.
          type: string
        forwardingRule:
          description: >-
            Required. The URI of the consumer side forwarding rule. Example:
            projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.
          type: string
        projectId:
          description: >-
            Optional. Project ID of the consumer project where the forwarding
            rule is created in.
          type: string
        network:
          description: >-
            Required. The consumer network where the IP address resides, in the
            form of projects/{project_id}/global/networks/{network_id}.
          type: string
        serviceAttachment:
          description: >-
            Required. The service attachment which is the target of the PSC
            connection, in the form of
            projects/{project-id}/regions/{region}/serviceAttachments/{service-attachment-id}.
          type: string
        pscConnectionStatus:
          description: >-
            Output only. The status of the PSC connection. Please note that this
            value is updated periodically. To get the latest status of a PSC
            connection, follow
            https://cloud.google.com/vpc/docs/configure-private-service-connect-services#endpoint-details.
          readOnly: true
          type: string
          enumDescriptions:
            - PSC connection status is not specified.
            - The connection is active
            - Connection not found
          enum:
            - PSC_CONNECTION_STATUS_UNSPECIFIED
            - PSC_CONNECTION_STATUS_ACTIVE
            - PSC_CONNECTION_STATUS_NOT_FOUND
        connectionType:
          description: Output only. Type of the PSC connection.
          readOnly: true
          type: string
          enumDescriptions:
            - Cluster endpoint Type is not set
            - >-
              Cluster endpoint that will be used as for cluster topology
              discovery.
            - >-
              Cluster endpoint that will be used as primary endpoint to access
              primary.
            - >-
              Cluster endpoint that will be used as reader endpoint to access
              replicas.
          enum:
            - CONNECTION_TYPE_UNSPECIFIED
            - CONNECTION_TYPE_DISCOVERY
            - CONNECTION_TYPE_PRIMARY
            - CONNECTION_TYPE_READER
    StateInfo:
      id: StateInfo
      description: Represents additional information about the state of the cluster.
      type: object
      properties:
        updateInfo:
          description: >-
            Describes ongoing update on the cluster when cluster state is
            UPDATING.
          $ref: '#/components/schemas/UpdateInfo'
    UpdateInfo:
      id: UpdateInfo
      description: Represents information about an updating cluster.
      type: object
      properties:
        targetShardCount:
          description: Target number of shards for redis cluster
          type: integer
          format: int32
        targetReplicaCount:
          description: Target number of replica nodes per shard.
          type: integer
          format: int32
        targetNodeType:
          description: Target node type for redis cluster.
          type: string
          enumDescriptions:
            - Node type unspecified
            - Redis shared core nano node_type.
            - Redis highmem medium node_type.
            - Redis highmem xlarge node_type.
            - Redis standard small node_type.
          enum:
            - NODE_TYPE_UNSPECIFIED
            - REDIS_SHARED_CORE_NANO
            - REDIS_HIGHMEM_MEDIUM
            - REDIS_HIGHMEM_XLARGE
            - REDIS_STANDARD_SMALL
    ClusterPersistenceConfig:
      id: ClusterPersistenceConfig
      description: Configuration of the persistence functionality.
      type: object
      properties:
        mode:
          description: Optional. The mode of persistence.
          type: string
          enumDescriptions:
            - Not set.
            - Persistence is disabled, and any snapshot data is deleted.
            - RDB based persistence is enabled.
            - AOF based persistence is enabled.
          enum:
            - PERSISTENCE_MODE_UNSPECIFIED
            - DISABLED
            - RDB
            - AOF
        rdbConfig:
          description: >-
            Optional. RDB configuration. This field will be ignored if mode is
            not RDB.
          $ref: '#/components/schemas/RDBConfig'
        aofConfig:
          description: >-
            Optional. AOF configuration. This field will be ignored if mode is
            not AOF.
          $ref: '#/components/schemas/AOFConfig'
    RDBConfig:
      id: RDBConfig
      description: Configuration of the RDB based persistence.
      type: object
      properties:
        rdbSnapshotPeriod:
          description: Optional. Period between RDB snapshots.
          type: string
          enumDescriptions:
            - Not set.
            - One hour.
            - Six hours.
            - Twelve hours.
            - Twenty four hours.
          enum:
            - SNAPSHOT_PERIOD_UNSPECIFIED
            - ONE_HOUR
            - SIX_HOURS
            - TWELVE_HOURS
            - TWENTY_FOUR_HOURS
        rdbSnapshotStartTime:
          description: >-
            Optional. The time that the first snapshot was/will be attempted,
            and to which future snapshots will be aligned. If not provided, the
            current time will be used.
          type: string
          format: google-datetime
    AOFConfig:
      id: AOFConfig
      description: Configuration of the AOF based persistence.
      type: object
      properties:
        appendFsync:
          description: Optional. fsync configuration.
          type: string
          enumDescriptions:
            - 'Not set. Default: EVERYSEC'
            - >-
              Never fsync. Normally Linux will flush data every 30 seconds with
              this configuration, but it's up to the kernel's exact tuning.
            - >-
              fsync every second. Fast enough, and you may lose 1 second of data
              if there is a disaster
            - >-
              fsync every time new write commands are appended to the AOF. It
              has the best data loss protection at the cost of performance
          enum:
            - APPEND_FSYNC_UNSPECIFIED
            - 'NO'
            - EVERYSEC
            - ALWAYS
    ZoneDistributionConfig:
      id: ZoneDistributionConfig
      description: Zone distribution config for allocation of cluster resources.
      type: object
      properties:
        mode:
          description: >-
            Optional. The mode of zone distribution. Defaults to MULTI_ZONE,
            when not specified.
          type: string
          enumDescriptions:
            - 'Not Set. Default: MULTI_ZONE'
            - >-
              Distribute all resources across 3 zones picked at random, within
              the region.
            - >-
              Distribute all resources in a single zone. The zone field must be
              specified, when this mode is selected.
          enum:
            - ZONE_DISTRIBUTION_MODE_UNSPECIFIED
            - MULTI_ZONE
            - SINGLE_ZONE
        zone:
          description: >-
            Optional. When SINGLE ZONE distribution is selected, zone field
            would be used to allocate all resources in that zone. This is not
            applicable to MULTI_ZONE, and would be ignored for MULTI_ZONE
            clusters.
          type: string
    CrossClusterReplicationConfig:
      id: CrossClusterReplicationConfig
      description: Cross cluster replication config.
      type: object
      properties:
        clusterRole:
          description: Output only. The role of the cluster in cross cluster replication.
          readOnly: true
          type: string
          enumDescriptions:
            - Cluster role is not set. The behavior is equivalent to NONE.
            - >-
              This cluster does not participate in cross cluster replication. It
              is an independent cluster and does not replicate to or from any
              other clusters.
            - >-
              A cluster that allows both reads and writes. Any data written to
              this cluster is also replicated to the attached secondary
              clusters.
            - >-
              A cluster that allows only reads and replicates data from a
              primary cluster.
          enum:
            - CLUSTER_ROLE_UNSPECIFIED
            - NONE
            - PRIMARY
            - SECONDARY
        primaryCluster:
          description: >-
            Details of the primary cluster that is used as the replication
            source for this secondary cluster. This field is only set for a
            secondary cluster.
          $ref: '#/components/schemas/RemoteCluster'
        secondaryClusters:
          description: >-
            List of secondary clusters that are replicating from this primary
            cluster. This field is only set for a primary cluster.
          type: array
          items:
            $ref: '#/components/schemas/RemoteCluster'
        updateTime:
          description: >-
            Output only. The last time cross cluster replication config was
            updated.
          readOnly: true
          type: string
          format: google-datetime
        membership:
          description: >-
            Output only. An output only view of all the member clusters
            participating in the cross cluster replication. This view will be
            provided by every member cluster irrespective of its cluster
            role(primary or secondary). A primary cluster can provide
            information about all the secondary clusters replicating from it.
            However, a secondary cluster only knows about the primary cluster
            from which it is replicating. However, for scenarios, where the
            primary cluster is unavailable(e.g. regional outage), a GetCluster
            request can be sent to any other member cluster and this field will
            list all the member clusters participating in cross cluster
            replication.
          readOnly: true
          $ref: '#/components/schemas/Membership'
    RemoteCluster:
      id: RemoteCluster
      description: >-
        Details of the remote cluster associated with this cluster in a cross
        cluster replication setup.
      type: object
      properties:
        cluster:
          description: >-
            Output only. The full resource path of the remote cluster in the
            format: projects//locations//clusters/
          readOnly: true
          type: string
        uid:
          description: Output only. The unique identifier of the remote cluster.
          readOnly: true
          type: string
    Membership:
      id: Membership
      description: >-
        An output only view of all the member clusters participating in the
        cross cluster replication.
      type: object
      properties:
        primaryCluster:
          description: >-
            Output only. The primary cluster that acts as the source of
            replication for the secondary clusters.
          readOnly: true
          $ref: '#/components/schemas/RemoteCluster'
        secondaryClusters:
          description: >-
            Output only. The list of secondary clusters replicating from the
            primary cluster.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RemoteCluster'
    ClusterMaintenancePolicy:
      id: ClusterMaintenancePolicy
      description: Maintenance policy per cluster.
      type: object
      properties:
        createTime:
          description: >-
            Output only. The time when the policy was created i.e. Maintenance
            Window or Deny Period was assigned.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The time when the policy was updated i.e. Maintenance
            Window or Deny Period was updated.
          readOnly: true
          type: string
          format: google-datetime
        weeklyMaintenanceWindow:
          description: >-
            Optional. Maintenance window that is applied to resources covered by
            this policy. Minimum 1. For the current version, the maximum number
            of weekly_maintenance_window is expected to be one.
          type: array
          items:
            $ref: '#/components/schemas/ClusterWeeklyMaintenanceWindow'
    ClusterWeeklyMaintenanceWindow:
      id: ClusterWeeklyMaintenanceWindow
      description: Time window specified for weekly operations.
      type: object
      properties:
        day:
          description: >-
            Optional. Allows to define schedule that runs specified day of the
            week.
          type: string
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        startTime:
          description: Optional. Start time of the window in UTC.
          $ref: '#/components/schemas/TimeOfDay'
    TimeOfDay:
      id: TimeOfDay
      description: >-
        Represents a time of day. The date and time zone are either not
        significant or are specified elsewhere. An API may choose to allow leap
        seconds. Related types are google.type.Date and
        `google.protobuf.Timestamp`.
      type: object
      properties:
        hours:
          description: >-
            Hours of a day in 24 hour format. Must be greater than or equal to 0
            and typically must be less than or equal to 23. An API may choose to
            allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          description: >-
            Minutes of an hour. Must be greater than or equal to 0 and less than
            or equal to 59.
          type: integer
          format: int32
        seconds:
          description: >-
            Seconds of a minute. Must be greater than or equal to 0 and
            typically must be less than or equal to 59. An API may allow the
            value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: >-
            Fractions of seconds, in nanoseconds. Must be greater than or equal
            to 0 and less than or equal to 999,999,999.
          type: integer
          format: int32
    ClusterMaintenanceSchedule:
      id: ClusterMaintenanceSchedule
      description: Upcoming maintenance schedule.
      type: object
      properties:
        startTime:
          description: >-
            Output only. The start time of any upcoming scheduled maintenance
            for this instance.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: >-
            Output only. The end time of any upcoming scheduled maintenance for
            this instance.
          readOnly: true
          type: string
          format: google-datetime
    PscServiceAttachment:
      id: PscServiceAttachment
      description: >-
        Configuration of a service attachment of the cluster, for creating PSC
        connections.
      type: object
      properties:
        serviceAttachment:
          description: >-
            Output only. Service attachment URI which your self-created
            PscConnection should use as target
          readOnly: true
          type: string
        connectionType:
          description: >-
            Output only. Type of a PSC connection targeting this service
            attachment.
          readOnly: true
          type: string
          enumDescriptions:
            - Cluster endpoint Type is not set
            - >-
              Cluster endpoint that will be used as for cluster topology
              discovery.
            - >-
              Cluster endpoint that will be used as primary endpoint to access
              primary.
            - >-
              Cluster endpoint that will be used as reader endpoint to access
              replicas.
          enum:
            - CONNECTION_TYPE_UNSPECIFIED
            - CONNECTION_TYPE_DISCOVERY
            - CONNECTION_TYPE_PRIMARY
            - CONNECTION_TYPE_READER
    ClusterEndpoint:
      id: ClusterEndpoint
      description: >-
        ClusterEndpoint consists of PSC connections that are created as a group
        in each VPC network for accessing the cluster. In each group, there
        shall be one connection for each service attachment in the cluster.
      type: object
      properties:
        connections:
          description: >-
            Required. A group of PSC connections. They are created in the same
            VPC network, one for each service attachment in the cluster.
          type: array
          items:
            $ref: '#/components/schemas/ConnectionDetail'
    ConnectionDetail:
      id: ConnectionDetail
      description: Detailed information of each PSC connection.
      type: object
      properties:
        pscAutoConnection:
          description: >-
            Detailed information of a PSC connection that is created through
            service connectivity automation.
          $ref: '#/components/schemas/PscAutoConnection'
        pscConnection:
          description: >-
            Detailed information of a PSC connection that is created by the
            customer who owns the cluster.
          $ref: '#/components/schemas/PscConnection'
    PscAutoConnection:
      id: PscAutoConnection
      description: >-
        Details of consumer resources in a PSC connection that is created
        through Service Connectivity Automation.
      type: object
      properties:
        pscConnectionId:
          description: >-
            Output only. The PSC connection id of the forwarding rule connected
            to the service attachment.
          readOnly: true
          type: string
        address:
          description: >-
            Output only. The IP allocated on the consumer network for the PSC
            forwarding rule.
          readOnly: true
          type: string
        forwardingRule:
          description: >-
            Output only. The URI of the consumer side forwarding rule. Example:
            projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.
          readOnly: true
          type: string
        projectId:
          description: >-
            Required. The consumer project_id where the forwarding rule is
            created from.
          type: string
        network:
          description: >-
            Required. The consumer network where the IP address resides, in the
            form of projects/{project_id}/global/networks/{network_id}.
          type: string
        serviceAttachment:
          description: >-
            Output only. The service attachment which is the target of the PSC
            connection, in the form of
            projects/{project-id}/regions/{region}/serviceAttachments/{service-attachment-id}.
          readOnly: true
          type: string
        pscConnectionStatus:
          description: >-
            Output only. The status of the PSC connection. Please note that this
            value is updated periodically. Please use Private Service Connect
            APIs for the latest status.
          readOnly: true
          type: string
          enumDescriptions:
            - PSC connection status is not specified.
            - The connection is active
            - Connection not found
          enum:
            - PSC_CONNECTION_STATUS_UNSPECIFIED
            - PSC_CONNECTION_STATUS_ACTIVE
            - PSC_CONNECTION_STATUS_NOT_FOUND
        connectionType:
          description: Output only. Type of the PSC connection.
          readOnly: true
          type: string
          enumDescriptions:
            - Cluster endpoint Type is not set
            - >-
              Cluster endpoint that will be used as for cluster topology
              discovery.
            - >-
              Cluster endpoint that will be used as primary endpoint to access
              primary.
            - >-
              Cluster endpoint that will be used as reader endpoint to access
              replicas.
          enum:
            - CONNECTION_TYPE_UNSPECIFIED
            - CONNECTION_TYPE_DISCOVERY
            - CONNECTION_TYPE_PRIMARY
            - CONNECTION_TYPE_READER
    AutomatedBackupConfig:
      id: AutomatedBackupConfig
      description: The automated backup config for a cluster.
      type: object
      properties:
        fixedFrequencySchedule:
          description: Optional. Trigger automated backups at a fixed frequency.
          $ref: '#/components/schemas/FixedFrequencySchedule'
        automatedBackupMode:
          description: >-
            Optional. The automated backup mode. If the mode is disabled, the
            other fields will be ignored.
          type: string
          enumDescriptions:
            - Default value. Automated backup config is not specified.
            - Automated backup config disabled.
            - Automated backup config enabled.
          enum:
            - AUTOMATED_BACKUP_MODE_UNSPECIFIED
            - DISABLED
            - ENABLED
        retention:
          description: >-
            Optional. How long to keep automated backups before the backups are
            deleted. The value should be between 1 day and 365 days. If not
            specified, the default value is 35 days.
          type: string
          format: google-duration
    FixedFrequencySchedule:
      id: FixedFrequencySchedule
      description: >-
        This schedule allows the backup to be triggered at a fixed frequency
        (currently only daily is supported).
      type: object
      properties:
        startTime:
          description: >-
            Required. The start time of every automated backup in UTC. It must
            be set to the start of an hour. This field is required.
          $ref: '#/components/schemas/TimeOfDay'
    EncryptionInfo:
      id: EncryptionInfo
      description: >-
        EncryptionInfo describes the encryption information of a cluster or a
        backup.
      type: object
      properties:
        encryptionType:
          description: Output only. Type of encryption.
          readOnly: true
          type: string
          enumDescriptions:
            - >-
              Encryption type not specified. Defaults to
              GOOGLE_DEFAULT_ENCRYPTION.
            - >-
              The data is encrypted at rest with a key that is fully managed by
              Google. No key version will be populated. This is the default
              state.
            - >-
              The data is encrypted at rest with a key that is managed by the
              customer. KMS key versions will be populated.
          enum:
            - TYPE_UNSPECIFIED
            - GOOGLE_DEFAULT_ENCRYPTION
            - CUSTOMER_MANAGED_ENCRYPTION
        kmsKeyVersions:
          description: >-
            Output only. KMS key versions that are being used to protect the
            data at-rest.
          readOnly: true
          type: array
          items:
            type: string
        kmsKeyPrimaryState:
          description: >-
            Output only. The state of the primary version of the KMS key
            perceived by the system. This field is not populated in backups.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value is unused.
            - The KMS key is enabled and correctly configured.
            - Permission denied on the KMS key.
            - The KMS key is disabled.
            - The KMS key is destroyed.
            - The KMS key is scheduled to be destroyed.
            - The EKM key is unreachable.
            - Billing is disabled for the project.
            - All other unknown failures.
          enum:
            - KMS_KEY_STATE_UNSPECIFIED
            - ENABLED
            - PERMISSION_DENIED
            - DISABLED
            - DESTROYED
            - DESTROY_SCHEDULED
            - EKM_KEY_UNREACHABLE_DETECTED
            - BILLING_DISABLED
            - UNKNOWN_FAILURE
        lastUpdateTime:
          description: >-
            Output only. The most recent time when the encryption info was
            updated.
          readOnly: true
          type: string
          format: google-datetime
    CertificateAuthority:
      id: CertificateAuthority
      description: Redis cluster certificate authority
      type: object
      properties:
        managedServerCa:
          $ref: '#/components/schemas/ManagedCertificateAuthority'
        name:
          description: >-
            Identifier. Unique name of the resource in this scope including
            project, location and cluster using the form:
            `projects/{project}/locations/{location}/clusters/{cluster}/certificateAuthority`
          type: string
    ManagedCertificateAuthority:
      id: ManagedCertificateAuthority
      type: object
      properties:
        caCerts:
          description: >-
            The PEM encoded CA certificate chains for redis managed server
            authentication
          type: array
          items:
            $ref: '#/components/schemas/CertChain'
    CertChain:
      id: CertChain
      type: object
      properties:
        certificates:
          description: The certificates that form the CA chain, from leaf to root order.
          type: array
          items:
            type: string
    RescheduleClusterMaintenanceRequest:
      id: RescheduleClusterMaintenanceRequest
      description: Request for rescheduling a cluster maintenance.
      type: object
      properties:
        rescheduleType:
          description: >-
            Required. If reschedule type is SPECIFIC_TIME, must set up
            schedule_time as well.
          type: string
          enumDescriptions:
            - Not set.
            - If the user wants to schedule the maintenance to happen now.
            - >-
              If the user wants to reschedule the maintenance to a specific
              time.
          enum:
            - RESCHEDULE_TYPE_UNSPECIFIED
            - IMMEDIATE
            - SPECIFIC_TIME
        scheduleTime:
          description: >-
            Optional. Timestamp when the maintenance shall be rescheduled to if
            reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for example
            `2012-11-15T16:19:00.094Z`.
          type: string
          format: google-datetime
    ListBackupCollectionsResponse:
      id: ListBackupCollectionsResponse
      description: Response for [ListBackupCollections].
      type: object
      properties:
        backupCollections:
          description: >-
            A list of backupCollections in the project. If the `location_id` in
            the parent field of the request is "-", all regions available to the
            project are queried, and the results aggregated. If in such an
            aggregated query a location is unavailable, a placeholder
            backupCollection entry is included in the response with the `name`
            field set to a value of the form
            `projects/{project_id}/locations/{location_id}/backupCollections/`-
            and the `status` field set to ERROR and `status_message` field set
            to "location not available for ListBackupCollections".
          type: array
          items:
            $ref: '#/components/schemas/BackupCollection'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    BackupCollection:
      id: BackupCollection
      description: BackupCollection of a cluster.
      type: object
      properties:
        name:
          description: Identifier. Full resource path of the backup collection.
          type: string
        clusterUid:
          description: Output only. The cluster uid of the backup collection.
          readOnly: true
          type: string
        cluster:
          description: >-
            Output only. The full resource path of the cluster the backup
            collection belongs to. Example:
            projects/{project}/locations/{location}/clusters/{cluster}
          readOnly: true
          type: string
        kmsKey:
          description: >-
            Output only. The KMS key used to encrypt the backups under this
            backup collection.
          readOnly: true
          type: string
        uid:
          description: >-
            Output only. System assigned unique identifier of the backup
            collection.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time when the backup collection was created.
          readOnly: true
          type: string
          format: google-datetime
        totalBackupSizeBytes:
          description: Output only. Total size of all backups in the backup collection.
          readOnly: true
          type: string
          format: int64
        totalBackupCount:
          description: Output only. Total number of backups in the backup collection.
          readOnly: true
          type: string
          format: int64
        lastBackupTime:
          description: >-
            Output only. The last time a backup was created in the backup
            collection.
          readOnly: true
          type: string
          format: google-datetime
    ListBackupsResponse:
      id: ListBackupsResponse
      description: Response for [ListBackups].
      type: object
      properties:
        backups:
          description: A list of backups in the project.
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
        unreachable:
          description: Backups that could not be reached.
          type: array
          items:
            type: string
    Backup:
      id: Backup
      description: Backup of a cluster.
      type: object
      properties:
        name:
          description: >-
            Identifier. Full resource path of the backup. the last part of the
            name is the backup id with the following format:
            [YYYYMMDDHHMMSS]_[Shorted Cluster UID] OR customer specified while
            backup cluster. Example: 20240515123000_1234
          type: string
        createTime:
          description: Output only. The time when the backup was created.
          readOnly: true
          type: string
          format: google-datetime
        cluster:
          description: Output only. Cluster resource path of this backup.
          readOnly: true
          type: string
        clusterUid:
          description: Output only. Cluster uid of this backup.
          readOnly: true
          type: string
        totalSizeBytes:
          description: Output only. Total size of the backup in bytes.
          readOnly: true
          type: string
          format: int64
        expireTime:
          description: Output only. The time when the backup will expire.
          readOnly: true
          type: string
          format: google-datetime
        engineVersion:
          description: Output only. redis-7.2, valkey-7.5
          readOnly: true
          type: string
        backupFiles:
          description: Output only. List of backup files of the backup.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BackupFile'
        nodeType:
          description: Output only. Node type of the cluster.
          readOnly: true
          type: string
          enumDescriptions:
            - Node type unspecified
            - Redis shared core nano node_type.
            - Redis highmem medium node_type.
            - Redis highmem xlarge node_type.
            - Redis standard small node_type.
          enum:
            - NODE_TYPE_UNSPECIFIED
            - REDIS_SHARED_CORE_NANO
            - REDIS_HIGHMEM_MEDIUM
            - REDIS_HIGHMEM_XLARGE
            - REDIS_STANDARD_SMALL
        replicaCount:
          description: Output only. Number of replicas for the cluster.
          readOnly: true
          type: integer
          format: int32
        shardCount:
          description: Output only. Number of shards for the cluster.
          readOnly: true
          type: integer
          format: int32
        backupType:
          description: Output only. Type of the backup.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value, not set.
            - On-demand backup.
            - Automated backup.
          enum:
            - BACKUP_TYPE_UNSPECIFIED
            - ON_DEMAND
            - AUTOMATED
        state:
          description: Output only. State of the backup.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value, not set.
            - The backup is being created.
            - The backup is active to be used.
            - The backup is being deleted.
            - >-
              The backup is currently suspended due to reasons like project
              deletion, billing account closure, etc.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - SUSPENDED
        encryptionInfo:
          description: Output only. Encryption information of the backup.
          readOnly: true
          $ref: '#/components/schemas/EncryptionInfo'
        uid:
          description: Output only. System assigned unique identifier of the backup.
          readOnly: true
          type: string
    BackupFile:
      id: BackupFile
      description: Backup is consisted of multiple backup files.
      type: object
      properties:
        fileName:
          description: 'Output only. e.g: .rdb'
          readOnly: true
          type: string
        sizeBytes:
          description: Output only. Size of the backup file in bytes.
          readOnly: true
          type: string
          format: int64
        createTime:
          description: Output only. The time when the backup file was created.
          readOnly: true
          type: string
          format: google-datetime
    ExportBackupRequest:
      id: ExportBackupRequest
      description: Request for [ExportBackup].
      type: object
      properties:
        gcsBucket:
          description: Google Cloud Storage bucket, like "my-bucket".
          type: string
    BackupClusterRequest:
      id: BackupClusterRequest
      description: Request for [BackupCluster].
      type: object
      properties:
        ttl:
          description: >-
            Optional. TTL for the backup to expire. Value range is 1 day to 100
            years. If not specified, the default value is 100 years.
          type: string
          format: google-duration
        backupId:
          description: >-
            Optional. The id of the backup to be created. If not specified, the
            default value ([YYYYMMDDHHMMSS]_[Shortened Cluster UID] is used.
          type: string
    ListInstancesResponse:
      id: ListInstancesResponse
      description: Response for ListInstances.
      type: object
      properties:
        instances:
          description: >-
            A list of Redis instances in the project in the specified location,
            or across all locations. If the `location_id` in the parent field of
            the request is "-", all regions available to the project are
            queried, and the results aggregated. If in such an aggregated query
            a location is unavailable, a placeholder Redis entry is included in
            the response with the `name` field set to a value of the form
            `projects/{project_id}/locations/{location_id}/instances/`- and the
            `status` field set to ERROR and `status_message` field set to
            "location not available for ListInstances".
          type: array
          items:
            $ref: '#/components/schemas/Instance'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Instance:
      id: Instance
      description: A Memorystore for Redis instance.
      type: object
      properties:
        name:
          description: >-
            Required. Unique name of the resource in this scope including
            project and location using the form:
            `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
            Note: Redis instances are managed and addressed at regional level so
            location_id here refers to a GCP region; however, users may choose
            which specific zone (or collection of zones for cross-zone
            instances) an instance should be provisioned in. Refer to
            location_id and alternative_location_id fields for more details.
          type: string
        displayName:
          description: An arbitrary and optional user-provided name for the instance.
          type: string
        labels:
          description: Resource labels to represent user provided metadata
          type: object
          additionalProperties:
            type: string
        locationId:
          description: >-
            Optional. The zone where the instance will be provisioned. If not
            provided, the service will choose a zone from the specified region
            for the instance. For standard tier, additional nodes will be added
            across multiple zones for protection against zonal failures. If
            specified, at least one node will be provisioned in this zone.
          type: string
        alternativeLocationId:
          description: >-
            Optional. If specified, at least one node will be provisioned in
            this zone in addition to the zone specified in location_id. Only
            applicable to standard tier. If provided, it must be a different
            zone from the one provided in [location_id]. Additional nodes beyond
            the first 2 will be placed in zones selected by the service.
          type: string
        redisVersion:
          description: >-
            Optional. The version of Redis software. If not provided, the
            default version will be used. Currently, the supported values are: *
            `REDIS_3_2` for Redis 3.2 compatibility * `REDIS_4_0` for Redis 4.0
            compatibility * `REDIS_5_0` for Redis 5.0 compatibility *
            `REDIS_6_X` for Redis 6.x compatibility * `REDIS_7_0` for Redis 7.0
            compatibility (default) * `REDIS_7_2` for Redis 7.2 compatibility
          type: string
        reservedIpRange:
          description: >-
            Optional. For DIRECT_PEERING mode, the CIDR range of internal
            addresses that are reserved for this instance. Range must be unique
            and non-overlapping with existing subnets in an authorized network.
            For PRIVATE_SERVICE_ACCESS mode, the name of one allocated IP
            address ranges associated with this private service access
            connection. If not provided, the service will choose an unused /29
            block, for example, 10.0.0.0/29 or 192.168.0.0/29. For
            READ_REPLICAS_ENABLED the default block size is /28.
          type: string
        secondaryIpRange:
          description: >-
            Optional. Additional IP range for node placement. Required when
            enabling read replicas on an existing instance. For DIRECT_PEERING
            mode value must be a CIDR range of size /28, or "auto". For
            PRIVATE_SERVICE_ACCESS mode value must be the name of an allocated
            address range associated with the private service access connection,
            or "auto".
          type: string
        host:
          description: >-
            Output only. Hostname or IP address of the exposed Redis endpoint
            used by clients to connect to the service.
          readOnly: true
          type: string
        port:
          description: Output only. The port number of the exposed Redis endpoint.
          readOnly: true
          type: integer
          format: int32
        currentLocationId:
          description: >-
            Output only. The current zone where the Redis primary node is
            located. In basic tier, this will always be the same as
            [location_id]. In standard tier, this can be the zone of any node in
            the instance.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the instance was created.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. The current state of this instance.
          readOnly: true
          type: string
          enumDescriptions:
            - Not set.
            - Redis instance is being created.
            - Redis instance has been created and is fully usable.
            - >-
              Redis instance configuration is being updated. Certain kinds of
              updates may cause the instance to become unusable while the update
              is in progress.
            - Redis instance is being deleted.
            - Redis instance is being repaired and may be unusable.
            - Maintenance is being performed on this Redis instance.
            - Redis instance is importing data (availability may be affected).
            - Redis instance is failing over (availability may be affected).
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - UPDATING
            - DELETING
            - REPAIRING
            - MAINTENANCE
            - IMPORTING
            - FAILING_OVER
        statusMessage:
          description: >-
            Output only. Additional information about the current status of this
            instance, if available.
          readOnly: true
          type: string
        redisConfigs:
          description: >-
            Optional. Redis configuration parameters, according to
            http://redis.io/topics/config. Currently, the only supported
            parameters are: Redis version 3.2 and newer: * maxmemory-policy *
            notify-keyspace-events Redis version 4.0 and newer: * activedefrag *
            lfu-decay-time * lfu-log-factor * maxmemory-gb Redis version 5.0 and
            newer: * stream-node-max-bytes * stream-node-max-entries
          type: object
          additionalProperties:
            type: string
        tier:
          description: Required. The service tier of the instance.
          type: string
          enumDescriptions:
            - Not set.
            - 'BASIC tier: standalone instance'
            - 'STANDARD_HA tier: highly available primary/replica instances'
          enum:
            - TIER_UNSPECIFIED
            - BASIC
            - STANDARD_HA
        memorySizeGb:
          description: Required. Redis memory size in GiB.
          type: integer
          format: int32
        authorizedNetwork:
          description: >-
            Optional. The full name of the Google Compute Engine
            [network](https://cloud.google.com/vpc/docs/vpc) to which the
            instance is connected. If left unspecified, the `default` network
            will be used.
          type: string
        persistenceIamIdentity:
          description: >-
            Output only. Cloud IAM identity used by import / export operations
            to transfer data to/from Cloud Storage. Format is "serviceAccount:".
            The value may change over time for a given instance so should be
            checked before each import/export operation.
          readOnly: true
          type: string
        connectMode:
          description: >-
            Optional. The network connect mode of the Redis instance. If not
            provided, the connect mode defaults to DIRECT_PEERING.
          type: string
          enumDescriptions:
            - Not set.
            - >-
              Connect via direct peering to the Memorystore for Redis hosted
              service.
            - >-
              Connect your Memorystore for Redis instance using Private Service
              Access. Private services access provides an IP address range for
              multiple Google Cloud services, including Memorystore.
          enum:
            - CONNECT_MODE_UNSPECIFIED
            - DIRECT_PEERING
            - PRIVATE_SERVICE_ACCESS
        authEnabled:
          description: >-
            Optional. Indicates whether OSS Redis AUTH is enabled for the
            instance. If set to "true" AUTH is enabled on the instance. Default
            value is "false" meaning AUTH is disabled.
          type: boolean
        serverCaCerts:
          description: Output only. List of server CA certificates for the instance.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/TlsCertificate'
        transitEncryptionMode:
          description: >-
            Optional. The TLS mode of the Redis instance. If not provided, TLS
            is disabled for the instance.
          type: string
          enumDescriptions:
            - Not set.
            - >-
              Client to Server traffic encryption enabled with server
              authentication.
            - TLS is disabled for the instance.
          enum:
            - TRANSIT_ENCRYPTION_MODE_UNSPECIFIED
            - SERVER_AUTHENTICATION
            - DISABLED
        maintenancePolicy:
          description: >-
            Optional. The maintenance policy for the instance. If not provided,
            maintenance events can be performed at any time.
          $ref: '#/components/schemas/MaintenancePolicy'
        maintenanceSchedule:
          description: >-
            Output only. Date and time of upcoming maintenance events which have
            been scheduled.
          readOnly: true
          $ref: '#/components/schemas/MaintenanceSchedule'
        replicaCount:
          description: >-
            Optional. The number of replica nodes. The valid range for the
            Standard Tier with read replicas enabled is [1-5] and defaults to 2.
            If read replicas are not enabled for a Standard Tier instance, the
            only valid value is 1 and the default is 1. The valid value for
            basic tier is 0 and the default is also 0.
          type: integer
          format: int32
        nodes:
          description: Output only. Info per node.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/NodeInfo'
        readEndpoint:
          description: >-
            Output only. Hostname or IP address of the exposed readonly Redis
            endpoint. Standard tier only. Targets all healthy replica nodes in
            instance. Replication is asynchronous and replica nodes will exhibit
            some lag behind the primary. Write requests must target 'host'.
          readOnly: true
          type: string
        readEndpointPort:
          description: >-
            Output only. The port number of the exposed readonly redis endpoint.
            Standard tier only. Write requests should target 'port'.
          readOnly: true
          type: integer
          format: int32
        readReplicasMode:
          description: >-
            Optional. Read replicas mode for the instance. Defaults to
            READ_REPLICAS_DISABLED.
          type: string
          enumDescriptions:
            - >-
              If not set, Memorystore Redis backend will default to
              READ_REPLICAS_DISABLED.
            - >-
              If disabled, read endpoint will not be provided and the instance
              cannot scale up or down the number of replicas.
            - >-
              If enabled, read endpoint will be provided and the instance can
              scale up and down the number of replicas. Not valid for basic
              tier.
          enum:
            - READ_REPLICAS_MODE_UNSPECIFIED
            - READ_REPLICAS_DISABLED
            - READ_REPLICAS_ENABLED
        customerManagedKey:
          description: >-
            Optional. The KMS key reference that the customer provides when
            trying to create the instance.
          type: string
        persistenceConfig:
          description: Optional. Persistence configuration parameters
          $ref: '#/components/schemas/PersistenceConfig'
        suspensionReasons:
          description: Optional. reasons that causes instance in "SUSPENDED" state.
          type: array
          items:
            type: string
            enumDescriptions:
              - Not set.
              - Something wrong with the CMEK key provided by customer.
            enum:
              - SUSPENSION_REASON_UNSPECIFIED
              - CUSTOMER_MANAGED_KEY_ISSUE
        maintenanceVersion:
          description: >-
            Optional. The self service update maintenance version. The version
            is date based such as "20210712_00_00".
          type: string
        availableMaintenanceVersions:
          description: >-
            Optional. The available maintenance versions that an instance could
            update to.
          type: array
          items:
            type: string
        satisfiesPzs:
          description: Optional. Output only. Reserved for future use.
          readOnly: true
          type: boolean
        satisfiesPzi:
          description: Optional. Output only. Reserved for future use.
          readOnly: true
          type: boolean
        tags:
          description: >-
            Optional. Input only. Immutable. Tag keys/values directly bound to
            this resource. For example: "123/environment": "production",
            "123/costCenter": "marketing"
          type: object
          additionalProperties:
            type: string
    TlsCertificate:
      id: TlsCertificate
      description: TlsCertificate Resource
      type: object
      properties:
        serialNumber:
          description: Serial number, as extracted from the certificate.
          type: string
        cert:
          description: PEM representation.
          type: string
        createTime:
          description: >-
            Output only. The time when the certificate was created in [RFC
            3339](https://tools.ietf.org/html/rfc3339) format, for example
            `2020-05-18T00:00:00.094Z`.
          readOnly: true
          type: string
          format: google-datetime
        expireTime:
          description: >-
            Output only. The time when the certificate expires in [RFC
            3339](https://tools.ietf.org/html/rfc3339) format, for example
            `2020-05-18T00:00:00.094Z`.
          readOnly: true
          type: string
          format: google-datetime
        sha1Fingerprint:
          description: Sha1 Fingerprint of the certificate.
          type: string
    MaintenancePolicy:
      id: MaintenancePolicy
      description: Maintenance policy for an instance.
      type: object
      properties:
        createTime:
          description: Output only. The time when the policy was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the policy was last updated.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: >-
            Optional. Description of what this policy is for. Create/Update
            methods return INVALID_ARGUMENT if the length is greater than 512.
          type: string
        weeklyMaintenanceWindow:
          description: >-
            Optional. Maintenance window that is applied to resources covered by
            this policy. Minimum 1. For the current version, the maximum number
            of weekly_window is expected to be one.
          type: array
          items:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
    WeeklyMaintenanceWindow:
      id: WeeklyMaintenanceWindow
      description: >-
        Time window in which disruptive maintenance updates occur.
        Non-disruptive updates can occur inside or outside this window.
      type: object
      properties:
        day:
          description: Required. The day of week that maintenance updates occur.
          type: string
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        startTime:
          description: Required. Start time of the window in UTC time.
          $ref: '#/components/schemas/TimeOfDay'
        duration:
          description: >-
            Output only. Duration of the maintenance window. The current window
            is fixed at 1 hour.
          readOnly: true
          type: string
          format: google-duration
    MaintenanceSchedule:
      id: MaintenanceSchedule
      description: >-
        Upcoming maintenance schedule. If no maintenance is scheduled, fields
        are not populated.
      type: object
      properties:
        startTime:
          description: >-
            Output only. The start time of any upcoming scheduled maintenance
            for this instance.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: >-
            Output only. The end time of any upcoming scheduled maintenance for
            this instance.
          readOnly: true
          type: string
          format: google-datetime
        canReschedule:
          description: If the scheduled maintenance can be rescheduled, default is true.
          deprecated: true
          type: boolean
        scheduleDeadlineTime:
          description: >-
            Output only. The deadline that the maintenance schedule start time
            can not go beyond, including reschedule.
          readOnly: true
          type: string
          format: google-datetime
    NodeInfo:
      id: NodeInfo
      description: Node specific properties.
      type: object
      properties:
        id:
          description: Output only. Node identifying string. e.g. 'node-0', 'node-1'
          readOnly: true
          type: string
        zone:
          description: Output only. Location of the node.
          readOnly: true
          type: string
    PersistenceConfig:
      id: PersistenceConfig
      description: Configuration of the persistence functionality.
      type: object
      properties:
        persistenceMode:
          description: >-
            Optional. Controls whether Persistence features are enabled. If not
            provided, the existing value will be used.
          type: string
          enumDescriptions:
            - Not set.
            - >-
              Persistence is disabled for the instance, and any existing
              snapshots are deleted.
            - RDB based Persistence is enabled.
          enum:
            - PERSISTENCE_MODE_UNSPECIFIED
            - DISABLED
            - RDB
        rdbSnapshotPeriod:
          description: >-
            Optional. Period between RDB snapshots. Snapshots will be attempted
            every period starting from the provided snapshot start time. For
            example, a start time of 01/01/2033 06:45 and SIX_HOURS snapshot
            period will do nothing until 01/01/2033, and then trigger snapshots
            every day at 06:45, 12:45, 18:45, and 00:45 the next day, and so on.
            If not provided, TWENTY_FOUR_HOURS will be used as default.
          type: string
          enumDescriptions:
            - Not set.
            - Snapshot every 1 hour.
            - Snapshot every 6 hours.
            - Snapshot every 12 hours.
            - Snapshot every 24 hours.
          enum:
            - SNAPSHOT_PERIOD_UNSPECIFIED
            - ONE_HOUR
            - SIX_HOURS
            - TWELVE_HOURS
            - TWENTY_FOUR_HOURS
        rdbNextSnapshotTime:
          description: >-
            Output only. The next time that a snapshot attempt is scheduled to
            occur.
          readOnly: true
          type: string
          format: google-datetime
        rdbSnapshotStartTime:
          description: >-
            Optional. Date and time that the first snapshot was/will be
            attempted, and to which future snapshots will be aligned. If not
            provided, the current time will be used.
          type: string
          format: google-datetime
    InstanceAuthString:
      id: InstanceAuthString
      description: Instance AUTH string details.
      type: object
      properties:
        authString:
          description: AUTH string set on the instance.
          type: string
    UpgradeInstanceRequest:
      id: UpgradeInstanceRequest
      description: Request for UpgradeInstance.
      type: object
      properties:
        redisVersion:
          description: >-
            Required. Specifies the target version of Redis software to upgrade
            to.
          type: string
    ImportInstanceRequest:
      id: ImportInstanceRequest
      description: Request for Import.
      type: object
      properties:
        inputConfig:
          description: Required. Specify data to be imported.
          $ref: '#/components/schemas/InputConfig'
    InputConfig:
      id: InputConfig
      description: The input content
      type: object
      properties:
        gcsSource:
          description: Google Cloud Storage location where input content is located.
          $ref: '#/components/schemas/GcsSource'
    GcsSource:
      id: GcsSource
      description: The Cloud Storage location for the input content
      type: object
      properties:
        uri:
          description: Required. Source data URI. (e.g. 'gs://my_bucket/my_object').
          type: string
    ExportInstanceRequest:
      id: ExportInstanceRequest
      description: Request for Export.
      type: object
      properties:
        outputConfig:
          description: Required. Specify data to be exported.
          $ref: '#/components/schemas/OutputConfig'
    OutputConfig:
      id: OutputConfig
      description: The output content
      type: object
      properties:
        gcsDestination:
          description: Google Cloud Storage destination for output content.
          $ref: '#/components/schemas/GcsDestination'
    GcsDestination:
      id: GcsDestination
      description: The Cloud Storage location for the output content
      type: object
      properties:
        uri:
          description: >-
            Required. Data destination URI (e.g. 'gs://my_bucket/my_object').
            Existing files will be overwritten.
          type: string
    FailoverInstanceRequest:
      id: FailoverInstanceRequest
      description: Request for Failover.
      type: object
      properties:
        dataProtectionMode:
          description: >-
            Optional. Available data protection modes that the user can choose.
            If it's unspecified, data protection mode will be LIMITED_DATA_LOSS
            by default.
          type: string
          enumDescriptions:
            - >-
              Defaults to LIMITED_DATA_LOSS if a data protection mode is not
              specified.
            - >-
              Instance failover will be protected with data loss control. More
              specifically, the failover will only be performed if the current
              replication offset diff between primary and replica is under a
              certain threshold.
            - Instance failover will be performed without data loss control.
          enum:
            - DATA_PROTECTION_MODE_UNSPECIFIED
            - LIMITED_DATA_LOSS
            - FORCE_DATA_LOSS
    RescheduleMaintenanceRequest:
      id: RescheduleMaintenanceRequest
      description: Request for RescheduleMaintenance.
      type: object
      properties:
        rescheduleType:
          description: >-
            Required. If reschedule type is SPECIFIC_TIME, must set up
            schedule_time as well.
          type: string
          enumDescriptions:
            - Not set.
            - If the user wants to schedule the maintenance to happen now.
            - >-
              If the user wants to use the existing maintenance policy to find
              the next available window.
            - >-
              If the user wants to reschedule the maintenance to a specific
              time.
          enum:
            - RESCHEDULE_TYPE_UNSPECIFIED
            - IMMEDIATE
            - NEXT_AVAILABLE_WINDOW
            - SPECIFIC_TIME
        scheduleTime:
          description: >-
            Optional. Timestamp when the maintenance shall be rescheduled to if
            reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for example
            `2012-11-15T16:19:00.094Z`.
          type: string
          format: google-datetime
    ReconciliationOperationMetadata:
      id: ReconciliationOperationMetadata
      description: >-
        Operation metadata returned by the CLH during resource state
        reconciliation.
      type: object
      properties:
        deleteResource:
          description: DEPRECATED. Use exclusive_action instead.
          deprecated: true
          type: boolean
        exclusiveAction:
          description: Excluisive action returned by the CLH.
          type: string
          enumDescriptions:
            - Unknown repair action.
            - >-
              The resource has to be deleted. When using this bit, the CLH
              should fail the operation. DEPRECATED. Instead use DELETE_RESOURCE
              OperationSignal in SideChannel.
            - >-
              This resource could not be repaired but the repair should be tried
              again at a later time. This can happen if there is a dependency
              that needs to be resolved first- e.g. if a parent resource must be
              repaired before a child resource.
          enumDeprecated:
            - false
            - true
            - false
          enum:
            - UNKNOWN_REPAIR_ACTION
            - DELETE
            - RETRY
    DatabaseResourceFeed:
      id: DatabaseResourceFeed
      description: >-
        DatabaseResourceFeed is the top level proto to be used to ingest
        different database resource level events into Condor platform. Next ID:
        11
      type: object
      properties:
        resourceId:
          description: >-
            Primary key associated with the Resource. resource_id is available
            in individual feed level as well.
          deprecated: true
          $ref: '#/components/schemas/DatabaseResourceId'
        feedTimestamp:
          description: Required. Timestamp when feed is generated.
          type: string
          format: google-datetime
        feedType:
          description: Required. Type feed to be ingested into condor
          type: string
          enumDescriptions:
            - ''
            - Database resource metadata feed from control plane
            - Database resource monitoring data
            - Database resource security health signal data
            - Database resource recommendation signal data
            - Database config based signal data
            - Database resource metadata from BackupDR
          enum:
            - FEEDTYPE_UNSPECIFIED
            - RESOURCE_METADATA
            - OBSERVABILITY_DATA
            - SECURITY_FINDING_DATA
            - RECOMMENDATION_SIGNAL_DATA
            - CONFIG_BASED_SIGNAL_DATA
            - BACKUPDR_METADATA
        resourceMetadata:
          $ref: '#/components/schemas/DatabaseResourceMetadata'
        resourceHealthSignalData:
          $ref: '#/components/schemas/DatabaseResourceHealthSignalData'
        recommendationSignalData:
          $ref: '#/components/schemas/DatabaseResourceRecommendationSignalData'
        observabilityMetricData:
          $ref: '#/components/schemas/ObservabilityMetricData'
        configBasedSignalData:
          description: >-
            Config based signal data is used to ingest signals that are
            generated based on the configuration of the database resource.
          $ref: '#/components/schemas/ConfigBasedSignalData'
        backupdrMetadata:
          description: BackupDR metadata is used to ingest metadata from BackupDR.
          $ref: '#/components/schemas/BackupDRMetadata'
        skipIngestion:
          description: >-
            Optional. If true, the feed won't be ingested by DB Center. This
            indicates that the feed is intentionally skipped. For example,
            BackupDR feeds are only needed for resources integrated with DB
            Center (e.g., CloudSQL, AlloyDB). Feeds for non-integrated resources
            (e.g., Compute Engine, Persistent Disk) can be skipped.
          type: boolean
    DatabaseResourceId:
      id: DatabaseResourceId
      description: >-
        DatabaseResourceId will serve as primary key for any resource ingestion
        event.
      type: object
      properties:
        provider:
          description: 'Required. Cloud provider name. Ex: GCP/AWS/Azure/OnPrem/SelfManaged'
          type: string
          enumDescriptions:
            - ''
            - Google cloud platform provider
            - Amazon web service
            - Azure web service
            - On-prem database resources.
            - >-
              Self-managed database provider. These are resources on a cloud
              platform, e.g., database resource installed in a GCE VM, but not a
              managed database service.
            - >-
              For the rest of the other categories. Other refers to the rest of
              other database service providers, this could be smaller cloud
              provider. This needs to be provided when the provider is known,
              but it is not present in the existing set of enum values.
          enum:
            - PROVIDER_UNSPECIFIED
            - GCP
            - AWS
            - AZURE
            - ONPREM
            - SELFMANAGED
            - PROVIDER_OTHER
        providerDescription:
          description: Optional. Needs to be used only when the provider is PROVIDER_OTHER.
          type: string
        uniqueId:
          description: >-
            Required. A service-local token that distinguishes this resource
            from other resources within the same service.
          type: string
        resourceType:
          description: >-
            Required. The type of resource this ID is identifying. Ex
            go/keep-sorted start alloydb.googleapis.com/Cluster,
            alloydb.googleapis.com/Instance,
            bigtableadmin.googleapis.com/Cluster,
            bigtableadmin.googleapis.com/Instance
            compute.googleapis.com/Instance firestore.googleapis.com/Database,
            redis.googleapis.com/Instance, redis.googleapis.com/Cluster,
            oracledatabase.googleapis.com/CloudExadataInfrastructure
            oracledatabase.googleapis.com/CloudVmCluster
            oracledatabase.googleapis.com/AutonomousDatabase
            spanner.googleapis.com/Instance, spanner.googleapis.com/Database,
            sqladmin.googleapis.com/Instance, go/keep-sorted end REQUIRED Please
            refer go/condor-common-datamodel
          type: string
    DatabaseResourceMetadata:
      id: DatabaseResourceMetadata
      description: 'Common model for database resource instance metadata. Next ID: 26'
      type: object
      properties:
        id:
          description: Required. Unique identifier for a Database resource
          $ref: '#/components/schemas/DatabaseResourceId'
        resourceName:
          description: >-
            Required. Different from DatabaseResourceId.unique_id, a resource
            name can be reused over time. That is, after a resource named "ABC"
            is deleted, the name "ABC" can be used to to create a new resource
            within the same source. Resource name to follow CAIS resource_name
            format as noted here go/condor-common-datamodel
          type: string
        primaryResourceId:
          description: >-
            Identifier for this resource's immediate parent/primary resource if
            the current resource is a replica or derived form of another
            Database resource. Else it would be NULL. REQUIRED if the immediate
            parent exists when first time resource is getting ingested,
            otherwise optional.
          $ref: '#/components/schemas/DatabaseResourceId'
        primaryResourceLocation:
          description: >-
            Primary resource location. REQUIRED if the immediate parent exists
            when first time resource is getting ingested, otherwise optional.
          type: string
        resourceContainer:
          description: >-
            Closest parent Cloud Resource Manager container of this resource. It
            must be resource name of a Cloud Resource Manager project with the
            format of "/", such as "projects/123". For GCP provided resources,
            number should be project number.
          type: string
        location:
          description: The resource location. REQUIRED
          type: string
        creationTime:
          description: >-
            The creation time of the resource, i.e. the time when resource is
            created and recorded in partner service.
          type: string
          format: google-datetime
        updationTime:
          description: >-
            The time at which the resource was updated and recorded at partner
            service.
          type: string
          format: google-datetime
        expectedState:
          description: >-
            The state that the instance is expected to be in. For example, an
            instance state can transition to UNHEALTHY due to wrong patch
            update, while the expected state will remain at the HEALTHY.
          type: string
          enumDescriptions:
            - ''
            - The instance is running.
            - Instance being created, updated, deleted or under maintenance
            - When instance is suspended
            - Instance is deleted.
            - For rest of the other category
          enum:
            - STATE_UNSPECIFIED
            - HEALTHY
            - UNHEALTHY
            - SUSPENDED
            - DELETED
            - STATE_OTHER
        currentState:
          description: Current state of the instance.
          type: string
          enumDescriptions:
            - ''
            - The instance is running.
            - Instance being created, updated, deleted or under maintenance
            - When instance is suspended
            - Instance is deleted.
            - For rest of the other category
          enum:
            - STATE_UNSPECIFIED
            - HEALTHY
            - UNHEALTHY
            - SUSPENDED
            - DELETED
            - STATE_OTHER
        instanceType:
          description: The type of the instance. Specified at creation time.
          type: string
          enumDescriptions:
            - Unspecified.
            - For rest of the other categories.
            - A regular primary database instance.
            - A cluster or an instance acting as a secondary.
            - An instance acting as a read-replica.
            - For rest of the other categories.
            - A regular primary database instance.
            - A cluster or an instance acting as a secondary.
            - An instance acting as a read-replica.
            - An instance acting as an external primary.
            - For rest of the other categories.
          enumDeprecated:
            - true
            - false
            - true
            - true
            - true
            - true
            - false
            - false
            - false
            - false
            - false
          enum:
            - INSTANCE_TYPE_UNSPECIFIED
            - SUB_RESOURCE_TYPE_UNSPECIFIED
            - PRIMARY
            - SECONDARY
            - READ_REPLICA
            - OTHER
            - SUB_RESOURCE_TYPE_PRIMARY
            - SUB_RESOURCE_TYPE_SECONDARY
            - SUB_RESOURCE_TYPE_READ_REPLICA
            - SUB_RESOURCE_TYPE_EXTERNAL_PRIMARY
            - SUB_RESOURCE_TYPE_OTHER
        product:
          description: The product this resource represents.
          $ref: '#/components/schemas/Product'
        availabilityConfiguration:
          description: Availability configuration for this instance
          $ref: '#/components/schemas/AvailabilityConfiguration'
        backupConfiguration:
          description: Backup configuration for this instance
          $ref: '#/components/schemas/BackupConfiguration'
        backupRun:
          description: Latest backup run information for this instance
          $ref: '#/components/schemas/BackupRun'
        customMetadata:
          description: Any custom metadata associated with the resource
          $ref: '#/components/schemas/CustomMetadataData'
        entitlements:
          description: Entitlements associated with the resource
          type: array
          items:
            $ref: '#/components/schemas/Entitlement'
        userLabelSet:
          description: User-provided labels associated with the resource
          $ref: '#/components/schemas/UserLabels'
        machineConfiguration:
          description: Machine configuration for this resource.
          $ref: '#/components/schemas/MachineConfiguration'
        tagsSet:
          description: Optional. Tags associated with this resources.
          $ref: '#/components/schemas/Tags'
        edition:
          description: >-
            Optional. Edition represents whether the instance is ENTERPRISE or
            ENTERPRISE_PLUS. This information is core to Cloud SQL only and is
            used to identify the edition of the instance.
          type: string
          enumDescriptions:
            - Default, to make it consistent with instance edition enum.
            - Represents the enterprise edition.
            - Represents the enterprise plus edition.
          enum:
            - EDITION_UNSPECIFIED
            - EDITION_ENTERPRISE
            - EDITION_ENTERPRISE_PLUS
        suspensionReason:
          description: Optional. Suspension reason for the resource.
          type: string
          enumDescriptions:
            - Suspension reason is unspecified.
            - Wipeout hide event.
            - Wipeout purge event.
            - Billing disabled for project
            - Abuse detected for resource
            - Encryption key inaccessible.
            - Replicated cluster encryption key inaccessible.
          enum:
            - SUSPENSION_REASON_UNSPECIFIED
            - WIPEOUT_HIDE_EVENT
            - WIPEOUT_PURGE_EVENT
            - BILLING_DISABLED
            - ABUSER_DETECTED
            - ENCRYPTION_KEY_INACCESSIBLE
            - REPLICATED_CLUSTER_ENCRYPTION_KEY_INACCESSIBLE
        gcbdrConfiguration:
          description: GCBDR configuration for the resource.
          deprecated: true
          $ref: '#/components/schemas/GCBDRConfiguration'
        backupdrConfiguration:
          description: Optional. BackupDR Configuration for the resource.
          $ref: '#/components/schemas/BackupDRConfiguration'
    Product:
      id: Product
      description: Product specification for Condor resources.
      type: object
      properties:
        type:
          description: >-
            Type of specific database product. It could be CloudSQL, AlloyDB
            etc..
          type: string
          enumDescriptions:
            - UNSPECIFIED means product type is not known or available.
            - Cloud SQL product area in GCP
            - Cloud SQL product area in GCP
            - AlloyDB product area in GCP
            - AlloyDB product area in GCP
            - Spanner product area in GCP
            - On premises database product.
            - On premises database product.
            - Memorystore product area in GCP
            - Bigtable product area in GCP
            - Firestore product area in GCP.
            - Compute Engine self managed databases
            - Oracle product area in GCP
            - >-
              Other refers to rest of other product type. This is to be when
              product type is known, but it is not present in this enum.
          enumDeprecated:
            - false
            - false
            - true
            - false
            - true
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
          enum:
            - PRODUCT_TYPE_UNSPECIFIED
            - PRODUCT_TYPE_CLOUD_SQL
            - CLOUD_SQL
            - PRODUCT_TYPE_ALLOYDB
            - ALLOYDB
            - PRODUCT_TYPE_SPANNER
            - PRODUCT_TYPE_ON_PREM
            - ON_PREM
            - PRODUCT_TYPE_MEMORYSTORE
            - PRODUCT_TYPE_BIGTABLE
            - PRODUCT_TYPE_FIRESTORE
            - PRODUCT_TYPE_COMPUTE_ENGINE
            - PRODUCT_TYPE_ORACLE_ON_GCP
            - PRODUCT_TYPE_OTHER
        engine:
          description: The specific engine that the underlying database is running.
          type: string
          enumDescriptions:
            - UNSPECIFIED means engine type is not known or available.
            - MySQL binary running as an engine in the database instance.
            - MySQL binary running as engine in database instance.
            - Postgres binary running as engine in database instance.
            - Postgres binary running as engine in database instance.
            - SQLServer binary running as engine in database instance.
            - SQLServer binary running as engine in database instance.
            - Native database binary running as engine in instance.
            - Native database binary running as engine in instance.
            - Cloud Spanner with PostgreSQL dialect.
            - Cloud Spanner with Google SQL dialect.
            - Memorystore with Redis dialect.
            - Memorystore with Redis cluster dialect.
            - >-
              Other refers to rest of other database engine. This is to be when
              engine is known, but it is not present in this enum.
            - Firestore with native mode.
            - Firestore with datastore mode.
            - Firestore with MongoDB compatibility mode.
            - Oracle Exadata engine.
            - Oracle Autonomous DB Serverless engine.
          enumDeprecated:
            - false
            - false
            - true
            - false
            - true
            - false
            - true
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
          enum:
            - ENGINE_UNSPECIFIED
            - ENGINE_MYSQL
            - MYSQL
            - ENGINE_POSTGRES
            - POSTGRES
            - ENGINE_SQL_SERVER
            - SQL_SERVER
            - ENGINE_NATIVE
            - NATIVE
            - ENGINE_CLOUD_SPANNER_WITH_POSTGRES_DIALECT
            - ENGINE_CLOUD_SPANNER_WITH_GOOGLESQL_DIALECT
            - ENGINE_MEMORYSTORE_FOR_REDIS
            - ENGINE_MEMORYSTORE_FOR_REDIS_CLUSTER
            - ENGINE_OTHER
            - ENGINE_FIRESTORE_WITH_NATIVE_MODE
            - ENGINE_FIRESTORE_WITH_DATASTORE_MODE
            - ENGINE_FIRESTORE_WITH_MONGODB_COMPATIBILITY_MODE
            - ENGINE_EXADATA_ORACLE
            - ENGINE_ADB_SERVERLESS_ORACLE
        version:
          description: >-
            Version of the underlying database engine. Example values: For
            MySQL, it could be "8.0", "5.7" etc.. For Postgres, it could be
            "14", "15" etc..
          type: string
        minorVersion:
          description: >-
            Minor version of the underlying database engine. Example values: For
            MySQL, it could be "8.0.32", "5.7.32" etc.. For Postgres, it could
            be "14.3", "15.3" etc..
          type: string
    AvailabilityConfiguration:
      id: AvailabilityConfiguration
      description: Configuration for availability of database instance
      type: object
      properties:
        availabilityType:
          description: >-
            Availability type. Potential values: * `ZONAL`: The instance serves
            data from only one zone. Outages in that zone affect data
            accessibility. * `REGIONAL`: The instance can serve data from more
            than one zone in a region (it is highly available).
          type: string
          enumDescriptions:
            - ''
            - Zonal available instance.
            - Regional available instance.
            - Multi regional instance
            - For rest of the other category
          enum:
            - AVAILABILITY_TYPE_UNSPECIFIED
            - ZONAL
            - REGIONAL
            - MULTI_REGIONAL
            - AVAILABILITY_TYPE_OTHER
        externalReplicaConfigured:
          type: boolean
        promotableReplicaConfigured:
          type: boolean
        crossRegionReplicaConfigured:
          description: >-
            Checks for resources that are configured to have redundancy, and
            ongoing replication across regions
          type: boolean
        automaticFailoverRoutingConfigured:
          description: >-
            Checks for existence of (multi-cluster) routing configuration that
            allows automatic failover to a different zone/region in case of an
            outage. Applicable to Bigtable resources.
          type: boolean
    BackupConfiguration:
      id: BackupConfiguration
      description: Configuration for automatic backups
      type: object
      properties:
        automatedBackupEnabled:
          description: >-
            Whether customer visible automated backups are enabled on the
            instance.
          type: boolean
        backupRetentionSettings:
          description: Backup retention settings.
          $ref: '#/components/schemas/RetentionSettings'
        pointInTimeRecoveryEnabled:
          description: >-
            Whether point-in-time recovery is enabled. This is optional field,
            if the database service does not have this feature or metadata is
            not available in control plane, this can be omitted.
          type: boolean
    RetentionSettings:
      id: RetentionSettings
      type: object
      properties:
        retentionUnit:
          description: The unit that 'retained_backups' represents.
          deprecated: true
          type: string
          enumDescriptions:
            - Backup retention unit is unspecified, will be treated as COUNT.
            - >-
              Retention will be by count, eg. "retain the most recent 7
              backups".
            - >-
              Retention will be by Time, eg. "retain backups till a specific
              time" i.e. till 2024-05-01T00:00:00Z.
            - >-
              Retention will be by duration, eg. "retain the backups for 172800
              seconds (2 days)".
            - For rest of the other category
          enum:
            - RETENTION_UNIT_UNSPECIFIED
            - COUNT
            - TIME
            - DURATION
            - RETENTION_UNIT_OTHER
        timeBasedRetention:
          deprecated: true
          type: string
          format: google-duration
        quantityBasedRetention:
          type: integer
          format: int32
        durationBasedRetention:
          description: Duration based retention period i.e. 172800 seconds (2 days)
          type: string
          format: google-duration
        timestampBasedRetentionTime:
          description: Timestamp based retention period i.e. 2024-05-01T00:00:00Z
          type: string
          format: google-datetime
    BackupRun:
      id: BackupRun
      description: A backup run.
      type: object
      properties:
        startTime:
          description: The time the backup operation started. REQUIRED
          type: string
          format: google-datetime
        endTime:
          description: The time the backup operation completed. REQUIRED
          type: string
          format: google-datetime
        status:
          description: The status of this run. REQUIRED
          type: string
          enumDescriptions:
            - ''
            - The backup was successful.
            - The backup was unsuccessful.
          enum:
            - STATUS_UNSPECIFIED
            - SUCCESSFUL
            - FAILED
        error:
          description: >-
            Information about why the backup operation failed. This is only
            present if the run has the FAILED status. OPTIONAL
          $ref: '#/components/schemas/OperationError'
    OperationError:
      id: OperationError
      description: An error that occurred during a backup creation operation.
      type: object
      properties:
        code:
          description: Identifies the specific error that occurred. REQUIRED
          type: string
        message:
          description: Additional information about the error encountered. REQUIRED
          type: string
        errorType:
          type: string
          enumDescriptions:
            - UNSPECIFIED means product type is not known or available.
            - >-
              key destroyed, expired, not found, unreachable or permission
              denied.
            - Database is not accessible
            - >-
              The zone or region does not have sufficient resources to handle
              the request at the moment
            - User initiated cancellation
            - SQL server specific error
            - Any other internal error.
          enum:
            - OPERATION_ERROR_TYPE_UNSPECIFIED
            - KMS_KEY_ERROR
            - DATABASE_ERROR
            - STOCKOUT_ERROR
            - CANCELLATION_ERROR
            - SQLSERVER_ERROR
            - INTERNAL_ERROR
    CustomMetadataData:
      id: CustomMetadataData
      description: >-
        Any custom metadata associated with the resource. e.g. A spanner
        instance can have multiple databases with its own unique metadata.
        Information for these individual databases can be captured in custom
        metadata data
      type: object
      properties:
        internalResourceMetadata:
          description: >-
            Metadata for individual internal resources in an instance. e.g.
            spanner instance can have multiple databases with unique
            configuration.
          type: array
          items:
            $ref: '#/components/schemas/InternalResourceMetadata'
    InternalResourceMetadata:
      id: InternalResourceMetadata
      description: >-
        Metadata for individual internal resources in an instance. e.g. spanner
        instance can have multiple databases with unique configuration settings.
        Similarly bigtable can have multiple clusters within same bigtable
        instance.
      type: object
      properties:
        resourceId:
          $ref: '#/components/schemas/DatabaseResourceId'
        resourceName:
          description: >-
            Required. internal resource name for spanner this will be database
            name
            e.g."spanner.googleapis.com/projects/123/abc/instances/inst1/databases/db1"
          type: string
        product:
          $ref: '#/components/schemas/Product'
        backupConfiguration:
          description: Backup configuration for this database
          $ref: '#/components/schemas/BackupConfiguration'
        backupRun:
          description: Information about the last backup attempt for this database
          $ref: '#/components/schemas/BackupRun'
        isDeletionProtectionEnabled:
          description: Whether deletion protection is enabled for this internal resource.
          type: boolean
    Entitlement:
      id: Entitlement
      description: >-
        Proto representing the access that a user has to a specific
        feature/service. NextId: 3.
      type: object
      properties:
        type:
          description: An enum that represents the type of this entitlement.
          type: string
          enumDescriptions:
            - The entitlement type is unspecified.
            - >-
              The root entitlement representing Gemini package ownership.This
              will no longer be supported in the future.
            - >-
              The entitlement representing Native Tier, This will be the default
              Entitlement going forward with GCA Enablement.
            - The entitlement representing GCA-Standard Tier.
          enumDeprecated:
            - false
            - true
            - false
            - false
          enum:
            - ENTITLEMENT_TYPE_UNSPECIFIED
            - GEMINI
            - NATIVE
            - GCA_STANDARD
        entitlementState:
          description: The current state of user's accessibility to a feature/benefit.
          type: string
          enumDescriptions:
            - ''
            - >-
              User is entitled to a feature/benefit, but whether it has been
              successfully provisioned is decided by provisioning state.
            - >-
              User is entitled to a feature/benefit, but it was requested to be
              revoked. Whether the revoke has been successful is decided by
              provisioning state.
          enum:
            - ENTITLEMENT_STATE_UNSPECIFIED
            - ENTITLED
            - REVOKED
    UserLabels:
      id: UserLabels
      description: >-
        Message type for storing user labels. User labels are used to tag App
        Engine resources, allowing users to search for resources matching a set
        of labels and to aggregate usage data by labels.
      type: object
      properties:
        labels:
          type: object
          additionalProperties:
            type: string
    MachineConfiguration:
      id: MachineConfiguration
      description: >-
        MachineConfiguration describes the configuration of a machine specific
        to Database Resource.
      type: object
      properties:
        cpuCount:
          description: >-
            The number of CPUs. Deprecated. Use vcpu_count instead.
            TODO(b/342344482) add proto validations again after bug fix.
          deprecated: true
          type: integer
          format: int32
        memorySizeInBytes:
          description: >-
            Memory size in bytes. TODO(b/342344482) add proto validations again
            after bug fix.
          type: string
          format: int64
        shardCount:
          description: Optional. Number of shards (if applicable).
          type: integer
          format: int32
        vcpuCount:
          description: >-
            Optional. The number of vCPUs. TODO(b/342344482) add proto
            validations again after bug fix.
          type: number
          format: double
    Tags:
      id: Tags
      description: >-
        Message type for storing tags. Tags provide a way to create annotations
        for resources, and in some cases conditionally allow or deny policies
        based on whether a resource has a specific tag.
      type: object
      properties:
        tags:
          description: The Tag key/value mappings.
          type: object
          additionalProperties:
            type: string
    GCBDRConfiguration:
      id: GCBDRConfiguration
      description: GCBDR Configuration for the resource.
      type: object
      properties:
        gcbdrManaged:
          description: Whether the resource is managed by GCBDR.
          type: boolean
    BackupDRConfiguration:
      id: BackupDRConfiguration
      description: >-
        BackupDRConfiguration to capture the backup and disaster recovery
        details of database resource.
      type: object
      properties:
        backupdrManaged:
          description: Indicates if the resource is managed by BackupDR.
          type: boolean
    DatabaseResourceHealthSignalData:
      id: DatabaseResourceHealthSignalData
      description: Common model for database resource health signal data.
      type: object
      properties:
        signalId:
          description: >-
            Required. Unique identifier for the signal. This is an unique id
            which would be mainatined by partner to identify a signal.
          type: string
        name:
          description: >-
            Required. The name of the signal, ex: PUBLIC_SQL_INSTANCE,
            SQL_LOG_ERROR_VERBOSITY etc.
          type: string
        externalUri:
          description: >-
            The external-uri of the signal, using which more information about
            this signal can be obtained. In GCP, this will take user to SCC page
            to get more details about signals.
          type: string
        resourceName:
          description: >-
            Required. Database resource name associated with the signal.
            Resource name to follow CAIS resource_name format as noted here
            go/condor-common-datamodel
          type: string
        provider:
          description: 'Cloud provider name. Ex: GCP/AWS/Azure/OnPrem/SelfManaged'
          type: string
          enumDescriptions:
            - ''
            - Google cloud platform provider
            - Amazon web service
            - Azure web service
            - On-prem database resources.
            - >-
              Self-managed database provider. These are resources on a cloud
              platform, e.g., database resource installed in a GCE VM, but not a
              managed database service.
            - >-
              For the rest of the other categories. Other refers to the rest of
              other database service providers, this could be smaller cloud
              provider. This needs to be provided when the provider is known,
              but it is not present in the existing set of enum values.
          enum:
            - PROVIDER_UNSPECIFIED
            - GCP
            - AWS
            - AZURE
            - ONPREM
            - SELFMANAGED
            - PROVIDER_OTHER
        resourceContainer:
          description: >-
            Closest parent container of this resource. In GCP, 'container'
            refers to a Cloud Resource Manager project. It must be resource name
            of a Cloud Resource Manager project with the format of "provider//",
            such as "projects/123". For GCP provided resources, number should be
            project number.
          type: string
        description:
          description: Description associated with signal
          type: string
        eventTime:
          description: >-
            Required. The last time at which the event described by this signal
            took place
          type: string
          format: google-datetime
        state:
          type: string
          enumDescriptions:
            - Unspecified state.
            - The signal requires attention and has not been addressed yet.
            - >-
              The signal has been fixed, triaged as a non-issue or otherwise
              addressed and is no longer active.
            - The signal has been muted.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - RESOLVED
            - MUTED
        signalClass:
          description: >-
            Required. The class of the signal, such as if it's a THREAT or
            VULNERABILITY.
          type: string
          enumDescriptions:
            - Unspecified signal class.
            - Describes unwanted or malicious activity.
            - >-
              Describes a potential weakness in software that increases risk to
              Confidentiality & Integrity & Availability.
            - >-
              Describes a potential weakness in cloud resource/asset
              configuration that increases risk.
            - >-
              Describes a security observation that is for informational
              purposes.
            - Describes an error that prevents some SCC functionality.
          enum:
            - CLASS_UNSPECIFIED
            - THREAT
            - VULNERABILITY
            - MISCONFIGURATION
            - OBSERVATION
            - ERROR
        signalSeverity:
          description: The severity of the signal, such as if it's a HIGH or LOW severity.
          type: string
          enumDescriptions:
            - >-
              This value is used for findings when a source doesn't write a
              severity value.
            - >-
              A critical vulnerability is easily discoverable by an external
              actor, exploitable.
            - >-
              A high risk vulnerability can be easily discovered and exploited
              in combination with other vulnerabilities.
            - >-
              A medium risk vulnerability could be used by an actor to gain
              access to resources or privileges that enable them to eventually
              gain access and the ability to execute arbitrary code or
              exfiltrate data.
            - >-
              A low risk vulnerability hampers a security organization's ability
              to detect vulnerabilities or active threats in their deployment.
          enum:
            - SIGNAL_SEVERITY_UNSPECIFIED
            - CRITICAL
            - HIGH
            - MEDIUM
            - LOW
        compliance:
          description: >-
            Industry standards associated with this signal; if this signal is an
            issue, that could be a violation of the associated industry
            standard(s). For example, AUTO_BACKUP_DISABLED signal is associated
            with CIS GCP 1.1, CIS GCP 1.2, CIS GCP 1.3, NIST 800-53 and
            ISO-27001 compliance standards. If a database resource does not have
            automated backup enable, it will violate these following industry
            standards.
          type: array
          items:
            $ref: '#/components/schemas/Compliance'
        additionalMetadata:
          description: Any other additional metadata
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        signalType:
          description: >-
            Required. Type of signal, for example,
            `AVAILABLE_IN_MULTIPLE_ZONES`, `LOGGING_MOST_ERRORS`, etc.
          type: string
          enumDescriptions:
            - Unspecified.
            - >-
              Represents if a resource is protected by automatic failover.
              Checks for resources that are configured to have redundancy within
              a region that enables automatic failover.
            - >-
              Represents if a group is replicating across regions. Checks for
              resources that are configured to have redundancy, and ongoing
              replication, across regions.
            - Represents if the resource is available in multiple zones or not.
            - Represents if a resource is available in multiple regions.
            - Represents if a resource has a promotable replica.
            - Represents if a resource has an automated backup policy.
            - Represents if a resources has a short backup retention period.
            - Represents if the last backup of a resource failed.
            - >-
              Represents if the last backup of a resource is older than some
              threshold value.
            - Represents if a resource violates CIS GCP Foundation 2.0.
            - Represents if a resource violates CIS GCP Foundation 1.3.
            - Represents if a resource violates CIS GCP Foundation 1.2.
            - Represents if a resource violates CIS GCP Foundation 1.1.
            - Represents if a resource violates CIS GCP Foundation 1.0.
            - Represents if a resource violates CIS Controls 8.0.
            - Represents if a resource violates NIST 800-53.
            - Represents if a resource violates NIST 800-53 R5.
            - >-
              Represents if a resource violates NIST Cybersecurity Framework
              1.0.
            - Represents if a resource violates ISO-27001.
            - Represents if a resource violates ISO 27001 2022.
            - Represents if a resource violates PCI-DSS v3.2.1.
            - Represents if a resource violates PCI-DSS v4.0.
            - Represents if a resource violates Cloud Controls Matrix v4.0.
            - Represents if a resource violates HIPAA.
            - Represents if a resource violates SOC2 v2017.
            - >-
              Represents if log_checkpoints database flag for a Cloud SQL for
              PostgreSQL instance is not set to on.
            - >-
              Represents if the log_duration database flag for a Cloud SQL for
              PostgreSQL instance is not set to on.
            - >-
              Represents if the log_error_verbosity database flag for a Cloud
              SQL for PostgreSQL instance is not set to default or stricter
              (default or terse).
            - >-
              Represents if the log_lock_waits database flag for a Cloud SQL for
              PostgreSQL instance is not set to on.
            - >-
              Represents if the log_min_error_statement database flag for a
              Cloud SQL for PostgreSQL instance is not set appropriately.
            - >-
              Represents if the log_min_error_statement database flag for a
              Cloud SQL for PostgreSQL instance does not have an appropriate
              severity level.
            - >-
              Represents if the log_min_messages database flag for a Cloud SQL
              for PostgreSQL instance is not set to warning or another
              recommended value.
            - >-
              Represents if the databaseFlags property of instance metadata for
              the log_executor_status field is set to on.
            - >-
              Represents if the log_hostname database flag for a Cloud SQL for
              PostgreSQL instance is not set to off.
            - >-
              Represents if the log_parser_stats database flag for a Cloud SQL
              for PostgreSQL instance is not set to off.
            - >-
              Represents if the log_planner_stats database flag for a Cloud SQL
              for PostgreSQL instance is not set to off.
            - >-
              Represents if the log_statement database flag for a Cloud SQL for
              PostgreSQL instance is not set to DDL (all data definition
              statements).
            - >-
              Represents if the log_statement_stats database flag for a Cloud
              SQL for PostgreSQL instance is not set to off.
            - >-
              Represents if the log_temp_files database flag for a Cloud SQL for
              PostgreSQL instance is not set to "0". (NOTE: 0 = ON)
            - >-
              Represents if the user connections database flag for a Cloud SQL
              for SQL Server instance is configured.
            - >-
              Represents if the user options database flag for Cloud SQL SQL
              Server instance is configured or not.
            - Represents if a resource is exposed to public access.
            - >-
              Represents if a resources requires all incoming connections to use
              SSL or not.
            - >-
              Represents if a Cloud SQL database has a password configured for
              the root account or not.
            - >-
              Represents if a Cloud SQL database has a weak password configured
              for the root account.
            - >-
              Represents if a SQL database instance is not encrypted with
              customer-managed encryption keys (CMEK).
            - >-
              Represents if The contained database authentication database flag
              for a Cloud SQL for SQL Server instance is not set to off.
            - >-
              Represents if the cross_db_ownership_chaining database flag for a
              Cloud SQL for SQL Server instance is not set to off.
            - >-
              Represents if he external scripts enabled database flag for a
              Cloud SQL for SQL Server instance is not set to off.
            - >-
              Represents if the local_infile database flag for a Cloud SQL for
              MySQL instance is not set to off.
            - >-
              Represents if the log_connections database flag for a Cloud SQL
              for PostgreSQL instance is not set to on.
            - >-
              Represents if the log_disconnections database flag for a Cloud SQL
              for PostgreSQL instance is not set to on.
            - >-
              Represents if the log_min_duration_statement database flag for a
              Cloud SQL for PostgreSQL instance is not set to -1.
            - >-
              Represents if the remote access database flag for a Cloud SQL for
              SQL Server instance is not set to off.
            - >-
              Represents if the skip_show_database database flag for a Cloud SQL
              for MySQL instance is not set to on.
            - >-
              Represents if the 3625 (trace flag) database flag for a Cloud SQL
              for SQL Server instance is not set to on.
            - Represents if public IP is enabled.
            - Represents Idle instance helps to reduce costs.
            - >-
              Represents instances that are unnecessarily large for given
              workload.
            - Represents high number of concurrently opened tables.
            - Represents high table count close to SLA limit.
            - Represents high number of unvacuumed transactions
            - Represents need for more CPU and/or memory
            - Represents out of disk.
            - Represents server certificate is near expiry.
            - Represents database auditing is disabled.
            - Represents not restricted to authorized networks.
            - Represents violate org policy restrict public ip.
            - Cluster nearing quota limit
            - No password policy set on resources
            - Performance impact of connections settings
            - Performance impact of temporary tables settings
            - Performance impact of transaction logs settings
            - Performance impact of high joins without indexes
            - >-
              Detects events where a Cloud SQL superuser (postgres for
              PostgreSQL servers or root for MySQL users) writes to non-system
              tables.
            - >-
              Detects events where a database user or role has been granted all
              privileges to a database, or to all tables, procedures, or
              functions in a schema.
            - >-
              Detects if database instance data exported to a Cloud Storage
              bucket outside of the organization.
            - >-
              Detects if database instance data exported to a Cloud Storage
              bucket that is owned by the organization and is publicly
              accessible.
            - >-
              Detects if a database instance is using a weak password hash
              algorithm.
            - Detects if a database instance has no user password policy set.
            - Detects if a database instance/cluster has a hot node.
            - >-
              Detects if a database instance has no point in time recovery
              enabled.
            - Detects if a database instance/cluster is suspended.
            - >-
              Detects that expensive commands are being run on a database
              instance impacting overall performance.
            - >-
              Indicates that the instance does not have a maintenance policy
              configured.
            - Deletion Protection Disabled for the resource
            - Indicates that the instance has inefficient queries detected.
            - Indicates that the instance has read intensive workload.
            - Indicates that the instance is nearing memory limit.
            - >-
              Indicates that the instance's max server memory is configured
              higher than the recommended value.
            - >-
              Indicates that the database has large rows beyond the recommended
              limit.
            - Heavy write pressure on the database rows.
            - Heavy read pressure on the database rows.
            - Encryption org policy not satisfied.
            - Location org policy not satisfied.
            - Outdated DB minor version.
            - Schema not optimized.
            - High number of idle connections.
            - Replication delay.
            - Outdated version.
            - Outdated client.
          enumDeprecated:
            - false
            - false
            - false
            - true
            - true
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
          enum:
            - SIGNAL_TYPE_UNSPECIFIED
            - SIGNAL_TYPE_NOT_PROTECTED_BY_AUTOMATIC_FAILOVER
            - SIGNAL_TYPE_GROUP_NOT_REPLICATING_ACROSS_REGIONS
            - SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_ZONES
            - SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_REGIONS
            - SIGNAL_TYPE_NO_PROMOTABLE_REPLICA
            - SIGNAL_TYPE_NO_AUTOMATED_BACKUP_POLICY
            - SIGNAL_TYPE_SHORT_BACKUP_RETENTION
            - SIGNAL_TYPE_LAST_BACKUP_FAILED
            - SIGNAL_TYPE_LAST_BACKUP_OLD
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_2_0
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_3
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_2
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_1
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_0
            - SIGNAL_TYPE_VIOLATES_CIS_CONTROLS_V8_0
            - SIGNAL_TYPE_VIOLATES_NIST_800_53
            - SIGNAL_TYPE_VIOLATES_NIST_800_53_R5
            - SIGNAL_TYPE_VIOLATES_NIST_CYBERSECURITY_FRAMEWORK_V1_0
            - SIGNAL_TYPE_VIOLATES_ISO_27001
            - SIGNAL_TYPE_VIOLATES_ISO_27001_V2022
            - SIGNAL_TYPE_VIOLATES_PCI_DSS_V3_2_1
            - SIGNAL_TYPE_VIOLATES_PCI_DSS_V4_0
            - SIGNAL_TYPE_VIOLATES_CLOUD_CONTROLS_MATRIX_V4
            - SIGNAL_TYPE_VIOLATES_HIPAA
            - SIGNAL_TYPE_VIOLATES_SOC2_V2017
            - SIGNAL_TYPE_LOGS_NOT_OPTIMIZED_FOR_TROUBLESHOOTING
            - SIGNAL_TYPE_QUERY_DURATIONS_NOT_LOGGED
            - SIGNAL_TYPE_VERBOSE_ERROR_LOGGING
            - SIGNAL_TYPE_QUERY_LOCK_WAITS_NOT_LOGGED
            - SIGNAL_TYPE_LOGGING_MOST_ERRORS
            - SIGNAL_TYPE_LOGGING_ONLY_CRITICAL_ERRORS
            - SIGNAL_TYPE_MINIMAL_ERROR_LOGGING
            - SIGNAL_TYPE_QUERY_STATISTICS_LOGGED
            - SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_CLIENT_HOSTNAME
            - SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PARSER_STATISTICS
            - SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PLANNER_STATISTICS
            - SIGNAL_TYPE_NOT_LOGGING_ONLY_DDL_STATEMENTS
            - SIGNAL_TYPE_LOGGING_QUERY_STATISTICS
            - SIGNAL_TYPE_NOT_LOGGING_TEMPORARY_FILES
            - SIGNAL_TYPE_CONNECTION_MAX_NOT_CONFIGURED
            - SIGNAL_TYPE_USER_OPTIONS_CONFIGURED
            - SIGNAL_TYPE_EXPOSED_TO_PUBLIC_ACCESS
            - SIGNAL_TYPE_UNENCRYPTED_CONNECTIONS
            - SIGNAL_TYPE_NO_ROOT_PASSWORD
            - SIGNAL_TYPE_WEAK_ROOT_PASSWORD
            - SIGNAL_TYPE_ENCRYPTION_KEY_NOT_CUSTOMER_MANAGED
            - SIGNAL_TYPE_SERVER_AUTHENTICATION_NOT_REQUIRED
            - SIGNAL_TYPE_EXPOSED_BY_OWNERSHIP_CHAINING
            - SIGNAL_TYPE_EXPOSED_TO_EXTERNAL_SCRIPTS
            - SIGNAL_TYPE_EXPOSED_TO_LOCAL_DATA_LOADS
            - SIGNAL_TYPE_CONNECTION_ATTEMPTS_NOT_LOGGED
            - SIGNAL_TYPE_DISCONNECTIONS_NOT_LOGGED
            - SIGNAL_TYPE_LOGGING_EXCESSIVE_STATEMENT_INFO
            - SIGNAL_TYPE_EXPOSED_TO_REMOTE_ACCESS
            - SIGNAL_TYPE_DATABASE_NAMES_EXPOSED
            - SIGNAL_TYPE_SENSITIVE_TRACE_INFO_NOT_MASKED
            - SIGNAL_TYPE_PUBLIC_IP_ENABLED
            - SIGNAL_TYPE_IDLE
            - SIGNAL_TYPE_OVERPROVISIONED
            - SIGNAL_TYPE_HIGH_NUMBER_OF_OPEN_TABLES
            - SIGNAL_TYPE_HIGH_NUMBER_OF_TABLES
            - SIGNAL_TYPE_HIGH_TRANSACTION_ID_UTILIZATION
            - SIGNAL_TYPE_UNDERPROVISIONED
            - SIGNAL_TYPE_OUT_OF_DISK
            - SIGNAL_TYPE_SERVER_CERTIFICATE_NEAR_EXPIRY
            - SIGNAL_TYPE_DATABASE_AUDITING_DISABLED
            - SIGNAL_TYPE_RESTRICT_AUTHORIZED_NETWORKS
            - SIGNAL_TYPE_VIOLATE_POLICY_RESTRICT_PUBLIC_IP
            - SIGNAL_TYPE_QUOTA_LIMIT
            - SIGNAL_TYPE_NO_PASSWORD_POLICY
            - SIGNAL_TYPE_CONNECTIONS_PERFORMANCE_IMPACT
            - SIGNAL_TYPE_TMP_TABLES_PERFORMANCE_IMPACT
            - SIGNAL_TYPE_TRANS_LOGS_PERFORMANCE_IMPACT
            - SIGNAL_TYPE_HIGH_JOINS_WITHOUT_INDEXES
            - SIGNAL_TYPE_SUPERUSER_WRITING_TO_USER_TABLES
            - SIGNAL_TYPE_USER_GRANTED_ALL_PERMISSIONS
            - SIGNAL_TYPE_DATA_EXPORT_TO_EXTERNAL_CLOUD_STORAGE_BUCKET
            - SIGNAL_TYPE_DATA_EXPORT_TO_PUBLIC_CLOUD_STORAGE_BUCKET
            - SIGNAL_TYPE_WEAK_PASSWORD_HASH_ALGORITHM
            - SIGNAL_TYPE_NO_USER_PASSWORD_POLICY
            - SIGNAL_TYPE_HOT_NODE
            - SIGNAL_TYPE_NO_POINT_IN_TIME_RECOVERY
            - SIGNAL_TYPE_RESOURCE_SUSPENDED
            - SIGNAL_TYPE_EXPENSIVE_COMMANDS
            - SIGNAL_TYPE_NO_MAINTENANCE_POLICY_CONFIGURED
            - SIGNAL_TYPE_NO_DELETION_PROTECTION
            - SIGNAL_TYPE_INEFFICIENT_QUERY
            - SIGNAL_TYPE_READ_INTENSIVE_WORKLOAD
            - SIGNAL_TYPE_MEMORY_LIMIT
            - SIGNAL_TYPE_MAX_SERVER_MEMORY
            - SIGNAL_TYPE_LARGE_ROWS
            - SIGNAL_TYPE_HIGH_WRITE_PRESSURE
            - SIGNAL_TYPE_HIGH_READ_PRESSURE
            - SIGNAL_TYPE_ENCRYPTION_ORG_POLICY_NOT_SATISFIED
            - SIGNAL_TYPE_LOCATION_ORG_POLICY_NOT_SATISFIED
            - SIGNAL_TYPE_OUTDATED_MINOR_VERSION
            - SIGNAL_TYPE_SCHEMA_NOT_OPTIMIZED
            - SIGNAL_TYPE_MANY_IDLE_CONNECTIONS
            - SIGNAL_TYPE_REPLICATION_LAG
            - SIGNAL_TYPE_OUTDATED_VERSION
            - SIGNAL_TYPE_OUTDATED_CLIENT
        location:
          description: >-
            This is used to identify the location of the resource. Example:
            "us-central1"
          type: string
    Compliance:
      id: Compliance
      description: >-
        Contains compliance information about a security standard indicating
        unmet recommendations.
      type: object
      properties:
        standard:
          description: >-
            Industry-wide compliance standards or benchmarks, such as CIS, PCI,
            and OWASP.
          type: string
        version:
          description: Version of the standard or benchmark, for example, 1.1
          type: string
    DatabaseResourceRecommendationSignalData:
      id: DatabaseResourceRecommendationSignalData
      description: Common model for database resource recommendation signal data.
      type: object
      properties:
        resourceName:
          description: >-
            Required. Database resource name associated with the signal.
            Resource name to follow CAIS resource_name format as noted here
            go/condor-common-datamodel
          type: string
        signalType:
          description: >-
            Required. Type of signal, for example, `SIGNAL_TYPE_IDLE`,
            `SIGNAL_TYPE_HIGH_NUMBER_OF_TABLES`, etc.
          type: string
          enumDescriptions:
            - Unspecified.
            - >-
              Represents if a resource is protected by automatic failover.
              Checks for resources that are configured to have redundancy within
              a region that enables automatic failover.
            - >-
              Represents if a group is replicating across regions. Checks for
              resources that are configured to have redundancy, and ongoing
              replication, across regions.
            - Represents if the resource is available in multiple zones or not.
            - Represents if a resource is available in multiple regions.
            - Represents if a resource has a promotable replica.
            - Represents if a resource has an automated backup policy.
            - Represents if a resources has a short backup retention period.
            - Represents if the last backup of a resource failed.
            - >-
              Represents if the last backup of a resource is older than some
              threshold value.
            - Represents if a resource violates CIS GCP Foundation 2.0.
            - Represents if a resource violates CIS GCP Foundation 1.3.
            - Represents if a resource violates CIS GCP Foundation 1.2.
            - Represents if a resource violates CIS GCP Foundation 1.1.
            - Represents if a resource violates CIS GCP Foundation 1.0.
            - Represents if a resource violates CIS Controls 8.0.
            - Represents if a resource violates NIST 800-53.
            - Represents if a resource violates NIST 800-53 R5.
            - >-
              Represents if a resource violates NIST Cybersecurity Framework
              1.0.
            - Represents if a resource violates ISO-27001.
            - Represents if a resource violates ISO 27001 2022.
            - Represents if a resource violates PCI-DSS v3.2.1.
            - Represents if a resource violates PCI-DSS v4.0.
            - Represents if a resource violates Cloud Controls Matrix v4.0.
            - Represents if a resource violates HIPAA.
            - Represents if a resource violates SOC2 v2017.
            - >-
              Represents if log_checkpoints database flag for a Cloud SQL for
              PostgreSQL instance is not set to on.
            - >-
              Represents if the log_duration database flag for a Cloud SQL for
              PostgreSQL instance is not set to on.
            - >-
              Represents if the log_error_verbosity database flag for a Cloud
              SQL for PostgreSQL instance is not set to default or stricter
              (default or terse).
            - >-
              Represents if the log_lock_waits database flag for a Cloud SQL for
              PostgreSQL instance is not set to on.
            - >-
              Represents if the log_min_error_statement database flag for a
              Cloud SQL for PostgreSQL instance is not set appropriately.
            - >-
              Represents if the log_min_error_statement database flag for a
              Cloud SQL for PostgreSQL instance does not have an appropriate
              severity level.
            - >-
              Represents if the log_min_messages database flag for a Cloud SQL
              for PostgreSQL instance is not set to warning or another
              recommended value.
            - >-
              Represents if the databaseFlags property of instance metadata for
              the log_executor_status field is set to on.
            - >-
              Represents if the log_hostname database flag for a Cloud SQL for
              PostgreSQL instance is not set to off.
            - >-
              Represents if the log_parser_stats database flag for a Cloud SQL
              for PostgreSQL instance is not set to off.
            - >-
              Represents if the log_planner_stats database flag for a Cloud SQL
              for PostgreSQL instance is not set to off.
            - >-
              Represents if the log_statement database flag for a Cloud SQL for
              PostgreSQL instance is not set to DDL (all data definition
              statements).
            - >-
              Represents if the log_statement_stats database flag for a Cloud
              SQL for PostgreSQL instance is not set to off.
            - >-
              Represents if the log_temp_files database flag for a Cloud SQL for
              PostgreSQL instance is not set to "0". (NOTE: 0 = ON)
            - >-
              Represents if the user connections database flag for a Cloud SQL
              for SQL Server instance is configured.
            - >-
              Represents if the user options database flag for Cloud SQL SQL
              Server instance is configured or not.
            - Represents if a resource is exposed to public access.
            - >-
              Represents if a resources requires all incoming connections to use
              SSL or not.
            - >-
              Represents if a Cloud SQL database has a password configured for
              the root account or not.
            - >-
              Represents if a Cloud SQL database has a weak password configured
              for the root account.
            - >-
              Represents if a SQL database instance is not encrypted with
              customer-managed encryption keys (CMEK).
            - >-
              Represents if The contained database authentication database flag
              for a Cloud SQL for SQL Server instance is not set to off.
            - >-
              Represents if the cross_db_ownership_chaining database flag for a
              Cloud SQL for SQL Server instance is not set to off.
            - >-
              Represents if he external scripts enabled database flag for a
              Cloud SQL for SQL Server instance is not set to off.
            - >-
              Represents if the local_infile database flag for a Cloud SQL for
              MySQL instance is not set to off.
            - >-
              Represents if the log_connections database flag for a Cloud SQL
              for PostgreSQL instance is not set to on.
            - >-
              Represents if the log_disconnections database flag for a Cloud SQL
              for PostgreSQL instance is not set to on.
            - >-
              Represents if the log_min_duration_statement database flag for a
              Cloud SQL for PostgreSQL instance is not set to -1.
            - >-
              Represents if the remote access database flag for a Cloud SQL for
              SQL Server instance is not set to off.
            - >-
              Represents if the skip_show_database database flag for a Cloud SQL
              for MySQL instance is not set to on.
            - >-
              Represents if the 3625 (trace flag) database flag for a Cloud SQL
              for SQL Server instance is not set to on.
            - Represents if public IP is enabled.
            - Represents Idle instance helps to reduce costs.
            - >-
              Represents instances that are unnecessarily large for given
              workload.
            - Represents high number of concurrently opened tables.
            - Represents high table count close to SLA limit.
            - Represents high number of unvacuumed transactions
            - Represents need for more CPU and/or memory
            - Represents out of disk.
            - Represents server certificate is near expiry.
            - Represents database auditing is disabled.
            - Represents not restricted to authorized networks.
            - Represents violate org policy restrict public ip.
            - Cluster nearing quota limit
            - No password policy set on resources
            - Performance impact of connections settings
            - Performance impact of temporary tables settings
            - Performance impact of transaction logs settings
            - Performance impact of high joins without indexes
            - >-
              Detects events where a Cloud SQL superuser (postgres for
              PostgreSQL servers or root for MySQL users) writes to non-system
              tables.
            - >-
              Detects events where a database user or role has been granted all
              privileges to a database, or to all tables, procedures, or
              functions in a schema.
            - >-
              Detects if database instance data exported to a Cloud Storage
              bucket outside of the organization.
            - >-
              Detects if database instance data exported to a Cloud Storage
              bucket that is owned by the organization and is publicly
              accessible.
            - >-
              Detects if a database instance is using a weak password hash
              algorithm.
            - Detects if a database instance has no user password policy set.
            - Detects if a database instance/cluster has a hot node.
            - >-
              Detects if a database instance has no point in time recovery
              enabled.
            - Detects if a database instance/cluster is suspended.
            - >-
              Detects that expensive commands are being run on a database
              instance impacting overall performance.
            - >-
              Indicates that the instance does not have a maintenance policy
              configured.
            - Deletion Protection Disabled for the resource
            - Indicates that the instance has inefficient queries detected.
            - Indicates that the instance has read intensive workload.
            - Indicates that the instance is nearing memory limit.
            - >-
              Indicates that the instance's max server memory is configured
              higher than the recommended value.
            - >-
              Indicates that the database has large rows beyond the recommended
              limit.
            - Heavy write pressure on the database rows.
            - Heavy read pressure on the database rows.
            - Encryption org policy not satisfied.
            - Location org policy not satisfied.
            - Outdated DB minor version.
            - Schema not optimized.
            - High number of idle connections.
            - Replication delay.
            - Outdated version.
            - Outdated client.
          enumDeprecated:
            - false
            - false
            - false
            - true
            - true
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
          enum:
            - SIGNAL_TYPE_UNSPECIFIED
            - SIGNAL_TYPE_NOT_PROTECTED_BY_AUTOMATIC_FAILOVER
            - SIGNAL_TYPE_GROUP_NOT_REPLICATING_ACROSS_REGIONS
            - SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_ZONES
            - SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_REGIONS
            - SIGNAL_TYPE_NO_PROMOTABLE_REPLICA
            - SIGNAL_TYPE_NO_AUTOMATED_BACKUP_POLICY
            - SIGNAL_TYPE_SHORT_BACKUP_RETENTION
            - SIGNAL_TYPE_LAST_BACKUP_FAILED
            - SIGNAL_TYPE_LAST_BACKUP_OLD
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_2_0
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_3
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_2
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_1
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_0
            - SIGNAL_TYPE_VIOLATES_CIS_CONTROLS_V8_0
            - SIGNAL_TYPE_VIOLATES_NIST_800_53
            - SIGNAL_TYPE_VIOLATES_NIST_800_53_R5
            - SIGNAL_TYPE_VIOLATES_NIST_CYBERSECURITY_FRAMEWORK_V1_0
            - SIGNAL_TYPE_VIOLATES_ISO_27001
            - SIGNAL_TYPE_VIOLATES_ISO_27001_V2022
            - SIGNAL_TYPE_VIOLATES_PCI_DSS_V3_2_1
            - SIGNAL_TYPE_VIOLATES_PCI_DSS_V4_0
            - SIGNAL_TYPE_VIOLATES_CLOUD_CONTROLS_MATRIX_V4
            - SIGNAL_TYPE_VIOLATES_HIPAA
            - SIGNAL_TYPE_VIOLATES_SOC2_V2017
            - SIGNAL_TYPE_LOGS_NOT_OPTIMIZED_FOR_TROUBLESHOOTING
            - SIGNAL_TYPE_QUERY_DURATIONS_NOT_LOGGED
            - SIGNAL_TYPE_VERBOSE_ERROR_LOGGING
            - SIGNAL_TYPE_QUERY_LOCK_WAITS_NOT_LOGGED
            - SIGNAL_TYPE_LOGGING_MOST_ERRORS
            - SIGNAL_TYPE_LOGGING_ONLY_CRITICAL_ERRORS
            - SIGNAL_TYPE_MINIMAL_ERROR_LOGGING
            - SIGNAL_TYPE_QUERY_STATISTICS_LOGGED
            - SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_CLIENT_HOSTNAME
            - SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PARSER_STATISTICS
            - SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PLANNER_STATISTICS
            - SIGNAL_TYPE_NOT_LOGGING_ONLY_DDL_STATEMENTS
            - SIGNAL_TYPE_LOGGING_QUERY_STATISTICS
            - SIGNAL_TYPE_NOT_LOGGING_TEMPORARY_FILES
            - SIGNAL_TYPE_CONNECTION_MAX_NOT_CONFIGURED
            - SIGNAL_TYPE_USER_OPTIONS_CONFIGURED
            - SIGNAL_TYPE_EXPOSED_TO_PUBLIC_ACCESS
            - SIGNAL_TYPE_UNENCRYPTED_CONNECTIONS
            - SIGNAL_TYPE_NO_ROOT_PASSWORD
            - SIGNAL_TYPE_WEAK_ROOT_PASSWORD
            - SIGNAL_TYPE_ENCRYPTION_KEY_NOT_CUSTOMER_MANAGED
            - SIGNAL_TYPE_SERVER_AUTHENTICATION_NOT_REQUIRED
            - SIGNAL_TYPE_EXPOSED_BY_OWNERSHIP_CHAINING
            - SIGNAL_TYPE_EXPOSED_TO_EXTERNAL_SCRIPTS
            - SIGNAL_TYPE_EXPOSED_TO_LOCAL_DATA_LOADS
            - SIGNAL_TYPE_CONNECTION_ATTEMPTS_NOT_LOGGED
            - SIGNAL_TYPE_DISCONNECTIONS_NOT_LOGGED
            - SIGNAL_TYPE_LOGGING_EXCESSIVE_STATEMENT_INFO
            - SIGNAL_TYPE_EXPOSED_TO_REMOTE_ACCESS
            - SIGNAL_TYPE_DATABASE_NAMES_EXPOSED
            - SIGNAL_TYPE_SENSITIVE_TRACE_INFO_NOT_MASKED
            - SIGNAL_TYPE_PUBLIC_IP_ENABLED
            - SIGNAL_TYPE_IDLE
            - SIGNAL_TYPE_OVERPROVISIONED
            - SIGNAL_TYPE_HIGH_NUMBER_OF_OPEN_TABLES
            - SIGNAL_TYPE_HIGH_NUMBER_OF_TABLES
            - SIGNAL_TYPE_HIGH_TRANSACTION_ID_UTILIZATION
            - SIGNAL_TYPE_UNDERPROVISIONED
            - SIGNAL_TYPE_OUT_OF_DISK
            - SIGNAL_TYPE_SERVER_CERTIFICATE_NEAR_EXPIRY
            - SIGNAL_TYPE_DATABASE_AUDITING_DISABLED
            - SIGNAL_TYPE_RESTRICT_AUTHORIZED_NETWORKS
            - SIGNAL_TYPE_VIOLATE_POLICY_RESTRICT_PUBLIC_IP
            - SIGNAL_TYPE_QUOTA_LIMIT
            - SIGNAL_TYPE_NO_PASSWORD_POLICY
            - SIGNAL_TYPE_CONNECTIONS_PERFORMANCE_IMPACT
            - SIGNAL_TYPE_TMP_TABLES_PERFORMANCE_IMPACT
            - SIGNAL_TYPE_TRANS_LOGS_PERFORMANCE_IMPACT
            - SIGNAL_TYPE_HIGH_JOINS_WITHOUT_INDEXES
            - SIGNAL_TYPE_SUPERUSER_WRITING_TO_USER_TABLES
            - SIGNAL_TYPE_USER_GRANTED_ALL_PERMISSIONS
            - SIGNAL_TYPE_DATA_EXPORT_TO_EXTERNAL_CLOUD_STORAGE_BUCKET
            - SIGNAL_TYPE_DATA_EXPORT_TO_PUBLIC_CLOUD_STORAGE_BUCKET
            - SIGNAL_TYPE_WEAK_PASSWORD_HASH_ALGORITHM
            - SIGNAL_TYPE_NO_USER_PASSWORD_POLICY
            - SIGNAL_TYPE_HOT_NODE
            - SIGNAL_TYPE_NO_POINT_IN_TIME_RECOVERY
            - SIGNAL_TYPE_RESOURCE_SUSPENDED
            - SIGNAL_TYPE_EXPENSIVE_COMMANDS
            - SIGNAL_TYPE_NO_MAINTENANCE_POLICY_CONFIGURED
            - SIGNAL_TYPE_NO_DELETION_PROTECTION
            - SIGNAL_TYPE_INEFFICIENT_QUERY
            - SIGNAL_TYPE_READ_INTENSIVE_WORKLOAD
            - SIGNAL_TYPE_MEMORY_LIMIT
            - SIGNAL_TYPE_MAX_SERVER_MEMORY
            - SIGNAL_TYPE_LARGE_ROWS
            - SIGNAL_TYPE_HIGH_WRITE_PRESSURE
            - SIGNAL_TYPE_HIGH_READ_PRESSURE
            - SIGNAL_TYPE_ENCRYPTION_ORG_POLICY_NOT_SATISFIED
            - SIGNAL_TYPE_LOCATION_ORG_POLICY_NOT_SATISFIED
            - SIGNAL_TYPE_OUTDATED_MINOR_VERSION
            - SIGNAL_TYPE_SCHEMA_NOT_OPTIMIZED
            - SIGNAL_TYPE_MANY_IDLE_CONNECTIONS
            - SIGNAL_TYPE_REPLICATION_LAG
            - SIGNAL_TYPE_OUTDATED_VERSION
            - SIGNAL_TYPE_OUTDATED_CLIENT
        lastRefreshTime:
          description: Required. last time recommendationw as refreshed
          type: string
          format: google-datetime
        recommendationState:
          description: Required. Recommendation state
          type: string
          enumDescriptions:
            - ''
            - >-
              Recommendation is active and can be applied. ACTIVE
              recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.
            - >-
              Recommendation is in claimed state. Recommendations content is
              immutable and cannot be updated by Google. CLAIMED recommendations
              can be marked as CLAIMED, SUCCEEDED, or FAILED.
            - >-
              Recommendation is in succeeded state. Recommendations content is
              immutable and cannot be updated by Google. SUCCEEDED
              recommendations can be marked as SUCCEEDED, or FAILED.
            - >-
              Recommendation is in failed state. Recommendations content is
              immutable and cannot be updated by Google. FAILED recommendations
              can be marked as SUCCEEDED, or FAILED.
            - >-
              Recommendation is in dismissed state. Recommendation content can
              be updated by Google. DISMISSED recommendations can be marked as
              ACTIVE.
          enum:
            - UNSPECIFIED
            - ACTIVE
            - CLAIMED
            - SUCCEEDED
            - FAILED
            - DISMISSED
        recommender:
          description: >-
            Required. Name of recommendation. Examples:
            organizations/1234/locations/us-central1/recommenders/google.cloudsql.instance.PerformanceRecommender/recommendations/9876
          type: string
        recommenderId:
          description: >-
            Required. ID of recommender. Examples:
            "google.cloudsql.instance.PerformanceRecommender"
          type: string
        recommenderSubtype:
          description: >-
            Required. Contains an identifier for a subtype of recommendations
            produced for the same recommender. Subtype is a function of content
            and impact, meaning a new subtype might be added when significant
            changes to `content` or `primary_impact.category` are introduced.
            See the Recommenders section to see a list of subtypes for a given
            Recommender. Examples: For recommender =
            "google.cloudsql.instance.PerformanceRecommender",
            recommender_subtype can be
            "MYSQL_HIGH_NUMBER_OF_OPEN_TABLES_BEST_PRACTICE"/"POSTGRES_HIGH_TRANSACTION_ID_UTILIZATION_BEST_PRACTICE"
          type: string
        additionalMetadata:
          description: Optional. Any other additional metadata specific to recommendation
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    ObservabilityMetricData:
      id: ObservabilityMetricData
      type: object
      properties:
        resourceName:
          description: >-
            Required. Database resource name associated with the signal.
            Resource name to follow CAIS resource_name format as noted here
            go/condor-common-datamodel
          type: string
        metricType:
          description: Required. Type of metric like CPU, Memory, etc.
          type: string
          enumDescriptions:
            - Unspecified metric type.
            - >-
              CPU utilization for a resource. The value is a fraction between
              0.0 and 1.0 (may momentarily exceed 1.0 in some cases).
            - >-
              Memory utilization for a resource. The value is a fraction between
              0.0 and 1.0 (may momentarily exceed 1.0 in some cases).
            - Number of network connections for a resource.
            - >-
              Storage utilization for a resource. The value is a fraction
              between 0.0 and 1.0 (may momentarily exceed 1.0 in some cases).
            - Sotrage used by a resource.
            - >-
              Node count for a resource. It represents the number of node units
              in a bigtable/spanner instance.
            - Memory used by a resource (in bytes).
            - >-
              Processing units used by a resource. It represents the number of
              processing units in a spanner instance.
          enum:
            - METRIC_TYPE_UNSPECIFIED
            - CPU_UTILIZATION
            - MEMORY_UTILIZATION
            - NETWORK_CONNECTIONS
            - STORAGE_UTILIZATION
            - STORAGE_USED_BYTES
            - NODE_COUNT
            - MEMORY_USED_BYTES
            - PROCESSING_UNIT_COUNT
        aggregationType:
          description: Required. Type of aggregation performed on the metric.
          type: string
          enumDescriptions:
            - Unspecified aggregation type.
            - PEAK aggregation type.
            - P99 aggregation type.
            - P95 aggregation type.
            - current aggregation type.
          enum:
            - AGGREGATION_TYPE_UNSPECIFIED
            - PEAK
            - P99
            - P95
            - CURRENT
        value:
          description: Required. Value of the metric type.
          $ref: '#/components/schemas/TypedValue'
        observationTime:
          description: Required. The time the metric value was observed.
          type: string
          format: google-datetime
    TypedValue:
      id: TypedValue
      description: >-
        TypedValue represents the value of a metric type. It can either be a
        double, an int64, a string or a bool.
      type: object
      properties:
        doubleValue:
          description: For double value
          type: number
          format: double
        int64Value:
          description: For integer value
          type: string
          format: int64
        stringValue:
          description: For string value
          type: string
        boolValue:
          description: For boolean value
          type: boolean
    ConfigBasedSignalData:
      id: ConfigBasedSignalData
      description: >-
        Config based signal data. This is used to send signals to Condor which
        are based on the DB level configurations. These will be used to send
        signals for self managed databases.
      type: object
      properties:
        resourceId:
          description: Database resource id.
          $ref: '#/components/schemas/DatabaseResourceId'
        fullResourceName:
          description: Required. Full Resource name of the source resource.
          type: string
        lastRefreshTime:
          description: Required. Last time signal was refreshed
          type: string
          format: google-datetime
        signalType:
          description: Required. Signal type of the signal
          type: string
          enumDescriptions:
            - Unspecified signal type.
            - Outdated Minor Version
            - Represents database auditing is disabled.
            - >-
              Represents if a database has a password configured for the root
              account or not.
            - Represents if a resource is exposed to public access.
            - >-
              Represents if a resources requires all incoming connections to use
              SSL or not.
          enum:
            - SIGNAL_TYPE_UNSPECIFIED
            - SIGNAL_TYPE_OUTDATED_MINOR_VERSION
            - SIGNAL_TYPE_DATABASE_AUDITING_DISABLED
            - SIGNAL_TYPE_NO_ROOT_PASSWORD
            - SIGNAL_TYPE_EXPOSED_TO_PUBLIC_ACCESS
            - SIGNAL_TYPE_UNENCRYPTED_CONNECTIONS
        signalBoolValue:
          description: Signal data for boolean signals.
          type: boolean
    BackupDRMetadata:
      id: BackupDRMetadata
      description: >-
        BackupDRMetadata contains information about the backup and disaster
        recovery metadata of a database resource.
      type: object
      properties:
        resourceId:
          description: Required. Database resource id.
          $ref: '#/components/schemas/DatabaseResourceId'
        lastRefreshTime:
          description: Required. Last time backup configuration was refreshed.
          type: string
          format: google-datetime
        backupConfiguration:
          description: Backup configuration for this instance.
          $ref: '#/components/schemas/BackupConfiguration'
        backupRun:
          description: Latest backup run information for this instance.
          $ref: '#/components/schemas/BackupRun'
        backupdrConfiguration:
          description: BackupDR configuration for this instance.
          $ref: '#/components/schemas/BackupDRConfiguration'
        fullResourceName:
          description: Required. Full resource name of this instance.
          type: string
    OperationMetadata:
      id: OperationMetadata
      description: Pre-defined metadata fields.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
    GoogleCloudRedisV1OperationMetadata:
      id: GoogleCloudRedisV1OperationMetadata
      description: Represents the v1 metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Creation timestamp.
          type: string
          format: google-datetime
        endTime:
          description: End timestamp.
          type: string
          format: google-datetime
        target:
          description: Operation target.
          type: string
        verb:
          description: Operation verb.
          type: string
        statusDetail:
          description: Operation status details.
          type: string
        cancelRequested:
          description: Specifies if cancellation was requested for the operation.
          type: boolean
        apiVersion:
          description: API version.
          type: string
    GoogleCloudRedisV1LocationMetadata:
      id: GoogleCloudRedisV1LocationMetadata
      description: >-
        This location metadata represents additional configuration options for a
        given location where a Redis instance may be created. All fields are
        output only. It is returned as content of the
        `google.cloud.location.Location.metadata` field.
      type: object
      properties:
        availableZones:
          description: >-
            Output only. The set of available zones in the location. The map is
            keyed by the lowercase ID of each zone, as defined by GCE. These
            keys can be specified in `location_id` or `alternative_location_id`
            fields when creating a Redis instance.
          readOnly: true
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudRedisV1ZoneMetadata'
    GoogleCloudRedisV1ZoneMetadata:
      id: GoogleCloudRedisV1ZoneMetadata
      description: >-
        Defines specific information for a particular zone. Currently empty and
        reserved for future use only.
      type: object
      properties: {}
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.redis.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.redis.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    clusters:
      id: google.redis.clusters
      name: clusters
      title: Clusters
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.clusters
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reschedule_cluster_maintenance:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}:rescheduleClusterMaintenance/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        backup:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}:backup/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/get'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/delete'
    clusters_certificate_authority:
      id: google.redis.clusters_certificate_authority
      name: clusters_certificate_authority
      title: Clusters_certificate_authority
      methods:
        get_certificate_authority:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1certificateAuthority/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/clusters_certificate_authority/methods/get_certificate_authority
        insert: []
        update: []
        replace: []
        delete: []
    backup_collections:
      id: google.redis.backup_collections
      name: backup_collections
      title: Backup_collections
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupCollections/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.backupCollections
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupCollections~1{backupCollectionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backup_collections/methods/get'
          - $ref: '#/components/x-stackQL-resources/backup_collections/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    backups:
      id: google.redis.backups
      name: backups
      title: Backups
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupCollections~1{backupCollectionsId}~1backups/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.backups
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupCollections~1{backupCollectionsId}~1backups~1{backupsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupCollections~1{backupCollectionsId}~1backups~1{backupsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupCollections~1{backupCollectionsId}~1backups~1{backupsId}:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups/methods/get'
          - $ref: '#/components/x-stackQL-resources/backups/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backups/methods/delete'
    instances:
      id: google.redis.instances
      name: instances
      title: Instances
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.instances
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upgrade:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:upgrade/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        import:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        failover:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:failover/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reschedule_maintenance:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:rescheduleMaintenance/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/instances/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/instances/methods/delete'
    instances_auth_string:
      id: google.redis.instances_auth_string
      name: instances_auth_string
      title: Instances_auth_string
      methods:
        get_auth_string:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1authString/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/instances_auth_string/methods/get_auth_string
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: redis.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: extraLocationTypes
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: redis.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: redis.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: redis.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: redis.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        `1`, corresponding to `Code.CANCELLED`.
      operationId: redis.projects.locations.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/clusters:
    parameters: *ref_1
    get:
      description: >-
        Lists all Redis clusters owned by a project in either the specified
        location (region) or all locations. The location should have the
        following format: * `projects/{project_id}/locations/{location_id}` If
        `location_id` is specified as `-` (wildcard), then all regions available
        to the project are queried, and the results are aggregated.
      operationId: redis.projects.locations.clusters.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: >-
        Creates a Redis cluster based on the specified properties. The creation
        is executed asynchronously and callers may check the returned operation
        to track its progress. Once the operation is completed the Redis cluster
        will be fully functional. The completed longrunning.Operation will
        contain the new cluster object in the response field. The returned
        operation is automatically deleted after a few hours, so there is no
        need to call DeleteOperation.
      operationId: redis.projects.locations.clusters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: clusterId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:
    parameters: *ref_1
    get:
      description: Gets the details of a specific Redis cluster.
      operationId: redis.projects.locations.clusters.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the metadata and configuration of a specific Redis cluster.
        Completed longrunning.Operation will contain the new cluster object in
        the response field. The returned operation is automatically deleted
        after a few hours, so there is no need to call DeleteOperation.
      operationId: redis.projects.locations.clusters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: >-
        Deletes a specific Redis cluster. Cluster stops serving and data is
        deleted.
      operationId: redis.projects.locations.clusters.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/certificateAuthority:
    parameters: *ref_1
    get:
      description: Gets the details of certificate authority information for Redis cluster.
      operationId: redis.projects.locations.clusters.getCertificateAuthority
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateAuthority'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:rescheduleClusterMaintenance:
    parameters: *ref_1
    post:
      description: Reschedules upcoming maintenance event.
      operationId: redis.projects.locations.clusters.rescheduleClusterMaintenance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RescheduleClusterMaintenanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:backup:
    parameters: *ref_1
    post:
      description: >-
        Backup Redis Cluster. If this is the first time a backup is being
        created, a backup collection will be created at the backend, and this
        backup belongs to this collection. Both collection and backup will have
        a resource name. Backup will be executed for each shard. A replica
        (primary if nonHA) will be selected to perform the execution. Backup
        call will be rejected if there is an ongoing backup or update operation.
        Be aware that during preview, if the cluster's internal software version
        is too old, critical update will be performed before actual backup. Once
        the internal software version is updated to the minimum version required
        by the backup feature, subsequent backups will not require critical
        update. After preview, there will be no critical update needed for
        backup.
      operationId: redis.projects.locations.clusters.backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupClusterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupCollections:
    parameters: *ref_1
    get:
      description: >-
        Lists all backup collections owned by a consumer project in either the
        specified location (region) or all locations. If `location_id` is
        specified as `-` (wildcard), then all regions available to the project
        are queried, and the results are aggregated.
      operationId: redis.projects.locations.backupCollections.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupCollectionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupCollections/{backupCollectionsId}:
    parameters: *ref_1
    get:
      description: Get a backup collection.
      operationId: redis.projects.locations.backupCollections.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupCollection'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupCollectionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupCollections/{backupCollectionsId}/backups:
    parameters: *ref_1
    get:
      description: Lists all backups owned by a backup collection.
      operationId: redis.projects.locations.backupCollections.backups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupCollectionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupCollections/{backupCollectionsId}/backups/{backupsId}:
    parameters: *ref_1
    get:
      description: Gets the details of a specific backup.
      operationId: redis.projects.locations.backupCollections.backups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupCollectionsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a specific backup.
      operationId: redis.projects.locations.backupCollections.backups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupCollectionsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupCollections/{backupCollectionsId}/backups/{backupsId}:export:
    parameters: *ref_1
    post:
      description: Exports a specific backup to a customer target Cloud Storage URI.
      operationId: redis.projects.locations.backupCollections.backups.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportBackupRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupCollectionsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/instances:
    parameters: *ref_1
    get:
      description: >-
        Lists all Redis instances owned by a project in either the specified
        location (region) or all locations. The location should have the
        following format: * `projects/{project_id}/locations/{location_id}` If
        `location_id` is specified as `-` (wildcard), then all regions available
        to the project are queried, and the results are aggregated.
      operationId: redis.projects.locations.instances.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: >-
        Creates a Redis instance based on the specified tier and memory size. By
        default, the instance is accessible from the project's [default
        network](https://cloud.google.com/vpc/docs/vpc). The creation is
        executed asynchronously and callers may check the returned operation to
        track its progress. Once the operation is completed the Redis instance
        will be fully functional. Completed longrunning.Operation will contain
        the new instance object in the response field. The returned operation is
        automatically deleted after a few hours, so there is no need to call
        DeleteOperation.
      operationId: redis.projects.locations.instances.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: instanceId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:
    parameters: *ref_1
    get:
      description: Gets the details of a specific Redis instance.
      operationId: redis.projects.locations.instances.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the metadata and configuration of a specific Redis instance.
        Completed longrunning.Operation will contain the new instance object in
        the response field. The returned operation is automatically deleted
        after a few hours, so there is no need to call DeleteOperation.
      operationId: redis.projects.locations.instances.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes a specific Redis instance. Instance stops serving and data is
        deleted.
      operationId: redis.projects.locations.instances.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/authString:
    parameters: *ref_1
    get:
      description: >-
        Gets the AUTH string for a Redis instance. If AUTH is not enabled for
        the instance the response will be empty. This information is not
        included in the details returned to GetInstance.
      operationId: redis.projects.locations.instances.getAuthString
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceAuthString'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:upgrade:
    parameters: *ref_1
    post:
      description: >-
        Upgrades Redis instance to the newer Redis version specified in the
        request.
      operationId: redis.projects.locations.instances.upgrade
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:import:
    parameters: *ref_1
    post:
      description: >-
        Import a Redis RDB snapshot file from Cloud Storage into a Redis
        instance. Redis may stop serving during this operation. Instance state
        will be IMPORTING for entire operation. When complete, the instance will
        contain only data from the imported file. The returned operation is
        automatically deleted after a few hours, so there is no need to call
        DeleteOperation.
      operationId: redis.projects.locations.instances.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:export:
    parameters: *ref_1
    post:
      description: >-
        Export Redis instance data into a Redis RDB format file in Cloud
        Storage. Redis will continue serving during this operation. The returned
        operation is automatically deleted after a few hours, so there is no
        need to call DeleteOperation.
      operationId: redis.projects.locations.instances.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:failover:
    parameters: *ref_1
    post:
      description: >-
        Initiates a failover of the primary node to current replica node for a
        specific STANDARD tier Cloud Memorystore for Redis instance.
      operationId: redis.projects.locations.instances.failover
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailoverInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:rescheduleMaintenance:
    parameters: *ref_1
    post:
      description: >-
        Reschedule maintenance for a given instance in a given project and
        location.
      operationId: redis.projects.locations.instances.rescheduleMaintenance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RescheduleMaintenanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
