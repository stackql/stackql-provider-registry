openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Text-to-Speech API
  description: >-
    Synthesizes natural-sounding speech by applying powerful neural network
    models.
  version: v1
  x-discovery-doc-revision: '20241026'
  x-generated-date: '2024-11-06'
externalDocs:
  url: https://cloud.google.com/text-to-speech/
servers:
  - url: https://texttospeech.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListVoicesResponse:
      id: ListVoicesResponse
      description: The message returned to the client by the `ListVoices` method.
      type: object
      properties:
        voices:
          description: The list of voices.
          type: array
          items:
            $ref: '#/components/schemas/Voice'
    Voice:
      id: Voice
      description: Description of a voice supported by the TTS service.
      type: object
      properties:
        languageCodes:
          description: >-
            The languages that this voice supports, expressed as
            [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tags
            (e.g. "en-US", "es-419", "cmn-tw").
          type: array
          items:
            type: string
        name:
          description: The name of this voice. Each distinct voice has a unique name.
          type: string
        ssmlGender:
          description: The gender of this voice.
          type: string
          enumDescriptions:
            - >-
              An unspecified gender. In VoiceSelectionParams, this means that
              the client doesn't care which gender the selected voice will have.
              In the Voice field of ListVoicesResponse, this may mean that the
              voice doesn't fit any of the other categories in this enum, or
              that the gender of the voice isn't known.
            - A male voice.
            - A female voice.
            - A gender-neutral voice. This voice is not yet supported.
          enum:
            - SSML_VOICE_GENDER_UNSPECIFIED
            - MALE
            - FEMALE
            - NEUTRAL
        naturalSampleRateHertz:
          description: The natural sample rate (in hertz) for this voice.
          type: integer
          format: int32
    SynthesizeSpeechRequest:
      id: SynthesizeSpeechRequest
      description: >-
        The top-level message sent by the client for the `SynthesizeSpeech`
        method.
      type: object
      properties:
        input:
          description: >-
            Required. The Synthesizer requires either plain text or SSML as
            input.
          $ref: '#/components/schemas/SynthesisInput'
        voice:
          description: Required. The desired voice of the synthesized audio.
          $ref: '#/components/schemas/VoiceSelectionParams'
        audioConfig:
          description: Required. The configuration of the synthesized audio.
          $ref: '#/components/schemas/AudioConfig'
        advancedVoiceOptions:
          description: Advanced voice options.
          $ref: '#/components/schemas/AdvancedVoiceOptions'
    SynthesisInput:
      id: SynthesisInput
      description: >-
        Contains text input to be synthesized. Either `text` or `ssml` must be
        supplied. Supplying both or neither returns
        google.rpc.Code.INVALID_ARGUMENT. The input size is limited to 5000
        bytes.
      type: object
      properties:
        text:
          description: The raw text to be synthesized.
          type: string
        ssml:
          description: >-
            The SSML document to be synthesized. The SSML document must be valid
            and well-formed. Otherwise the RPC will fail and return
            google.rpc.Code.INVALID_ARGUMENT. For more information, see
            [SSML](https://cloud.google.com/text-to-speech/docs/ssml).
          type: string
        multiSpeakerMarkup:
          description: >-
            The multi-speaker input to be synthesized. Only applicable for
            multi-speaker synthesis.
          $ref: '#/components/schemas/MultiSpeakerMarkup'
        customPronunciations:
          description: >-
            Optional. The pronunciation customizations to be applied to the
            input. If this is set, the input will be synthesized using the given
            pronunciation customizations. The initial support will be for EFIGS
            (English, French, Italian, German, Spanish) languages, as provided
            in VoiceSelectionParams. Journey and Instant Clone voices are not
            supported yet. In order to customize the pronunciation of a phrase,
            there must be an exact match of the phrase in the input types. If
            using SSML, the phrase must not be inside a phoneme tag (entirely or
            partially).
          $ref: '#/components/schemas/CustomPronunciations'
    MultiSpeakerMarkup:
      id: MultiSpeakerMarkup
      description: A collection of turns for multi-speaker synthesis.
      type: object
      properties:
        turns:
          description: Required. Speaker turns.
          type: array
          items:
            $ref: '#/components/schemas/Turn'
    Turn:
      id: Turn
      description: A Multi-speaker turn.
      type: object
      properties:
        speaker:
          description: >-
            Required. The speaker of the turn, for example, 'O' or 'Q'. Please
            refer to documentation for available speakers.
          type: string
        text:
          description: Required. The text to speak.
          type: string
    CustomPronunciations:
      id: CustomPronunciations
      description: A collection of pronunciation customizations.
      type: object
      properties:
        pronunciations:
          description: The pronunciation customizations to be applied.
          type: array
          items:
            $ref: '#/components/schemas/CustomPronunciationParams'
    CustomPronunciationParams:
      id: CustomPronunciationParams
      description: Pronunciation customization for a phrase.
      type: object
      properties:
        phrase:
          description: >-
            The phrase to which the customization will be applied. The phrase
            can be multiple words (in the case of proper nouns etc), but should
            not span to a whole sentence.
          type: string
        phoneticEncoding:
          description: The phonetic encoding of the phrase.
          type: string
          enumDescriptions:
            - Not specified.
            - >-
              IPA. (e.g. apple -> ˈæpəl )
              https://en.wikipedia.org/wiki/International_Phonetic_Alphabet
            - >-
              X-SAMPA (e.g. apple -> "{p@l" )
              https://en.wikipedia.org/wiki/X-SAMPA
          enum:
            - PHONETIC_ENCODING_UNSPECIFIED
            - PHONETIC_ENCODING_IPA
            - PHONETIC_ENCODING_X_SAMPA
        pronunciation:
          description: >-
            The pronunciation of the phrase. This must be in the phonetic
            encoding specified above.
          type: string
    VoiceSelectionParams:
      id: VoiceSelectionParams
      description: Description of which voice to use for a synthesis request.
      type: object
      properties:
        languageCode:
          description: >-
            Required. The language (and potentially also the region) of the
            voice expressed as a
            [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag,
            e.g. "en-US". This should not include a script tag (e.g. use
            "cmn-cn" rather than "cmn-Hant-cn"), because the script will be
            inferred from the input provided in the SynthesisInput. The TTS
            service will use this parameter to help choose an appropriate voice.
            Note that the TTS service may choose a voice with a slightly
            different language code than the one selected; it may substitute a
            different region (e.g. using en-US rather than en-CA if there isn't
            a Canadian voice available), or even a different language, e.g.
            using "nb" (Norwegian Bokmal) instead of "no" (Norwegian)".
          type: string
        name:
          description: >-
            The name of the voice. If both the name and the gender are not set,
            the service will choose a voice based on the other parameters such
            as language_code.
          type: string
        ssmlGender:
          description: >-
            The preferred gender of the voice. If not set, the service will
            choose a voice based on the other parameters such as language_code
            and name. Note that this is only a preference, not requirement; if a
            voice of the appropriate gender is not available, the synthesizer
            should substitute a voice with a different gender rather than
            failing the request.
          type: string
          enumDescriptions:
            - >-
              An unspecified gender. In VoiceSelectionParams, this means that
              the client doesn't care which gender the selected voice will have.
              In the Voice field of ListVoicesResponse, this may mean that the
              voice doesn't fit any of the other categories in this enum, or
              that the gender of the voice isn't known.
            - A male voice.
            - A female voice.
            - A gender-neutral voice. This voice is not yet supported.
          enum:
            - SSML_VOICE_GENDER_UNSPECIFIED
            - MALE
            - FEMALE
            - NEUTRAL
        customVoice:
          description: >-
            The configuration for a custom voice. If [CustomVoiceParams.model]
            is set, the service will choose the custom voice matching the
            specified configuration.
          $ref: '#/components/schemas/CustomVoiceParams'
        voiceClone:
          description: >-
            Optional. The configuration for a voice clone. If
            [VoiceCloneParams.voice_clone_key] is set, the service will choose
            the voice clone matching the specified configuration.
          $ref: '#/components/schemas/VoiceCloneParams'
    CustomVoiceParams:
      id: CustomVoiceParams
      description: Description of the custom voice to be synthesized.
      type: object
      properties:
        model:
          description: >-
            Required. The name of the AutoML model that synthesizes the custom
            voice.
          type: string
        reportedUsage:
          description: >-
            Optional. Deprecated. The usage of the synthesized audio to be
            reported.
          deprecated: true
          type: string
          enumDescriptions:
            - Request with reported usage unspecified will be rejected.
            - >-
              For scenarios where the synthesized audio is not downloadable and
              can only be used once. For example, real-time request in IVR
              system.
            - >-
              For scenarios where the synthesized audio is downloadable and can
              be reused. For example, the synthesized audio is downloaded,
              stored in customer service system and played repeatedly.
          enum:
            - REPORTED_USAGE_UNSPECIFIED
            - REALTIME
            - OFFLINE
    VoiceCloneParams:
      id: VoiceCloneParams
      description: The configuration of Voice Clone feature.
      type: object
      properties:
        voiceCloningKey:
          description: Required. Created by GenerateVoiceCloningKey.
          type: string
    AudioConfig:
      id: AudioConfig
      description: Description of audio data to be synthesized.
      type: object
      properties:
        audioEncoding:
          description: Required. The format of the audio byte stream.
          type: string
          enumDescriptions:
            - >-
              Not specified. Will return result
              google.rpc.Code.INVALID_ARGUMENT.
            - >-
              Uncompressed 16-bit signed little-endian samples (Linear PCM).
              Audio content returned as LINEAR16 also contains a WAV header.
            - MP3 audio at 32kbps.
            - >-
              Opus encoded audio wrapped in an ogg container. The result will be
              a file which can be played natively on Android, and in browsers
              (at least Chrome and Firefox). The quality of the encoding is
              considerably higher than MP3 while using approximately the same
              bitrate.
            - >-
              8-bit samples that compand 14-bit audio samples using G.711
              PCMU/mu-law. Audio content returned as MULAW also contains a WAV
              header.
            - >-
              8-bit samples that compand 14-bit audio samples using G.711
              PCMU/A-law. Audio content returned as ALAW also contains a WAV
              header.
          enum:
            - AUDIO_ENCODING_UNSPECIFIED
            - LINEAR16
            - MP3
            - OGG_OPUS
            - MULAW
            - ALAW
        speakingRate:
          description: >-
            Optional. Input only. Speaking rate/speed, in the range [0.25, 4.0].
            1.0 is the normal native speed supported by the specific voice. 2.0
            is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults
            to the native 1.0 speed. Any other values < 0.25 or > 4.0 will
            return an error.
          type: number
          format: double
        pitch:
          description: >-
            Optional. Input only. Speaking pitch, in the range [-20.0, 20.0]. 20
            means increase 20 semitones from the original pitch. -20 means
            decrease 20 semitones from the original pitch.
          type: number
          format: double
        volumeGainDb:
          description: >-
            Optional. Input only. Volume gain (in dB) of the normal native
            volume supported by the specific voice, in the range [-96.0, 16.0].
            If unset, or set to a value of 0.0 (dB), will play at normal native
            signal amplitude. A value of -6.0 (dB) will play at approximately
            half the amplitude of the normal native signal amplitude. A value of
            +6.0 (dB) will play at approximately twice the amplitude of the
            normal native signal amplitude. Strongly recommend not to exceed +10
            (dB) as there's usually no effective increase in loudness for any
            value greater than that.
          type: number
          format: double
        sampleRateHertz:
          description: >-
            Optional. The synthesis sample rate (in hertz) for this audio. When
            this is specified in SynthesizeSpeechRequest, if this is different
            from the voice's natural sample rate, then the synthesizer will
            honor this request by converting to the desired sample rate (which
            might result in worse audio quality), unless the specified sample
            rate is not supported for the encoding chosen, in which case it will
            fail the request and return google.rpc.Code.INVALID_ARGUMENT.
          type: integer
          format: int32
        effectsProfileId:
          description: >-
            Optional. Input only. An identifier which selects 'audio effects'
            profiles that are applied on (post synthesized) text to speech.
            Effects are applied on top of each other in the order they are
            given. See [audio
            profiles](https://cloud.google.com/text-to-speech/docs/audio-profiles)
            for current supported profile ids.
          type: array
          items:
            type: string
    AdvancedVoiceOptions:
      id: AdvancedVoiceOptions
      description: Used for advanced voice options.
      type: object
      properties:
        lowLatencyJourneySynthesis:
          description: >-
            Only for Journey voices. If false, the synthesis will be context
            aware and have higher latency.
          type: boolean
    SynthesizeSpeechResponse:
      id: SynthesizeSpeechResponse
      description: The message returned to the client by the `SynthesizeSpeech` method.
      type: object
      properties:
        audioContent:
          description: >-
            The audio data bytes encoded as specified in the request, including
            the header for encodings that are wrapped in containers (e.g. MP3,
            OGG_OPUS). For LINEAR16 audio, we include the WAV header. Note: as
            with all bytes fields, protobuffers use a pure binary
            representation, whereas JSON representations use base64.
          type: string
          format: byte
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    SynthesizeLongAudioRequest:
      id: SynthesizeLongAudioRequest
      description: >-
        The top-level message sent by the client for the `SynthesizeLongAudio`
        method.
      type: object
      properties:
        input:
          description: >-
            Required. The Synthesizer requires either plain text or SSML as
            input.
          $ref: '#/components/schemas/SynthesisInput'
        audioConfig:
          description: Required. The configuration of the synthesized audio.
          $ref: '#/components/schemas/AudioConfig'
        outputGcsUri:
          description: >-
            Required. Specifies a Cloud Storage URI for the synthesis results.
            Must be specified in the format: `gs://bucket_name/object_name`, and
            the bucket must already exist.
          type: string
        voice:
          description: Required. The desired voice of the synthesized audio.
          $ref: '#/components/schemas/VoiceSelectionParams'
    SynthesizeLongAudioMetadata:
      id: SynthesizeLongAudioMetadata
      description: Metadata for response returned by the `SynthesizeLongAudio` method.
      type: object
      properties:
        startTime:
          description: Time when the request was received.
          type: string
          format: google-datetime
        lastUpdateTime:
          description: Deprecated. Do not use.
          deprecated: true
          type: string
          format: google-datetime
        progressPercentage:
          description: >-
            The progress of the most recent processing update in percentage, ie.
            70.0%.
          type: number
          format: double
    GoogleCloudTexttospeechV1SynthesizeLongAudioMetadata:
      id: GoogleCloudTexttospeechV1SynthesizeLongAudioMetadata
      description: Metadata for response returned by the `SynthesizeLongAudio` method.
      type: object
      properties:
        startTime:
          description: Time when the request was received.
          type: string
          format: google-datetime
        lastUpdateTime:
          description: Deprecated. Do not use.
          deprecated: true
          type: string
          format: google-datetime
        progressPercentage:
          description: >-
            The progress of the most recent processing update in percentage, ie.
            70.0%.
          type: number
          format: double
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    voices:
      id: google.texttospeech.voices
      name: voices
      title: Voices
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1voices/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/voices/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    text:
      id: google.texttospeech.text
      name: text
      title: Text
      methods:
        synthesize:
          operation:
            $ref: '#/paths/~1v1~1text:synthesize/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    locations:
      id: google.texttospeech.locations
      name: locations
      title: Locations
      methods:
        synthesize_long_audio:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:synthesizeLongAudio/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.texttospeech.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
paths:
  /v1/voices:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Returns a list of Voice supported for synthesis.
      operationId: texttospeech.voices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVoicesResponse'
      parameters:
        - in: query
          name: languageCode
          schema:
            type: string
  /v1/text:synthesize:
    parameters: *ref_1
    post:
      description: >-
        Synthesizes speech synchronously: receive results after all text input
        has been processed.
      operationId: texttospeech.text.synthesize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SynthesizeSpeechRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynthesizeSpeechResponse'
      parameters: []
  /v1/projects/{projectsId}/locations/{locationsId}:synthesizeLongAudio:
    parameters: *ref_1
    post:
      description: Synthesizes long form text asynchronously.
      operationId: texttospeech.projects.locations.synthesizeLongAudio
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SynthesizeLongAudioRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: texttospeech.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: texttospeech.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: texttospeech.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: texttospeech.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
