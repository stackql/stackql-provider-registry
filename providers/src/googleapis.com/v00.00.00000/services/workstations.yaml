openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Workstations API
  description: 'Allows administrators to create managed developer environments in the cloud. '
  version: v1beta
  x-discovery-doc-revision: '20230717'
  x-generated-date: '2023-08-01'
externalDocs:
  url: 'https://cloud.google.com/workstations'
servers:
  - url: 'https://workstations.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GenerateAccessTokenRequest:
      properties:
        expireTime:
          type: string
          format: google-datetime
          description: 'Desired expiration time of the access token. This value must be at most 24 hours in the future. If a value is not specified, the token''s expiration time will be set to a default value of 1 hour in the future.'
        ttl:
          type: string
          format: google-duration
          description: 'Desired lifetime duration of the access token. This value must be at most 24 hours. If a value is not specified, the token''s lifetime will be set to a default value of 1 hour.'
      type: object
      description: Request message for GenerateAccessToken.
      id: GenerateAccessTokenRequest
    GoogleProtobufEmpty:
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
      id: GoogleProtobufEmpty
    ListUsableWorkstationsResponse:
      type: object
      description: Response message for ListUsableWorkstations.
      properties:
        unreachable:
          type: array
          items:
            type: string
          description: Unreachable resources.
        workstations:
          items:
            $ref: '#/components/schemas/Workstation'
          type: array
          description: The requested workstations.
        nextPageToken:
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
          type: string
      id: ListUsableWorkstationsResponse
    GceConfidentialInstanceConfig:
      properties:
        enableConfidentialCompute:
          type: boolean
          description: Whether the instance has confidential compute enabled.
      description: A set of Compute Engine Confidential VM instance options.
      type: object
      id: GceConfidentialInstanceConfig
    Binding:
      type: object
      id: Binding
      properties:
        condition:
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          $ref: '#/components/schemas/Expr'
        role:
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
          type: string
        members:
          type: array
          items:
            type: string
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
      description: 'Associates `members`, or principals, with a `role`.'
    Accelerator:
      id: Accelerator
      properties:
        type:
          description: 'Type of accelerator resource to attach to the instance, for example, "nvidia-tesla-p100".'
          type: string
        count:
          description: Number of accelerator cards exposed to the instance.
          type: integer
          format: int32
      description: An accelerator card attached to the instance.
      type: object
    Host:
      type: object
      id: Host
      properties:
        gceInstance:
          $ref: '#/components/schemas/GceInstance'
          description: Specifies a Compute Engine instance as the host.
      description: Runtime host for a workstation.
    StartWorkstationRequest:
      description: Request message for StartWorkstation.
      id: StartWorkstationRequest
      properties:
        etag:
          description: 'If set, the request will be rejected if the latest version of the workstation on the server does not have this ETag.'
          type: string
        validateOnly:
          type: boolean
          description: 'If set, validate the request and preview the review, but do not actually apply it.'
      type: object
    ReadinessCheck:
      type: object
      description: A readiness check to be performed on a workstation.
      id: ReadinessCheck
      properties:
        path:
          description: Path to which the request should be sent.
          type: string
        port:
          type: integer
          format: int32
          description: Port to which the request should be sent.
    GceInstance:
      description: A runtime using a Compute Engine instance.
      type: object
      id: GceInstance
      properties:
        shieldedInstanceConfig:
          description: A set of Compute Engine Shielded instance options.
          $ref: '#/components/schemas/GceShieldedInstanceConfig'
        pooledInstances:
          type: integer
          readOnly: true
          description: Output only. Number of instances currently available in the pool for faster workstation startup.
          format: int32
        tags:
          type: array
          description: 'Network tags to add to the Compute Engine machines backing the workstations. This option applies [network tags](https://cloud.google.com/vpc/docs/add-remove-network-tags) to VMs created with this configuration. These network tags enable the creation of [firewall rules](https://cloud.google.com/workstations/docs/configure-firewall-rules).'
          items:
            type: string
        disablePublicIpAddresses:
          type: boolean
          description: 'When set to true, disables public IP addresses for VMs. If you disable public IP addresses, you must set up Private Google Access or Cloud NAT on your network. If you use Private Google Access and you use `private.googleapis.com` or `restricted.googleapis.com` for Container Registry and Artifact Registry, make sure that you set up DNS records for domains `*.gcr.io` and `*.pkg.dev`. Defaults to false (VMs have public IP addresses).'
        bootDiskSizeGb:
          description: The size of the boot disk for the VM in gigabytes (GB). The minimum boot disk size is `30` GB. Defaults to `50` GB.
          type: integer
          format: int32
        serviceAccount:
          type: string
          description: 'The email address of the service account for Cloud Workstations VMs created with this configuration. When specified, be sure that the service account has `logginglogEntries.create` permission on the project so it can write logs out to Cloud Logging. If using a custom container image, the service account must have permissions to pull the specified image. If you as the administrator want to be able to `ssh` into the underlying VM, you need to set this value to a service account for which you have the `iam.serviceAccounts.actAs` permission. Conversely, if you don''t want anyone to be able to `ssh` into the underlying VM, use a service account where no one has that permission. If not set, VMs run with a service account provided by the Cloud Workstations service, and the image must be publicly accessible.'
        poolSize:
          type: integer
          format: int32
          description: The number of VMs that the system should keep idle so that new workstations can be started quickly for new users. Defaults to `0` in the API.
        enableNestedVirtualization:
          description: Whether to enable nested virtualization on instances.
          type: boolean
        accelerators:
          items:
            $ref: '#/components/schemas/Accelerator'
          type: array
          description: A list of the type and count of accelerator cards attached to the instance.
        confidentialInstanceConfig:
          $ref: '#/components/schemas/GceConfidentialInstanceConfig'
          description: A set of Compute Engine Confidential VM instance options.
        machineType:
          type: string
          description: 'The type of machine to use for VM instances—for example, `e2-standard-4`. For more information about machine types that Cloud Workstations supports, see the list of [available machine types](https://cloud.google.com/workstations/docs/available-machine-types).'
    ListUsableWorkstationConfigsResponse:
      type: object
      properties:
        workstationConfigs:
          items:
            $ref: '#/components/schemas/WorkstationConfig'
          type: array
          description: The requested configs.
        unreachable:
          type: array
          items:
            type: string
          description: Unreachable resources.
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
      id: ListUsableWorkstationConfigsResponse
      description: Response message for ListUsableWorkstationConfigs.
    CancelOperationRequest:
      type: object
      id: CancelOperationRequest
      properties: {}
      description: The request message for Operations.CancelOperation.
    AuditLogConfig:
      type: object
      properties:
        logType:
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          type: string
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
        exemptedMembers:
          items:
            type: string
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          type: array
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      id: AuditLogConfig
    WorkstationCluster:
      id: WorkstationCluster
      type: object
      properties:
        name:
          type: string
          description: Full name of this resource.
        uid:
          description: Output only. A system-assigned unique identifier for this resource.
          readOnly: true
          type: string
        etag:
          type: string
          description: Checksum computed by the server. May be sent on update and delete requests to make sure that the client has an up-to-date value before proceeding.
        subnetwork:
          type: string
          description: Immutable. Name of the Compute Engine subnetwork in which instances associated with this cluster will be created. Must be part of the subnetwork specified for this cluster.
        updateTime:
          type: string
          description: Output only. Time when this resource was most recently updated.
          readOnly: true
          format: google-datetime
        annotations:
          additionalProperties:
            type: string
          description: Client-specified annotations.
          type: object
        conditions:
          readOnly: true
          description: Output only. Status conditions describing the current resource state.
          type: array
          items:
            $ref: '#/components/schemas/Status'
        privateClusterConfig:
          description: Configuration for private cluster.
          $ref: '#/components/schemas/PrivateClusterConfig'
        labels:
          description: Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
          additionalProperties:
            type: string
          type: object
        displayName:
          description: Human-readable name for this resource.
          type: string
        controlPlaneIp:
          readOnly: true
          type: string
          description: 'Output only. The private IP address of the control plane for this cluster. Workstation VMs need access to this IP address to work with the service, so make sure that your firewall rules allow egress from the workstation VMs to this address.'
        degraded:
          description: 'Output only. Whether this resource is in degraded mode, in which case it may require user action to restore full functionality. Details can be found in the `conditions` field.'
          type: boolean
          readOnly: true
        reconciling:
          description: Output only. Indicates whether this resource is currently being updated to match its intended state.
          type: boolean
          readOnly: true
        network:
          description: Immutable. Name of the Compute Engine network in which instances associated with this cluster will be created.
          type: string
        deleteTime:
          format: google-datetime
          readOnly: true
          description: Output only. Time when this resource was soft-deleted.
          type: string
        createTime:
          type: string
          readOnly: true
          description: Output only. Time when this resource was created.
          format: google-datetime
      description: A grouping of workstation configurations and the associated workstations in that region.
    GceShieldedInstanceConfig:
      description: A set of Compute Engine Shielded instance options.
      id: GceShieldedInstanceConfig
      type: object
      properties:
        enableVtpm:
          description: Whether the instance has the vTPM enabled.
          type: boolean
        enableIntegrityMonitoring:
          type: boolean
          description: Whether the instance has integrity monitoring enabled.
        enableSecureBoot:
          description: Whether the instance has Secure Boot enabled.
          type: boolean
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          items:
            type: string
          type: array
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
      id: TestIamPermissionsResponse
    ListWorkstationConfigsResponse:
      description: Response message for ListWorkstationConfigs.
      id: ListWorkstationConfigsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
        unreachable:
          description: Unreachable resources.
          items:
            type: string
          type: array
        workstationConfigs:
          type: array
          items:
            $ref: '#/components/schemas/WorkstationConfig'
          description: The requested configs.
    WorkstationConfig:
      type: object
      id: WorkstationConfig
      description: A set of configuration options that describe how a workstation runs. Workstation configurations are intended to be shared across multiple workstations.
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
          description: Client-specified annotations.
        readinessChecks:
          description: Readiness checks to perform when starting a workstation using this workstation configuration. Mark a workstation as running only after all specified readiness checks return 200 status codes.
          type: array
          items:
            $ref: '#/components/schemas/ReadinessCheck'
        deleteTime:
          format: google-datetime
          description: Output only. Time when this resource was soft-deleted.
          type: string
          readOnly: true
        reconciling:
          type: boolean
          description: Output only. Indicates whether this resource is currently being updated to match its intended state.
          readOnly: true
        etag:
          description: Checksum computed by the server. May be sent on update and delete requests to make sure that the client has an up-to-date value before proceeding.
          type: string
        container:
          description: Container that runs upon startup for each workstation using this workstation configuration.
          $ref: '#/components/schemas/Container'
        enableAuditAgent:
          type: boolean
          description: 'Whether to enable Linux `auditd` logging on the workstation. When enabled, a service account must also be specified that has `logging.buckets.write` permission on the project. Operating system audit logging is distinct from [Cloud Audit Logs](https://cloud.google.com/workstations/docs/audit-logging).'
        host:
          description: Runtime host for the workstation.
          $ref: '#/components/schemas/Host'
        runningTimeout:
          description: 'Number of seconds that a workstation can run until it is automatically shut down. We recommend that workstations be shut down daily to reduce costs and so that security updates can be applied upon restart. The `idleTimeout` and `runningTimeout` parameters are independent of each other. Note that the `runningTimeout` parameter shuts down VMs after the specified time, regardless of whether or not the VMs are idle. Provide duration terminated by `s` for seconds—for example, `54000s` (15 hours). Defaults to `43200s` (12 hours). A value of `0` indicates that workstations using this configuration should never time out. If `encryption_key` is set, it must be greater than `0` and less than `86400s` (24 hours). Warning: A value of `0s` indicates that Cloud Workstations VMs created with this configuration have no maximum running time. This is strongly discouraged because you incur costs and will not pick up security updates.'
          type: string
          format: google-duration
        updateTime:
          type: string
          description: Output only. Time when this resource was most recently updated.
          readOnly: true
          format: google-datetime
        encryptionKey:
          description: 'Immutable. Encrypts resources of this workstation configuration using a customer-managed encryption key (CMEK). If specified, the boot disk of the Compute Engine instance and the persistent disk are encrypted using this encryption key. If this field is not set, the disks are encrypted using a generated key. Customer-managed encryption keys do not protect disk metadata. If the customer-managed encryption key is rotated, when the workstation instance is stopped, the system attempts to recreate the persistent disk with the new version of the key. Be sure to keep older versions of the key until the persistent disk is recreated. Otherwise, data on the persistent disk might be lost. If the encryption key is revoked, the workstation session automatically stops within 7 hours. Immutable after the workstation configuration is created.'
          $ref: '#/components/schemas/CustomerEncryptionKey'
        persistentDirectories:
          items:
            $ref: '#/components/schemas/PersistentDirectory'
          description: Directories to persist across workstation sessions.
          type: array
        name:
          description: Full name of this resource.
          type: string
        degraded:
          readOnly: true
          description: 'Output only. Whether this resource is degraded, in which case it may require user action to restore full functionality. See also the `conditions` field.'
          type: boolean
        displayName:
          description: Human-readable name for this resource.
          type: string
        uid:
          type: string
          description: Output only. A system-assigned unique identifier for this resource.
          readOnly: true
        conditions:
          type: array
          description: Output only. Status conditions describing the current resource state.
          readOnly: true
          items:
            $ref: '#/components/schemas/Status'
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. Time when this resource was created.
        idleTimeout:
          description: 'Number of seconds to wait before automatically stopping a workstation after it last received user traffic. A value of `0s` indicates that Cloud Workstations VMs created with this configuration should never time out due to idleness. Provide [duration](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration) terminated by `s` for seconds—for example, `7200s` (2 hours). The default is `1200s` (20 minutes).'
          type: string
          format: google-duration
        labels:
          description: Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
          type: object
          additionalProperties:
            type: string
    GenerateAccessTokenResponse:
      description: Response message for GenerateAccessToken.
      properties:
        expireTime:
          format: google-datetime
          type: string
          description: Time at which the generated token will expire.
        accessToken:
          description: 'The generated bearer access token. To use this token, include it in an Authorization header of an HTTP request sent to the associated workstation''s hostname—for example, `Authorization: Bearer `.'
          type: string
      id: GenerateAccessTokenResponse
      type: object
    Operation:
      id: Operation
      properties:
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: 'The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
      type: object
      description: This resource represents a long-running operation that is the result of a network API call.
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      id: SetIamPolicyRequest
      type: object
      properties:
        updateMask:
          format: google-fieldmask
          type: string
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
        policy:
          $ref: '#/components/schemas/Policy'
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
    ListWorkstationClustersResponse:
      properties:
        workstationClusters:
          items:
            $ref: '#/components/schemas/WorkstationCluster'
          type: array
          description: The requested workstation clusters.
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
        unreachable:
          items:
            type: string
          type: array
          description: Unreachable resources.
      id: ListWorkstationClustersResponse
      type: object
      description: Response message for ListWorkstationClusters.
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      properties:
        permissions:
          items:
            type: string
          type: array
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
      type: object
      description: Request message for `TestIamPermissions` method.
    Policy:
      properties:
        etag:
          type: string
          format: byte
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
        version:
          type: integer
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          format: int32
        auditConfigs:
          items:
            $ref: '#/components/schemas/AuditConfig'
          description: Specifies cloud audit logging configuration for this policy.
          type: array
        bindings:
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
          type: array
          items:
            $ref: '#/components/schemas/Binding'
      type: object
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      id: Policy
    PrivateClusterConfig:
      type: object
      description: Configuration options for private clusters.
      id: PrivateClusterConfig
      properties:
        clusterHostname:
          type: string
          readOnly: true
          description: 'Output only. Hostname for the workstation cluster. This field will be populated only when private endpoint is enabled. To access workstations in the cluster, create a new DNS zone mapping this domain name to an internal IP address and a forwarding rule mapping that address to the service attachment.'
        serviceAttachmentUri:
          readOnly: true
          type: string
          description: 'Output only. Service attachment URI for the workstation cluster. The service attachemnt is created when private endpoint is enabled. To access workstations in the cluster, configure access to the managed service using [Private Service Connect](https://cloud.google.com/vpc/docs/configure-private-service-connect-services).'
        enablePrivateEndpoint:
          type: boolean
          description: Immutable. Whether Workstations endpoint is private.
        allowedProjects:
          description: 'Additional projects that are allowed to attach to the workstation cluster''s service attachment. By default, the workstation cluster''s project and the VPC host project (if different) are allowed.'
          type: array
          items:
            type: string
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      type: object
      id: ListOperationsResponse
      properties:
        operations:
          description: A list of operations that matches the specified filter in the request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          type: string
          description: The standard List next-page token.
    Expr:
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      properties:
        expression:
          type: string
          description: Textual representation of an expression in Common Expression Language syntax.
        location:
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
          type: string
        description:
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
          type: string
        title:
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
          type: string
      id: Expr
      type: object
    Container:
      description: A Docker container.
      type: object
      properties:
        image:
          type: string
          description: 'A Docker container image that defines a custom environment. Cloud Workstations provides a number of [preconfigured images](https://cloud.google.com/workstations/docs/preconfigured-base-images), but you can create your own [custom container images](https://cloud.google.com/workstations/docs/custom-container-images). If using a private image, the `host.gceInstance.serviceAccount` field must be specified in the workstation configuration and must have permission to pull the specified image. Otherwise, the image must be publicly accessible.'
        env:
          type: object
          additionalProperties:
            type: string
          description: Environment variables passed to the container's entrypoint.
        command:
          type: array
          items:
            type: string
          description: 'If set, overrides the default ENTRYPOINT specified by the image.'
        args:
          items:
            type: string
          description: Arguments passed to the entrypoint.
          type: array
        workingDir:
          description: 'If set, overrides the default DIR specified by the image.'
          type: string
        runAsUser:
          format: int32
          type: integer
          description: 'If set, overrides the USER specified in the image with the given uid.'
      id: Container
    AuditConfig:
      id: AuditConfig
      properties:
        service:
          description: 'Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.'
          type: string
        auditLogConfigs:
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          type: array
          description: The configuration for logging of each type of permission.
      type: object
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
    CustomerEncryptionKey:
      type: object
      id: CustomerEncryptionKey
      properties:
        kmsKey:
          type: string
          description: 'Immutable. The name of the Google Cloud KMS encryption key. For example, `projects/PROJECT_ID/locations/REGION/keyRings/KEY_RING/cryptoKeys/KEY_NAME`. The key must be in the same region as the workstation configuration.'
        kmsKeyServiceAccount:
          description: 'Immutable. The service account to use with the specified KMS key. We recommend that you use a separate service account and follow KMS best practices. For more information, see [Separation of duties](https://cloud.google.com/kms/docs/separation-of-duties) and `gcloud kms keys add-iam-policy-binding` [`--member`](https://cloud.google.com/sdk/gcloud/reference/kms/keys/add-iam-policy-binding#--member).'
          type: string
      description: 'A customer-managed encryption key (CMEK) for the Compute Engine resources of the associated workstation configuration. Specify the name of your Cloud KMS encryption key and the default service account. We recommend that you use a separate service account and follow [Cloud KMS best practices](https://cloud.google.com/kms/docs/separation-of-duties).'
    Status:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
      id: Status
      properties:
        code:
          type: integer
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        details:
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
    OperationMetadata:
      type: object
      id: OperationMetadata
      properties:
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. Time that the operation was created.
          type: string
        requestedCancellation:
          readOnly: true
          type: boolean
          description: Output only. Identifies whether the user has requested cancellation of the operation.
        endTime:
          format: google-datetime
          type: string
          description: Output only. Time that the operation finished running.
          readOnly: true
        verb:
          type: string
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
          readOnly: true
        statusMessage:
          type: string
          readOnly: true
          description: 'Output only. Human-readable status of the operation, if any.'
      description: Metadata for long-running operations.
    Workstation:
      id: Workstation
      description: A single instance of a developer workstation with its own persistent storage.
      properties:
        createTime:
          format: google-datetime
          description: Output only. Time when this resource was created.
          readOnly: true
          type: string
        reconciling:
          description: Output only. Indicates whether this resource is currently being updated to match its intended state.
          readOnly: true
          type: boolean
        annotations:
          description: Client-specified annotations.
          additionalProperties:
            type: string
          type: object
        name:
          description: Full name of this resource.
          type: string
        host:
          type: string
          description: 'Output only. Host to which clients can send HTTPS traffic that will be received by the workstation. Authorized traffic will be received to the workstation as HTTP on port 80. To send traffic to a different port, clients may prefix the host with the destination port in the format `{port}-{host}`.'
          readOnly: true
        env:
          type: object
          description: Environment variables passed to the workstation container's entrypoint.
          additionalProperties:
            type: string
        updateTime:
          format: google-datetime
          description: Output only. Time when this resource was most recently updated.
          readOnly: true
          type: string
        uid:
          type: string
          description: Output only. A system-assigned unique identifier for this resource.
          readOnly: true
        displayName:
          description: Human-readable name for this resource.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
          type: object
        state:
          enum:
            - STATE_UNSPECIFIED
            - STATE_STARTING
            - STATE_RUNNING
            - STATE_STOPPING
            - STATE_STOPPED
          readOnly: true
          description: Output only. Current state of the workstation.
          type: string
          enumDescriptions:
            - Do not use.
            - The workstation is not yet ready to accept requests from users but will be soon.
            - The workstation is ready to accept requests from users.
            - The workstation is being stopped.
            - The workstation is stopped and will not be able to receive requests until it is started.
        deleteTime:
          description: Output only. Time when this resource was soft-deleted.
          format: google-datetime
          type: string
          readOnly: true
        etag:
          type: string
          description: Checksum computed by the server. May be sent on update and delete requests to make sure that the client has an up-to-date value before proceeding.
      type: object
    PersistentDirectory:
      properties:
        mountPath:
          description: Location of this directory in the running workstation.
          type: string
        gcePd:
          $ref: '#/components/schemas/GceRegionalPersistentDisk'
          description: A PersistentDirectory backed by a Compute Engine persistent disk.
      description: A directory to persist across workstation sessions.
      id: PersistentDirectory
      type: object
    ListWorkstationsResponse:
      id: ListWorkstationsResponse
      description: Response message for ListWorkstations.
      type: object
      properties:
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
        workstations:
          description: The requested workstations.
          items:
            $ref: '#/components/schemas/Workstation'
          type: array
        unreachable:
          items:
            type: string
          description: Unreachable resources.
          type: array
    GceRegionalPersistentDisk:
      id: GceRegionalPersistentDisk
      properties:
        diskType:
          type: string
          description: 'The [type of the persistent disk](https://cloud.google.com/compute/docs/disks#disk-types) for the home directory. Defaults to `pd-standard`.'
        sourceSnapshot:
          type: string
          description: 'Name of the snapshot to use as the source for the disk. If set, size_gb and fs_type must be empty.'
        reclaimPolicy:
          enumDescriptions:
            - Do not use.
            - Delete the persistent disk when deleting the workstation.
            - Keep the persistent disk when deleting the workstation. An administrator must manually delete the disk.
          enum:
            - RECLAIM_POLICY_UNSPECIFIED
            - DELETE
            - RETAIN
          type: string
          description: Whether the persistent disk should be deleted when the workstation is deleted. Valid values are `DELETE` and `RETAIN`. Defaults to `DELETE`.
        sizeGb:
          description: 'The GB capacity of a persistent home directory for each workstation created with this configuration. Must be empty if `source_snapshot` is set. Valid values are `10`, `50`, `100`, `200`, `500`, or `1000`. Defaults to `200`. If less than `200` GB, the `diskType` must be `pd-balanced` or `pd-ssd`.'
          format: int32
          type: integer
        fsType:
          description: Type of file system that the disk should be formatted with. The workstation image must support this file system type. Must be empty if source_snapshot is set. Defaults to `ext4`.
          type: string
      description: 'A PersistentDirectory backed by a Compute Engine regional persistent disk. The `persistentDirectories[]` field is repeated, but it may contain only one entry. It creates a [persistent disk](https://cloud.google.com/compute/docs/disks/persistent-disks) that mounts to the workstation VM at `/home` when the session starts and detaches when the session ends. If this field is empty, workstations created with this configuration do not have a persistent home directory.'
      type: object
    StopWorkstationRequest:
      id: StopWorkstationRequest
      type: object
      properties:
        validateOnly:
          description: 'If set, validate the request and preview the review, but do not actually apply it.'
          type: boolean
        etag:
          description: 'If set, the request will be rejected if the latest version of the workstation on the server does not have this ETag.'
          type: string
      description: Request message for StopWorkstation.
  parameters:
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
  x-stackQL-resources:
    operations:
      id: google.workstations.operations
      name: operations
      title: Operations
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    workstation_clusters:
      id: google.workstations.workstation_clusters
      name: workstation_clusters
      title: Workstation Clusters
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workstation_clusters/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/workstation_clusters/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workstation_clusters/methods/delete'
    workstations_iam_policies:
      id: google.workstations.workstations_iam_policies
      name: workstations_iam_policies
      title: Workstations Iam Policies
      methods:
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations~1{workstationsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations~1{workstationsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations~1{workstationsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workstations_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    workstations:
      id: google.workstations.workstations
      name: workstations
      title: Workstations
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations~1{workstationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations~1{workstationsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations~1{workstationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations~1{workstationsId}:stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_access_token:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations~1{workstationsId}:generateAccessToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations~1{workstationsId}:start/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workstations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/workstations/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workstations/methods/delete'
    workstations_usable:
      id: google.workstations.workstations_usable
      name: workstations_usable
      title: Workstations Usable
      methods:
        list_usable:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations:listUsable/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workstations_usable/methods/list_usable'
        insert: []
        update: []
        delete: []
    workstation_configs_iam_policies:
      id: google.workstations.workstation_configs_iam_policies
      name: workstation_configs_iam_policies
      title: Workstation Configs Iam Policies
      methods:
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workstation_configs_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    workstation_configs:
      id: google.workstations.workstation_configs
      name: workstation_configs
      title: Workstation Configs
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workstation_configs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/workstation_configs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workstation_configs/methods/delete'
    workstation_configs_usable:
      id: google.workstations.workstation_configs_usable
      name: workstation_configs_usable
      title: Workstation Configs Usable
      methods:
        list_usable:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs:listUsable/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workstation_configs_usable/methods/list_usable'
        insert: []
        update: []
        delete: []
paths:
  '/v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: workstations.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: workstations.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: workstations.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: workstations.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters':
    parameters: *ref_1
    post:
      description: Creates a new workstation cluster.
      operationId: workstations.projects.locations.workstationClusters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkstationCluster'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: workstationClusterId
          schema:
            type: string
      x-stackQL-resource: workstation_clusters
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Returns all workstation clusters in the specified location.
      operationId: workstations.projects.locations.workstationClusters.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkstationClustersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: workstation_clusters
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}':
    parameters: *ref_1
    patch:
      description: Updates an existing workstation cluster.
      operationId: workstations.projects.locations.workstationClusters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkstationCluster'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: workstation_clusters
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes the specified workstation cluster.
      operationId: workstations.projects.locations.workstationClusters.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: workstation_clusters
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Returns the requested workstation cluster.
      operationId: workstations.projects.locations.workstationClusters.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstationCluster'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: workstation_clusters
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workstations_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workstations_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}':
    parameters: *ref_1
    delete:
      description: Deletes the specified workstation.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: workstations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates an existing workstation.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workstation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: workstations
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Returns the requested workstation.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workstation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workstations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:stop':
    parameters: *ref_1
    post:
      description: 'Stops running a workstation, reducing costs.'
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopWorkstationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workstations
      x-stackQL-method: stop
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations':
    parameters: *ref_1
    post:
      description: Creates a new workstation.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workstation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: workstationId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: workstations
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Returns all Workstations using the specified workstation configuration.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkstationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: workstations
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: workstations_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:generateAccessToken':
    parameters: *ref_1
    post:
      description: Returns a short-lived credential that can be used to send authenticated and authorized traffic to a workstation.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.generateAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateAccessTokenRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateAccessTokenResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workstations
      x-stackQL-method: generate_access_token
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:start':
    parameters: *ref_1
    post:
      description: Starts running a workstation so that users can connect to it.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartWorkstationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workstations
      x-stackQL-method: start
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations:listUsable':
    parameters: *ref_1
    get:
      description: Returns all workstations using the specified workstation configuration on which the caller has the "workstations.workstations.use" permission.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.listUsable
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsableWorkstationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: workstations_usable
      x-stackQL-method: list_usable
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workstation_configs_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs':
    parameters: *ref_1
    get:
      description: Returns all workstation configurations in the specified cluster.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkstationConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: workstation_configs
      x-stackQL-method: list
      x-stackQL-verb: select
    post:
      description: Creates a new workstation configuration.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkstationConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: query
          name: workstationConfigId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: workstation_configs
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}':
    parameters: *ref_1
    get:
      description: Returns the requested workstation configuration.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstationConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workstation_configs
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes the specified workstation configuration.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: workstation_configs
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates an existing workstation configuration.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkstationConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: workstation_configs
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs:listUsable':
    parameters: *ref_1
    get:
      description: Returns all workstation configurations in the specified cluster on which the caller has the "workstations.workstation.create" permission.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.listUsable
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsableWorkstationConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: workstation_configs_usable
      x-stackQL-method: list_usable
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workstation_configs_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: workstation_configs_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
