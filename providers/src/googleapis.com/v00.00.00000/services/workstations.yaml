openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Workstations API
  description: ''
  version: v1beta
  x-discovery-doc-revision: '20230105'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://cloud.google.com/workstations
servers:
  - url: https://workstations.googleapis.com
components:
  schemas:
    WorkstationCluster:
      properties:
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Time when this resource was most recently updated.
        labels:
          additionalProperties:
            type: string
          type: object
          description: Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
        name:
          type: string
          description: Full name of this resource.
        etag:
          description: Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.
          type: string
        degraded:
          type: boolean
          description: Output only. Whether this resource is in degraded mode, in which case it may require user action to restore full functionality. Details can be found in the `conditions` field.
          readOnly: true
        displayName:
          description: Human-readable name for this resource.
          type: string
        conditions:
          items:
            $ref: '#/components/schemas/Status'
          readOnly: true
          type: array
          description: Output only. Status conditions describing the current resource state.
        network:
          type: string
          description: Immutable. Name of the Compute Engine network in which instances associated with this cluster will be created.
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. Time when this resource was created.
          type: string
        privateClusterConfig:
          $ref: '#/components/schemas/PrivateClusterConfig'
          description: Configuration for private cluster.
        uid:
          description: Output only. A system-assigned unique identified for this resource.
          type: string
          readOnly: true
        subnetwork:
          type: string
          description: Immutable. Name of the Compute Engine subnetwork in which instances associated with this cluster will be created. Must be part of the subnetwork specified for this cluster.
        reconciling:
          readOnly: true
          description: Output only. Indicates whether this resource is currently being updated to match its intended state.
          type: boolean
        deleteTime:
          type: string
          description: Output only. Time when this resource was soft-deleted.
          format: google-datetime
          readOnly: true
        annotations:
          description: Client-specified annotations.
          additionalProperties:
            type: string
          type: object
      description: A grouping of workstation configurations and the associated workstations in that region.
      id: WorkstationCluster
      type: object
    Expr:
      properties:
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        description:
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        title:
          type: string
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
      id: Expr
      type: object
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
    Status:
      type: object
      id: Status
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        details:
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
        code:
          type: integer
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
    ListWorkstationConfigsResponse:
      description: Response message for ListWorkstationConfigs.
      id: ListWorkstationConfigsResponse
      properties:
        unreachable:
          description: Unreachable resources.
          items:
            type: string
          type: array
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
        workstationConfigs:
          description: The requested configs.
          items:
            $ref: '#/components/schemas/WorkstationConfig'
          type: array
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      id: SetIamPolicyRequest
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
        updateMask:
          format: google-fieldmask
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          type: string
      type: object
    PrivateClusterConfig:
      description: Configuration options for private clusters.
      properties:
        serviceAttachmentUri:
          type: string
          readOnly: true
          description: Output only. Service attachment URI for the workstation cluster. The service attachemnt is created when private endpoint is enabled. To access workstations in the cluster, configure access to the managed service using (Private Service Connect)[https://cloud.google.com/vpc/docs/configure-private-service-connect-services].
        clusterHostname:
          type: string
          readOnly: true
          description: Output only. Hostname for the workstation cluster. This field will be populated only when private endpoint is enabled. To access workstations in the cluster, create a new DNS zone mapping this domain name to an internal IP address and a forwarding rule mapping that address to the service attachment.
        enablePrivateEndpoint:
          type: boolean
          description: Immutable. Whether Workstations endpoint is private.
      id: PrivateClusterConfig
      type: object
    Container:
      description: A Docker container.
      type: object
      id: Container
      properties:
        command:
          items:
            type: string
          description: If set, overrides the default ENTRYPOINT specified by the image.
          type: array
        env:
          description: Environment variables passed to the container.
          additionalProperties:
            type: string
          type: object
        workingDir:
          description: If set, overrides the default DIR specified by the image.
          type: string
        image:
          type: string
          description: Docker image defining the container. This image must be accessible by the config's service account.
        runAsUser:
          format: int32
          type: integer
          description: If set, overrides the USER specified in the image with the given uid.
        args:
          description: Arguments passed to the entrypoint.
          items:
            type: string
          type: array
    ListWorkstationClustersResponse:
      description: Response message for ListWorkstationClusters.
      properties:
        workstationClusters:
          items:
            $ref: '#/components/schemas/WorkstationCluster'
          type: array
          description: The requested clusters.
        unreachable:
          type: array
          items:
            type: string
          description: Unreachable resources.
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
      id: ListWorkstationClustersResponse
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    Workstation:
      description: A single instance of a developer workstation with its own persistent storage.
      type: object
      properties:
        deleteTime:
          readOnly: true
          type: string
          description: Output only. Time when this resource was soft-deleted.
          format: google-datetime
        host:
          type: string
          readOnly: true
          description: Output only. Host to which clients can send HTTPS traffic that will be received by the workstation. Authorized traffic will be received to the workstation as HTTP on port 80. To send traffic to a different port, clients may prefix the host with the destination port in the format "{port}-{host}".
        annotations:
          additionalProperties:
            type: string
          description: Client-specified annotations.
          type: object
        name:
          description: Full name of this resource.
          type: string
        labels:
          description: Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
          additionalProperties:
            type: string
          type: object
        reconciling:
          type: boolean
          description: Output only. Indicates whether this resource is currently being updated to match its intended state.
          readOnly: true
        state:
          type: string
          description: Output only. Current state of the workstation.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - STATE_STARTING
            - STATE_RUNNING
            - STATE_STOPPING
            - STATE_STOPPED
          enumDescriptions:
            - Do not use.
            - The workstation is not yet ready to accept requests from users but will be soon.
            - The workstation is ready to accept requests from users.
            - The workstation is being stopped.
            - The workstation is stopped and will not be able to receive requests until it is started.
        uid:
          type: string
          readOnly: true
          description: Output only. A system-assigned unique identified for this resource.
        createTime:
          description: Output only. Time when this resource was created.
          format: google-datetime
          readOnly: true
          type: string
        updateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. Time when this resource was most recently updated.
        etag:
          type: string
          description: Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.
        displayName:
          description: Human-readable name for this resource.
          type: string
      id: Workstation
    Host:
      description: Runtime host for a workstation.
      type: object
      id: Host
      properties:
        gceInstance:
          $ref: '#/components/schemas/GceInstance'
          description: Specifies a Compute Engine instance as the host.
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      id: Empty
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      id: TestIamPermissionsRequest
      properties:
        permissions:
          description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
      type: object
    GceShieldedInstanceConfig:
      id: GceShieldedInstanceConfig
      properties:
        enableSecureBoot:
          description: Whether the instance has Secure Boot enabled.
          type: boolean
        enableVtpm:
          type: boolean
          description: Whether the instance has the vTPM enabled.
        enableIntegrityMonitoring:
          type: boolean
          description: Whether the instance has integrity monitoring enabled.
      type: object
      description: A set of Compute Engine Shielded instance options.
    AuditLogConfig:
      properties:
        logType:
          type: string
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          description: The log type that this config enables.
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          type: array
          items:
            type: string
      type: object
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      id: AuditLogConfig
    GenerateAccessTokenRequest:
      id: GenerateAccessTokenRequest
      properties:
        ttl:
          type: string
          format: google-duration
          description: Desired lifetime duration of the access token. This value must be at most 24 hours. If a value is not specified, the token's lifetime will be set to a default value of 1 hour.
        expireTime:
          format: google-datetime
          description: Desired expiration time of the access token. This value must be at most 24 hours in the future. If a value is not specified, the token's expiration time will be set to a default value of 1 hour in the future.
          type: string
      description: Request message for GenerateAccessToken.
      type: object
    StopWorkstationRequest:
      properties:
        etag:
          type: string
          description: If set, the request will be rejected if the latest version of the workstation on the server does not have this etag.
        validateOnly:
          type: boolean
          description: If set, validate the request and preview the review, but do not actually apply it.
      description: Request message for StopWorkstation.
      id: StopWorkstationRequest
      type: object
    ListWorkstationsResponse:
      id: ListWorkstationsResponse
      type: object
      properties:
        unreachable:
          items:
            type: string
          type: array
          description: Unreachable resources.
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
        workstations:
          type: array
          description: The requested workstations.
          items:
            $ref: '#/components/schemas/Workstation'
      description: Response message for ListWorkstations.
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: A list of operations that matches the specified filter in the request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
      type: object
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
    Operation:
      id: Operation
      type: object
      properties:
        name:
          type: string
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        done:
          type: boolean
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
        metadata:
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        response:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
      description: This resource represents a long-running operation that is the result of a network API call.
    WorkstationConfig:
      description: A set of configuration options describing how a workstation will be run. Workstation configurations are intended to be shared across multiple workstations.
      id: WorkstationConfig
      properties:
        host:
          description: Runtime host for the workstation.
          $ref: '#/components/schemas/Host'
        etag:
          type: string
          description: Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.
        idleTimeout:
          description: How long to wait before automatically stopping an instance that hasn't received any user traffic. A value of 0 indicates that this instance should never time out due to idleness. Defaults to 20 minutes.
          format: google-duration
          type: string
        updateTime:
          readOnly: true
          description: Output only. Time when this resource was most recently updated.
          type: string
          format: google-datetime
        displayName:
          description: Human-readable name for this resource.
          type: string
        reconciling:
          description: Output only. Indicates whether this resource is currently being updated to match its intended state.
          type: boolean
          readOnly: true
        createTime:
          format: google-datetime
          readOnly: true
          description: Output only. Time when this resource was created.
          type: string
        persistentDirectories:
          items:
            $ref: '#/components/schemas/PersistentDirectory'
          description: Directories to persist across workstation sessions.
          type: array
        labels:
          additionalProperties:
            type: string
          description: Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
          type: object
        conditions:
          description: Output only. Status conditions describing the current resource state.
          type: array
          items:
            $ref: '#/components/schemas/Status'
          readOnly: true
        degraded:
          readOnly: true
          description: Output only. Whether this resource is in degraded mode, in which case it may require user action to restore full functionality. Details can be found in the `conditions` field.
          type: boolean
        deleteTime:
          readOnly: true
          description: Output only. Time when this resource was soft-deleted.
          type: string
          format: google-datetime
        uid:
          readOnly: true
          description: Output only. A system-assigned unique identified for this resource.
          type: string
        annotations:
          description: Client-specified annotations.
          additionalProperties:
            type: string
          type: object
        container:
          description: Container that will be run for each workstation using this configuration when that workstation is started.
          $ref: '#/components/schemas/Container'
        name:
          type: string
          description: Full name of this resource.
        runningTimeout:
          format: google-duration
          type: string
          description: How long to wait before automatically stopping a workstation after it started. A value of 0 indicates that workstations using this config should never time out. Must be greater than 0 and less than 24 hours if encryption_key is set. Defaults to 12 hours.
      type: object
    GceInstance:
      type: object
      id: GceInstance
      description: A runtime using a Compute Engine instance.
      properties:
        shieldedInstanceConfig:
          $ref: '#/components/schemas/GceShieldedInstanceConfig'
          description: A set of Compute Engine Shielded instance options.
        tags:
          description: Network tags to add to the Compute Engine machines backing the Workstations.
          type: array
          items:
            type: string
        machineType:
          description: The name of a Compute Engine machine type.
          type: string
        confidentialInstanceConfig:
          $ref: '#/components/schemas/GceConfidentialInstanceConfig'
          description: A set of Compute Engine Confidential VM instance options.
        serviceAccount:
          description: Email address of the service account that will be used on VM instances used to support this config. This service account must have permission to pull the specified container image. If not set, VMs will run without a service account, in which case the image must be publicly accessible.
          type: string
        poolSize:
          format: int32
          description: Number of instances to pool for faster workstation starup.
          type: integer
        bootDiskSizeGb:
          format: int32
          type: integer
          description: Size of the boot disk in GB.
        disablePublicIpAddresses:
          description: Whether instances have no public IP address.
          type: boolean
    OperationMetadata:
      type: object
      description: Represents the metadata of the long-running operation.
      id: OperationMetadata
      properties:
        createTime:
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
        apiVersion:
          type: string
          readOnly: true
          description: Output only. API version used to start the operation.
        endTime:
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
        verb:
          type: string
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
        cancelRequested:
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        target:
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
        statusDetail:
          type: string
          readOnly: true
          description: Output only. Human-readable status of the operation, if any.
    GenerateAccessTokenResponse:
      description: Response message for GenerateAccessToken.
      properties:
        expireTime:
          format: google-datetime
          description: Time at which the generated token will expire.
          type: string
        accessToken:
          description: 'The generated bearer access token. To use this token, include it in an Authorization header of an HTTP request sent to the associated workstation''s hostname, e.g. "Authorization: Bearer ".'
          type: string
      id: GenerateAccessTokenResponse
      type: object
    GceConfidentialInstanceConfig:
      properties:
        enableConfidentialCompute:
          description: Whether the instance has confidential compute enabled.
          type: boolean
      description: A set of Compute Engine Confidential VM instance options.
      type: object
      id: GceConfidentialInstanceConfig
    AuditConfig:
      type: object
      id: AuditConfig
      properties:
        service:
          type: string
          description: Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
        auditLogConfigs:
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          description: The configuration for logging of each type of permission.
          type: array
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
    ListUsableWorkstationsResponse:
      type: object
      description: Response message for ListUsableWorkstations.
      properties:
        unreachable:
          items:
            type: string
          description: Unreachable resources.
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        workstations:
          description: The requested workstations.
          type: array
          items:
            $ref: '#/components/schemas/Workstation'
      id: ListUsableWorkstationsResponse
    PersistentDirectory:
      properties:
        mountPath:
          description: Location of this directory in the running workstation.
          type: string
        gcePd:
          $ref: '#/components/schemas/GceRegionalPersistentDisk'
          description: A PersistentDirectory backed by a Compute Engine persistent disk.
      type: object
      id: PersistentDirectory
      description: A directory to persist across workstation sessions.
    Policy:
      properties:
        bindings:
          items:
            $ref: '#/components/schemas/Binding'
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: '#/components/schemas/AuditConfig'
          type: array
        version:
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          type: integer
          format: int32
        etag:
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          type: string
          format: byte
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      type: object
      id: Policy
    ListUsableWorkstationConfigsResponse:
      id: ListUsableWorkstationConfigsResponse
      type: object
      properties:
        workstationConfigs:
          description: The requested configs.
          type: array
          items:
            $ref: '#/components/schemas/WorkstationConfig'
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
        unreachable:
          items:
            type: string
          description: Unreachable resources.
          type: array
      description: Response message for ListUsableWorkstationConfigs.
    StartWorkstationRequest:
      id: StartWorkstationRequest
      type: object
      properties:
        validateOnly:
          type: boolean
          description: If set, validate the request and preview the review, but do not actually apply it.
        etag:
          type: string
          description: If set, the request will be rejected if the latest version of the workstation on the server does not have this etag.
      description: Request message for StartWorkstation.
    GceRegionalPersistentDisk:
      type: object
      description: A PersistentDirectory backed by a Compute Engine regional persistent disk.
      id: GceRegionalPersistentDisk
      properties:
        diskType:
          type: string
          description: Type of the disk to use.
        reclaimPolicy:
          description: What should happen to the disk after the workstation is deleted. Defaults to DELETE.
          enumDescriptions:
            - Do not use.
            - The persistent disk will be deleted with the workstation.
            - The persistent disk will be remain after the workstation is deleted, and the administrator must manually delete the disk.
          enum:
            - RECLAIM_POLICY_UNSPECIFIED
            - DELETE
            - RETAIN
          type: string
        sizeGb:
          type: integer
          format: int32
          description: Size of the disk in GB. Must be empty if source_snapshot is set.
        fsType:
          description: Type of file system that the disk should be formatted with. The workstation image must support this file system type. Must be empty if source_snapshot is set.
          type: string
    Binding:
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        members:
          type: array
          items:
            type: string
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. '
        condition:
          description: The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
        role:
          type: string
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
      id: Binding
  parameters:
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    workstations:
      id: google.workstations.workstations
      name: workstations
      title: Workstations
      methods:
        projects_locations_workstationClusters_workstationConfigs_workstations_start:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations~1{workstationsId}:start/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workstationClusters_workstationConfigs_workstations_delete:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations~1{workstationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workstationClusters_workstationConfigs_workstations_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations~1{workstationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workstationClusters_workstationConfigs_workstations_patch:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations~1{workstationsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workstationClusters_workstationConfigs_workstations_generateAccessToken:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations~1{workstationsId}:generateAccessToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workstationClusters_workstationConfigs_workstations_create:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workstationClusters_workstationConfigs_workstations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workstationClusters_workstationConfigs_workstations_stop:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations~1{workstationsId}:stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workstations/methods/projects_locations_workstationClusters_workstationConfigs_workstations_get'
          - $ref: '#/components/x-stackQL-resources/workstations/methods/projects_locations_workstationClusters_workstationConfigs_workstations_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/workstations/methods/projects_locations_workstationClusters_workstationConfigs_workstations_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workstations/methods/projects_locations_workstationClusters_workstationConfigs_workstations_delete'
    usable:
      id: google.workstations.usable
      name: usable
      title: Usable
      methods:
        projects_locations_workstationClusters_workstationConfigs_workstations_listUsable:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations:listUsable/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usable/methods/projects_locations_workstationClusters_workstationConfigs_workstations_listUsable'
        insert: []
        update: []
        delete: []
    iam_policies:
      id: google.workstations.iam_policies
      name: iam_policies
      title: Iam_policies
      methods:
        projects_locations_workstationClusters_workstationConfigs_workstations_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations~1{workstationsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workstationClusters_workstationConfigs_workstations_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations~1{workstationsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workstationClusters_workstationConfigs_workstations_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}~1workstations~1{workstationsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/iam_policies/methods/projects_locations_workstationClusters_workstationConfigs_workstations_getIamPolicy'
        insert: []
        update: []
        delete: []
    workstation_configs_iam_policies:
      id: google.workstations.workstation_configs_iam_policies
      name: workstation_configs_iam_policies
      title: Workstation_configs_iam_policies
      methods:
        projects_locations_workstationClusters_workstationConfigs_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workstationClusters_workstationConfigs_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workstationClusters_workstationConfigs_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workstation_configs_iam_policies/methods/projects_locations_workstationClusters_workstationConfigs_getIamPolicy'
        insert: []
        update: []
        delete: []
    workstation_configs:
      id: google.workstations.workstation_configs
      name: workstation_configs
      title: Workstation_configs
      methods:
        projects_locations_workstationClusters_workstationConfigs_create:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workstationClusters_workstationConfigs_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workstationClusters_workstationConfigs_delete:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workstationClusters_workstationConfigs_patch:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workstationClusters_workstationConfigs_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workstation_configs/methods/projects_locations_workstationClusters_workstationConfigs_get'
          - $ref: '#/components/x-stackQL-resources/workstation_configs/methods/projects_locations_workstationClusters_workstationConfigs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/workstation_configs/methods/projects_locations_workstationClusters_workstationConfigs_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workstation_configs/methods/projects_locations_workstationClusters_workstationConfigs_delete'
    workstation_configs_usable:
      id: google.workstations.workstation_configs_usable
      name: workstation_configs_usable
      title: Workstation_configs_usable
      methods:
        projects_locations_workstationClusters_workstationConfigs_listUsable:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs:listUsable/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workstation_configs_usable/methods/projects_locations_workstationClusters_workstationConfigs_listUsable'
        insert: []
        update: []
        delete: []
    workstation_clusters:
      id: google.workstations.workstation_clusters
      name: workstation_clusters
      title: Workstation_clusters
      methods:
        projects_locations_workstationClusters_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workstationClusters_create:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workstationClusters_delete:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workstationClusters_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workstationClusters_patch:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workstation_clusters/methods/projects_locations_workstationClusters_get'
          - $ref: '#/components/x-stackQL-resources/workstation_clusters/methods/projects_locations_workstationClusters_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/workstation_clusters/methods/projects_locations_workstationClusters_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workstation_clusters/methods/projects_locations_workstationClusters_delete'
    operations:
      id: google.workstations.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: operations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
    workstation_configs_iam_bindings:
      id: google.workstations.workstation_configs_iam_bindings
      name: workstation_configs_iam_bindings
      title: workstation_configs_iam_bindings
      methods:
        projects_locations_workstationClusters_workstationConfigs_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/workstation_configs_iam_bindings/methods/projects_locations_workstationClusters_workstationConfigs_getIamPolicy'
    workstation_configs_iam_audit_configs:
      id: google.workstations.workstation_configs_iam_audit_configs
      name: workstation_configs_iam_audit_configs
      title: workstation_configs_iam_audit_configs
      methods:
        projects_locations_workstationClusters_workstationConfigs_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1workstationClusters~1{workstationClustersId}~1workstationConfigs~1{workstationConfigsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/workstation_configs_iam_audit_configs/methods/projects_locations_workstationClusters_workstationConfigs_getIamPolicy'
paths:
  /v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:start:
    parameters: &ref_1
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
    post:
      description: Starts running a workstation so that users can connect to it.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartWorkstationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workstations
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations:listUsable:
    parameters: *ref_1
    get:
      description: Returns all Workstations using the specified config on which the caller has the "workstations.workstations.use" permission.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.listUsable
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsableWorkstationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: usable
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: iam_policies
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: iam_policies
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: iam_policies
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:
    parameters: *ref_1
    delete:
      description: Deletes the specified workstation.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: workstations
      x-stackQL-verb: delete
    get:
      description: Returns the requested workstation.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workstation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workstations
      x-stackQL-verb: select
    patch:
      description: Updates an existing workstation.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workstation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: workstations
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:generateAccessToken:
    parameters: *ref_1
    post:
      description: Returns a short-lived credential that can be used to send authenticated and authorized traffic to a workstation.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.generateAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateAccessTokenRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateAccessTokenResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workstations
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations:
    parameters: *ref_1
    post:
      description: Creates a new workstation.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workstation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: workstationId
          schema:
            type: string
      x-stackQL-resource: workstations
      x-stackQL-verb: insert
    get:
      description: Returns all Workstations using the specified config.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkstationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: workstations
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:stop:
    parameters: *ref_1
    post:
      description: Stops running a workstation, reducing costs.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.workstations.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopWorkstationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workstations
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workstation_configs_iam_policies
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs:
    parameters: *ref_1
    post:
      description: Creates a new workstation configuration.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkstationConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: workstationConfigId
          schema:
            type: string
      x-stackQL-resource: workstation_configs
      x-stackQL-verb: insert
    get:
      description: Returns all workstation configurations in the specified cluster.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkstationConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: workstation_configs
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: workstation_configs_iam_policies
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs:listUsable:
    parameters: *ref_1
    get:
      description: Returns all workstation configurations in the specified cluster on which the caller has the "workstations.workstation.create" permission.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.listUsable
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsableWorkstationConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: workstation_configs_usable
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workstation_configs_iam_policies
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}:
    parameters: *ref_1
    delete:
      description: Deletes the specified workstation configuration.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: workstation_configs
      x-stackQL-verb: delete
    patch:
      description: Updates an existing workstation configuration.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkstationConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: workstation_configs
      x-stackQL-verb: exec
    get:
      description: Returns the requested workstation configuration.
      operationId: workstations.projects.locations.workstationClusters.workstationConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstationConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: path
          name: workstationConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workstation_configs
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters:
    parameters: *ref_1
    get:
      description: Returns all workstation clusters in the specified location.
      operationId: workstations.projects.locations.workstationClusters.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkstationClustersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: workstation_clusters
      x-stackQL-verb: select
    post:
      description: Creates a new workstation cluster.
      operationId: workstations.projects.locations.workstationClusters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkstationCluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: workstationClusterId
          schema:
            type: string
      x-stackQL-resource: workstation_clusters
      x-stackQL-verb: insert
  /v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}:
    parameters: *ref_1
    delete:
      description: Deletes the specified workstation cluster.
      operationId: workstations.projects.locations.workstationClusters.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: workstation_clusters
      x-stackQL-verb: delete
    get:
      description: Returns the requested workstation cluster.
      operationId: workstations.projects.locations.workstationClusters.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstationCluster'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: workstation_clusters
      x-stackQL-verb: select
    patch:
      description: Updates an existing workstation cluster.
      operationId: workstations.projects.locations.workstationClusters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkstationCluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workstationClustersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: workstation_clusters
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: workstations.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: workstations.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: workstations.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.'
      operationId: workstations.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-verb: select
