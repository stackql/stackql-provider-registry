openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Storage JSON API
  description: 'Stores and retrieves potentially large, immutable data objects.'
  version: v1
  x-discovery-doc-revision: '20230819'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://developers.google.com/storage/docs/json_api/'
servers:
  - url: 'https://storage.googleapis.com/storage/v1'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
            'https://www.googleapis.com/auth/cloud-platform.read-only': View your data across Google Cloud Platform services
            'https://www.googleapis.com/auth/devstorage.full_control': Manage your data and permissions in Google Cloud Storage
            'https://www.googleapis.com/auth/devstorage.read_only': View your data in Google Cloud Storage
            'https://www.googleapis.com/auth/devstorage.read_write': Manage your data in Google Cloud Storage
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    Bucket:
      id: Bucket
      type: object
      description: A bucket.
      properties:
        acl:
          type: array
          description: Access controls on the bucket.
          items:
            $ref: '#/components/schemas/BucketAccessControl'
          annotations:
            required:
              - storage.buckets.update
        billing:
          type: object
          description: The bucket's billing configuration.
          properties:
            requesterPays:
              type: boolean
              description: 'When set to true, Requester Pays is enabled for this bucket.'
        cors:
          type: array
          description: The bucket's Cross-Origin Resource Sharing (CORS) configuration.
          items:
            type: object
            properties:
              maxAgeSeconds:
                type: integer
                description: 'The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.'
                format: int32
              method:
                type: array
                description: 'The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".'
                items:
                  type: string
              origin:
                type: array
                description: 'The list of Origins eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".'
                items:
                  type: string
              responseHeader:
                type: array
                description: The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
                items:
                  type: string
        customPlacementConfig:
          type: object
          description: The bucket's custom placement configuration for Custom Dual Regions.
          properties:
            dataLocations:
              type: array
              description: The list of regional locations in which data is placed.
              items:
                type: string
        defaultEventBasedHold:
          type: boolean
          description: 'The default value for event-based hold on newly created objects in this bucket. Event-based hold is a way to retain objects indefinitely until an event occurs, signified by the hold''s release. After being released, such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false. Objects under event-based hold cannot be deleted, overwritten or archived until the hold is removed.'
        defaultObjectAcl:
          type: array
          description: Default access controls to apply to new objects when no ACL is provided.
          items:
            $ref: '#/components/schemas/ObjectAccessControl'
        encryption:
          type: object
          description: Encryption configuration for a bucket.
          properties:
            defaultKmsKeyName:
              type: string
              description: 'A Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.'
        etag:
          type: string
          description: HTTP 1.1 Entity tag for the bucket.
        iamConfiguration:
          type: object
          description: The bucket's IAM configuration.
          properties:
            bucketPolicyOnly:
              type: object
              description: 'The bucket''s uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.'
              properties:
                enabled:
                  type: boolean
                  description: 'If set, access is controlled only by bucket-level or above IAM policies.'
                lockedTime:
                  type: string
                  description: 'The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable.'
                  format: date-time
            uniformBucketLevelAccess:
              type: object
              description: The bucket's uniform bucket-level access configuration.
              properties:
                enabled:
                  type: boolean
                  description: 'If set, access is controlled only by bucket-level or above IAM policies.'
                lockedTime:
                  type: string
                  description: 'The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable.'
                  format: date-time
            publicAccessPrevention:
              type: string
              description: 'The bucket''s Public Access Prevention configuration. Currently, ''inherited'' and ''enforced'' are supported.'
        id:
          type: string
          description: 'The ID of the bucket. For buckets, the id and name properties are the same.'
        kind:
          type: string
          description: 'The kind of item this is. For buckets, this is always storage#bucket.'
          default: storage#bucket
        labels:
          type: object
          description: 'User-provided labels, in key/value pairs.'
          additionalProperties:
            type: string
            description: An individual label entry.
        lifecycle:
          type: object
          description: The bucket's lifecycle configuration. See lifecycle management for more information.
          properties:
            rule:
              type: array
              description: 'A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.'
              items:
                type: object
                properties:
                  action:
                    type: object
                    description: The action to take.
                    properties:
                      storageClass:
                        type: string
                        description: Target storage class. Required iff the type of the action is SetStorageClass.
                      type:
                        type: string
                        description: 'Type of the action. Currently, only Delete, SetStorageClass, and AbortIncompleteMultipartUpload are supported.'
                  condition:
                    type: object
                    description: The condition(s) under which the action will be taken.
                    properties:
                      age:
                        type: integer
                        description: Age of an object (in days). This condition is satisfied when an object reaches the specified age.
                        format: int32
                      createdBefore:
                        type: string
                        description: 'A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when an object is created before midnight of the specified date in UTC.'
                        format: date
                      customTimeBefore:
                        type: string
                        description: 'A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the custom time on an object is before this date in UTC.'
                        format: date
                      daysSinceCustomTime:
                        type: integer
                        description: 'Number of days elapsed since the user-specified timestamp set on an object. The condition is satisfied if the days elapsed is at least this number. If no custom timestamp is specified on an object, the condition does not apply.'
                        format: int32
                      daysSinceNoncurrentTime:
                        type: integer
                        description: 'Number of days elapsed since the noncurrent timestamp of an object. The condition is satisfied if the days elapsed is at least this number. This condition is relevant only for versioned objects. The value of the field must be a nonnegative integer. If it''s zero, the object version will become eligible for Lifecycle action as soon as it becomes noncurrent.'
                        format: int32
                      isLive:
                        type: boolean
                        description: 'Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects.'
                      matchesPattern:
                        type: string
                        description: 'A regular expression that satisfies the RE2 syntax. This condition is satisfied when the name of the object matches the RE2 pattern. Note: This feature is currently in the "Early Access" launch stage and is only available to a whitelisted set of users; that means that this feature may be changed in backward-incompatible ways and that it is not guaranteed to be released.'
                      matchesPrefix:
                        type: array
                        description: List of object name prefixes. This condition will be satisfied when at least one of the prefixes exactly matches the beginning of the object name.
                        items:
                          type: string
                      matchesSuffix:
                        type: array
                        description: List of object name suffixes. This condition will be satisfied when at least one of the suffixes exactly matches the end of the object name.
                        items:
                          type: string
                      matchesStorageClass:
                        type: array
                        description: 'Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.'
                        items:
                          type: string
                      noncurrentTimeBefore:
                        type: string
                        description: 'A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the noncurrent time on an object is before this date in UTC. This condition is relevant only for versioned objects.'
                        format: date
                      numNewerVersions:
                        type: integer
                        description: 'Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.'
                        format: int32
        autoclass:
          type: object
          description: The bucket's Autoclass configuration.
          properties:
            enabled:
              type: boolean
              description: Whether or not Autoclass is enabled on this bucket
            toggleTime:
              type: string
              description: A date and time in RFC 3339 format representing the instant at which "enabled" was last toggled.
              format: date-time
        location:
          type: string
          description: The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Defaults to US. See the developer's guide for the authoritative list.
        locationType:
          type: string
          description: The type of the bucket location.
        logging:
          type: object
          description: 'The bucket''s logging configuration, which defines the destination bucket and optional name prefix for the current bucket''s logs.'
          properties:
            logBucket:
              type: string
              description: The destination bucket where the current bucket's logs should be placed.
            logObjectPrefix:
              type: string
              description: A prefix for log object names.
        metageneration:
          type: string
          description: The metadata generation of this bucket.
          format: int64
        name:
          type: string
          description: The name of the bucket.
          annotations:
            required:
              - storage.buckets.insert
        owner:
          type: object
          description: The owner of the bucket. This is always the project team's owner group.
          properties:
            entity:
              type: string
              description: 'The entity, in the form project-owner-projectId.'
            entityId:
              type: string
              description: The ID for the entity.
        projectNumber:
          type: string
          description: The project number of the project the bucket belongs to.
          format: uint64
        retentionPolicy:
          type: object
          description: 'The bucket''s retention policy. The retention policy enforces a minimum retention time for all objects contained in the bucket, based on their creation time. Any attempt to overwrite or delete objects younger than the retention period will result in a PERMISSION_DENIED error. An unlocked retention policy can be modified or removed from the bucket via a storage.buckets.update operation. A locked retention policy cannot be removed or shortened in duration for the lifetime of the bucket. Attempting to remove or decrease period of a locked retention policy will result in a PERMISSION_DENIED error.'
          properties:
            effectiveTime:
              type: string
              description: Server-determined value that indicates the time from which policy was enforced and effective. This value is in RFC 3339 format.
              format: date-time
            isLocked:
              type: boolean
              description: 'Once locked, an object retention policy cannot be modified.'
            retentionPeriod:
              type: string
              description: The duration in seconds that objects need to be retained. Retention duration must be greater than zero and less than 100 years. Note that enforcement of retention periods less than a day is not guaranteed. Such periods should only be used for testing purposes.
              format: int64
        rpo:
          type: string
          description: The Recovery Point Objective (RPO) of this bucket. Set to ASYNC_TURBO to turn on Turbo Replication on a bucket.
        selfLink:
          type: string
          description: The URI of this bucket.
        storageClass:
          type: string
          description: 'The bucket''s default storage class, used whenever no storageClass is specified for a newly-created object. This defines how objects in the bucket are stored and determines the SLA and the cost of storage. Values include MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, ARCHIVE, and DURABLE_REDUCED_AVAILABILITY. If this value is not specified when the bucket is created, it will default to STANDARD. For more information, see storage classes.'
        timeCreated:
          type: string
          description: The creation time of the bucket in RFC 3339 format.
          format: date-time
        updated:
          type: string
          description: The modification time of the bucket in RFC 3339 format.
          format: date-time
        versioning:
          type: object
          description: The bucket's versioning configuration.
          properties:
            enabled:
              type: boolean
              description: 'While set to true, versioning is fully enabled for this bucket.'
        website:
          type: object
          description: 'The bucket''s website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information.'
          properties:
            mainPageSuffix:
              type: string
              description: 'If the requested object path is missing, the service will ensure the path has a trailing ''/'', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages.'
            notFoundPage:
              type: string
              description: 'If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result.'
        satisfiesPZS:
          type: boolean
          description: Reserved for future use.
    BucketAccessControl:
      id: BucketAccessControl
      type: object
      description: An access-control entry.
      properties:
        bucket:
          type: string
          description: The name of the bucket.
        domain:
          type: string
          description: 'The domain associated with the entity, if any.'
        email:
          type: string
          description: 'The email address associated with the entity, if any.'
        entity:
          type: string
          description: |-
            The entity holding the permission, in one of the following forms: 
            - user-userId 
            - user-email 
            - group-groupId 
            - group-email 
            - domain-domain 
            - project-team-projectId 
            - allUsers 
            - allAuthenticatedUsers Examples: 
            - The user liz@example.com would be user-liz@example.com. 
            - The group example@googlegroups.com would be group-example@googlegroups.com. 
            - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
          annotations:
            required:
              - storage.bucketAccessControls.insert
        entityId:
          type: string
          description: 'The ID for the entity, if any.'
        etag:
          type: string
          description: HTTP 1.1 Entity tag for the access-control entry.
        id:
          type: string
          description: The ID of the access-control entry.
        kind:
          type: string
          description: 'The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.'
          default: storage#bucketAccessControl
        projectTeam:
          type: object
          description: 'The project team associated with the entity, if any.'
          properties:
            projectNumber:
              type: string
              description: The project number.
            team:
              type: string
              description: The team.
        role:
          type: string
          description: The access permission for the entity.
          annotations:
            required:
              - storage.bucketAccessControls.insert
        selfLink:
          type: string
          description: The link to this access-control entry.
    BucketAccessControls:
      id: BucketAccessControls
      type: object
      description: An access-control list.
      properties:
        items:
          type: array
          description: The list of items.
          items:
            $ref: '#/components/schemas/BucketAccessControl'
        kind:
          type: string
          description: 'The kind of item this is. For lists of bucket access control entries, this is always storage#bucketAccessControls.'
          default: storage#bucketAccessControls
    Buckets:
      id: Buckets
      type: object
      description: A list of buckets.
      properties:
        items:
          type: array
          description: The list of items.
          items:
            $ref: '#/components/schemas/Bucket'
        kind:
          type: string
          description: 'The kind of item this is. For lists of buckets, this is always storage#buckets.'
          default: storage#buckets
        nextPageToken:
          type: string
          description: 'The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.'
    Channel:
      id: Channel
      type: object
      description: An notification channel used to watch for resource changes.
      properties:
        address:
          type: string
          description: The address where notifications are delivered for this channel.
        expiration:
          type: string
          description: 'Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.'
          format: int64
        id:
          type: string
          description: A UUID or similar unique string that identifies this channel.
        kind:
          type: string
          description: 'Identifies this as a notification channel used to watch for changes to a resource, which is "api#channel".'
          default: api#channel
        params:
          type: object
          description: Additional parameters controlling delivery channel behavior. Optional.
          additionalProperties:
            type: string
            description: Declares a new parameter by name.
        payload:
          type: boolean
          description: A Boolean value to indicate whether payload is wanted. Optional.
        resourceId:
          type: string
          description: An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.
        resourceUri:
          type: string
          description: A version-specific identifier for the watched resource.
        token:
          type: string
          description: An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.
        type:
          type: string
          description: The type of delivery mechanism used for this channel.
    ComposeRequest:
      id: ComposeRequest
      type: object
      description: A Compose request.
      properties:
        destination:
          $ref: '#/components/schemas/Object'
          description: Properties of the resulting object.
        kind:
          type: string
          description: The kind of item this is.
          default: storage#composeRequest
        sourceObjects:
          type: array
          description: The list of source objects that will be concatenated into a single object.
          items:
            type: object
            properties:
              generation:
                type: string
                description: The generation of this object to use as the source.
                format: int64
              name:
                type: string
                description: The source object's name. All source objects must reside in the same bucket.
                annotations:
                  required:
                    - storage.objects.compose
              objectPreconditions:
                type: object
                description: Conditions that must be met for this operation to execute.
                properties:
                  ifGenerationMatch:
                    type: string
                    description: 'Only perform the composition if the generation of the source object that would be used matches this value. If this value and a generation are both specified, they must be the same value or the call will fail.'
                    format: int64
          annotations:
            required:
              - storage.objects.compose
    Expr:
      id: Expr
      type: object
      description: 'Represents an expression text. Example: title: "User account presence" description: "Determines whether the request has a user account" expression: "size(request.user) > 0"'
      properties:
        description:
          type: string
          description: 'An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
        expression:
          type: string
          description: Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported.
        location:
          type: string
          description: 'An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
        title:
          type: string
          description: 'An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
    HmacKey:
      id: HmacKey
      type: object
      description: JSON template to produce a JSON-style HMAC Key resource for Create responses.
      properties:
        kind:
          type: string
          description: 'The kind of item this is. For HMAC keys, this is always storage#hmacKey.'
          default: storage#hmacKey
        metadata:
          $ref: '#/components/schemas/HmacKeyMetadata'
          description: Key metadata.
        secret:
          type: string
          description: HMAC secret key material.
    HmacKeyMetadata:
      id: HmacKeyMetadata
      type: object
      description: JSON template to produce a JSON-style HMAC Key metadata resource.
      properties:
        accessId:
          type: string
          description: The ID of the HMAC Key.
        etag:
          type: string
          description: HTTP 1.1 Entity tag for the HMAC key.
        id:
          type: string
          description: 'The ID of the HMAC key, including the Project ID and the Access ID.'
        kind:
          type: string
          description: 'The kind of item this is. For HMAC Key metadata, this is always storage#hmacKeyMetadata.'
          default: storage#hmacKeyMetadata
        projectId:
          type: string
          description: Project ID owning the service account to which the key authenticates.
        selfLink:
          type: string
          description: The link to this resource.
        serviceAccountEmail:
          type: string
          description: The email address of the key's associated service account.
        state:
          type: string
          description: 'The state of the key. Can be one of ACTIVE, INACTIVE, or DELETED.'
        timeCreated:
          type: string
          description: The creation time of the HMAC key in RFC 3339 format.
          format: date-time
        updated:
          type: string
          description: The last modification time of the HMAC key metadata in RFC 3339 format.
          format: date-time
    HmacKeysMetadata:
      id: HmacKeysMetadata
      type: object
      description: A list of hmacKeys.
      properties:
        items:
          type: array
          description: The list of items.
          items:
            $ref: '#/components/schemas/HmacKeyMetadata'
        kind:
          type: string
          description: 'The kind of item this is. For lists of hmacKeys, this is always storage#hmacKeysMetadata.'
          default: storage#hmacKeysMetadata
        nextPageToken:
          type: string
          description: 'The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.'
    Notification:
      id: Notification
      type: object
      description: A subscription to receive Google PubSub notifications.
      properties:
        custom_attributes:
          type: object
          description: An optional list of additional attributes to attach to each Cloud PubSub message published for this notification subscription.
          additionalProperties:
            type: string
        etag:
          type: string
          description: HTTP 1.1 Entity tag for this subscription notification.
        event_types:
          type: array
          description: 'If present, only send notifications about listed event types. If empty, sent notifications for all event types.'
          items:
            type: string
        id:
          type: string
          description: The ID of the notification.
        kind:
          type: string
          description: 'The kind of item this is. For notifications, this is always storage#notification.'
          default: storage#notification
        object_name_prefix:
          type: string
          description: 'If present, only apply this notification configuration to object names that begin with this prefix.'
        payload_format:
          type: string
          description: The desired content of the Payload.
          default: JSON_API_V1
          annotations:
            required:
              - storage.notifications.insert
        selfLink:
          type: string
          description: The canonical URL of this notification.
        topic:
          type: string
          description: 'The Cloud PubSub topic to which this subscription publishes. Formatted as: ''//pubsub.googleapis.com/projects/{project-identifier}/topics/{my-topic}'''
          annotations:
            required:
              - storage.notifications.insert
    Notifications:
      id: Notifications
      type: object
      description: A list of notification subscriptions.
      properties:
        items:
          type: array
          description: The list of items.
          items:
            $ref: '#/components/schemas/Notification'
        kind:
          type: string
          description: 'The kind of item this is. For lists of notifications, this is always storage#notifications.'
          default: storage#notifications
    Object:
      id: Object
      type: object
      description: An object.
      properties:
        acl:
          type: array
          description: Access controls on the object.
          items:
            $ref: '#/components/schemas/ObjectAccessControl'
          annotations:
            required:
              - storage.objects.update
        bucket:
          type: string
          description: The name of the bucket containing this object.
        cacheControl:
          type: string
          description: 'Cache-Control directive for the object data. If omitted, and the object is accessible to all anonymous users, the default will be public, max-age=3600.'
        componentCount:
          type: integer
          description: Number of underlying components that make up this object. Components are accumulated by compose operations.
          format: int32
        contentDisposition:
          type: string
          description: Content-Disposition of the object data.
        contentEncoding:
          type: string
          description: Content-Encoding of the object data.
        contentLanguage:
          type: string
          description: Content-Language of the object data.
        contentType:
          type: string
          description: 'Content-Type of the object data. If an object is stored without a Content-Type, it is served as application/octet-stream.'
        crc32c:
          type: string
          description: 'CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order. For more information about using the CRC32c checksum, see Hashes and ETags: Best Practices.'
        customTime:
          type: string
          description: A timestamp in RFC 3339 format specified by the user for an object.
          format: date-time
        customerEncryption:
          type: object
          description: 'Metadata of customer-supplied encryption key, if the object is encrypted by such a key.'
          properties:
            encryptionAlgorithm:
              type: string
              description: The encryption algorithm.
            keySha256:
              type: string
              description: SHA256 hash value of the encryption key.
        etag:
          type: string
          description: HTTP 1.1 Entity tag for the object.
        eventBasedHold:
          type: boolean
          description: 'Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold''s release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is the loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false.'
        generation:
          type: string
          description: The content generation of this object. Used for object versioning.
          format: int64
        id:
          type: string
          description: 'The ID of the object, including the bucket name, object name, and generation number.'
        kind:
          type: string
          description: 'The kind of item this is. For objects, this is always storage#object.'
          default: storage#object
        kmsKeyName:
          type: string
          description: Not currently supported. Specifying the parameter causes the request to fail with status code 400 - Bad Request.
        md5Hash:
          type: string
          description: 'MD5 hash of the data; encoded using base64. For more information about using the MD5 hash, see Hashes and ETags: Best Practices.'
        mediaLink:
          type: string
          description: Media download link.
        metadata:
          type: object
          description: 'User-provided metadata, in key/value pairs.'
          additionalProperties:
            type: string
            description: An individual metadata entry.
        metageneration:
          type: string
          description: The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object.
          format: int64
        name:
          type: string
          description: The name of the object. Required if not specified by URL parameter.
        owner:
          type: object
          description: The owner of the object. This will always be the uploader of the object.
          properties:
            entity:
              type: string
              description: 'The entity, in the form user-userId.'
            entityId:
              type: string
              description: The ID for the entity.
        retentionExpirationTime:
          type: string
          description: 'A server-determined value that specifies the earliest time that the object''s retention period expires. This value is in RFC 3339 format. Note 1: This field is not provided for objects with an active event-based hold, since retention expiration is unknown until the hold is removed. Note 2: This value can be provided even when temporary hold is set (so that the user can reason about policy without having to first unset the temporary hold).'
          format: date-time
        selfLink:
          type: string
          description: The link to this object.
        size:
          type: string
          description: Content-Length of the data in bytes.
          format: uint64
        storageClass:
          type: string
          description: Storage class of the object.
        temporaryHold:
          type: boolean
          description: 'Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites. A common use case of this flag is regulatory investigations where objects need to be retained while the investigation is ongoing. Note that unlike event-based hold, temporary hold does not impact retention expiration time of an object.'
        timeCreated:
          type: string
          description: The creation time of the object in RFC 3339 format.
          format: date-time
        timeDeleted:
          type: string
          description: The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.
          format: date-time
        timeStorageClassUpdated:
          type: string
          description: 'The time at which the object''s storage class was last changed. When the object is initially created, it will be set to timeCreated.'
          format: date-time
        updated:
          type: string
          description: 'The modification time of the object metadata in RFC 3339 format. Set initially to object creation time and then updated whenever any metadata of the object changes. This includes changes made by a requester, such as modifying custom metadata, as well as changes made by Cloud Storage on behalf of a requester, such as changing the storage class based on an Object Lifecycle Configuration.'
          format: date-time
    ObjectAccessControl:
      id: ObjectAccessControl
      type: object
      description: An access-control entry.
      properties:
        bucket:
          type: string
          description: The name of the bucket.
        domain:
          type: string
          description: 'The domain associated with the entity, if any.'
        email:
          type: string
          description: 'The email address associated with the entity, if any.'
        entity:
          type: string
          description: |-
            The entity holding the permission, in one of the following forms: 
            - user-userId 
            - user-email 
            - group-groupId 
            - group-email 
            - domain-domain 
            - project-team-projectId 
            - allUsers 
            - allAuthenticatedUsers Examples: 
            - The user liz@example.com would be user-liz@example.com. 
            - The group example@googlegroups.com would be group-example@googlegroups.com. 
            - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
          annotations:
            required:
              - storage.defaultObjectAccessControls.insert
              - storage.objectAccessControls.insert
        entityId:
          type: string
          description: 'The ID for the entity, if any.'
        etag:
          type: string
          description: HTTP 1.1 Entity tag for the access-control entry.
        generation:
          type: string
          description: 'The content generation of the object, if applied to an object.'
          format: int64
        id:
          type: string
          description: The ID of the access-control entry.
        kind:
          type: string
          description: 'The kind of item this is. For object access control entries, this is always storage#objectAccessControl.'
          default: storage#objectAccessControl
        object:
          type: string
          description: 'The name of the object, if applied to an object.'
        projectTeam:
          type: object
          description: 'The project team associated with the entity, if any.'
          properties:
            projectNumber:
              type: string
              description: The project number.
            team:
              type: string
              description: The team.
        role:
          type: string
          description: The access permission for the entity.
          annotations:
            required:
              - storage.defaultObjectAccessControls.insert
              - storage.objectAccessControls.insert
        selfLink:
          type: string
          description: The link to this access-control entry.
    ObjectAccessControls:
      id: ObjectAccessControls
      type: object
      description: An access-control list.
      properties:
        items:
          type: array
          description: The list of items.
          items:
            $ref: '#/components/schemas/ObjectAccessControl'
        kind:
          type: string
          description: 'The kind of item this is. For lists of object access control entries, this is always storage#objectAccessControls.'
          default: storage#objectAccessControls
    Objects:
      id: Objects
      type: object
      description: A list of objects.
      properties:
        items:
          type: array
          description: The list of items.
          items:
            $ref: '#/components/schemas/Object'
        kind:
          type: string
          description: 'The kind of item this is. For lists of objects, this is always storage#objects.'
          default: storage#objects
        nextPageToken:
          type: string
          description: 'The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.'
        prefixes:
          type: array
          description: The list of prefixes of objects matching-but-not-listed up to and including the requested delimiter.
          items:
            type: string
    Policy:
      id: Policy
      type: object
      description: A bucket/object IAM policy.
      properties:
        bindings:
          type: array
          description: 'An association between a role, which comes with a set of permissions, and members who may assume that role.'
          items:
            type: object
            properties:
              condition:
                $ref: '#/components/schemas/Expr'
                description: 'The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently.'
              members:
                type: array
                description: |-
                  A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:  
                  - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.  
                  - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.  
                  - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.  
                  - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .  
                  - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.  
                  - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.  
                  - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project  
                  - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project  
                  - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project
                items:
                  type: string
                annotations:
                  required:
                    - storage.buckets.setIamPolicy
                    - storage.objects.setIamPolicy
              role:
                type: string
                description: |-
                  The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.
                  The new IAM roles are:  
                  - roles/storage.admin — Full control of Google Cloud Storage resources.  
                  - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.  
                  - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.  
                  - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:  
                  - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.  
                  - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.  
                  - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.  
                  - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.  
                  - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role.
                annotations:
                  required:
                    - storage.buckets.setIamPolicy
                    - storage.objects.setIamPolicy
          annotations:
            required:
              - storage.buckets.setIamPolicy
              - storage.objects.setIamPolicy
        etag:
          type: string
          description: HTTP 1.1  Entity tag for the policy.
          format: byte
        kind:
          type: string
          description: 'The kind of item this is. For policies, this is always storage#policy. This field is ignored on input.'
          default: storage#policy
        resourceId:
          type: string
          description: 'The ID of the resource to which this policy belongs. Will be of the form projects/_/buckets/bucket for buckets, and projects/_/buckets/bucket/objects/object for objects. A specific generation may be specified by appending #generationNumber to the end of the object name, e.g. projects/_/buckets/my-bucket/objects/data.txt#17. The current generation can be denoted with #0. This field is ignored on input.'
        version:
          type: integer
          description: The IAM policy format version.
          format: int32
    RewriteResponse:
      id: RewriteResponse
      type: object
      description: A rewrite response.
      properties:
        done:
          type: boolean
          description: 'true if the copy is finished; otherwise, false if the copy is in progress. This property is always present in the response.'
        kind:
          type: string
          description: The kind of item this is.
          default: storage#rewriteResponse
        objectSize:
          type: string
          description: The total size of the object being copied in bytes. This property is always present in the response.
          format: int64
        resource:
          $ref: '#/components/schemas/Object'
          description: A resource containing the metadata for the copied-to object. This property is present in the response only when copying completes.
        rewriteToken:
          type: string
          description: A token to use in subsequent requests to continue copying data. This token is present in the response only when there is more data to copy.
        totalBytesRewritten:
          type: string
          description: 'The total bytes written so far, which can be used to provide a waiting user with a progress indicator. This property is always present in the response.'
          format: int64
    ServiceAccount:
      id: ServiceAccount
      type: object
      description: A subscription to receive Google PubSub notifications.
      properties:
        email_address:
          type: string
          description: The ID of the notification.
        kind:
          type: string
          description: 'The kind of item this is. For notifications, this is always storage#notification.'
          default: storage#serviceAccount
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      type: object
      description: A storage.(buckets|objects).testIamPermissions response.
      properties:
        kind:
          type: string
          description: The kind of item this is.
          default: storage#testIamPermissionsResponse
        permissions:
          type: array
          description: |-
            The permissions held by the caller. Permissions are always of the format storage.resource.capability, where resource is one of buckets or objects. The supported permissions are as follows:  
            - storage.buckets.delete — Delete bucket.  
            - storage.buckets.get — Read bucket metadata.  
            - storage.buckets.getIamPolicy — Read bucket IAM policy.  
            - storage.buckets.create — Create bucket.  
            - storage.buckets.list — List buckets.  
            - storage.buckets.setIamPolicy — Update bucket IAM policy.  
            - storage.buckets.update — Update bucket metadata.  
            - storage.objects.delete — Delete object.  
            - storage.objects.get — Read object data and metadata.  
            - storage.objects.getIamPolicy — Read object IAM policy.  
            - storage.objects.create — Create object.  
            - storage.objects.list — List objects.  
            - storage.objects.setIamPolicy — Update object IAM policy.  
            - storage.objects.update — Update object metadata.
          items:
            type: string
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
    uploadType:
      description: 'Upload protocol for media (e.g. "media", "multipart", "resumable").'
      in: query
      name: uploadType
      schema:
        type: string
  x-stackQL-resources:
    bucket_access_controls:
      id: google.storage.bucket_access_controls
      name: bucket_access_controls
      title: Bucket Access Controls
      methods:
        delete:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1acl~1{entity}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1acl~1{entity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1acl~1{entity}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1acl~1{entity}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1acl/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1acl/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bucket_access_controls/methods/get'
          - $ref: '#/components/x-stackQL-resources/bucket_access_controls/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/bucket_access_controls/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/bucket_access_controls/methods/delete'
    buckets:
      id: google.storage.buckets
      name: buckets
      title: Buckets
      methods:
        delete:
          operation:
            $ref: '#/paths/~1b~1{bucket}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get:
          operation:
            $ref: '#/paths/~1b~1{bucket}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1b~1{bucket}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1b~1{bucket}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1b/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1b/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
        _list:
          operation:
            $ref: '#/paths/~1b/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        lock_retention_policy:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1lockRetentionPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/buckets/methods/get'
          - $ref: '#/components/x-stackQL-resources/buckets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/buckets/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/buckets/methods/delete'
    buckets_iam_policies:
      id: google.storage.buckets_iam_policies
      name: buckets_iam_policies
      title: Buckets Iam Policies
      methods:
        get_iam_policy:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1iam/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1iam/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1iam/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1iam~1testPermissions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/buckets_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    channels:
      id: google.storage.channels
      name: channels
      title: Channels
      methods:
        stop:
          operation:
            $ref: '#/paths/~1channels~1stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    default_object_access_controls:
      id: google.storage.default_object_access_controls
      name: default_object_access_controls
      title: Default Object Access Controls
      methods:
        delete:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1defaultObjectAcl~1{entity}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1defaultObjectAcl~1{entity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1defaultObjectAcl~1{entity}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1defaultObjectAcl~1{entity}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1defaultObjectAcl/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1defaultObjectAcl/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/default_object_access_controls/methods/get'
          - $ref: '#/components/x-stackQL-resources/default_object_access_controls/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/default_object_access_controls/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/default_object_access_controls/methods/delete'
    notifications:
      id: google.storage.notifications
      name: notifications
      title: Notifications
      methods:
        delete:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1notificationConfigs~1{notification}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1notificationConfigs~1{notification}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1notificationConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1notificationConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/notifications/methods/get'
          - $ref: '#/components/x-stackQL-resources/notifications/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/notifications/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/notifications/methods/delete'
    object_access_controls:
      id: google.storage.object_access_controls
      name: object_access_controls
      title: Object Access Controls
      methods:
        delete:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1o~1{object}~1acl~1{entity}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1o~1{object}~1acl~1{entity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1o~1{object}~1acl~1{entity}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1o~1{object}~1acl~1{entity}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1o~1{object}~1acl/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1o~1{object}~1acl/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/object_access_controls/methods/get'
          - $ref: '#/components/x-stackQL-resources/object_access_controls/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/object_access_controls/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/object_access_controls/methods/delete'
    objects:
      id: google.storage.objects
      name: objects
      title: Objects
      methods:
        compose:
          operation:
            $ref: '#/paths/~1b~1{destinationBucket}~1o~1{destinationObject}~1compose/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        copy:
          operation:
            $ref: '#/paths/~1b~1{sourceBucket}~1o~1{sourceObject}~1copyTo~1b~1{destinationBucket}~1o~1{destinationObject}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1o~1{object}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1o~1{object}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1o~1{object}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1o~1{object}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1o/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1o/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
        _list:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1o/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rewrite:
          operation:
            $ref: '#/paths/~1b~1{sourceBucket}~1o~1{sourceObject}~1rewriteTo~1b~1{destinationBucket}~1o~1{destinationObject}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        watch_all:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1o~1watch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/objects/methods/get'
          - $ref: '#/components/x-stackQL-resources/objects/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/objects/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/objects/methods/delete'
    objects_iam_policies:
      id: google.storage.objects_iam_policies
      name: objects_iam_policies
      title: Objects Iam Policies
      methods:
        get_iam_policy:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1o~1{object}~1iam/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1o~1{object}~1iam/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1o~1{object}~1iam/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1b~1{bucket}~1o~1{object}~1iam~1testPermissions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/objects_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    hmac_keys:
      id: google.storage.hmac_keys
      name: hmac_keys
      title: Hmac Keys
      methods:
        create:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1hmacKeys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1hmacKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
        _list:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1hmacKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1hmacKeys~1{accessId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1hmacKeys~1{accessId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1hmacKeys~1{accessId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hmac_keys/methods/get'
          - $ref: '#/components/x-stackQL-resources/hmac_keys/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/hmac_keys/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/hmac_keys/methods/delete'
    service_account:
      id: google.storage.service_account
      name: service_account
      title: Service Account
      methods:
        get:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1serviceAccount/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_account/methods/get'
        insert: []
        update: []
        delete: []
paths:
  '/b/{bucket}/acl/{entity}':
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
      - $ref: '#/components/parameters/uploadType'
    delete:
      description: Permanently deletes the ACL entry for the specified entity on the specified bucket.
      operationId: storage.bucketAccessControls.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '204':
          description: No Content
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: entity
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: bucket_access_controls
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Returns the ACL entry for the specified entity on the specified bucket.
      operationId: storage.bucketAccessControls.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketAccessControl'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: entity
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: bucket_access_controls
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Patches an ACL entry on the specified bucket.
      operationId: storage.bucketAccessControls.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BucketAccessControl'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketAccessControl'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: entity
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: bucket_access_controls
      x-stackQL-method: patch
      x-stackQL-verb: exec
    put:
      description: Updates an ACL entry on the specified bucket.
      operationId: storage.bucketAccessControls.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BucketAccessControl'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketAccessControl'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: entity
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: bucket_access_controls
      x-stackQL-method: update
      x-stackQL-verb: exec
  '/b/{bucket}/acl':
    parameters: *ref_1
    post:
      description: Creates a new ACL entry on the specified bucket.
      operationId: storage.bucketAccessControls.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BucketAccessControl'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketAccessControl'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: bucket_access_controls
      x-stackQL-method: insert
      x-stackQL-verb: insert
    get:
      description: Retrieves ACL entries on the specified bucket.
      operationId: storage.bucketAccessControls.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketAccessControls'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: bucket_access_controls
      x-stackQL-method: list
      x-stackQL-verb: select
  '/b/{bucket}':
    parameters: *ref_1
    delete:
      description: Permanently deletes an empty bucket.
      operationId: storage.buckets.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '204':
          description: No Content
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: buckets
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Returns metadata for the specified bucket.
      operationId: storage.buckets.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: buckets
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: 'Patches a bucket. Changes to the bucket will be readable immediately after writing, but configuration changes may take time to propagate.'
      operationId: storage.buckets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bucket'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - in: query
          name: predefinedAcl
          schema:
            type: string
        - in: query
          name: predefinedDefaultObjectAcl
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: buckets
      x-stackQL-method: patch
      x-stackQL-verb: exec
    put:
      description: 'Updates a bucket. Changes to the bucket will be readable immediately after writing, but configuration changes may take time to propagate.'
      operationId: storage.buckets.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bucket'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - in: query
          name: predefinedAcl
          schema:
            type: string
        - in: query
          name: predefinedDefaultObjectAcl
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: buckets
      x-stackQL-method: update
      x-stackQL-verb: exec
  '/b/{bucket}/iam':
    parameters: *ref_1
    get:
      description: Returns an IAM policy for the specified bucket.
      operationId: storage.buckets.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: query
          name: optionsRequestedPolicyVersion
          schema:
            type: integer
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: buckets_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
    put:
      description: Updates an IAM policy for the specified bucket.
      operationId: storage.buckets.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: buckets_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  /b:
    parameters: *ref_1
    post:
      description: Creates a new bucket.
      operationId: storage.buckets.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bucket'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
      parameters:
        - in: query
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: predefinedAcl
          schema:
            type: string
        - in: query
          name: predefinedDefaultObjectAcl
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: buckets
      x-stackQL-method: insert
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of buckets for a given project.
      operationId: storage.buckets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buckets'
      parameters:
        - in: query
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: prefix
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: buckets
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.items
  '/b/{bucket}/lockRetentionPolicy':
    parameters: *ref_1
    post:
      description: Locks retention policy on a bucket.
      operationId: storage.buckets.lockRetentionPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: query
          name: ifMetagenerationMatch
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: buckets
      x-stackQL-method: lock_retention_policy
      x-stackQL-verb: exec
  '/b/{bucket}/iam/testPermissions':
    parameters: *ref_1
    get:
      description: 'Tests a set of permissions on the given bucket to see which, if any, are held by the caller.'
      operationId: storage.buckets.testIamPermissions
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: query
          name: permissions
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: buckets_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  /channels/stop:
    parameters: *ref_1
    post:
      description: Stop watching resources through this channel
      operationId: storage.channels.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '204':
          description: No Content
      x-stackQL-resource: channels
      x-stackQL-method: stop
      x-stackQL-verb: exec
  '/b/{bucket}/defaultObjectAcl/{entity}':
    parameters: *ref_1
    delete:
      description: Permanently deletes the default object ACL entry for the specified entity on the specified bucket.
      operationId: storage.defaultObjectAccessControls.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '204':
          description: No Content
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: entity
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: default_object_access_controls
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Returns the default object ACL entry for the specified entity on the specified bucket.
      operationId: storage.defaultObjectAccessControls.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectAccessControl'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: entity
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: default_object_access_controls
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Patches a default object ACL entry on the specified bucket.
      operationId: storage.defaultObjectAccessControls.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectAccessControl'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectAccessControl'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: entity
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: default_object_access_controls
      x-stackQL-method: patch
      x-stackQL-verb: exec
    put:
      description: Updates a default object ACL entry on the specified bucket.
      operationId: storage.defaultObjectAccessControls.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectAccessControl'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectAccessControl'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: entity
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: default_object_access_controls
      x-stackQL-method: update
      x-stackQL-verb: exec
  '/b/{bucket}/defaultObjectAcl':
    parameters: *ref_1
    post:
      description: Creates a new default object ACL entry on the specified bucket.
      operationId: storage.defaultObjectAccessControls.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectAccessControl'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectAccessControl'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: default_object_access_controls
      x-stackQL-method: insert
      x-stackQL-verb: insert
    get:
      description: Retrieves default object ACL entries on the specified bucket.
      operationId: storage.defaultObjectAccessControls.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectAccessControls'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: default_object_access_controls
      x-stackQL-method: list
      x-stackQL-verb: select
  '/b/{bucket}/notificationConfigs/{notification}':
    parameters: *ref_1
    delete:
      description: Permanently deletes a notification subscription.
      operationId: storage.notifications.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '204':
          description: No Content
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: notification
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: notifications
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: View a notification configuration.
      operationId: storage.notifications.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: notification
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: notifications
      x-stackQL-method: get
      x-stackQL-verb: select
  '/b/{bucket}/notificationConfigs':
    parameters: *ref_1
    post:
      description: Creates a notification subscription for a given bucket.
      operationId: storage.notifications.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: notifications
      x-stackQL-method: insert
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of notification subscriptions for a given bucket.
      operationId: storage.notifications.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notifications'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: notifications
      x-stackQL-method: list
      x-stackQL-verb: select
  '/b/{bucket}/o/{object}/acl/{entity}':
    parameters: *ref_1
    delete:
      description: Permanently deletes the ACL entry for the specified entity on the specified object.
      operationId: storage.objectAccessControls.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '204':
          description: No Content
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: object
          required: true
          schema:
            type: string
        - in: path
          name: entity
          required: true
          schema:
            type: string
        - in: query
          name: generation
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: object_access_controls
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Returns the ACL entry for the specified entity on the specified object.
      operationId: storage.objectAccessControls.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectAccessControl'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: object
          required: true
          schema:
            type: string
        - in: path
          name: entity
          required: true
          schema:
            type: string
        - in: query
          name: generation
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: object_access_controls
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Patches an ACL entry on the specified object.
      operationId: storage.objectAccessControls.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectAccessControl'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectAccessControl'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: object
          required: true
          schema:
            type: string
        - in: path
          name: entity
          required: true
          schema:
            type: string
        - in: query
          name: generation
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: object_access_controls
      x-stackQL-method: patch
      x-stackQL-verb: exec
    put:
      description: Updates an ACL entry on the specified object.
      operationId: storage.objectAccessControls.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectAccessControl'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectAccessControl'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: object
          required: true
          schema:
            type: string
        - in: path
          name: entity
          required: true
          schema:
            type: string
        - in: query
          name: generation
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: object_access_controls
      x-stackQL-method: update
      x-stackQL-verb: exec
  '/b/{bucket}/o/{object}/acl':
    parameters: *ref_1
    post:
      description: Creates a new ACL entry on the specified object.
      operationId: storage.objectAccessControls.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectAccessControl'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectAccessControl'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: object
          required: true
          schema:
            type: string
        - in: query
          name: generation
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: object_access_controls
      x-stackQL-method: insert
      x-stackQL-verb: insert
    get:
      description: Retrieves ACL entries on the specified object.
      operationId: storage.objectAccessControls.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectAccessControls'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: object
          required: true
          schema:
            type: string
        - in: query
          name: generation
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: object_access_controls
      x-stackQL-method: list
      x-stackQL-verb: select
  '/b/{destinationBucket}/o/{destinationObject}/compose':
    parameters: *ref_1
    post:
      description: Concatenates a list of existing objects into a new object in the same bucket.
      operationId: storage.objects.compose
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComposeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
      parameters:
        - in: path
          name: destinationBucket
          required: true
          schema:
            type: string
        - in: path
          name: destinationObject
          required: true
          schema:
            type: string
        - in: query
          name: destinationPredefinedAcl
          schema:
            type: string
        - in: query
          name: ifGenerationMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - in: query
          name: kmsKeyName
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: objects
      x-stackQL-method: compose
      x-stackQL-verb: exec
  '/b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject}':
    parameters: *ref_1
    post:
      description: Copies a source object to a destination object. Optionally overrides metadata.
      operationId: storage.objects.copy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Object'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
      parameters:
        - in: path
          name: sourceBucket
          required: true
          schema:
            type: string
        - in: path
          name: sourceObject
          required: true
          schema:
            type: string
        - in: path
          name: destinationBucket
          required: true
          schema:
            type: string
        - in: path
          name: destinationObject
          required: true
          schema:
            type: string
        - in: query
          name: destinationKmsKeyName
          schema:
            type: string
        - in: query
          name: destinationPredefinedAcl
          schema:
            type: string
        - in: query
          name: ifGenerationMatch
          schema:
            type: string
        - in: query
          name: ifGenerationNotMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - in: query
          name: ifSourceGenerationMatch
          schema:
            type: string
        - in: query
          name: ifSourceGenerationNotMatch
          schema:
            type: string
        - in: query
          name: ifSourceMetagenerationMatch
          schema:
            type: string
        - in: query
          name: ifSourceMetagenerationNotMatch
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: sourceGeneration
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: objects
      x-stackQL-method: copy
      x-stackQL-verb: exec
  '/b/{bucket}/o/{object}':
    parameters: *ref_1
    delete:
      description: 'Deletes an object and its metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.'
      operationId: storage.objects.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '204':
          description: No Content
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: object
          required: true
          schema:
            type: string
        - in: query
          name: generation
          schema:
            type: string
        - in: query
          name: ifGenerationMatch
          schema:
            type: string
        - in: query
          name: ifGenerationNotMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: objects
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Retrieves an object or its metadata.
      operationId: storage.objects.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: object
          required: true
          schema:
            type: string
        - in: query
          name: generation
          schema:
            type: string
        - in: query
          name: ifGenerationMatch
          schema:
            type: string
        - in: query
          name: ifGenerationNotMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: objects
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Patches an object's metadata.
      operationId: storage.objects.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Object'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: object
          required: true
          schema:
            type: string
        - in: query
          name: generation
          schema:
            type: string
        - in: query
          name: ifGenerationMatch
          schema:
            type: string
        - in: query
          name: ifGenerationNotMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - in: query
          name: predefinedAcl
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: objects
      x-stackQL-method: patch
      x-stackQL-verb: exec
    put:
      description: Updates an object's metadata.
      operationId: storage.objects.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Object'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: object
          required: true
          schema:
            type: string
        - in: query
          name: generation
          schema:
            type: string
        - in: query
          name: ifGenerationMatch
          schema:
            type: string
        - in: query
          name: ifGenerationNotMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - in: query
          name: predefinedAcl
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: objects
      x-stackQL-method: update
      x-stackQL-verb: exec
  '/b/{bucket}/o/{object}/iam':
    parameters: *ref_1
    get:
      description: Returns an IAM policy for the specified object.
      operationId: storage.objects.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: object
          required: true
          schema:
            type: string
        - in: query
          name: generation
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: objects_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
    put:
      description: Updates an IAM policy for the specified object.
      operationId: storage.objects.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: object
          required: true
          schema:
            type: string
        - in: query
          name: generation
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: objects_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/b/{bucket}/o':
    parameters: *ref_1
    post:
      description: Stores a new object and metadata.
      operationId: storage.objects.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Object'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: query
          name: contentEncoding
          schema:
            type: string
        - in: query
          name: ifGenerationMatch
          schema:
            type: string
        - in: query
          name: ifGenerationNotMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - in: query
          name: kmsKeyName
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: predefinedAcl
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: objects
      x-stackQL-method: insert
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of objects matching the criteria.
      operationId: storage.objects.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Objects'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: query
          name: delimiter
          schema:
            type: string
        - in: query
          name: endOffset
          schema:
            type: string
        - in: query
          name: includeTrailingDelimiter
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: prefix
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: startOffset
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
        - in: query
          name: versions
          schema:
            type: boolean
        - in: query
          name: matchGlob
          schema:
            type: string
      x-stackQL-resource: objects
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.items
  '/b/{sourceBucket}/o/{sourceObject}/rewriteTo/b/{destinationBucket}/o/{destinationObject}':
    parameters: *ref_1
    post:
      description: Rewrites a source object to a destination object. Optionally overrides metadata.
      operationId: storage.objects.rewrite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Object'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewriteResponse'
      parameters:
        - in: path
          name: sourceBucket
          required: true
          schema:
            type: string
        - in: path
          name: sourceObject
          required: true
          schema:
            type: string
        - in: path
          name: destinationBucket
          required: true
          schema:
            type: string
        - in: path
          name: destinationObject
          required: true
          schema:
            type: string
        - in: query
          name: destinationKmsKeyName
          schema:
            type: string
        - in: query
          name: destinationPredefinedAcl
          schema:
            type: string
        - in: query
          name: ifGenerationMatch
          schema:
            type: string
        - in: query
          name: ifGenerationNotMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - in: query
          name: ifSourceGenerationMatch
          schema:
            type: string
        - in: query
          name: ifSourceGenerationNotMatch
          schema:
            type: string
        - in: query
          name: ifSourceMetagenerationMatch
          schema:
            type: string
        - in: query
          name: ifSourceMetagenerationNotMatch
          schema:
            type: string
        - in: query
          name: maxBytesRewrittenPerCall
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: rewriteToken
          schema:
            type: string
        - in: query
          name: sourceGeneration
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: objects
      x-stackQL-method: rewrite
      x-stackQL-verb: exec
  '/b/{bucket}/o/{object}/iam/testPermissions':
    parameters: *ref_1
    get:
      description: 'Tests a set of permissions on the given object to see which, if any, are held by the caller.'
      operationId: storage.objects.testIamPermissions
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: path
          name: object
          required: true
          schema:
            type: string
        - in: query
          name: permissions
          required: true
          schema:
            type: string
        - in: query
          name: generation
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: objects_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/b/{bucket}/o/watch':
    parameters: *ref_1
    post:
      description: Watch for changes on all objects in a bucket.
      operationId: storage.objects.watchAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      parameters:
        - in: path
          name: bucket
          required: true
          schema:
            type: string
        - in: query
          name: delimiter
          schema:
            type: string
        - in: query
          name: endOffset
          schema:
            type: string
        - in: query
          name: includeTrailingDelimiter
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: prefix
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: startOffset
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
        - in: query
          name: versions
          schema:
            type: boolean
      x-stackQL-resource: objects
      x-stackQL-method: watch_all
      x-stackQL-verb: exec
  '/projects/{projectId}/hmacKeys':
    parameters: *ref_1
    post:
      description: Creates a new HMAC key for the specified service account.
      operationId: storage.projects.hmacKeys.create
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HmacKey'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: serviceAccountEmail
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: hmac_keys
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of HMAC keys matching the criteria.
      operationId: storage.projects.hmacKeys.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HmacKeysMetadata'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: serviceAccountEmail
          schema:
            type: string
        - in: query
          name: showDeletedKeys
          schema:
            type: boolean
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: hmac_keys
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.items
  '/projects/{projectId}/hmacKeys/{accessId}':
    parameters: *ref_1
    delete:
      description: Deletes an HMAC key.
      operationId: storage.projects.hmacKeys.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '204':
          description: No Content
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: accessId
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: hmac_keys
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Retrieves an HMAC key's metadata
      operationId: storage.projects.hmacKeys.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HmacKeyMetadata'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: accessId
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: hmac_keys
      x-stackQL-method: get
      x-stackQL-verb: select
    put:
      description: Updates the state of an HMAC key. See the HMAC Key resource descriptor for valid states.
      operationId: storage.projects.hmacKeys.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HmacKeyMetadata'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HmacKeyMetadata'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: accessId
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: hmac_keys
      x-stackQL-method: update
      x-stackQL-verb: exec
  '/projects/{projectId}/serviceAccount':
    parameters: *ref_1
    get:
      description: Get the email address of this project's Google Cloud Storage service account.
      operationId: storage.projects.serviceAccount.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: userProject
          schema:
            type: string
      x-stackQL-resource: service_account
      x-stackQL-method: get
      x-stackQL-verb: select
