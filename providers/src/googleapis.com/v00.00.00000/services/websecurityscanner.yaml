openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Web Security Scanner API
  description: Scans your Compute and App Engine apps for common web vulnerabilities.
  version: v1
  x-discovery-doc-revision: '20221218'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://cloud.google.com/security-command-center/docs/concepts-web-security-scanner-overview/
servers:
  - url: https://websecurityscanner.googleapis.com
components:
  schemas:
    Xxe:
      properties:
        payloadValue:
          type: string
          description: The XML string that triggered the XXE vulnerability. Non-payload values might be redacted.
        payloadLocation:
          enumDescriptions:
            - Unknown Location.
            - The XML payload replaced the complete request body.
          description: Location within the request where the payload was placed.
          enum:
            - LOCATION_UNSPECIFIED
            - COMPLETE_REQUEST_BODY
          type: string
      id: Xxe
      type: object
      description: Information reported for an XXE.
    GoogleAccount:
      id: GoogleAccount
      type: object
      properties:
        password:
          type: string
          description: Required. Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.
        username:
          type: string
          description: Required. The user name of the Google account.
      description: Describes authentication configuration that uses a Google account.
    OutdatedLibrary:
      properties:
        libraryName:
          description: The name of the outdated library.
          type: string
        learnMoreUrls:
          items:
            type: string
          description: URLs to learn more information about the vulnerabilities in the library.
          type: array
        version:
          description: The version number.
          type: string
      id: OutdatedLibrary
      description: Information reported for an outdated library.
      type: object
    ListScanConfigsResponse:
      id: ListScanConfigsResponse
      description: Response for the `ListScanConfigs` method.
      type: object
      properties:
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
        scanConfigs:
          type: array
          description: The list of ScanConfigs returned.
          items:
            $ref: '#/components/schemas/ScanConfig'
    ListFindingTypeStatsResponse:
      properties:
        findingTypeStats:
          items:
            $ref: '#/components/schemas/FindingTypeStats'
          description: The list of FindingTypeStats returned.
          type: array
      id: ListFindingTypeStatsResponse
      description: Response for the `ListFindingTypeStats` method.
      type: object
    Form:
      properties:
        actionUri:
          description: '! The URI where to send the form when it''s submitted.'
          type: string
        fields:
          items:
            type: string
          description: '! The names of form fields related to the vulnerability.'
          type: array
      description: '! Information about a vulnerability with an HTML.'
      type: object
      id: Form
    ScanRunErrorTrace:
      properties:
        mostCommonHttpErrorCode:
          description: Output only. If the scan encounters TOO_MANY_HTTP_ERRORS, this field indicates the most common HTTP error code, if such is available. For example, if this code is 404, the scan has encountered too many NOT_FOUND responses.
          format: int32
          type: integer
        code:
          enum:
            - CODE_UNSPECIFIED
            - INTERNAL_ERROR
            - SCAN_CONFIG_ISSUE
            - AUTHENTICATION_CONFIG_ISSUE
            - TIMED_OUT_WHILE_SCANNING
            - TOO_MANY_REDIRECTS
            - TOO_MANY_HTTP_ERRORS
          enumDescriptions:
            - Default value is never used.
            - Indicates that the scan run failed due to an internal server error.
            - Indicates a scan configuration error, usually due to outdated ScanConfig settings, such as starting_urls or the DNS configuration.
            - Indicates an authentication error, usually due to outdated ScanConfig authentication settings.
            - Indicates a scan operation timeout, usually caused by a very large site.
            - Indicates that a scan encountered excessive redirects, either to authentication or some other page outside of the scan scope.
            - Indicates that a scan encountered numerous errors from the web site pages. When available, most_common_http_error_code field indicates the most common HTTP error code encountered during the scan.
          type: string
          description: Output only. Indicates the error reason code.
        scanConfigError:
          $ref: '#/components/schemas/ScanConfigError'
          description: Output only. If the scan encounters SCAN_CONFIG_ISSUE error, this field has the error message encountered during scan configuration validation that is performed before each scan run.
      id: ScanRunErrorTrace
      description: Output only. Defines an error trace message for a ScanRun.
      type: object
    ListScanRunsResponse:
      id: ListScanRunsResponse
      properties:
        scanRuns:
          description: The list of ScanRuns returned.
          type: array
          items:
            $ref: '#/components/schemas/ScanRun'
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
      description: Response for the `ListScanRuns` method.
    StartScanRunRequest:
      type: object
      description: Request for the `StartScanRun` method.
      properties: {}
      id: StartScanRunRequest
    Authentication:
      type: object
      description: Scan authentication configuration.
      id: Authentication
      properties:
        iapCredential:
          $ref: '#/components/schemas/IapCredential'
          description: Authentication using Identity-Aware-Proxy (IAP).
        googleAccount:
          description: Authentication using a Google account.
          $ref: '#/components/schemas/GoogleAccount'
        customAccount:
          description: Authentication using a custom account.
          $ref: '#/components/schemas/CustomAccount'
    Empty:
      id: Empty
      properties: {}
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    Schedule:
      description: Scan schedule configuration.
      id: Schedule
      properties:
        scheduleTime:
          format: google-datetime
          description: A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
          type: string
        intervalDurationDays:
          description: Required. The duration of time between executions in days.
          format: int32
          type: integer
      type: object
    CustomAccount:
      properties:
        loginUrl:
          type: string
          description: Required. The login form URL of the website.
        username:
          description: Required. The user name of the custom account.
          type: string
        password:
          type: string
          description: Required. Input only. The password of the custom account. The credential is stored encrypted and not returned in any response nor included in audit logs.
      id: CustomAccount
      type: object
      description: Describes authentication configuration that uses a custom account.
    ScanRun:
      id: ScanRun
      properties:
        errorTrace:
          $ref: '#/components/schemas/ScanRunErrorTrace'
          description: Output only. If result_state is an ERROR, this field provides the primary reason for scan's termination and more details, if such are available.
        warningTraces:
          description: Output only. A list of warnings, if such are encountered during this scan run.
          type: array
          items:
            $ref: '#/components/schemas/ScanRunWarningTrace'
        endTime:
          description: Output only. The time at which the ScanRun reached termination state - that the ScanRun is either finished or stopped by user.
          format: google-datetime
          type: string
        progressPercent:
          type: integer
          format: int32
          description: Output only. The percentage of total completion ranging from 0 to 100. If the scan is in queue, the value is 0. If the scan is running, the value ranges from 0 to 100. If the scan is finished, the value is 100.
        hasVulnerabilities:
          description: Output only. Whether the scan run has found any vulnerabilities.
          type: boolean
        startTime:
          description: Output only. The time at which the ScanRun started.
          format: google-datetime
          type: string
        urlsCrawledCount:
          type: string
          format: int64
          description: Output only. The number of URLs crawled during this ScanRun. If the scan is in progress, the value represents the number of URLs crawled up to now.
        resultState:
          type: string
          enumDescriptions:
            - Default value. This value is returned when the ScanRun is not yet finished.
            - The scan finished without errors.
            - The scan finished with errors.
            - The scan was terminated by user.
          description: Output only. The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
          enum:
            - RESULT_STATE_UNSPECIFIED
            - SUCCESS
            - ERROR
            - KILLED
        executionState:
          enumDescriptions:
            - Represents an invalid state caused by internal server error. This value should never be returned.
            - The scan is waiting in the queue.
            - The scan is in progress.
            - The scan is either finished or stopped by user.
          enum:
            - EXECUTION_STATE_UNSPECIFIED
            - QUEUED
            - SCANNING
            - FINISHED
          type: string
          description: Output only. The execution state of the ScanRun.
        name:
          description: Output only. The resource name of the ScanRun. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'. The ScanRun IDs are generated by the system.
          type: string
        urlsTestedCount:
          description: Output only. The number of URLs tested during this ScanRun. If the scan is in progress, the value represents the number of URLs tested up to now. The number of URLs tested is usually larger than the number URLS crawled because typically a crawled URL is tested with multiple test payloads.
          format: int64
          type: string
      type: object
      description: 'A ScanRun is a output-only resource representing an actual run of the scan. Next id: 12'
    StopScanRunRequest:
      properties: {}
      id: StopScanRunRequest
      description: Request for the `StopScanRun` method.
      type: object
    ListCrawledUrlsResponse:
      id: ListCrawledUrlsResponse
      description: Response for the `ListCrawledUrls` method.
      type: object
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        crawledUrls:
          type: array
          description: The list of CrawledUrls returned.
          items:
            $ref: '#/components/schemas/CrawledUrl'
    ViolatingResource:
      description: Information regarding any resource causing the vulnerability such as JavaScript sources, image, audio files, etc.
      properties:
        resourceUrl:
          type: string
          description: URL of this violating resource.
        contentType:
          type: string
          description: The MIME type of this resource.
      type: object
      id: ViolatingResource
    Finding:
      description: A Finding resource represents a vulnerability instance identified during a ScanRun.
      properties:
        vulnerableParameters:
          description: Output only. An addon containing information about request parameters which were found to be vulnerable.
          $ref: '#/components/schemas/VulnerableParameters'
        description:
          description: Output only. The description of the vulnerability.
          type: string
        reproductionUrl:
          type: string
          description: Output only. The URL containing human-readable payload that user can leverage to reproduce the vulnerability.
        trackingId:
          description: Output only. The tracking ID uniquely identifies a vulnerability instance across multiple ScanRuns.
          type: string
        frameUrl:
          type: string
          description: Output only. If the vulnerability was originated from nested IFrame, the immediate parent IFrame is reported.
        httpMethod:
          description: Output only. The http method of the request that triggered the vulnerability, in uppercase.
          type: string
        outdatedLibrary:
          $ref: '#/components/schemas/OutdatedLibrary'
          description: Output only. An addon containing information about outdated libraries.
        severity:
          description: Output only. The severity level of the reported vulnerability.
          readOnly: true
          enum:
            - SEVERITY_UNSPECIFIED
            - CRITICAL
            - HIGH
            - MEDIUM
            - LOW
          enumDescriptions:
            - No severity specified. The default value.
            - Critical severity.
            - High severity.
            - Medium severity.
            - Low severity.
          type: string
        name:
          type: string
          description: Output only. The resource name of the Finding. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanruns/{scanRunId}/findings/{findingId}'. The finding IDs are generated by the system.
        finalUrl:
          type: string
          description: Output only. The URL where the browser lands when the vulnerability is detected.
        vulnerableHeaders:
          $ref: '#/components/schemas/VulnerableHeaders'
          description: Output only. An addon containing information about vulnerable or missing HTTP headers.
        form:
          description: Output only. An addon containing information reported for a vulnerability with an HTML form, if any.
          $ref: '#/components/schemas/Form'
        fuzzedUrl:
          type: string
          description: Output only. The URL produced by the server-side fuzzer and used in the request that triggered the vulnerability.
        xxe:
          description: Output only. An addon containing information reported for an XXE, if any.
          readOnly: true
          $ref: '#/components/schemas/Xxe'
        violatingResource:
          description: Output only. An addon containing detailed information regarding any resource causing the vulnerability such as JavaScript sources, image, audio files, etc.
          $ref: '#/components/schemas/ViolatingResource'
        findingType:
          type: string
          description: 'Output only. The type of the Finding. Detailed and up-to-date information on findings can be found here: https://cloud.google.com/security-command-center/docs/how-to-remediate-web-security-scanner-findings'
        xss:
          $ref: '#/components/schemas/Xss'
          description: Output only. An addon containing information reported for an XSS, if any.
        body:
          type: string
          description: Output only. The body of the request that triggered the vulnerability.
      type: object
      id: Finding
    VulnerableParameters:
      description: Information about vulnerable request parameters.
      properties:
        parameterNames:
          items:
            type: string
          type: array
          description: The vulnerable parameter names.
      id: VulnerableParameters
      type: object
    VulnerableHeaders:
      properties:
        headers:
          description: List of vulnerable headers.
          items:
            $ref: '#/components/schemas/Header'
          type: array
        missingHeaders:
          type: array
          items:
            $ref: '#/components/schemas/Header'
          description: List of missing headers.
      type: object
      description: Information about vulnerable or missing HTTP Headers.
      id: VulnerableHeaders
    ScanConfigError:
      description: Defines a custom error message used by CreateScanConfig and UpdateScanConfig APIs when scan configuration validation fails. It is also reported as part of a ScanRunErrorTrace message if scan validation fails due to a scan configuration error.
      id: ScanConfigError
      type: object
      properties:
        fieldName:
          type: string
          description: Output only. Indicates the full name of the ScanConfig field that triggers this error, for example "scan_config.max_qps". This field is provided for troubleshooting purposes only and its actual value can change in the future.
        code:
          enum:
            - CODE_UNSPECIFIED
            - OK
            - INTERNAL_ERROR
            - APPENGINE_API_BACKEND_ERROR
            - APPENGINE_API_NOT_ACCESSIBLE
            - APPENGINE_DEFAULT_HOST_MISSING
            - CANNOT_USE_GOOGLE_COM_ACCOUNT
            - CANNOT_USE_OWNER_ACCOUNT
            - COMPUTE_API_BACKEND_ERROR
            - COMPUTE_API_NOT_ACCESSIBLE
            - CUSTOM_LOGIN_URL_DOES_NOT_BELONG_TO_CURRENT_PROJECT
            - CUSTOM_LOGIN_URL_MALFORMED
            - CUSTOM_LOGIN_URL_MAPPED_TO_NON_ROUTABLE_ADDRESS
            - CUSTOM_LOGIN_URL_MAPPED_TO_UNRESERVED_ADDRESS
            - CUSTOM_LOGIN_URL_HAS_NON_ROUTABLE_IP_ADDRESS
            - CUSTOM_LOGIN_URL_HAS_UNRESERVED_IP_ADDRESS
            - DUPLICATE_SCAN_NAME
            - INVALID_FIELD_VALUE
            - FAILED_TO_AUTHENTICATE_TO_TARGET
            - FINDING_TYPE_UNSPECIFIED
            - FORBIDDEN_TO_SCAN_COMPUTE
            - FORBIDDEN_UPDATE_TO_MANAGED_SCAN
            - MALFORMED_FILTER
            - MALFORMED_RESOURCE_NAME
            - PROJECT_INACTIVE
            - REQUIRED_FIELD
            - RESOURCE_NAME_INCONSISTENT
            - SCAN_ALREADY_RUNNING
            - SCAN_NOT_RUNNING
            - SEED_URL_DOES_NOT_BELONG_TO_CURRENT_PROJECT
            - SEED_URL_MALFORMED
            - SEED_URL_MAPPED_TO_NON_ROUTABLE_ADDRESS
            - SEED_URL_MAPPED_TO_UNRESERVED_ADDRESS
            - SEED_URL_HAS_NON_ROUTABLE_IP_ADDRESS
            - SEED_URL_HAS_UNRESERVED_IP_ADDRESS
            - SERVICE_ACCOUNT_NOT_CONFIGURED
            - TOO_MANY_SCANS
            - UNABLE_TO_RESOLVE_PROJECT_INFO
            - UNSUPPORTED_BLACKLIST_PATTERN_FORMAT
            - UNSUPPORTED_FILTER
            - UNSUPPORTED_FINDING_TYPE
            - UNSUPPORTED_URL_SCHEME
          enumDescriptions:
            - There is no error.
            - There is no error.
            - Indicates an internal server error. Please DO NOT USE THIS ERROR CODE unless the root cause is truly unknown.
            - One of the seed URLs is an App Engine URL but we cannot validate the scan settings due to an App Engine API backend error.
            - One of the seed URLs is an App Engine URL but we cannot access the App Engine API to validate scan settings.
            - One of the seed URLs is an App Engine URL but the Default Host of the App Engine is not set.
            - Google corporate accounts can not be used for scanning.
            - The account of the scan creator can not be used for scanning.
            - This scan targets Compute Engine, but we cannot validate scan settings due to a Compute Engine API backend error.
            - This scan targets Compute Engine, but we cannot access the Compute Engine API to validate the scan settings.
            - The Custom Login URL does not belong to the current project.
            - The Custom Login URL is malformed (can not be parsed).
            - The Custom Login URL is mapped to a non-routable IP address in DNS.
            - The Custom Login URL is mapped to an IP address which is not reserved for the current project.
            - The Custom Login URL has a non-routable IP address.
            - The Custom Login URL has an IP address which is not reserved for the current project.
            - Another scan with the same name (case-sensitive) already exists.
            - A field is set to an invalid value.
            - There was an error trying to authenticate to the scan target.
            - Finding type value is not specified in the list findings request.
            - Scan targets Compute Engine, yet current project was not whitelisted for Google Compute Engine Scanning Alpha access.
            - User tries to update managed scan
            - The supplied filter is malformed. For example, it can not be parsed, does not have a filter type in expression, or the same filter type appears more than once.
            - The supplied resource name is malformed (can not be parsed).
            - The current project is not in an active state.
            - A required field is not set.
            - Project id, scanconfig id, scanrun id, or finding id are not consistent with each other in resource name.
            - The scan being requested to start is already running.
            - The scan that was requested to be stopped is not running.
            - One of the seed URLs does not belong to the current project.
            - One of the seed URLs is malformed (can not be parsed).
            - One of the seed URLs is mapped to a non-routable IP address in DNS.
            - One of the seed URLs is mapped to an IP address which is not reserved for the current project.
            - One of the seed URLs has on-routable IP address.
            - One of the seed URLs has an IP address that is not reserved for the current project.
            - The Web Security Scanner service account is not configured under the project.
            - A project has reached the maximum number of scans.
            - Resolving the details of the current project fails.
            - One or more blacklist patterns were in the wrong format.
            - The supplied filter is not supported.
            - The supplied finding type is not supported. For example, we do not provide findings of the given finding type.
            - The URL scheme of one or more of the supplied URLs is not supported.
          description: Output only. Indicates the reason code for a configuration failure.
          type: string
    IapCredential:
      id: IapCredential
      properties:
        iapTestServiceAccountInfo:
          $ref: '#/components/schemas/IapTestServiceAccountInfo'
          description: Authentication configuration when Web-Security-Scanner service account is added in Identity-Aware-Proxy (IAP) access policies.
      type: object
      description: Describes authentication configuration for Identity-Aware-Proxy (IAP).
    ListFindingsResponse:
      type: object
      id: ListFindingsResponse
      properties:
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
        findings:
          items:
            $ref: '#/components/schemas/Finding'
          type: array
          description: The list of Findings returned.
      description: Response for the `ListFindings` method.
    ScanConfig:
      type: object
      description: A ScanConfig resource contains the configurations to launch a scan.
      properties:
        exportToSecurityCommandCenter:
          type: string
          enumDescriptions:
            - Use default, which is ENABLED.
            - Export results of this scan to Security Command Center.
            - Do not export results of this scan to Security Command Center.
          description: Controls export of scan configurations and results to Security Command Center.
          enum:
            - EXPORT_TO_SECURITY_COMMAND_CENTER_UNSPECIFIED
            - ENABLED
            - DISABLED
        ignoreHttpStatusErrors:
          description: Whether to keep scanning even if most requests return HTTP error codes.
          type: boolean
        userAgent:
          type: string
          description: The user agent used during scanning.
          enumDescriptions:
            - The user agent is unknown. Service will default to CHROME_LINUX.
            - Chrome on Linux. This is the service default if unspecified.
            - Chrome on Android.
            - Safari on IPhone.
          enum:
            - USER_AGENT_UNSPECIFIED
            - CHROME_LINUX
            - CHROME_ANDROID
            - SAFARI_IPHONE
        name:
          description: The resource name of the ScanConfig. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}'. The ScanConfig IDs are generated by the system.
          type: string
        displayName:
          description: Required. The user provided display name of the ScanConfig.
          type: string
        startingUrls:
          type: array
          description: Required. The starting URLs from which the scanner finds site pages.
          items:
            type: string
        riskLevel:
          type: string
          enum:
            - RISK_LEVEL_UNSPECIFIED
            - NORMAL
            - LOW
          description: The risk level selected for the scan
          enumDescriptions:
            - Use default, which is NORMAL.
            - Normal scanning (Recommended)
            - Lower impact scanning
        schedule:
          description: The schedule of the ScanConfig.
          $ref: '#/components/schemas/Schedule'
        staticIpScan:
          description: Whether the scan configuration has enabled static IP address scan feature. If enabled, the scanner will access applications from static IP addresses.
          type: boolean
        managedScan:
          type: boolean
          description: Whether the scan config is managed by Web Security Scanner, output only.
        maxQps:
          description: The maximum QPS during scanning. A valid value ranges from 5 to 20 inclusively. If the field is unspecified or its value is set 0, server will default to 15. Other values outside of [5, 20] range will be rejected with INVALID_ARGUMENT error.
          format: int32
          type: integer
        authentication:
          $ref: '#/components/schemas/Authentication'
          description: The authentication configuration. If specified, service will use the authentication configuration during scanning.
        blacklistPatterns:
          type: array
          items:
            type: string
          description: The excluded URL patterns as described in https://cloud.google.com/security-command-center/docs/how-to-use-web-security-scanner#excluding_urls
      id: ScanConfig
    IapTestServiceAccountInfo:
      properties:
        targetAudienceClientId:
          type: string
          description: Required. Describes OAuth2 client id of resources protected by Identity-Aware-Proxy (IAP).
      type: object
      description: Describes authentication configuration when Web-Security-Scanner service account is added in Identity-Aware-Proxy (IAP) access policies.
      id: IapTestServiceAccountInfo
    ScanRunWarningTrace:
      type: object
      properties:
        code:
          enum:
            - CODE_UNSPECIFIED
            - INSUFFICIENT_CRAWL_RESULTS
            - TOO_MANY_CRAWL_RESULTS
            - TOO_MANY_FUZZ_TASKS
            - BLOCKED_BY_IAP
            - NO_STARTING_URL_FOUND_FOR_MANAGED_SCAN
          description: Output only. Indicates the warning code.
          type: string
          enumDescriptions:
            - Default value is never used.
            - Indicates that a scan discovered an unexpectedly low number of URLs. This is sometimes caused by complex navigation features or by using a single URL for numerous pages.
            - Indicates that a scan discovered too many URLs to test, or excessive redundant URLs.
            - Indicates that too many tests have been generated for the scan. Customer should try reducing the number of starting URLs, increasing the QPS rate, or narrowing down the scope of the scan using the excluded patterns.
            - Indicates that a scan is blocked by IAP.
            - Indicates that no seeds is found for a scan
      id: ScanRunWarningTrace
      description: Output only. Defines a warning trace message for ScanRun. Warning traces provide customers with useful information that helps make the scanning process more effective.
    FindingTypeStats:
      properties:
        findingType:
          description: Output only. The finding type associated with the stats.
          type: string
        findingCount:
          description: Output only. The count of findings belonging to this finding type.
          format: int32
          type: integer
      id: FindingTypeStats
      type: object
      description: A FindingTypeStats resource represents stats regarding a specific FindingType of Findings under a given ScanRun.
    Header:
      id: Header
      properties:
        name:
          type: string
          description: Header name.
        value:
          type: string
          description: Header value.
      type: object
      description: Describes a HTTP Header.
    Xss:
      description: Information reported for an XSS.
      properties:
        stackTraces:
          description: Stack traces leading to the point where the XSS occurred.
          items:
            type: string
          type: array
        storedXssSeedingUrl:
          description: The reproduction url for the seeding POST request of a Stored XSS.
          type: string
        errorMessage:
          type: string
          description: An error message generated by a javascript breakage.
        attackVector:
          enum:
            - ATTACK_VECTOR_UNSPECIFIED
            - LOCAL_STORAGE
            - SESSION_STORAGE
            - WINDOW_NAME
            - REFERRER
            - FORM_INPUT
            - COOKIE
            - POST_MESSAGE
            - GET_PARAMETERS
            - URL_FRAGMENT
            - HTML_COMMENT
            - POST_PARAMETERS
            - PROTOCOL
            - STORED_XSS
            - SAME_ORIGIN
            - USER_CONTROLLABLE_URL
          description: The attack vector of the payload triggering this XSS.
          enumDescriptions:
            - Unknown attack vector.
            - The attack comes from fuzzing the browser's localStorage.
            - The attack comes from fuzzing the browser's sessionStorage.
            - The attack comes from fuzzing the window's name property.
            - The attack comes from fuzzing the referrer property.
            - The attack comes from fuzzing an input element.
            - The attack comes from fuzzing the browser's cookies.
            - The attack comes from hijacking the post messaging mechanism.
            - The attack comes from fuzzing parameters in the url.
            - The attack comes from fuzzing the fragment in the url.
            - The attack comes from fuzzing the HTML comments.
            - The attack comes from fuzzing the POST parameters.
            - The attack comes from fuzzing the protocol.
            - The attack comes from the server side and is stored.
            - The attack is a Same-Origin Method Execution attack via a GET parameter.
            - The attack payload is received from a third-party host via a URL that is user-controllable
          type: string
      type: object
      id: Xss
    CrawledUrl:
      id: CrawledUrl
      properties:
        body:
          description: Output only. The body of the request that was used to visit the URL.
          type: string
        httpMethod:
          description: Output only. The http method of the request that was used to visit the URL, in uppercase.
          type: string
        url:
          type: string
          description: Output only. The URL that was crawled.
      description: A CrawledUrl resource represents a URL that was crawled during a ScanRun. Web Security Scanner Service crawls the web applications, following all links within the scope of sites, to find the URLs to test against.
      type: object
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    scan_runs:
      id: google.websecurityscanner.scan_runs
      name: scan_runs
      title: Scan_runs
      methods:
        projects_scanConfigs_scanRuns_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1scanConfigs~1{scanConfigsId}~1scanRuns~1{scanRunsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_scanConfigs_scanRuns_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1scanConfigs~1{scanConfigsId}~1scanRuns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: scanRuns
        projects_scanConfigs_scanRuns_stop:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1scanConfigs~1{scanConfigsId}~1scanRuns~1{scanRunsId}:stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scan_runs/methods/projects_scanConfigs_scanRuns_get'
          - $ref: '#/components/x-stackQL-resources/scan_runs/methods/projects_scanConfigs_scanRuns_list'
        insert: []
        update: []
        delete: []
    findings:
      id: google.websecurityscanner.findings
      name: findings
      title: Findings
      methods:
        projects_scanConfigs_scanRuns_findings_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1scanConfigs~1{scanConfigsId}~1scanRuns~1{scanRunsId}~1findings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: findings
        projects_scanConfigs_scanRuns_findings_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1scanConfigs~1{scanConfigsId}~1scanRuns~1{scanRunsId}~1findings~1{findingsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/findings/methods/projects_scanConfigs_scanRuns_findings_get'
          - $ref: '#/components/x-stackQL-resources/findings/methods/projects_scanConfigs_scanRuns_findings_list'
        insert: []
        update: []
        delete: []
    crawled_urls:
      id: google.websecurityscanner.crawled_urls
      name: crawled_urls
      title: Crawled_urls
      methods:
        projects_scanConfigs_scanRuns_crawledUrls_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1scanConfigs~1{scanConfigsId}~1scanRuns~1{scanRunsId}~1crawledUrls/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: crawledUrls
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/crawled_urls/methods/projects_scanConfigs_scanRuns_crawledUrls_list'
        insert: []
        update: []
        delete: []
    finding_type_stats:
      id: google.websecurityscanner.finding_type_stats
      name: finding_type_stats
      title: Finding_type_stats
      methods:
        projects_scanConfigs_scanRuns_findingTypeStats_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1scanConfigs~1{scanConfigsId}~1scanRuns~1{scanRunsId}~1findingTypeStats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: findingTypeStats
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/finding_type_stats/methods/projects_scanConfigs_scanRuns_findingTypeStats_list'
        insert: []
        update: []
        delete: []
    scan_configs:
      id: google.websecurityscanner.scan_configs
      name: scan_configs
      title: Scan_configs
      methods:
        projects_scanConfigs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1scanConfigs~1{scanConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_scanConfigs_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1scanConfigs~1{scanConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_scanConfigs_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1scanConfigs~1{scanConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_scanConfigs_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1scanConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_scanConfigs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1scanConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: scanConfigs
        projects_scanConfigs_start:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1scanConfigs~1{scanConfigsId}:start/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scan_configs/methods/projects_scanConfigs_get'
          - $ref: '#/components/x-stackQL-resources/scan_configs/methods/projects_scanConfigs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/scan_configs/methods/projects_scanConfigs_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/scan_configs/methods/projects_scanConfigs_delete'
paths:
  /v1/projects/{projectsId}/scanConfigs/{scanConfigsId}/scanRuns/{scanRunsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
    get:
      description: Gets a ScanRun.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanRun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: scanRunsId
          required: true
          schema:
            type: string
      x-stackQL-resource: scan_runs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/scanConfigs/{scanConfigsId}/scanRuns:
    parameters: *ref_1
    get:
      description: Lists ScanRuns under a given ScanConfig, in descending order of ScanRun stop time.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScanRunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: scan_runs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/scanConfigs/{scanConfigsId}/scanRuns/{scanRunsId}:stop:
    parameters: *ref_1
    post:
      description: Stops a ScanRun. The stopped ScanRun is returned.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopScanRunRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanRun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: scanRunsId
          required: true
          schema:
            type: string
      x-stackQL-resource: scan_runs
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/scanConfigs/{scanConfigsId}/scanRuns/{scanRunsId}/findings:
    parameters: *ref_1
    get:
      description: List Findings under a given ScanRun.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.findings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFindingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: scanRunsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: select
  /v1/projects/{projectsId}/scanConfigs/{scanConfigsId}/scanRuns/{scanRunsId}/findings/{findingsId}:
    parameters: *ref_1
    get:
      description: Gets a Finding.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.findings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: scanRunsId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: select
  /v1/projects/{projectsId}/scanConfigs/{scanConfigsId}/scanRuns/{scanRunsId}/crawledUrls:
    parameters: *ref_1
    get:
      description: List CrawledUrls under a given ScanRun.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.crawledUrls.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCrawledUrlsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: scanRunsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: crawled_urls
      x-stackQL-verb: select
  /v1/projects/{projectsId}/scanConfigs/{scanConfigsId}/scanRuns/{scanRunsId}/findingTypeStats:
    parameters: *ref_1
    get:
      description: List all FindingTypeStats under a given ScanRun.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.findingTypeStats.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFindingTypeStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: scanRunsId
          required: true
          schema:
            type: string
      x-stackQL-resource: finding_type_stats
      x-stackQL-verb: select
  /v1/projects/{projectsId}/scanConfigs/{scanConfigsId}:
    parameters: *ref_1
    get:
      description: Gets a ScanConfig.
      operationId: websecurityscanner.projects.scanConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: scan_configs
      x-stackQL-verb: select
    patch:
      description: Updates a ScanConfig. This method support partial update of a ScanConfig.
      operationId: websecurityscanner.projects.scanConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: scan_configs
      x-stackQL-verb: exec
    delete:
      description: Deletes an existing ScanConfig and its child resources.
      operationId: websecurityscanner.projects.scanConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: scan_configs
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/scanConfigs:
    parameters: *ref_1
    post:
      description: Creates a new ScanConfig.
      operationId: websecurityscanner.projects.scanConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: scan_configs
      x-stackQL-verb: insert
    get:
      description: Lists ScanConfigs under a given project.
      operationId: websecurityscanner.projects.scanConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScanConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: scan_configs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/scanConfigs/{scanConfigsId}:start:
    parameters: *ref_1
    post:
      description: Start a ScanRun according to the given ScanConfig.
      operationId: websecurityscanner.projects.scanConfigs.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartScanRunRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanRun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: scan_configs
      x-stackQL-verb: exec
