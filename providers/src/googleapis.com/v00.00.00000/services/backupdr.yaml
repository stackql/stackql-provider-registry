openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Backup and DR Service API
  description: ''
  version: v1
  x-discovery-doc-revision: '20250825'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/backup-disaster-recovery
servers:
  - url: https://backupdr.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          type: string
          format: google-fieldmask
    Policy:
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
          format: byte
    Binding:
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
          items:
            type: string
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
    Expr:
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    AuditConfig:
      id: AuditConfig
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      type: object
      properties:
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
    AuditLogConfig:
      id: AuditLogConfig
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
      properties:
        logType:
          description: The log type that this config enables.
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
        exemptedMembers:
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          type: array
          items:
            type: string
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
          items:
            type: string
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    SubscribeTrialRequest:
      id: SubscribeTrialRequest
      description: Request message for subscribing to a trial.
      type: object
      properties: {}
    Trial:
      id: Trial
      description: Represents a Trial for a project.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the trial. Format:
            projects/{project}/locations/{location}/trial
          type: string
        state:
          description: Output only. The state of the trial.
          readOnly: true
          type: string
          enumDescriptions:
            - State not set.
            - Trial is subscribed.
            - Trial is unsubscribed before expiration.
            - Trial is expired post 30 days of subscription.
            - Trial is eligible for enablement.
            - Trial is not eligible for enablement.
          enum:
            - STATE_UNSPECIFIED
            - SUBSCRIBED
            - UNSUBSCRIBED
            - EXPIRED
            - ELIGIBLE
            - NOT_ELIGIBLE
        startTime:
          description: Output only. The time when the trial was subscribed.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time when the trial will expire.
          readOnly: true
          type: string
          format: google-datetime
    ListManagementServersResponse:
      id: ListManagementServersResponse
      description: Response message for listing management servers.
      type: object
      properties:
        managementServers:
          description: >-
            The list of ManagementServer instances in the project for the
            specified location. If the '{location}' value in the request is "-",
            the response contains a list of instances from all locations. In
            case any location is unreachable, the response will only return
            management servers in reachable locations and the 'unreachable'
            field will be populated with a list of unreachable locations.
          type: array
          items:
            $ref: '#/components/schemas/ManagementServer'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    ManagementServer:
      id: ManagementServer
      description: ManagementServer describes a single BackupDR ManagementServer instance.
      type: object
      properties:
        name:
          description: Output only. Identifier. The resource name.
          readOnly: true
          type: string
        description:
          description: >-
            Optional. The description of the ManagementServer instance (2048
            characters or less).
          type: string
        labels:
          description: >-
            Optional. Resource labels to represent user provided metadata.
            Labels currently defined: 1. migrate_from_go= If set to true, the MS
            is created in migration ready mode.
          type: object
          additionalProperties:
            type: string
        createTime:
          description: Output only. The time when the instance was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the instance was updated.
          readOnly: true
          type: string
          format: google-datetime
        type:
          description: Optional. The type of the ManagementServer resource.
          type: string
          enumDescriptions:
            - Instance type is not mentioned.
            - Instance for backup and restore management (i.e., AGM).
          enum:
            - INSTANCE_TYPE_UNSPECIFIED
            - BACKUP_RESTORE
        managementUri:
          description: >-
            Output only. The hostname or ip address of the exposed AGM
            endpoints, used by clients to connect to AGM/RD graphical user
            interface and APIs.
          readOnly: true
          $ref: '#/components/schemas/ManagementURI'
        workforceIdentityBasedManagementUri:
          description: >-
            Output only. The hostnames of the exposed AGM endpoints for both
            types of user i.e. 1p and 3p, used to connect AGM/RM UI.
          readOnly: true
          $ref: '#/components/schemas/WorkforceIdentityBasedManagementURI'
        state:
          description: Output only. The ManagementServer state.
          readOnly: true
          type: string
          enumDescriptions:
            - State not set.
            - The instance is being created.
            - The instance has been created and is fully usable.
            - >-
              The instance configuration is being updated. Certain kinds of
              updates may cause the instance to become unusable while the update
              is in progress.
            - The instance is being deleted.
            - The instance is being repaired and may be unstable.
            - Maintenance is being performed on this instance.
            - >-
              The instance is experiencing an issue and might be unusable. You
              can get further details from the statusMessage field of Instance
              resource.
          enum:
            - INSTANCE_STATE_UNSPECIFIED
            - CREATING
            - READY
            - UPDATING
            - DELETING
            - REPAIRING
            - MAINTENANCE
            - ERROR
        networks:
          description: >-
            Optional. VPC networks to which the ManagementServer instance is
            connected. For this version, only a single network is supported.
            This field is optional if MS is created without PSA
          type: array
          items:
            $ref: '#/components/schemas/NetworkConfig'
        etag:
          description: >-
            Optional. Server specified ETag for the ManagementServer resource to
            prevent simultaneous updates from overwiting each other.
          type: string
        oauth2ClientId:
          description: >-
            Output only. The OAuth 2.0 client id is required to make API calls
            to the BackupDR instance API of this ManagementServer. This is the
            value that should be provided in the 'aud' field of the OIDC ID
            Token (see openid specification
            https://openid.net/specs/openid-connect-core-1_0.html#IDToken).
          readOnly: true
          type: string
        workforceIdentityBasedOauth2ClientId:
          description: >-
            Output only. The OAuth client IDs for both types of user i.e. 1p and
            3p.
          readOnly: true
          $ref: '#/components/schemas/WorkforceIdentityBasedOAuth2ClientID'
        baProxyUri:
          description: >-
            Output only. The hostname or ip address of the exposed AGM
            endpoints, used by BAs to connect to BA proxy.
          readOnly: true
          type: array
          items:
            type: string
        satisfiesPzs:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        satisfiesPzi:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
    ManagementURI:
      id: ManagementURI
      description: ManagementURI for the Management Server resource.
      type: object
      properties:
        webUi:
          description: Output only. The ManagementServer AGM/RD WebUI URL.
          readOnly: true
          type: string
        api:
          description: Output only. The ManagementServer AGM/RD API URL.
          readOnly: true
          type: string
    WorkforceIdentityBasedManagementURI:
      id: WorkforceIdentityBasedManagementURI
      description: ManagementURI depending on the Workforce Identity i.e. either 1p or 3p.
      type: object
      properties:
        firstPartyManagementUri:
          description: Output only. First party Management URI for Google Identities.
          readOnly: true
          type: string
        thirdPartyManagementUri:
          description: >-
            Output only. Third party Management URI for External Identity
            Providers.
          readOnly: true
          type: string
    NetworkConfig:
      id: NetworkConfig
      description: Network configuration for ManagementServer instance.
      type: object
      properties:
        network:
          description: >-
            Optional. The resource name of the Google Compute Engine VPC network
            to which the ManagementServer instance is connected.
          type: string
        peeringMode:
          description: >-
            Optional. The network connect mode of the ManagementServer instance.
            For this version, only PRIVATE_SERVICE_ACCESS is supported.
          type: string
          enumDescriptions:
            - Peering mode not set.
            - >-
              Connect using Private Service Access to the Management Server.
              Private services access provides an IP address range for multiple
              Google Cloud services, including Cloud BackupDR.
          enum:
            - PEERING_MODE_UNSPECIFIED
            - PRIVATE_SERVICE_ACCESS
    WorkforceIdentityBasedOAuth2ClientID:
      id: WorkforceIdentityBasedOAuth2ClientID
      description: >-
        OAuth Client ID depending on the Workforce Identity i.e. either 1p or
        3p,
      type: object
      properties:
        firstPartyOauth2ClientId:
          description: Output only. First party OAuth Client ID for Google Identities.
          readOnly: true
          type: string
        thirdPartyOauth2ClientId:
          description: >-
            Output only. Third party OAuth Client ID for External Identity
            Providers.
          readOnly: true
          type: string
    FetchMsComplianceMetadataRequest:
      id: FetchMsComplianceMetadataRequest
      description: Request message for GetMsComplianceMetadata
      type: object
      properties:
        projectId:
          description: Required. The project id of the target project
          type: string
    FetchMsComplianceMetadataResponse:
      id: FetchMsComplianceMetadataResponse
      description: Response message for GetMsComplianceMetadata
      type: object
      properties:
        isAssuredWorkload:
          description: >-
            The ms compliance metadata of the target project, if the project is
            an assured workloads project, values will be true, otherwise false.
          type: boolean
    BackupVault:
      id: BackupVault
      description: Message describing a BackupVault object.
      type: object
      properties:
        name:
          description: >-
            Output only. Identifier. Name of the backup vault to create. It must
            have the
            format`"projects/{project}/locations/{location}/backupVaults/{backupvault}"`.
            `{backupvault}` cannot be changed after creation. It must be between
            3-63 characters long and must be unique within the project and
            location.
          readOnly: true
          type: string
        description:
          description: >-
            Optional. The description of the BackupVault instance (2048
            characters or less).
          type: string
        labels:
          description: >-
            Optional. Resource labels to represent user provided metadata. No
            labels currently defined:
          type: object
          additionalProperties:
            type: string
        createTime:
          description: Output only. The time when the instance was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the instance was updated.
          readOnly: true
          type: string
          format: google-datetime
        backupMinimumEnforcedRetentionDuration:
          description: >-
            Required. The default and minimum enforced retention for each backup
            within the backup vault. The enforced retention for each backup can
            be extended.
          type: string
          format: google-duration
        deletable:
          description: >-
            Output only. Set to true when there are no backups nested under this
            resource.
          readOnly: true
          type: boolean
        etag:
          description: >-
            Optional. Server specified ETag for the backup vault resource to
            prevent simultaneous updates from overwiting each other.
          type: string
        state:
          description: Output only. The BackupVault resource instance state.
          readOnly: true
          type: string
          enumDescriptions:
            - State not set.
            - The backup vault is being created.
            - The backup vault has been created and is fully usable.
            - The backup vault is being deleted.
            - The backup vault is experiencing an issue and might be unusable.
            - The backup vault is being updated.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ERROR
            - UPDATING
        effectiveTime:
          description: Optional. Time after which the BackupVault resource is locked.
          type: string
          format: google-datetime
        backupCount:
          description: Output only. The number of backups in this backup vault.
          readOnly: true
          type: string
          format: int64
        serviceAccount:
          description: >-
            Output only. Service account used by the BackupVault Service for
            this BackupVault. The user should grant this account permissions in
            their workload project to enable the service to run backups and
            restores there.
          readOnly: true
          type: string
        totalStoredBytes:
          description: Output only. Total size of the storage used by all backup resources.
          readOnly: true
          type: string
          format: int64
        uid:
          description: >-
            Output only. Immutable after resource creation until resource
            deletion.
          readOnly: true
          type: string
        annotations:
          description: >-
            Optional. User annotations. See
            https://google.aip.dev/128#annotations Stores small amounts of
            arbitrary data.
          type: object
          additionalProperties:
            type: string
        accessRestriction:
          description: >-
            Optional. Note: This field is added for future use case and will not
            be supported in the current release. Access restriction for the
            backup vault. Default value is WITHIN_ORGANIZATION if not provided
            during creation.
          type: string
          enumDescriptions:
            - >-
              Access restriction not set. If user does not provide any value or
              pass this value, it will be changed to WITHIN_ORGANIZATION.
            - >-
              Access to or from resources outside your current project will be
              denied.
            - >-
              Access to or from resources outside your current organization will
              be denied.
            - No access restriction.
            - >-
              Access to or from resources outside your current organization will
              be denied except for backup appliance.
          enum:
            - ACCESS_RESTRICTION_UNSPECIFIED
            - WITHIN_PROJECT
            - WITHIN_ORGANIZATION
            - UNRESTRICTED
            - WITHIN_ORG_BUT_UNRESTRICTED_FOR_BA
    ListBackupVaultsResponse:
      id: ListBackupVaultsResponse
      description: Response message for listing BackupVaults.
      type: object
      properties:
        backupVaults:
          description: >-
            The list of BackupVault instances in the project for the specified
            location. If the '{location}' value in the request is "-", the
            response contains a list of instances from all locations. In case
            any location is unreachable, the response will only return backup
            vaults in reachable locations and the 'unreachable' field will be
            populated with a list of unreachable locations.
          type: array
          items:
            $ref: '#/components/schemas/BackupVault'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    FetchUsableBackupVaultsResponse:
      id: FetchUsableBackupVaultsResponse
      description: Response message for fetching usable BackupVaults.
      type: object
      properties:
        backupVaults:
          description: >-
            The list of BackupVault instances in the project for the specified
            location. If the '{location}' value in the request is "-", the
            response contains a list of instances from all locations. In case
            any location is unreachable, the response will only return backup
            vaults in reachable locations and the 'unreachable' field will be
            populated with a list of unreachable locations.
          type: array
          items:
            $ref: '#/components/schemas/BackupVault'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    ListDataSourcesResponse:
      id: ListDataSourcesResponse
      description: Response message for listing DataSources.
      type: object
      properties:
        dataSources:
          description: >-
            The list of DataSource instances in the project for the specified
            location. If the '{location}' value in the request is "-", the
            response contains a list of instances from all locations. In case
            any location is unreachable, the response will only return data
            sources in reachable locations and the 'unreachable' field will be
            populated with a list of unreachable locations.
          type: array
          items:
            $ref: '#/components/schemas/DataSource'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    DataSource:
      id: DataSource
      description: >-
        Message describing a DataSource object. Datasource object used to
        represent Datasource details for both admin and basic view.
      type: object
      properties:
        name:
          description: >-
            Output only. Identifier. Name of the datasource to create. It must
            have the
            format`"projects/{project}/locations/{location}/backupVaults/{backupvault}/dataSources/{datasource}"`.
            `{datasource}` cannot be changed after creation. It must be between
            3-63 characters long and must be unique within the backup vault.
          readOnly: true
          type: string
        state:
          description: Output only. The DataSource resource instance state.
          readOnly: true
          type: string
          enumDescriptions:
            - State not set.
            - The data source is being created.
            - The data source has been created and is fully usable.
            - The data source is being deleted.
            - The data source is experiencing an issue and might be unusable.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ERROR
        labels:
          description: >-
            Optional. Resource labels to represent user provided metadata. No
            labels currently defined:
          type: object
          additionalProperties:
            type: string
        createTime:
          description: Output only. The time when the instance was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the instance was updated.
          readOnly: true
          type: string
          format: google-datetime
        backupCount:
          description: Number of backups in the data source.
          type: string
          format: int64
        etag:
          description: >-
            Server specified ETag for the ManagementServer resource to prevent
            simultaneous updates from overwiting each other.
          type: string
        totalStoredBytes:
          description: The number of bytes (metadata and data) stored in this datasource.
          type: string
          format: int64
        configState:
          description: Output only. The backup configuration state.
          readOnly: true
          type: string
          enumDescriptions:
            - The possible states of backup configuration. Status not set.
            - >-
              The data source is actively protected (i.e. there is a
              BackupPlanAssociation or Appliance SLA pointing to it)
            - >-
              The data source is no longer protected (but may have backups under
              it)
          enum:
            - BACKUP_CONFIG_STATE_UNSPECIFIED
            - ACTIVE
            - PASSIVE
        backupConfigInfo:
          description: Output only. Details of how the resource is configured for backup.
          readOnly: true
          $ref: '#/components/schemas/BackupConfigInfo'
        dataSourceGcpResource:
          description: >-
            The backed up resource is a Google Cloud resource. The word
            'DataSource' was included in the names to indicate that this is the
            representation of the Google Cloud resource used within the
            DataSource object.
          $ref: '#/components/schemas/DataSourceGcpResource'
        dataSourceBackupApplianceApplication:
          description: The backed up resource is a backup appliance application.
          $ref: '#/components/schemas/DataSourceBackupApplianceApplication'
        backupBlockedByVaultAccessRestriction:
          description: >-
            Output only. This field is set to true if the backup is blocked by
            vault access restriction.
          readOnly: true
          type: boolean
    BackupConfigInfo:
      id: BackupConfigInfo
      description: >-
        BackupConfigInfo has information about how the resource is configured
        for Backup and about the most recent backup to this vault.
      type: object
      properties:
        lastBackupState:
          description: Output only. The status of the last backup to this BackupVault
          readOnly: true
          type: string
          enumDescriptions:
            - Status not set.
            - The first backup has not yet completed
            - The most recent backup was successful
            - The most recent backup failed
            - >-
              The most recent backup could not be run/failed because of the lack
              of permissions
          enum:
            - LAST_BACKUP_STATE_UNSPECIFIED
            - FIRST_BACKUP_PENDING
            - SUCCEEDED
            - FAILED
            - PERMISSION_DENIED
        lastSuccessfulBackupConsistencyTime:
          description: >-
            Output only. If the last backup were successful, this field has the
            consistency date.
          readOnly: true
          type: string
          format: google-datetime
        lastBackupError:
          description: >-
            Output only. If the last backup failed, this field has the error
            message.
          readOnly: true
          $ref: '#/components/schemas/Status'
        gcpBackupConfig:
          description: Configuration for a Google Cloud resource.
          $ref: '#/components/schemas/GcpBackupConfig'
        backupApplianceBackupConfig:
          description: Configuration for an application backed up by a Backup Appliance.
          $ref: '#/components/schemas/BackupApplianceBackupConfig'
    GcpBackupConfig:
      id: GcpBackupConfig
      description: >-
        GcpBackupConfig captures the Backup configuration details for Google
        Cloud resources. All Google Cloud resources regardless of type are
        protected with backup plan associations.
      type: object
      properties:
        backupPlan:
          description: The name of the backup plan.
          type: string
        backupPlanDescription:
          description: The description of the backup plan.
          type: string
        backupPlanAssociation:
          description: The name of the backup plan association.
          type: string
        backupPlanRules:
          description: The names of the backup plan rules which point to this backupvault
          type: array
          items:
            type: string
        backupPlanRevisionName:
          description: The name of the backup plan revision.
          type: string
        backupPlanRevisionId:
          description: The user friendly id of the backup plan revision. E.g. v0, v1 etc.
          type: string
    BackupApplianceBackupConfig:
      id: BackupApplianceBackupConfig
      description: >-
        BackupApplianceBackupConfig captures the backup configuration for
        applications that are protected by Backup Appliances.
      type: object
      properties:
        backupApplianceName:
          description: The name of the backup appliance.
          type: string
        backupApplianceId:
          description: The ID of the backup appliance.
          type: string
          format: int64
        slaId:
          description: The ID of the SLA of this application.
          type: string
          format: int64
        applicationName:
          description: The name of the application.
          type: string
        hostName:
          description: The name of the host where the application is running.
          type: string
        sltName:
          description: The name of the SLT associated with the application.
          type: string
        slpName:
          description: The name of the SLP associated with the application.
          type: string
    DataSourceGcpResource:
      id: DataSourceGcpResource
      description: >-
        DataSourceGcpResource is used for protected resources that are Google
        Cloud Resources. This name is easeier to understand than
        GcpResourceDataSource or GcpDataSourceResource
      type: object
      properties:
        gcpResourcename:
          description: >-
            Output only. Full resource pathname URL of the source Google Cloud
            resource.
          readOnly: true
          type: string
        location:
          description: 'Location of the resource: //"global"/"unspecified".'
          type: string
        type:
          description: >-
            The type of the Google Cloud resource. Use the Unified Resource
            Type, eg. compute.googleapis.com/Instance.
          type: string
        computeInstanceDatasourceProperties:
          description: >-
            ComputeInstanceDataSourceProperties has a subset of Compute Instance
            properties that are useful at the Datasource level.
          $ref: '#/components/schemas/ComputeInstanceDataSourceProperties'
        cloudSqlInstanceDatasourceProperties:
          description: >-
            Output only. CloudSqlInstanceDataSourceProperties has a subset of
            Cloud SQL Instance properties that are useful at the Datasource
            level.
          readOnly: true
          $ref: '#/components/schemas/CloudSqlInstanceDataSourceProperties'
        diskDatasourceProperties:
          description: >-
            DiskDataSourceProperties has a subset of Disk properties that are
            useful at the Datasource level.
          $ref: '#/components/schemas/DiskDataSourceProperties'
    ComputeInstanceDataSourceProperties:
      id: ComputeInstanceDataSourceProperties
      description: >-
        ComputeInstanceDataSourceProperties represents the properties of a
        ComputeEngine resource that are stored in the DataSource.
      type: object
      properties:
        name:
          description: Name of the compute instance backed up by the datasource.
          type: string
        description:
          description: The description of the Compute Engine instance.
          type: string
        machineType:
          description: The machine type of the instance.
          type: string
        totalDiskCount:
          description: The total number of disks attached to the Instance.
          type: string
          format: int64
        totalDiskSizeGb:
          description: The sum of all the disk sizes.
          type: string
          format: int64
    CloudSqlInstanceDataSourceProperties:
      id: CloudSqlInstanceDataSourceProperties
      description: >-
        CloudSqlInstanceDataSourceProperties represents the properties of a
        Cloud SQL resource that are stored in the DataSource.
      type: object
      properties:
        name:
          description: >-
            Output only. Name of the Cloud SQL instance backed up by the
            datasource. Format: projects/{project}/instances/{instance}
          readOnly: true
          type: string
        databaseInstalledVersion:
          description: >-
            Output only. The installed database version of the Cloud SQL
            instance.
          readOnly: true
          type: string
        instanceCreateTime:
          description: Output only. The instance creation timestamp.
          readOnly: true
          type: string
          format: google-datetime
        instanceTier:
          description: >-
            Output only. The tier (or machine type) for this instance. Example:
            `db-custom-1-3840`
          readOnly: true
          type: string
    DiskDataSourceProperties:
      id: DiskDataSourceProperties
      description: >-
        DiskDataSourceProperties represents the properties of a Disk resource
        that are stored in the DataSource. .
      type: object
      properties:
        name:
          description: Name of the disk backed up by the datasource.
          type: string
        description:
          description: The description of the disk.
          type: string
        type:
          description: The type of the disk.
          type: string
        sizeGb:
          description: The size of the disk in GB.
          type: string
          format: int64
    DataSourceBackupApplianceApplication:
      id: DataSourceBackupApplianceApplication
      description: >-
        BackupApplianceApplication describes a Source Resource when it is an
        application backed up by a BackupAppliance.
      type: object
      properties:
        applicationName:
          description: The name of the Application as known to the Backup Appliance.
          type: string
        backupAppliance:
          description: Appliance name.
          type: string
        applianceId:
          description: Appliance Id of the Backup Appliance.
          type: string
          format: int64
        type:
          description: The type of the application. e.g. VMBackup
          type: string
        applicationId:
          description: The appid field of the application within the Backup Appliance.
          type: string
          format: int64
        hostname:
          description: Hostname of the host where the application is running.
          type: string
        hostId:
          description: Hostid of the application host.
          type: string
          format: int64
    RemoveDataSourceRequest:
      id: RemoveDataSourceRequest
      description: Message for deleting a DataSource.
      type: object
      properties:
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes after the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
    SetInternalStatusRequest:
      id: SetInternalStatusRequest
      description: Request message for SetStatusInternal method.
      type: object
      properties:
        value:
          description: >-
            Required. The value required for this method to work. This field
            must be the 32-byte SHA256 hash of the DataSourceID. The
            DataSourceID used here is only the final piece of the fully
            qualified resource path for this DataSource (i.e. the part after
            '.../dataSources/'). This field exists to make this method difficult
            to call since it is intended for use only by Backup Appliances.
          type: string
          format: byte
        backupConfigState:
          description: >-
            Required. Output only. The new BackupConfigState to set for the
            DataSource.
          readOnly: true
          type: string
          enumDescriptions:
            - The possible states of backup configuration. Status not set.
            - >-
              The data source is actively protected (i.e. there is a
              BackupPlanAssociation or Appliance SLA pointing to it)
            - >-
              The data source is no longer protected (but may have backups under
              it)
          enum:
            - BACKUP_CONFIG_STATE_UNSPECIFIED
            - ACTIVE
            - PASSIVE
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes after the
            first request. The request ID must be a valid UUID with the
            exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
    InitiateBackupRequest:
      id: InitiateBackupRequest
      description: request message for InitiateBackup.
      type: object
      properties:
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes since the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
        backupId:
          description: Required. Resource ID of the Backup resource.
          type: string
    InitiateBackupResponse:
      id: InitiateBackupResponse
      description: Response message for InitiateBackup.
      type: object
      properties:
        backup:
          description: The name of the backup that was created.
          type: string
        newBackupGenerationId:
          description: The generation id of the new backup.
          type: integer
          format: int32
        baseBackupGenerationId:
          description: >-
            The generation id of the base backup. It is needed for the
            incremental backups.
          type: integer
          format: int32
    AbandonBackupRequest:
      id: AbandonBackupRequest
      description: request message for AbandonBackup.
      type: object
      properties:
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes since the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
    FinalizeBackupRequest:
      id: FinalizeBackupRequest
      description: Message for finalizing a Backup.
      type: object
      properties:
        description:
          description: >-
            This will be assigned to the description field of the newly created
            Backup.
          type: string
        consistencyTime:
          description: >-
            The point in time when this backup was captured from the source.
            This will be assigned to the consistency_time field of the newly
            created Backup.
          type: string
          format: google-datetime
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes after the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
        backupId:
          description: >-
            Required. Resource ID of the Backup resource to be finalized. This
            must be the same backup_id that was used in the
            InitiateBackupRequest.
          type: string
        recoveryRangeStartTime:
          description: >-
            The earliest timestamp of data available in this Backup. This will
            set on the newly created Backup.
          type: string
          format: google-datetime
        recoveryRangeEndTime:
          description: >-
            The latest timestamp of data available in this Backup. This will be
            set on the newly created Backup.
          type: string
          format: google-datetime
        retentionDuration:
          description: >-
            The ExpireTime on the backup will be set to FinalizeTime plus this
            duration. If the resulting ExpireTime is less than
            EnforcedRetentionEndTime, then ExpireTime is set to
            EnforcedRetentionEndTime.
          type: string
          format: google-duration
    FetchAccessTokenRequest:
      id: FetchAccessTokenRequest
      description: Request message for FetchAccessToken.
      type: object
      properties:
        generationId:
          description: Required. The generation of the backup to update.
          type: integer
          format: int32
    FetchAccessTokenResponse:
      id: FetchAccessTokenResponse
      description: Response message for FetchAccessToken.
      type: object
      properties:
        readLocation:
          description: The location in bucket that can be used for reading.
          type: string
        writeLocation:
          description: The location in bucket that can be used for writing.
          type: string
        token:
          description: The downscoped token that was created.
          type: string
        expireTime:
          description: The token is valid until this time.
          type: string
          format: google-datetime
    ListBackupsResponse:
      id: ListBackupsResponse
      description: Response message for listing Backups.
      type: object
      properties:
        backups:
          description: >-
            The list of Backup instances in the project for the specified
            location. If the '{location}' value in the request is "-", the
            response contains a list of instances from all locations. In case
            any location is unreachable, the response will only return data
            sources in reachable locations and the 'unreachable' field will be
            populated with a list of unreachable locations.
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Backup:
      id: Backup
      description: Message describing a Backup object.
      type: object
      properties:
        name:
          description: >-
            Output only. Identifier. Name of the backup to create. It must have
            the
            format`"projects//locations//backupVaults//dataSources/{datasource}/backups/{backup}"`.
            `{backup}` cannot be changed after creation. It must be between 3-63
            characters long and must be unique within the datasource.
          readOnly: true
          type: string
        description:
          description: >-
            Output only. The description of the Backup instance (2048 characters
            or less).
          readOnly: true
          type: string
        createTime:
          description: Output only. The time when the instance was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the instance was updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: >-
            Optional. Resource labels to represent user provided metadata. No
            labels currently defined.
          type: object
          additionalProperties:
            type: string
        enforcedRetentionEndTime:
          description: Optional. The backup can not be deleted before this time.
          type: string
          format: google-datetime
        expireTime:
          description: Optional. When this backup is automatically expired.
          type: string
          format: google-datetime
        consistencyTime:
          description: >-
            Output only. The point in time when this backup was captured from
            the source.
          readOnly: true
          type: string
          format: google-datetime
        etag:
          description: >-
            Optional. Server specified ETag to prevent updates from overwriting
            each other.
          type: string
        state:
          description: Output only. The Backup resource instance state.
          readOnly: true
          type: string
          enumDescriptions:
            - State not set.
            - The backup is being created.
            - The backup has been created and is fully usable.
            - The backup is being deleted.
            - The backup is experiencing an issue and might be unusable.
            - The backup is being uploaded.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ERROR
            - UPLOADING
        serviceLocks:
          description: >-
            Output only. The list of BackupLocks taken by the service to prevent
            the deletion of the backup.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BackupLock'
        backupApplianceLocks:
          description: >-
            Optional. The list of BackupLocks taken by the accessor Backup
            Appliance.
          type: array
          items:
            $ref: '#/components/schemas/BackupLock'
        computeInstanceBackupProperties:
          description: Output only. Compute Engine specific backup properties.
          readOnly: true
          $ref: '#/components/schemas/ComputeInstanceBackupProperties'
        cloudSqlInstanceBackupProperties:
          description: Output only. Cloud SQL specific backup properties.
          readOnly: true
          $ref: '#/components/schemas/CloudSqlInstanceBackupProperties'
        backupApplianceBackupProperties:
          description: Output only. Backup Appliance specific backup properties.
          readOnly: true
          $ref: '#/components/schemas/BackupApplianceBackupProperties'
        diskBackupProperties:
          description: Output only. Disk specific backup properties.
          readOnly: true
          $ref: '#/components/schemas/DiskBackupProperties'
        backupType:
          description: Output only. Type of the backup, unspecified, scheduled or ondemand.
          readOnly: true
          type: string
          enumDescriptions:
            - Backup type is unspecified.
            - Scheduled backup.
            - On demand backup.
            - Operational backup.
          enum:
            - BACKUP_TYPE_UNSPECIFIED
            - SCHEDULED
            - ON_DEMAND
            - ON_DEMAND_OPERATIONAL
        gcpBackupPlanInfo:
          description: Output only. Configuration for a Google Cloud resource.
          readOnly: true
          $ref: '#/components/schemas/GCPBackupPlanInfo'
        resourceSizeBytes:
          description: >-
            Output only. source resource size in bytes at the time of the
            backup.
          readOnly: true
          type: string
          format: int64
        satisfiesPzs:
          description: Optional. Output only. Reserved for future use.
          readOnly: true
          type: boolean
        satisfiesPzi:
          description: Optional. Output only. Reserved for future use.
          readOnly: true
          type: boolean
    BackupLock:
      id: BackupLock
      description: >-
        BackupLock represents a single lock on a Backup resource. An unexpired
        lock on a Backup prevents the Backup from being deleted.
      type: object
      properties:
        lockUntilTime:
          description: >-
            Required. The time after which this lock is not considered valid and
            will no longer protect the Backup from deletion.
          type: string
          format: google-datetime
        backupApplianceLockInfo:
          description: >-
            If the client is a backup and recovery appliance, this contains
            metadata about why the lock exists.
          $ref: '#/components/schemas/BackupApplianceLockInfo'
        serviceLockInfo:
          description: >-
            Output only. Contains metadata about the lock exist for Google Cloud
            native backups.
          readOnly: true
          $ref: '#/components/schemas/ServiceLockInfo'
    BackupApplianceLockInfo:
      id: BackupApplianceLockInfo
      description: >-
        BackupApplianceLockInfo contains metadata about the backupappliance that
        created the lock.
      type: object
      properties:
        backupApplianceId:
          description: >-
            Required. The ID of the backup/recovery appliance that created this
            lock.
          type: string
          format: int64
        backupApplianceName:
          description: >-
            Required. The name of the backup/recovery appliance that created
            this lock.
          type: string
        lockReason:
          description: >-
            Required. The reason for the lock: e.g. MOUNT/RESTORE/BACKUP/etc.
            The value of this string is only meaningful to the client and it is
            not interpreted by the BackupVault service.
          type: string
        jobName:
          description: >-
            The job name on the backup/recovery appliance that created this
            lock.
          type: string
        backupImage:
          description: The image name that depends on this Backup.
          type: string
        slaId:
          description: The SLA on the backup/recovery appliance that owns the lock.
          type: string
          format: int64
    ServiceLockInfo:
      id: ServiceLockInfo
      description: >-
        ServiceLockInfo represents the details of a lock taken by the service on
        a Backup resource.
      type: object
      properties:
        operation:
          description: >-
            Output only. The name of the operation that created this lock. The
            lock will automatically be released when the operation completes.
          readOnly: true
          type: string
    ComputeInstanceBackupProperties:
      id: ComputeInstanceBackupProperties
      description: >-
        ComputeInstanceBackupProperties represents Compute Engine instance
        backup properties.
      type: object
      properties:
        description:
          description: >-
            An optional text description for the instances that are created from
            these properties.
          type: string
        tags:
          description: >-
            A list of tags to apply to the instances that are created from these
            properties. The tags identify valid sources or targets for network
            firewalls. The setTags method can modify this list of tags. Each tag
            within the list must comply with RFC1035
            (https://www.ietf.org/rfc/rfc1035.txt).
          $ref: '#/components/schemas/Tags'
        machineType:
          description: >-
            The machine type to use for instances that are created from these
            properties.
          type: string
        canIpForward:
          description: >-
            Enables instances created based on these properties to send packets
            with source IP addresses other than their own and receive packets
            with destination IP addresses other than their own. If these
            instances will be used as an IP gateway or it will be set as the
            next-hop in a Route resource, specify `true`. If unsure, leave this
            set to `false`. See the
            https://cloud.google.com/vpc/docs/using-routes#canipforward
            documentation for more information.
          type: boolean
        networkInterface:
          description: An array of network access configurations for this interface.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
        disk:
          description: >-
            An array of disks that are associated with the instances that are
            created from these properties.
          type: array
          items:
            $ref: '#/components/schemas/AttachedDisk'
        metadata:
          description: >-
            The metadata key/value pairs to assign to instances that are created
            from these properties. These pairs can consist of custom metadata or
            predefined keys. See
            https://cloud.google.com/compute/docs/metadata/overview for more
            information.
          $ref: '#/components/schemas/Metadata'
        serviceAccount:
          description: >-
            A list of service accounts with specified scopes. Access tokens for
            these service accounts are available to the instances that are
            created from these properties. Use metadata queries to obtain the
            access tokens for these instances.
          type: array
          items:
            $ref: '#/components/schemas/ServiceAccount'
        scheduling:
          description: >-
            Specifies the scheduling options for the instances that are created
            from these properties.
          $ref: '#/components/schemas/Scheduling'
        guestAccelerator:
          description: >-
            A list of guest accelerator cards' type and count to use for
            instances created from these properties.
          type: array
          items:
            $ref: '#/components/schemas/AcceleratorConfig'
        minCpuPlatform:
          description: >-
            Minimum cpu/platform to be used by instances. The instance may be
            scheduled on the specified or newer cpu/platform. Applicable values
            are the friendly names of CPU platforms, such as `minCpuPlatform:
            Intel Haswell` or `minCpuPlatform: Intel Sandy Bridge`. For more
            information, read
            https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform.
          type: string
        keyRevocationActionType:
          description: >-
            KeyRevocationActionType of the instance. Supported options are
            "STOP" and "NONE". The default value is "NONE" if it is not
            specified.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Indicates user chose no operation.
            - Indicates user chose to opt for VM shutdown on key revocation.
          enum:
            - KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED
            - NONE
            - STOP
        sourceInstance:
          description: >-
            The source instance used to create this backup. This can be a
            partial or full URL to the resource. For example, the following are
            valid values:
            -https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance
            -projects/project/zones/zone/instances/instance
          type: string
        labels:
          description: Labels to apply to instances that are created from these properties.
          type: object
          additionalProperties:
            type: string
    Tags:
      id: Tags
      description: A set of instance tags.
      type: object
      properties:
        items:
          description: >-
            Optional. An array of tags. Each tag must be 1-63 characters long,
            and comply with RFC1035.
          type: array
          items:
            type: string
    NetworkInterface:
      id: NetworkInterface
      description: A network interface resource attached to an instance. s
      type: object
      properties:
        network:
          description: Optional. URL of the VPC network resource for this instance.
          type: string
        subnetwork:
          description: Optional. The URL of the Subnetwork resource for this instance.
          type: string
        networkIP:
          description: >-
            Optional. An IPv4 internal IP address to assign to the instance for
            this network interface. If not specified by the user, an unused
            internal IP is assigned by the system.
          type: string
        ipv6Address:
          description: >-
            Optional. An IPv6 internal network address for this network
            interface. To use a static internal IP address, it must be unused
            and in the same region as the instance's zone. If not specified,
            Google Cloud will automatically assign an internal IPv6 address from
            the instance's subnetwork.
          type: string
        internalIpv6PrefixLength:
          description: Optional. The prefix length of the primary internal IPv6 range.
          type: integer
          format: int32
        name:
          description: >-
            Output only. [Output Only] The name of the network interface, which
            is generated by the server.
          readOnly: true
          type: string
        accessConfigs:
          description: >-
            Optional. An array of configurations for this interface. Currently,
            only one access config,ONE_TO_ONE_NAT is supported. If there are no
            accessConfigs specified, then this instance will have no external
            internet access.
          type: array
          items:
            $ref: '#/components/schemas/AccessConfig'
        ipv6AccessConfigs:
          description: >-
            Optional. An array of IPv6 access configurations for this interface.
            Currently, only one IPv6 access config, DIRECT_IPV6, is supported.
            If there is no ipv6AccessConfig specified, then this instance will
            have no external IPv6 Internet access.
          type: array
          items:
            $ref: '#/components/schemas/AccessConfig'
        aliasIpRanges:
          description: >-
            Optional. An array of alias IP ranges for this network interface.
            You can only specify this field for network interfaces in VPC
            networks.
          type: array
          items:
            $ref: '#/components/schemas/AliasIpRange'
        stackType:
          description: The stack type for this network interface.
          type: string
          enumDescriptions:
            - Default should be STACK_TYPE_UNSPECIFIED.
            - The network interface will be assigned IPv4 address.
            - The network interface can have both IPv4 and IPv6 addresses.
          enum:
            - STACK_TYPE_UNSPECIFIED
            - IPV4_ONLY
            - IPV4_IPV6
        ipv6AccessType:
          description: >-
            Optional. [Output Only] One of EXTERNAL, INTERNAL to indicate
            whether the IP can be accessed from the Internet. This field is
            always inherited from its subnetwork.
          type: string
          enumDescriptions:
            - >-
              IPv6 access type not set. Means this network interface hasn't been
              turned on IPv6 yet.
            - This network interface can have internal IPv6.
            - This network interface can have external IPv6.
          enum:
            - UNSPECIFIED_IPV6_ACCESS_TYPE
            - INTERNAL
            - EXTERNAL
        queueCount:
          description: >-
            Optional. The networking queue count that's specified by users for
            the network interface. Both Rx and Tx queues will be set to this
            number. It'll be empty if not specified by the users.
          type: integer
          format: int32
        nicType:
          description: >-
            Optional. The type of vNIC to be used on this interface. This may be
            gVNIC or VirtioNet.
          type: string
          enumDescriptions:
            - Default should be NIC_TYPE_UNSPECIFIED.
            - VIRTIO
            - GVNIC
          enum:
            - NIC_TYPE_UNSPECIFIED
            - VIRTIO_NET
            - GVNIC
        networkAttachment:
          description: >-
            Optional. The URL of the network attachment that this interface
            should connect to in the following format:
            projects/{project_number}/regions/{region_name}/networkAttachments/{network_attachment_name}.
          type: string
    AccessConfig:
      id: AccessConfig
      description: >-
        An access configuration attached to an instance's network interface.
        Only one access config per instance is supported.
      type: object
      properties:
        type:
          description: >-
            Optional. In accessConfigs (IPv4), the default and only option is
            ONE_TO_ONE_NAT. In ipv6AccessConfigs, the default and only option is
            DIRECT_IPV6.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - ONE_TO_ONE_NAT
            - Direct IPv6 access.
          enum:
            - ACCESS_TYPE_UNSPECIFIED
            - ONE_TO_ONE_NAT
            - DIRECT_IPV6
        name:
          description: Optional. The name of this access configuration.
          type: string
        natIP:
          description: Optional. The external IP address of this access configuration.
          type: string
        externalIpv6:
          description: Optional. The external IPv6 address of this access configuration.
          type: string
        externalIpv6PrefixLength:
          description: Optional. The prefix length of the external IPv6 range.
          type: integer
          format: int32
        setPublicPtr:
          description: >-
            Optional. Specifies whether a public DNS 'PTR' record should be
            created to map the external IP address of the instance to a DNS
            domain name.
          type: boolean
        publicPtrDomainName:
          description: Optional. The DNS domain name for the public PTR record.
          type: string
        networkTier:
          description: >-
            Optional. This signifies the networking tier used for configuring
            this access
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              High quality, Google-grade network tier, support for all
              networking products.
            - >-
              Public internet quality, only limited support for other networking
              products.
          enum:
            - NETWORK_TIER_UNSPECIFIED
            - PREMIUM
            - STANDARD
    AliasIpRange:
      id: AliasIpRange
      description: An alias IP range attached to an instance's network interface.
      type: object
      properties:
        ipCidrRange:
          description: Optional. The IP alias ranges to allocate for this interface.
          type: string
        subnetworkRangeName:
          description: >-
            Optional. The name of a subnetwork secondary IP range from which to
            allocate an IP alias range. If not specified, the primary range of
            the subnetwork is used.
          type: string
    AttachedDisk:
      id: AttachedDisk
      description: An instance-attached disk resource.
      type: object
      properties:
        initializeParams:
          description: Optional. Specifies the parameters to initialize this disk.
          $ref: '#/components/schemas/InitializeParams'
        deviceName:
          description: >-
            Optional. This is used as an identifier for the disks. This is the
            unique name has to provided to modify disk parameters like disk_name
            and replica_zones (in case of RePDs)
          type: string
        kind:
          description: Optional. Type of the resource.
          type: string
        diskTypeDeprecated:
          description: Specifies the type of the disk.
          deprecated: true
          type: string
          enumDescriptions:
            - Default value, which is unused.
            - A scratch disk type.
            - A persistent disk type.
          enum:
            - DISK_TYPE_UNSPECIFIED
            - SCRATCH
            - PERSISTENT
        mode:
          description: Optional. The mode in which to attach this disk.
          type: string
          enumDescriptions:
            - Default value, which is unused.
            - >-
              Attaches this disk in read-write mode. Only one virtual machine at
              a time can be attached to a disk in read-write mode.
            - >-
              Attaches this disk in read-only mode. Multiple virtual machines
              can use a disk in read-only mode at a time.
            - >-
              The disk is locked for administrative reasons. Nobody else can use
              the disk. This mode is used (for example) when taking a snapshot
              of a disk to prevent mounting the disk while it is being
              snapshotted.
          enum:
            - DISK_MODE_UNSPECIFIED
            - READ_WRITE
            - READ_ONLY
            - LOCKED
        source:
          description: >-
            Optional. Specifies a valid partial or full URL to an existing
            Persistent Disk resource.
          type: string
        index:
          description: >-
            Optional. A zero-based index to this disk, where 0 is reserved for
            the boot disk.
          type: string
          format: int64
        boot:
          description: >-
            Optional. Indicates that this is a boot disk. The virtual machine
            will use the first partition of the disk for its root filesystem.
          type: boolean
        autoDelete:
          description: >-
            Optional. Specifies whether the disk will be auto-deleted when the
            instance is deleted (but not when the disk is detached from the
            instance).
          type: boolean
        license:
          description: Optional. Any valid publicly visible licenses.
          type: array
          items:
            type: string
        diskInterface:
          description: >-
            Optional. Specifies the disk interface to use for attaching this
            disk.
          type: string
          enumDescriptions:
            - Default value, which is unused.
            - SCSI Disk Interface.
            - NVME Disk Interface.
            - NVDIMM Disk Interface.
            - ISCSI Disk Interface.
          enum:
            - DISK_INTERFACE_UNSPECIFIED
            - SCSI
            - NVME
            - NVDIMM
            - ISCSI
        guestOsFeature:
          description: >-
            Optional. A list of features to enable on the guest operating
            system. Applicable only for bootable images.
          type: array
          items:
            $ref: '#/components/schemas/GuestOsFeature'
        diskEncryptionKey:
          description: >-
            Optional. Encrypts or decrypts a disk using a customer-supplied
            encryption key.
          $ref: '#/components/schemas/CustomerEncryptionKey'
        diskSizeGb:
          description: Optional. The size of the disk in GB.
          type: string
          format: int64
        savedState:
          description: Optional. Output only. The state of the disk.
          readOnly: true
          type: string
          enumDescriptions:
            - Default Disk state has not been preserved.
            - Disk state has been preserved.
          enum:
            - DISK_SAVED_STATE_UNSPECIFIED
            - PRESERVED
        diskType:
          description: >-
            Optional. Output only. The URI of the disk type resource. For
            example: projects/project/zones/zone/diskTypes/pd-standard or pd-ssd
          readOnly: true
          type: string
        type:
          description: Optional. Specifies the type of the disk.
          type: string
          enumDescriptions:
            - Default value, which is unused.
            - A scratch disk type.
            - A persistent disk type.
          enum:
            - DISK_TYPE_UNSPECIFIED
            - SCRATCH
            - PERSISTENT
    InitializeParams:
      id: InitializeParams
      description: Specifies the parameters to initialize this disk.
      type: object
      properties:
        diskName:
          description: >-
            Optional. Specifies the disk name. If not specified, the default is
            to use the name of the instance.
          type: string
        replicaZones:
          description: >-
            Optional. URL of the zone where the disk should be created. Required
            for each regional disk associated with the instance.
          type: array
          items:
            type: string
    GuestOsFeature:
      id: GuestOsFeature
      description: Feature type of the Guest OS.
      type: object
      properties:
        type:
          description: The ID of a supported feature.
          type: string
          enumDescriptions:
            - Default value, which is unused.
            - VIRTIO_SCSI_MULTIQUEUE feature type.
            - WINDOWS feature type.
            - MULTI_IP_SUBNET feature type.
            - UEFI_COMPATIBLE feature type.
            - SECURE_BOOT feature type.
            - GVNIC feature type.
            - SEV_CAPABLE feature type.
            - BARE_METAL_LINUX_COMPATIBLE feature type.
            - SUSPEND_RESUME_COMPATIBLE feature type.
            - SEV_LIVE_MIGRATABLE feature type.
            - SEV_SNP_CAPABLE feature type.
            - TDX_CAPABLE feature type.
            - IDPF feature type.
            - SEV_LIVE_MIGRATABLE_V2 feature type.
          enum:
            - FEATURE_TYPE_UNSPECIFIED
            - VIRTIO_SCSI_MULTIQUEUE
            - WINDOWS
            - MULTI_IP_SUBNET
            - UEFI_COMPATIBLE
            - SECURE_BOOT
            - GVNIC
            - SEV_CAPABLE
            - BARE_METAL_LINUX_COMPATIBLE
            - SUSPEND_RESUME_COMPATIBLE
            - SEV_LIVE_MIGRATABLE
            - SEV_SNP_CAPABLE
            - TDX_CAPABLE
            - IDPF
            - SEV_LIVE_MIGRATABLE_V2
    CustomerEncryptionKey:
      id: CustomerEncryptionKey
      description: A customer-supplied encryption key.
      type: object
      properties:
        rawKey:
          description: Optional. Specifies a 256-bit customer-supplied encryption key.
          type: string
        rsaEncryptedKey:
          description: >-
            Optional. RSA-wrapped 2048-bit customer-supplied encryption key to
            either encrypt or decrypt this resource.
          type: string
        kmsKeyName:
          description: >-
            Optional. The name of the encryption key that is stored in Google
            Cloud KMS.
          type: string
        kmsKeyServiceAccount:
          description: >-
            Optional. The service account being used for the encryption request
            for the given KMS key. If absent, the Compute Engine default service
            account is used.
          type: string
    Metadata:
      id: Metadata
      description: A metadata key/value entry.
      type: object
      properties:
        items:
          description: >-
            Optional. Array of key/value pairs. The total size of all keys and
            values must be less than 512 KB.
          type: array
          items:
            $ref: '#/components/schemas/Entry'
    Entry:
      id: Entry
      description: A key/value pair to be used for storing metadata.
      type: object
      properties:
        key:
          description: Optional. Key for the metadata entry.
          type: string
        value:
          description: >-
            Optional. Value for the metadata entry. These are free-form strings,
            and only have meaning as interpreted by the image running in the
            instance. The only restriction placed on values is that their size
            must be less than or equal to 262144 bytes (256 KiB).
          type: string
    ServiceAccount:
      id: ServiceAccount
      description: A service account.
      type: object
      properties:
        email:
          description: Optional. Email address of the service account.
          type: string
        scopes:
          description: >-
            Optional. The list of scopes to be made available for this service
            account.
          type: array
          items:
            type: string
    Scheduling:
      id: Scheduling
      description: Sets the scheduling options for an Instance.
      type: object
      properties:
        onHostMaintenance:
          description: Optional. Defines the maintenance behavior for this instance.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              Tells Compute Engine to terminate and (optionally) restart the
              instance away from the maintenance activity.
            - >-
              Default, Allows Compute Engine to automatically migrate instances
              out of the way of maintenance events.
          enum:
            - ON_HOST_MAINTENANCE_UNSPECIFIED
            - TERMINATE
            - MIGRATE
        automaticRestart:
          description: >-
            Optional. Specifies whether the instance should be automatically
            restarted if it is terminated by Compute Engine (not terminated by a
            user).
          type: boolean
        preemptible:
          description: Optional. Defines whether the instance is preemptible.
          type: boolean
        nodeAffinities:
          description: >-
            Optional. A set of node affinity and anti-affinity configurations.
            Overrides reservationAffinity.
          type: array
          items:
            $ref: '#/components/schemas/NodeAffinity'
        minNodeCpus:
          description: >-
            Optional. The minimum number of virtual CPUs this instance will
            consume when running on a sole-tenant node.
          type: integer
          format: int32
        provisioningModel:
          description: Optional. Specifies the provisioning model of the instance.
          type: string
          enumDescriptions:
            - Default value. This value is not used.
            - Standard provisioning with user controlled runtime, no discounts.
            - Heavily discounted, no guaranteed runtime.
          enum:
            - PROVISIONING_MODEL_UNSPECIFIED
            - STANDARD
            - SPOT
        instanceTerminationAction:
          description: Optional. Specifies the termination action for the instance.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Delete the VM.
            - Stop the VM without storing in-memory content. default action.
          enum:
            - INSTANCE_TERMINATION_ACTION_UNSPECIFIED
            - DELETE
            - STOP
        localSsdRecoveryTimeout:
          description: >-
            Optional. Specifies the maximum amount of time a Local Ssd Vm should
            wait while recovery of the Local Ssd state is attempted. Its value
            should be in between 0 and 168 hours with hour granularity and the
            default value being 1 hour.
          $ref: '#/components/schemas/SchedulingDuration'
    NodeAffinity:
      id: NodeAffinity
      description: >-
        Node Affinity: the configuration of desired nodes onto which this
        Instance could be scheduled.
      type: object
      properties:
        key:
          description: Optional. Corresponds to the label key of Node resource.
          type: string
        operator:
          description: Optional. Defines the operation of node selection.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Requires Compute Engine to seek for matched nodes.
            - Requires Compute Engine to avoid certain nodes.
          enum:
            - OPERATOR_UNSPECIFIED
            - IN
            - NOT_IN
        values:
          description: Optional. Corresponds to the label values of Node resource.
          type: array
          items:
            type: string
    SchedulingDuration:
      id: SchedulingDuration
      description: >-
        A SchedulingDuration represents a fixed-length span of time represented
        as a count of seconds and fractions of seconds at nanosecond resolution.
        It is independent of any calendar and concepts like "day" or "month".
        Range is approximately 10,000 years.
      type: object
      properties:
        seconds:
          description: Optional. Span of time at a resolution of a second.
          type: string
          format: int64
        nanos:
          description: >-
            Optional. Span of time that's a fraction of a second at nanosecond
            resolution.
          type: integer
          format: int32
    AcceleratorConfig:
      id: AcceleratorConfig
      description: >-
        A specification of the type and number of accelerator cards attached to
        the instance.
      type: object
      properties:
        acceleratorType:
          description: >-
            Optional. Full or partial URL of the accelerator type resource to
            attach to this instance.
          type: string
        acceleratorCount:
          description: >-
            Optional. The number of the guest accelerator cards exposed to this
            instance.
          type: integer
          format: int32
    CloudSqlInstanceBackupProperties:
      id: CloudSqlInstanceBackupProperties
      description: >-
        CloudSqlInstanceBackupProperties represents Cloud SQL Instance Backup
        properties.
      type: object
      properties:
        databaseInstalledVersion:
          description: >-
            Output only. The installed database version of the Cloud SQL
            instance when the backup was taken.
          readOnly: true
          type: string
        finalBackup:
          description: Output only. Whether the backup is a final backup.
          readOnly: true
          type: boolean
        sourceInstance:
          description: >-
            Output only. The source instance of the backup. Format:
            projects/{project}/instances/{instance}
          readOnly: true
          type: string
        instanceTier:
          description: >-
            Output only. The tier (or machine type) for this instance. Example:
            `db-custom-1-3840`
          readOnly: true
          type: string
    BackupApplianceBackupProperties:
      id: BackupApplianceBackupProperties
      description: >-
        BackupApplianceBackupProperties represents BackupDR backup appliance's
        properties.
      type: object
      properties:
        generationId:
          description: >-
            Output only. The numeric generation ID of the backup (monotonically
            increasing).
          readOnly: true
          type: integer
          format: int32
        finalizeTime:
          description: >-
            Output only. The time when this backup object was finalized (if
            none, backup is not finalized).
          readOnly: true
          type: string
          format: google-datetime
        recoveryRangeStartTime:
          description: Optional. The earliest timestamp of data available in this Backup.
          type: string
          format: google-datetime
        recoveryRangeEndTime:
          description: Optional. The latest timestamp of data available in this Backup.
          type: string
          format: google-datetime
    DiskBackupProperties:
      id: DiskBackupProperties
      description: DiskBackupProperties represents the properties of a Disk backup.
      type: object
      properties:
        description:
          description: A description of the source disk.
          type: string
        licenses:
          description: >-
            A list of publicly available licenses that are applicable to this
            backup. This is applicable if the original image had licenses
            attached, e.g. Windows image.
          type: array
          items:
            type: string
        guestOsFeature:
          description: A list of guest OS features that are applicable to this backup.
          type: array
          items:
            $ref: '#/components/schemas/GuestOsFeature'
        architecture:
          description: >-
            The architecture of the source disk. Valid values are ARM64 or
            X86_64.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Disks with architecture X86_64
            - Disks with architecture ARM64
          enum:
            - ARCHITECTURE_UNSPECIFIED
            - X86_64
            - ARM64
        type:
          description: The URL of the type of the disk.
          type: string
        sizeGb:
          description: Size(in GB) of the source disk.
          type: string
          format: int64
        region:
          description: >-
            Region and zone are mutually exclusive fields. The URL of the region
            of the source disk.
          type: string
        zone:
          description: The URL of the Zone where the source disk.
          type: string
        replicaZones:
          description: The URL of the Zones where the source disk should be replicated.
          type: array
          items:
            type: string
        sourceDisk:
          description: The source disk used to create this backup.
          type: string
        accessMode:
          description: The access mode of the source disk.
          type: string
        provisionedIops:
          description: The number of IOPS provisioned for the source disk.
          type: string
          format: int64
        provisionedThroughput:
          description: The number of throughput provisioned for the source disk.
          type: string
          format: int64
        physicalBlockSizeBytes:
          description: The physical block size of the source disk.
          type: string
          format: int64
        enableConfidentialCompute:
          description: >-
            Indicates whether the source disk is using confidential compute
            mode.
          type: boolean
        storagePool:
          description: The storage pool of the source disk.
          type: string
        labels:
          description: The labels of the source disk.
          type: object
          additionalProperties:
            type: string
    GCPBackupPlanInfo:
      id: GCPBackupPlanInfo
      description: >-
        GCPBackupPlanInfo captures the plan configuration details of Google
        Cloud resources at the time of backup.
      type: object
      properties:
        backupPlan:
          description: >-
            Resource name of backup plan by which workload is protected at the
            time of the backup. Format:
            projects/{project}/locations/{location}/backupPlans/{backupPlanId}
          type: string
        backupPlanRuleId:
          description: >-
            The rule id of the backup plan which triggered this backup in case
            of scheduled backup or used for
          type: string
        backupPlanRevisionName:
          description: >-
            Resource name of the backup plan revision which triggered this
            backup in case of scheduled backup or used for on demand backup.
            Format:
            projects/{project}/locations/{location}/backupPlans/{backupPlanId}/revisions/{revisionId}
          type: string
        backupPlanRevisionId:
          description: >-
            The user friendly id of the backup plan revision which triggered
            this backup in case of scheduled backup or used for on demand
            backup.
          type: string
    RestoreBackupRequest:
      id: RestoreBackupRequest
      description: Request message for restoring from a Backup.
      type: object
      properties:
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes after the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
        computeInstanceTargetEnvironment:
          description: Compute Engine target environment to be used during restore.
          $ref: '#/components/schemas/ComputeInstanceTargetEnvironment'
        diskTargetEnvironment:
          description: Disk target environment to be used during restore.
          $ref: '#/components/schemas/DiskTargetEnvironment'
        regionDiskTargetEnvironment:
          description: Region disk target environment to be used during restore.
          $ref: '#/components/schemas/RegionDiskTargetEnvironment'
        computeInstanceRestoreProperties:
          description: Compute Engine instance properties to be overridden during restore.
          $ref: '#/components/schemas/ComputeInstanceRestoreProperties'
        diskRestoreProperties:
          description: Disk properties to be overridden during restore.
          $ref: '#/components/schemas/DiskRestoreProperties'
    ComputeInstanceTargetEnvironment:
      id: ComputeInstanceTargetEnvironment
      description: >-
        ComputeInstanceTargetEnvironment represents Compute Engine target
        environment to be used during restore.
      type: object
      properties:
        project:
          description: Required. Target project for the Compute Engine instance.
          type: string
        zone:
          description: Required. The zone of the Compute Engine instance.
          type: string
    DiskTargetEnvironment:
      id: DiskTargetEnvironment
      description: DiskTargetEnvironment represents the target environment for the disk.
      type: object
      properties:
        project:
          description: Required. Target project for the disk.
          type: string
        zone:
          description: Required. Target zone for the disk.
          type: string
    RegionDiskTargetEnvironment:
      id: RegionDiskTargetEnvironment
      description: >-
        RegionDiskTargetEnvironment represents the target environment for the
        disk.
      type: object
      properties:
        project:
          description: Required. Target project for the disk.
          type: string
        region:
          description: Required. Target region for the disk.
          type: string
        replicaZones:
          description: Required. Target URLs of the replica zones for the disk.
          type: array
          items:
            type: string
    ComputeInstanceRestoreProperties:
      id: ComputeInstanceRestoreProperties
      description: >-
        ComputeInstanceRestoreProperties represents Compute Engine instance
        properties to be overridden during restore.
      type: object
      properties:
        name:
          description: Required. Name of the compute instance.
          type: string
        advancedMachineFeatures:
          description: Optional. Controls for advanced machine-related behavior features.
          $ref: '#/components/schemas/AdvancedMachineFeatures'
        canIpForward:
          description: >-
            Optional. Allows this instance to send and receive packets with
            non-matching destination or source IPs.
          type: boolean
        confidentialInstanceConfig:
          description: Optional. Controls Confidential compute options on the instance
          $ref: '#/components/schemas/ConfidentialInstanceConfig'
        deletionProtection:
          description: Optional. Whether the resource should be protected against deletion.
          type: boolean
        description:
          description: >-
            Optional. An optional description of this resource. Provide this
            property when you create the resource.
          type: string
        disks:
          description: >-
            Optional. Array of disks associated with this instance. Persistent
            disks must be created before you can assign them. Source regional
            persistent disks will be restored with default replica zones if not
            specified.
          type: array
          items:
            $ref: '#/components/schemas/AttachedDisk'
        displayDevice:
          description: Optional. Enables display device for the instance.
          $ref: '#/components/schemas/DisplayDevice'
        guestAccelerators:
          description: >-
            Optional. A list of the type and count of accelerator cards attached
            to the instance.
          type: array
          items:
            $ref: '#/components/schemas/AcceleratorConfig'
        hostname:
          description: >-
            Optional. Specifies the hostname of the instance. The specified
            hostname must be RFC1035 compliant. If hostname is not specified,
            the default hostname is [INSTANCE_NAME].c.[PROJECT_ID].internal when
            using the global DNS, and
            [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal when using zonal DNS.
          type: string
        instanceEncryptionKey:
          description: >-
            Optional. Encrypts suspended data for an instance with a
            customer-managed encryption key.
          $ref: '#/components/schemas/CustomerEncryptionKey'
        keyRevocationActionType:
          description: Optional. KeyRevocationActionType of the instance.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Indicates user chose no operation.
            - Indicates user chose to opt for VM shutdown on key revocation.
          enum:
            - KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED
            - NONE
            - STOP
        labels:
          description: Optional. Labels to apply to this instance.
          type: object
          additionalProperties:
            type: string
        machineType:
          description: >-
            Optional. Full or partial URL of the machine type resource to use
            for this instance.
          type: string
        metadata:
          description: Optional. This includes custom metadata and predefined keys.
          $ref: '#/components/schemas/Metadata'
        minCpuPlatform:
          description: Optional. Minimum CPU platform to use for this instance.
          type: string
        networkInterfaces:
          description: >-
            Optional. An array of network configurations for this instance.
            These specify how interfaces are configured to interact with other
            network services, such as connecting to the internet. Multiple
            interfaces are supported per instance. Required to restore in
            different project or region.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
        networkPerformanceConfig:
          description: >-
            Optional. Configure network performance such as egress bandwidth
            tier.
          $ref: '#/components/schemas/NetworkPerformanceConfig'
        params:
          description: >-
            Input only. Additional params passed with the request, but not
            persisted as part of resource payload.
          $ref: '#/components/schemas/InstanceParams'
        privateIpv6GoogleAccess:
          description: >-
            Optional. The private IPv6 google access type for the VM. If not
            specified, use INHERIT_FROM_SUBNETWORK as default.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              Each network interface inherits PrivateIpv6GoogleAccess from its
              subnetwork.
            - >-
              Outbound private IPv6 access from VMs in this subnet to Google
              services. If specified, the subnetwork who is attached to the
              instance's default network interface will be assigned an internal
              IPv6 prefix if it doesn't have before.
            - >-
              Bidirectional private IPv6 access to/from Google services. If
              specified, the subnetwork who is attached to the instance's
              default network interface will be assigned an internal IPv6 prefix
              if it doesn't have before.
          enum:
            - INSTANCE_PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED
            - INHERIT_FROM_SUBNETWORK
            - ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE
            - ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE
        reservationAffinity:
          description: >-
            Optional. Specifies the reservations that this instance can consume
            from.
          $ref: '#/components/schemas/AllocationAffinity'
        resourcePolicies:
          description: >-
            Optional. Resource policies applied to this instance. By default, no
            resource policies will be applied.
          type: array
          items:
            type: string
        scheduling:
          description: Optional. Sets the scheduling options for this instance.
          $ref: '#/components/schemas/Scheduling'
        serviceAccounts:
          description: >-
            Optional. A list of service accounts, with their specified scopes,
            authorized for this instance. Only one service account per VM
            instance is supported.
          type: array
          items:
            $ref: '#/components/schemas/ServiceAccount'
        tags:
          description: >-
            Optional. Tags to apply to this instance. Tags are used to identify
            valid sources or targets for network firewalls and are specified by
            the client during instance creation.
          $ref: '#/components/schemas/Tags'
    AdvancedMachineFeatures:
      id: AdvancedMachineFeatures
      description: Specifies options for controlling advanced machine features.
      type: object
      properties:
        enableNestedVirtualization:
          description: >-
            Optional. Whether to enable nested virtualization or not (default is
            false).
          type: boolean
        threadsPerCore:
          description: >-
            Optional. The number of threads per physical core. To disable
            simultaneous multithreading (SMT) set this to 1. If unset, the
            maximum number of threads supported per core by the underlying
            processor is assumed.
          type: integer
          format: int32
        visibleCoreCount:
          description: >-
            Optional. The number of physical cores to expose to an instance.
            Multiply by the number of threads per core to compute the total
            number of virtual CPUs to expose to the instance. If unset, the
            number of cores is inferred from the instance's nominal CPU count
            and the underlying platform's SMT width.
          type: integer
          format: int32
        enableUefiNetworking:
          description: Optional. Whether to enable UEFI networking for instance creation.
          type: boolean
    ConfidentialInstanceConfig:
      id: ConfidentialInstanceConfig
      description: A set of Confidential Instance options.
      type: object
      properties:
        enableConfidentialCompute:
          description: >-
            Optional. Defines whether the instance should have confidential
            compute enabled.
          type: boolean
    DisplayDevice:
      id: DisplayDevice
      description: A set of Display Device options
      type: object
      properties:
        enableDisplay:
          description: Optional. Enables display for the Compute Engine VM
          type: boolean
    NetworkPerformanceConfig:
      id: NetworkPerformanceConfig
      description: Network performance configuration.
      type: object
      properties:
        totalEgressBandwidthTier:
          description: Optional. The tier of the total egress bandwidth.
          type: string
          enumDescriptions:
            - This value is unused.
            - Default network performance config.
            - Tier 1 network performance config.
          enum:
            - TIER_UNSPECIFIED
            - DEFAULT
            - TIER_1
    InstanceParams:
      id: InstanceParams
      description: Additional instance params.
      type: object
      properties:
        resourceManagerTags:
          description: Optional. Resource manager tags to be bound to the instance.
          type: object
          additionalProperties:
            type: string
    AllocationAffinity:
      id: AllocationAffinity
      description: Specifies the reservations that this instance can consume from.
      type: object
      properties:
        consumeReservationType:
          description: >-
            Optional. Specifies the type of reservation from which this instance
            can consume
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Do not consume from any allocated capacity.
            - Consume any allocation available.
            - >-
              Must consume from a specific reservation. Must specify key value
              fields for specifying the reservations.
          enum:
            - TYPE_UNSPECIFIED
            - NO_RESERVATION
            - ANY_RESERVATION
            - SPECIFIC_RESERVATION
        key:
          description: Optional. Corresponds to the label key of a reservation resource.
          type: string
        values:
          description: Optional. Corresponds to the label values of a reservation resource.
          type: array
          items:
            type: string
    DiskRestoreProperties:
      id: DiskRestoreProperties
      description: DiskRestoreProperties represents the properties of a Disk restore.
      type: object
      properties:
        name:
          description: Required. Name of the disk.
          type: string
        description:
          description: >-
            Optional. An optional description of this resource. Provide this
            property when you create the resource.
          type: string
        sizeGb:
          description: Required. The size of the disk in GB.
          type: string
          format: int64
        licenses:
          description: >-
            Optional. A list of publicly available licenses that are applicable
            to this backup. This is applicable if the original image had
            licenses attached, e.g. Windows image
          type: array
          items:
            type: string
        guestOsFeature:
          description: >-
            Optional. A list of features to enable in the guest operating
            system. This is applicable only for bootable images.
          type: array
          items:
            $ref: '#/components/schemas/GuestOsFeature'
        diskEncryptionKey:
          description: >-
            Optional. Encrypts the disk using a customer-supplied encryption key
            or a customer-managed encryption key.
          $ref: '#/components/schemas/CustomerEncryptionKey'
        physicalBlockSizeBytes:
          description: >-
            Optional. Physical block size of the persistent disk, in bytes. If
            not present in a request, a default value is used. Currently, the
            supported size is 4096.
          type: string
          format: int64
        provisionedIops:
          description: >-
            Optional. Indicates how many IOPS to provision for the disk. This
            sets the number of I/O operations per second that the disk can
            handle.
          type: string
          format: int64
        provisionedThroughput:
          description: >-
            Optional. Indicates how much throughput to provision for the disk.
            This sets the number of throughput MB per second that the disk can
            handle.
          type: string
          format: int64
        enableConfidentialCompute:
          description: >-
            Optional. Indicates whether this disk is using confidential compute
            mode. Encryption with a Cloud KMS key is required to enable this
            option.
          type: boolean
        storagePool:
          description: >-
            Optional. The storage pool in which the new disk is created. You can
            provide this as a partial or full URL to the resource.
          type: string
        accessMode:
          description: Optional. The access mode of the disk.
          type: string
          enumDescriptions:
            - >-
              The default AccessMode, means the disk can be attached to single
              instance in RW mode.
            - >-
              The AccessMode means the disk can be attached to multiple
              instances in RW mode.
            - >-
              The AccessMode means the disk can be attached to multiple
              instances in RO mode.
          enum:
            - READ_WRITE_SINGLE
            - READ_WRITE_MANY
            - READ_ONLY_MANY
        architecture:
          description: >-
            Optional. The architecture of the source disk. Valid values are
            ARM64 or X86_64.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Disks with architecture X86_64
            - Disks with architecture ARM64
          enum:
            - ARCHITECTURE_UNSPECIFIED
            - X86_64
            - ARM64
        resourcePolicy:
          description: Optional. Resource policies applied to this disk.
          type: array
          items:
            type: string
        type:
          description: >-
            Required. URL of the disk type resource describing which disk type
            to use to create the disk.
          type: string
        labels:
          description: >-
            Optional. Labels to apply to this disk. These can be modified later
            using setLabels method. Label values can be empty.
          type: object
          additionalProperties:
            type: string
        resourceManagerTags:
          description: Optional. Resource manager tags to be bound to the disk.
          type: object
          additionalProperties:
            type: string
    BackupPlan:
      id: BackupPlan
      description: >-
        A `BackupPlan` specifies some common fields, such as `description` as
        well as one or more `BackupRule` messages. Each `BackupRule` has a
        retention policy and defines a schedule by which the system is to
        perform backup workloads.
      type: object
      properties:
        name:
          description: >-
            Output only. Identifier. The resource name of the `BackupPlan`.
            Format:
            `projects/{project}/locations/{location}/backupPlans/{backup_plan}`
          readOnly: true
          type: string
        description:
          description: >-
            Optional. The description of the `BackupPlan` resource. The
            description allows for additional details about `BackupPlan` and its
            use cases to be provided. An example description is the following:
            "This is a backup plan that performs a daily backup at 6pm and
            retains data for 3 months". The description must be at most 2048
            characters.
          type: string
        labels:
          description: >-
            Optional. This collection of key/value pairs allows for custom
            labels to be supplied by the user. Example, {"tag": "Weekly"}.
          type: object
          additionalProperties:
            type: string
        createTime:
          description: Output only. When the `BackupPlan` was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. When the `BackupPlan` was last updated.
          readOnly: true
          type: string
          format: google-datetime
        backupRules:
          description: Optional. The backup rules for this `BackupPlan`.
          type: array
          items:
            $ref: '#/components/schemas/BackupRule'
        state:
          description: Output only. The `State` for the `BackupPlan`.
          readOnly: true
          type: string
          enumDescriptions:
            - State not set.
            - The resource is being created.
            - The resource has been created and is fully usable.
            - The resource is being deleted.
            - The resource has been created but is not usable.
            - The resource is being updated.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - INACTIVE
            - UPDATING
        resourceType:
          description: >-
            Required. The resource type to which the `BackupPlan` will be
            applied. Examples include, "compute.googleapis.com/Instance",
            "sqladmin.googleapis.com/Instance",
            "alloydb.googleapis.com/Cluster", "compute.googleapis.com/Disk".
          type: string
        etag:
          description: >-
            Optional. `etag` is returned from the service in the response. As a
            user of the service, you may provide an etag value in this field to
            prevent stale resources.
          type: string
        backupVault:
          description: >-
            Required. Resource name of backup vault which will be used as
            storage location for backups. Format:
            projects/{project}/locations/{location}/backupVaults/{backupvault}
          type: string
        backupVaultServiceAccount:
          description: >-
            Output only. The Google Cloud Platform Service Account to be used by
            the BackupVault for taking backups. Specify the email address of the
            Backup Vault Service Account.
          readOnly: true
          type: string
        logRetentionDays:
          description: >-
            Optional. Applicable only for CloudSQL resource_type. Configures how
            long logs will be stored. It is defined in “days”. This value should
            be greater than or equal to minimum enforced log retention duration
            of the backup vault.
          type: string
          format: int64
        supportedResourceTypes:
          description: Output only. All resource types to which backupPlan can be applied.
          readOnly: true
          type: array
          items:
            type: string
        revisionId:
          description: >-
            Output only. The user friendly revision ID of the
            `BackupPlanRevision`. Example: v0, v1, v2, etc.
          readOnly: true
          type: string
        revisionName:
          description: >-
            Output only. The resource id of the `BackupPlanRevision`. Format:
            `projects/{project}/locations/{location}/backupPlans/{backup_plan}/revisions/{revision_id}`
          readOnly: true
          type: string
    BackupRule:
      id: BackupRule
      description: '`BackupRule` binds the backup schedule to a retention policy.'
      type: object
      properties:
        ruleId:
          description: >-
            Required. Immutable. The unique id of this `BackupRule`. The
            `rule_id` is unique per `BackupPlan`.The `rule_id` must start with a
            lowercase letter followed by up to 62 lowercase letters, numbers, or
            hyphens. Pattern, /a-z{,62}/.
          type: string
        backupRetentionDays:
          description: >-
            Required. Configures the duration for which backup data will be
            kept. It is defined in “days”. The value should be greater than or
            equal to minimum enforced retention of the backup vault. Minimum
            value is 1 and maximum value is 36159 for custom retention on-demand
            backup. Minimum and maximum values are workload specific for all
            other rules.
          type: integer
          format: int32
        standardSchedule:
          description: >-
            Optional. Defines a schedule that runs within the confines of a
            defined window of time.
          $ref: '#/components/schemas/StandardSchedule'
    StandardSchedule:
      id: StandardSchedule
      description: >-
        `StandardSchedule` defines a schedule that run within the confines of a
        defined window of days. We can define recurrence type for schedule as
        HOURLY, DAILY, WEEKLY, MONTHLY or YEARLY.
      type: object
      properties:
        recurrenceType:
          description: Required. Specifies the `RecurrenceType` for the schedule.
          type: string
          enumDescriptions:
            - recurrence type not set
            - The `BackupRule` is to be applied hourly.
            - The `BackupRule` is to be applied daily.
            - The `BackupRule` is to be applied weekly.
            - The `BackupRule` is to be applied monthly.
            - The `BackupRule` is to be applied yearly.
          enum:
            - RECURRENCE_TYPE_UNSPECIFIED
            - HOURLY
            - DAILY
            - WEEKLY
            - MONTHLY
            - YEARLY
        hourlyFrequency:
          description: >-
            Optional. Specifies frequency for hourly backups. A hourly frequency
            of 2 means jobs will run every 2 hours from start time till end time
            defined. This is required for `recurrence_type`, `HOURLY` and is not
            applicable otherwise. A validation error will occur if a value is
            supplied and `recurrence_type` is not `HOURLY`. Value of hourly
            frequency should be between 4 and 23. Reason for limit : We found
            that there is bandwidth limitation of 3GB/S for GMI while taking a
            backup and 5GB/S while doing a restore. Given the amount of parallel
            backups and restore we are targeting, this will potentially take the
            backup time to mins and hours (in worst case scenario).
          type: integer
          format: int32
        daysOfWeek:
          description: >-
            Optional. Specifies days of week like, MONDAY or TUESDAY, on which
            jobs will run. This is required for `recurrence_type`, `WEEKLY` and
            is not applicable otherwise. A validation error will occur if a
            value is supplied and `recurrence_type` is not `WEEKLY`.
          type: array
          items:
            type: string
            enumDescriptions:
              - The day of the week is unspecified.
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
              - Sunday
            enum:
              - DAY_OF_WEEK_UNSPECIFIED
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
        daysOfMonth:
          description: >-
            Optional. Specifies days of months like 1, 5, or 14 on which jobs
            will run. Values for `days_of_month` are only applicable for
            `recurrence_type`, `MONTHLY` and `YEARLY`. A validation error will
            occur if other values are supplied.
          type: array
          items:
            type: integer
            format: int32
        weekDayOfMonth:
          description: >-
            Optional. Specifies a week day of the month like, FIRST SUNDAY or
            LAST MONDAY, on which jobs will run. This will be specified by two
            fields in `WeekDayOfMonth`, one for the day, e.g. `MONDAY`, and one
            for the week, e.g. `LAST`. This field is only applicable for
            `recurrence_type`, `MONTHLY` and `YEARLY`. A validation error will
            occur if other values are supplied.
          $ref: '#/components/schemas/WeekDayOfMonth'
        months:
          description: >-
            Optional. Specifies the months of year, like `FEBRUARY` and/or
            `MAY`, on which jobs will run. This field is only applicable when
            `recurrence_type` is `YEARLY`. A validation error will occur if
            other values are supplied.
          type: array
          items:
            type: string
            enumDescriptions:
              - The unspecified month.
              - The month of January.
              - The month of February.
              - The month of March.
              - The month of April.
              - The month of May.
              - The month of June.
              - The month of July.
              - The month of August.
              - The month of September.
              - The month of October.
              - The month of November.
              - The month of December.
            enum:
              - MONTH_UNSPECIFIED
              - JANUARY
              - FEBRUARY
              - MARCH
              - APRIL
              - MAY
              - JUNE
              - JULY
              - AUGUST
              - SEPTEMBER
              - OCTOBER
              - NOVEMBER
              - DECEMBER
        backupWindow:
          description: >-
            Required. A BackupWindow defines the window of day during which
            backup jobs will run. Jobs are queued at the beginning of the window
            and will be marked as `NOT_RUN` if they do not start by the end of
            the window. Note: running jobs will not be cancelled at the end of
            the window.
          $ref: '#/components/schemas/BackupWindow'
        timeZone:
          description: >-
            Required. The time zone to be used when interpreting the schedule.
            The value of this field must be a time zone name from the IANA tz
            database. See
            https://en.wikipedia.org/wiki/List_of_tz_database_time_zones for the
            list of valid timezone names. For e.g., Europe/Paris.
          type: string
    WeekDayOfMonth:
      id: WeekDayOfMonth
      description: >-
        `WeekDayOfMonth` defines the week day of the month on which the backups
        will run. The message combines a `WeekOfMonth` and `DayOfWeek` to
        produce values like `FIRST`/`MONDAY` or `LAST`/`FRIDAY`.
      type: object
      properties:
        weekOfMonth:
          description: Required. Specifies the week of the month.
          type: string
          enumDescriptions:
            - The zero value. Do not use.
            - The first week of the month.
            - The second week of the month.
            - The third week of the month.
            - The fourth week of the month.
            - The last week of the month.
          enum:
            - WEEK_OF_MONTH_UNSPECIFIED
            - FIRST
            - SECOND
            - THIRD
            - FOURTH
            - LAST
        dayOfWeek:
          description: Required. Specifies the day of the week.
          type: string
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
    BackupWindow:
      id: BackupWindow
      description: >-
        `BackupWindow` defines a window of the day during which backup jobs will
        run.
      type: object
      properties:
        startHourOfDay:
          description: >-
            Required. The hour of day (0-23) when the window starts for e.g. if
            value of start hour of day is 6 that mean backup window start at
            6:00.
          type: integer
          format: int32
        endHourOfDay:
          description: >-
            Required. The hour of day (1-24) when the window end for e.g. if
            value of end hour of day is 10 that mean backup window end time is
            10:00. End hour of day should be greater than start hour of day. 0
            <= start_hour_of_day < end_hour_of_day <= 24 End hour of day is not
            include in backup window that mean if end_hour_of_day= 10 jobs
            should start before 10:00.
          type: integer
          format: int32
    ListBackupPlansResponse:
      id: ListBackupPlansResponse
      description: The response message for getting a list of `BackupPlan`.
      type: object
      properties:
        backupPlans:
          description: >-
            The list of `BackupPlans` in the project for the specified location.
            If the `{location}` value in the request is "-", the response
            contains a list of resources from all locations. In case any
            location is unreachable, the response will only return backup plans
            in reachable locations and the 'unreachable' field will be populated
            with a list of unreachable locations. BackupPlan
          type: array
          items:
            $ref: '#/components/schemas/BackupPlan'
        nextPageToken:
          description: >-
            A token which may be sent as page_token in a subsequent
            `ListBackupPlans` call to retrieve the next page of results. If this
            field is omitted or empty, then there are no more results to return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    BackupPlanRevision:
      id: BackupPlanRevision
      description: >-
        `BackupPlanRevision` represents a snapshot of a `BackupPlan` at a point
        in time.
      type: object
      properties:
        name:
          description: >-
            Output only. Identifier. The resource name of the
            `BackupPlanRevision`. Format:
            `projects/{project}/locations/{location}/backupPlans/{backup_plan}/revisions/{revision}`
          readOnly: true
          type: string
        revisionId:
          description: >-
            Output only. The user friendly revision ID of the
            `BackupPlanRevision`. Example: v0, v1, v2, etc.
          readOnly: true
          type: string
        state:
          description: Output only. Resource State
          readOnly: true
          type: string
          enumDescriptions:
            - State not set.
            - The resource is being created.
            - The resource has been created and is fully usable.
            - The resource is being deleted.
            - The resource has been created but is not usable.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - INACTIVE
        backupPlanSnapshot:
          description: The Backup Plan being encompassed by this revision.
          $ref: '#/components/schemas/BackupPlan'
        createTime:
          description: Output only. The timestamp that the revision was created.
          readOnly: true
          type: string
          format: google-datetime
    ListBackupPlanRevisionsResponse:
      id: ListBackupPlanRevisionsResponse
      description: The response message for getting a list of `BackupPlanRevision`.
      type: object
      properties:
        backupPlanRevisions:
          description: >-
            The list of `BackupPlanRevisions` in the project for the specified
            location. If the `{location}` value in the request is "-", the
            response contains a list of resources from all locations. In case
            any location is unreachable, the response will only return backup
            plans in reachable locations and the 'unreachable' field will be
            populated with a list of unreachable locations.
          type: array
          items:
            $ref: '#/components/schemas/BackupPlanRevision'
        nextPageToken:
          description: >-
            A token which may be sent as page_token in a subsequent
            `ListBackupPlanRevisions` call to retrieve the next page of results.
            If this field is omitted or empty, then there are no more results to
            return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    BackupPlanAssociation:
      id: BackupPlanAssociation
      description: >-
        A BackupPlanAssociation represents a single BackupPlanAssociation which
        contains details like workload, backup plan etc
      type: object
      properties:
        name:
          description: >-
            Output only. Identifier. The resource name of BackupPlanAssociation
            in below format Format :
            projects/{project}/locations/{location}/backupPlanAssociations/{backupPlanAssociationId}
          readOnly: true
          type: string
        resourceType:
          description: >-
            Required. Immutable. Resource type of workload on which backupplan
            is applied
          type: string
        resource:
          description: >-
            Required. Immutable. Resource name of workload on which the backup
            plan is applied. The format can either be the resource name (e.g.,
            "projects/my-project/zones/us-central1-a/instances/my-instance") or
            the full resource URI (e.g.,
            "https://www.googleapis.com/compute/v1/projects/my-project/zones/us-central1-a/instances/my-instance").
          type: string
        backupPlan:
          description: >-
            Required. Resource name of backup plan which needs to be applied on
            workload. Format:
            projects/{project}/locations/{location}/backupPlans/{backupPlanId}
          type: string
        createTime:
          description: Output only. The time when the instance was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the instance was updated.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. The BackupPlanAssociation resource state.
          readOnly: true
          type: string
          enumDescriptions:
            - State not set.
            - The resource is being created.
            - The resource has been created and is fully usable.
            - The resource is being deleted.
            - The resource has been created but is not usable.
            - The resource is being updated.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - INACTIVE
            - UPDATING
        rulesConfigInfo:
          description: Output only. The config info related to backup rules.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RuleConfigInfo'
        dataSource:
          description: >-
            Output only. Resource name of data source which will be used as
            storage location for backups taken. Format :
            projects/{project}/locations/{location}/backupVaults/{backupvault}/dataSources/{datasource}
          readOnly: true
          type: string
        cloudSqlInstanceBackupPlanAssociationProperties:
          description: >-
            Output only. Cloud SQL instance's backup plan association
            properties.
          readOnly: true
          $ref: '#/components/schemas/CloudSqlInstanceBackupPlanAssociationProperties'
        backupPlanRevisionId:
          description: >-
            Output only. The user friendly revision ID of the
            `BackupPlanRevision`. Example: v0, v1, v2, etc.
          readOnly: true
          type: string
        backupPlanRevisionName:
          description: >-
            Output only. The resource id of the `BackupPlanRevision`. Format:
            `projects/{project}/locations/{location}/backupPlans/{backup_plan}/revisions/{revision_id}`
          readOnly: true
          type: string
    RuleConfigInfo:
      id: RuleConfigInfo
      description: Message for rules config info.
      type: object
      properties:
        ruleId:
          description: Output only. Backup Rule id fetched from backup plan.
          readOnly: true
          type: string
        lastBackupState:
          description: Output only. The last backup state for rule.
          readOnly: true
          type: string
          enumDescriptions:
            - State not set.
            - The first backup is pending.
            - >-
              The most recent backup could not be run/failed because of the lack
              of permissions.
            - The last backup operation succeeded.
            - The last backup operation failed.
          enum:
            - LAST_BACKUP_STATE_UNSPECIFIED
            - FIRST_BACKUP_PENDING
            - PERMISSION_DENIED
            - SUCCEEDED
            - FAILED
        lastBackupError:
          description: >-
            Output only. google.rpc.Status object to store the last backup
            error.
          readOnly: true
          $ref: '#/components/schemas/Status'
        lastSuccessfulBackupConsistencyTime:
          description: >-
            Output only. The point in time when the last successful backup was
            captured from the source.
          readOnly: true
          type: string
          format: google-datetime
    CloudSqlInstanceBackupPlanAssociationProperties:
      id: CloudSqlInstanceBackupPlanAssociationProperties
      description: Cloud SQL instance's BPA properties.
      type: object
      properties:
        instanceCreateTime:
          description: Output only. The time when the instance was created.
          readOnly: true
          type: string
          format: google-datetime
    ListBackupPlanAssociationsResponse:
      id: ListBackupPlanAssociationsResponse
      description: Response message for List BackupPlanAssociation
      type: object
      properties:
        backupPlanAssociations:
          description: >-
            The list of Backup Plan Associations in the project for the
            specified location. If the `{location}` value in the request is "-",
            the response contains a list of instances from all locations. In
            case any location is unreachable, the response will only return
            backup plan associations in reachable locations and the
            'unreachable' field will be populated with a list of unreachable
            locations.
          type: array
          items:
            $ref: '#/components/schemas/BackupPlanAssociation'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    FetchBackupPlanAssociationsForResourceTypeResponse:
      id: FetchBackupPlanAssociationsForResourceTypeResponse
      description: Response for the FetchBackupPlanAssociationsForResourceType method.
      type: object
      properties:
        backupPlanAssociations:
          description: Output only. The BackupPlanAssociations from the specified parent.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BackupPlanAssociation'
        nextPageToken:
          description: >-
            Output only. A token, which can be sent as `page_token` to retrieve
            the next page. If this field is omitted, there are no subsequent
            pages.
          readOnly: true
          type: string
    TriggerBackupRequest:
      id: TriggerBackupRequest
      description: Request message for triggering a backup.
      type: object
      properties:
        ruleId:
          description: >-
            Optional. backup rule_id for which a backup needs to be triggered.
            If not specified, on-demand backup with custom retention will be
            triggered.
          type: string
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes after the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
    DataSourceReference:
      id: DataSourceReference
      description: DataSourceReference is a reference to a DataSource resource.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the DataSourceReference. Format:
            projects/{project}/locations/{location}/dataSourceReferences/{data_source_reference}
          type: string
        dataSource:
          description: >-
            Output only. The resource name of the DataSource. Format:
            projects/{project}/locations/{location}/backupVaults/{backupVault}/dataSources/{dataSource}
          readOnly: true
          type: string
        createTime:
          description: Output only. The time when the DataSourceReference was created.
          readOnly: true
          type: string
          format: google-datetime
        dataSourceBackupConfigState:
          description: Output only. The backup configuration state of the DataSource.
          readOnly: true
          type: string
          enumDescriptions:
            - The possible states of backup configuration. Status not set.
            - >-
              The data source is actively protected (i.e. there is a
              BackupPlanAssociation or Appliance SLA pointing to it)
            - >-
              The data source is no longer protected (but may have backups under
              it)
          enum:
            - BACKUP_CONFIG_STATE_UNSPECIFIED
            - ACTIVE
            - PASSIVE
        dataSourceBackupCount:
          description: Output only. Number of backups in the DataSource.
          readOnly: true
          type: string
          format: int64
        dataSourceBackupConfigInfo:
          description: Output only. Information of backup configuration on the DataSource.
          readOnly: true
          $ref: '#/components/schemas/DataSourceBackupConfigInfo'
        dataSourceGcpResourceInfo:
          description: >-
            Output only. The GCP resource that the DataSource is associated
            with.
          readOnly: true
          $ref: '#/components/schemas/DataSourceGcpResourceInfo'
    DataSourceBackupConfigInfo:
      id: DataSourceBackupConfigInfo
      description: Information of backup configuration on the DataSource.
      type: object
      properties:
        lastBackupState:
          description: Output only. The status of the last backup in this DataSource
          readOnly: true
          type: string
          enumDescriptions:
            - Status not set.
            - The first backup has not yet completed
            - The most recent backup was successful
            - The most recent backup failed
            - >-
              The most recent backup could not be run/failed because of the lack
              of permissions
          enum:
            - LAST_BACKUP_STATE_UNSPECIFIED
            - FIRST_BACKUP_PENDING
            - SUCCEEDED
            - FAILED
            - PERMISSION_DENIED
        lastSuccessfulBackupConsistencyTime:
          description: >-
            Output only. Timestamp of the last successful backup to this
            DataSource.
          readOnly: true
          type: string
          format: google-datetime
    DataSourceGcpResourceInfo:
      id: DataSourceGcpResourceInfo
      description: The GCP resource that the DataSource is associated with.
      type: object
      properties:
        gcpResourcename:
          description: >-
            Output only. The resource name of the GCP resource. Ex:
            projects/{project}/zones/{zone}/instances/{instance}
          readOnly: true
          type: string
        type:
          description: >-
            Output only. The type of the GCP resource. Ex:
            compute.googleapis.com/Instance
          readOnly: true
          type: string
        location:
          description: >-
            Output only. The location of the GCP resource. Ex:
            //"global"/"unspecified"
          readOnly: true
          type: string
        cloudSqlInstanceProperties:
          description: Output only. The properties of the Cloud SQL instance.
          readOnly: true
          $ref: '#/components/schemas/CloudSqlInstanceDataSourceReferenceProperties'
    CloudSqlInstanceDataSourceReferenceProperties:
      id: CloudSqlInstanceDataSourceReferenceProperties
      description: >-
        CloudSqlInstanceDataSourceReferenceProperties represents the properties
        of a Cloud SQL resource that are stored in the DataSourceReference.
      type: object
      properties:
        name:
          description: >-
            Output only. Name of the Cloud SQL instance backed up by the
            datasource. Format: projects/{project}/instances/{instance}
          readOnly: true
          type: string
        databaseInstalledVersion:
          description: >-
            Output only. The installed database version of the Cloud SQL
            instance.
          readOnly: true
          type: string
        instanceCreateTime:
          description: Output only. The instance creation timestamp.
          readOnly: true
          type: string
          format: google-datetime
        instanceTier:
          description: >-
            Output only. The tier (or machine type) for this instance. Example:
            `db-custom-1-3840`
          readOnly: true
          type: string
    FetchDataSourceReferencesForResourceTypeResponse:
      id: FetchDataSourceReferencesForResourceTypeResponse
      description: Response for the FetchDataSourceReferencesForResourceType method.
      type: object
      properties:
        dataSourceReferences:
          description: The DataSourceReferences from the specified parent.
          type: array
          items:
            $ref: '#/components/schemas/DataSourceReference'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    InitializeServiceRequest:
      id: InitializeServiceRequest
      description: Request message for initializing the service.
      type: object
      properties:
        resourceType:
          description: >-
            Required. The resource type to which the default service config will
            be applied. Examples include, "compute.googleapis.com/Instance" and
            "storage.googleapis.com/Bucket".
          type: string
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes since the
            first request. For example, consider a situation where you make an
            initial request and t he request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
        cloudSqlInstanceInitializationConfig:
          description: Optional. The configuration for initializing a Cloud SQL instance.
          $ref: '#/components/schemas/CloudSqlInstanceInitializationConfig'
    CloudSqlInstanceInitializationConfig:
      id: CloudSqlInstanceInitializationConfig
      description: >-
        CloudSqlInstanceInitializationConfig contains the configuration for
        initializing a Cloud SQL instance.
      type: object
      properties:
        edition:
          description: Required. The edition of the Cloud SQL instance.
          type: string
          enumDescriptions:
            - Unspecified edition.
            - Enterprise edition.
            - Enterprise Plus edition.
          enum:
            - EDITION_UNSPECIFIED
            - ENTERPRISE
            - ENTERPRISE_PLUS
    ListResourceBackupConfigsResponse:
      id: ListResourceBackupConfigsResponse
      description: Response for ListResourceBackupConfigs.
      type: object
      properties:
        resourceBackupConfigs:
          description: The list of ResourceBackupConfigs for the specified scope.
          type: array
          items:
            $ref: '#/components/schemas/ResourceBackupConfig'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    ResourceBackupConfig:
      id: ResourceBackupConfig
      description: >-
        ResourceBackupConfig represents a resource along with its backup
        configurations.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the ResourceBackupConfig. Format:
            projects/{project}/locations/{location}/resourceBackupConfigs/{uid}
          type: string
        uid:
          description: Output only. The unique identifier of the resource backup config.
          readOnly: true
          type: string
        targetResource:
          description: >-
            Output only. The [full resource
            name](https://cloud.google.com/asset-inventory/docs/resource-name-format)
            of the cloud resource that this configuration applies to. Supported
            resource types are ResourceBackupConfig.ResourceType.
          readOnly: true
          type: string
        targetResourceDisplayName:
          description: Output only. The human friendly name of the target resource.
          readOnly: true
          type: string
        targetResourceType:
          description: Output only. The type of the target resource.
          readOnly: true
          type: string
          enumDescriptions:
            - Resource type not set.
            - Cloud SQL instance.
            - Compute Engine VM.
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - CLOUD_SQL_INSTANCE
            - COMPUTE_ENGINE_VM
        targetResourceLabels:
          description: Labels associated with the target resource.
          type: object
          additionalProperties:
            type: string
        backupConfigsDetails:
          description: >-
            Backup configurations applying to the target resource, including
            those targeting its related/child resources. For example, backup
            configuration applicable to Compute Engine disks will be populated
            in this field for a Compute Engine VM which has the disk associated.
          type: array
          items:
            $ref: '#/components/schemas/BackupConfigDetails'
        backupConfigured:
          description: >-
            Output only. Whether the target resource is configured for backup.
            This is true if the backup_configs_details is not empty.
          readOnly: true
          type: boolean
        vaulted:
          description: >-
            Output only. Whether the target resource is protected by a backup
            vault. This is true if the backup_configs_details is not empty and
            any of the ResourceBackupConfig.backup_configs_details has a backup
            configuration with BackupConfigDetails.backup_vault set. set.
          readOnly: true
          type: boolean
    BackupConfigDetails:
      id: BackupConfigDetails
      description: >-
        BackupConfigDetails has information about how the resource is configured
        for backups and about the most recent backup taken for this
        configuration.
      type: object
      properties:
        backupConfigSource:
          description: >-
            Output only. The full resource name of the backup config source
            resource. For example,
            "//backupdr.googleapis.com/v1/projects/{project}/locations/{region}/backupPlans/{backupplanId}"
            or
            "//compute.googleapis.com/projects/{project}/locations/{region}/resourcePolicies/{resourcePolicyId}".
          readOnly: true
          type: string
        backupConfigSourceDisplayName:
          description: Output only. The display name of the backup config source resource.
          readOnly: true
          type: string
        type:
          description: Output only. The type of the backup config resource.
          readOnly: true
          type: string
          enumDescriptions:
            - Backup config type is unspecified.
            - Backup config is Cloud SQL instance's automated backup config.
            - Backup config is Compute Engine Resource Policy.
            - Backup config is Backup and DR's Backup Plan.
            - Backup config is Backup and DR's Template.
          enum:
            - TYPE_UNSPECIFIED
            - CLOUD_SQL_INSTANCE_BACKUP_CONFIG
            - COMPUTE_ENGINE_RESOURCE_POLICY
            - BACKUPDR_BACKUP_PLAN
            - BACKUPDR_TEMPLATE
        state:
          description: Output only. The state of the backup config resource.
          readOnly: true
          type: string
          enumDescriptions:
            - Backup config state not set.
            - The config is in an active state protecting the resource
            - >-
              The config is currently not protecting the resource. Either
              because it is disabled or the owning project has been deleted
              without cleanup of the actual resource.
            - >-
              The config still exists but because of some error state it is not
              protecting the resource. Like the source project is deleted. For
              eg. PlanAssociation, BackupPlan is deleted.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - INACTIVE
            - ERROR
        pitrSettings:
          description: >-
            Output only. Point in time recovery settings of the backup
            configuration resource.
          readOnly: true
          $ref: '#/components/schemas/PitrSettings'
        latestSuccessfulBackupTime:
          description: >-
            Output only. Timestamp of the latest successful backup created via
            this backup configuration.
          readOnly: true
          type: string
          format: google-datetime
        applicableResource:
          description: >-
            Output only. The [full resource
            name](https://cloud.google.com/asset-inventory/docs/resource-name-format)
            of the resource that is applicable for the backup configuration.
            Example:
            "//compute.googleapis.com/projects/{project}/zones/{zone}/instances/{instance}"
          readOnly: true
          type: string
        backupVault:
          description: >-
            Output only. The [full resource
            name](https://cloud.google.com/asset-inventory/docs/resource-name-format)
            of the backup vault that will store the backups generated through
            this backup configuration. Example:
            "//backupdr.googleapis.com/v1/projects/{project}/locations/{region}/backupVaults/{backupvaultId}"
          readOnly: true
          type: string
        backupLocations:
          description: The locations where the backups are to be stored.
          type: array
          items:
            $ref: '#/components/schemas/BackupLocation'
        backupDrPlanConfig:
          description: Backup and DR's Backup Plan specific data.
          $ref: '#/components/schemas/BackupDrPlanConfig'
        backupDrTemplateConfig:
          description: Backup and DR's Template specific data.
          $ref: '#/components/schemas/BackupDrTemplateConfig'
    PitrSettings:
      id: PitrSettings
      description: Point in time recovery settings of the backup configuration resource.
      type: object
      properties:
        retentionDays:
          description: Output only. Number of days to retain the backup.
          readOnly: true
          type: integer
          format: int32
    BackupLocation:
      id: BackupLocation
      description: BackupLocation represents a cloud location where a backup can be stored.
      type: object
      properties:
        type:
          description: Output only. The type of the location.
          readOnly: true
          type: string
          enumDescriptions:
            - Location type is unspecified.
            - Location type is zonal.
            - Location type is regional.
            - Location type is multi regional.
          enum:
            - TYPE_UNSPECIFIED
            - ZONAL
            - REGIONAL
            - MULTI_REGIONAL
        locationId:
          description: 'Output only. The id of the cloud location. Example: "us-central1"'
          readOnly: true
          type: string
    BackupDrPlanConfig:
      id: BackupDrPlanConfig
      description: >-
        BackupDrPlanConfig has additional information about Backup and DR's Plan
        backup configuration.
      type: object
      properties:
        backupDrPlanRules:
          description: Backup rules of the backup plan resource.
          type: array
          items:
            $ref: '#/components/schemas/BackupDrPlanRule'
    BackupDrPlanRule:
      id: BackupDrPlanRule
      description: >-
        BackupDrPlanRule has rule specific information of the backup plan
        resource.
      type: object
      properties:
        ruleId:
          description: Output only. Unique Id of the backup rule.
          readOnly: true
          type: string
        lastSuccessfulBackupTime:
          description: >-
            Output only. Timestamp of the latest successful backup created via
            this backup rule.
          readOnly: true
          type: string
          format: google-datetime
    BackupDrTemplateConfig:
      id: BackupDrTemplateConfig
      description: >-
        BackupDrTemplateConfig has additional information about Backup and DR's
        Template backup configuration.
      type: object
      properties:
        firstPartyManagementUri:
          description: >-
            Output only. The URI of the BackupDr template resource for the first
            party identity users.
          readOnly: true
          type: string
        thirdPartyManagementUri:
          description: >-
            Output only. The URI of the BackupDr template resource for the third
            party identity users.
          readOnly: true
          type: string
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have google.longrunning.Operation.error value with a
            google.rpc.Status.code of 1, corresponding to 'Code.CANCELLED'.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        additionalInfo:
          description: >-
            Output only. AdditionalInfo contains additional Info related to
            backup plan association resource.
          readOnly: true
          type: object
          additionalProperties:
            type: string
    SetInternalStatusResponse:
      id: SetInternalStatusResponse
      description: Response message from SetStatusInternal method.
      type: object
      properties: {}
    RestoreBackupResponse:
      id: RestoreBackupResponse
      description: Response message for restoring from a Backup.
      type: object
      properties:
        targetResource:
          description: Details of the target resource created/modified as part of restore.
          $ref: '#/components/schemas/TargetResource'
    TargetResource:
      id: TargetResource
      description: Details of the target resource created/modified as part of restore.
      type: object
      properties:
        gcpResource:
          description: >-
            Details of the native Google Cloud resource created as part of
            restore.
          $ref: '#/components/schemas/GcpResource'
    GcpResource:
      id: GcpResource
      description: Minimum details to identify a Google Cloud resource
      type: object
      properties:
        gcpResourcename:
          description: Name of the Google Cloud resource.
          type: string
        location:
          description: 'Location of the resource: //"global"/"unspecified".'
          type: string
        type:
          description: >-
            Type of the resource. Use the Unified Resource Type, eg.
            compute.googleapis.com/Instance.
          type: string
    LocationMetadata:
      id: LocationMetadata
      type: object
      properties:
        unsupportedFeatures:
          type: array
          items:
            type: string
            enumDescriptions:
              - ''
              - ''
              - ''
            enum:
              - FEATURE_UNSPECIFIED
              - MANAGEMENT_SERVER
              - COMPUTE_INSTANCE
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    trial:
      id: google.backupdr.trial
      name: trial
      title: Trial
      methods:
        get_trial:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trial/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        subscribe:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trial:subscribe/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/trial/methods/get_trial'
        insert: []
        update: []
        replace: []
        delete: []
    locations:
      id: google.backupdr.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    management_servers_iam_policies:
      id: google.backupdr.management_servers_iam_policies
      name: management_servers_iam_policies
      title: Management_servers_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1managementServers~1{managementServersId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1managementServers~1{managementServersId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1managementServers~1{managementServersId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/management_servers_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/management_servers_iam_policies/methods/set_iam_policy
        delete: []
    management_servers:
      id: google.backupdr.management_servers
      name: management_servers
      title: Management_servers
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1managementServers/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.managementServers
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1managementServers/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1managementServers~1{managementServersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1managementServers~1{managementServersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ms_compliance_metadata:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1managementServers:msComplianceMetadata/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/management_servers/methods/get'
          - $ref: '#/components/x-stackQL-resources/management_servers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/management_servers/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/management_servers/methods/delete'
    operations:
      id: google.backupdr.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        initialize:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConfig:initialize/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    backup_vaults:
      id: google.backupdr.backup_vaults
      name: backup_vaults
      title: Backup_vaults
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.backupVaults
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backup_vaults/methods/get'
          - $ref: '#/components/x-stackQL-resources/backup_vaults/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/backup_vaults/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/backup_vaults/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backup_vaults/methods/delete'
    backup_vaults_usable:
      id: google.backupdr.backup_vaults_usable
      name: backup_vaults_usable
      title: Backup_vaults_usable
      methods:
        fetch_usable:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults:fetchUsable/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/backup_vaults_usable/methods/fetch_usable
        insert: []
        update: []
        replace: []
        delete: []
    backup_vaults_iam_policies:
      id: google.backupdr.backup_vaults_iam_policies
      name: backup_vaults_iam_policies
      title: Backup_vaults_iam_policies
      methods:
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    data_sources:
      id: google.backupdr.data_sources
      name: data_sources
      title: Data_sources
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}~1dataSources/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataSources
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}~1dataSources~1{dataSourcesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}~1dataSources~1{dataSourcesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}~1dataSources~1{dataSourcesId}:remove/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_internal_status:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}~1dataSources~1{dataSourcesId}:setInternalStatus/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        initiate_backup:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}~1dataSources~1{dataSourcesId}:initiateBackup/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        abandon_backup:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}~1dataSources~1{dataSourcesId}:abandonBackup/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        finalize_backup:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}~1dataSources~1{dataSourcesId}:finalizeBackup/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        fetch_access_token:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}~1dataSources~1{dataSourcesId}:fetchAccessToken/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/get'
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/remove'
    backups:
      id: google.backupdr.backups
      name: backups
      title: Backups
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}~1dataSources~1{dataSourcesId}~1backups/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.backups
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}~1dataSources~1{dataSourcesId}~1backups~1{backupsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}~1dataSources~1{dataSourcesId}~1backups~1{backupsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}~1dataSources~1{dataSourcesId}~1backups~1{backupsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restore:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}~1dataSources~1{dataSourcesId}~1backups~1{backupsId}:restore/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups/methods/get'
          - $ref: '#/components/x-stackQL-resources/backups/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/backups/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backups/methods/delete'
    backup_plans:
      id: google.backupdr.backup_plans
      name: backup_plans
      title: Backup_plans
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.backupPlans
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backup_plans/methods/get'
          - $ref: '#/components/x-stackQL-resources/backup_plans/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/backup_plans/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/backup_plans/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backup_plans/methods/delete'
    revisions:
      id: google.backupdr.revisions
      name: revisions
      title: Revisions
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1revisions~1{revisionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1revisions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.backupPlanRevisions
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/revisions/methods/get'
          - $ref: '#/components/x-stackQL-resources/revisions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    backup_plan_associations:
      id: google.backupdr.backup_plan_associations
      name: backup_plan_associations
      title: Backup_plan_associations
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlanAssociations/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlanAssociations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.backupPlanAssociations
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlanAssociations~1{backupPlanAssociationsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlanAssociations~1{backupPlanAssociationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlanAssociations~1{backupPlanAssociationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        fetch_for_resource_type:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlanAssociations:fetchForResourceType/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        trigger_backup:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlanAssociations~1{backupPlanAssociationsId}:triggerBackup/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/backup_plan_associations/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/backup_plan_associations/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/backup_plan_associations/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/backup_plan_associations/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/backup_plan_associations/methods/delete
    data_source_references:
      id: google.backupdr.data_source_references
      name: data_source_references
      title: Data_source_references
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataSourceReferences~1{dataSourceReferencesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        fetch_for_resource_type:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataSourceReferences:fetchForResourceType/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/data_source_references/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/data_source_references/methods/fetch_for_resource_type
        insert: []
        update: []
        replace: []
        delete: []
    resource_backup_configs:
      id: google.backupdr.resource_backup_configs
      name: resource_backup_configs
      title: Resource_backup_configs
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1resourceBackupConfigs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.resourceBackupConfigs
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/resource_backup_configs/methods/list
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/trial:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Gets the Trial state for a given project
      operationId: backupdr.projects.locations.getTrial
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trial'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: backupdr.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: extraLocationTypes
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: backupdr.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/managementServers/{managementServersId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: backupdr.projects.locations.managementServers.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: managementServersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/managementServers/{managementServersId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: backupdr.projects.locations.managementServers.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: managementServersId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/managementServers/{managementServersId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: backupdr.projects.locations.managementServers.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: managementServersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/managementServers:
    parameters: *ref_1
    get:
      description: Lists ManagementServers in a given project and location.
      operationId: backupdr.projects.locations.managementServers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListManagementServersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new ManagementServer in a given project and location.
      operationId: backupdr.projects.locations.managementServers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagementServer'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: managementServerId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/managementServers/{managementServersId}:
    parameters: *ref_1
    get:
      description: Gets details of a single ManagementServer.
      operationId: backupdr.projects.locations.managementServers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementServer'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: managementServersId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a single ManagementServer.
      operationId: backupdr.projects.locations.managementServers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: managementServersId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/managementServers:msComplianceMetadata:
    parameters: *ref_1
    post:
      description: Returns the Assured Workloads compliance metadata for a given project.
      operationId: backupdr.projects.locations.managementServers.msComplianceMetadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchMsComplianceMetadataRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchMsComplianceMetadataResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: backupdr.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: backupdr.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: backupdr.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        `1`, corresponding to `Code.CANCELLED`.
      operationId: backupdr.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/trial:subscribe:
    parameters: *ref_1
    post:
      description: Subscribes to a trial for a project
      operationId: backupdr.projects.locations.trial.subscribe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeTrialRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trial'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupVaults:
    parameters: *ref_1
    post:
      description: Creates a new BackupVault in a given project and location.
      operationId: backupdr.projects.locations.backupVaults.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupVault'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: backupVaultId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists BackupVaults in a given project and location.
      operationId: backupdr.projects.locations.backupVaults.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupVaultsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupVaults:fetchUsable:
    parameters: *ref_1
    get:
      description: >-
        FetchUsableBackupVaults lists usable BackupVaults in a given project and
        location. Usable BackupVault are the ones that user has
        backupdr.backupVaults.get permission.
      operationId: backupdr.projects.locations.backupVaults.fetchUsable
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchUsableBackupVaultsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupVaults/{backupVaultsId}:
    parameters: *ref_1
    get:
      description: Gets details of a BackupVault.
      operationId: backupdr.projects.locations.backupVaults.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupVault'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    patch:
      description: Updates the settings of a BackupVault.
      operationId: backupdr.projects.locations.backupVaults.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupVault'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: forceUpdateAccessRestriction
          schema:
            type: boolean
    delete:
      description: Deletes a BackupVault.
      operationId: backupdr.projects.locations.backupVaults.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: ignoreBackupPlanReferences
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/backupVaults/{backupVaultsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns the caller's permissions on a BackupVault resource. A caller is
        not required to have Google IAM permission to make this request.
      operationId: backupdr.projects.locations.backupVaults.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupVaults/{backupVaultsId}/dataSources:
    parameters: *ref_1
    get:
      description: Lists DataSources in a given project and location.
      operationId: backupdr.projects.locations.backupVaults.dataSources.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataSourcesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupVaults/{backupVaultsId}/dataSources/{dataSourcesId}:
    parameters: *ref_1
    get:
      description: Gets details of a DataSource.
      operationId: backupdr.projects.locations.backupVaults.dataSources.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSource'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourcesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the settings of a DataSource.
      operationId: backupdr.projects.locations.backupVaults.dataSources.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSource'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourcesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/backupVaults/{backupVaultsId}/dataSources/{dataSourcesId}:remove:
    parameters: *ref_1
    post:
      description: >-
        Deletes a DataSource. This is a custom method instead of a standard
        delete method because external clients will not delete DataSources
        except for BackupDR backup appliances.
      operationId: backupdr.projects.locations.backupVaults.dataSources.remove
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveDataSourceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourcesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupVaults/{backupVaultsId}/dataSources/{dataSourcesId}:setInternalStatus:
    parameters: *ref_1
    post:
      description: Sets the internal status of a DataSource.
      operationId: backupdr.projects.locations.backupVaults.dataSources.setInternalStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetInternalStatusRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourcesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupVaults/{backupVaultsId}/dataSources/{dataSourcesId}:initiateBackup:
    parameters: *ref_1
    post:
      description: Internal only. Initiates a backup.
      operationId: backupdr.projects.locations.backupVaults.dataSources.initiateBackup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateBackupRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateBackupResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourcesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupVaults/{backupVaultsId}/dataSources/{dataSourcesId}:abandonBackup:
    parameters: *ref_1
    post:
      description: Internal only. Abandons a backup.
      operationId: backupdr.projects.locations.backupVaults.dataSources.abandonBackup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbandonBackupRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourcesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupVaults/{backupVaultsId}/dataSources/{dataSourcesId}:finalizeBackup:
    parameters: *ref_1
    post:
      description: >-
        Internal only. Finalize a backup that was started by a call to
        InitiateBackup.
      operationId: backupdr.projects.locations.backupVaults.dataSources.finalizeBackup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinalizeBackupRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourcesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupVaults/{backupVaultsId}/dataSources/{dataSourcesId}:fetchAccessToken:
    parameters: *ref_1
    post:
      description: Internal only. Fetch access token for a given data source.
      operationId: backupdr.projects.locations.backupVaults.dataSources.fetchAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchAccessTokenRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchAccessTokenResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourcesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupVaults/{backupVaultsId}/dataSources/{dataSourcesId}/backups:
    parameters: *ref_1
    get:
      description: Lists Backups in a given project and location.
      operationId: backupdr.projects.locations.backupVaults.dataSources.backups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourcesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupVaults/{backupVaultsId}/dataSources/{dataSourcesId}/backups/{backupsId}:
    parameters: *ref_1
    get:
      description: Gets details of a Backup.
      operationId: backupdr.projects.locations.backupVaults.dataSources.backups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourcesId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    patch:
      description: Updates the settings of a Backup.
      operationId: backupdr.projects.locations.backupVaults.dataSources.backups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourcesId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes a Backup.
      operationId: backupdr.projects.locations.backupVaults.dataSources.backups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourcesId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupVaults/{backupVaultsId}/dataSources/{dataSourcesId}/backups/{backupsId}:restore:
    parameters: *ref_1
    post:
      description: Restore from a Backup
      operationId: backupdr.projects.locations.backupVaults.dataSources.backups.restore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreBackupRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourcesId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans:
    parameters: *ref_1
    post:
      description: Create a BackupPlan
      operationId: backupdr.projects.locations.backupPlans.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupPlan'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: backupPlanId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
    get:
      description: Lists BackupPlans in a given project and location.
      operationId: backupdr.projects.locations.backupPlans.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupPlansResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}:
    parameters: *ref_1
    patch:
      description: Update a BackupPlan.
      operationId: backupdr.projects.locations.backupPlans.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupPlan'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    get:
      description: Gets details of a single BackupPlan.
      operationId: backupdr.projects.locations.backupPlans.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupPlan'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a single BackupPlan.
      operationId: backupdr.projects.locations.backupPlans.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/revisions/{revisionsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single BackupPlanRevision.
      operationId: backupdr.projects.locations.backupPlans.revisions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupPlanRevision'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/revisions:
    parameters: *ref_1
    get:
      description: Lists BackupPlanRevisions in a given project and location.
      operationId: backupdr.projects.locations.backupPlans.revisions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupPlanRevisionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlanAssociations:
    parameters: *ref_1
    post:
      description: Create a BackupPlanAssociation
      operationId: backupdr.projects.locations.backupPlanAssociations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupPlanAssociation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: backupPlanAssociationId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
    get:
      description: Lists BackupPlanAssociations in a given project and location.
      operationId: backupdr.projects.locations.backupPlanAssociations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupPlanAssociationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlanAssociations/{backupPlanAssociationsId}:
    parameters: *ref_1
    patch:
      description: Update a BackupPlanAssociation.
      operationId: backupdr.projects.locations.backupPlanAssociations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupPlanAssociation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlanAssociationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    get:
      description: Gets details of a single BackupPlanAssociation.
      operationId: backupdr.projects.locations.backupPlanAssociations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupPlanAssociation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlanAssociationsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a single BackupPlanAssociation.
      operationId: backupdr.projects.locations.backupPlanAssociations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlanAssociationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlanAssociations:fetchForResourceType:
    parameters: *ref_1
    get:
      description: List BackupPlanAssociations for a given resource type.
      operationId: backupdr.projects.locations.backupPlanAssociations.fetchForResourceType
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/FetchBackupPlanAssociationsForResourceTypeResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: resourceType
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlanAssociations/{backupPlanAssociationsId}:triggerBackup:
    parameters: *ref_1
    post:
      description: Triggers a new Backup.
      operationId: backupdr.projects.locations.backupPlanAssociations.triggerBackup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerBackupRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlanAssociationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataSourceReferences/{dataSourceReferencesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single DataSourceReference.
      operationId: backupdr.projects.locations.dataSourceReferences.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceReference'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourceReferencesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataSourceReferences:fetchForResourceType:
    parameters: *ref_1
    get:
      description: >-
        Fetch DataSourceReferences for a given project, location and resource
        type.
      operationId: backupdr.projects.locations.dataSourceReferences.fetchForResourceType
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/FetchDataSourceReferencesForResourceTypeResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: resourceType
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConfig:initialize:
    parameters: *ref_1
    post:
      description: Initializes the service related config for a project.
      operationId: backupdr.projects.locations.serviceConfig.initialize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitializeServiceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/resourceBackupConfigs:
    parameters: *ref_1
    get:
      description: Lists ResourceBackupConfigs.
      operationId: backupdr.projects.locations.resourceBackupConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourceBackupConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
