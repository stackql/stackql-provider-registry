openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Managed Service for Microsoft Active Directory API
  description: The Managed Service for Microsoft Active Directory API is used for managing a highly available, hardened service running Microsoft Active Directory (AD).
  version: v1
  x-discovery-doc-revision: '20221027'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://cloud.google.com/managed-microsoft-ad/
servers:
  - url: https://managedidentities.googleapis.com
components:
  schemas:
    ResetAdminPasswordRequest:
      type: object
      id: ResetAdminPasswordRequest
      description: Request message for ResetAdminPassword
      properties: {}
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      id: SetIamPolicyRequest
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
      type: object
    RestoreDomainRequest:
      type: object
      description: RestoreDomainRequest is the request received by RestoreDomain rpc
      id: RestoreDomainRequest
      properties:
        backupId:
          description: Required. ID of the backup to be restored
          type: string
    GoogleCloudManagedidentitiesV1alpha1OpMetadata:
      properties:
        apiVersion:
          readOnly: true
          description: Output only. API version used to start the operation.
          type: string
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
        createTime:
          description: Output only. The time the operation was created.
          type: string
          format: google-datetime
          readOnly: true
        requestedCancellation:
          type: boolean
          readOnly: true
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        verb:
          type: string
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
      id: GoogleCloudManagedidentitiesV1alpha1OpMetadata
      description: Represents the metadata of the long-running operation.
      type: object
    Policy:
      id: Policy
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      properties:
        bindings:
          type: array
          items:
            $ref: '#/components/schemas/Binding'
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
        etag:
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          type: string
          format: byte
        version:
          format: int32
          type: integer
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
      type: object
    DetachTrustRequest:
      id: DetachTrustRequest
      type: object
      properties:
        trust:
          $ref: '#/components/schemas/Trust'
          description: Required. The domain trust resource to removed.
      description: Request message for DetachTrust
    GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings:
      id: GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings
      properties:
        maintenancePolicies:
          description: Optional. The MaintenancePolicies that have been attached to the instance. The key must be of the type name of the oneof policy name defined in MaintenancePolicy, and the embedded policy must define the same policy type. For complete details of MaintenancePolicy, please refer to go/cloud-saas-mw-ug. If only the name is needed, then only populate MaintenancePolicy.name.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MaintenancePolicy'
        isRollback:
          type: boolean
          description: Optional. If the update call is triggered from rollback, set the value as true.
        exclude:
          type: boolean
          description: Optional. Exclude instance from maintenance. When true, rollout service will not attempt maintenance on the instance. Rollout service will include the instance in reported rollout progress as not attempted.
      description: Maintenance settings associated with instance. Allows service producers and end users to assign settings that controls maintenance on this instance.
      type: object
    OperationMetadata:
      properties:
        createTime:
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
        cancelRequested:
          type: boolean
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
        apiVersion:
          readOnly: true
          type: string
          description: Output only. API version used to start the operation.
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusDetail:
          type: string
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
        target:
          readOnly: true
          type: string
          description: Output only. Server-defined resource path for the target of the operation.
      id: OperationMetadata
      type: object
      description: Represents the metadata of the long-running operation.
    ResetAdminPasswordResponse:
      properties:
        password:
          description: A random password. See admin for more information.
          type: string
      type: object
      description: Response message for ResetAdminPassword
      id: ResetAdminPasswordResponse
    SqlIntegration:
      type: object
      description: Represents the SQL instance integrated with Managed AD.
      properties:
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the SQL integration was updated.
          type: string
        name:
          type: string
          description: The unique name of the SQL integration in the form of `projects/{project_id}/locations/global/domains/{domain_name}/sqlIntegrations/{sql_integration}`
        sqlInstance:
          type: string
          description: The full resource name of an integrated SQL instance
        state:
          description: Output only. The current state of the SQL integration.
          readOnly: true
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - DELETING
            - READY
          enumDescriptions:
            - Not Set
            - The SQL integration is being created.
            - The SQL integration is being deleted.
            - The SQL integration is ready.
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the SQL integration was created.
          type: string
      id: SqlIntegration
    Date:
      type: object
      properties:
        year:
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
          type: integer
          format: int32
        month:
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
          type: integer
          format: int32
        day:
          format: int32
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
          type: integer
      id: Date
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
    DailyCycle:
      id: DailyCycle
      description: Time window specified for daily operations.
      type: object
      properties:
        startTime:
          description: Time within the day to start the operations.
          $ref: '#/components/schemas/TimeOfDay'
        duration:
          format: google-duration
          description: Output only. Duration of the time window, set by service producer.
          type: string
    Operation:
      type: object
      properties:
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
    MaintenancePolicy:
      properties:
        updateTime:
          description: Output only. The time when the resource was updated.
          type: string
          format: google-datetime
        updatePolicy:
          $ref: '#/components/schemas/UpdatePolicy'
          description: Maintenance policy applicable to instance update.
        labels:
          description: Optional. Resource labels to represent user provided metadata. Each label is a key-value pair, where both the key and the value are arbitrary strings provided by the user.
          additionalProperties:
            type: string
          type: object
        state:
          type: string
          enumDescriptions:
            - Unspecified state.
            - Resource is ready to be used.
            - Resource is being deleted. It can no longer be attached to instances.
          description: Optional. The state of the policy.
          enum:
            - STATE_UNSPECIFIED
            - READY
            - DELETING
        name:
          description: 'Required. MaintenancePolicy name using the form: `projects/{project_id}/locations/{location_id}/maintenancePolicies/{maintenance_policy_id}` where {project_id} refers to a GCP consumer project ID, {location_id} refers to a GCP region/zone, {maintenance_policy_id} must be 1-63 characters long and match the regular expression `[a-z0-9]([-a-z0-9]*[a-z0-9])?`.'
          type: string
        createTime:
          description: Output only. The time when the resource was created.
          type: string
          format: google-datetime
        description:
          description: Optional. Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512.
          type: string
      description: Defines policies to service maintenance events.
      type: object
      id: MaintenancePolicy
    ReconfigureTrustRequest:
      description: Request message for ReconfigureTrust
      properties:
        targetDnsIpAddresses:
          type: array
          description: Required. The target DNS server IP addresses to resolve the remote domain involved in the trust.
          items:
            type: string
        targetDomainName:
          description: Required. The fully-qualified target domain name which will be in trust with current domain.
          type: string
      id: ReconfigureTrustRequest
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1Instance:
      type: object
      properties:
        slmInstanceTemplate:
          type: string
          description: Link to the SLM instance template. Only populated when updating SLM instances via SSA's Actuation service adaptor. Service producers with custom control plane (e.g. Cloud SQL) doesn't need to populate this field. Instead they should use software_versions.
        maintenanceSettings:
          $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings'
          description: Optional. The MaintenanceSettings associated with instance.
        tenantProjectId:
          readOnly: true
          description: Output only. ID of the associated GCP tenant project. See go/get-instance-metadata.
          type: string
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Timestamp when the resource was last modified.
        consumerDefinedName:
          type: string
          description: consumer_defined_name is the name that is set by the consumer. On the other hand Name field represents system-assigned id of an instance so consumers are not necessarily aware of it. consumer_defined_name is used for notification/UI purposes for consumer to recognize their instances.
        producerMetadata:
          type: object
          readOnly: true
          description: Output only. Custom string attributes used primarily to expose producer-specific information in monitoring dashboards. See go/get-instance-metadata.
          additionalProperties:
            type: string
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. Timestamp when the resource was created.
          type: string
        instanceType:
          type: string
          description: 'Optional. The instance_type of this instance of format: projects/{project_number}/locations/{location_id}/instanceTypes/{instance_type_id}. Instance Type represents a high-level tier or SKU of the service that this instance belong to. When enabled(eg: Maintenance Rollout), Rollout uses ''instance_type'' along with ''software_versions'' to determine whether instance needs an update or not.'
        notificationParameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter'
          description: Optional. notification_parameter are information that service producers may like to include that is not relevant to Rollout. This parameter will only be passed to Gamma and Cloud Logging for notification/logging purpose.
        maintenanceSchedules:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule'
          description: The MaintenanceSchedule contains the scheduling information of published maintenance schedule with same key as software_versions.
        provisionedResources:
          items:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource'
          type: array
          readOnly: true
          description: Output only. The list of data plane resources provisioned for this instance, e.g. compute VMs. See go/get-instance-metadata.
        labels:
          type: object
          additionalProperties:
            type: string
          description: Optional. Resource labels to represent user provided metadata. Each label is a key-value pair, where both the key and the value are arbitrary strings provided by the user.
        maintenancePolicyNames:
          additionalProperties:
            type: string
          description: Optional. Deprecated. The MaintenancePolicies that have been attached to the instance. The key must be of the type name of the oneof policy name defined in MaintenancePolicy, and the referenced policy must define the same policy type. For complete details of MaintenancePolicy, please refer to go/cloud-saas-mw-ug.
          type: object
        state:
          type: string
          description: Output only. Current lifecycle state of the resource (e.g. if it's being created or ready to use).
          enumDescriptions:
            - Unspecified state.
            - Instance is being created.
            - Instance has been created and is ready to use.
            - Instance is being updated.
            - Instance is unheathy and under repair.
            - Instance is being deleted.
            - Instance encountered an error and is in indeterministic state.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - UPDATING
            - REPAIRING
            - DELETING
            - ERROR
          readOnly: true
        sloMetadata:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata'
          description: Output only. SLO metadata for instance classification in the Standardized dataplane SLO platform. See go/cloud-ssa-standard-slo for feature description.
        softwareVersions:
          additionalProperties:
            type: string
          description: Software versions that are used to deploy this instance. This can be mutated by rollout services.
          type: object
        name:
          description: 'Unique name of the resource. It uses the form: `projects/{project_number}/locations/{location_id}/instances/{instance_id}` Note: This name is passed, stored and logged across the rollout system. So use of consumer project_id or any other consumer PII in the name is strongly discouraged for wipeout (go/wipeout) compliance. See go/elysium/project_ids#storage-guidance for more details.'
          type: string
      id: GoogleCloudSaasacceleratorManagementProvidersV1Instance
    AttachTrustRequest:
      type: object
      id: AttachTrustRequest
      properties:
        trust:
          $ref: '#/components/schemas/Trust'
          description: Required. The domain trust resource.
      description: Request message for AttachTrust
    Peering:
      properties:
        domainResource:
          type: string
          description: 'Required. Full domain resource path for the Managed AD Domain involved in peering. The resource path should be in the form: `projects/{project_id}/locations/global/domains/{domain_name}`'
        labels:
          type: object
          additionalProperties:
            type: string
          description: Optional. Resource labels to represent user-provided metadata.
        name:
          readOnly: true
          description: 'Output only. Unique name of the peering in this scope including projects and location using the form: `projects/{project_id}/locations/global/peerings/{peering_id}`.'
          type: string
        authorizedNetwork:
          description: Required. The full names of the Google Compute Engine [networks](/compute/docs/networks-and-firewalls#networks) to which the instance is connected. Caller needs to make sure that CIDR subnets do not overlap between networks, else peering creation will fail.
          type: string
        statusMessage:
          description: Output only. Additional information about the current status of this peering, if available.
          readOnly: true
          type: string
        updateTime:
          readOnly: true
          description: Output only. Last update time.
          type: string
          format: google-datetime
        createTime:
          description: Output only. The time the instance was created.
          type: string
          format: google-datetime
          readOnly: true
        state:
          enumDescriptions:
            - Not set.
            - Peering is being created.
            - Peering is connected.
            - Peering is disconnected.
            - Peering is being deleted.
          type: string
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - CONNECTED
            - DISCONNECTED
            - DELETING
          description: Output only. The current state of this Peering.
      description: Represents a Managed Service for Microsoft Active Directory Peering.
      id: Peering
      type: object
    TimeOfDay:
      properties:
        nanos:
          type: integer
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          format: int32
        seconds:
          description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
        hours:
          description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          format: int32
          description: Minutes of hour of day. Must be from 0 to 59.
          type: integer
      description: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
      id: TimeOfDay
      type: object
    ExtendSchemaRequest:
      id: ExtendSchemaRequest
      properties:
        fileContents:
          description: File uploaded as a byte stream input.
          format: byte
          type: string
        description:
          type: string
          description: Required. Description for Schema Change.
        gcsPath:
          type: string
          description: File stored in Cloud Storage bucket and represented in the form projects/{project_id}/buckets/{bucket_name}/objects/{object_name} File should be in the same project as the domain.
      type: object
      description: ExtendSchemaRequest is the request message for ExtendSchema method.
    MaintenanceWindow:
      id: MaintenanceWindow
      properties:
        weeklyCycle:
          $ref: '#/components/schemas/WeeklyCycle'
          description: Weekly cycle.
        dailyCycle:
          $ref: '#/components/schemas/DailyCycle'
          description: Daily cycle.
      description: MaintenanceWindow definition.
      type: object
    ListDomainsResponse:
      id: ListDomainsResponse
      type: object
      properties:
        domains:
          items:
            $ref: '#/components/schemas/Domain'
          type: array
          description: A list of Managed Identities Service domains in the project.
        unreachable:
          description: A list of locations that could not be reached.
          type: array
          items:
            type: string
        nextPageToken:
          type: string
          description: A token to retrieve the next page of results, or empty if there are no more results in the list.
      description: Response message for ListDomains
    GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility:
      id: GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility
      type: object
      description: 'SloEligibility is a tuple containing eligibility value: true if an instance is eligible for SLO calculation or false if it should be excluded from all SLO-related calculations along with a user-defined reason.'
      properties:
        eligible:
          description: Whether an instance is eligible or ineligible.
          type: boolean
        reason:
          description: User-defined reason for the current value of instance eligibility. Usually, this can be directly mapped to the internal state. An empty reason is allowed.
          type: string
    GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata:
      description: Node information for custom per-node SLO implementations. SSA does not support per-node SLO, but producers can populate per-node information in SloMetadata for custom precomputations. SSA Eligibility Exporter will emit per-node metric based on this information.
      properties:
        perSliEligibility:
          description: If present, this will override eligibility for the node coming from instance or exclusions for specified SLIs.
          $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility'
        location:
          description: The location of the node, if different from instance location.
          type: string
        nodeId:
          type: string
          description: The id of the node. This should be equal to SaasInstanceNode.node_id.
      type: object
      id: GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata
    GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule:
      id: GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule
      type: object
      properties:
        scheduleDeadlineTime:
          format: google-datetime
          description: schedule_deadline_time is the time deadline any schedule start time cannot go beyond, including reschedule. It's normally the initial schedule start time plus maintenance window length (1 day or 1 week). Maintenance cannot be scheduled to start beyond this deadline.
          type: string
        rolloutManagementPolicy:
          type: string
          description: The rollout management policy this maintenance schedule is associated with. When doing reschedule update request, the reschedule should be against this given policy.
        endTime:
          format: google-datetime
          type: string
          description: The scheduled end time for the maintenance.
        canReschedule:
          type: boolean
          description: This field is deprecated, and will be always set to true since reschedule can happen multiple times now. This field should not be removed until all service producers remove this for their customers.
        startTime:
          description: The scheduled start time for the maintenance.
          format: google-datetime
          type: string
      description: Maintenance schedule which is exposed to customer and potentially end user, indicating published upcoming future maintenance schedule
    Backup:
      type: object
      id: Backup
      properties:
        statusMessage:
          description: Output only. Additional information about the current status of this backup, if available.
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
          enumDescriptions:
            - Backup was manually created.
            - Backup was manually created.
            - Backup was automatically created.
          description: Output only. Indicates whether it’s an on-demand backup or scheduled.
          enum:
            - TYPE_UNSPECIFIED
            - ON_DEMAND
            - SCHEDULED
        createTime:
          type: string
          description: Output only. The time the backups was created.
          format: google-datetime
          readOnly: true
        name:
          type: string
          readOnly: true
          description: Output only. The unique name of the Backup in the form of `projects/{project_id}/locations/global/domains/{domain_name}/backups/{name}`
        updateTime:
          format: google-datetime
          description: Output only. Last update time.
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Resource labels to represent user provided metadata.
          type: object
        state:
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - FAILED
            - DELETING
          readOnly: true
          description: Output only. The current state of the backup.
          type: string
          enumDescriptions:
            - Not set.
            - Backup is being created.
            - Backup has been created and validated.
            - Backup has been created but failed validation.
            - Backup is being deleted.
      description: Represents a Managed Microsoft Identities backup.
    Trust:
      id: Trust
      properties:
        targetDnsIpAddresses:
          description: Required. The target DNS server IP addresses which can resolve the remote domain involved in the trust.
          items:
            type: string
          type: array
        targetDomainName:
          type: string
          description: Required. The fully qualified target domain name which will be in trust with the current domain.
        lastTrustHeartbeatTime:
          description: Output only. The last heartbeat time when the trust was known to be connected.
          type: string
          format: google-datetime
          readOnly: true
        selectiveAuthentication:
          description: Optional. The trust authentication type, which decides whether the trusted side has forest/domain wide access or selective access to an approved set of resources.
          type: boolean
        trustType:
          description: Required. The type of trust represented by the trust resource.
          enumDescriptions:
            - Not set.
            - The forest trust.
            - The external domain trust.
          type: string
          enum:
            - TRUST_TYPE_UNSPECIFIED
            - FOREST
            - EXTERNAL
        trustHandshakeSecret:
          type: string
          description: Required. The trust secret used for the handshake with the target domain. This will not be stored.
        stateDescription:
          description: Output only. Additional information about the current state of the trust, if available.
          type: string
          readOnly: true
        createTime:
          format: google-datetime
          type: string
          description: Output only. The time the instance was created.
          readOnly: true
        trustDirection:
          enumDescriptions:
            - Not set.
            - The inbound direction represents the trusting side.
            - The outboud direction represents the trusted side.
            - The bidirectional direction represents the trusted / trusting side.
          enum:
            - TRUST_DIRECTION_UNSPECIFIED
            - INBOUND
            - OUTBOUND
            - BIDIRECTIONAL
          type: string
          description: Required. The trust direction, which decides if the current domain is trusted, trusting, or both.
        updateTime:
          description: Output only. The last update time.
          type: string
          format: google-datetime
          readOnly: true
        state:
          enumDescriptions:
            - Not set.
            - The domain trust is being created.
            - The domain trust is being updated.
            - The domain trust is being deleted.
            - The domain trust is connected.
            - The domain trust is disconnected.
          type: string
          description: Output only. The current state of the trust.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - UPDATING
            - DELETING
            - CONNECTED
            - DISCONNECTED
          readOnly: true
      description: Represents a relationship between two domains. This allows a controller in one domain to authenticate a user in another domain. If the trust is being changed, it will be placed into the UPDATING state, which indicates that the resource is being reconciled. At this point, Get will reflect an intermediate state.
      type: object
    ListPeeringsResponse:
      type: object
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        peerings:
          type: array
          items:
            $ref: '#/components/schemas/Peering'
          description: A list of Managed Identities Service Peerings in the project.
      id: ListPeeringsResponse
      description: ListPeeringsResponse is the response message for ListPeerings method.
    GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility:
      type: object
      properties:
        eligibilities:
          description: An entry in the eligibilities map specifies an eligibility for a particular SLI for the given instance. The SLI key in the name must be a valid SLI name specified in the Eligibility Exporter binary flags otherwise an error will be emitted by Eligibility Exporter and the oncaller will be alerted. If an SLI has been defined in the binary flags but the eligibilities map does not contain it, the corresponding SLI time series will not be emitted by the Eligibility Exporter. This ensures a smooth rollout and compatibility between the data produced by different versions of the Eligibility Exporters. If eligibilities map contains a key for an SLI which has not been declared in the binary flags, there will be an error message emitted in the Eligibility Exporter log and the metric for the SLI in question will not be emitted.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility'
          type: object
      description: PerSliSloEligibility is a mapping from an SLI name to eligibility.
      id: GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      id: ListLocationsResponse
      type: object
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          type: string
          description: The standard List next-page token.
    ValidateTrustRequest:
      type: object
      properties:
        trust:
          $ref: '#/components/schemas/Trust'
          description: Required. The domain trust to validate trust state for.
      id: ValidateTrustRequest
      description: Request message for ValidateTrust
    UpdatePolicy:
      description: Maintenance policy applicable to instance updates.
      id: UpdatePolicy
      properties:
        channel:
          type: string
          enum:
            - UPDATE_CHANNEL_UNSPECIFIED
            - EARLIER
            - LATER
            - WEEK1
            - WEEK2
            - WEEK5
          description: Optional. Relative scheduling channel applied to resource.
          enumDescriptions:
            - Unspecified channel.
            - Early channel within a customer project.
            - Later channel within a customer project.
            - '! ! The follow channels can ONLY be used if you adopt the new MW system! ! ! NOTE: all WEEK channels are assumed to be under a weekly window. ! There is currently no dedicated channel definitions for Daily windows. ! If you use Daily window, the system will assume a 1d (24Hours) advanced ! notification period b/w EARLY and LATER. ! We may consider support more flexible daily channel specifications in ! the future. WEEK1 == EARLIER with minimum 7d advanced notification. {7d, 14d} The system will treat them equally and will use WEEK1 whenever it can. New customers are encouraged to use this channel annotation.'
            - WEEK2 == LATER with minimum 14d advanced notification {14d, 21d}.
            - WEEK5 == 40d support. minimum 35d advanced notification {35d, 42d}.
        window:
          description: Optional. Maintenance window that is applied to resources covered by this policy.
          $ref: '#/components/schemas/MaintenanceWindow'
        denyMaintenancePeriods:
          type: array
          description: Deny Maintenance Period that is applied to resource to indicate when maintenance is forbidden. User can specify zero or more non-overlapping deny periods. Maximum number of deny_maintenance_periods expected is one.
          items:
            $ref: '#/components/schemas/DenyMaintenancePeriod'
      type: object
    Domain:
      properties:
        statusMessage:
          readOnly: true
          description: Output only. Additional information about the current status of this domain, if available.
          type: string
        authorizedNetworks:
          description: Optional. The full names of the Google Compute Engine [networks](/compute/docs/networks-and-firewalls#networks) the domain instance is connected to. Networks can be added using UpdateDomain. The domain is only available on networks listed in `authorized_networks`. If CIDR subnets overlap between networks, domain creation will fail.
          type: array
          items:
            type: string
        reservedIpRange:
          type: string
          description: Required. The CIDR range of internal addresses that are reserved for this domain. Reserved networks must be /24 or larger. Ranges must be unique and non-overlapping with existing subnets in [Domain].[authorized_networks].
        fqdn:
          description: Output only. The fully-qualified domain name of the exposed domain used by clients to connect to the service. Similar to what would be chosen for an Active Directory set up on an internal network.
          readOnly: true
          type: string
        auditLogsEnabled:
          description: Optional. Configuration for audit logs. True if audit logs are enabled, else false. Default is audit logs disabled.
          type: boolean
        labels:
          type: object
          additionalProperties:
            type: string
          description: Optional. Resource labels that can contain user-provided metadata.
        state:
          type: string
          description: Output only. The current state of this domain.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - UPDATING
            - DELETING
            - REPAIRING
            - PERFORMING_MAINTENANCE
            - UNAVAILABLE
          enumDescriptions:
            - Not set.
            - The domain is being created.
            - The domain has been created and is fully usable.
            - The domain's configuration is being updated.
            - The domain is being deleted.
            - The domain is being repaired and may be unusable. Details can be found in the `status_message` field.
            - The domain is undergoing maintenance.
            - The domain is not serving requests.
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The last update time.
          readOnly: true
        trusts:
          type: array
          items:
            $ref: '#/components/schemas/Trust'
          description: Output only. The current trusts associated with the domain.
          readOnly: true
        name:
          type: string
          description: 'Required. The unique name of the domain using the form: `projects/{project_id}/locations/global/domains/{domain_name}`.'
        createTime:
          type: string
          description: Output only. The time the instance was created.
          format: google-datetime
          readOnly: true
        admin:
          type: string
          description: Optional. The name of delegated administrator account used to perform Active Directory operations. If not specified, `setupadmin` will be used.
        locations:
          items:
            type: string
          type: array
          description: Required. Locations where domain needs to be provisioned. regions e.g. us-west1 or us-east4 Service supports up to 4 locations at once. Each location will use a /26 block.
      type: object
      description: Represents a managed Microsoft Active Directory domain. If the domain is being changed, it will be placed into the UPDATING state, which indicates that the resource is being reconciled. At this point, Get will reflect an intermediate state.
      id: Domain
    DenyMaintenancePeriod:
      type: object
      id: DenyMaintenancePeriod
      properties:
        time:
          description: 'Time in UTC when the Blackout period starts on start_date and ends on end_date. This can be: * Full time. * All zeros for 00:00:00 UTC'
          $ref: '#/components/schemas/TimeOfDay'
        endDate:
          description: 'Deny period end date. This can be: * A full date, with non-zero year, month and day values. * A month and day value, with a zero year. Allows recurring deny periods each year. Date matching this period will have to be before the end.'
          $ref: '#/components/schemas/Date'
        startDate:
          $ref: '#/components/schemas/Date'
          description: 'Deny period start date. This can be: * A full date, with non-zero year, month and day values. * A month and day value, with a zero year. Allows recurring deny periods each year. Date matching this period will have to be the same or after the start.'
      description: DenyMaintenancePeriod definition. Maintenance is forbidden within the deny period. The start_date must be less than the end_date.
    WeeklyCycle:
      id: WeeklyCycle
      properties:
        schedule:
          items:
            $ref: '#/components/schemas/Schedule'
          description: User can specify multiple windows in a week. Minimum of 1 window.
          type: array
      description: Time window specified for weekly operations.
      type: object
    CancelOperationRequest:
      type: object
      properties: {}
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
    Expr:
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      type: object
      id: Expr
      properties:
        title:
          type: string
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
        expression:
          type: string
          description: Textual representation of an expression in Common Expression Language syntax.
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        description:
          type: string
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
    ListBackupsResponse:
      description: ListBackupsResponse is the response message for ListBackups method.
      properties:
        backups:
          description: A list of Cloud AD backups in the domain.
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
      id: ListBackupsResponse
      type: object
    ListOperationsResponse:
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      description: The response message for Operations.ListOperations.
      id: ListOperationsResponse
      type: object
    Binding:
      description: Associates `members`, or principals, with a `role`.
      properties:
        condition:
          $ref: '#/components/schemas/Expr'
          description: The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        members:
          items:
            type: string
          type: array
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. '
        role:
          type: string
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
      type: object
      id: Binding
    GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter:
      type: object
      description: Contains notification related data.
      id: GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter
      properties:
        values:
          items:
            type: string
          type: array
          description: Optional. Array of string values. e.g. instance's replica information.
    Status:
      properties:
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          type: array
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
        code:
          format: int32
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
      id: Status
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    ListSqlIntegrationsResponse:
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        sqlIntegrations:
          items:
            $ref: '#/components/schemas/SqlIntegration'
          type: array
          description: A list of SQLIntegrations of a domain.
        unreachable:
          description: A list of locations that could not be reached.
          type: array
          items:
            type: string
      description: ListSqlIntegrationsResponse is the response message for ListSqlIntegrations method.
      type: object
      id: ListSqlIntegrationsResponse
    GoogleCloudManagedidentitiesV1OpMetadata:
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation was created.
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        requestedCancellation:
          readOnly: true
          type: boolean
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
        verb:
          readOnly: true
          type: string
          description: Output only. Name of the verb executed by the operation.
        endTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
      id: GoogleCloudManagedidentitiesV1OpMetadata
    GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource:
      id: GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource
      description: Describes provisioned dataplane resources.
      type: object
      properties:
        resourceType:
          type: string
          description: 'Type of the resource. This can be either a GCP resource or a custom one (e.g. another cloud provider''s VM). For GCP compute resources use singular form of the names listed in GCP compute API documentation (https://cloud.google.com/compute/docs/reference/rest/v1/), prefixed with ''compute-'', for example: ''compute-instance'', ''compute-disk'', ''compute-autoscaler''.'
        resourceUrl:
          type: string
          description: URL identifying the resource, e.g. "https://www.googleapis.com/compute/v1/projects/...)".
    Schedule:
      description: Configure the schedule.
      type: object
      id: Schedule
      properties:
        startTime:
          $ref: '#/components/schemas/TimeOfDay'
          description: Time within the window to start the operations.
        duration:
          description: Output only. Duration of the time window, set by service producer.
          format: google-duration
          type: string
        day:
          type: string
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          description: Allows to define schedule that runs specified day of the week.
    GoogleCloudManagedidentitiesV1beta1OpMetadata:
      properties:
        target:
          type: string
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
        verb:
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
          type: string
        endTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
        requestedCancellation:
          readOnly: true
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          type: boolean
      description: Represents the metadata of the long-running operation.
      id: GoogleCloudManagedidentitiesV1beta1OpMetadata
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata:
      properties:
        perSliEligibility:
          description: Optional. Multiple per-instance SLI eligibilities which apply for individual SLIs.
          $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility'
        tier:
          description: Name of the SLO tier the Instance belongs to. This name will be expected to match the tiers specified in the service SLO configuration. Field is mandatory and must not be empty.
          type: string
        nodes:
          items:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata'
          type: array
          description: Optional. List of nodes. Some producers need to use per-node metadata to calculate SLO. This field allows such producers to publish per-node SLO meta data, which will be consumed by SSA Eligibility Exporter and published in the form of per node metric to Monarch.
      description: SloMetadata contains resources required for proper SLO classification of the instance.
      id: GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata
      type: object
    Certificate:
      description: Certificate used to configure LDAPS.
      type: object
      id: Certificate
      properties:
        expireTime:
          format: google-datetime
          description: The certificate expire time.
          type: string
        thumbprint:
          type: string
          description: The certificate thumbprint which uniquely identifies the certificate.
        subject:
          description: The certificate subject.
          type: string
        subjectAlternativeName:
          description: The additional hostnames for the domain.
          items:
            type: string
          type: array
        issuingCertificate:
          $ref: '#/components/schemas/Certificate'
          description: The issuer of this certificate.
    Location:
      description: A resource that represents Google Cloud Platform location.
      type: object
      id: Location
      properties:
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
        metadata:
          description: Service-specific metadata. For example the available capacity at the given location.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        displayName:
          type: string
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
    TestIamPermissionsResponse:
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
      description: Response message for `TestIamPermissions` method.
      id: TestIamPermissionsResponse
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      type: object
      id: TestIamPermissionsRequest
      properties:
        permissions:
          description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
    LDAPSSettings:
      description: LDAPSSettings represents the ldaps settings for domain resource. LDAP is the Lightweight Directory Access Protocol, defined in https://tools.ietf.org/html/rfc4511. The settings object configures LDAP over SSL/TLS, whether it is over port 636 or the StartTLS operation. If LDAPSSettings is being changed, it will be placed into the UPDATING state, which indicates that the resource is being reconciled. At this point, Get will reflect an intermediate state.
      id: LDAPSSettings
      properties:
        certificatePassword:
          type: string
          description: Input only. The password used to encrypt the uploaded PFX certificate.
        state:
          type: string
          description: Output only. The current state of this LDAPS settings.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - UPDATING
            - ACTIVE
            - FAILED
          enumDescriptions:
            - Not Set
            - The LDAPS setting is being updated.
            - The LDAPS setting is ready.
            - The LDAPS setting is not applied correctly.
        name:
          description: 'The resource name of the LDAPS settings. Uses the form: `projects/{project}/locations/{location}/domains/{domain}`.'
          type: string
        certificate:
          description: Output only. The certificate used to configure LDAPS. Certificates can be chained with a maximum length of 15.
          readOnly: true
          $ref: '#/components/schemas/Certificate'
        certificatePfx:
          description: 'Input only. The uploaded PKCS12-formatted certificate to configure LDAPS with. It will enable the domain controllers in this domain to accept LDAPS connections (either LDAP over SSL/TLS or the StartTLS operation). A valid certificate chain must form a valid x.509 certificate chain (or be comprised of a single self-signed certificate. It must be encrypted with either: 1) PBES2 + PBKDF2 + AES256 encryption and SHA256 PRF; or 2) pbeWithSHA1And3-KeyTripleDES-CBC Private key must be included for the leaf / single self-signed certificate. Note: For a fqdn your-example-domain.com, the wildcard fqdn is *.your-example-domain.com. Specifically the leaf certificate must have: - Either a blank subject or a subject with CN matching the wildcard fqdn. - Exactly two SANs - the fqdn and wildcard fqdn. - Encipherment and digital key signature key usages. - Server authentication extended key usage (OID=1.3.6.1.5.5.7.3.1) - Private key must be in one of the following formats: RSA, ECDSA, ED25519. - Private key must have appropriate key length: 2048 for RSA, 256 for ECDSA - Signature algorithm of the leaf certificate cannot be MD2, MD5 or SHA1.'
          format: byte
          type: string
        updateTime:
          type: string
          description: Output only. Last update time.
          readOnly: true
          format: google-datetime
      type: object
    Empty:
      type: object
      id: Empty
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
  parameters:
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    peerings:
      id: google.managedidentities.peerings
      name: peerings
      title: Peerings
      methods:
        projects_locations_global_peerings_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1peerings~1{peeringsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_peerings_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1peerings~1{peeringsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_peerings_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1peerings~1{peeringsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_peerings_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1peerings/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_peerings_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1peerings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/peerings/methods/projects_locations_global_peerings_get'
          - $ref: '#/components/x-stackQL-resources/peerings/methods/projects_locations_global_peerings_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/peerings/methods/projects_locations_global_peerings_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/peerings/methods/projects_locations_global_peerings_delete'
    peerings_iam_policies:
      id: google.managedidentities.peerings_iam_policies
      name: peerings_iam_policies
      title: Peerings_iam_policies
      methods:
        projects_locations_global_peerings_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1peerings~1{peeringsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_peerings_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1peerings~1{peeringsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_peerings_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1peerings~1{peeringsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/peerings_iam_policies/methods/projects_locations_global_peerings_getIamPolicy'
        insert: []
        update: []
        delete: []
    domains_iam_policies:
      id: google.managedidentities.domains_iam_policies
      name: domains_iam_policies
      title: Domains_iam_policies
      methods:
        projects_locations_global_domains_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domains_iam_policies/methods/projects_locations_global_domains_getIamPolicy'
        insert: []
        update: []
        delete: []
    domains:
      id: google.managedidentities.domains
      name: domains
      title: Domains
      methods:
        projects_locations_global_domains_reconfigureTrust:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}:reconfigureTrust/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_extendSchema:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}:extendSchema/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_resetAdminPassword:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}:resetAdminPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_attachTrust:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}:attachTrust/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_detachTrust:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}:detachTrust/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_restore:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}:restore/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_validateTrust:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}:validateTrust/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_updateLdapssettings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}~1ldapssettings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domains/methods/projects_locations_global_domains_get'
          - $ref: '#/components/x-stackQL-resources/domains/methods/projects_locations_global_domains_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/domains/methods/projects_locations_global_domains_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/domains/methods/projects_locations_global_domains_delete'
    domains__ldapssettings:
      id: google.managedidentities.domains__ldapssettings
      name: domains__ldapssettings
      title: Domains__ldapssettings
      methods:
        projects_locations_global_domains_getLdapssettings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}~1ldapssettings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domains__ldapssettings/methods/projects_locations_global_domains_getLdapssettings'
        insert: []
        update: []
        delete: []
    sql_integrations:
      id: google.managedidentities.sql_integrations
      name: sql_integrations
      title: Sql_integrations
      methods:
        projects_locations_global_domains_sqlIntegrations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}~1sqlIntegrations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_sqlIntegrations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}~1sqlIntegrations~1{sqlIntegrationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_integrations/methods/projects_locations_global_domains_sqlIntegrations_get'
          - $ref: '#/components/x-stackQL-resources/sql_integrations/methods/projects_locations_global_domains_sqlIntegrations_list'
        insert: []
        update: []
        delete: []
    backups_iam_policies:
      id: google.managedidentities.backups_iam_policies
      name: backups_iam_policies
      title: Backups_iam_policies
      methods:
        projects_locations_global_domains_backups_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}~1backups~1{backupsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_backups_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}~1backups~1{backupsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_backups_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}~1backups~1{backupsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups_iam_policies/methods/projects_locations_global_domains_backups_getIamPolicy'
        insert: []
        update: []
        delete: []
    backups:
      id: google.managedidentities.backups
      name: backups
      title: Backups
      methods:
        projects_locations_global_domains_backups_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}~1backups~1{backupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_backups_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}~1backups~1{backupsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_backups_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}~1backups~1{backupsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_backups_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}~1backups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_domains_backups_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}~1backups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups/methods/projects_locations_global_domains_backups_get'
          - $ref: '#/components/x-stackQL-resources/backups/methods/projects_locations_global_domains_backups_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/backups/methods/projects_locations_global_domains_backups_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backups/methods/projects_locations_global_domains_backups_delete'
    operations:
      id: google.managedidentities.operations
      name: operations
      title: Operations
      methods:
        projects_locations_global_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: operations
        projects_locations_global_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_global_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_global_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_global_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_global_operations_delete'
    locations:
      id: google.managedidentities.locations
      name: locations
      title: Locations
      methods:
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: locations
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
    peerings_iam_bindings:
      id: google.managedidentities.peerings_iam_bindings
      name: peerings_iam_bindings
      title: peerings_iam_bindings
      methods:
        projects_locations_global_peerings_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1peerings~1{peeringsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/peerings_iam_bindings/methods/projects_locations_global_peerings_getIamPolicy'
    domains_iam_bindings:
      id: google.managedidentities.domains_iam_bindings
      name: domains_iam_bindings
      title: domains_iam_bindings
      methods:
        projects_locations_global_domains_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/domains_iam_bindings/methods/projects_locations_global_domains_getIamPolicy'
    backups_iam_bindings:
      id: google.managedidentities.backups_iam_bindings
      name: backups_iam_bindings
      title: backups_iam_bindings
      methods:
        projects_locations_global_domains_backups_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1domains~1{domainsId}~1backups~1{backupsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/backups_iam_bindings/methods/projects_locations_global_domains_backups_getIamPolicy'
paths:
  /v1/projects/{projectsId}/locations/global/peerings/{peeringsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
    patch:
      description: Updates the labels for specified Peering.
      operationId: managedidentities.projects.locations.global.peerings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Peering'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: peeringsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: peerings
      x-stackQL-verb: exec
    delete:
      description: Deletes identified Peering.
      operationId: managedidentities.projects.locations.global.peerings.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: peeringsId
          required: true
          schema:
            type: string
      x-stackQL-resource: peerings
      x-stackQL-verb: delete
    get:
      description: Gets details of a single Peering.
      operationId: managedidentities.projects.locations.global.peerings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Peering'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: peeringsId
          required: true
          schema:
            type: string
      x-stackQL-resource: peerings
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/global/peerings:
    parameters: *ref_1
    post:
      description: Creates a Peering for Managed AD instance.
      operationId: managedidentities.projects.locations.global.peerings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Peering'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: peeringId
          schema:
            type: string
      x-stackQL-resource: peerings
      x-stackQL-verb: insert
    get:
      description: Lists Peerings in a given project.
      operationId: managedidentities.projects.locations.global.peerings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPeeringsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: peerings
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/global/peerings/{peeringsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: managedidentities.projects.locations.global.peerings.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: peeringsId
          required: true
          schema:
            type: string
      x-stackQL-resource: peerings_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/peerings/{peeringsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: managedidentities.projects.locations.global.peerings.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: peeringsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: peerings_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/global/peerings/{peeringsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: managedidentities.projects.locations.global.peerings.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: peeringsId
          required: true
          schema:
            type: string
      x-stackQL-resource: peerings_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/domains/{domainsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: managedidentities.projects.locations.global.domains.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: domains_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/global/domains/{domainsId}:reconfigureTrust:
    parameters: *ref_1
    post:
      description: Updates the DNS conditional forwarder.
      operationId: managedidentities.projects.locations.global.domains.reconfigureTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReconfigureTrustRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/domains/{domainsId}:extendSchema:
    parameters: *ref_1
    post:
      description: Extend Schema for Domain
      operationId: managedidentities.projects.locations.global.domains.extendSchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendSchemaRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/domains/{domainsId}:resetAdminPassword:
    parameters: *ref_1
    post:
      description: Resets a domain's administrator password.
      operationId: managedidentities.projects.locations.global.domains.resetAdminPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetAdminPasswordRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetAdminPasswordResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/domains/{domainsId}:
    parameters: *ref_1
    patch:
      description: Updates the metadata and configuration of a domain.
      operationId: managedidentities.projects.locations.global.domains.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: exec
    get:
      description: Gets information about a domain.
      operationId: managedidentities.projects.locations.global.domains.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: select
    delete:
      description: Deletes a domain.
      operationId: managedidentities.projects.locations.global.domains.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/global/domains/{domainsId}:attachTrust:
    parameters: *ref_1
    post:
      description: Adds an AD trust to a domain.
      operationId: managedidentities.projects.locations.global.domains.attachTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachTrustRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/domains/{domainsId}:detachTrust:
    parameters: *ref_1
    post:
      description: Removes an AD trust.
      operationId: managedidentities.projects.locations.global.domains.detachTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachTrustRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/domains/{domainsId}:restore:
    parameters: *ref_1
    post:
      description: RestoreDomain restores domain backup mentioned in the RestoreDomainRequest
      operationId: managedidentities.projects.locations.global.domains.restore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreDomainRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/domains/{domainsId}:validateTrust:
    parameters: *ref_1
    post:
      description: Validates a trust state, that the target domain is reachable, and that the target domain is able to accept incoming trust requests.
      operationId: managedidentities.projects.locations.global.domains.validateTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateTrustRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/domains:
    parameters: *ref_1
    post:
      description: Creates a Microsoft AD domain.
      operationId: managedidentities.projects.locations.global.domains.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: domainName
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: insert
    get:
      description: Lists domains in a project.
      operationId: managedidentities.projects.locations.global.domains.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/global/domains/{domainsId}/ldapssettings:
    parameters: *ref_1
    get:
      description: Gets the domain ldaps settings.
      operationId: managedidentities.projects.locations.global.domains.getLdapssettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPSSettings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains__ldapssettings
      x-stackQL-verb: select
    patch:
      description: Patches a single ldaps settings.
      operationId: managedidentities.projects.locations.global.domains.updateLdapssettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPSSettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/domains/{domainsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: managedidentities.projects.locations.global.domains.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/domains/{domainsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: managedidentities.projects.locations.global.domains.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/domains/{domainsId}/sqlIntegrations:
    parameters: *ref_1
    get:
      description: Lists SqlIntegrations in a given domain.
      operationId: managedidentities.projects.locations.global.domains.sqlIntegrations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSqlIntegrationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: sql_integrations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/global/domains/{domainsId}/sqlIntegrations/{sqlIntegrationsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single sqlIntegration.
      operationId: managedidentities.projects.locations.global.domains.sqlIntegrations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlIntegration'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
        - in: path
          name: sqlIntegrationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: sql_integrations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/global/domains/{domainsId}/backups/{backupsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: managedidentities.projects.locations.global.domains.backups.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: backups_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/global/domains/{domainsId}/backups/{backupsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: managedidentities.projects.locations.global.domains.backups.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: backups_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/domains/{domainsId}/backups/{backupsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Backup.
      operationId: managedidentities.projects.locations.global.domains.backups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: backups
      x-stackQL-verb: select
    patch:
      description: Updates the labels for specified Backup.
      operationId: managedidentities.projects.locations.global.domains.backups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: backups
      x-stackQL-verb: exec
    delete:
      description: Deletes identified Backup.
      operationId: managedidentities.projects.locations.global.domains.backups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: backups
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/global/domains/{domainsId}/backups:
    parameters: *ref_1
    post:
      description: Creates a Backup for a domain.
      operationId: managedidentities.projects.locations.global.domains.backups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
        - in: query
          name: backupId
          schema:
            type: string
      x-stackQL-resource: backups
      x-stackQL-verb: insert
    get:
      description: Lists Backup in a given project.
      operationId: managedidentities.projects.locations.global.domains.backups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: backups
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/global/domains/{domainsId}/backups/{backupsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: managedidentities.projects.locations.global.domains.backups.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: backups_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: managedidentities.projects.locations.global.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.'
      operationId: managedidentities.projects.locations.global.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/global/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: managedidentities.projects.locations.global.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: managedidentities.projects.locations.global.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: managedidentities.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: managedidentities.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
