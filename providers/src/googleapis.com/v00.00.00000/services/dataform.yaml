openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Dataform API
  description: ''
  version: v1beta1
  x-discovery-doc-revision: '20221217'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://cloud.google.com/dataform/docs
servers:
  - url: https://dataform.googleapis.com
components:
  schemas:
    DirectoryEntry:
      properties:
        directory:
          description: A child directory in the directory.
          type: string
        file:
          description: A file in the directory.
          type: string
      type: object
      id: DirectoryEntry
      description: Represents a single entry in a workspace directory.
    CompilationResultAction:
      properties:
        target:
          description: This action's identifier. Unique within the compilation result.
          $ref: '#/components/schemas/Target'
        declaration:
          $ref: '#/components/schemas/Declaration'
          description: The declaration declared by this action.
        canonicalTarget:
          $ref: '#/components/schemas/Target'
          description: The action's identifier if the project had been compiled without any overrides configured. Unique within the compilation result.
        assertion:
          $ref: '#/components/schemas/Assertion'
          description: The assertion executed by this action.
        filePath:
          type: string
          description: The full path including filename in which this action is located, relative to the workspace root.
        relation:
          $ref: '#/components/schemas/Relation'
          description: The database relation created/updated by this action.
        operations:
          $ref: '#/components/schemas/Operations'
          description: The database operations executed by this action.
      description: Represents a single Dataform action in a compilation result.
      id: CompilationResultAction
      type: object
    Assertion:
      type: object
      description: Represents an assertion upon a SQL query which is required return zero rows.
      properties:
        dependencyTargets:
          items:
            $ref: '#/components/schemas/Target'
          description: A list of actions that this action depends on.
          type: array
        disabled:
          type: boolean
          description: Whether this action is disabled (i.e. should not be run).
        parentAction:
          $ref: '#/components/schemas/Target'
          description: The parent action of this assertion. Only set if this assertion was automatically generated.
        tags:
          type: array
          items:
            type: string
          description: Arbitrary, user-defined tags on this action.
        relationDescriptor:
          description: Descriptor for the assertion's automatically-generated view and its columns.
          $ref: '#/components/schemas/RelationDescriptor'
        selectQuery:
          description: The SELECT query which must return zero rows in order for this assertion to succeed.
          type: string
      id: Assertion
    Declaration:
      id: Declaration
      properties:
        relationDescriptor:
          description: Descriptor for the relation and its columns. Used as documentation only, i.e. values here will result in no changes to the relation's metadata.
          $ref: '#/components/schemas/RelationDescriptor'
      type: object
      description: Represents a relation which is not managed by Dataform but which may be referenced by Dataform actions.
    WorkflowInvocation:
      type: object
      id: WorkflowInvocation
      description: Represents a single invocation of a compilation result.
      properties:
        name:
          readOnly: true
          description: Output only. The workflow invocation's name.
          type: string
        compilationResult:
          description: Immutable. The name of the compilation result to compile. Must be in the format `projects/*/locations/*/repositories/*/compilationResults/*`.
          type: string
        invocationConfig:
          description: Immutable. If left unset, a default InvocationConfig will be used.
          $ref: '#/components/schemas/InvocationConfig'
        state:
          type: string
          description: Output only. This workflow invocation's current state.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - SUCCEEDED
            - CANCELLED
            - FAILED
            - CANCELING
          readOnly: true
          enumDescriptions:
            - Default value. This value is unused.
            - The workflow invocation is currently running.
            - The workflow invocation succeeded. A terminal state.
            - The workflow invocation was cancelled. A terminal state.
            - The workflow invocation failed. A terminal state.
            - The workflow invocation is being cancelled, but some actions are still running.
        invocationTiming:
          description: Output only. This workflow invocation's timing details.
          $ref: '#/components/schemas/Interval'
          readOnly: true
    QueryDirectoryContentsResponse:
      properties:
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
        directoryEntries:
          items:
            $ref: '#/components/schemas/DirectoryEntry'
          type: array
          description: List of entries in the directory.
      type: object
      id: QueryDirectoryContentsResponse
      description: '`QueryDirectoryContents` response message.'
    MoveDirectoryResponse:
      id: MoveDirectoryResponse
      properties: {}
      description: '`MoveDirectory` response message.'
      type: object
    Repository:
      properties:
        gitRemoteSettings:
          description: Optional. If set, configures this repository to be linked to a Git remote.
          $ref: '#/components/schemas/GitRemoteSettings'
        name:
          description: Output only. The repository's name.
          type: string
          readOnly: true
        npmrcEnvironmentVariablesSecretVersion:
          description: Optional. The name of the Secret Manager secret version to be used to interpolate variables into the .npmrc file for package installation operations. Must be in the format `projects/*/secrets/*/versions/*`. The file itself must be in a JSON format.
          type: string
      type: object
      id: Repository
      description: Represents a Dataform Git repository.
    WriteFileResponse:
      properties: {}
      id: WriteFileResponse
      description: '`WriteFile` response message.'
      type: object
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          items:
            $ref: '#/components/schemas/Location'
          description: A list of locations that matches the specified filter in the request.
          type: array
        nextPageToken:
          type: string
          description: The standard List next-page token.
      type: object
    ResetWorkspaceChangesRequest:
      properties:
        paths:
          items:
            type: string
          type: array
          description: Optional. Full file paths to reset back to their committed state including filename, rooted at workspace root. If left empty, all files will be reset.
        clean:
          type: boolean
          description: Optional. If set to true, untracked files will be deleted.
      description: '`ResetWorkspaceChanges` request message.'
      type: object
      id: ResetWorkspaceChangesRequest
    ListWorkflowConfigsResponse:
      properties:
        unreachable:
          type: array
          items:
            type: string
          description: Locations which could not be reached.
        workflowConfigs:
          description: List of workflow configs.
          items:
            $ref: '#/components/schemas/WorkflowConfig'
          type: array
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
      type: object
      description: '`ListWorkflowConfigs` response message.'
      id: ListWorkflowConfigsResponse
    ScheduledExecutionRecord:
      properties:
        executionTime:
          description: The timestamp of this execution attempt.
          format: google-datetime
          type: string
        errorStatus:
          description: The error status encountered upon this attempt to create the workflow invocation, if the attempt was unsuccessful.
          $ref: '#/components/schemas/Status'
        workflowInvocation:
          type: string
          description: The name of the created workflow invocation, if one was successfully created. Must be in the format `projects/*/locations/*/repositories/*/workflowInvocations/*`.
      id: ScheduledExecutionRecord
      type: object
      description: A record of an attempt to create a workflow invocation for this workflow config.
    Target:
      properties:
        database:
          description: The action's database (Google Cloud project ID) .
          type: string
        name:
          type: string
          description: The action's name, within `database` and `schema`.
        schema:
          type: string
          description: The action's schema (BigQuery dataset ID), within `database`.
      type: object
      description: Represents an action identifier. If the action writes output, the output will be written to the referenced database object.
      id: Target
    InstallNpmPackagesResponse:
      type: object
      id: InstallNpmPackagesResponse
      description: '`InstallNpmPackages` response message.'
      properties: {}
    CommitAuthor:
      id: CommitAuthor
      properties:
        name:
          description: Required. The commit author's name.
          type: string
        emailAddress:
          description: Required. The commit author's email address.
          type: string
      type: object
      description: Represents the author of a Git commit.
    GitRemoteSettings:
      id: GitRemoteSettings
      properties:
        url:
          description: Required. The Git remote's URL.
          type: string
        tokenStatus:
          enumDescriptions:
            - Default value. This value is unused.
            - The token could not be found in Secret Manager (or the Dataform Service Account did not have permission to access it).
            - The token could not be used to authenticate against the Git remote.
            - The token was used successfully to authenticate against the Git remote.
          description: Output only. Indicates the status of the Git access token.
          type: string
          enum:
            - TOKEN_STATUS_UNSPECIFIED
            - NOT_FOUND
            - INVALID
            - VALID
          readOnly: true
        authenticationTokenSecretVersion:
          type: string
          description: Required. The name of the Secret Manager secret version to use as an authentication token for Git operations. Must be in the format `projects/*/secrets/*/versions/*`.
        defaultBranch:
          type: string
          description: Required. The Git remote's default branch name.
      type: object
      description: Controls Git remote configuration for a repository.
    QueryCompilationResultActionsResponse:
      type: object
      id: QueryCompilationResultActionsResponse
      description: '`QueryCompilationResultActions` response message.'
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        compilationResultActions:
          type: array
          description: List of compilation result actions.
          items:
            $ref: '#/components/schemas/CompilationResultAction'
    CancelWorkflowInvocationRequest:
      id: CancelWorkflowInvocationRequest
      type: object
      description: '`CancelWorkflowInvocation` request message.'
      properties: {}
    CodeCompilationConfig:
      description: Configures various aspects of Dataform code compilation.
      id: CodeCompilationConfig
      properties:
        assertionSchema:
          description: Optional. The default schema (BigQuery dataset ID) for assertions.
          type: string
        defaultLocation:
          description: 'Optional. The default BigQuery location to use. Defaults to "US". See the BigQuery docs for a full list of locations: https://cloud.google.com/bigquery/docs/locations.'
          type: string
        databaseSuffix:
          type: string
          description: Optional. The suffix that should be appended to all database (Google Cloud project ID) names.
        tablePrefix:
          type: string
          description: Optional. The prefix that should be prepended to all table names.
        schemaSuffix:
          description: Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.
          type: string
        defaultDatabase:
          type: string
          description: Optional. The default database (Google Cloud project ID).
        vars:
          description: Optional. User-defined variables that are made available to project code during compilation.
          additionalProperties:
            type: string
          type: object
        defaultSchema:
          description: Optional. The default schema (BigQuery dataset ID).
          type: string
      type: object
    FetchRemoteBranchesResponse:
      properties:
        branches:
          items:
            type: string
          description: The remote repository's branch names.
          type: array
      description: '`FetchRemoteBranches` response message.'
      id: FetchRemoteBranchesResponse
      type: object
    RemoveDirectoryRequest:
      type: object
      properties:
        path:
          type: string
          description: Required. The directory's full path including directory name, relative to the workspace root.
      description: '`RemoveDirectory` request message.'
      id: RemoveDirectoryRequest
    ListReleaseConfigsResponse:
      type: object
      id: ListReleaseConfigsResponse
      description: '`ListReleaseConfigs` response message.'
      properties:
        releaseConfigs:
          description: List of release configs.
          items:
            $ref: '#/components/schemas/ReleaseConfig'
          type: array
        unreachable:
          items:
            type: string
          description: Locations which could not be reached.
          type: array
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
    MoveDirectoryRequest:
      properties:
        path:
          type: string
          description: Required. The directory's full path including directory name, relative to the workspace root.
        newPath:
          type: string
          description: Required. The new path for the directory including directory name, rooted at workspace root.
      type: object
      description: '`MoveDirectory` request message.'
      id: MoveDirectoryRequest
    ListWorkspacesResponse:
      id: ListWorkspacesResponse
      description: '`ListWorkspaces` response message.'
      type: object
      properties:
        unreachable:
          type: array
          items:
            type: string
          description: Locations which could not be reached.
        workspaces:
          items:
            $ref: '#/components/schemas/Workspace'
          type: array
          description: List of workspaces.
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
    WorkflowInvocationAction:
      id: WorkflowInvocationAction
      properties:
        state:
          description: Output only. This action's current state.
          readOnly: true
          enum:
            - PENDING
            - RUNNING
            - SKIPPED
            - DISABLED
            - SUCCEEDED
            - CANCELLED
            - FAILED
          enumDescriptions:
            - The action has not yet been considered for invocation.
            - The action is currently running.
            - Execution of the action was skipped because upstream dependencies did not all complete successfully. A terminal state.
            - Execution of the action was disabled as per the configuration of the corresponding compilation result action. A terminal state.
            - The action succeeded. A terminal state.
            - The action was cancelled. A terminal state.
            - The action failed. A terminal state.
          type: string
        bigqueryAction:
          $ref: '#/components/schemas/BigQueryAction'
          description: Output only. The workflow action's bigquery action details.
          readOnly: true
        failureReason:
          type: string
          readOnly: true
          description: Output only. If and only if action's state is FAILED a failure reason is set.
        canonicalTarget:
          readOnly: true
          $ref: '#/components/schemas/Target'
          description: Output only. The action's identifier if the project had been compiled without any overrides configured. Unique within the compilation result.
        invocationTiming:
          readOnly: true
          description: Output only. This action's timing details. `start_time` will be set if the action is in [RUNNING, SUCCEEDED, CANCELLED, FAILED] state. `end_time` will be set if the action is in [SUCCEEDED, CANCELLED, FAILED] state.
          $ref: '#/components/schemas/Interval'
        target:
          readOnly: true
          description: Output only. This action's identifier. Unique within the workflow invocation.
          $ref: '#/components/schemas/Target'
      type: object
      description: Represents a single action in a workflow invocation.
    FetchFileDiffResponse:
      id: FetchFileDiffResponse
      properties:
        formattedDiff:
          description: The raw formatted Git diff for the file.
          type: string
      type: object
      description: '`FetchFileDiff` response message.'
    CompilationResult:
      description: Represents the result of compiling a Dataform project.
      type: object
      properties:
        dataformCoreVersion:
          description: Output only. The version of `@dataform/core` that was used for compilation.
          readOnly: true
          type: string
        name:
          description: Output only. The compilation result's name.
          readOnly: true
          type: string
        resolvedGitCommitSha:
          type: string
          readOnly: true
          description: Output only. The fully resolved Git commit SHA of the code that was compiled. Not set for compilation results whose source is a workspace.
        codeCompilationConfig:
          description: Immutable. If set, fields of `code_compilation_config` override the default compilation settings that are specified in dataform.json.
          $ref: '#/components/schemas/CodeCompilationConfig'
        compilationErrors:
          items:
            $ref: '#/components/schemas/CompilationError'
          type: array
          readOnly: true
          description: Output only. Errors encountered during project compilation.
        gitCommitish:
          type: string
          description: 'Immutable. Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository. Examples: - a commit SHA: `12ade345` - a tag: `tag1` - a branch name: `branch1`'
        workspace:
          description: Immutable. The name of the workspace to compile. Must be in the format `projects/*/locations/*/repositories/*/workspaces/*`.
          type: string
        releaseConfig:
          description: Immutable. The name of the release config to compile. The release config's 'current_compilation_result' field will be updated to this compilation result. Must be in the format `projects/*/locations/*/repositories/*/releaseConfigs/*`.
          type: string
      id: CompilationResult
    Status:
      properties:
        details:
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
        code:
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
    InvocationConfig:
      properties:
        includedTargets:
          items:
            $ref: '#/components/schemas/Target'
          description: Optional. The set of action identifiers to include.
          type: array
        transitiveDependentsIncluded:
          type: boolean
          description: Optional. When set to true, transitive dependents of included actions will be executed.
        fullyRefreshIncrementalTablesEnabled:
          description: Optional. When set to true, any incremental tables will be fully refreshed.
          type: boolean
        transitiveDependenciesIncluded:
          type: boolean
          description: Optional. When set to true, transitive dependencies of included actions will be executed.
        includedTags:
          description: Optional. The set of tags to include.
          items:
            type: string
          type: array
      id: InvocationConfig
      description: Includes various configuration options for a workflow invocation. If both `included_targets` and `included_tags` are unset, all actions will be included.
      type: object
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        verb:
          type: string
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
        cancelRequested:
          type: boolean
          readOnly: true
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
        apiVersion:
          type: string
          readOnly: true
          description: Output only. API version used to start the operation.
        endTime:
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
        statusDetail:
          type: string
          readOnly: true
          description: Output only. Human-readable status of the operation, if any.
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
          readOnly: true
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          type: string
          format: google-datetime
    ListRepositoriesResponse:
      properties:
        unreachable:
          items:
            type: string
          description: Locations which could not be reached.
          type: array
        nextPageToken:
          type: string
          description: A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
        repositories:
          type: array
          description: List of repositories.
          items:
            $ref: '#/components/schemas/Repository'
      type: object
      id: ListRepositoriesResponse
      description: '`ListRepositories` response message.'
    Interval:
      properties:
        endTime:
          type: string
          description: Optional. Exclusive end of the interval. If specified, a Timestamp matching this interval will have to be before the end.
          format: google-datetime
        startTime:
          type: string
          format: google-datetime
          description: Optional. Inclusive start of the interval. If specified, a Timestamp matching this interval will have to be the same or after the start.
      id: Interval
      type: object
      description: Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
    Empty:
      type: object
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
    ListCompilationResultsResponse:
      description: '`ListCompilationResults` response message.'
      id: ListCompilationResultsResponse
      type: object
      properties:
        unreachable:
          type: array
          description: Locations which could not be reached.
          items:
            type: string
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        compilationResults:
          items:
            $ref: '#/components/schemas/CompilationResult'
          description: List of compilation results.
          type: array
    MakeDirectoryRequest:
      id: MakeDirectoryRequest
      description: '`MakeDirectory` request message.'
      type: object
      properties:
        path:
          type: string
          description: Required. The directory's full path including directory name, relative to the workspace root.
    Operations:
      id: Operations
      type: object
      properties:
        disabled:
          type: boolean
          description: Whether this action is disabled (i.e. should not be run).
        dependencyTargets:
          description: A list of actions that this action depends on.
          type: array
          items:
            $ref: '#/components/schemas/Target'
        relationDescriptor:
          description: Descriptor for any output relation and its columns. Only set if `has_output` is true.
          $ref: '#/components/schemas/RelationDescriptor'
        queries:
          items:
            type: string
          type: array
          description: A list of arbitrary SQL statements that will be executed without alteration.
        tags:
          type: array
          items:
            type: string
          description: Arbitrary, user-defined tags on this action.
        hasOutput:
          type: boolean
          description: Whether these operations produce an output relation.
      description: Represents a list of arbitrary database operations.
    Relation:
      id: Relation
      description: Represents a database relation.
      properties:
        partitionExpirationDays:
          format: int32
          type: integer
          description: Sets the partition expiration in days.
        partitionExpression:
          type: string
          description: The SQL expression used to partition the relation.
        dependencyTargets:
          description: A list of actions that this action depends on.
          items:
            $ref: '#/components/schemas/Target'
          type: array
        tags:
          description: Arbitrary, user-defined tags on this action.
          items:
            type: string
          type: array
        postOperations:
          type: array
          items:
            type: string
          description: SQL statements to be executed after creating the relation.
        preOperations:
          type: array
          description: SQL statements to be executed before creating the relation.
          items:
            type: string
        disabled:
          description: Whether this action is disabled (i.e. should not be run).
          type: boolean
        additionalOptions:
          type: object
          description: Additional options that will be provided as key/value pairs into the options clause of a create table/view statement. See https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language for more information on which options are supported.
          additionalProperties:
            type: string
        incrementalTableConfig:
          $ref: '#/components/schemas/IncrementalTableConfig'
          description: Configures `INCREMENTAL_TABLE` settings for this relation. Only set if `relation_type` is `INCREMENTAL_TABLE`.
        selectQuery:
          description: The SELECT query which returns rows which this relation should contain.
          type: string
        relationDescriptor:
          $ref: '#/components/schemas/RelationDescriptor'
          description: Descriptor for the relation and its columns.
        requirePartitionFilter:
          type: boolean
          description: Specifies whether queries on this table must include a predicate filter that filters on the partitioning column.
        clusterExpressions:
          description: A list of columns or SQL expressions used to cluster the table.
          items:
            type: string
          type: array
        relationType:
          description: The type of this relation.
          enumDescriptions:
            - Default value. This value is unused.
            - The relation is a table.
            - The relation is a view.
            - The relation is an incrementalized table.
            - The relation is a materialized view.
          type: string
          enum:
            - RELATION_TYPE_UNSPECIFIED
            - TABLE
            - VIEW
            - INCREMENTAL_TABLE
            - MATERIALIZED_VIEW
      type: object
    MakeDirectoryResponse:
      description: '`MakeDirectory` response message.'
      id: MakeDirectoryResponse
      type: object
      properties: {}
    CompilationError:
      id: CompilationError
      description: An error encountered when attempting to compile a Dataform project.
      properties:
        stack:
          type: string
          description: Output only. The error's full stack trace.
          readOnly: true
        message:
          type: string
          description: Output only. The error's top level message.
          readOnly: true
        actionTarget:
          readOnly: true
          $ref: '#/components/schemas/Target'
          description: Output only. The identifier of the action where this error occurred, if available.
        path:
          type: string
          readOnly: true
          description: Output only. The path of the file where this error occurred, if available, relative to the project root.
      type: object
    ColumnDescriptor:
      description: Describes a column.
      properties:
        path:
          type: array
          items:
            type: string
          description: The identifier for the column. Each entry in `path` represents one level of nesting.
        description:
          description: A textual description of the column.
          type: string
        bigqueryPolicyTags:
          description: A list of BigQuery policy tags that will be applied to the column.
          items:
            type: string
          type: array
      id: ColumnDescriptor
      type: object
    MoveFileResponse:
      properties: {}
      type: object
      description: '`MoveFile` response message.'
      id: MoveFileResponse
    ScheduledReleaseRecord:
      id: ScheduledReleaseRecord
      type: object
      description: A record of an attempt to create a compilation result for this release config.
      properties:
        errorStatus:
          $ref: '#/components/schemas/Status'
          description: The error status encountered upon this attempt to create the compilation result, if the attempt was unsuccessful.
        releaseTime:
          format: google-datetime
          description: The timestamp of this release attempt.
          type: string
        compilationResult:
          description: The name of the created compilation result, if one was successfully created. Must be in the format `projects/*/locations/*/repositories/*/compilationResults/*`.
          type: string
    RelationDescriptor:
      type: object
      id: RelationDescriptor
      description: Describes a relation and its columns.
      properties:
        description:
          description: A text description of the relation.
          type: string
        columns:
          type: array
          items:
            $ref: '#/components/schemas/ColumnDescriptor'
          description: A list of descriptions of columns within the relation.
        bigqueryLabels:
          additionalProperties:
            type: string
          type: object
          description: A set of BigQuery labels that should be applied to the relation.
    Location:
      properties:
        displayName:
          type: string
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
        metadata:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      description: A resource that represents Google Cloud Platform location.
      id: Location
      type: object
    WriteFileRequest:
      type: object
      properties:
        path:
          type: string
          description: Required. The file.
        contents:
          description: Required. The file's contents.
          format: byte
          type: string
      id: WriteFileRequest
      description: '`WriteFile` request message.'
    BigQueryAction:
      properties:
        sqlScript:
          readOnly: true
          description: Output only. The generated BigQuery SQL script that will be executed.
          type: string
      description: Represents a workflow action that will run against BigQuery.
      type: object
      id: BigQueryAction
    WorkflowConfig:
      description: Represents a Dataform workflow configuration.
      type: object
      properties:
        name:
          readOnly: true
          type: string
          description: Output only. The workflow config's name.
        invocationConfig:
          description: Optional. If left unset, a default InvocationConfig will be used.
          $ref: '#/components/schemas/InvocationConfig'
        releaseConfig:
          type: string
          description: Required. The name of the release config whose release_compilation_result should be executed. Must be in the format `projects/*/locations/*/repositories/*/releaseConfigs/*`.
        recentScheduledExecutionRecords:
          items:
            $ref: '#/components/schemas/ScheduledExecutionRecord'
          readOnly: true
          description: Output only. Records of the 10 most recent scheduled execution attempts. Updated whenever automatic creation of a compilation result is triggered by cron_schedule.
          type: array
        timeZone:
          description: Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
          type: string
        cronSchedule:
          description: Optional. Optional schedule (in cron format) for automatic execution of this workflow config.
          type: string
      id: WorkflowConfig
    QueryWorkflowInvocationActionsResponse:
      type: object
      properties:
        workflowInvocationActions:
          items:
            $ref: '#/components/schemas/WorkflowInvocationAction'
          description: List of workflow invocation actions.
          type: array
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
      description: '`QueryWorkflowInvocationActions` response message.'
      id: QueryWorkflowInvocationActionsResponse
    ReadFileResponse:
      description: '`ReadFile` response message.'
      id: ReadFileResponse
      type: object
      properties:
        fileContents:
          format: byte
          type: string
          description: The file's contents.
    FetchFileGitStatusesResponse:
      description: '`FetchFileGitStatuses` response message.'
      properties:
        uncommittedFileChanges:
          items:
            $ref: '#/components/schemas/UncommittedFileChange'
          description: A list of all files which have uncommitted Git changes. There will only be a single entry for any given file.
          type: array
      id: FetchFileGitStatusesResponse
      type: object
    UncommittedFileChange:
      id: UncommittedFileChange
      properties:
        state:
          enum:
            - STATE_UNSPECIFIED
            - ADDED
            - DELETED
            - MODIFIED
            - HAS_CONFLICTS
          enumDescriptions:
            - Default value. This value is unused.
            - The file has been newly added.
            - The file has been deleted.
            - The file has been modified.
            - The file contains merge conflicts.
          description: Indicates the status of the file.
          type: string
        path:
          type: string
          description: The file's full path including filename, relative to the workspace root.
      type: object
      description: Represents the Git state of a file with uncommitted changes.
    IncrementalTableConfig:
      type: object
      description: Contains settings for relations of type `INCREMENTAL_TABLE`.
      properties:
        incrementalPreOperations:
          items:
            type: string
          description: SQL statements to be executed before inserting new rows into the relation.
          type: array
        updatePartitionFilter:
          description: A SQL expression conditional used to limit the set of existing rows considered for a merge operation (see `unique_key_parts` for more information).
          type: string
        refreshDisabled:
          type: boolean
          description: Whether this table should be protected from being refreshed.
        incrementalSelectQuery:
          type: string
          description: The SELECT query which returns rows which should be inserted into the relation if it already exists and is not being refreshed.
        incrementalPostOperations:
          description: SQL statements to be executed after inserting new rows into the relation.
          type: array
          items:
            type: string
        uniqueKeyParts:
          description: A set of columns or SQL expressions used to define row uniqueness. If any duplicates are discovered (as defined by `unique_key_parts`), only the newly selected rows (as defined by `incremental_select_query`) will be included in the relation.
          type: array
          items:
            type: string
      id: IncrementalTableConfig
    FetchGitAheadBehindResponse:
      description: '`FetchGitAheadBehind` response message.'
      type: object
      id: FetchGitAheadBehindResponse
      properties:
        commitsBehind:
          description: The number of commits in the workspace that are not in the remote branch.
          format: int32
          type: integer
        commitsAhead:
          format: int32
          type: integer
          description: The number of commits in the remote branch that are not in the workspace.
    ReleaseConfig:
      description: Represents a Dataform release configuration.
      type: object
      id: ReleaseConfig
      properties:
        releaseCompilationResult:
          description: Optional. The name of the currently released compilation result for this release config. This value is updated when a compilation result is created from this release config, or when this resource is updated by API call (perhaps to roll back to an earlier release). The compilation result must have been created using this release config. Must be in the format `projects/*/locations/*/repositories/*/compilationResults/*`.
          type: string
        gitCommitish:
          description: 'Required. Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository. Examples: - a commit SHA: `12ade345` - a tag: `tag1` - a branch name: `branch1`'
          type: string
        cronSchedule:
          description: Optional. Optional schedule (in cron format) for automatic creation of compilation results.
          type: string
        name:
          description: Output only. The release config's name.
          readOnly: true
          type: string
        recentScheduledReleaseRecords:
          type: array
          description: Output only. Records of the 10 most recent scheduled release attempts. Updated whenever automatic creation of a compilation result is triggered by cron_schedule.
          readOnly: true
          items:
            $ref: '#/components/schemas/ScheduledReleaseRecord'
        timeZone:
          type: string
          description: Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
        codeCompilationConfig:
          $ref: '#/components/schemas/CodeCompilationConfig'
          description: Optional. If set, fields of `code_compilation_config` override the default compilation settings that are specified in dataform.json.
    Workspace:
      type: object
      id: Workspace
      description: Represents a Dataform Git workspace.
      properties:
        name:
          readOnly: true
          type: string
          description: Output only. The workspace's name.
    MoveFileRequest:
      properties:
        newPath:
          type: string
          description: Required. The file's new path including filename, relative to the workspace root.
        path:
          type: string
          description: Required. The file's full path including filename, relative to the workspace root.
      description: '`MoveFile` request message.'
      type: object
      id: MoveFileRequest
    ListWorkflowInvocationsResponse:
      properties:
        unreachable:
          type: array
          items:
            type: string
          description: Locations which could not be reached.
        workflowInvocations:
          type: array
          description: List of workflow invocations.
          items:
            $ref: '#/components/schemas/WorkflowInvocation'
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
      description: '`ListWorkflowInvocations` response message.'
      id: ListWorkflowInvocationsResponse
      type: object
    CommitWorkspaceChangesRequest:
      id: CommitWorkspaceChangesRequest
      properties:
        author:
          $ref: '#/components/schemas/CommitAuthor'
          description: Required. The commit's author.
        commitMessage:
          type: string
          description: Optional. The commit's message.
        paths:
          type: array
          description: Optional. Full file paths to commit including filename, rooted at workspace root. If left empty, all files will be committed.
          items:
            type: string
      description: '`CommitWorkspaceChanges` request message.'
      type: object
    PushGitCommitsRequest:
      type: object
      properties:
        remoteBranch:
          description: Optional. The name of the branch in the Git remote to which commits should be pushed. If left unset, the repository's default branch name will be used.
          type: string
      id: PushGitCommitsRequest
      description: '`PushGitCommits` request message.'
    InstallNpmPackagesRequest:
      properties: {}
      id: InstallNpmPackagesRequest
      description: '`InstallNpmPackages` request message.'
      type: object
    PullGitCommitsRequest:
      description: '`PullGitCommits` request message.'
      type: object
      id: PullGitCommitsRequest
      properties:
        author:
          $ref: '#/components/schemas/CommitAuthor'
          description: Required. The author of any merge commit which may be created as a result of merging fetched Git commits into this workspace.
        remoteBranch:
          type: string
          description: Optional. The name of the branch in the Git remote from which to pull commits. If left unset, the repository's default branch name will be used.
    RemoveFileRequest:
      description: '`RemoveFile` request message.'
      properties:
        path:
          type: string
          description: Required. The file's full path including filename, relative to the workspace root.
      type: object
      id: RemoveFileRequest
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    locations:
      id: google.dataform.locations
      name: locations
      title: Locations
      methods:
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: locations
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
    workflow_configs:
      id: google.dataform.workflow_configs
      name: workflow_configs
      title: Workflow_configs
      methods:
        projects_locations_repositories_workflowConfigs_patch:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowConfigs~1{workflowConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workflowConfigs_delete:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowConfigs~1{workflowConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workflowConfigs_get:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowConfigs~1{workflowConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workflowConfigs_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workflowConfigs_create:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_configs/methods/projects_locations_repositories_workflowConfigs_get'
          - $ref: '#/components/x-stackQL-resources/workflow_configs/methods/projects_locations_repositories_workflowConfigs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/workflow_configs/methods/projects_locations_repositories_workflowConfigs_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workflow_configs/methods/projects_locations_repositories_workflowConfigs_delete'
    compilation_results:
      id: google.dataform.compilation_results
      name: compilation_results
      title: Compilation_results
      methods:
        projects_locations_repositories_compilationResults_create:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1compilationResults/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_compilationResults_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1compilationResults/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_compilationResults_get:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1compilationResults~1{compilationResultsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_compilationResults_query:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1compilationResults~1{compilationResultsId}:query/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/compilation_results/methods/projects_locations_repositories_compilationResults_get'
          - $ref: '#/components/x-stackQL-resources/compilation_results/methods/projects_locations_repositories_compilationResults_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/compilation_results/methods/projects_locations_repositories_compilationResults_create'
        update: []
        delete: []
    release_configs:
      id: google.dataform.release_configs
      name: release_configs
      title: Release_configs
      methods:
        projects_locations_repositories_releaseConfigs_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1releaseConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_releaseConfigs_create:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1releaseConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_releaseConfigs_delete:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1releaseConfigs~1{releaseConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_releaseConfigs_get:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1releaseConfigs~1{releaseConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_releaseConfigs_patch:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1releaseConfigs~1{releaseConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/release_configs/methods/projects_locations_repositories_releaseConfigs_get'
          - $ref: '#/components/x-stackQL-resources/release_configs/methods/projects_locations_repositories_releaseConfigs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/release_configs/methods/projects_locations_repositories_releaseConfigs_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/release_configs/methods/projects_locations_repositories_releaseConfigs_delete'
    workflow_invocations:
      id: google.dataform.workflow_invocations
      name: workflow_invocations
      title: Workflow_invocations
      methods:
        projects_locations_repositories_workflowInvocations_query:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowInvocations~1{workflowInvocationsId}:query/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workflowInvocations_get:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowInvocations~1{workflowInvocationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workflowInvocations_delete:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowInvocations~1{workflowInvocationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workflowInvocations_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowInvocations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workflowInvocations_create:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowInvocations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workflowInvocations_cancel:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowInvocations~1{workflowInvocationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_invocations/methods/projects_locations_repositories_workflowInvocations_get'
          - $ref: '#/components/x-stackQL-resources/workflow_invocations/methods/projects_locations_repositories_workflowInvocations_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/workflow_invocations/methods/projects_locations_repositories_workflowInvocations_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workflow_invocations/methods/projects_locations_repositories_workflowInvocations_delete'
    workspaces:
      id: google.dataform.workspaces
      name: workspaces
      title: Workspaces
      methods:
        projects_locations_repositories_workspaces_moveFile:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:moveFile/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workspaces_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workspaces_create:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workspaces_writeFile:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:writeFile/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workspaces_queryDirectoryContents:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:queryDirectoryContents/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workspaces_reset:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:reset/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workspaces_pull:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:pull/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workspaces_installNpmPackages:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:installNpmPackages/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workspaces_moveDirectory:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:moveDirectory/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workspaces_push:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:push/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workspaces_readFile:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:readFile/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workspaces_commit:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:commit/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workspaces_delete:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workspaces_get:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_workspaces_makeDirectory:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:makeDirectory/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/projects_locations_repositories_workspaces_get'
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/projects_locations_repositories_workspaces_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/projects_locations_repositories_workspaces_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/projects_locations_repositories_workspaces_delete'
    workspaces__directory:
      id: google.dataform.workspaces__directory
      name: workspaces__directory
      title: Workspaces__directory
      methods:
        projects_locations_repositories_workspaces_removeDirectory:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:removeDirectory/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workspaces__directory/methods/projects_locations_repositories_workspaces_removeDirectory'
    workspaces__file_diff:
      id: google.dataform.workspaces__file_diff
      name: workspaces__file_diff
      title: Workspaces__file_diff
      methods:
        projects_locations_repositories_workspaces_fetchFileDiff:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:fetchFileDiff/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workspaces__file_diff/methods/projects_locations_repositories_workspaces_fetchFileDiff'
        insert: []
        update: []
        delete: []
    workspaces__git_ahead_behind:
      id: google.dataform.workspaces__git_ahead_behind
      name: workspaces__git_ahead_behind
      title: Workspaces__git_ahead_behind
      methods:
        projects_locations_repositories_workspaces_fetchGitAheadBehind:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:fetchGitAheadBehind/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workspaces__git_ahead_behind/methods/projects_locations_repositories_workspaces_fetchGitAheadBehind'
        insert: []
        update: []
        delete: []
    workspaces__file:
      id: google.dataform.workspaces__file
      name: workspaces__file
      title: Workspaces__file
      methods:
        projects_locations_repositories_workspaces_removeFile:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:removeFile/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workspaces__file/methods/projects_locations_repositories_workspaces_removeFile'
    workspaces__file_git_statuses:
      id: google.dataform.workspaces__file_git_statuses
      name: workspaces__file_git_statuses
      title: Workspaces__file_git_statuses
      methods:
        projects_locations_repositories_workspaces_fetchFileGitStatuses:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:fetchFileGitStatuses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workspaces__file_git_statuses/methods/projects_locations_repositories_workspaces_fetchFileGitStatuses'
        insert: []
        update: []
        delete: []
    repositories:
      id: google.dataform.repositories
      name: repositories
      title: Repositories
      methods:
        projects_locations_repositories_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_create:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_patch:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_delete:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_repositories_get:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/repositories/methods/projects_locations_repositories_get'
          - $ref: '#/components/x-stackQL-resources/repositories/methods/projects_locations_repositories_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/repositories/methods/projects_locations_repositories_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/repositories/methods/projects_locations_repositories_delete'
    repositories__remote_branches:
      id: google.dataform.repositories__remote_branches
      name: repositories__remote_branches
      title: Repositories__remote_branches
      methods:
        projects_locations_repositories_fetchRemoteBranches:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}:fetchRemoteBranches/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/repositories__remote_branches/methods/projects_locations_repositories_fetchRemoteBranches'
        insert: []
        update: []
        delete: []
paths:
  /v1beta1/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: dataform.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: includeUnrevealedLocations
          schema:
            type: boolean
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: dataform.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workflowConfigs/{workflowConfigsId}:
    parameters: *ref_1
    patch:
      description: Updates a single WorkflowConfig.
      operationId: dataform.projects.locations.repositories.workflowConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workflowConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: workflow_configs
      x-stackQL-verb: exec
    delete:
      description: Deletes a single WorkflowConfig.
      operationId: dataform.projects.locations.repositories.workflowConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workflowConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_configs
      x-stackQL-verb: delete
    get:
      description: Fetches a single WorkflowConfig.
      operationId: dataform.projects.locations.repositories.workflowConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workflowConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_configs
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workflowConfigs:
    parameters: *ref_1
    get:
      description: Lists WorkflowConfigs in a given Repository.
      operationId: dataform.projects.locations.repositories.workflowConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkflowConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: workflow_configs
      x-stackQL-verb: select
    post:
      description: Creates a new WorkflowConfig in a given Repository.
      operationId: dataform.projects.locations.repositories.workflowConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: workflowConfigId
          schema:
            type: string
      x-stackQL-resource: workflow_configs
      x-stackQL-verb: insert
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/compilationResults:
    parameters: *ref_1
    post:
      description: Creates a new CompilationResult in a given project and location.
      operationId: dataform.projects.locations.repositories.compilationResults.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompilationResult'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompilationResult'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: compilation_results
      x-stackQL-verb: insert
    get:
      description: Lists CompilationResults in a given Repository.
      operationId: dataform.projects.locations.repositories.compilationResults.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCompilationResultsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: compilation_results
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/compilationResults/{compilationResultsId}:
    parameters: *ref_1
    get:
      description: Fetches a single CompilationResult.
      operationId: dataform.projects.locations.repositories.compilationResults.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompilationResult'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: compilationResultsId
          required: true
          schema:
            type: string
      x-stackQL-resource: compilation_results
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/compilationResults/{compilationResultsId}:query:
    parameters: *ref_1
    get:
      description: Returns CompilationResultActions in a given CompilationResult.
      operationId: dataform.projects.locations.repositories.compilationResults.query
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCompilationResultActionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: compilationResultsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: compilation_results
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/releaseConfigs:
    parameters: *ref_1
    get:
      description: Lists ReleaseConfigs in a given Repository.
      operationId: dataform.projects.locations.repositories.releaseConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReleaseConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: release_configs
      x-stackQL-verb: select
    post:
      description: Creates a new ReleaseConfig in a given Repository.
      operationId: dataform.projects.locations.repositories.releaseConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: releaseConfigId
          schema:
            type: string
      x-stackQL-resource: release_configs
      x-stackQL-verb: insert
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/releaseConfigs/{releaseConfigsId}:
    parameters: *ref_1
    delete:
      description: Deletes a single ReleaseConfig.
      operationId: dataform.projects.locations.repositories.releaseConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: releaseConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: release_configs
      x-stackQL-verb: delete
    get:
      description: Fetches a single ReleaseConfig.
      operationId: dataform.projects.locations.repositories.releaseConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: releaseConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: release_configs
      x-stackQL-verb: select
    patch:
      description: Updates a single ReleaseConfig.
      operationId: dataform.projects.locations.repositories.releaseConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: releaseConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: release_configs
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workflowInvocations/{workflowInvocationsId}:query:
    parameters: *ref_1
    get:
      description: Returns WorkflowInvocationActions in a given WorkflowInvocation.
      operationId: dataform.projects.locations.repositories.workflowInvocations.query
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryWorkflowInvocationActionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workflowInvocationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: workflow_invocations
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workflowInvocations/{workflowInvocationsId}:
    parameters: *ref_1
    get:
      description: Fetches a single WorkflowInvocation.
      operationId: dataform.projects.locations.repositories.workflowInvocations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowInvocation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workflowInvocationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_invocations
      x-stackQL-verb: select
    delete:
      description: Deletes a single WorkflowInvocation.
      operationId: dataform.projects.locations.repositories.workflowInvocations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workflowInvocationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_invocations
      x-stackQL-verb: delete
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workflowInvocations:
    parameters: *ref_1
    get:
      description: Lists WorkflowInvocations in a given Repository.
      operationId: dataform.projects.locations.repositories.workflowInvocations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkflowInvocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: workflow_invocations
      x-stackQL-verb: select
    post:
      description: Creates a new WorkflowInvocation in a given Repository.
      operationId: dataform.projects.locations.repositories.workflowInvocations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowInvocation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowInvocation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_invocations
      x-stackQL-verb: insert
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workflowInvocations/{workflowInvocationsId}:cancel:
    parameters: *ref_1
    post:
      description: Requests cancellation of a running WorkflowInvocation.
      operationId: dataform.projects.locations.repositories.workflowInvocations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelWorkflowInvocationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workflowInvocationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_invocations
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:moveFile:
    parameters: *ref_1
    post:
      description: Moves a file (inside a Workspace) to a new location.
      operationId: dataform.projects.locations.repositories.workspaces.moveFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveFileRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoveFileResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:removeDirectory:
    parameters: *ref_1
    post:
      description: Deletes a directory (inside a Workspace) and all of its contents.
      operationId: dataform.projects.locations.repositories.workspaces.removeDirectory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveDirectoryRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces__directory
      x-stackQL-verb: delete
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:fetchFileDiff:
    parameters: *ref_1
    get:
      description: Fetches Git diff for an uncommitted file in a Workspace.
      operationId: dataform.projects.locations.repositories.workspaces.fetchFileDiff
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchFileDiffResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: path
          schema:
            type: string
      x-stackQL-resource: workspaces__file_diff
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:fetchGitAheadBehind:
    parameters: *ref_1
    get:
      description: Fetches Git ahead/behind against a remote branch.
      operationId: dataform.projects.locations.repositories.workspaces.fetchGitAheadBehind
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchGitAheadBehindResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: remoteBranch
          schema:
            type: string
      x-stackQL-resource: workspaces__git_ahead_behind
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces:
    parameters: *ref_1
    get:
      description: Lists Workspaces in a given Repository.
      operationId: dataform.projects.locations.repositories.workspaces.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspacesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: select
    post:
      description: Creates a new Workspace in a given Repository.
      operationId: dataform.projects.locations.repositories.workspaces.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: workspaceId
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: insert
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:removeFile:
    parameters: *ref_1
    post:
      description: Deletes a file (inside a Workspace).
      operationId: dataform.projects.locations.repositories.workspaces.removeFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveFileRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces__file
      x-stackQL-verb: delete
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:writeFile:
    parameters: *ref_1
    post:
      description: Writes to a file (inside a Workspace).
      operationId: dataform.projects.locations.repositories.workspaces.writeFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteFileRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteFileResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:queryDirectoryContents:
    parameters: *ref_1
    get:
      description: Returns the contents of a given Workspace directory.
      operationId: dataform.projects.locations.repositories.workspaces.queryDirectoryContents
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDirectoryContentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: path
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: workspaces
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:reset:
    parameters: *ref_1
    post:
      description: Performs a Git reset for uncommitted files in a Workspace.
      operationId: dataform.projects.locations.repositories.workspaces.reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetWorkspaceChangesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:pull:
    parameters: *ref_1
    post:
      description: Pulls Git commits from the Repository's remote into a Workspace.
      operationId: dataform.projects.locations.repositories.workspaces.pull
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullGitCommitsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:installNpmPackages:
    parameters: *ref_1
    post:
      description: Installs dependency NPM packages (inside a Workspace).
      operationId: dataform.projects.locations.repositories.workspaces.installNpmPackages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstallNpmPackagesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallNpmPackagesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:moveDirectory:
    parameters: *ref_1
    post:
      description: Moves a directory (inside a Workspace), and all of its contents, to a new location.
      operationId: dataform.projects.locations.repositories.workspaces.moveDirectory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveDirectoryRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoveDirectoryResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:push:
    parameters: *ref_1
    post:
      description: Pushes Git commits from a Workspace to the Repository's remote.
      operationId: dataform.projects.locations.repositories.workspaces.push
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushGitCommitsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:readFile:
    parameters: *ref_1
    get:
      description: Returns the contents of a file (inside a Workspace).
      operationId: dataform.projects.locations.repositories.workspaces.readFile
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadFileResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: path
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:commit:
    parameters: *ref_1
    post:
      description: Applies a Git commit for uncommitted files in a Workspace.
      operationId: dataform.projects.locations.repositories.workspaces.commit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitWorkspaceChangesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:
    parameters: *ref_1
    delete:
      description: Deletes a single Workspace.
      operationId: dataform.projects.locations.repositories.workspaces.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: delete
    get:
      description: Fetches a single Workspace.
      operationId: dataform.projects.locations.repositories.workspaces.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:makeDirectory:
    parameters: *ref_1
    post:
      description: Creates a directory inside a Workspace.
      operationId: dataform.projects.locations.repositories.workspaces.makeDirectory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MakeDirectoryRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MakeDirectoryResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:fetchFileGitStatuses:
    parameters: *ref_1
    get:
      description: Fetches Git statuses for the files in a Workspace.
      operationId: dataform.projects.locations.repositories.workspaces.fetchFileGitStatuses
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchFileGitStatusesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces__file_git_statuses
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories:
    parameters: *ref_1
    get:
      description: Lists Repositories in a given project and location.
      operationId: dataform.projects.locations.repositories.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepositoriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: repositories
      x-stackQL-verb: select
    post:
      description: Creates a new Repository in a given project and location.
      operationId: dataform.projects.locations.repositories.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: repositoryId
          schema:
            type: string
      x-stackQL-resource: repositories
      x-stackQL-verb: insert
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:
    parameters: *ref_1
    patch:
      description: Updates a single Repository.
      operationId: dataform.projects.locations.repositories.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: repositories
      x-stackQL-verb: exec
    delete:
      description: Deletes a single Repository.
      operationId: dataform.projects.locations.repositories.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: repositories
      x-stackQL-verb: delete
    get:
      description: Fetches a single Repository.
      operationId: dataform.projects.locations.repositories.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: repositories
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:fetchRemoteBranches:
    parameters: *ref_1
    get:
      description: Fetches a Repository's remote branches.
      operationId: dataform.projects.locations.repositories.fetchRemoteBranches
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchRemoteBranchesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: repositories__remote_branches
      x-stackQL-verb: select
