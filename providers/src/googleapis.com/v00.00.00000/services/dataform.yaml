openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Dataform API
  description: >-
    Service to develop, version control, and operationalize SQL pipelines in
    BigQuery.
  version: v1beta1
  x-discovery-doc-revision: '20250817'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/dataform/docs
servers:
  - url: https://dataform.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/bigquery: >-
              View and manage your data in Google BigQuery and see the email
              address for your Google Account
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
    Policy:
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
          format: byte
    Binding:
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
          items:
            type: string
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
    Expr:
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
          items:
            type: string
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    ListRepositoriesResponse:
      id: ListRepositoriesResponse
      description: '`ListRepositories` response message.'
      type: object
      properties:
        repositories:
          description: List of repositories.
          type: array
          items:
            $ref: '#/components/schemas/Repository'
        nextPageToken:
          description: >-
            A token which can be sent as `page_token` to retrieve the next page.
            If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations which could not be reached.
          type: array
          items:
            type: string
    Repository:
      id: Repository
      description: Represents a Dataform Git repository.
      type: object
      properties:
        name:
          description: Identifier. The repository's name.
          type: string
        createTime:
          description: Output only. The timestamp of when the repository was created.
          readOnly: true
          type: string
          format: google-datetime
        displayName:
          description: Optional. The repository's user-friendly name.
          type: string
        gitRemoteSettings:
          description: >-
            Optional. If set, configures this repository to be linked to a Git
            remote.
          $ref: '#/components/schemas/GitRemoteSettings'
        npmrcEnvironmentVariablesSecretVersion:
          description: >-
            Optional. The name of the Secret Manager secret version to be used
            to interpolate variables into the .npmrc file for package
            installation operations. Must be in the format
            `projects/*/secrets/*/versions/*`. The file itself must be in a JSON
            format.
          type: string
        workspaceCompilationOverrides:
          description: >-
            Optional. If set, fields of `workspace_compilation_overrides`
            override the default compilation settings that are specified in
            dataform.json when creating workspace-scoped compilation results.
            See documentation for `WorkspaceCompilationOverrides` for more
            information.
          $ref: '#/components/schemas/WorkspaceCompilationOverrides'
        labels:
          description: Optional. Repository user labels.
          type: object
          additionalProperties:
            type: string
        setAuthenticatedUserAdmin:
          description: >-
            Optional. Input only. If set to true, the authenticated user will be
            granted the roles/dataform.admin role on the created repository. To
            modify access to the created repository later apply setIamPolicy
            from
            https://cloud.google.com/dataform/reference/rest#rest-resource:-v1beta1.projects.locations.repositories
          type: boolean
        serviceAccount:
          description: Optional. The service account to run workflow invocations under.
          type: string
        kmsKeyName:
          description: >-
            Optional. The reference to a KMS encryption key. If provided, it
            will be used to encrypt user data in the repository and all child
            resources. It is not possible to add or update the encryption key
            after the repository is created. Example:
            `projects/{kms_project}/locations/{location}/keyRings/{key_location}/cryptoKeys/{key}`
          type: string
        dataEncryptionState:
          description: >-
            Output only. A data encryption state of a Git repository if this
            Repository is protected by a KMS key.
          readOnly: true
          $ref: '#/components/schemas/DataEncryptionState'
        internalMetadata:
          description: >-
            Output only. All the metadata information that is used internally to
            serve the resource. For example: timestamps, flags, status fields,
            etc. The format of this field is a JSON string.
          readOnly: true
          type: string
    GitRemoteSettings:
      id: GitRemoteSettings
      description: Controls Git remote configuration for a repository.
      type: object
      properties:
        url:
          description: Required. The Git remote's URL.
          type: string
        defaultBranch:
          description: Required. The Git remote's default branch name.
          type: string
        authenticationTokenSecretVersion:
          description: >-
            Optional. The name of the Secret Manager secret version to use as an
            authentication token for Git operations. Must be in the format
            `projects/*/secrets/*/versions/*`.
          type: string
        sshAuthenticationConfig:
          description: Optional. Authentication fields for remote uris using SSH protocol.
          $ref: '#/components/schemas/SshAuthenticationConfig'
        tokenStatus:
          description: >-
            Output only. Deprecated: The field does not contain any token status
            information. Instead use
            https://cloud.google.com/dataform/reference/rest/v1beta1/projects.locations.repositories/computeAccessTokenStatus
          readOnly: true
          deprecated: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              The token could not be found in Secret Manager (or the Dataform
              Service Account did not have permission to access it).
            - >-
              The token could not be used to authenticate against the Git
              remote.
            - >-
              The token was used successfully to authenticate against the Git
              remote.
          enum:
            - TOKEN_STATUS_UNSPECIFIED
            - NOT_FOUND
            - INVALID
            - VALID
    SshAuthenticationConfig:
      id: SshAuthenticationConfig
      description: Configures fields for performing SSH authentication.
      type: object
      properties:
        userPrivateKeySecretVersion:
          description: >-
            Required. The name of the Secret Manager secret version to use as a
            ssh private key for Git operations. Must be in the format
            `projects/*/secrets/*/versions/*`.
          type: string
        hostPublicKey:
          description: >-
            Required. Content of a public SSH key to verify an identity of a
            remote Git host.
          type: string
    WorkspaceCompilationOverrides:
      id: WorkspaceCompilationOverrides
      description: >-
        Configures workspace compilation overrides for a repository. Primarily
        used by the UI (`console.cloud.google.com`). `schema_suffix` and
        `table_prefix` can have a special expression - `${workspaceName}`, which
        refers to the workspace name from which the compilation results will be
        created. API callers are expected to resolve the expression in these
        overrides and provide them explicitly in `code_compilation_config`
        (https://cloud.google.com/dataform/reference/rest/v1beta1/projects.locations.repositories.compilationResults#codecompilationconfig)
        when creating workspace-scoped compilation results.
      type: object
      properties:
        defaultDatabase:
          description: Optional. The default database (Google Cloud project ID).
          type: string
        schemaSuffix:
          description: >-
            Optional. The suffix that should be appended to all schema (BigQuery
            dataset ID) names.
          type: string
        tablePrefix:
          description: Optional. The prefix that should be prepended to all table names.
          type: string
    DataEncryptionState:
      id: DataEncryptionState
      description: Describes encryption state of a resource.
      type: object
      properties:
        kmsKeyVersionName:
          description: >-
            Required. The KMS key version name with which data of a resource is
            encrypted.
          type: string
    CommitRepositoryChangesRequest:
      id: CommitRepositoryChangesRequest
      description: '`CommitRepositoryChanges` request message.'
      type: object
      properties:
        commitMetadata:
          description: Required. The changes to commit to the repository.
          $ref: '#/components/schemas/CommitMetadata'
        requiredHeadCommitSha:
          description: >-
            Optional. The commit SHA which must be the repository's current HEAD
            before applying this commit; otherwise this request will fail. If
            unset, no validation on the current HEAD commit SHA is performed.
          type: string
        fileOperations:
          description: >-
            Optional. A map to the path of the file to the operation. The path
            is the full file path including filename, from repository root.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FileOperation'
    CommitMetadata:
      id: CommitMetadata
      description: Represents a Dataform Git commit.
      type: object
      properties:
        author:
          description: Required. The commit's author.
          $ref: '#/components/schemas/CommitAuthor'
        commitMessage:
          description: Optional. The commit's message.
          type: string
    CommitAuthor:
      id: CommitAuthor
      description: Represents the author of a Git commit.
      type: object
      properties:
        name:
          description: Required. The commit author's name.
          type: string
        emailAddress:
          description: Required. The commit author's email address.
          type: string
    FileOperation:
      id: FileOperation
      description: Represents a single file operation to the repository.
      type: object
      properties:
        writeFile:
          description: Represents the write operation.
          $ref: '#/components/schemas/WriteFile'
        deleteFile:
          description: Represents the delete operation.
          $ref: '#/components/schemas/DeleteFile'
    WriteFile:
      id: WriteFile
      description: Represents the write file operation (for files added or modified).
      type: object
      properties:
        contents:
          description: The file's contents.
          type: string
          format: byte
    DeleteFile:
      id: DeleteFile
      description: Represents the delete file operation.
      type: object
      properties: {}
    CommitRepositoryChangesResponse:
      id: CommitRepositoryChangesResponse
      description: '`CommitRepositoryChanges` response message.'
      type: object
      properties:
        commitSha:
          description: The commit SHA of the current commit.
          type: string
    ReadRepositoryFileResponse:
      id: ReadRepositoryFileResponse
      description: '`ReadRepositoryFile` response message.'
      type: object
      properties:
        contents:
          description: The file's contents.
          type: string
          format: byte
    QueryRepositoryDirectoryContentsResponse:
      id: QueryRepositoryDirectoryContentsResponse
      description: '`QueryRepositoryDirectoryContents` response message.'
      type: object
      properties:
        directoryEntries:
          description: List of entries in the directory.
          type: array
          items:
            $ref: '#/components/schemas/DirectoryEntry'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    DirectoryEntry:
      id: DirectoryEntry
      description: Represents a single entry in a directory.
      type: object
      properties:
        file:
          description: A file in the directory.
          type: string
        directory:
          description: A child directory in the directory.
          type: string
    FetchRepositoryHistoryResponse:
      id: FetchRepositoryHistoryResponse
      description: '`FetchRepositoryHistory` response message.'
      type: object
      properties:
        commits:
          description: A list of commit logs, ordered by 'git log' default order.
          type: array
          items:
            $ref: '#/components/schemas/CommitLogEntry'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    CommitLogEntry:
      id: CommitLogEntry
      description: Represents a single commit log.
      type: object
      properties:
        commitTime:
          description: Commit timestamp.
          type: string
          format: google-datetime
        commitSha:
          description: The commit SHA for this commit log entry.
          type: string
        author:
          description: The commit author for this commit log entry.
          $ref: '#/components/schemas/CommitAuthor'
        commitMessage:
          description: The commit message for this commit log entry.
          type: string
    ComputeRepositoryAccessTokenStatusResponse:
      id: ComputeRepositoryAccessTokenStatusResponse
      description: '`ComputeRepositoryAccessTokenStatus` response message.'
      type: object
      properties:
        tokenStatus:
          description: Indicates the status of the Git access token.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              The token could not be found in Secret Manager (or the Dataform
              Service Account did not have permission to access it).
            - >-
              The token could not be used to authenticate against the Git
              remote.
            - >-
              The token was used successfully to authenticate against the Git
              remote.
          enum:
            - TOKEN_STATUS_UNSPECIFIED
            - NOT_FOUND
            - INVALID
            - VALID
    FetchRemoteBranchesResponse:
      id: FetchRemoteBranchesResponse
      description: '`FetchRemoteBranches` response message.'
      type: object
      properties:
        branches:
          description: The remote repository's branch names.
          type: array
          items:
            type: string
    ListWorkspacesResponse:
      id: ListWorkspacesResponse
      description: '`ListWorkspaces` response message.'
      type: object
      properties:
        workspaces:
          description: List of workspaces.
          type: array
          items:
            $ref: '#/components/schemas/Workspace'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations which could not be reached.
          type: array
          items:
            type: string
    Workspace:
      id: Workspace
      description: Represents a Dataform Git workspace.
      type: object
      properties:
        name:
          description: Identifier. The workspace's name.
          type: string
        createTime:
          description: Output only. The timestamp of when the workspace was created.
          readOnly: true
          type: string
          format: google-datetime
        dataEncryptionState:
          description: >-
            Output only. A data encryption state of a Git repository if this
            Workspace is protected by a KMS key.
          readOnly: true
          $ref: '#/components/schemas/DataEncryptionState'
        internalMetadata:
          description: >-
            Output only. All the metadata information that is used internally to
            serve the resource. For example: timestamps, flags, status fields,
            etc. The format of this field is a JSON string.
          readOnly: true
          type: string
    InstallNpmPackagesRequest:
      id: InstallNpmPackagesRequest
      description: '`InstallNpmPackages` request message.'
      type: object
      properties: {}
    InstallNpmPackagesResponse:
      id: InstallNpmPackagesResponse
      description: '`InstallNpmPackages` response message.'
      type: object
      properties: {}
    PullGitCommitsRequest:
      id: PullGitCommitsRequest
      description: '`PullGitCommits` request message.'
      type: object
      properties:
        remoteBranch:
          description: >-
            Optional. The name of the branch in the Git remote from which to
            pull commits. If left unset, the repository's default branch name
            will be used.
          type: string
        author:
          description: >-
            Required. The author of any merge commit which may be created as a
            result of merging fetched Git commits into this workspace.
          $ref: '#/components/schemas/CommitAuthor'
    PullGitCommitsResponse:
      id: PullGitCommitsResponse
      description: '`PullGitCommits` response message.'
      type: object
      properties: {}
    PushGitCommitsRequest:
      id: PushGitCommitsRequest
      description: '`PushGitCommits` request message.'
      type: object
      properties:
        remoteBranch:
          description: >-
            Optional. The name of the branch in the Git remote to which commits
            should be pushed. If left unset, the repository's default branch
            name will be used.
          type: string
    PushGitCommitsResponse:
      id: PushGitCommitsResponse
      description: '`PushGitCommits` response message.'
      type: object
      properties: {}
    FetchFileGitStatusesResponse:
      id: FetchFileGitStatusesResponse
      description: '`FetchFileGitStatuses` response message.'
      type: object
      properties:
        uncommittedFileChanges:
          description: >-
            A list of all files which have uncommitted Git changes. There will
            only be a single entry for any given file.
          type: array
          items:
            $ref: '#/components/schemas/UncommittedFileChange'
    UncommittedFileChange:
      id: UncommittedFileChange
      description: Represents the Git state of a file with uncommitted changes.
      type: object
      properties:
        path:
          description: >-
            The file's full path including filename, relative to the workspace
            root.
          type: string
        state:
          description: Output only. Indicates the status of the file.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The file has been newly added.
            - The file has been deleted.
            - The file has been modified.
            - The file contains merge conflicts.
          enum:
            - STATE_UNSPECIFIED
            - ADDED
            - DELETED
            - MODIFIED
            - HAS_CONFLICTS
    FetchGitAheadBehindResponse:
      id: FetchGitAheadBehindResponse
      description: '`FetchGitAheadBehind` response message.'
      type: object
      properties:
        commitsAhead:
          description: >-
            The number of commits in the remote branch that are not in the
            workspace.
          type: integer
          format: int32
        commitsBehind:
          description: >-
            The number of commits in the workspace that are not in the remote
            branch.
          type: integer
          format: int32
    CommitWorkspaceChangesRequest:
      id: CommitWorkspaceChangesRequest
      description: '`CommitWorkspaceChanges` request message.'
      type: object
      properties:
        author:
          description: Required. The commit's author.
          $ref: '#/components/schemas/CommitAuthor'
        commitMessage:
          description: Optional. The commit's message.
          type: string
        paths:
          description: >-
            Optional. Full file paths to commit including filename, rooted at
            workspace root. If left empty, all files will be committed.
          type: array
          items:
            type: string
    CommitWorkspaceChangesResponse:
      id: CommitWorkspaceChangesResponse
      description: '`CommitWorkspaceChanges` response message.'
      type: object
      properties: {}
    ResetWorkspaceChangesRequest:
      id: ResetWorkspaceChangesRequest
      description: '`ResetWorkspaceChanges` request message.'
      type: object
      properties:
        paths:
          description: >-
            Optional. Full file paths to reset back to their committed state
            including filename, rooted at workspace root. If left empty, all
            files will be reset.
          type: array
          items:
            type: string
        clean:
          description: Optional. If set to true, untracked files will be deleted.
          type: boolean
    ResetWorkspaceChangesResponse:
      id: ResetWorkspaceChangesResponse
      description: '`ResetWorkspaceChanges` response message.'
      type: object
      properties: {}
    FetchFileDiffResponse:
      id: FetchFileDiffResponse
      description: '`FetchFileDiff` response message.'
      type: object
      properties:
        formattedDiff:
          description: The raw formatted Git diff for the file.
          type: string
    QueryDirectoryContentsResponse:
      id: QueryDirectoryContentsResponse
      description: '`QueryDirectoryContents` response message.'
      type: object
      properties:
        directoryEntries:
          description: List of entries in the directory.
          type: array
          items:
            $ref: '#/components/schemas/DirectoryEntry'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    SearchFilesResponse:
      id: SearchFilesResponse
      description: Client-facing representation of a file search response.
      type: object
      properties:
        searchResults:
          description: List of matched results.
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        nextPageToken:
          description: >-
            Optional. A token, which can be sent as `page_token` to retrieve the
            next page. If this field is omitted, there are no subsequent pages.
          type: string
    SearchResult:
      id: SearchResult
      description: Client-facing representation of a search result entry.
      type: object
      properties:
        file:
          description: Details when search result is a file.
          $ref: '#/components/schemas/FileSearchResult'
        directory:
          description: Details when search result is a directory.
          $ref: '#/components/schemas/DirectorySearchResult'
    FileSearchResult:
      id: FileSearchResult
      description: Client-facing representation of a file entry in search results.
      type: object
      properties:
        path:
          description: File system path relative to the workspace root.
          type: string
    DirectorySearchResult:
      id: DirectorySearchResult
      description: Client-facing representation of a directory entry in search results.
      type: object
      properties:
        path:
          description: File system path relative to the workspace root.
          type: string
    MakeDirectoryRequest:
      id: MakeDirectoryRequest
      description: '`MakeDirectory` request message.'
      type: object
      properties:
        path:
          description: >-
            Required. The directory's full path including directory name,
            relative to the workspace root.
          type: string
    MakeDirectoryResponse:
      id: MakeDirectoryResponse
      description: '`MakeDirectory` response message.'
      type: object
      properties: {}
    RemoveDirectoryRequest:
      id: RemoveDirectoryRequest
      description: '`RemoveDirectory` request message.'
      type: object
      properties:
        path:
          description: >-
            Required. The directory's full path including directory name,
            relative to the workspace root.
          type: string
    RemoveDirectoryResponse:
      id: RemoveDirectoryResponse
      description: '`RemoveDirectory` response message.'
      type: object
      properties: {}
    MoveDirectoryRequest:
      id: MoveDirectoryRequest
      description: '`MoveDirectory` request message.'
      type: object
      properties:
        path:
          description: >-
            Required. The directory's full path including directory name,
            relative to the workspace root.
          type: string
        newPath:
          description: >-
            Required. The new path for the directory including directory name,
            rooted at workspace root.
          type: string
    MoveDirectoryResponse:
      id: MoveDirectoryResponse
      description: '`MoveDirectory` response message.'
      type: object
      properties: {}
    ReadFileResponse:
      id: ReadFileResponse
      description: '`ReadFile` response message.'
      type: object
      properties:
        fileContents:
          description: The file's contents.
          type: string
          format: byte
    RemoveFileRequest:
      id: RemoveFileRequest
      description: '`RemoveFile` request message.'
      type: object
      properties:
        path:
          description: >-
            Required. The file's full path including filename, relative to the
            workspace root.
          type: string
    RemoveFileResponse:
      id: RemoveFileResponse
      description: '`RemoveFile` response message.'
      type: object
      properties: {}
    MoveFileRequest:
      id: MoveFileRequest
      description: '`MoveFile` request message.'
      type: object
      properties:
        path:
          description: >-
            Required. The file's full path including filename, relative to the
            workspace root.
          type: string
        newPath:
          description: >-
            Required. The file's new path including filename, relative to the
            workspace root.
          type: string
    MoveFileResponse:
      id: MoveFileResponse
      description: '`MoveFile` response message.'
      type: object
      properties: {}
    WriteFileRequest:
      id: WriteFileRequest
      description: '`WriteFile` request message.'
      type: object
      properties:
        path:
          description: Required. The file.
          type: string
        contents:
          description: Required. The file's contents.
          type: string
          format: byte
    WriteFileResponse:
      id: WriteFileResponse
      description: '`WriteFile` response message.'
      type: object
      properties: {}
    ListReleaseConfigsResponse:
      id: ListReleaseConfigsResponse
      description: '`ListReleaseConfigs` response message.'
      type: object
      properties:
        releaseConfigs:
          description: List of release configs.
          type: array
          items:
            $ref: '#/components/schemas/ReleaseConfig'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations which could not be reached.
          type: array
          items:
            type: string
    ReleaseConfig:
      id: ReleaseConfig
      description: Represents a Dataform release configuration.
      type: object
      properties:
        name:
          description: Identifier. The release config's name.
          type: string
        gitCommitish:
          description: >-
            Required. Git commit/tag/branch name at which the repository should
            be compiled. Must exist in the remote repository. Examples: - a
            commit SHA: `12ade345` - a tag: `tag1` - a branch name: `branch1`
          type: string
        codeCompilationConfig:
          description: >-
            Optional. If set, fields of `code_compilation_config` override the
            default compilation settings that are specified in dataform.json.
          $ref: '#/components/schemas/CodeCompilationConfig'
        cronSchedule:
          description: >-
            Optional. Optional schedule (in cron format) for automatic creation
            of compilation results.
          type: string
        timeZone:
          description: >-
            Optional. Specifies the time zone to be used when interpreting
            cron_schedule. Must be a time zone name from the time zone database
            (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If
            left unspecified, the default is UTC.
          type: string
        recentScheduledReleaseRecords:
          description: >-
            Output only. Records of the 10 most recent scheduled release
            attempts, ordered in descending order of `release_time`. Updated
            whenever automatic creation of a compilation result is triggered by
            cron_schedule.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ScheduledReleaseRecord'
        releaseCompilationResult:
          description: >-
            Optional. The name of the currently released compilation result for
            this release config. This value is updated when a compilation result
            is automatically created from this release config (using
            cron_schedule), or when this resource is updated by API call
            (perhaps to roll back to an earlier release). The compilation result
            must have been created using this release config. Must be in the
            format `projects/*/locations/*/repositories/*/compilationResults/*`.
          type: string
        disabled:
          description: Optional. Disables automatic creation of compilation results.
          type: boolean
        internalMetadata:
          description: >-
            Output only. All the metadata information that is used internally to
            serve the resource. For example: timestamps, flags, status fields,
            etc. The format of this field is a JSON string.
          readOnly: true
          type: string
    CodeCompilationConfig:
      id: CodeCompilationConfig
      description: Configures various aspects of Dataform code compilation.
      type: object
      properties:
        defaultDatabase:
          description: Optional. The default database (Google Cloud project ID).
          type: string
        defaultSchema:
          description: Optional. The default schema (BigQuery dataset ID).
          type: string
        defaultLocation:
          description: >-
            Optional. The default BigQuery location to use. Defaults to "US".
            See the BigQuery docs for a full list of locations:
            https://cloud.google.com/bigquery/docs/locations.
          type: string
        assertionSchema:
          description: Optional. The default schema (BigQuery dataset ID) for assertions.
          type: string
        vars:
          description: >-
            Optional. User-defined variables that are made available to project
            code during compilation.
          type: object
          additionalProperties:
            type: string
        databaseSuffix:
          description: >-
            Optional. The suffix that should be appended to all database (Google
            Cloud project ID) names.
          type: string
        schemaSuffix:
          description: >-
            Optional. The suffix that should be appended to all schema (BigQuery
            dataset ID) names.
          type: string
        tablePrefix:
          description: Optional. The prefix that should be prepended to all table names.
          type: string
        builtinAssertionNamePrefix:
          description: Optional. The prefix to prepend to built-in assertion names.
          type: string
        defaultNotebookRuntimeOptions:
          description: Optional. The default notebook runtime options.
          $ref: '#/components/schemas/NotebookRuntimeOptions'
    NotebookRuntimeOptions:
      id: NotebookRuntimeOptions
      description: Configures various aspects of Dataform notebook runtime.
      type: object
      properties:
        gcsOutputBucket:
          description: >-
            Optional. The Google Cloud Storage location to upload the result to.
            Format: `gs://bucket-name`.
          type: string
        aiPlatformNotebookRuntimeTemplate:
          description: >-
            Optional. The resource name of the [Colab runtime template]
            (https://cloud.google.com/colab/docs/runtimes), from which a runtime
            is created for notebook executions. If not specified, a runtime is
            created with Colab's default specifications.
          type: string
    ScheduledReleaseRecord:
      id: ScheduledReleaseRecord
      description: >-
        A record of an attempt to create a compilation result for this release
        config.
      type: object
      properties:
        compilationResult:
          description: >-
            The name of the created compilation result, if one was successfully
            created. Must be in the format
            `projects/*/locations/*/repositories/*/compilationResults/*`.
          type: string
        errorStatus:
          description: >-
            The error status encountered upon this attempt to create the
            compilation result, if the attempt was unsuccessful.
          $ref: '#/components/schemas/Status'
        releaseTime:
          description: Output only. The timestamp of this release attempt.
          readOnly: true
          type: string
          format: google-datetime
    ListCompilationResultsResponse:
      id: ListCompilationResultsResponse
      description: '`ListCompilationResults` response message.'
      type: object
      properties:
        compilationResults:
          description: List of compilation results.
          type: array
          items:
            $ref: '#/components/schemas/CompilationResult'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations which could not be reached.
          type: array
          items:
            type: string
    CompilationResult:
      id: CompilationResult
      description: Represents the result of compiling a Dataform project.
      type: object
      properties:
        gitCommitish:
          description: >-
            Immutable. Git commit/tag/branch name at which the repository should
            be compiled. Must exist in the remote repository. Examples: - a
            commit SHA: `12ade345` - a tag: `tag1` - a branch name: `branch1`
          type: string
        workspace:
          description: >-
            Immutable. The name of the workspace to compile. Must be in the
            format `projects/*/locations/*/repositories/*/workspaces/*`.
          type: string
        releaseConfig:
          description: >-
            Immutable. The name of the release config to compile. Must be in the
            format `projects/*/locations/*/repositories/*/releaseConfigs/*`.
          type: string
        name:
          description: Output only. The compilation result's name.
          readOnly: true
          type: string
        codeCompilationConfig:
          description: >-
            Immutable. If set, fields of `code_compilation_config` override the
            default compilation settings that are specified in dataform.json.
          $ref: '#/components/schemas/CodeCompilationConfig'
        resolvedGitCommitSha:
          description: >-
            Output only. The fully resolved Git commit SHA of the code that was
            compiled. Not set for compilation results whose source is a
            workspace.
          readOnly: true
          type: string
        dataformCoreVersion:
          description: >-
            Output only. The version of `@dataform/core` that was used for
            compilation.
          readOnly: true
          type: string
        compilationErrors:
          description: Output only. Errors encountered during project compilation.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/CompilationError'
        dataEncryptionState:
          description: Output only. Only set if the repository has a KMS Key.
          readOnly: true
          $ref: '#/components/schemas/DataEncryptionState'
        createTime:
          description: >-
            Output only. The timestamp of when the compilation result was
            created.
          readOnly: true
          type: string
          format: google-datetime
        internalMetadata:
          description: >-
            Output only. All the metadata information that is used internally to
            serve the resource. For example: timestamps, flags, status fields,
            etc. The format of this field is a JSON string.
          readOnly: true
          type: string
    CompilationError:
      id: CompilationError
      description: An error encountered when attempting to compile a Dataform project.
      type: object
      properties:
        message:
          description: Output only. The error's top level message.
          readOnly: true
          type: string
        stack:
          description: Output only. The error's full stack trace.
          readOnly: true
          type: string
        path:
          description: >-
            Output only. The path of the file where this error occurred, if
            available, relative to the project root.
          readOnly: true
          type: string
        actionTarget:
          description: >-
            Output only. The identifier of the action where this error occurred,
            if available.
          readOnly: true
          $ref: '#/components/schemas/Target'
    Target:
      id: Target
      description: >-
        Represents an action identifier. If the action writes output, the output
        will be written to the referenced database object.
      type: object
      properties:
        database:
          description: Optional. The action's database (Google Cloud project ID) .
          type: string
        schema:
          description: >-
            Optional. The action's schema (BigQuery dataset ID), within
            `database`.
          type: string
        name:
          description: Optional. The action's name, within `database` and `schema`.
          type: string
    QueryCompilationResultActionsResponse:
      id: QueryCompilationResultActionsResponse
      description: '`QueryCompilationResultActions` response message.'
      type: object
      properties:
        compilationResultActions:
          description: List of compilation result actions.
          type: array
          items:
            $ref: '#/components/schemas/CompilationResultAction'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    CompilationResultAction:
      id: CompilationResultAction
      description: Represents a single Dataform action in a compilation result.
      type: object
      properties:
        relation:
          description: The database relation created/updated by this action.
          $ref: '#/components/schemas/Relation'
        operations:
          description: The database operations executed by this action.
          $ref: '#/components/schemas/Operations'
        assertion:
          description: The assertion executed by this action.
          $ref: '#/components/schemas/Assertion'
        declaration:
          description: The declaration declared by this action.
          $ref: '#/components/schemas/Declaration'
        notebook:
          description: The notebook executed by this action.
          $ref: '#/components/schemas/Notebook'
        dataPreparation:
          description: The data preparation executed by this action.
          $ref: '#/components/schemas/DataPreparation'
        target:
          description: This action's identifier. Unique within the compilation result.
          $ref: '#/components/schemas/Target'
        canonicalTarget:
          description: >-
            The action's identifier if the project had been compiled without any
            overrides configured. Unique within the compilation result.
          $ref: '#/components/schemas/Target'
        filePath:
          description: >-
            The full path including filename in which this action is located,
            relative to the workspace root.
          type: string
        internalMetadata:
          description: >-
            Output only. All the metadata information that is used internally to
            serve the resource. For example: timestamps, flags, status fields,
            etc. The format of this field is a JSON string.
          readOnly: true
          type: string
    Relation:
      id: Relation
      description: Represents a database relation.
      type: object
      properties:
        dependencyTargets:
          description: A list of actions that this action depends on.
          type: array
          items:
            $ref: '#/components/schemas/Target'
        disabled:
          description: Whether this action is disabled (i.e. should not be run).
          type: boolean
        tags:
          description: Arbitrary, user-defined tags on this action.
          type: array
          items:
            type: string
        relationDescriptor:
          description: Descriptor for the relation and its columns.
          $ref: '#/components/schemas/RelationDescriptor'
        relationType:
          description: The type of this relation.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The relation is a table.
            - The relation is a view.
            - The relation is an incrementalized table.
            - The relation is a materialized view.
          enum:
            - RELATION_TYPE_UNSPECIFIED
            - TABLE
            - VIEW
            - INCREMENTAL_TABLE
            - MATERIALIZED_VIEW
        selectQuery:
          description: >-
            The SELECT query which returns rows which this relation should
            contain.
          type: string
        preOperations:
          description: SQL statements to be executed before creating the relation.
          type: array
          items:
            type: string
        postOperations:
          description: SQL statements to be executed after creating the relation.
          type: array
          items:
            type: string
        incrementalTableConfig:
          description: >-
            Configures `INCREMENTAL_TABLE` settings for this relation. Only set
            if `relation_type` is `INCREMENTAL_TABLE`.
          $ref: '#/components/schemas/IncrementalTableConfig'
        partitionExpression:
          description: The SQL expression used to partition the relation.
          type: string
        clusterExpressions:
          description: A list of columns or SQL expressions used to cluster the table.
          type: array
          items:
            type: string
        partitionExpirationDays:
          description: Sets the partition expiration in days.
          type: integer
          format: int32
        requirePartitionFilter:
          description: >-
            Specifies whether queries on this table must include a predicate
            filter that filters on the partitioning column.
          type: boolean
        additionalOptions:
          description: >-
            Additional options that will be provided as key/value pairs into the
            options clause of a create table/view statement. See
            https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language
            for more information on which options are supported.
          type: object
          additionalProperties:
            type: string
    RelationDescriptor:
      id: RelationDescriptor
      description: Describes a relation and its columns.
      type: object
      properties:
        description:
          description: A text description of the relation.
          type: string
        columns:
          description: A list of descriptions of columns within the relation.
          type: array
          items:
            $ref: '#/components/schemas/ColumnDescriptor'
        bigqueryLabels:
          description: A set of BigQuery labels that should be applied to the relation.
          type: object
          additionalProperties:
            type: string
    ColumnDescriptor:
      id: ColumnDescriptor
      description: Describes a column.
      type: object
      properties:
        path:
          description: >-
            The identifier for the column. Each entry in `path` represents one
            level of nesting.
          type: array
          items:
            type: string
        description:
          description: A textual description of the column.
          type: string
        bigqueryPolicyTags:
          description: A list of BigQuery policy tags that will be applied to the column.
          type: array
          items:
            type: string
    IncrementalTableConfig:
      id: IncrementalTableConfig
      description: Contains settings for relations of type `INCREMENTAL_TABLE`.
      type: object
      properties:
        incrementalSelectQuery:
          description: >-
            The SELECT query which returns rows which should be inserted into
            the relation if it already exists and is not being refreshed.
          type: string
        refreshDisabled:
          description: Whether this table should be protected from being refreshed.
          type: boolean
        uniqueKeyParts:
          description: >-
            A set of columns or SQL expressions used to define row uniqueness.
            If any duplicates are discovered (as defined by `unique_key_parts`),
            only the newly selected rows (as defined by
            `incremental_select_query`) will be included in the relation.
          type: array
          items:
            type: string
        updatePartitionFilter:
          description: >-
            A SQL expression conditional used to limit the set of existing rows
            considered for a merge operation (see `unique_key_parts` for more
            information).
          type: string
        incrementalPreOperations:
          description: >-
            SQL statements to be executed before inserting new rows into the
            relation.
          type: array
          items:
            type: string
        incrementalPostOperations:
          description: >-
            SQL statements to be executed after inserting new rows into the
            relation.
          type: array
          items:
            type: string
    Operations:
      id: Operations
      description: Represents a list of arbitrary database operations.
      type: object
      properties:
        dependencyTargets:
          description: A list of actions that this action depends on.
          type: array
          items:
            $ref: '#/components/schemas/Target'
        disabled:
          description: Whether this action is disabled (i.e. should not be run).
          type: boolean
        tags:
          description: Arbitrary, user-defined tags on this action.
          type: array
          items:
            type: string
        relationDescriptor:
          description: >-
            Descriptor for any output relation and its columns. Only set if
            `has_output` is true.
          $ref: '#/components/schemas/RelationDescriptor'
        queries:
          description: >-
            A list of arbitrary SQL statements that will be executed without
            alteration.
          type: array
          items:
            type: string
        hasOutput:
          description: Whether these operations produce an output relation.
          type: boolean
    Assertion:
      id: Assertion
      description: >-
        Represents an assertion upon a SQL query which is required return zero
        rows.
      type: object
      properties:
        dependencyTargets:
          description: A list of actions that this action depends on.
          type: array
          items:
            $ref: '#/components/schemas/Target'
        parentAction:
          description: >-
            The parent action of this assertion. Only set if this assertion was
            automatically generated.
          $ref: '#/components/schemas/Target'
        disabled:
          description: Whether this action is disabled (i.e. should not be run).
          type: boolean
        tags:
          description: Arbitrary, user-defined tags on this action.
          type: array
          items:
            type: string
        selectQuery:
          description: >-
            The SELECT query which must return zero rows in order for this
            assertion to succeed.
          type: string
        relationDescriptor:
          description: >-
            Descriptor for the assertion's automatically-generated view and its
            columns.
          $ref: '#/components/schemas/RelationDescriptor'
    Declaration:
      id: Declaration
      description: >-
        Represents a relation which is not managed by Dataform but which may be
        referenced by Dataform actions.
      type: object
      properties:
        relationDescriptor:
          description: >-
            Descriptor for the relation and its columns. Used as documentation
            only, i.e. values here will result in no changes to the relation's
            metadata.
          $ref: '#/components/schemas/RelationDescriptor'
    Notebook:
      id: Notebook
      description: Represents a notebook.
      type: object
      properties:
        dependencyTargets:
          description: A list of actions that this action depends on.
          type: array
          items:
            $ref: '#/components/schemas/Target'
        disabled:
          description: Whether this action is disabled (i.e. should not be run).
          type: boolean
        contents:
          description: The contents of the notebook.
          type: string
        tags:
          description: Arbitrary, user-defined tags on this action.
          type: array
          items:
            type: string
    DataPreparation:
      id: DataPreparation
      description: Defines a compiled Data Preparation entity
      type: object
      properties:
        contentsYaml:
          description: The data preparation definition, stored as a YAML string.
          type: string
        contentsSql:
          description: >-
            SQL definition for a Data Preparation. Contains a SQL query and
            additional context information.
          $ref: '#/components/schemas/SqlDefinition'
        dependencyTargets:
          description: A list of actions that this action depends on.
          type: array
          items:
            $ref: '#/components/schemas/Target'
        disabled:
          description: Whether this action is disabled (i.e. should not be run).
          type: boolean
        tags:
          description: Arbitrary, user-defined tags on this action.
          type: array
          items:
            type: string
    SqlDefinition:
      id: SqlDefinition
      description: Definition of a SQL Data Preparation
      type: object
      properties:
        query:
          description: >-
            The SQL query representing the data preparation steps. Formatted as
            a Pipe SQL query statement.
          type: string
        errorTable:
          description: Error table configuration,
          $ref: '#/components/schemas/ErrorTable'
        load:
          description: Load configuration.
          $ref: '#/components/schemas/LoadConfig'
    ErrorTable:
      id: ErrorTable
      description: Error table information, used to write error data into a BigQuery table.
      type: object
      properties:
        target:
          description: Error Table target.
          $ref: '#/components/schemas/Target'
        retentionDays:
          description: >-
            Error table partition expiration in days. Only positive values are
            allowed.
          type: integer
          format: int32
    LoadConfig:
      id: LoadConfig
      description: Simplified load configuration for actions
      type: object
      properties:
        replace:
          description: Replace destination table
          $ref: '#/components/schemas/SimpleLoadMode'
        append:
          description: Append into destination table
          $ref: '#/components/schemas/SimpleLoadMode'
        maximum:
          description: >-
            Insert records where the value exceeds the previous maximum value
            for a column in the destination table
          $ref: '#/components/schemas/IncrementalLoadMode'
        unique:
          description: >-
            Insert records where the value of a column is not already present in
            the destination table
          $ref: '#/components/schemas/IncrementalLoadMode'
    SimpleLoadMode:
      id: SimpleLoadMode
      description: Simple load definition
      type: object
      properties: {}
    IncrementalLoadMode:
      id: IncrementalLoadMode
      description: Load definition for incremental load modes
      type: object
      properties:
        column:
          description: Column name for incremental load modes
          type: string
    ListWorkflowConfigsResponse:
      id: ListWorkflowConfigsResponse
      description: '`ListWorkflowConfigs` response message.'
      type: object
      properties:
        workflowConfigs:
          description: List of workflow configs.
          type: array
          items:
            $ref: '#/components/schemas/WorkflowConfig'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations which could not be reached.
          type: array
          items:
            type: string
    WorkflowConfig:
      id: WorkflowConfig
      description: Represents a Dataform workflow configuration.
      type: object
      properties:
        name:
          description: Identifier. The workflow config's name.
          type: string
        releaseConfig:
          description: >-
            Required. The name of the release config whose
            release_compilation_result should be executed. Must be in the format
            `projects/*/locations/*/repositories/*/releaseConfigs/*`.
          type: string
        invocationConfig:
          description: Optional. If left unset, a default InvocationConfig will be used.
          $ref: '#/components/schemas/InvocationConfig'
        cronSchedule:
          description: >-
            Optional. Optional schedule (in cron format) for automatic execution
            of this workflow config.
          type: string
        timeZone:
          description: >-
            Optional. Specifies the time zone to be used when interpreting
            cron_schedule. Must be a time zone name from the time zone database
            (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If
            left unspecified, the default is UTC.
          type: string
        recentScheduledExecutionRecords:
          description: >-
            Output only. Records of the 10 most recent scheduled execution
            attempts, ordered in descending order of `execution_time`. Updated
            whenever automatic creation of a workflow invocation is triggered by
            cron_schedule.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ScheduledExecutionRecord'
        disabled:
          description: Optional. Disables automatic creation of workflow invocations.
          type: boolean
        createTime:
          description: Output only. The timestamp of when the WorkflowConfig was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The timestamp of when the WorkflowConfig was last
            updated.
          readOnly: true
          type: string
          format: google-datetime
        internalMetadata:
          description: >-
            Output only. All the metadata information that is used internally to
            serve the resource. For example: timestamps, flags, status fields,
            etc. The format of this field is a JSON string.
          readOnly: true
          type: string
    InvocationConfig:
      id: InvocationConfig
      description: >-
        Includes various configuration options for a workflow invocation. If
        both `included_targets` and `included_tags` are unset, all actions will
        be included.
      type: object
      properties:
        includedTargets:
          description: Optional. The set of action identifiers to include.
          type: array
          items:
            $ref: '#/components/schemas/Target'
        includedTags:
          description: Optional. The set of tags to include.
          type: array
          items:
            type: string
        transitiveDependenciesIncluded:
          description: >-
            Optional. When set to true, transitive dependencies of included
            actions will be executed.
          type: boolean
        transitiveDependentsIncluded:
          description: >-
            Optional. When set to true, transitive dependents of included
            actions will be executed.
          type: boolean
        fullyRefreshIncrementalTablesEnabled:
          description: >-
            Optional. When set to true, any incremental tables will be fully
            refreshed.
          type: boolean
        serviceAccount:
          description: Optional. The service account to run workflow invocations under.
          type: string
    ScheduledExecutionRecord:
      id: ScheduledExecutionRecord
      description: >-
        A record of an attempt to create a workflow invocation for this workflow
        config.
      type: object
      properties:
        workflowInvocation:
          description: >-
            The name of the created workflow invocation, if one was successfully
            created. Must be in the format
            `projects/*/locations/*/repositories/*/workflowInvocations/*`.
          type: string
        errorStatus:
          description: >-
            The error status encountered upon this attempt to create the
            workflow invocation, if the attempt was unsuccessful.
          $ref: '#/components/schemas/Status'
        executionTime:
          description: Output only. The timestamp of this execution attempt.
          readOnly: true
          type: string
          format: google-datetime
    ListWorkflowInvocationsResponse:
      id: ListWorkflowInvocationsResponse
      description: '`ListWorkflowInvocations` response message.'
      type: object
      properties:
        workflowInvocations:
          description: List of workflow invocations.
          type: array
          items:
            $ref: '#/components/schemas/WorkflowInvocation'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations which could not be reached.
          type: array
          items:
            type: string
    WorkflowInvocation:
      id: WorkflowInvocation
      description: Represents a single invocation of a compilation result.
      type: object
      properties:
        compilationResult:
          description: >-
            Immutable. The name of the compilation result to use for this
            invocation. Must be in the format
            `projects/*/locations/*/repositories/*/compilationResults/*`.
          type: string
        workflowConfig:
          description: >-
            Immutable. The name of the workflow config to invoke. Must be in the
            format `projects/*/locations/*/repositories/*/workflowConfigs/*`.
          type: string
        name:
          description: Output only. The workflow invocation's name.
          readOnly: true
          type: string
        invocationConfig:
          description: Immutable. If left unset, a default InvocationConfig will be used.
          $ref: '#/components/schemas/InvocationConfig'
        state:
          description: Output only. This workflow invocation's current state.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The workflow invocation is currently running.
            - The workflow invocation succeeded. A terminal state.
            - The workflow invocation was cancelled. A terminal state.
            - The workflow invocation failed. A terminal state.
            - >-
              The workflow invocation is being cancelled, but some actions are
              still running.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - SUCCEEDED
            - CANCELLED
            - FAILED
            - CANCELING
        invocationTiming:
          description: Output only. This workflow invocation's timing details.
          readOnly: true
          $ref: '#/components/schemas/Interval'
        resolvedCompilationResult:
          description: >-
            Output only. The resolved compilation result that was used to create
            this invocation. Will be in the format
            `projects/*/locations/*/repositories/*/compilationResults/*`.
          readOnly: true
          type: string
        dataEncryptionState:
          description: Output only. Only set if the repository has a KMS Key.
          readOnly: true
          $ref: '#/components/schemas/DataEncryptionState'
        internalMetadata:
          description: >-
            Output only. All the metadata information that is used internally to
            serve the resource. For example: timestamps, flags, status fields,
            etc. The format of this field is a JSON string.
          readOnly: true
          type: string
    Interval:
      id: Interval
      description: >-
        Represents a time interval, encoded as a Timestamp start (inclusive) and
        a Timestamp end (exclusive). The start must be less than or equal to the
        end. When the start equals the end, the interval is empty (matches no
        time). When both start and end are unspecified, the interval matches any
        time.
      type: object
      properties:
        startTime:
          description: >-
            Optional. Inclusive start of the interval. If specified, a Timestamp
            matching this interval will have to be the same or after the start.
          type: string
          format: google-datetime
        endTime:
          description: >-
            Optional. Exclusive end of the interval. If specified, a Timestamp
            matching this interval will have to be before the end.
          type: string
          format: google-datetime
    CancelWorkflowInvocationRequest:
      id: CancelWorkflowInvocationRequest
      description: '`CancelWorkflowInvocation` request message.'
      type: object
      properties: {}
    CancelWorkflowInvocationResponse:
      id: CancelWorkflowInvocationResponse
      description: '`CancelWorkflowInvocation` response message.'
      type: object
      properties: {}
    QueryWorkflowInvocationActionsResponse:
      id: QueryWorkflowInvocationActionsResponse
      description: '`QueryWorkflowInvocationActions` response message.'
      type: object
      properties:
        workflowInvocationActions:
          description: List of workflow invocation actions.
          type: array
          items:
            $ref: '#/components/schemas/WorkflowInvocationAction'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    WorkflowInvocationAction:
      id: WorkflowInvocationAction
      description: Represents a single action in a workflow invocation.
      type: object
      properties:
        bigqueryAction:
          description: Output only. The workflow action's bigquery action details.
          readOnly: true
          $ref: '#/components/schemas/BigQueryAction'
        notebookAction:
          description: Output only. The workflow action's notebook action details.
          readOnly: true
          $ref: '#/components/schemas/NotebookAction'
        dataPreparationAction:
          description: Output only. The workflow action's data preparation action details.
          readOnly: true
          $ref: '#/components/schemas/DataPreparationAction'
        target:
          description: >-
            Output only. This action's identifier. Unique within the workflow
            invocation.
          readOnly: true
          $ref: '#/components/schemas/Target'
        canonicalTarget:
          description: >-
            Output only. The action's identifier if the project had been
            compiled without any overrides configured. Unique within the
            compilation result.
          readOnly: true
          $ref: '#/components/schemas/Target'
        state:
          description: Output only. This action's current state.
          readOnly: true
          type: string
          enumDescriptions:
            - The action has not yet been considered for invocation.
            - The action is currently running.
            - >-
              Execution of the action was skipped because upstream dependencies
              did not all complete successfully. A terminal state.
            - >-
              Execution of the action was disabled as per the configuration of
              the corresponding compilation result action. A terminal state.
            - The action succeeded. A terminal state.
            - The action was cancelled. A terminal state.
            - The action failed. A terminal state.
          enum:
            - PENDING
            - RUNNING
            - SKIPPED
            - DISABLED
            - SUCCEEDED
            - CANCELLED
            - FAILED
        failureReason:
          description: >-
            Output only. If and only if action's state is FAILED a failure
            reason is set.
          readOnly: true
          type: string
        invocationTiming:
          description: >-
            Output only. This action's timing details. `start_time` will be set
            if the action is in [RUNNING, SUCCEEDED, CANCELLED, FAILED] state.
            `end_time` will be set if the action is in [SUCCEEDED, CANCELLED,
            FAILED] state.
          readOnly: true
          $ref: '#/components/schemas/Interval'
        internalMetadata:
          description: >-
            Output only. All the metadata information that is used internally to
            serve the resource. For example: timestamps, flags, status fields,
            etc. The format of this field is a JSON string.
          readOnly: true
          type: string
    BigQueryAction:
      id: BigQueryAction
      description: Represents a workflow action that will run against BigQuery.
      type: object
      properties:
        sqlScript:
          description: >-
            Output only. The generated BigQuery SQL script that will be
            executed.
          readOnly: true
          type: string
        jobId:
          description: >-
            Output only. The ID of the BigQuery job that executed the SQL in
            sql_script. Only set once the job has started to run.
          readOnly: true
          type: string
    NotebookAction:
      id: NotebookAction
      description: Represents a workflow action that will run against a Notebook runtime.
      type: object
      properties:
        contents:
          description: Output only. The code contents of a Notebook to be run.
          readOnly: true
          type: string
        jobId:
          description: >-
            Output only. The ID of the Vertex job that executed the notebook in
            contents and also the ID used for the outputs created in Google
            Cloud Storage buckets. Only set once the job has started to run.
          readOnly: true
          type: string
    DataPreparationAction:
      id: DataPreparationAction
      description: Represents a workflow action that will run a Data Preparation.
      type: object
      properties:
        contentsYaml:
          description: >-
            Output only. YAML representing the contents of the data preparation.
            Can be used to show the customer what the input was to their
            workflow.
          readOnly: true
          type: string
        contentsSql:
          description: >-
            SQL definition for a Data Preparation. Contains a SQL query and
            additional context information.
          $ref: '#/components/schemas/ActionSqlDefinition'
        generatedSql:
          description: >-
            Output only. The generated BigQuery SQL script that will be
            executed. For reference only.
          readOnly: true
          type: string
        jobId:
          description: >-
            Output only. The ID of the BigQuery job that executed the SQL in
            sql_script. Only set once the job has started to run.
          readOnly: true
          type: string
    ActionSqlDefinition:
      id: ActionSqlDefinition
      description: Definition of a SQL Data Preparation
      type: object
      properties:
        query:
          description: >-
            The SQL query representing the data preparation steps. Formatted as
            a Pipe SQL query statement.
          type: string
        errorTable:
          description: Error table configuration,
          $ref: '#/components/schemas/ActionErrorTable'
        loadConfig:
          description: Load configuration.
          $ref: '#/components/schemas/ActionLoadConfig'
    ActionErrorTable:
      id: ActionErrorTable
      description: Error table information, used to write error data into a BigQuery table.
      type: object
      properties:
        target:
          description: Error Table target.
          $ref: '#/components/schemas/Target'
        retentionDays:
          description: >-
            Error table partition expiration in days. Only positive values are
            allowed.
          type: integer
          format: int32
    ActionLoadConfig:
      id: ActionLoadConfig
      description: Simplified load configuration for actions
      type: object
      properties:
        replace:
          description: Replace destination table
          $ref: '#/components/schemas/ActionSimpleLoadMode'
        append:
          description: Append into destination table
          $ref: '#/components/schemas/ActionSimpleLoadMode'
        maximum:
          description: >-
            Insert records where the value exceeds the previous maximum value
            for a column in the destination table
          $ref: '#/components/schemas/ActionIncrementalLoadMode'
        unique:
          description: >-
            Insert records where the value of a column is not already present in
            the destination table
          $ref: '#/components/schemas/ActionIncrementalLoadMode'
    ActionSimpleLoadMode:
      id: ActionSimpleLoadMode
      description: Simple load definition
      type: object
      properties: {}
    ActionIncrementalLoadMode:
      id: ActionIncrementalLoadMode
      description: Load definition for incremental load modes
      type: object
      properties:
        column:
          description: Column name for incremental load modes
          type: string
    Config:
      id: Config
      description: Config for all repositories in a given project and location.
      type: object
      properties:
        name:
          description: Identifier. The config name.
          type: string
        defaultKmsKeyName:
          description: >-
            Optional. The default KMS key that is used if no encryption key is
            provided when a repository is created.
          type: string
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusDetail:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        cancelRequested:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have google.longrunning.Operation.error value with a
            google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
    IamPolicyOverrideView:
      id: IamPolicyOverrideView
      description: >-
        Contains metadata about the IAM policy override for a given Dataform
        resource. If is_active is true, this the policy encoded in
        iam_policy_name is the source of truth for this resource. Will be
        provided in internal ESV2 views for: Workspaces, Repositories, Folders,
        TeamFolders.
      type: object
      properties:
        iamPolicyName:
          description: The IAM policy name for the resource.
          $ref: '#/components/schemas/PolicyName'
        isActive:
          description: Whether the IAM policy encoded in this view is active.
          type: boolean
    PolicyName:
      id: PolicyName
      description: >-
        An internal name for an IAM policy, based on the resource to which the
        policy applies. Not to be confused with a resource's external full
        resource name. For more information on this distinction, see
        go/iam-full-resource-names.
      type: object
      properties:
        type:
          description: >-
            Resource type. Types are defined in IAM's .service files. Valid
            values for type might be 'storage_buckets', 'compute_instances',
            'resourcemanager_customers', 'billing_accounts', etc.
          type: string
        id:
          description: >-
            Identifies an instance of the type. ID format varies by type. The ID
            format is defined in the IAM .service file that defines the type,
            either in path_mapping or in a comment.
          type: string
        region:
          description: >-
            For Cloud IAM: The location of the Policy. Must be empty or "global"
            for Policies owned by global IAM. Must name a region from
            prodspec/cloud-iam-cloudspec for Regional IAM Policies, see
            go/iam-faq#where-is-iam-currently-deployed. For Local IAM: This
            field should be set to "local".
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    config:
      id: google.dataform.config
      name: config
      title: Config
      methods:
        get_config:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1config/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_config:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1config/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/config/methods/get_config'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/config/methods/update_config'
        replace: []
        delete: []
    locations:
      id: google.dataform.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    repositories_iam_policies:
      id: google.dataform.repositories_iam_policies
      name: repositories_iam_policies
      title: Repositories_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/repositories_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/repositories_iam_policies/methods/set_iam_policy
        delete: []
    repositories:
      id: google.dataform.repositories
      name: repositories
      title: Repositories
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.repositories
        create:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        commit:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}:commit/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        read_file:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}:readFile/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query_directory_contents:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}:queryDirectoryContents/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        compute_access_token_status:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}:computeAccessTokenStatus/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/repositories/methods/get'
          - $ref: >-
              #/components/x-stackQL-resources/repositories/methods/query_directory_contents
          - $ref: '#/components/x-stackQL-resources/repositories/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/repositories/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/repositories/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/repositories/methods/delete'
    repositories_history:
      id: google.dataform.repositories_history
      name: repositories_history
      title: Repositories_history
      methods:
        fetch_history:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}:fetchHistory/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/repositories_history/methods/fetch_history
        insert: []
        update: []
        replace: []
        delete: []
    repositories_remote_branches:
      id: google.dataform.repositories_remote_branches
      name: repositories_remote_branches
      title: Repositories_remote_branches
      methods:
        fetch_remote_branches:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}:fetchRemoteBranches/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/repositories_remote_branches/methods/fetch_remote_branches
        insert: []
        update: []
        replace: []
        delete: []
    workspaces_iam_policies:
      id: google.dataform.workspaces_iam_policies
      name: workspaces_iam_policies
      title: Workspaces_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/workspaces_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/workspaces_iam_policies/methods/set_iam_policy
        delete: []
    workspaces:
      id: google.dataform.workspaces
      name: workspaces
      title: Workspaces
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.workspaces
        create:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        install_npm_packages:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:installNpmPackages/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        pull:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:pull/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        push:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:push/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        commit:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:commit/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:reset/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query_directory_contents:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:queryDirectoryContents/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search_files:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:searchFiles/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        make_directory:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:makeDirectory/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove_directory:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:removeDirectory/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        move_directory:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:moveDirectory/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        read_file:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:readFile/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove_file:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:removeFile/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        move_file:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:moveFile/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        write_file:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:writeFile/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/get'
          - $ref: >-
              #/components/x-stackQL-resources/workspaces/methods/query_directory_contents
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/delete'
    workspaces_file_git_statuses:
      id: google.dataform.workspaces_file_git_statuses
      name: workspaces_file_git_statuses
      title: Workspaces_file_git_statuses
      methods:
        fetch_file_git_statuses:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:fetchFileGitStatuses/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/workspaces_file_git_statuses/methods/fetch_file_git_statuses
        insert: []
        update: []
        replace: []
        delete: []
    workspaces_git_ahead_behind:
      id: google.dataform.workspaces_git_ahead_behind
      name: workspaces_git_ahead_behind
      title: Workspaces_git_ahead_behind
      methods:
        fetch_git_ahead_behind:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:fetchGitAheadBehind/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/workspaces_git_ahead_behind/methods/fetch_git_ahead_behind
        insert: []
        update: []
        replace: []
        delete: []
    workspaces_file_diff:
      id: google.dataform.workspaces_file_diff
      name: workspaces_file_diff
      title: Workspaces_file_diff
      methods:
        fetch_file_diff:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workspaces~1{workspacesId}:fetchFileDiff/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/workspaces_file_diff/methods/fetch_file_diff
        insert: []
        update: []
        replace: []
        delete: []
    release_configs:
      id: google.dataform.release_configs
      name: release_configs
      title: Release_configs
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1releaseConfigs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.releaseConfigs
        create:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1releaseConfigs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1releaseConfigs~1{releaseConfigsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1releaseConfigs~1{releaseConfigsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1releaseConfigs~1{releaseConfigsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/release_configs/methods/get'
          - $ref: '#/components/x-stackQL-resources/release_configs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/release_configs/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/release_configs/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/release_configs/methods/delete'
    compilation_results:
      id: google.dataform.compilation_results
      name: compilation_results
      title: Compilation_results
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1compilationResults/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.compilationResults
        create:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1compilationResults/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1compilationResults~1{compilationResultsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1compilationResults~1{compilationResultsId}:query/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/compilation_results/methods/get'
          - $ref: '#/components/x-stackQL-resources/compilation_results/methods/query'
          - $ref: '#/components/x-stackQL-resources/compilation_results/methods/list'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/compilation_results/methods/create
        update: []
        replace: []
        delete: []
    workflow_configs:
      id: google.dataform.workflow_configs
      name: workflow_configs
      title: Workflow_configs
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowConfigs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.workflowConfigs
        create:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowConfigs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowConfigs~1{workflowConfigsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowConfigs~1{workflowConfigsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowConfigs~1{workflowConfigsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_configs/methods/get'
          - $ref: '#/components/x-stackQL-resources/workflow_configs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/workflow_configs/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/workflow_configs/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workflow_configs/methods/delete'
    workflow_invocations:
      id: google.dataform.workflow_invocations
      name: workflow_invocations
      title: Workflow_invocations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowInvocations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.workflowInvocations
        create:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowInvocations/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowInvocations~1{workflowInvocationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowInvocations~1{workflowInvocationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowInvocations~1{workflowInvocationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1workflowInvocations~1{workflowInvocationsId}:query/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_invocations/methods/get'
          - $ref: >-
              #/components/x-stackQL-resources/workflow_invocations/methods/query
          - $ref: '#/components/x-stackQL-resources/workflow_invocations/methods/list'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/workflow_invocations/methods/create
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/workflow_invocations/methods/delete
    folders_iam_policies:
      id: google.dataform.folders_iam_policies
      name: folders_iam_policies
      title: Folders_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1folders~1{foldersId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1folders~1{foldersId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1folders~1{foldersId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/folders_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/folders_iam_policies/methods/set_iam_policy
        delete: []
    team_folders_iam_policies:
      id: google.dataform.team_folders_iam_policies
      name: team_folders_iam_policies
      title: Team_folders_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1teamFolders~1{teamFoldersId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1teamFolders~1{teamFoldersId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1teamFolders~1{teamFoldersId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/team_folders_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/team_folders_iam_policies/methods/set_iam_policy
        delete: []
    operations:
      id: google.dataform.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
paths:
  /v1beta1/projects/{projectsId}/locations/{locationsId}/config:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Get default config for a given project and location.
      operationId: dataform.projects.locations.getConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Update default config for a given project and location. **Note:** *This
        method does not fully implement [AIP/134](https://google.aip.dev/134).
        The wildcard entry (\*) is treated as a bad request, and when the
        `field_mask` is omitted, the request is treated as a full update on all
        modifiable fields.*
      operationId: dataform.projects.locations.updateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1beta1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: dataform.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: extraLocationTypes
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: dataform.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: dataform.projects.locations.repositories.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataform.projects.locations.repositories.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataform.projects.locations.repositories.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories:
    parameters: *ref_1
    get:
      description: >-
        Lists Repositories in a given project and location. **Note:** *This
        method can return repositories not shown in the [Dataform
        UI](https://console.cloud.google.com/bigquery/dataform)*.
      operationId: dataform.projects.locations.repositories.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepositoriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Creates a new Repository in a given project and location.
      operationId: dataform.projects.locations.repositories.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: repositoryId
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:
    parameters: *ref_1
    get:
      description: Fetches a single Repository.
      operationId: dataform.projects.locations.repositories.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates a single Repository. **Note:** *This method does not fully
        implement [AIP/134](https://google.aip.dev/134). The wildcard entry (\*)
        is treated as a bad request, and when the `field_mask` is omitted, the
        request is treated as a full update on all modifiable fields.*
      operationId: dataform.projects.locations.repositories.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a single Repository.
      operationId: dataform.projects.locations.repositories.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:commit:
    parameters: *ref_1
    post:
      description: >-
        Applies a Git commit to a Repository. The Repository must not have a
        value for `git_remote_settings.url`.
      operationId: dataform.projects.locations.repositories.commit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitRepositoryChangesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitRepositoryChangesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:readFile:
    parameters: *ref_1
    get:
      description: >-
        Returns the contents of a file (inside a Repository). The Repository
        must not have a value for `git_remote_settings.url`.
      operationId: dataform.projects.locations.repositories.readFile
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadRepositoryFileResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: commitSha
          schema:
            type: string
        - in: query
          name: path
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:queryDirectoryContents:
    parameters: *ref_1
    get:
      description: >-
        Returns the contents of a given Repository directory. The Repository
        must not have a value for `git_remote_settings.url`.
      operationId: dataform.projects.locations.repositories.queryDirectoryContents
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryRepositoryDirectoryContentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: commitSha
          schema:
            type: string
        - in: query
          name: path
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:fetchHistory:
    parameters: *ref_1
    get:
      description: >-
        Fetches a Repository's history of commits. The Repository must not have
        a value for `git_remote_settings.url`.
      operationId: dataform.projects.locations.repositories.fetchHistory
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchRepositoryHistoryResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:computeAccessTokenStatus:
    parameters: *ref_1
    get:
      description: Computes a Repository's Git access token status.
      operationId: dataform.projects.locations.repositories.computeAccessTokenStatus
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ComputeRepositoryAccessTokenStatusResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:fetchRemoteBranches:
    parameters: *ref_1
    get:
      description: Fetches a Repository's remote branches.
      operationId: dataform.projects.locations.repositories.fetchRemoteBranches
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchRemoteBranchesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: dataform.projects.locations.repositories.workspaces.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataform.projects.locations.repositories.workspaces.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataform.projects.locations.repositories.workspaces.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces:
    parameters: *ref_1
    get:
      description: Lists Workspaces in a given Repository.
      operationId: dataform.projects.locations.repositories.workspaces.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspacesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Creates a new Workspace in a given Repository.
      operationId: dataform.projects.locations.repositories.workspaces.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: workspaceId
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:
    parameters: *ref_1
    get:
      description: Fetches a single Workspace.
      operationId: dataform.projects.locations.repositories.workspaces.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a single Workspace.
      operationId: dataform.projects.locations.repositories.workspaces.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:installNpmPackages:
    parameters: *ref_1
    post:
      description: Installs dependency NPM packages (inside a Workspace).
      operationId: dataform.projects.locations.repositories.workspaces.installNpmPackages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstallNpmPackagesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallNpmPackagesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:pull:
    parameters: *ref_1
    post:
      description: Pulls Git commits from the Repository's remote into a Workspace.
      operationId: dataform.projects.locations.repositories.workspaces.pull
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullGitCommitsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullGitCommitsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:push:
    parameters: *ref_1
    post:
      description: Pushes Git commits from a Workspace to the Repository's remote.
      operationId: dataform.projects.locations.repositories.workspaces.push
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushGitCommitsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushGitCommitsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:fetchFileGitStatuses:
    parameters: *ref_1
    get:
      description: Fetches Git statuses for the files in a Workspace.
      operationId: dataform.projects.locations.repositories.workspaces.fetchFileGitStatuses
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchFileGitStatusesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:fetchGitAheadBehind:
    parameters: *ref_1
    get:
      description: Fetches Git ahead/behind against a remote branch.
      operationId: dataform.projects.locations.repositories.workspaces.fetchGitAheadBehind
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchGitAheadBehindResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: remoteBranch
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:commit:
    parameters: *ref_1
    post:
      description: Applies a Git commit for uncommitted files in a Workspace.
      operationId: dataform.projects.locations.repositories.workspaces.commit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitWorkspaceChangesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitWorkspaceChangesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:reset:
    parameters: *ref_1
    post:
      description: Performs a Git reset for uncommitted files in a Workspace.
      operationId: dataform.projects.locations.repositories.workspaces.reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetWorkspaceChangesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetWorkspaceChangesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:fetchFileDiff:
    parameters: *ref_1
    get:
      description: Fetches Git diff for an uncommitted file in a Workspace.
      operationId: dataform.projects.locations.repositories.workspaces.fetchFileDiff
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchFileDiffResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: path
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:queryDirectoryContents:
    parameters: *ref_1
    get:
      description: Returns the contents of a given Workspace directory.
      operationId: >-
        dataform.projects.locations.repositories.workspaces.queryDirectoryContents
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDirectoryContentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: path
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:searchFiles:
    parameters: *ref_1
    get:
      description: Finds the contents of a given Workspace directory by filter.
      operationId: dataform.projects.locations.repositories.workspaces.searchFiles
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchFilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:makeDirectory:
    parameters: *ref_1
    post:
      description: Creates a directory inside a Workspace.
      operationId: dataform.projects.locations.repositories.workspaces.makeDirectory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MakeDirectoryRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MakeDirectoryResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:removeDirectory:
    parameters: *ref_1
    post:
      description: Deletes a directory (inside a Workspace) and all of its contents.
      operationId: dataform.projects.locations.repositories.workspaces.removeDirectory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveDirectoryRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveDirectoryResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:moveDirectory:
    parameters: *ref_1
    post:
      description: >-
        Moves a directory (inside a Workspace), and all of its contents, to a
        new location.
      operationId: dataform.projects.locations.repositories.workspaces.moveDirectory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveDirectoryRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoveDirectoryResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:readFile:
    parameters: *ref_1
    get:
      description: Returns the contents of a file (inside a Workspace).
      operationId: dataform.projects.locations.repositories.workspaces.readFile
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadFileResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: path
          schema:
            type: string
        - in: query
          name: revision
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:removeFile:
    parameters: *ref_1
    post:
      description: Deletes a file (inside a Workspace).
      operationId: dataform.projects.locations.repositories.workspaces.removeFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveFileRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveFileResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:moveFile:
    parameters: *ref_1
    post:
      description: Moves a file (inside a Workspace) to a new location.
      operationId: dataform.projects.locations.repositories.workspaces.moveFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveFileRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoveFileResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workspaces/{workspacesId}:writeFile:
    parameters: *ref_1
    post:
      description: Writes to a file (inside a Workspace).
      operationId: dataform.projects.locations.repositories.workspaces.writeFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteFileRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteFileResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/releaseConfigs:
    parameters: *ref_1
    get:
      description: Lists ReleaseConfigs in a given Repository.
      operationId: dataform.projects.locations.repositories.releaseConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReleaseConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new ReleaseConfig in a given Repository.
      operationId: dataform.projects.locations.repositories.releaseConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: releaseConfigId
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/releaseConfigs/{releaseConfigsId}:
    parameters: *ref_1
    get:
      description: Fetches a single ReleaseConfig.
      operationId: dataform.projects.locations.repositories.releaseConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: releaseConfigsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates a single ReleaseConfig. **Note:** *This method does not fully
        implement [AIP/134](https://google.aip.dev/134). The wildcard entry (\*)
        is treated as a bad request, and when the `field_mask` is omitted, the
        request is treated as a full update on all modifiable fields.*
      operationId: dataform.projects.locations.repositories.releaseConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: releaseConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a single ReleaseConfig.
      operationId: dataform.projects.locations.repositories.releaseConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: releaseConfigsId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/compilationResults:
    parameters: *ref_1
    get:
      description: Lists CompilationResults in a given Repository.
      operationId: dataform.projects.locations.repositories.compilationResults.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCompilationResultsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Creates a new CompilationResult in a given project and location.
      operationId: dataform.projects.locations.repositories.compilationResults.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompilationResult'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompilationResult'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/compilationResults/{compilationResultsId}:
    parameters: *ref_1
    get:
      description: Fetches a single CompilationResult.
      operationId: dataform.projects.locations.repositories.compilationResults.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompilationResult'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: compilationResultsId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/compilationResults/{compilationResultsId}:query:
    parameters: *ref_1
    get:
      description: Returns CompilationResultActions in a given CompilationResult.
      operationId: dataform.projects.locations.repositories.compilationResults.query
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCompilationResultActionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: compilationResultsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workflowConfigs:
    parameters: *ref_1
    get:
      description: Lists WorkflowConfigs in a given Repository.
      operationId: dataform.projects.locations.repositories.workflowConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkflowConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new WorkflowConfig in a given Repository.
      operationId: dataform.projects.locations.repositories.workflowConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: workflowConfigId
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workflowConfigs/{workflowConfigsId}:
    parameters: *ref_1
    get:
      description: Fetches a single WorkflowConfig.
      operationId: dataform.projects.locations.repositories.workflowConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workflowConfigsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates a single WorkflowConfig. **Note:** *This method does not fully
        implement [AIP/134](https://google.aip.dev/134). The wildcard entry (\*)
        is treated as a bad request, and when the `field_mask` is omitted, the
        request is treated as a full update on all modifiable fields.*
      operationId: dataform.projects.locations.repositories.workflowConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workflowConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a single WorkflowConfig.
      operationId: dataform.projects.locations.repositories.workflowConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workflowConfigsId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workflowInvocations:
    parameters: *ref_1
    get:
      description: Lists WorkflowInvocations in a given Repository.
      operationId: dataform.projects.locations.repositories.workflowInvocations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkflowInvocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Creates a new WorkflowInvocation in a given Repository.
      operationId: dataform.projects.locations.repositories.workflowInvocations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowInvocation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowInvocation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workflowInvocations/{workflowInvocationsId}:
    parameters: *ref_1
    get:
      description: Fetches a single WorkflowInvocation.
      operationId: dataform.projects.locations.repositories.workflowInvocations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowInvocation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workflowInvocationsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a single WorkflowInvocation.
      operationId: dataform.projects.locations.repositories.workflowInvocations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workflowInvocationsId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workflowInvocations/{workflowInvocationsId}:cancel:
    parameters: *ref_1
    post:
      description: Requests cancellation of a running WorkflowInvocation.
      operationId: dataform.projects.locations.repositories.workflowInvocations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelWorkflowInvocationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelWorkflowInvocationResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workflowInvocationsId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/workflowInvocations/{workflowInvocationsId}:query:
    parameters: *ref_1
    get:
      description: Returns WorkflowInvocationActions in a given WorkflowInvocation.
      operationId: dataform.projects.locations.repositories.workflowInvocations.query
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryWorkflowInvocationActionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: workflowInvocationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/folders/{foldersId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: dataform.projects.locations.folders.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/folders/{foldersId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataform.projects.locations.folders.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1beta1/projects/{projectsId}/locations/{locationsId}/folders/{foldersId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataform.projects.locations.folders.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/teamFolders/{teamFoldersId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: dataform.projects.locations.teamFolders.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: teamFoldersId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/teamFolders/{teamFoldersId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataform.projects.locations.teamFolders.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: teamFoldersId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1beta1/projects/{projectsId}/locations/{locationsId}/teamFolders/{teamFoldersId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataform.projects.locations.teamFolders.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: teamFoldersId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: dataform.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: dataform.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: dataform.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        `1`, corresponding to `Code.CANCELLED`.
      operationId: dataform.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
