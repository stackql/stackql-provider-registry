openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Dataproc API
  description: Manages Hadoop-based clusters and jobs on Google Cloud Platform.
  version: v1
  x-discovery-doc-revision: '20230721'
  x-generated-date: '2023-08-01'
externalDocs:
  url: 'https://cloud.google.com/dataproc/'
servers:
  - url: 'https://dataproc.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    SparkStandaloneAutoscalingConfig:
      id: SparkStandaloneAutoscalingConfig
      type: object
      description: Basic autoscaling configurations for Spark Standalone.
      properties:
        gracefulDecommissionTimeout:
          format: google-duration
          type: string
          description: 'Required. Timeout for Spark graceful decommissioning of spark workers. Specifies the duration to wait for spark worker to complete spark decommissioning tasks before forcefully removing workers. Only applicable to downscaling operations.Bounds: 0s, 1d.'
        scaleDownMinWorkerFraction:
          description: 'Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.'
          type: number
          format: double
        scaleDownFactor:
          description: 'Required. Fraction of required executors to remove from Spark Serverless clusters. A scale-down factor of 1.0 will result in scaling down so that there are no more executors for the Spark Job.(more aggressive scaling). A scale-down factor closer to 0 will result in a smaller magnitude of scaling donw (less aggressive scaling).Bounds: 0.0, 1.0.'
          type: number
          format: double
        scaleUpMinWorkerFraction:
          format: double
          type: number
          description: 'Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.'
        scaleUpFactor:
          description: 'Required. Fraction of required workers to add to Spark Standalone clusters. A scale-up factor of 1.0 will result in scaling up so that there are no more required workers for the Spark Job (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling).Bounds: 0.0, 1.0.'
          type: number
          format: double
    ReservationAffinity:
      properties:
        consumeReservationType:
          enum:
            - TYPE_UNSPECIFIED
            - NO_RESERVATION
            - ANY_RESERVATION
            - SPECIFIC_RESERVATION
          description: Optional. Type of reservation to consume
          type: string
          enumDescriptions:
            - ''
            - Do not consume from any allocated capacity.
            - Consume any reservation available.
            - Must consume from a specific reservation. Must specify key value fields for specifying the reservations.
        key:
          type: string
          description: Optional. Corresponds to the label key of reservation resource.
        values:
          items:
            type: string
          type: array
          description: Optional. Corresponds to the label values of reservation resource.
      id: ReservationAffinity
      description: Reservation Affinity for consuming Zonal reservation.
      type: object
    DriverSchedulingConfig:
      description: Driver scheduling configuration.
      properties:
        vcores:
          type: integer
          description: Required. The number of vCPUs the driver is requesting.
          format: int32
        memoryMb:
          format: int32
          type: integer
          description: Required. The amount of memory in MB the driver is requesting.
      type: object
      id: DriverSchedulingConfig
    BatchOperationMetadata:
      description: Metadata describing the Batch operation.
      properties:
        doneTime:
          description: The time when the operation finished.
          format: google-datetime
          type: string
        operationType:
          type: string
          enumDescriptions:
            - Batch operation type is unknown.
            - Batch operation type.
          enum:
            - BATCH_OPERATION_TYPE_UNSPECIFIED
            - BATCH
          description: The operation type.
        batch:
          description: Name of the batch for the operation.
          type: string
        batchUuid:
          description: Batch UUID for the operation.
          type: string
        description:
          description: Short description of the operation.
          type: string
        warnings:
          description: Warnings encountered during operation execution.
          items:
            type: string
          type: array
        labels:
          additionalProperties:
            type: string
          type: object
          description: Labels associated with the operation.
        createTime:
          description: The time when the operation was created.
          format: google-datetime
          type: string
      id: BatchOperationMetadata
      type: object
    AuxiliaryServicesConfig:
      type: object
      id: AuxiliaryServicesConfig
      properties:
        metastoreConfig:
          description: Optional. The Hive Metastore configuration for this workload.
          $ref: '#/components/schemas/MetastoreConfig'
        sparkHistoryServerConfig:
          description: Optional. The Spark History Server configuration for the workload.
          $ref: '#/components/schemas/SparkHistoryServerConfig'
      description: Auxiliary services configuration for a Cluster.
    GkeNodeConfig:
      id: GkeNodeConfig
      properties:
        minCpuPlatform:
          type: string
          description: 'Optional. Minimum CPU platform (https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as "Intel Haswell"` or Intel Sandy Bridge".'
        machineType:
          type: string
          description: 'Optional. The name of a Compute Engine machine type (https://cloud.google.com/compute/docs/machine-types).'
        preemptible:
          type: boolean
          description: 'Optional. Whether the nodes are created as legacy preemptible VM instances (https://cloud.google.com/compute/docs/instances/preemptible). Also see Spot VMs, preemptible VM instances without a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).'
        accelerators:
          items:
            $ref: '#/components/schemas/GkeNodePoolAcceleratorConfig'
          type: array
          description: 'Optional. A list of hardware accelerators (https://cloud.google.com/compute/docs/gpus) to attach to each node.'
        localSsdCount:
          format: int32
          type: integer
          description: 'Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see Adding Local SSDs (https://cloud.google.com/compute/docs/disks/local-ssd)).'
        spot:
          type: boolean
          description: 'Optional. Whether the nodes are created as Spot VM instances (https://cloud.google.com/compute/docs/instances/spot). Spot VMs are the latest update to legacy preemptible VMs. Spot VMs do not have a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).'
        bootDiskKmsKey:
          description: 'Optional. The Customer Managed Encryption Key (CMEK) (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}'
          type: string
      type: object
      description: Parameters that describe cluster nodes.
    WorkflowTemplatePlacement:
      description: Specifies workflow execution target.Either managed_cluster or cluster_selector is required.
      properties:
        managedCluster:
          description: A cluster that is managed by the workflow.
          $ref: '#/components/schemas/ManagedCluster'
        clusterSelector:
          $ref: '#/components/schemas/ClusterSelector'
          description: Optional. A selector that chooses target cluster for jobs based on metadata.The selector is evaluated at the time each job is submitted.
      id: WorkflowTemplatePlacement
      type: object
    SubmitJobRequest:
      id: SubmitJobRequest
      properties:
        job:
          description: Required. The job resource.
          $ref: '#/components/schemas/Job'
        requestId:
          type: string
          description: 'Optional. A unique id used to identify the request. If the server receives two SubmitJobRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.SubmitJobRequest)s with the same id, then the second request will be ignored and the first Job created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
      type: object
      description: A request to submit a job.
    InstantiateWorkflowTemplateRequest:
      properties:
        requestId:
          type: string
          description: 'Optional. A tag that prevents multiple concurrent workflow instances with the same tag from running. This mitigates risk of concurrent instances started due to retries.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The tag must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
        parameters:
          description: Optional. Map from parameter names to values that should be used for those parameters. Values may not exceed 1000 characters.
          additionalProperties:
            type: string
          type: object
        version:
          format: int32
          description: 'Optional. The version of workflow template to instantiate. If specified, the workflow will be instantiated only if the current version of the workflow template has the supplied version.This option cannot be used to instantiate a previous version of workflow template.'
          type: integer
      type: object
      description: A request to instantiate a workflow template.
      id: InstantiateWorkflowTemplateRequest
    ParameterValidation:
      properties:
        values:
          description: Validation based on a list of allowed values.
          $ref: '#/components/schemas/ValueValidation'
        regex:
          $ref: '#/components/schemas/RegexValidation'
          description: Validation based on regular expressions.
      type: object
      description: Configuration for parameter validation.
      id: ParameterValidation
    DiskConfig:
      type: object
      id: DiskConfig
      description: Specifies the config of disk options for a group of VM instances.
      properties:
        numLocalSsds:
          type: integer
          format: int32
          description: 'Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.'
        bootDiskSizeGb:
          description: Optional. Size in GB of the boot disk (default is 500GB).
          type: integer
          format: int32
        localSsdInterface:
          type: string
          description: 'Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).'
        bootDiskType:
          type: string
          description: 'Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).'
    Batch:
      properties:
        runtimeConfig:
          description: Optional. Runtime configuration for the batch execution.
          $ref: '#/components/schemas/RuntimeConfig'
        labels:
          type: object
          description: 'Optional. The labels to associate with this batch. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a batch.'
          additionalProperties:
            type: string
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time when the batch was created.
        stateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time when the batch entered a current state.
        creator:
          type: string
          readOnly: true
          description: Output only. The email address of the user who created the batch.
        environmentConfig:
          $ref: '#/components/schemas/EnvironmentConfig'
          description: Optional. Environment configuration for the batch execution.
        stateMessage:
          readOnly: true
          type: string
          description: 'Output only. Batch state details, such as a failure description if the state is FAILED.'
        operation:
          description: Output only. The resource name of the operation associated with this batch.
          readOnly: true
          type: string
        stateHistory:
          items:
            $ref: '#/components/schemas/StateHistory'
          description: Output only. Historical state information for the batch.
          type: array
          readOnly: true
        sparkRBatch:
          $ref: '#/components/schemas/SparkRBatch'
          description: Optional. SparkR batch config.
        sparkSqlBatch:
          $ref: '#/components/schemas/SparkSqlBatch'
          description: Optional. SparkSql batch config.
        state:
          readOnly: true
          type: string
          enumDescriptions:
            - The batch state is unknown.
            - The batch is created before running.
            - The batch is running.
            - The batch is cancelling.
            - The batch cancellation was successful.
            - The batch completed successfully.
            - The batch is no longer running due to an error.
          description: Output only. The state of the batch.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
            - FAILED
        uuid:
          readOnly: true
          description: Output only. A batch UUID (Unique Universal Identifier). The service generates this value when it creates the batch.
          type: string
        pysparkBatch:
          description: Optional. PySpark batch config.
          $ref: '#/components/schemas/PySparkBatch'
        sparkBatch:
          description: Optional. Spark batch config.
          $ref: '#/components/schemas/SparkBatch'
        runtimeInfo:
          description: Output only. Runtime information about batch execution.
          readOnly: true
          $ref: '#/components/schemas/RuntimeInfo'
        name:
          type: string
          readOnly: true
          description: Output only. The resource name of the batch.
      id: Batch
      type: object
      description: A representation of a batch workload in the service.
    ResizeNodeGroupRequest:
      description: A request to resize a node group.
      properties:
        size:
          format: int32
          type: integer
          description: Required. The number of running instances for the node group to maintain. The group adds or removes instances to maintain the number of instances specified by this parameter.
        requestId:
          type: string
          description: 'Optional. A unique ID used to identify the request. If the server receives two ResizeNodeGroupRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.ResizeNodeGroupRequests) with the same ID, the second request is ignored and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
        gracefulDecommissionTimeout:
          description: 'Optional. Timeout for graceful YARN decommissioning. Graceful decommissioning (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/scaling-clusters#graceful_decommissioning) allows the removal of nodes from the Compute Engine node group without interrupting jobs in progress. This timeout specifies how long to wait for jobs in progress to finish before forcefully removing nodes (and potentially interrupting jobs). Default timeout is 0 (for forceful decommission), and the maximum allowed timeout is 1 day. (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Only supported on Dataproc image versions 1.2 and higher.'
          format: google-duration
          type: string
      type: object
      id: ResizeNodeGroupRequest
    MetastoreConfig:
      properties:
        dataprocMetastoreService:
          description: 'Required. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[dataproc_region]/services/[service-name]'
          type: string
      id: MetastoreConfig
      description: Specifies a Metastore configuration.
      type: object
    TemplateParameter:
      properties:
        name:
          type: string
          description: 'Required. Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.'
        validation:
          $ref: '#/components/schemas/ParameterValidation'
          description: Optional. Validation rules to be applied to this parameter's value.
        description:
          type: string
          description: Optional. Brief description of the parameter. Must not exceed 1024 characters.
        fields:
          description: 'Required. Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter''s list of field paths.A field path is similar in syntax to a google.protobuf.FieldMask. For example, a field path that references the zone field of a workflow template''s cluster selector would be specified as placement.clusterSelector.zone.Also, field paths can reference fields using the following syntax: Values in maps can be referenced by key: labels''key'' placement.clusterSelector.clusterLabels''key'' placement.managedCluster.labels''key'' placement.clusterSelector.clusterLabels''key'' jobs''step-id''.labels''key'' Jobs in the jobs list can be referenced by step-id: jobs''step-id''.hadoopJob.mainJarFileUri jobs''step-id''.hiveJob.queryFileUri jobs''step-id''.pySparkJob.mainPythonFileUri jobs''step-id''.hadoopJob.jarFileUris0 jobs''step-id''.hadoopJob.archiveUris0 jobs''step-id''.hadoopJob.fileUris0 jobs''step-id''.pySparkJob.pythonFileUris0 Items in repeated fields can be referenced by a zero-based index: jobs''step-id''.sparkJob.args0 Other examples: jobs''step-id''.hadoopJob.properties''key'' jobs''step-id''.hadoopJob.args0 jobs''step-id''.hiveJob.scriptVariables''key'' jobs''step-id''.hadoopJob.mainJarFileUri placement.clusterSelector.zoneIt may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid: placement.clusterSelector.clusterLabels jobs''step-id''.sparkJob.args'
          type: array
          items:
            type: string
      type: object
      description: 'A configurable parameter that replaces one or more fields in the template. Parameterizable fields: - Labels - File uris - Job properties - Job arguments - Script variables - Main class (in HadoopJob and SparkJob) - Zone (in ClusterSelector)'
      id: TemplateParameter
    QueryList:
      description: A list of queries to run on a cluster.
      properties:
        queries:
          description: 'Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } '
          items:
            type: string
          type: array
      type: object
      id: QueryList
    Binding:
      description: 'Associates members, or principals, with a role.'
      type: object
      properties:
        role:
          description: 'Role that is assigned to the list of members, or principals. For example, roles/viewer, roles/editor, or roles/owner.'
          type: string
        condition:
          description: 'The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).'
          $ref: '#/components/schemas/Expr'
        members:
          items:
            type: string
          description: 'Specifies the principals requesting access for a Google Cloud resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a Google service account. For example, my-other-app@appspot.gserviceaccount.com. serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]: An identifier for a Kubernetes service account (https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, my-project.svc.id.goog[my-namespace/my-kubernetes-sa]. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding.'
          type: array
      id: Binding
    ClusterMetrics:
      description: 'Contains cluster daemon metrics, such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.'
      id: ClusterMetrics
      type: object
      properties:
        hdfsMetrics:
          type: object
          additionalProperties:
            type: string
            format: int64
          description: The HDFS metrics.
        yarnMetrics:
          description: YARN metrics.
          additionalProperties:
            format: int64
            type: string
          type: object
    StopClusterRequest:
      properties:
        clusterUuid:
          type: string
          description: Optional. Specifying the cluster_uuid means the RPC will fail (with error NOT_FOUND) if a cluster with the specified UUID does not exist.
        requestId:
          type: string
          description: 'Optional. A unique ID used to identify the request. If the server receives two StopClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.StopClusterRequest)s with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
      type: object
      id: StopClusterRequest
      description: A request to stop a cluster.
    AcceleratorConfig:
      id: AcceleratorConfig
      properties:
        acceleratorTypeUri:
          description: 'Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-k80 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-k80 nvidia-tesla-k80Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-k80.'
          type: string
        acceleratorCount:
          format: int32
          type: integer
          description: The number of the accelerator cards of this type exposed to this instance.
      description: 'Specifies the type and number of accelerator cards attached to the instances of an instance. See GPUs on Compute Engine (https://cloud.google.com/compute/docs/gpus/).'
      type: object
    ListBatchesResponse:
      properties:
        batches:
          type: array
          description: Output only. The batches from the specified collection.
          items:
            $ref: '#/components/schemas/Batch'
          readOnly: true
        nextPageToken:
          description: 'A token, which can be sent as page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
      type: object
      id: ListBatchesResponse
      description: A list of batch workloads.
    ClusterOperation:
      type: object
      id: ClusterOperation
      properties:
        done:
          description: Output only. Indicates the operation is done.
          readOnly: true
          type: boolean
        operationId:
          type: string
          readOnly: true
          description: Output only. The id of the cluster operation.
        error:
          type: string
          readOnly: true
          description: 'Output only. Error, if operation failed.'
      description: The cluster operation triggered by a workflow.
    ListWorkflowTemplatesResponse:
      properties:
        templates:
          description: Output only. WorkflowTemplates list.
          items:
            $ref: '#/components/schemas/WorkflowTemplate'
          type: array
          readOnly: true
        nextPageToken:
          description: 'Output only. This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent ListWorkflowTemplatesRequest.'
          readOnly: true
          type: string
      type: object
      description: A response to a request to list workflow templates in a project.
      id: ListWorkflowTemplatesResponse
    JobScheduling:
      description: Job scheduling options.
      properties:
        maxFailuresTotal:
          type: integer
          format: int32
          description: 'Optional. Maximum total number of times a driver may be restarted as a result of the driver exiting with a non-zero code. After the maximum number is reached, the job will be reported as failed.Maximum value is 240.Note: Currently, this restartable job option is not supported in Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).'
        maxFailuresPerHour:
          description: 'Optional. Maximum number of times per hour a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed.A job may be reported as thrashing if the driver exits with a non-zero code four times within a 10-minute window.Maximum value is 10.Note: This restartable job option is not supported in Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).'
          type: integer
          format: int32
      type: object
      id: JobScheduling
    DiagnoseClusterResults:
      type: object
      description: The location of diagnostic output.
      properties:
        outputUri:
          description: Output only. The Cloud Storage URI of the diagnostic output. The output report is a plain text file with a summary of collected diagnostics.
          readOnly: true
          type: string
      id: DiagnoseClusterResults
    RepairClusterRequest:
      properties:
        gracefulDecommissionTimeout:
          format: google-duration
          type: string
          description: 'Optional. Timeout for graceful YARN decommissioning. Graceful decommissioning facilitates the removal of cluster nodes without interrupting jobs in progress. The timeout specifies the amount of time to wait for jobs finish before forcefully removing nodes. The default timeout is 0 for forceful decommissioning, and the maximum timeout period is 1 day. (see JSON Mapping—Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).graceful_decommission_timeout is supported in Dataproc image versions 1.2+.'
        clusterUuid:
          description: Optional. Specifying the cluster_uuid means the RPC will fail (with error NOT_FOUND) if a cluster with the specified UUID does not exist.
          type: string
        parentOperationId:
          type: string
          description: Optional. operation id of the parent operation sending the repair request
        nodePools:
          description: Optional. Node pools and corresponding repair action to be taken. All node pools should be unique in this request. i.e. Multiple entries for the same node pool id are not allowed.
          type: array
          items:
            $ref: '#/components/schemas/NodePool'
        requestId:
          description: 'Optional. A unique ID used to identify the request. If the server receives two RepairClusterRequests with the same ID, the second request is ignored, and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
          type: string
      description: A request to repair a cluster.
      type: object
      id: RepairClusterRequest
    RegexValidation:
      type: object
      id: RegexValidation
      properties:
        regexes:
          type: array
          description: Required. RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient).
          items:
            type: string
      description: Validation based on regular expressions.
    DataprocMetricConfig:
      id: DataprocMetricConfig
      description: Dataproc metric config.
      type: object
      properties:
        metrics:
          type: array
          description: Required. Metrics sources to enable.
          items:
            $ref: '#/components/schemas/Metric'
    ManagedGroupConfig:
      id: ManagedGroupConfig
      type: object
      properties:
        instanceTemplateName:
          type: string
          readOnly: true
          description: Output only. The name of the Instance Template used for the Managed Instance Group.
        instanceGroupManagerName:
          type: string
          description: Output only. The name of the Instance Group Manager for this group.
          readOnly: true
      description: Specifies the resources used to actively manage an instance group.
    TestIamPermissionsResponse:
      description: Response message for TestIamPermissions method.
      id: TestIamPermissionsResponse
      type: object
      properties:
        permissions:
          items:
            type: string
          type: array
          description: A subset of TestPermissionsRequest.permissions that the caller is allowed.
    StartClusterRequest:
      type: object
      description: A request to start a cluster.
      id: StartClusterRequest
      properties:
        requestId:
          description: 'Optional. A unique ID used to identify the request. If the server receives two StartClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.StartClusterRequest)s with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
          type: string
        clusterUuid:
          description: Optional. Specifying the cluster_uuid means the RPC will fail (with error NOT_FOUND) if a cluster with the specified UUID does not exist.
          type: string
    HadoopJob:
      id: HadoopJob
      properties:
        jarFileUris:
          type: array
          description: Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.
          items:
            type: string
        archiveUris:
          type: array
          items:
            type: string
          description: 'Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.'
        mainJarFileUri:
          description: 'The HCFS URI of the jar file containing the main class. Examples: ''gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar'' ''hdfs:/tmp/test-samples/custom-wordcount.jar'' ''file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'''
          type: string
        mainClass:
          description: The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.
          type: string
        fileUris:
          description: Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
          items:
            type: string
          type: array
        properties:
          additionalProperties:
            type: string
          description: 'Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.'
          type: object
        args:
          description: 'Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.'
          type: array
          items:
            type: string
        loggingConfig:
          description: Optional. The runtime log config for job execution.
          $ref: '#/components/schemas/LoggingConfig'
      description: 'A Dataproc job for running Apache Hadoop MapReduce (https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).'
      type: object
    ConfidentialInstanceConfig:
      description: 'Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs)'
      type: object
      id: ConfidentialInstanceConfig
      properties:
        enableConfidentialCompute:
          type: boolean
          description: Optional. Defines whether the instance should have confidential compute enabled.
    BasicYarnAutoscalingConfig:
      type: object
      id: BasicYarnAutoscalingConfig
      description: Basic autoscaling configurations for YARN.
      properties:
        scaleDownFactor:
          format: double
          description: 'Required. Fraction of average YARN pending memory in the last cooldown period for which to remove workers. A scale-down factor of 1 will result in scaling down so that there is no available memory remaining after the update (more aggressive scaling). A scale-down factor of 0 disables removing workers, which can be beneficial for autoscaling a single job. See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.'
          type: number
        scaleDownMinWorkerFraction:
          description: 'Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.'
          type: number
          format: double
        gracefulDecommissionTimeout:
          description: 'Required. Timeout for YARN graceful decommissioning of Node Managers. Specifies the duration to wait for jobs to complete before forcefully removing workers (and potentially interrupting jobs). Only applicable to downscaling operations.Bounds: 0s, 1d.'
          format: google-duration
          type: string
        scaleUpMinWorkerFraction:
          description: 'Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.'
          format: double
          type: number
        scaleUpFactor:
          type: number
          format: double
          description: 'Required. Fraction of average YARN pending memory in the last cooldown period for which to add workers. A scale-up factor of 1.0 will result in scaling up so that there is no pending memory remaining after the update (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling). See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.'
    GkeNodePoolAutoscalingConfig:
      type: object
      id: GkeNodePoolAutoscalingConfig
      properties:
        maxNodeCount:
          description: 'The maximum number of nodes in the node pool. Must be >= min_node_count, and must be > 0. Note: Quota must be sufficient to scale up the cluster.'
          type: integer
          format: int32
        minNodeCount:
          description: The minimum number of nodes in the node pool. Must be >= 0 and <= max_node_count.
          format: int32
          type: integer
      description: GkeNodePoolAutoscaling contains information the cluster autoscaler needs to adjust the size of the node pool to the current cluster usage.
    SoftwareConfig:
      properties:
        optionalComponents:
          items:
            enum:
              - COMPONENT_UNSPECIFIED
              - ANACONDA
              - DOCKER
              - DRUID
              - FLINK
              - HBASE
              - HIVE_WEBHCAT
              - HUDI
              - JUPYTER
              - PRESTO
              - TRINO
              - RANGER
              - SOLR
              - ZEPPELIN
              - ZOOKEEPER
            enumDescriptions:
              - Unspecified component. Specifying this will cause Cluster creation to fail.
              - The Anaconda python distribution. The Anaconda component is not supported in the Dataproc 2.0 image. The 2.0 image is pre-installed with Miniconda.
              - Docker
              - The Druid query engine. (alpha)
              - Flink
              - HBase. (beta)
              - The Hive Web HCatalog (the REST service for accessing HCatalog).
              - Hudi.
              - The Jupyter Notebook.
              - The Presto query engine.
              - The Trino query engine.
              - The Ranger service.
              - The Solr service.
              - The Zeppelin notebook.
              - The Zookeeper service.
            type: string
          description: Optional. The set of components to activate on the cluster.
          type: array
        properties:
          type: object
          additionalProperties:
            type: string
          description: 'Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).'
        imageVersion:
          description: 'Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.'
          type: string
      type: object
      description: Specifies the selection and config of software inside the cluster.
      id: SoftwareConfig
    RuntimeInfo:
      properties:
        diagnosticOutputUri:
          description: Output only. A URI pointing to the location of the diagnostics tarball.
          type: string
          readOnly: true
        currentUsage:
          $ref: '#/components/schemas/UsageSnapshot'
          description: Output only. Snapshot of current workload resource usage.
          readOnly: true
        approximateUsage:
          readOnly: true
          $ref: '#/components/schemas/UsageMetrics'
          description: 'Output only. Approximate workload resource usage, calculated when the workload completes (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).Note: This metric calculation may change in the future, for example, to capture cumulative workload resource consumption during workload execution (see the Dataproc Serverless release notes (https://cloud.google.com/dataproc-serverless/docs/release-notes) for announcements, changes, fixes and other Dataproc developments).'
        endpoints:
          readOnly: true
          description: Output only. Map of remote access endpoints (such as web interfaces and APIs) to their URIs.
          type: object
          additionalProperties:
            type: string
        outputUri:
          type: string
          description: Output only. A URI pointing to the location of the stdout and stderr of the workload.
          readOnly: true
      type: object
      id: RuntimeInfo
      description: Runtime information about workload execution.
    JobMetadata:
      properties:
        startTime:
          type: string
          readOnly: true
          description: Output only. Job submission time.
          format: google-datetime
        operationType:
          type: string
          readOnly: true
          description: Output only. Operation type.
        status:
          description: Output only. Most recent job status.
          readOnly: true
          $ref: '#/components/schemas/JobStatus'
        jobId:
          description: Output only. The job id.
          readOnly: true
          type: string
      type: object
      description: Job Operation metadata.
      id: JobMetadata
    PySparkBatch:
      type: object
      id: PySparkBatch
      description: 'A configuration for running an Apache PySpark (https://spark.apache.org/docs/latest/api/python/getting_started/quickstart.html) batch workload.'
      properties:
        pythonFileUris:
          type: array
          items:
            type: string
          description: 'Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.'
        fileUris:
          items:
            type: string
          type: array
          description: Optional. HCFS URIs of files to be placed in the working directory of each executor.
        jarFileUris:
          description: Optional. HCFS URIs of jar files to add to the classpath of the Spark driver and tasks.
          items:
            type: string
          type: array
        mainPythonFileUri:
          type: string
          description: Required. The HCFS URI of the main Python file to use as the Spark driver. Must be a .py file.
        archiveUris:
          description: 'Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.'
          items:
            type: string
          type: array
        args:
          type: array
          items:
            type: string
          description: 'Optional. The arguments to pass to the driver. Do not include arguments that can be set as batch properties, such as --conf, since a collision can occur that causes an incorrect batch submission.'
    ShieldedInstanceConfig:
      properties:
        enableVtpm:
          description: Optional. Defines whether instances have the vTPM enabled.
          type: boolean
        enableIntegrityMonitoring:
          description: Optional. Defines whether instances have integrity monitoring enabled.
          type: boolean
        enableSecureBoot:
          type: boolean
          description: Optional. Defines whether instances have Secure Boot enabled.
      id: ShieldedInstanceConfig
      type: object
      description: 'Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).'
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      description: Request message for TestIamPermissions method.
      properties:
        permissions:
          description: 'The set of permissions to check for the resource. Permissions with wildcards (such as * or storage.*) are not allowed. For more information see IAM Overview (https://cloud.google.com/iam/docs/overview#permissions).'
          items:
            type: string
          type: array
      type: object
    SparkSqlJob:
      description: 'A Dataproc job for running Apache Spark SQL (https://spark.apache.org/sql/) queries.'
      properties:
        queryList:
          description: A list of queries.
          $ref: '#/components/schemas/QueryList'
        queryFileUri:
          type: string
          description: The HCFS URI of the script that contains SQL queries.
        scriptVariables:
          description: 'Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).'
          type: object
          additionalProperties:
            type: string
        loggingConfig:
          $ref: '#/components/schemas/LoggingConfig'
          description: Optional. The runtime log config for job execution.
        jarFileUris:
          description: Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
          type: array
          items:
            type: string
        properties:
          description: 'Optional. A mapping of property names to values, used to configure Spark SQL''s SparkConf. Properties that conflict with values set by the Dataproc API may be overwritten.'
          additionalProperties:
            type: string
          type: object
      type: object
      id: SparkSqlJob
    KubernetesSoftwareConfig:
      type: object
      properties:
        componentVersion:
          additionalProperties:
            type: string
          type: object
          description: The components that should be installed in this Dataproc cluster. The key must be a string from the KubernetesComponent enumeration. The value is the version of the software to be installed. At least one entry must be specified.
        properties:
          additionalProperties:
            type: string
          description: 'The properties to set on daemon config files.Property keys are specified in prefix:property format, for example spark:spark.kubernetes.container.image. The following are supported prefixes and their mappings: spark: spark-defaults.confFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).'
          type: object
      id: KubernetesSoftwareConfig
      description: The software configuration for this Dataproc cluster running on Kubernetes.
    IdentityConfig:
      type: object
      description: 'Identity related configuration, including service account based secure multi-tenancy user mappings.'
      id: IdentityConfig
      properties:
        userServiceAccountMapping:
          additionalProperties:
            type: string
          type: object
          description: Required. Map of user to service account.
    WorkflowNode:
      id: WorkflowNode
      properties:
        stepId:
          readOnly: true
          type: string
          description: Output only. The name of the node.
        jobId:
          type: string
          description: Output only. The job id; populated after the node enters RUNNING state.
          readOnly: true
        state:
          enumDescriptions:
            - State is unspecified.
            - The node is awaiting prerequisite node to finish.
            - The node is runnable but not running.
            - The node is running.
            - The node completed successfully.
            - The node failed. A node can be marked FAILED because its ancestor or peer failed.
          description: Output only. The node state.
          enum:
            - NODE_STATE_UNSPECIFIED
            - BLOCKED
            - RUNNABLE
            - RUNNING
            - COMPLETED
            - FAILED
          type: string
          readOnly: true
        prerequisiteStepIds:
          readOnly: true
          description: Output only. Node's prerequisite nodes.
          type: array
          items:
            type: string
        error:
          description: Output only. The error detail.
          readOnly: true
          type: string
      description: The workflow node.
      type: object
    WorkflowMetadata:
      type: object
      description: A Dataproc workflow template resource.
      properties:
        clusterUuid:
          type: string
          readOnly: true
          description: Output only. The UUID of target cluster.
        parameters:
          additionalProperties:
            type: string
          description: Map from parameter names to values that were used for those parameters.
          type: object
        endTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. Workflow end time.
        template:
          readOnly: true
          description: 'Output only. The resource name of the workflow template as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}'
          type: string
        deleteCluster:
          description: Output only. The delete cluster operation metadata.
          $ref: '#/components/schemas/ClusterOperation'
          readOnly: true
        dagStartTime:
          type: string
          format: google-datetime
          description: 'Output only. DAG start time, only set for workflows with dag_timeout when DAG begins.'
          readOnly: true
        createCluster:
          description: Output only. The create cluster operation metadata.
          readOnly: true
          $ref: '#/components/schemas/ClusterOperation'
        startTime:
          type: string
          description: Output only. Workflow start time.
          readOnly: true
          format: google-datetime
        version:
          readOnly: true
          format: int32
          description: Output only. The version of template at the time of workflow instantiation.
          type: integer
        clusterName:
          description: Output only. The name of the target cluster.
          readOnly: true
          type: string
        graph:
          description: Output only. The workflow graph.
          $ref: '#/components/schemas/WorkflowGraph'
          readOnly: true
        dagEndTime:
          type: string
          description: 'Output only. DAG end time, only set for workflows with dag_timeout when DAG ends.'
          readOnly: true
          format: google-datetime
        state:
          enumDescriptions:
            - Unused.
            - The operation has been created.
            - The operation is running.
            - The operation is done; either cancelled or completed.
          enum:
            - UNKNOWN
            - PENDING
            - RUNNING
            - DONE
          readOnly: true
          type: string
          description: Output only. The workflow state.
        dagTimeout:
          format: google-duration
          readOnly: true
          description: 'Output only. The timeout duration for the DAG of jobs, expressed in seconds (see JSON representation of duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).'
          type: string
      id: WorkflowMetadata
    ClusterStatus:
      description: The status of a cluster and its instances.
      properties:
        detail:
          description: Optional. Output only. Details of cluster's state.
          type: string
          readOnly: true
        stateStartTime:
          format: google-datetime
          readOnly: true
          description: 'Output only. Time when this state was entered (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).'
          type: string
        substate:
          enum:
            - UNSPECIFIED
            - UNHEALTHY
            - STALE_STATUS
          enumDescriptions:
            - The cluster substate is unknown.
            - 'The cluster is known to be in an unhealthy state (for example, critical daemons are not running or HDFS capacity is exhausted).Applies to RUNNING state.'
            - The agent-reported status is out of date (may occur if Dataproc loses communication with Agent).Applies to RUNNING state.
          description: Output only. Additional state information that includes status reported by the agent.
          type: string
          readOnly: true
        state:
          readOnly: true
          type: string
          description: Output only. The cluster's state.
          enum:
            - UNKNOWN
            - CREATING
            - RUNNING
            - ERROR
            - ERROR_DUE_TO_UPDATE
            - DELETING
            - UPDATING
            - STOPPING
            - STOPPED
            - STARTING
            - REPAIRING
          enumDescriptions:
            - The cluster state is unknown.
            - The cluster is being created and set up. It is not ready for use.
            - 'The cluster is currently running and healthy. It is ready for use.Note: The cluster state changes from "creating" to "running" status after the master node(s), first two primary worker nodes (and the last primary worker node if primary workers > 2) are running.'
            - The cluster encountered an error. It is not ready for use.
            - 'The cluster has encountered an error while being updated. Jobs can be submitted to the cluster, but the cluster cannot be updated.'
            - The cluster is being deleted. It cannot be used.
            - The cluster is being updated. It continues to accept and process jobs.
            - The cluster is being stopped. It cannot be used.
            - The cluster is currently stopped. It is not ready for use.
            - The cluster is being started. It is not ready for use.
            - The cluster is being repaired. It is not ready for use.
      type: object
      id: ClusterStatus
    SparkRBatch:
      properties:
        args:
          type: array
          description: 'Optional. The arguments to pass to the Spark driver. Do not include arguments that can be set as batch properties, such as --conf, since a collision can occur that causes an incorrect batch submission.'
          items:
            type: string
        mainRFileUri:
          description: Required. The HCFS URI of the main R file to use as the driver. Must be a .R or .r file.
          type: string
        archiveUris:
          items:
            type: string
          type: array
          description: 'Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.'
        fileUris:
          type: array
          description: Optional. HCFS URIs of files to be placed in the working directory of each executor.
          items:
            type: string
      description: 'A configuration for running an Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) batch workload.'
      id: SparkRBatch
      type: object
    ClusterOperationStatus:
      id: ClusterOperationStatus
      description: The status of the operation.
      type: object
      properties:
        stateStartTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time this state was entered.
        innerState:
          readOnly: true
          description: Output only. A message containing the detailed operation state.
          type: string
        details:
          type: string
          readOnly: true
          description: Output only. A message containing any operation metadata details.
        state:
          description: Output only. A message containing the operation state.
          type: string
          enumDescriptions:
            - Unused.
            - The operation has been created.
            - The operation is running.
            - The operation is done; either cancelled or completed.
          readOnly: true
          enum:
            - UNKNOWN
            - PENDING
            - RUNNING
            - DONE
    OrderedJob:
      description: A job executed by the workflow.
      id: OrderedJob
      type: object
      properties:
        scheduling:
          description: Optional. Job scheduling configuration.
          $ref: '#/components/schemas/JobScheduling'
        stepId:
          type: string
          description: 'Required. The step id. The id must be unique among all jobs within the template.The step id is used as prefix for job id, as job goog-dataproc-workflow-step-id label, and in prerequisiteStepIds field from other steps.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.'
        prestoJob:
          $ref: '#/components/schemas/PrestoJob'
          description: Optional. Job is a Presto job.
        prerequisiteStepIds:
          description: 'Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.'
          type: array
          items:
            type: string
        pigJob:
          description: Optional. Job is a Pig job.
          $ref: '#/components/schemas/PigJob'
        sparkSqlJob:
          $ref: '#/components/schemas/SparkSqlJob'
          description: Optional. Job is a SparkSql job.
        trinoJob:
          description: Optional. Job is a Trino job.
          $ref: '#/components/schemas/TrinoJob'
        pysparkJob:
          description: Optional. Job is a PySpark job.
          $ref: '#/components/schemas/PySparkJob'
        sparkRJob:
          $ref: '#/components/schemas/SparkRJob'
          description: Optional. Job is a SparkR job.
        sparkJob:
          description: Optional. Job is a Spark job.
          $ref: '#/components/schemas/SparkJob'
        labels:
          additionalProperties:
            type: string
          description: 'Optional. The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given job.'
          type: object
        hiveJob:
          $ref: '#/components/schemas/HiveJob'
          description: Optional. Job is a Hive job.
        hadoopJob:
          $ref: '#/components/schemas/HadoopJob'
          description: Optional. Job is a Hadoop job.
    WorkflowGraph:
      properties:
        nodes:
          readOnly: true
          items:
            $ref: '#/components/schemas/WorkflowNode'
          type: array
          description: Output only. The workflow nodes.
      type: object
      id: WorkflowGraph
      description: The workflow graph.
    GkeClusterConfig:
      properties:
        namespacedGkeDeploymentTarget:
          $ref: '#/components/schemas/NamespacedGkeDeploymentTarget'
          description: Optional. Deprecated. Use gkeClusterTarget. Used only for the deprecated beta. A target for the deployment.
          deprecated: true
        nodePoolTarget:
          items:
            $ref: '#/components/schemas/GkeNodePoolTarget'
          description: 'Optional. GKE node pools where workloads will be scheduled. At least one node pool must be assigned the DEFAULT GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a DEFAULT GkeNodePoolTarget. Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings.'
          type: array
        gkeClusterTarget:
          description: 'Optional. A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster (the GKE cluster can be zonal or regional). Format: ''projects/{project}/locations/{location}/clusters/{cluster_id}'''
          type: string
      id: GkeClusterConfig
      type: object
      description: The cluster's GKE config.
    NodeInitializationAction:
      properties:
        executionTimeout:
          description: 'Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.'
          format: google-duration
          type: string
        executableFile:
          description: Required. Cloud Storage URI of executable file.
          type: string
      id: NodeInitializationAction
      type: object
      description: Specifies an executable to run on a fully configured node and a timeout period for executable completion.
    InstanceGroupConfig:
      properties:
        accelerators:
          items:
            $ref: '#/components/schemas/AcceleratorConfig'
          description: Optional. The Compute Engine accelerator configuration for these instances.
          type: array
        machineTypeUri:
          type: string
          description: 'Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.'
        instanceReferences:
          readOnly: true
          description: Output only. List of references to Compute Engine instances.
          items:
            $ref: '#/components/schemas/InstanceReference'
          type: array
        instanceNames:
          readOnly: true
          description: 'Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.'
          type: array
          items:
            type: string
        imageUri:
          description: 'Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.'
          type: string
        isPreemptible:
          type: boolean
          description: Output only. Specifies that this instance group contains preemptible instances.
          readOnly: true
        preemptibility:
          type: string
          description: Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
          enum:
            - PREEMPTIBILITY_UNSPECIFIED
            - NON_PREEMPTIBLE
            - PREEMPTIBLE
            - SPOT
          enumDescriptions:
            - 'Preemptibility is unspecified, the system will choose the appropriate setting for each instance group.'
            - Instances are non-preemptible.This option is allowed for all instance groups and is the only valid value for Master and Worker instance groups.
            - 'Instances are preemptible (https://cloud.google.com/compute/docs/instances/preemptible).This option is allowed only for secondary worker (https://cloud.google.com/dataproc/docs/concepts/compute/secondary-vms) groups.'
            - 'Instances are Spot VMs (https://cloud.google.com/compute/docs/instances/spot).This option is allowed only for secondary worker (https://cloud.google.com/dataproc/docs/concepts/compute/secondary-vms) groups. Spot VMs are the latest version of preemptible VMs (https://cloud.google.com/compute/docs/instances/preemptible), and provide additional features.'
        minCpuPlatform:
          type: string
          description: 'Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).'
        managedGroupConfig:
          description: Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.
          readOnly: true
          $ref: '#/components/schemas/ManagedGroupConfig'
        numInstances:
          format: int32
          description: 'Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.'
          type: integer
        diskConfig:
          $ref: '#/components/schemas/DiskConfig'
          description: Optional. Disk option config settings.
      type: object
      description: 'The config settings for Compute Engine resources in an instance group, such as a master or worker group.'
      id: InstanceGroupConfig
    LifecycleConfig:
      id: LifecycleConfig
      properties:
        idleStartTime:
          readOnly: true
          format: google-datetime
          description: 'Output only. The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).'
          type: string
        autoDeleteTime:
          type: string
          description: 'Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).'
          format: google-datetime
        idleDeleteTtl:
          type: string
          description: 'Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).'
          format: google-duration
        autoDeleteTtl:
          type: string
          description: 'Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).'
          format: google-duration
      type: object
      description: Specifies the cluster auto-delete schedule configuration.
    SparkRJob:
      description: 'A Dataproc job for running Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) applications on YARN.'
      type: object
      id: SparkRJob
      properties:
        fileUris:
          type: array
          items:
            type: string
          description: Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
        mainRFileUri:
          type: string
          description: Required. The HCFS URI of the main R file to use as the driver. Must be a .R file.
        properties:
          description: 'Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.'
          additionalProperties:
            type: string
          type: object
        args:
          description: 'Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.'
          type: array
          items:
            type: string
        archiveUris:
          description: 'Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.'
          items:
            type: string
          type: array
        loggingConfig:
          $ref: '#/components/schemas/LoggingConfig'
          description: Optional. The runtime log config for job execution.
    PrestoJob:
      description: 'A Dataproc job for running Presto (https://prestosql.io/) queries. IMPORTANT: The Dataproc Presto Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/presto) must be enabled when the cluster is created to submit a Presto job to the cluster.'
      type: object
      properties:
        queryList:
          $ref: '#/components/schemas/QueryList'
          description: A list of queries.
        continueOnFailure:
          type: boolean
          description: Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
        loggingConfig:
          $ref: '#/components/schemas/LoggingConfig'
          description: Optional. The runtime log config for job execution.
        clientTags:
          items:
            type: string
          description: Optional. Presto client tags to attach to this query
          type: array
        outputFormat:
          description: Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats
          type: string
        queryFileUri:
          type: string
          description: The HCFS URI of the script that contains SQL queries.
        properties:
          type: object
          description: 'Optional. A mapping of property names to values. Used to set Presto session properties (https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI'
          additionalProperties:
            type: string
      id: PrestoJob
    ClusterConfig:
      type: object
      id: ClusterConfig
      description: The cluster config.
      properties:
        auxiliaryNodeGroups:
          items:
            $ref: '#/components/schemas/AuxiliaryNodeGroup'
          description: Optional. The node group settings.
          type: array
        secondaryWorkerConfig:
          $ref: '#/components/schemas/InstanceGroupConfig'
          description: Optional. The Compute Engine config settings for a cluster's secondary worker instances
        lifecycleConfig:
          description: Optional. Lifecycle setting for the cluster.
          $ref: '#/components/schemas/LifecycleConfig'
        tempBucket:
          type: string
          description: 'Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster''s temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.'
        dataprocMetricConfig:
          $ref: '#/components/schemas/DataprocMetricConfig'
          description: Optional. The config for Dataproc metrics.
        endpointConfig:
          $ref: '#/components/schemas/EndpointConfig'
          description: Optional. Port/endpoint configuration for this cluster
        securityConfig:
          $ref: '#/components/schemas/SecurityConfig'
          description: Optional. Security settings for the cluster.
        gceClusterConfig:
          description: Optional. The shared Compute Engine config settings for all instances in a cluster.
          $ref: '#/components/schemas/GceClusterConfig'
        masterConfig:
          $ref: '#/components/schemas/InstanceGroupConfig'
          description: Optional. The Compute Engine config settings for the cluster's master instance.
        workerConfig:
          $ref: '#/components/schemas/InstanceGroupConfig'
          description: Optional. The Compute Engine config settings for the cluster's worker instances.
        initializationActions:
          description: 'Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node''s role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ "${ROLE}" == ''Master'' ]]; then ... master specific actions ... else ... worker specific actions ... fi '
          items:
            $ref: '#/components/schemas/NodeInitializationAction'
          type: array
        gkeClusterConfig:
          deprecated: true
          $ref: '#/components/schemas/GkeClusterConfig'
          description: 'Optional. BETA. The Kubernetes Engine config for Dataproc clusters deployed to The Kubernetes Engine config for Dataproc clusters deployed to Kubernetes. These config settings are mutually exclusive with Compute Engine-based options, such as gce_cluster_config, master_config, worker_config, secondary_worker_config, and autoscaling_config.'
        softwareConfig:
          $ref: '#/components/schemas/SoftwareConfig'
          description: Optional. The config settings for cluster software.
        configBucket:
          type: string
          description: 'Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster''s staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.'
        metastoreConfig:
          description: Optional. Metastore configuration.
          $ref: '#/components/schemas/MetastoreConfig'
        autoscalingConfig:
          description: Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.
          $ref: '#/components/schemas/AutoscalingConfig'
        encryptionConfig:
          description: Optional. Encryption settings for the cluster.
          $ref: '#/components/schemas/EncryptionConfig'
    JobPlacement:
      type: object
      properties:
        clusterLabels:
          type: object
          additionalProperties:
            type: string
          description: Optional. Cluster labels to identify a cluster where the job will be submitted.
        clusterName:
          description: Required. The name of the cluster where the job will be submitted.
          type: string
        clusterUuid:
          readOnly: true
          type: string
          description: Output only. A cluster UUID generated by the Dataproc service when the job is submitted.
      description: Dataproc job config.
      id: JobPlacement
    NamespacedGkeDeploymentTarget:
      id: NamespacedGkeDeploymentTarget
      deprecated: true
      properties:
        clusterNamespace:
          description: Optional. A namespace within the GKE cluster to deploy into.
          type: string
        targetGkeCluster:
          type: string
          description: 'Optional. The target GKE cluster to deploy to. Format: ''projects/{project}/locations/{location}/clusters/{cluster_id}'''
      description: 'Deprecated. Used only for the deprecated beta. A full, namespace-isolated deployment target for an existing GKE cluster.'
      type: object
    AuxiliaryNodeGroup:
      type: object
      id: AuxiliaryNodeGroup
      description: Node group identification and configuration information.
      properties:
        nodeGroupId:
          description: 'Optional. A node group ID. Generated if not specified.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of from 3 to 33 characters.'
          type: string
        nodeGroup:
          description: Required. Node group configuration.
          $ref: '#/components/schemas/NodeGroup'
    RuntimeConfig:
      description: Runtime configuration for a workload.
      id: RuntimeConfig
      type: object
      properties:
        properties:
          additionalProperties:
            type: string
          description: 'Optional. A mapping of property names to values, which are used to configure workload execution.'
          type: object
        version:
          description: Optional. Version of the batch runtime.
          type: string
        containerImage:
          type: string
          description: 'Optional. Optional custom container image for the job runtime environment. If not specified, a default container image will be used.'
    WorkflowTemplate:
      id: WorkflowTemplate
      description: A Dataproc workflow template resource.
      type: object
      properties:
        parameters:
          items:
            $ref: '#/components/schemas/TemplateParameter'
          description: Optional. Template parameters whose values are substituted into the template. Values for parameters must be provided when the template is instantiated.
          type: array
        dagTimeout:
          description: 'Optional. Timeout duration for the DAG of jobs, expressed in seconds (see JSON representation of duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). The timeout duration must be from 10 minutes ("600s") to 24 hours ("86400s"). The timer begins when the first job is submitted. If the workflow is running at the end of the timeout period, any remaining jobs are cancelled, the workflow is ended, and if the workflow was running on a managed cluster, the cluster is deleted.'
          type: string
          format: google-duration
        version:
          type: integer
          format: int32
          description: 'Optional. Used to perform a consistent read-modify-write.This field should be left blank for a CreateWorkflowTemplate request. It is required for an UpdateWorkflowTemplate request, and must match the current server version. A typical update template flow would fetch the current template with a GetWorkflowTemplate request, which will return the current template with the version field filled in with the current server version. The user updates other fields in the template, then returns it as part of the UpdateWorkflowTemplate request.'
        jobs:
          type: array
          description: Required. The Directed Acyclic Graph of Jobs to submit.
          items:
            $ref: '#/components/schemas/OrderedJob'
        updateTime:
          description: Output only. The time template was last updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created by the workflow instance.Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).No more than 32 labels can be associated with a template.'
        id:
          type: string
        name:
          type: string
          readOnly: true
          description: 'Output only. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}'
        placement:
          $ref: '#/components/schemas/WorkflowTemplatePlacement'
          description: Required. WorkflowTemplate scheduling information.
        createTime:
          type: string
          format: google-datetime
          description: Output only. The time template was created.
          readOnly: true
    SparkBatch:
      properties:
        jarFileUris:
          description: Optional. HCFS URIs of jar files to add to the classpath of the Spark driver and tasks.
          type: array
          items:
            type: string
        mainJarFileUri:
          description: Optional. The HCFS URI of the jar file that contains the main class.
          type: string
        archiveUris:
          items:
            type: string
          description: 'Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.'
          type: array
        mainClass:
          description: Optional. The name of the driver main class. The jar file that contains the class must be in the classpath or specified in jar_file_uris.
          type: string
        fileUris:
          items:
            type: string
          description: Optional. HCFS URIs of files to be placed in the working directory of each executor.
          type: array
        args:
          description: 'Optional. The arguments to pass to the driver. Do not include arguments that can be set as batch properties, such as --conf, since a collision can occur that causes an incorrect batch submission.'
          type: array
          items:
            type: string
      type: object
      id: SparkBatch
      description: 'A configuration for running an Apache Spark (https://spark.apache.org/) batch workload.'
    KubernetesClusterConfig:
      properties:
        kubernetesNamespace:
          type: string
          description: 'Optional. A namespace within the Kubernetes cluster to deploy into. If this namespace does not exist, it is created. If it exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it. If not specified, the name of the Dataproc Cluster is used.'
        gkeClusterConfig:
          $ref: '#/components/schemas/GkeClusterConfig'
          description: Required. The configuration for running the Dataproc cluster on GKE.
        kubernetesSoftwareConfig:
          description: Optional. The software configuration for this Dataproc cluster running on Kubernetes.
          $ref: '#/components/schemas/KubernetesSoftwareConfig'
      id: KubernetesClusterConfig
      type: object
      description: The configuration for running the Dataproc cluster on Kubernetes.
    AutoscalingPolicy:
      description: Describes an autoscaling policy for Dataproc cluster autoscaler.
      properties:
        name:
          description: 'Output only. The "resource name" of the autoscaling policy, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For projects.locations.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}'
          type: string
          readOnly: true
        workerConfig:
          $ref: '#/components/schemas/InstanceGroupAutoscalingPolicyConfig'
          description: Required. Describes how the autoscaler will operate for primary workers.
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Optional. The labels to associate with this autoscaling policy. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with an autoscaling policy.'
        basicAlgorithm:
          $ref: '#/components/schemas/BasicAutoscalingAlgorithm'
        secondaryWorkerConfig:
          $ref: '#/components/schemas/InstanceGroupAutoscalingPolicyConfig'
          description: Optional. Describes how the autoscaler will operate for secondary workers.
        id:
          description: 'Required. The policy id.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.'
          type: string
      type: object
      id: AutoscalingPolicy
    JobReference:
      type: object
      id: JobReference
      properties:
        projectId:
          type: string
          description: 'Optional. The ID of the Google Cloud Platform project that the job belongs to. If specified, must match the request project ID.'
        jobId:
          description: 'Optional. The job ID, which must be unique within the project.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.If not specified by the caller, the job ID will be provided by the server.'
          type: string
      description: Encapsulates the full scoping used to reference a job.
    Operation:
      properties:
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.'
          type: string
        response:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: 'The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.'
        done:
          description: 'If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.'
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
    KerberosConfig:
      type: object
      properties:
        kdcDbKeyUri:
          type: string
          description: Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
        rootPrincipalPasswordUri:
          description: Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
          type: string
        truststorePasswordUri:
          type: string
          description: 'Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.'
        crossRealmTrustRealm:
          type: string
          description: 'Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.'
        keystorePasswordUri:
          description: 'Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.'
          type: string
        keystoreUri:
          type: string
          description: 'Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.'
        crossRealmTrustSharedPasswordUri:
          type: string
          description: 'Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.'
        truststoreUri:
          type: string
          description: 'Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.'
        crossRealmTrustKdc:
          type: string
          description: Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
        realm:
          description: 'Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.'
          type: string
        keyPasswordUri:
          type: string
          description: 'Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.'
        crossRealmTrustAdminServer:
          type: string
          description: Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
        tgtLifetimeHours:
          description: 'Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.'
          format: int32
          type: integer
        enableKerberos:
          description: 'Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.'
          type: boolean
        kmsKeyUri:
          description: Optional. The uri of the KMS key used to encrypt various sensitive files.
          type: string
      description: Specifies Kerberos related configuration.
      id: KerberosConfig
    GetPolicyOptions:
      properties:
        requestedPolicyVersion:
          description: 'Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).'
          type: integer
          format: int32
      type: object
      id: GetPolicyOptions
      description: Encapsulates settings provided to GetIamPolicy.
    LoggingConfig:
      properties:
        driverLogLevels:
          description: 'The per-package log levels for the driver. This may include "root" package name to configure rootLogger. Examples: - ''com.google = FATAL'' - ''root = INFO'' - ''org.apache = DEBUG'''
          type: object
          additionalProperties:
            enum:
              - LEVEL_UNSPECIFIED
              - ALL
              - TRACE
              - DEBUG
              - INFO
              - WARN
              - ERROR
              - FATAL
              - 'OFF'
            type: string
            enumDescriptions:
              - Level is unspecified. Use default level for log4j.
              - Use ALL level for log4j.
              - Use TRACE level for log4j.
              - Use DEBUG level for log4j.
              - Use INFO level for log4j.
              - Use WARN level for log4j.
              - Use ERROR level for log4j.
              - Use FATAL level for log4j.
              - Turn off log4j.
      description: The runtime logging config of the job.
      id: LoggingConfig
      type: object
    Status:
      type: object
      properties:
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        code:
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
          type: integer
        details:
          type: array
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
      id: Status
      description: 'The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).'
    EncryptionConfig:
      type: object
      id: EncryptionConfig
      properties:
        gcePdKmsKeyName:
          description: Optional. The Cloud KMS key name to use for PD disk encryption for all instances in the cluster.
          type: string
        kmsKey:
          description: Optional. The Cloud KMS key name to use for encrypting customer core content and cluster PD disk for all instances in the cluster.
          type: string
      description: Encryption settings for the cluster.
    Metric:
      description: A Dataproc custom metric.
      id: Metric
      type: object
      properties:
        metricSource:
          description: 'Required. A standard set of metrics is collected unless metricOverrides are specified for the metric source (see Custom metrics (https://cloud.google.com/dataproc/docs/guides/dataproc-metrics#custom_metrics) for more information).'
          enum:
            - METRIC_SOURCE_UNSPECIFIED
            - MONITORING_AGENT_DEFAULTS
            - HDFS
            - SPARK
            - YARN
            - SPARK_HISTORY_SERVER
            - HIVESERVER2
            - HIVEMETASTORE
          enumDescriptions:
            - Required unspecified metric source.
            - 'Monitoring agent metrics. If this source is enabled, Dataproc enables the monitoring agent in Compute Engine, and collects monitoring agent metrics, which are published with an agent.googleapis.com prefix.'
            - HDFS metric source.
            - Spark metric source.
            - YARN metric source.
            - Spark History Server metric source.
            - Hiveserver2 metric source.
            - hivemetastore metric source
          type: string
        metricOverrides:
          type: array
          items:
            type: string
          description: 'Optional. Specify one or more Custom metrics (https://cloud.google.com/dataproc/docs/guides/dataproc-metrics#custom_metrics) to collect for the metric course (for the SPARK metric source (any Spark metric (https://spark.apache.org/docs/latest/monitoring.html#metrics) can be specified).Provide metrics in the following format: METRIC_SOURCE: INSTANCE:GROUP:METRIC Use camelcase as appropriate.Examples: yarn:ResourceManager:QueueMetrics:AppsCompleted spark:driver:DAGScheduler:job.allJobs sparkHistoryServer:JVM:Memory:NonHeapMemoryUsage.committed hiveserver2:JVM:Memory:NonHeapMemoryUsage.used Notes: Only the specified overridden metrics are collected for the metric source. For example, if one or more spark:executive metrics are listed as metric overrides, other SPARK metrics are not collected. The collection of the metrics for other enabled custom metric sources is unaffected. For example, if both SPARK andd YARN metric sources are enabled, and overrides are provided for Spark metrics only, all YARN metrics are collected.'
    ClusterOperationMetadata:
      properties:
        status:
          description: Output only. Current operation status.
          $ref: '#/components/schemas/ClusterOperationStatus'
          readOnly: true
        childOperationIds:
          items:
            type: string
          readOnly: true
          type: array
          description: Output only. Child operation ids
        operationType:
          description: Output only. The operation type.
          type: string
          readOnly: true
        warnings:
          type: array
          description: Output only. Errors encountered during operation execution.
          readOnly: true
          items:
            type: string
        labels:
          additionalProperties:
            type: string
          description: Output only. Labels associated with the operation
          type: object
          readOnly: true
        clusterName:
          description: Output only. Name of the cluster for the operation.
          readOnly: true
          type: string
        statusHistory:
          items:
            $ref: '#/components/schemas/ClusterOperationStatus'
          readOnly: true
          description: Output only. The previous operation status.
          type: array
        description:
          readOnly: true
          description: Output only. Short description of operation.
          type: string
        clusterUuid:
          description: Output only. Cluster UUID for the operation.
          type: string
          readOnly: true
      type: object
      id: ClusterOperationMetadata
      description: Metadata describing the operation.
    GceClusterConfig:
      description: 'Common config settings for resources of Compute Engine cluster instances, applicable to all instances in the cluster.'
      id: GceClusterConfig
      type: object
      properties:
        internalIpOnly:
          type: boolean
          description: 'Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.'
        serviceAccountScopes:
          items:
            type: string
          type: array
          description: 'Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: https://www.googleapis.com/auth/cloud.useraccounts.readonly https://www.googleapis.com/auth/devstorage.read_write https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided: https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/bigtable.admin.table https://www.googleapis.com/auth/bigtable.data https://www.googleapis.com/auth/devstorage.full_control'
        nodeGroupAffinity:
          $ref: '#/components/schemas/NodeGroupAffinity'
          description: Optional. Node Group Affinity for sole-tenant clusters.
        networkUri:
          description: 'Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see Using Subnetworks (https://cloud.google.com/compute/docs/subnetworks) for more information).A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default projects/[project_id]/global/networks/default default'
          type: string
        shieldedInstanceConfig:
          description: 'Optional. Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).'
          $ref: '#/components/schemas/ShieldedInstanceConfig'
        serviceAccount:
          type: string
          description: 'Optional. The Dataproc service account (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see VM Data Plane identity (https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services.If not specified, the Compute Engine default service account (https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.'
        metadata:
          type: object
          additionalProperties:
            type: string
          description: 'Optional. The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).'
        tags:
          items:
            type: string
          type: array
          description: 'The Compute Engine tags to add to all instances (see Tagging instances (https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).'
        zoneUri:
          type: string
          description: 'Optional. The Compute Engine zone where the Dataproc cluster will be located. If omitted, the service will pick a zone in the cluster''s Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone] projects/[project_id]/zones/[zone] [zone]'
        subnetworkUri:
          description: 'Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/[region]/subnetworks/sub0 projects/[project_id]/regions/[region]/subnetworks/sub0 sub0'
          type: string
        confidentialInstanceConfig:
          $ref: '#/components/schemas/ConfidentialInstanceConfig'
          description: 'Optional. Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs).'
        reservationAffinity:
          $ref: '#/components/schemas/ReservationAffinity'
          description: Optional. Reservation Affinity for consuming Zonal reservation.
        privateIpv6GoogleAccess:
          description: Optional. The type of IPv6 access for a cluster.
          enum:
            - PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED
            - INHERIT_FROM_SUBNETWORK
            - OUTBOUND
            - BIDIRECTIONAL
          type: string
          enumDescriptions:
            - 'If unspecified, Compute Engine default behavior will apply, which is the same as INHERIT_FROM_SUBNETWORK.'
            - Private access to and from Google Services configuration inherited from the subnetwork configuration. This is the default Compute Engine behavior.
            - Enables outbound private IPv6 access to Google Services from the Dataproc cluster.
            - Enables bidirectional private IPv6 access between Google Services and the Dataproc cluster.
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for SetIamPolicy method.
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
          description: 'REQUIRED: The complete policy to be applied to the resource. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
    GetIamPolicyRequest:
      properties:
        options:
          $ref: '#/components/schemas/GetPolicyOptions'
          description: 'OPTIONAL: A GetPolicyOptions object for specifying options to GetIamPolicy.'
      type: object
      id: GetIamPolicyRequest
      description: Request message for GetIamPolicy method.
    ValueValidation:
      description: Validation based on a list of allowed values.
      type: object
      properties:
        values:
          description: Required. List of allowed values for the parameter.
          type: array
          items:
            type: string
      id: ValueValidation
    InjectCredentialsRequest:
      properties:
        credentialsCiphertext:
          description: Required. The encrypted credentials being injected in to the cluster.The client is responsible for encrypting the credentials in a way that is supported by the cluster.A wrapped value is used here so that the actual contents of the encrypted credentials are not written to audit logs.
          type: string
        clusterUuid:
          description: Required. The cluster UUID.
          type: string
      id: InjectCredentialsRequest
      description: A request to inject credentials into a cluster.
      type: object
    UsageSnapshot:
      properties:
        milliDcuPremium:
          description: 'Optional. Milli (one-thousandth) Dataproc Compute Units (DCUs) charged at premium tier (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).'
          type: string
          format: int64
        snapshotTime:
          type: string
          description: Optional. The timestamp of the usage snapshot.
          format: google-datetime
        shuffleStorageGb:
          format: int64
          description: 'Optional. Shuffle Storage in gigabytes (GB). (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing))'
          type: string
        milliDcu:
          description: 'Optional. Milli (one-thousandth) Dataproc Compute Units (DCUs) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).'
          type: string
          format: int64
        shuffleStorageGbPremium:
          type: string
          description: 'Optional. Shuffle Storage in gigabytes (GB) charged at premium tier. (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing))'
          format: int64
      type: object
      id: UsageSnapshot
      description: The usage snapshot represents the resources consumed by a workload at a specified time.
    SparkJob:
      id: SparkJob
      properties:
        properties:
          additionalProperties:
            type: string
          description: 'Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.'
          type: object
        mainClass:
          type: string
          description: The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris.
        loggingConfig:
          description: Optional. The runtime log config for job execution.
          $ref: '#/components/schemas/LoggingConfig'
        args:
          items:
            type: string
          description: 'Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.'
          type: array
        jarFileUris:
          type: array
          description: Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
          items:
            type: string
        archiveUris:
          description: 'Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.'
          items:
            type: string
          type: array
        fileUris:
          description: Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
          type: array
          items:
            type: string
        mainJarFileUri:
          type: string
          description: The HCFS URI of the jar file that contains the main class.
      description: 'A Dataproc job for running Apache Spark (https://spark.apache.org/) applications on YARN.'
      type: object
    ListClustersResponse:
      id: ListClustersResponse
      properties:
        clusters:
          description: Output only. The clusters in the project.
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
          readOnly: true
        nextPageToken:
          description: 'Output only. This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent ListClustersRequest.'
          readOnly: true
          type: string
      type: object
      description: The list of all clusters in a project.
    InstanceReference:
      description: A reference to a Compute Engine instance.
      properties:
        instanceName:
          description: The user-friendly name of the Compute Engine instance.
          type: string
        instanceId:
          type: string
          description: The unique identifier of the Compute Engine instance.
        publicEciesKey:
          type: string
          description: The public ECIES key used for sharing data with this instance.
        publicKey:
          description: The public RSA key used for sharing data with this instance.
          type: string
      id: InstanceReference
      type: object
    ExecutionConfig:
      type: object
      id: ExecutionConfig
      properties:
        networkUri:
          description: Optional. Network URI to connect workload to.
          type: string
        serviceAccount:
          description: Optional. Service account that used to execute workload.
          type: string
        idleTtl:
          format: google-duration
          type: string
          description: 'Optional. Applies to sessions only. The duration to keep the session alive while it''s idling. Exceeding this threshold causes the session to terminate. This field cannot be set on a batch workload. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). Defaults to 4 hours if not set. If both ttl and idle_ttl are specified for an interactive session, the conditions are treated as OR conditions: the workload will be terminated when it has been idle for idle_ttl or when ttl has been exceeded, whichever occurs first.'
        subnetworkUri:
          type: string
          description: Optional. Subnetwork URI to connect workload to.
        kmsKey:
          description: Optional. The Cloud KMS key to use for encryption.
          type: string
        networkTags:
          type: array
          description: Optional. Tags used for network traffic control.
          items:
            type: string
        ttl:
          description: 'Optional. The duration after which the workload will be terminated. When the workload exceeds this duration, it will be unconditionally terminated without waiting for ongoing work to finish. If ttl is not specified for a batch workload, the workload will be allowed to run until it exits naturally (or runs forever without exiting). If ttl is not specified for an interactive session, it defaults to 24h. If ttl is not specified for a batch that uses 2.1+ runtime version, it defaults to 4h. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). If both ttl and idle_ttl are specified (for an interactive session), the conditions are treated as OR conditions: the workload will be terminated when it has been idle for idle_ttl or when ttl has been exceeded, whichever occurs first.'
          type: string
          format: google-duration
        stagingBucket:
          description: 'Optional. A Cloud Storage bucket used to stage workload dependencies, config files, and store workload output and other ephemeral data, such as Spark history files. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location according to the region where your workload is running, and then create and manage project-level, per-location staging and temporary buckets. This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.'
          type: string
      description: Execution configuration for a workload.
    PeripheralsConfig:
      type: object
      description: Auxiliary services configuration for a workload.
      properties:
        sparkHistoryServerConfig:
          description: Optional. The Spark History Server configuration for the workload.
          $ref: '#/components/schemas/SparkHistoryServerConfig'
        metastoreService:
          type: string
          description: 'Optional. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[region]/services/[service_id]'
      id: PeripheralsConfig
    PySparkJob:
      id: PySparkJob
      description: 'A Dataproc job for running Apache PySpark (https://spark.apache.org/docs/0.9.0/python-programming-guide.html) applications on YARN.'
      type: object
      properties:
        mainPythonFileUri:
          description: Required. The HCFS URI of the main Python file to use as the driver. Must be a .py file.
          type: string
        pythonFileUris:
          description: 'Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.'
          items:
            type: string
          type: array
        fileUris:
          type: array
          items:
            type: string
          description: Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
        jarFileUris:
          description: Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.
          items:
            type: string
          type: array
        loggingConfig:
          description: Optional. The runtime log config for job execution.
          $ref: '#/components/schemas/LoggingConfig'
        args:
          description: 'Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.'
          type: array
          items:
            type: string
        archiveUris:
          items:
            type: string
          type: array
          description: 'Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.'
        properties:
          description: 'Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.'
          type: object
          additionalProperties:
            type: string
    HiveJob:
      properties:
        continueOnFailure:
          type: boolean
          description: Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
        jarFileUris:
          items:
            type: string
          description: Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
          type: array
        queryList:
          description: A list of queries.
          $ref: '#/components/schemas/QueryList'
        properties:
          type: object
          description: 'Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.'
          additionalProperties:
            type: string
        queryFileUri:
          type: string
          description: The HCFS URI of the script that contains Hive queries.
        scriptVariables:
          type: object
          description: 'Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name="value";).'
          additionalProperties:
            type: string
      id: HiveJob
      type: object
      description: 'A Dataproc job for running Apache Hive (https://hive.apache.org/) queries on YARN.'
    SecurityConfig:
      description: 'Security related configuration, including encryption, Kerberos, etc.'
      type: object
      id: SecurityConfig
      properties:
        identityConfig:
          $ref: '#/components/schemas/IdentityConfig'
          description: 'Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.'
        kerberosConfig:
          description: Optional. Kerberos related configuration.
          $ref: '#/components/schemas/KerberosConfig'
    Cluster:
      description: 'Describes the identifying information, config, and status of a Dataproc cluster'
      id: Cluster
      type: object
      properties:
        virtualClusterConfig:
          description: 'Optional. The virtual cluster config is used when creating a Dataproc cluster that does not directly control the underlying compute resources, for example, when creating a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/guides/dpgke/dataproc-gke-overview). Dataproc may set default values, and values may change when clusters are updated. Exactly one of config or virtual_cluster_config must be specified.'
          $ref: '#/components/schemas/VirtualClusterConfig'
        metrics:
          $ref: '#/components/schemas/ClusterMetrics'
          readOnly: true
          description: 'Output only. Contains cluster daemon metrics such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.'
        config:
          $ref: '#/components/schemas/ClusterConfig'
          description: 'Optional. The cluster config for a cluster of Compute Engine Instances. Note that Dataproc may set default values, and values may change when clusters are updated.Exactly one of ClusterConfig or VirtualClusterConfig must be specified.'
        labels:
          description: 'Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.'
          additionalProperties:
            type: string
          type: object
        clusterUuid:
          type: string
          readOnly: true
          description: Output only. A cluster UUID (Unique Universal Identifier). Dataproc generates this value when it creates the cluster.
        clusterName:
          description: 'Required. The cluster name, which must be unique within a project. The name must start with a lowercase letter, and can contain up to 51 lowercase letters, numbers, and hyphens. It cannot end with a hyphen. The name of a deleted cluster can be reused.'
          type: string
        status:
          $ref: '#/components/schemas/ClusterStatus'
          readOnly: true
          description: Output only. Cluster status.
        statusHistory:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ClusterStatus'
          description: Output only. The previous cluster status.
        projectId:
          description: Required. The Google Cloud Platform project ID that the cluster belongs to.
          type: string
    ListJobsResponse:
      description: A list of jobs in a project.
      type: object
      id: ListJobsResponse
      properties:
        nextPageToken:
          type: string
          description: 'Optional. This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent ListJobsRequest.'
        jobs:
          type: array
          description: Output only. Jobs list.
          items:
            $ref: '#/components/schemas/Job'
          readOnly: true
    SparkHistoryServerConfig:
      id: SparkHistoryServerConfig
      description: Spark History Server configuration for the workload.
      type: object
      properties:
        dataprocCluster:
          type: string
          description: 'Optional. Resource name of an existing Dataproc Cluster to act as a Spark History Server for the workload.Example: projects/[project_id]/regions/[region]/clusters/[cluster_name]'
    TrinoJob:
      description: 'A Dataproc job for running Trino (https://trino.io/) queries. IMPORTANT: The Dataproc Trino Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/trino) must be enabled when the cluster is created to submit a Trino job to the cluster.'
      type: object
      properties:
        outputFormat:
          description: Optional. The format in which query output will be displayed. See the Trino documentation for supported output formats
          type: string
        loggingConfig:
          $ref: '#/components/schemas/LoggingConfig'
          description: Optional. The runtime log config for job execution.
        clientTags:
          description: Optional. Trino client tags to attach to this query
          items:
            type: string
          type: array
        queryList:
          $ref: '#/components/schemas/QueryList'
          description: A list of queries.
        queryFileUri:
          type: string
          description: The HCFS URI of the script that contains SQL queries.
        properties:
          description: 'Optional. A mapping of property names to values. Used to set Trino session properties (https://trino.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Trino CLI'
          additionalProperties:
            type: string
          type: object
        continueOnFailure:
          description: Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
          type: boolean
      id: TrinoJob
    PigJob:
      properties:
        continueOnFailure:
          type: boolean
          description: Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
        scriptVariables:
          description: 'Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).'
          additionalProperties:
            type: string
          type: object
        queryFileUri:
          description: The HCFS URI of the script that contains the Pig queries.
          type: string
        loggingConfig:
          description: Optional. The runtime log config for job execution.
          $ref: '#/components/schemas/LoggingConfig'
        queryList:
          $ref: '#/components/schemas/QueryList'
          description: A list of queries.
        jarFileUris:
          items:
            type: string
          description: Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
          type: array
        properties:
          additionalProperties:
            type: string
          type: object
          description: 'Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.'
      id: PigJob
      description: 'A Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.'
      type: object
    UsageMetrics:
      properties:
        shuffleStorageGbSeconds:
          type: string
          description: 'Optional. Shuffle storage usage in (GB x seconds) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).'
          format: int64
        milliDcuSeconds:
          description: 'Optional. DCU (Dataproc Compute Units) usage in (milliDCU x seconds) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).'
          type: string
          format: int64
      description: Usage metrics represent approximate total resources consumed by a workload.
      type: object
      id: UsageMetrics
    EnvironmentConfig:
      properties:
        peripheralsConfig:
          $ref: '#/components/schemas/PeripheralsConfig'
          description: Optional. Peripherals configuration that workload has access to.
        executionConfig:
          description: Optional. Execution configuration for a workload.
          $ref: '#/components/schemas/ExecutionConfig'
      type: object
      description: Environment configuration for a workload.
      id: EnvironmentConfig
    InstanceGroupAutoscalingPolicyConfig:
      id: InstanceGroupAutoscalingPolicyConfig
      description: 'Configuration for the size bounds of an instance group, including its proportional size to other groups.'
      type: object
      properties:
        maxInstances:
          type: integer
          description: 'Required. Maximum number of instances for this group. Required for primary workers. Note that by default, clusters will not use secondary workers. Required for secondary workers if the minimum secondary instances is set.Primary workers - Bounds: [min_instances, ). Secondary workers - Bounds: [min_instances, ). Default: 0.'
          format: int32
        minInstances:
          description: 'Optional. Minimum number of instances for this group.Primary workers - Bounds: 2, max_instances. Default: 2. Secondary workers - Bounds: 0, max_instances. Default: 0.'
          format: int32
          type: integer
        weight:
          type: integer
          format: int32
          description: 'Optional. Weight for the instance group, which is used to determine the fraction of total workers in the cluster from this instance group. For example, if primary workers have weight 2, and secondary workers have weight 1, the cluster will have approximately 2 primary workers for each secondary worker.The cluster may not reach the specified balance if constrained by min/max bounds or other autoscaling settings. For example, if max_instances for secondary workers is 0, then only primary workers will be added. The cluster can also be out of balance when created.If weight is not set on any instance group, the cluster will default to equal weight for all groups: the cluster will attempt to maintain an equal number of workers in each group within the configured size bounds for each group. If weight is set for one group only, the cluster will default to zero weight on the unset group. For example if weight is set only on primary workers, the cluster will use primary workers only and no secondary workers.'
    ClusterSelector:
      description: A selector that chooses target cluster for jobs based on metadata.
      properties:
        clusterLabels:
          type: object
          additionalProperties:
            type: string
          description: Required. The cluster labels. Cluster must have all labels to match.
        zone:
          type: string
          description: 'Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.'
      type: object
      id: ClusterSelector
    Job:
      type: object
      properties:
        hiveJob:
          $ref: '#/components/schemas/HiveJob'
          description: Optional. Job is a Hive job.
        pigJob:
          description: Optional. Job is a Pig job.
          $ref: '#/components/schemas/PigJob'
        labels:
          description: 'Optional. The labels to associate with this job. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a job.'
          additionalProperties:
            type: string
          type: object
        scheduling:
          description: Optional. Job scheduling configuration.
          $ref: '#/components/schemas/JobScheduling'
        driverControlFilesUri:
          description: 'Output only. If present, the location of miscellaneous control files which may be used as part of job setup and handling. If not present, control files may be placed in the same location as driver_output_uri.'
          readOnly: true
          type: string
        driverOutputResourceUri:
          description: Output only. A URI pointing to the location of the stdout of the job's driver program.
          type: string
          readOnly: true
        statusHistory:
          items:
            $ref: '#/components/schemas/JobStatus'
          readOnly: true
          description: Output only. The previous job status.
          type: array
        jobUuid:
          type: string
          readOnly: true
          description: Output only. A UUID that uniquely identifies a job within the project over time. This is in contrast to a user-settable reference.job_id that may be reused over time.
        hadoopJob:
          description: Optional. Job is a Hadoop job.
          $ref: '#/components/schemas/HadoopJob'
        reference:
          description: 'Optional. The fully qualified reference to the job, which can be used to obtain the equivalent REST path of the job resource. If this property is not specified when a job is created, the server generates a job_id.'
          $ref: '#/components/schemas/JobReference'
        sparkSqlJob:
          $ref: '#/components/schemas/SparkSqlJob'
          description: Optional. Job is a SparkSql job.
        driverSchedulingConfig:
          description: Optional. Driver scheduling configuration.
          $ref: '#/components/schemas/DriverSchedulingConfig'
        sparkJob:
          description: Optional. Job is a Spark job.
          $ref: '#/components/schemas/SparkJob'
        sparkRJob:
          $ref: '#/components/schemas/SparkRJob'
          description: Optional. Job is a SparkR job.
        placement:
          $ref: '#/components/schemas/JobPlacement'
          description: 'Required. Job information, including how, when, and where to run the job.'
        yarnApplications:
          items:
            $ref: '#/components/schemas/YarnApplication'
          description: 'Output only. The collection of YARN applications spun up by this job.Beta Feature: This report is available for testing purposes only. It may be changed before final release.'
          type: array
          readOnly: true
        trinoJob:
          description: Optional. Job is a Trino job.
          $ref: '#/components/schemas/TrinoJob'
        done:
          readOnly: true
          type: boolean
          description: 'Output only. Indicates whether the job is completed. If the value is false, the job is still in progress. If true, the job is completed, and status.state field will indicate if it was successful, failed, or cancelled.'
        status:
          $ref: '#/components/schemas/JobStatus'
          description: Output only. The job status. Additional application-specific status information may be contained in the type_job and yarn_applications fields.
          readOnly: true
        pysparkJob:
          description: Optional. Job is a PySpark job.
          $ref: '#/components/schemas/PySparkJob'
        prestoJob:
          $ref: '#/components/schemas/PrestoJob'
          description: Optional. Job is a Presto job.
        flinkJob:
          description: Optional. Job is a Flink job.
          $ref: '#/components/schemas/FlinkJob'
      id: Job
      description: A Dataproc job resource.
    CancelJobRequest:
      description: A request to cancel a job.
      id: CancelJobRequest
      type: object
      properties: {}
    ListAutoscalingPoliciesResponse:
      id: ListAutoscalingPoliciesResponse
      description: A response to a request to list autoscaling policies in a project.
      type: object
      properties:
        policies:
          type: array
          items:
            $ref: '#/components/schemas/AutoscalingPolicy'
          description: Output only. Autoscaling policies list.
          readOnly: true
        nextPageToken:
          type: string
          readOnly: true
          description: Output only. This token is included in the response if there are more results to fetch.
    EndpointConfig:
      type: object
      id: EndpointConfig
      properties:
        httpPorts:
          additionalProperties:
            type: string
          type: object
          description: Output only. The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true.
          readOnly: true
        enableHttpPortAccess:
          description: 'Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.'
          type: boolean
      description: Endpoint config for this cluster
    SparkSqlBatch:
      description: 'A configuration for running Apache Spark SQL (https://spark.apache.org/sql/) queries as a batch workload.'
      type: object
      properties:
        queryFileUri:
          type: string
          description: Required. The HCFS URI of the script that contains Spark SQL queries to execute.
        jarFileUris:
          items:
            type: string
          type: array
          description: Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
        queryVariables:
          additionalProperties:
            type: string
          description: 'Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).'
          type: object
      id: SparkSqlBatch
    JobStatus:
      description: Dataproc job status.
      type: object
      id: JobStatus
      properties:
        substate:
          description: 'Output only. Additional state information, which includes status reported by the agent.'
          enumDescriptions:
            - The job substate is unknown.
            - The Job is submitted to the agent.Applies to RUNNING state.
            - The Job has been received and is awaiting execution (it may be waiting for a condition to be met). See the "details" field for the reason for the delay.Applies to RUNNING state.
            - 'The agent-reported status is out of date, which may be caused by a loss of communication between the agent and Dataproc. If the agent does not send a timely update, the job will fail.Applies to RUNNING state.'
          enum:
            - UNSPECIFIED
            - SUBMITTED
            - QUEUED
            - STALE_STATUS
          readOnly: true
          type: string
        state:
          enumDescriptions:
            - The job state is unknown.
            - 'The job is pending; it has been submitted, but is not yet running.'
            - Job has been received by the service and completed initial setup; it will soon be submitted to the cluster.
            - The job is running on the cluster.
            - 'A CancelJob request has been received, but is pending.'
            - 'Transient in-flight resources have been canceled, and the request to cancel the running job has been issued to the cluster.'
            - The job cancellation was successful.
            - The job has completed successfully.
            - 'The job has completed, but encountered an error.'
            - Job attempt has failed. The detail field contains failure details for this attempt.Applies to restartable jobs only.
          description: Output only. A state message specifying the overall job state.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - SETUP_DONE
            - RUNNING
            - CANCEL_PENDING
            - CANCEL_STARTED
            - CANCELLED
            - DONE
            - ERROR
            - ATTEMPT_FAILURE
          type: string
        stateStartTime:
          description: Output only. The time when this state was entered.
          type: string
          readOnly: true
          format: google-datetime
        details:
          readOnly: true
          type: string
          description: 'Optional. Output only. Job state details, such as an error description if the state is ERROR.'
    DiagnoseClusterRequest:
      id: DiagnoseClusterRequest
      type: object
      description: A request to collect cluster diagnostic information.
      properties:
        job:
          description: 'Optional. DEPRECATED Specifies the job on which diagnosis is to be performed. Format: projects/{project}/regions/{region}/jobs/{job}'
          type: string
          deprecated: true
        jobs:
          description: 'Optional. Specifies a list of jobs on which diagnosis is to be performed. Format: projects/{project}/regions/{region}/jobs/{job}'
          type: array
          items:
            type: string
        yarnApplicationId:
          type: string
          deprecated: true
          description: Optional. DEPRECATED Specifies the yarn application on which diagnosis is to be performed.
        yarnApplicationIds:
          description: Optional. Specifies a list of yarn applications on which diagnosis is to be performed.
          type: array
          items:
            type: string
        diagnosisInterval:
          $ref: '#/components/schemas/Interval'
          description: Optional. Time interval in which diagnosis should be carried out on the cluster.
    GkeNodePoolAcceleratorConfig:
      properties:
        acceleratorCount:
          format: int64
          description: The number of accelerator cards exposed to an instance.
          type: string
        acceleratorType:
          description: The accelerator type resource namename (see GPUs on Compute Engine).
          type: string
        gpuPartitionSize:
          description: 'Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).'
          type: string
      description: A GkeNodeConfigAcceleratorConfig represents a Hardware Accelerator request for a node pool.
      type: object
      id: GkeNodePoolAcceleratorConfig
    FlinkJob:
      properties:
        mainJarFileUri:
          type: string
          description: The HCFS URI of the jar file that contains the main class.
        jarFileUris:
          type: array
          description: Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Flink driver and tasks.
          items:
            type: string
        savepointUri:
          type: string
          description: Optional. HCFS URI of the savepoint which contains the last saved progress for this job
        mainClass:
          description: The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris.
          type: string
        args:
          description: 'Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.'
          items:
            type: string
          type: array
        loggingConfig:
          description: Optional. The runtime log config for job execution.
          $ref: '#/components/schemas/LoggingConfig'
        properties:
          type: object
          description: 'Optional. A mapping of property names to values, used to configure Flink. Properties that conflict with values set by the Dataproc API may beoverwritten. Can include properties set in/etc/flink/conf/flink-defaults.conf and classes in user code.'
          additionalProperties:
            type: string
      type: object
      id: FlinkJob
      description: 'A Dataproc job for running Apache Flink (https://flink.apache.org/) applications on YARN.'
    NodePool:
      properties:
        id:
          description: Required. A unique id of the node pool. Primary and Secondary workers can be specified using special reserved ids PRIMARY_WORKER_POOL and SECONDARY_WORKER_POOL respectively. Aux node pools can be referenced using corresponding pool id.
          type: string
        instanceNames:
          type: array
          items:
            type: string
          description: Name of instances to be repaired. These instances must belong to specified node pool.
        repairAction:
          enum:
            - REPAIR_ACTION_UNSPECIFIED
            - DELETE
          type: string
          enumDescriptions:
            - No action will be taken by default.
            - delete the specified list of nodes.
          description: Required. Repair action to take on specified resources of the node pool.
      description: indicating a list of workers of same type
      type: object
      id: NodePool
    GkeNodePoolConfig:
      properties:
        autoscaling:
          $ref: '#/components/schemas/GkeNodePoolAutoscalingConfig'
          description: Optional. The autoscaler configuration for this node pool. The autoscaler is enabled only when a valid configuration is present.
        config:
          description: Optional. The node pool configuration.
          $ref: '#/components/schemas/GkeNodeConfig'
        locations:
          items:
            type: string
          description: 'Optional. The list of Compute Engine zones (https://cloud.google.com/compute/docs/zones#available) where node pool nodes associated with a Dataproc on GKE virtual cluster will be located.Note: All node pools associated with a virtual cluster must be located in the same region as the virtual cluster, and they must be located in the same zone within that region.If a location is not specified during node pool creation, Dataproc on GKE will choose the zone.'
          type: array
      type: object
      id: GkeNodePoolConfig
      description: 'The configuration of a GKE node pool used by a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/concepts/jobs/dataproc-gke#create-a-dataproc-on-gke-cluster).'
    NodeGroupOperationMetadata:
      id: NodeGroupOperationMetadata
      description: Metadata describing the node group operation.
      type: object
      properties:
        clusterUuid:
          readOnly: true
          description: Output only. Cluster UUID associated with the node group operation.
          type: string
        warnings:
          items:
            type: string
          description: Output only. Errors encountered during operation execution.
          type: array
          readOnly: true
        nodeGroupId:
          readOnly: true
          description: Output only. Node group ID for the operation.
          type: string
        operationType:
          description: The operation type.
          enum:
            - NODE_GROUP_OPERATION_TYPE_UNSPECIFIED
            - CREATE
            - UPDATE
            - DELETE
            - RESIZE
          type: string
          enumDescriptions:
            - Node group operation type is unknown.
            - Create node group operation type.
            - Update node group operation type.
            - Delete node group operation type.
            - Resize node group operation type.
        statusHistory:
          description: Output only. The previous operation status.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ClusterOperationStatus'
        status:
          $ref: '#/components/schemas/ClusterOperationStatus'
          readOnly: true
          description: Output only. Current operation status.
        description:
          type: string
          description: Output only. Short description of operation.
          readOnly: true
        labels:
          description: Output only. Labels associated with the operation.
          type: object
          additionalProperties:
            type: string
          readOnly: true
    NodeGroup:
      properties:
        nodeGroupConfig:
          description: Optional. The node group instance group configuration.
          $ref: '#/components/schemas/InstanceGroupConfig'
        roles:
          type: array
          description: Required. Node group roles.
          items:
            enum:
              - ROLE_UNSPECIFIED
              - DRIVER
            type: string
            enumDescriptions:
              - Required unspecified role.
              - Job drivers run on the node pool.
        name:
          description: 'The Node group resource name (https://aip.dev/122).'
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Optional. Node group labels. Label keys must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty. If specified, they must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). The node group must have no more than 32 labelsn.'
          type: object
      description: Dataproc Node Group. The Dataproc NodeGroup resource is not related to the Dataproc NodeGroupAffinity resource.
      id: NodeGroup
      type: object
    GkeNodePoolTarget:
      properties:
        roles:
          type: array
          description: Required. The roles associated with the GKE node pool.
          items:
            enumDescriptions:
              - Role is unspecified.
              - 'At least one node pool must have the DEFAULT role. Work assigned to a role that is not associated with a node pool is assigned to the node pool with the DEFAULT role. For example, work assigned to the CONTROLLER role will be assigned to the node pool with the DEFAULT role if no node pool has the CONTROLLER role.'
              - 'Run work associated with the Dataproc control plane (for example, controllers and webhooks). Very low resource requirements.'
              - Run work associated with a Spark driver of a job.
              - Run work associated with a Spark executor of a job.
            enum:
              - ROLE_UNSPECIFIED
              - DEFAULT
              - CONTROLLER
              - SPARK_DRIVER
              - SPARK_EXECUTOR
            type: string
        nodePoolConfig:
          description: 'Input only. The configuration for the GKE node pool.If specified, Dataproc attempts to create a node pool with the specified shape. If one with the same name already exists, it is verified against all specified fields. If a field differs, the virtual cluster creation will fail.If omitted, any node pool with the specified name is used. If a node pool with the specified name does not exist, Dataproc create a node pool with default values.This is an input only field. It will not be returned by the API.'
          $ref: '#/components/schemas/GkeNodePoolConfig'
        nodePool:
          description: 'Required. The target GKE node pool. Format: ''projects/{project}/locations/{location}/clusters/{cluster}/nodePools/{node_pool}'''
          type: string
      description: GKE node pools that Dataproc workloads run on.
      id: GkeNodePoolTarget
      type: object
    BasicAutoscalingAlgorithm:
      type: object
      description: Basic algorithm for autoscaling.
      properties:
        yarnConfig:
          description: Optional. YARN autoscaling configuration.
          $ref: '#/components/schemas/BasicYarnAutoscalingConfig'
        sparkStandaloneConfig:
          description: Optional. Spark Standalone autoscaling configuration
          $ref: '#/components/schemas/SparkStandaloneAutoscalingConfig'
        cooldownPeriod:
          format: google-duration
          description: 'Optional. Duration between scaling events. A scaling period starts after the update operation from the previous event has completed.Bounds: 2m, 1d. Default: 2m.'
          type: string
      id: BasicAutoscalingAlgorithm
    VirtualClusterConfig:
      properties:
        auxiliaryServicesConfig:
          description: Optional. Configuration of auxiliary services used by this cluster.
          $ref: '#/components/schemas/AuxiliaryServicesConfig'
        kubernetesClusterConfig:
          $ref: '#/components/schemas/KubernetesClusterConfig'
          description: Required. The configuration for running the Dataproc cluster on Kubernetes.
        stagingBucket:
          description: 'Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster''s staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.'
          type: string
      description: 'The Dataproc cluster config for a cluster that does not directly control the underlying compute resources, such as a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/guides/dpgke/dataproc-gke-overview).'
      id: VirtualClusterConfig
      type: object
    Policy:
      properties:
        bindings:
          type: array
          items:
            $ref: '#/components/schemas/Binding'
          description: 'Associates a list of members, or principals, with a role. Optionally, may specify a condition that determines how and when the bindings are applied. Each of the bindings must contain at least one principal.The bindings in a Policy can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the bindings grant 50 different roles to user:alice@example.com, and not to any other principal, then you can add another 1,450 principals to the bindings in the Policy.'
        etag:
          format: byte
          description: 'etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy, and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy.Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.'
          type: string
        version:
          description: 'Specifies the format of the policy.Valid values are 0, 1, and 3. Requests that specify an invalid value are rejected.Any operation that affects conditional role bindings must specify version 3. This requirement applies to the following operations: Getting a policy that includes a conditional role binding Adding a conditional role binding to a policy Changing a conditional role binding in a policy Removing any role binding, with or without a condition, from a policy that includes conditionsImportant: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).'
          type: integer
          format: int32
      id: Policy
      type: object
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).JSON example: { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } YAML example: bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the IAM documentation (https://cloud.google.com/iam/docs/).'
    YarnApplication:
      description: 'A YARN application created by a job. Application information is a subset of org.apache.hadoop.yarn.proto.YarnProtos.ApplicationReportProto.Beta Feature: This report is available for testing purposes only. It may be changed before final release.'
      type: object
      properties:
        name:
          type: string
          description: Required. The application name.
        progress:
          format: float
          type: number
          description: 'Required. The numerical progress of the application, from 1 to 100.'
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - NEW
            - NEW_SAVING
            - SUBMITTED
            - ACCEPTED
            - RUNNING
            - FINISHED
            - FAILED
            - KILLED
          description: Required. The application state.
          enumDescriptions:
            - Status is unspecified.
            - Status is NEW.
            - Status is NEW_SAVING.
            - Status is SUBMITTED.
            - Status is ACCEPTED.
            - Status is RUNNING.
            - Status is FINISHED.
            - Status is FAILED.
            - Status is KILLED.
        trackingUrl:
          type: string
          description: 'Optional. The HTTP URL of the ApplicationMaster, HistoryServer, or TimelineServer that provides application-specific information. The URL uses the internal hostname, and requires a proxy server for resolution and, possibly, access.'
      id: YarnApplication
    Empty:
      id: Empty
      properties: {}
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } '
    Interval:
      properties:
        endTime:
          format: google-datetime
          type: string
          description: 'Optional. Exclusive end of the interval.If specified, a Timestamp matching this interval will have to be before the end.'
        startTime:
          type: string
          description: 'Optional. Inclusive start of the interval.If specified, a Timestamp matching this interval will have to be the same or after the start.'
          format: google-datetime
      id: Interval
      description: 'Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive).The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.'
      type: object
    SessionOperationMetadata:
      id: SessionOperationMetadata
      description: Metadata describing the Session operation.
      type: object
      properties:
        createTime:
          type: string
          format: google-datetime
          description: The time when the operation was created.
        warnings:
          items:
            type: string
          type: array
          description: Warnings encountered during operation execution.
        sessionUuid:
          description: Session UUID for the operation.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels associated with the operation.
          type: object
        description:
          description: Short description of the operation.
          type: string
        session:
          description: Name of the session for the operation.
          type: string
        operationType:
          type: string
          description: The operation type.
          enumDescriptions:
            - Session operation type is unknown.
            - Create Session operation type.
            - Terminate Session operation type.
            - Delete Session operation type.
          enum:
            - SESSION_OPERATION_TYPE_UNSPECIFIED
            - CREATE
            - TERMINATE
            - DELETE
        doneTime:
          description: The time when the operation was finished.
          type: string
          format: google-datetime
    StateHistory:
      properties:
        state:
          enumDescriptions:
            - The batch state is unknown.
            - The batch is created before running.
            - The batch is running.
            - The batch is cancelling.
            - The batch cancellation was successful.
            - The batch completed successfully.
            - The batch is no longer running due to an error.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
            - FAILED
          description: Output only. The state of the batch at this point in history.
          readOnly: true
          type: string
        stateStartTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time when the batch entered the historical state.
        stateMessage:
          description: Output only. Details about the state at this point in history.
          readOnly: true
          type: string
      id: StateHistory
      description: Historical state information.
      type: object
    Expr:
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      type: object
      id: Expr
      properties:
        title:
          type: string
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
        description:
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
          type: string
        location:
          type: string
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
    ListOperationsResponse:
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          type: array
          description: A list of operations that matches the specified filter in the request.
      type: object
      description: The response message for Operations.ListOperations.
      id: ListOperationsResponse
    AutoscalingConfig:
      description: Autoscaling Policy config associated with the cluster.
      properties:
        policyUri:
          description: 'Optional. The autoscaling policy used by the cluster.Only resource names including projectid and location (region) are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id] projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]Note that the policy must be in the same project and Dataproc region.'
          type: string
      type: object
      id: AutoscalingConfig
    ManagedCluster:
      id: ManagedCluster
      type: object
      properties:
        config:
          description: Required. The cluster configuration.
          $ref: '#/components/schemas/ClusterConfig'
        clusterName:
          description: 'Required. The cluster name prefix. A unique cluster name will be formed by appending a random suffix.The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.'
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given cluster.'
      description: Cluster that is managed by the workflow.
    NodeGroupAffinity:
      description: Node Group Affinity for clusters using sole-tenant node groups. The Dataproc NodeGroupAffinity resource is not related to the Dataproc NodeGroup resource.
      id: NodeGroupAffinity
      properties:
        nodeGroupUri:
          description: 'Required. The URI of a sole-tenant node group resource (https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on.A full URL, partial URI, or node group name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/nodeGroups/node-group-1 projects/[project_id]/zones/[zone]/nodeGroups/node-group-1 node-group-1'
          type: string
      type: object
  parameters:
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
  x-stackQL-resources:
    autoscaling_policies_iam_policies:
      id: google.dataproc.autoscaling_policies_iam_policies
      name: autoscaling_policies_iam_policies
      title: Autoscaling Policies Iam Policies
      methods:
        projects_locations_autoscaling_policies_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autoscalingPolicies~1{autoscalingPoliciesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_autoscaling_policies_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autoscalingPolicies~1{autoscalingPoliciesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_autoscaling_policies_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autoscalingPolicies~1{autoscalingPoliciesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_autoscaling_policies_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1autoscalingPolicies~1{autoscalingPoliciesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_autoscaling_policies_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1autoscalingPolicies~1{autoscalingPoliciesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_autoscaling_policies_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1autoscalingPolicies~1{autoscalingPoliciesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    autoscaling_policies:
      id: google.dataproc.autoscaling_policies
      name: autoscaling_policies
      title: Autoscaling Policies
      methods:
        projects_locations_autoscaling_policies_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autoscalingPolicies~1{autoscalingPoliciesId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_autoscaling_policies_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autoscalingPolicies~1{autoscalingPoliciesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_autoscaling_policies_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autoscalingPolicies~1{autoscalingPoliciesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_autoscaling_policies_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autoscalingPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_autoscaling_policies_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autoscalingPolicies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_autoscaling_policies_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1autoscalingPolicies~1{autoscalingPoliciesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_autoscaling_policies_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1autoscalingPolicies~1{autoscalingPoliciesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_autoscaling_policies_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1autoscalingPolicies~1{autoscalingPoliciesId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_autoscaling_policies_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1autoscalingPolicies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_autoscaling_policies_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1autoscalingPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/autoscaling_policies/methods/projects_locations_autoscaling_policies_list'
          - $ref: '#/components/x-stackQL-resources/autoscaling_policies/methods/projects_regions_autoscaling_policies_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/autoscaling_policies/methods/projects_locations_autoscaling_policies_create'
          - $ref: '#/components/x-stackQL-resources/autoscaling_policies/methods/projects_regions_autoscaling_policies_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/autoscaling_policies/methods/projects_locations_autoscaling_policies_delete'
          - $ref: '#/components/x-stackQL-resources/autoscaling_policies/methods/projects_regions_autoscaling_policies_delete'
    workflow_templates:
      id: google.dataproc.workflow_templates
      name: workflow_templates
      title: Workflow Templates
      methods:
        projects_locations_workflow_templates_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workflow_templates_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workflow_templates_instantiate_inline:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates:instantiateInline/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workflow_templates_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates~1{workflowTemplatesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workflow_templates_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates~1{workflowTemplatesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workflow_templates_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates~1{workflowTemplatesId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workflow_templates_instantiate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates~1{workflowTemplatesId}:instantiate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates~1{workflowTemplatesId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates~1{workflowTemplatesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates~1{workflowTemplatesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_instantiate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates~1{workflowTemplatesId}:instantiate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_instantiate_inline:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates:instantiateInline/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_templates/methods/projects_locations_workflow_templates_list'
          - $ref: '#/components/x-stackQL-resources/workflow_templates/methods/projects_regions_workflow_templates_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/workflow_templates/methods/projects_locations_workflow_templates_create'
          - $ref: '#/components/x-stackQL-resources/workflow_templates/methods/projects_regions_workflow_templates_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workflow_templates/methods/projects_locations_workflow_templates_delete'
          - $ref: '#/components/x-stackQL-resources/workflow_templates/methods/projects_regions_workflow_templates_delete'
    workflow_templates_iam_policies:
      id: google.dataproc.workflow_templates_iam_policies
      name: workflow_templates_iam_policies
      title: Workflow Templates Iam Policies
      methods:
        projects_locations_workflow_templates_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates~1{workflowTemplatesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workflow_templates_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates~1{workflowTemplatesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workflow_templates_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates~1{workflowTemplatesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates~1{workflowTemplatesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates~1{workflowTemplatesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates~1{workflowTemplatesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    batches:
      id: google.dataproc.batches
      name: batches
      title: Batches
      methods:
        projects_locations_batches_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batches~1{batchesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_batches_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batches~1{batchesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_batches_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batches/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_batches_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batches/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/batches/methods/projects_locations_batches_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/batches/methods/projects_locations_batches_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/batches/methods/projects_locations_batches_delete'
    operations:
      id: google.dataproc.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_regions_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_regions_operations_delete'
    clusters:
      id: google.dataproc.clusters
      name: clusters
      title: Clusters
      methods:
        projects_regions_clusters_repair:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1clusters~1{clusterName}:repair/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1clusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1clusters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_stop:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1clusters~1{clusterName}:stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1clusters~1{clusterName}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1clusters~1{clusterName}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1clusters~1{clusterName}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_start:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1clusters~1{clusterName}:start/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_inject_credentials:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1clusters~1{clustersId}:injectCredentials/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_diagnose:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1clusters~1{clusterName}:diagnose/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/projects_regions_clusters_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/projects_regions_clusters_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/projects_regions_clusters_delete'
    clusters_iam_policies:
      id: google.dataproc.clusters_iam_policies
      name: clusters_iam_policies
      title: Clusters Iam Policies
      methods:
        projects_regions_clusters_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1clusters~1{clustersId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1clusters~1{clustersId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1clusters~1{clustersId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    node_groups:
      id: google.dataproc.node_groups
      name: node_groups
      title: Node Groups
      methods:
        projects_regions_clusters_node_groups_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1clusters~1{clustersId}~1nodeGroups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_node_groups_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1clusters~1{clustersId}~1nodeGroups~1{nodeGroupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_node_groups_resize:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1clusters~1{clustersId}~1nodeGroups~1{nodeGroupsId}:resize/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/node_groups/methods/projects_regions_clusters_node_groups_create'
        update: []
        delete: []
    jobs:
      id: google.dataproc.jobs
      name: jobs
      title: Jobs
      methods:
        projects_regions_jobs_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1jobs~1{jobId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_jobs_submit:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1jobs:submit/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_jobs_submit_as_operation:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1jobs:submitAsOperation/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_jobs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_jobs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1jobs~1{jobId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_jobs_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1jobs~1{jobId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_jobs_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1jobs~1{jobId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_regions_jobs_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_regions_jobs_delete'
    jobs_iam_policies:
      id: google.dataproc.jobs_iam_policies
      name: jobs_iam_policies
      title: Jobs Iam Policies
      methods:
        projects_regions_jobs_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1jobs~1{jobsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_jobs_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1jobs~1{jobsId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_jobs_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1jobs~1{jobsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    operations_iam_policies:
      id: google.dataproc.operations_iam_policies
      name: operations_iam_policies
      title: Operations Iam Policies
      methods:
        projects_regions_operations_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1operations~1{operationsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_operations_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1operations~1{operationsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_operations_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1operations~1{operationsId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies/{autoscalingPoliciesId}:setIamPolicy':
    parameters: &ref_1
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/callback'
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataproc.projects.locations.autoscalingPolicies.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies_iam_policies
      x-stackQL-method: projects_locations_autoscaling_policies_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies/{autoscalingPoliciesId}':
    parameters: *ref_1
    put:
      description: 'Updates (replaces) autoscaling policy.Disabled check for update_mask, because all updates will be full replacements.'
      operationId: dataproc.projects.locations.autoscalingPolicies.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoscalingPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscalingPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_locations_autoscaling_policies_update
      x-stackQL-verb: exec
    delete:
      description: Deletes an autoscaling policy. It is an error to delete an autoscaling policy that is in use by one or more clusters.
      operationId: dataproc.projects.locations.autoscalingPolicies.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_locations_autoscaling_policies_delete
      x-stackQL-verb: delete
    get:
      description: Retrieves autoscaling policy.
      operationId: dataproc.projects.locations.autoscalingPolicies.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscalingPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_locations_autoscaling_policies_get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies/{autoscalingPoliciesId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataproc.projects.locations.autoscalingPolicies.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies_iam_policies
      x-stackQL-method: projects_locations_autoscaling_policies_get_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies/{autoscalingPoliciesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataproc.projects.locations.autoscalingPolicies.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies_iam_policies
      x-stackQL-method: projects_locations_autoscaling_policies_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies':
    parameters: *ref_1
    get:
      description: Lists autoscaling policies in the project.
      operationId: dataproc.projects.locations.autoscalingPolicies.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAutoscalingPoliciesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_locations_autoscaling_policies_list
      x-stackQL-verb: select
    post:
      description: Creates new autoscaling policy.
      operationId: dataproc.projects.locations.autoscalingPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoscalingPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscalingPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_locations_autoscaling_policies_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates':
    parameters: *ref_1
    post:
      description: Creates new workflow template.
      operationId: dataproc.projects.locations.workflowTemplates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTemplate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_locations_workflow_templates_create
      x-stackQL-verb: insert
    get:
      description: Lists workflows that match the specified filter in the request.
      operationId: dataproc.projects.locations.workflowTemplates.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkflowTemplatesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_locations_workflow_templates_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataproc.projects.locations.workflowTemplates.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates_iam_policies
      x-stackQL-method: projects_locations_workflow_templates_get_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates:instantiateInline':
    parameters: *ref_1
    post:
      description: 'Instantiates a template and begins execution.This method is equivalent to executing the sequence CreateWorkflowTemplate, InstantiateWorkflowTemplate, DeleteWorkflowTemplate.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On successful completion, Operation.response will be Empty.'
      operationId: dataproc.projects.locations.workflowTemplates.instantiateInline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTemplate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_locations_workflow_templates_instantiate_inline
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataproc.projects.locations.workflowTemplates.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates_iam_policies
      x-stackQL-method: projects_locations_workflow_templates_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataproc.projects.locations.workflowTemplates.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates_iam_policies
      x-stackQL-method: projects_locations_workflow_templates_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}':
    parameters: *ref_1
    get:
      description: Retrieves the latest workflow template.Can retrieve previously instantiated template by specifying optional version parameter.
      operationId: dataproc.projects.locations.workflowTemplates.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: version
          schema:
            type: integer
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_locations_workflow_templates_get
      x-stackQL-verb: exec
    delete:
      description: Deletes a workflow template. It does not cancel in-progress workflows.
      operationId: dataproc.projects.locations.workflowTemplates.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: version
          schema:
            type: integer
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_locations_workflow_templates_delete
      x-stackQL-verb: delete
    put:
      description: Updates (replaces) workflow template. The updated template must contain version that matches the current server version.
      operationId: dataproc.projects.locations.workflowTemplates.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTemplate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_locations_workflow_templates_update
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}:instantiate':
    parameters: *ref_1
    post:
      description: 'Instantiates a template and begins execution.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On successful completion, Operation.response will be Empty.'
      operationId: dataproc.projects.locations.workflowTemplates.instantiate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstantiateWorkflowTemplateRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_locations_workflow_templates_instantiate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/batches/{batchesId}':
    parameters: *ref_1
    get:
      description: Gets the batch workload resource representation.
      operationId: dataproc.projects.locations.batches.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: batchesId
          required: true
          schema:
            type: string
      x-stackQL-resource: batches
      x-stackQL-method: projects_locations_batches_get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes the batch workload resource. If the batch is not in a CANCELLED, SUCCEEDED or FAILED State, the delete operation fails and the response returns FAILED_PRECONDITION.'
      operationId: dataproc.projects.locations.batches.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: batchesId
          required: true
          schema:
            type: string
      x-stackQL-resource: batches
      x-stackQL-method: projects_locations_batches_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/batches':
    parameters: *ref_1
    get:
      description: Lists batch workloads.
      operationId: dataproc.projects.locations.batches.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: batches
      x-stackQL-method: projects_locations_batches_list
      x-stackQL-verb: select
    post:
      description: Creates a batch workload that executes asynchronously.
      operationId: dataproc.projects.locations.batches.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Batch'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: batchId
          schema:
            type: string
      x-stackQL-resource: batches
      x-stackQL-method: projects_locations_batches_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns google.rpc.Code.UNIMPLEMENTED.'
      operationId: dataproc.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: dataproc.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns UNIMPLEMENTED.'
      operationId: dataproc.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.'
      operationId: dataproc.projects.locations.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}':
    parameters: *ref_1
    put:
      description: Updates (replaces) workflow template. The updated template must contain version that matches the current server version.
      operationId: dataproc.projects.regions.workflowTemplates.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTemplate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_regions_workflow_templates_update
      x-stackQL-verb: exec
    get:
      description: Retrieves the latest workflow template.Can retrieve previously instantiated template by specifying optional version parameter.
      operationId: dataproc.projects.regions.workflowTemplates.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: version
          schema:
            type: integer
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_regions_workflow_templates_get
      x-stackQL-verb: exec
    delete:
      description: Deletes a workflow template. It does not cancel in-progress workflows.
      operationId: dataproc.projects.regions.workflowTemplates.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: version
          schema:
            type: integer
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_regions_workflow_templates_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}:instantiate':
    parameters: *ref_1
    post:
      description: 'Instantiates a template and begins execution.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On successful completion, Operation.response will be Empty.'
      operationId: dataproc.projects.regions.workflowTemplates.instantiate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstantiateWorkflowTemplateRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_regions_workflow_templates_instantiate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataproc.projects.regions.workflowTemplates.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates_iam_policies
      x-stackQL-method: projects_regions_workflow_templates_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates':
    parameters: *ref_1
    get:
      description: Lists workflows that match the specified filter in the request.
      operationId: dataproc.projects.regions.workflowTemplates.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkflowTemplatesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_regions_workflow_templates_list
      x-stackQL-verb: select
    post:
      description: Creates new workflow template.
      operationId: dataproc.projects.regions.workflowTemplates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTemplate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_regions_workflow_templates_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataproc.projects.regions.workflowTemplates.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates_iam_policies
      x-stackQL-method: projects_regions_workflow_templates_get_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates:instantiateInline':
    parameters: *ref_1
    post:
      description: 'Instantiates a template and begins execution.This method is equivalent to executing the sequence CreateWorkflowTemplate, InstantiateWorkflowTemplate, DeleteWorkflowTemplate.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On successful completion, Operation.response will be Empty.'
      operationId: dataproc.projects.regions.workflowTemplates.instantiateInline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTemplate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_regions_workflow_templates_instantiate_inline
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataproc.projects.regions.workflowTemplates.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates_iam_policies
      x-stackQL-method: projects_regions_workflow_templates_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies/{autoscalingPoliciesId}':
    parameters: *ref_1
    get:
      description: Retrieves autoscaling policy.
      operationId: dataproc.projects.regions.autoscalingPolicies.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscalingPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_regions_autoscaling_policies_get
      x-stackQL-verb: exec
    delete:
      description: Deletes an autoscaling policy. It is an error to delete an autoscaling policy that is in use by one or more clusters.
      operationId: dataproc.projects.regions.autoscalingPolicies.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_regions_autoscaling_policies_delete
      x-stackQL-verb: delete
    put:
      description: 'Updates (replaces) autoscaling policy.Disabled check for update_mask, because all updates will be full replacements.'
      operationId: dataproc.projects.regions.autoscalingPolicies.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoscalingPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscalingPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_regions_autoscaling_policies_update
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies/{autoscalingPoliciesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataproc.projects.regions.autoscalingPolicies.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies_iam_policies
      x-stackQL-method: projects_regions_autoscaling_policies_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies/{autoscalingPoliciesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataproc.projects.regions.autoscalingPolicies.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies_iam_policies
      x-stackQL-method: projects_regions_autoscaling_policies_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies/{autoscalingPoliciesId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataproc.projects.regions.autoscalingPolicies.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies_iam_policies
      x-stackQL-method: projects_regions_autoscaling_policies_get_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies':
    parameters: *ref_1
    post:
      description: Creates new autoscaling policy.
      operationId: dataproc.projects.regions.autoscalingPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoscalingPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscalingPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_regions_autoscaling_policies_create
      x-stackQL-verb: insert
    get:
      description: Lists autoscaling policies in the project.
      operationId: dataproc.projects.regions.autoscalingPolicies.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAutoscalingPoliciesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_regions_autoscaling_policies_list
      x-stackQL-verb: select
  '/v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:repair':
    parameters: *ref_1
    post:
      description: Repairs a cluster.
      operationId: dataproc.projects.regions.clusters.repair
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepairClusterRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_repair
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataproc.projects.regions.clusters.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters_iam_policies
      x-stackQL-method: projects_regions_clusters_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/regions/{region}/clusters':
    parameters: *ref_1
    get:
      description: 'Lists all regions/{region}/clusters in a project alphabetically.'
      operationId: dataproc.projects.regions.clusters.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_list
      x-stackQL-verb: select
    post:
      description: 'Creates a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata).'
      operationId: dataproc.projects.regions.clusters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: actionOnFailedPrimaryWorkers
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_create
      x-stackQL-verb: insert
  '/v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:stop':
    parameters: *ref_1
    post:
      description: Stops a cluster in a project.
      operationId: dataproc.projects.regions.clusters.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopClusterRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_stop
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/regions/{region}/clusters/{clusterName}':
    parameters: *ref_1
    patch:
      description: 'Updates a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata). The cluster must be in a RUNNING state or an error is returned.'
      operationId: dataproc.projects.regions.clusters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: gracefulDecommissionTimeout
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_patch
      x-stackQL-verb: exec
    get:
      description: Gets the resource representation for a cluster in a project.
      operationId: dataproc.projects.regions.clusters.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata).'
      operationId: dataproc.projects.regions.clusters.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
        - in: query
          name: clusterUuid
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:start':
    parameters: *ref_1
    post:
      description: Starts a cluster in a project.
      operationId: dataproc.projects.regions.clusters.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartClusterRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_start
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataproc.projects.regions.clusters.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters_iam_policies
      x-stackQL-method: projects_regions_clusters_get_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataproc.projects.regions.clusters.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters_iam_policies
      x-stackQL-method: projects_regions_clusters_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}:injectCredentials':
    parameters: *ref_1
    post:
      description: Inject encrypted credentials into all of the VMs in a cluster.The target cluster must be a personal auth cluster assigned to the user who is issuing the RPC.
      operationId: dataproc.projects.regions.clusters.injectCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InjectCredentialsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_inject_credentials
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:diagnose':
    parameters: *ref_1
    post:
      description: 'Gets cluster diagnostic information. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata). After the operation completes, Operation.response contains DiagnoseClusterResults (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#diagnoseclusterresults).'
      operationId: dataproc.projects.regions.clusters.diagnose
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnoseClusterRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_diagnose
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}/nodeGroups':
    parameters: *ref_1
    post:
      description: 'Creates a node group in a cluster. The returned Operation.metadata is NodeGroupOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#nodegroupoperationmetadata).'
      operationId: dataproc.projects.regions.clusters.nodeGroups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeGroup'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: nodeGroupId
          schema:
            type: string
      x-stackQL-resource: node_groups
      x-stackQL-method: projects_regions_clusters_node_groups_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}/nodeGroups/{nodeGroupsId}':
    parameters: *ref_1
    get:
      description: Gets the resource representation for a node group in a cluster.
      operationId: dataproc.projects.regions.clusters.nodeGroups.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeGroup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: nodeGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: node_groups
      x-stackQL-method: projects_regions_clusters_node_groups_get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}/nodeGroups/{nodeGroupsId}:resize':
    parameters: *ref_1
    post:
      description: 'Resizes a node group in a cluster. The returned Operation.metadata is NodeGroupOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#nodegroupoperationmetadata).'
      operationId: dataproc.projects.regions.clusters.nodeGroups.resize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResizeNodeGroupRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: nodeGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: node_groups
      x-stackQL-method: projects_regions_clusters_node_groups_resize
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/regions/{region}/jobs/{jobId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts a job cancellation request. To access the job resource after cancellation, call regions/{region}/jobs.list (https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs/list) or regions/{region}/jobs.get (https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs/get).'
      operationId: dataproc.projects.regions.jobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_regions_jobs_cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/regions/{region}/jobs:submit':
    parameters: *ref_1
    post:
      description: Submits a job to a cluster.
      operationId: dataproc.projects.regions.jobs.submit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_regions_jobs_submit
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/regions/{region}/jobs:submitAsOperation':
    parameters: *ref_1
    post:
      description: Submits job to a cluster.
      operationId: dataproc.projects.regions.jobs.submitAsOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_regions_jobs_submit_as_operation
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/regions/{region}/jobs':
    parameters: *ref_1
    get:
      description: 'Lists regions/{region}/jobs in a project.'
      operationId: dataproc.projects.regions.jobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: query
          name: jobStateMatcher
          schema:
            type: string
        - in: query
          name: clusterName
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_regions_jobs_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/regions/{regionsId}/jobs/{jobsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataproc.projects.regions.jobs.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs_iam_policies
      x-stackQL-method: projects_regions_jobs_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/regions/{region}/jobs/{jobId}':
    parameters: *ref_1
    get:
      description: Gets the resource representation for a job in a project.
      operationId: dataproc.projects.regions.jobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_regions_jobs_get
      x-stackQL-verb: exec
    patch:
      description: Updates a job in a project.
      operationId: dataproc.projects.regions.jobs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_regions_jobs_patch
      x-stackQL-verb: exec
    delete:
      description: 'Deletes the job from the project. If the job is active, the delete fails, and the response returns FAILED_PRECONDITION.'
      operationId: dataproc.projects.regions.jobs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_regions_jobs_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/regions/{regionsId}/jobs/{jobsId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataproc.projects.regions.jobs.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs_iam_policies
      x-stackQL-method: projects_regions_jobs_get_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/jobs/{jobsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataproc.projects.regions.jobs.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs_iam_policies
      x-stackQL-method: projects_regions_jobs_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataproc.projects.regions.operations.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations_iam_policies
      x-stackQL-method: projects_regions_operations_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataproc.projects.regions.operations.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations_iam_policies
      x-stackQL-method: projects_regions_operations_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: dataproc.projects.regions.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_regions_operations_get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns google.rpc.Code.UNIMPLEMENTED.'
      operationId: dataproc.projects.regions.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_regions_operations_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.'
      operationId: dataproc.projects.regions.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_regions_operations_cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns UNIMPLEMENTED.'
      operationId: dataproc.projects.regions.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_regions_operations_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataproc.projects.regions.operations.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations_iam_policies
      x-stackQL-method: projects_regions_operations_get_iam_policy
      x-stackQL-verb: exec
