openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Dataproc API
  description: Manages Hadoop-based clusters and jobs on Google Cloud Platform.
  version: v1
  x-discovery-doc-revision: '20230814'
  x-generated-date: '2023-08-28'
externalDocs:
  url: 'https://cloud.google.com/dataproc/'
servers:
  - url: 'https://dataproc.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    ConfidentialInstanceConfig:
      id: ConfidentialInstanceConfig
      type: object
      description: 'Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs)'
      properties:
        enableConfidentialCompute:
          description: Optional. Defines whether the instance should have confidential compute enabled.
          type: boolean
    NodeInitializationAction:
      description: Specifies an executable to run on a fully configured node and a timeout period for executable completion.
      type: object
      properties:
        executableFile:
          type: string
          description: Required. Cloud Storage URI of executable file.
        executionTimeout:
          format: google-duration
          type: string
          description: 'Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.'
      id: NodeInitializationAction
    OrderedJob:
      type: object
      id: OrderedJob
      properties:
        hadoopJob:
          $ref: '#/components/schemas/HadoopJob'
          description: Optional. Job is a Hadoop job.
        sparkSqlJob:
          description: Optional. Job is a SparkSql job.
          $ref: '#/components/schemas/SparkSqlJob'
        pysparkJob:
          description: Optional. Job is a PySpark job.
          $ref: '#/components/schemas/PySparkJob'
        labels:
          type: object
          description: 'Optional. The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given job.'
          additionalProperties:
            type: string
        prerequisiteStepIds:
          items:
            type: string
          type: array
          description: 'Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.'
        stepId:
          description: 'Required. The step id. The id must be unique among all jobs within the template.The step id is used as prefix for job id, as job goog-dataproc-workflow-step-id label, and in prerequisiteStepIds field from other steps.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.'
          type: string
        trinoJob:
          $ref: '#/components/schemas/TrinoJob'
          description: Optional. Job is a Trino job.
        scheduling:
          description: Optional. Job scheduling configuration.
          $ref: '#/components/schemas/JobScheduling'
        pigJob:
          $ref: '#/components/schemas/PigJob'
          description: Optional. Job is a Pig job.
        sparkJob:
          $ref: '#/components/schemas/SparkJob'
          description: Optional. Job is a Spark job.
        sparkRJob:
          description: Optional. Job is a SparkR job.
          $ref: '#/components/schemas/SparkRJob'
        prestoJob:
          description: Optional. Job is a Presto job.
          $ref: '#/components/schemas/PrestoJob'
        hiveJob:
          description: Optional. Job is a Hive job.
          $ref: '#/components/schemas/HiveJob'
      description: A job executed by the workflow.
    SparkSqlBatch:
      type: object
      description: 'A configuration for running Apache Spark SQL (https://spark.apache.org/sql/) queries as a batch workload.'
      properties:
        queryFileUri:
          type: string
          description: Required. The HCFS URI of the script that contains Spark SQL queries to execute.
        queryVariables:
          type: object
          description: 'Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).'
          additionalProperties:
            type: string
        jarFileUris:
          items:
            type: string
          description: Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
          type: array
      id: SparkSqlBatch
    NodeGroup:
      description: Dataproc Node Group. The Dataproc NodeGroup resource is not related to the Dataproc NodeGroupAffinity resource.
      id: NodeGroup
      properties:
        nodeGroupConfig:
          description: Optional. The node group instance group configuration.
          $ref: '#/components/schemas/InstanceGroupConfig'
        name:
          type: string
          description: 'The Node group resource name (https://aip.dev/122).'
        roles:
          type: array
          description: Required. Node group roles.
          items:
            type: string
            enumDescriptions:
              - Required unspecified role.
              - Job drivers run on the node pool.
            enum:
              - ROLE_UNSPECIFIED
              - DRIVER
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Optional. Node group labels. Label keys must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty. If specified, they must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). The node group must have no more than 32 labelsn.'
      type: object
    SparkHistoryServerConfig:
      id: SparkHistoryServerConfig
      properties:
        dataprocCluster:
          description: 'Optional. Resource name of an existing Dataproc Cluster to act as a Spark History Server for the workload.Example: projects/[project_id]/regions/[region]/clusters/[cluster_name]'
          type: string
      type: object
      description: Spark History Server configuration for the workload.
    NamespacedGkeDeploymentTarget:
      id: NamespacedGkeDeploymentTarget
      deprecated: true
      properties:
        targetGkeCluster:
          type: string
          description: 'Optional. The target GKE cluster to deploy to. Format: ''projects/{project}/locations/{location}/clusters/{cluster_id}'''
        clusterNamespace:
          type: string
          description: Optional. A namespace within the GKE cluster to deploy into.
      description: 'Deprecated. Used only for the deprecated beta. A full, namespace-isolated deployment target for an existing GKE cluster.'
      type: object
    GetIamPolicyRequest:
      type: object
      description: Request message for GetIamPolicy method.
      id: GetIamPolicyRequest
      properties:
        options:
          description: 'OPTIONAL: A GetPolicyOptions object for specifying options to GetIamPolicy.'
          $ref: '#/components/schemas/GetPolicyOptions'
    BasicAutoscalingAlgorithm:
      type: object
      properties:
        yarnConfig:
          $ref: '#/components/schemas/BasicYarnAutoscalingConfig'
          description: Optional. YARN autoscaling configuration.
        cooldownPeriod:
          type: string
          description: 'Optional. Duration between scaling events. A scaling period starts after the update operation from the previous event has completed.Bounds: 2m, 1d. Default: 2m.'
          format: google-duration
        sparkStandaloneConfig:
          description: Optional. Spark Standalone autoscaling configuration
          $ref: '#/components/schemas/SparkStandaloneAutoscalingConfig'
      description: Basic algorithm for autoscaling.
      id: BasicAutoscalingAlgorithm
    KubernetesSoftwareConfig:
      type: object
      properties:
        properties:
          type: object
          description: 'The properties to set on daemon config files.Property keys are specified in prefix:property format, for example spark:spark.kubernetes.container.image. The following are supported prefixes and their mappings: spark: spark-defaults.confFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).'
          additionalProperties:
            type: string
        componentVersion:
          description: The components that should be installed in this Dataproc cluster. The key must be a string from the KubernetesComponent enumeration. The value is the version of the software to be installed. At least one entry must be specified.
          additionalProperties:
            type: string
          type: object
      id: KubernetesSoftwareConfig
      description: The software configuration for this Dataproc cluster running on Kubernetes.
    ResizeNodeGroupRequest:
      properties:
        requestId:
          description: 'Optional. A unique ID used to identify the request. If the server receives two ResizeNodeGroupRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.ResizeNodeGroupRequests) with the same ID, the second request is ignored and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
          type: string
        size:
          format: int32
          description: Required. The number of running instances for the node group to maintain. The group adds or removes instances to maintain the number of instances specified by this parameter.
          type: integer
        gracefulDecommissionTimeout:
          format: google-duration
          description: 'Optional. Timeout for graceful YARN decommissioning. Graceful decommissioning (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/scaling-clusters#graceful_decommissioning) allows the removal of nodes from the Compute Engine node group without interrupting jobs in progress. This timeout specifies how long to wait for jobs in progress to finish before forcefully removing nodes (and potentially interrupting jobs). Default timeout is 0 (for forceful decommission), and the maximum allowed timeout is 1 day. (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Only supported on Dataproc image versions 1.2 and higher.'
          type: string
      type: object
      id: ResizeNodeGroupRequest
      description: A request to resize a node group.
    ClusterMetrics:
      id: ClusterMetrics
      properties:
        yarnMetrics:
          additionalProperties:
            type: string
            format: int64
          type: object
          description: YARN metrics.
        hdfsMetrics:
          type: object
          description: The HDFS metrics.
          additionalProperties:
            format: int64
            type: string
      description: 'Contains cluster daemon metrics, such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.'
      type: object
    JobStatus:
      properties:
        stateStartTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time when this state was entered.
        state:
          type: string
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - SETUP_DONE
            - RUNNING
            - CANCEL_PENDING
            - CANCEL_STARTED
            - CANCELLED
            - DONE
            - ERROR
            - ATTEMPT_FAILURE
          description: Output only. A state message specifying the overall job state.
          enumDescriptions:
            - The job state is unknown.
            - 'The job is pending; it has been submitted, but is not yet running.'
            - Job has been received by the service and completed initial setup; it will soon be submitted to the cluster.
            - The job is running on the cluster.
            - 'A CancelJob request has been received, but is pending.'
            - 'Transient in-flight resources have been canceled, and the request to cancel the running job has been issued to the cluster.'
            - The job cancellation was successful.
            - The job has completed successfully.
            - 'The job has completed, but encountered an error.'
            - Job attempt has failed. The detail field contains failure details for this attempt.Applies to restartable jobs only.
        details:
          description: 'Optional. Output only. Job state details, such as an error description if the state is ERROR.'
          type: string
          readOnly: true
        substate:
          readOnly: true
          description: 'Output only. Additional state information, which includes status reported by the agent.'
          enum:
            - UNSPECIFIED
            - SUBMITTED
            - QUEUED
            - STALE_STATUS
          type: string
          enumDescriptions:
            - The job substate is unknown.
            - The Job is submitted to the agent.Applies to RUNNING state.
            - The Job has been received and is awaiting execution (it may be waiting for a condition to be met). See the "details" field for the reason for the delay.Applies to RUNNING state.
            - 'The agent-reported status is out of date, which may be caused by a loss of communication between the agent and Dataproc. If the agent does not send a timely update, the job will fail.Applies to RUNNING state.'
      type: object
      description: Dataproc job status.
      id: JobStatus
    Cluster:
      properties:
        metrics:
          readOnly: true
          description: 'Output only. Contains cluster daemon metrics such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.'
          $ref: '#/components/schemas/ClusterMetrics'
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.'
        clusterName:
          type: string
          description: 'Required. The cluster name, which must be unique within a project. The name must start with a lowercase letter, and can contain up to 51 lowercase letters, numbers, and hyphens. It cannot end with a hyphen. The name of a deleted cluster can be reused.'
        config:
          $ref: '#/components/schemas/ClusterConfig'
          description: 'Optional. The cluster config for a cluster of Compute Engine Instances. Note that Dataproc may set default values, and values may change when clusters are updated.Exactly one of ClusterConfig or VirtualClusterConfig must be specified.'
        clusterUuid:
          readOnly: true
          description: Output only. A cluster UUID (Unique Universal Identifier). Dataproc generates this value when it creates the cluster.
          type: string
        projectId:
          description: Required. The Google Cloud Platform project ID that the cluster belongs to.
          type: string
        statusHistory:
          items:
            $ref: '#/components/schemas/ClusterStatus'
          readOnly: true
          type: array
          description: Output only. The previous cluster status.
        status:
          readOnly: true
          $ref: '#/components/schemas/ClusterStatus'
          description: Output only. Cluster status.
        virtualClusterConfig:
          $ref: '#/components/schemas/VirtualClusterConfig'
          description: 'Optional. The virtual cluster config is used when creating a Dataproc cluster that does not directly control the underlying compute resources, for example, when creating a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/guides/dpgke/dataproc-gke-overview). Dataproc may set default values, and values may change when clusters are updated. Exactly one of config or virtual_cluster_config must be specified.'
      id: Cluster
      description: 'Describes the identifying information, config, and status of a Dataproc cluster'
      type: object
    DiagnoseClusterResults:
      id: DiagnoseClusterResults
      description: The location of diagnostic output.
      type: object
      properties:
        outputUri:
          type: string
          description: Output only. The Cloud Storage URI of the diagnostic output. The output report is a plain text file with a summary of collected diagnostics.
          readOnly: true
    FlinkJob:
      properties:
        mainClass:
          description: The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris.
          type: string
        args:
          type: array
          description: 'Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.'
          items:
            type: string
        mainJarFileUri:
          description: The HCFS URI of the jar file that contains the main class.
          type: string
        properties:
          additionalProperties:
            type: string
          type: object
          description: 'Optional. A mapping of property names to values, used to configure Flink. Properties that conflict with values set by the Dataproc API may beoverwritten. Can include properties set in/etc/flink/conf/flink-defaults.conf and classes in user code.'
        savepointUri:
          type: string
          description: Optional. HCFS URI of the savepoint which contains the last saved progress for this job
        jarFileUris:
          type: array
          description: Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Flink driver and tasks.
          items:
            type: string
        loggingConfig:
          description: Optional. The runtime log config for job execution.
          $ref: '#/components/schemas/LoggingConfig'
      description: 'A Dataproc job for running Apache Flink (https://flink.apache.org/) applications on YARN.'
      id: FlinkJob
      type: object
    ManagedCluster:
      description: Cluster that is managed by the workflow.
      id: ManagedCluster
      properties:
        labels:
          description: 'Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given cluster.'
          type: object
          additionalProperties:
            type: string
        clusterName:
          type: string
          description: 'Required. The cluster name prefix. A unique cluster name will be formed by appending a random suffix.The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.'
        config:
          description: Required. The cluster configuration.
          $ref: '#/components/schemas/ClusterConfig'
      type: object
    SoftwareConfig:
      description: Specifies the selection and config of software inside the cluster.
      properties:
        optionalComponents:
          items:
            type: string
            enum:
              - COMPONENT_UNSPECIFIED
              - ANACONDA
              - DOCKER
              - DRUID
              - FLINK
              - HBASE
              - HIVE_WEBHCAT
              - HUDI
              - JUPYTER
              - PRESTO
              - TRINO
              - RANGER
              - SOLR
              - ZEPPELIN
              - ZOOKEEPER
            enumDescriptions:
              - Unspecified component. Specifying this will cause Cluster creation to fail.
              - The Anaconda python distribution. The Anaconda component is not supported in the Dataproc 2.0 image. The 2.0 image is pre-installed with Miniconda.
              - Docker
              - The Druid query engine. (alpha)
              - Flink
              - HBase. (beta)
              - The Hive Web HCatalog (the REST service for accessing HCatalog).
              - Hudi.
              - The Jupyter Notebook.
              - The Presto query engine.
              - The Trino query engine.
              - The Ranger service.
              - The Solr service.
              - The Zeppelin notebook.
              - The Zookeeper service.
          description: Optional. The set of components to activate on the cluster.
          type: array
        properties:
          additionalProperties:
            type: string
          type: object
          description: 'Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).'
        imageVersion:
          description: 'Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.'
          type: string
      type: object
      id: SoftwareConfig
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } '
      properties: {}
      type: object
      id: Empty
    Interval:
      properties:
        endTime:
          type: string
          format: google-datetime
          description: 'Optional. Exclusive end of the interval.If specified, a Timestamp matching this interval will have to be before the end.'
        startTime:
          format: google-datetime
          description: 'Optional. Inclusive start of the interval.If specified, a Timestamp matching this interval will have to be the same or after the start.'
          type: string
      description: 'Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive).The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.'
      id: Interval
      type: object
    EnvironmentConfig:
      properties:
        peripheralsConfig:
          description: Optional. Peripherals configuration that workload has access to.
          $ref: '#/components/schemas/PeripheralsConfig'
        executionConfig:
          $ref: '#/components/schemas/ExecutionConfig'
          description: Optional. Execution configuration for a workload.
      description: Environment configuration for a workload.
      id: EnvironmentConfig
      type: object
    IdentityConfig:
      description: 'Identity related configuration, including service account based secure multi-tenancy user mappings.'
      properties:
        userServiceAccountMapping:
          type: object
          description: Required. Map of user to service account.
          additionalProperties:
            type: string
      type: object
      id: IdentityConfig
    NodeGroupOperationMetadata:
      properties:
        labels:
          readOnly: true
          description: Output only. Labels associated with the operation.
          type: object
          additionalProperties:
            type: string
        operationType:
          description: The operation type.
          type: string
          enum:
            - NODE_GROUP_OPERATION_TYPE_UNSPECIFIED
            - CREATE
            - UPDATE
            - DELETE
            - RESIZE
          enumDescriptions:
            - Node group operation type is unknown.
            - Create node group operation type.
            - Update node group operation type.
            - Delete node group operation type.
            - Resize node group operation type.
        status:
          $ref: '#/components/schemas/ClusterOperationStatus'
          readOnly: true
          description: Output only. Current operation status.
        nodeGroupId:
          type: string
          readOnly: true
          description: Output only. Node group ID for the operation.
        clusterUuid:
          description: Output only. Cluster UUID associated with the node group operation.
          type: string
          readOnly: true
        warnings:
          description: Output only. Errors encountered during operation execution.
          type: array
          readOnly: true
          items:
            type: string
        description:
          description: Output only. Short description of operation.
          readOnly: true
          type: string
        statusHistory:
          type: array
          description: Output only. The previous operation status.
          readOnly: true
          items:
            $ref: '#/components/schemas/ClusterOperationStatus'
      description: Metadata describing the node group operation.
      id: NodeGroupOperationMetadata
      type: object
    MetastoreConfig:
      type: object
      properties:
        dataprocMetastoreService:
          type: string
          description: 'Required. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[dataproc_region]/services/[service-name]'
      description: Specifies a Metastore configuration.
      id: MetastoreConfig
    SessionStateHistory:
      id: SessionStateHistory
      type: object
      properties:
        state:
          description: Output only. The state of the session at this point in history.
          enumDescriptions:
            - The session state is unknown.
            - The session is created before running.
            - The session is running.
            - The session is terminating.
            - The session is terminated successfully.
            - The session is no longer running due to an error.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - TERMINATING
            - TERMINATED
            - FAILED
          type: string
          readOnly: true
        stateMessage:
          description: Output only. Details about the state at this point in history.
          readOnly: true
          type: string
        stateStartTime:
          format: google-datetime
          description: Output only. The time when the session entered the historical state.
          type: string
          readOnly: true
      description: Historical state information.
    RuntimeInfo:
      properties:
        endpoints:
          description: Output only. Map of remote access endpoints (such as web interfaces and APIs) to their URIs.
          additionalProperties:
            type: string
          type: object
          readOnly: true
        approximateUsage:
          description: 'Output only. Approximate workload resource usage, calculated when the workload completes (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).Note: This metric calculation may change in the future, for example, to capture cumulative workload resource consumption during workload execution (see the Dataproc Serverless release notes (https://cloud.google.com/dataproc-serverless/docs/release-notes) for announcements, changes, fixes and other Dataproc developments).'
          $ref: '#/components/schemas/UsageMetrics'
          readOnly: true
        diagnosticOutputUri:
          type: string
          description: Output only. A URI pointing to the location of the diagnostics tarball.
          readOnly: true
        outputUri:
          description: Output only. A URI pointing to the location of the stdout and stderr of the workload.
          readOnly: true
          type: string
        currentUsage:
          description: Output only. Snapshot of current workload resource usage.
          $ref: '#/components/schemas/UsageSnapshot'
          readOnly: true
      description: Runtime information about workload execution.
      id: RuntimeInfo
      type: object
    NodeGroupAffinity:
      type: object
      properties:
        nodeGroupUri:
          description: 'Required. The URI of a sole-tenant node group resource (https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on.A full URL, partial URI, or node group name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/nodeGroups/node-group-1 projects/[project_id]/zones/[zone]/nodeGroups/node-group-1 node-group-1'
          type: string
      description: Node Group Affinity for clusters using sole-tenant node groups. The Dataproc NodeGroupAffinity resource is not related to the Dataproc NodeGroup resource.
      id: NodeGroupAffinity
    BatchOperationMetadata:
      id: BatchOperationMetadata
      type: object
      properties:
        batch:
          description: Name of the batch for the operation.
          type: string
        batchUuid:
          description: Batch UUID for the operation.
          type: string
        createTime:
          description: The time when the operation was created.
          format: google-datetime
          type: string
        description:
          description: Short description of the operation.
          type: string
        operationType:
          enum:
            - BATCH_OPERATION_TYPE_UNSPECIFIED
            - BATCH
          type: string
          enumDescriptions:
            - Batch operation type is unknown.
            - Batch operation type.
          description: The operation type.
        labels:
          description: Labels associated with the operation.
          type: object
          additionalProperties:
            type: string
        doneTime:
          description: The time when the operation finished.
          type: string
          format: google-datetime
        warnings:
          description: Warnings encountered during operation execution.
          items:
            type: string
          type: array
      description: Metadata describing the Batch operation.
    SessionOperationMetadata:
      description: Metadata describing the Session operation.
      id: SessionOperationMetadata
      type: object
      properties:
        session:
          type: string
          description: Name of the session for the operation.
        doneTime:
          type: string
          description: The time when the operation was finished.
          format: google-datetime
        createTime:
          format: google-datetime
          description: The time when the operation was created.
          type: string
        warnings:
          items:
            type: string
          type: array
          description: Warnings encountered during operation execution.
        labels:
          additionalProperties:
            type: string
          type: object
          description: Labels associated with the operation.
        sessionUuid:
          description: Session UUID for the operation.
          type: string
        operationType:
          enum:
            - SESSION_OPERATION_TYPE_UNSPECIFIED
            - CREATE
            - TERMINATE
            - DELETE
          enumDescriptions:
            - Session operation type is unknown.
            - Create Session operation type.
            - Terminate Session operation type.
            - Delete Session operation type.
          type: string
          description: The operation type.
        description:
          type: string
          description: Short description of the operation.
    ListClustersResponse:
      description: The list of all clusters in a project.
      id: ListClustersResponse
      properties:
        nextPageToken:
          type: string
          readOnly: true
          description: 'Output only. This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent ListClustersRequest.'
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
          readOnly: true
          description: Output only. The clusters in the project.
      type: object
    Metric:
      type: object
      description: A Dataproc custom metric.
      id: Metric
      properties:
        metricSource:
          description: 'Required. A standard set of metrics is collected unless metricOverrides are specified for the metric source (see Custom metrics (https://cloud.google.com/dataproc/docs/guides/dataproc-metrics#custom_metrics) for more information).'
          type: string
          enum:
            - METRIC_SOURCE_UNSPECIFIED
            - MONITORING_AGENT_DEFAULTS
            - HDFS
            - SPARK
            - YARN
            - SPARK_HISTORY_SERVER
            - HIVESERVER2
            - HIVEMETASTORE
            - FLINK
          enumDescriptions:
            - Required unspecified metric source.
            - 'Monitoring agent metrics. If this source is enabled, Dataproc enables the monitoring agent in Compute Engine, and collects monitoring agent metrics, which are published with an agent.googleapis.com prefix.'
            - HDFS metric source.
            - Spark metric source.
            - YARN metric source.
            - Spark History Server metric source.
            - Hiveserver2 metric source.
            - hivemetastore metric source
            - flink metric source
        metricOverrides:
          items:
            type: string
          type: array
          description: 'Optional. Specify one or more Custom metrics (https://cloud.google.com/dataproc/docs/guides/dataproc-metrics#custom_metrics) to collect for the metric course (for the SPARK metric source (any Spark metric (https://spark.apache.org/docs/latest/monitoring.html#metrics) can be specified).Provide metrics in the following format: METRIC_SOURCE: INSTANCE:GROUP:METRIC Use camelcase as appropriate.Examples: yarn:ResourceManager:QueueMetrics:AppsCompleted spark:driver:DAGScheduler:job.allJobs sparkHistoryServer:JVM:Memory:NonHeapMemoryUsage.committed hiveserver2:JVM:Memory:NonHeapMemoryUsage.used Notes: Only the specified overridden metrics are collected for the metric source. For example, if one or more spark:executive metrics are listed as metric overrides, other SPARK metrics are not collected. The collection of the metrics for other enabled custom metric sources is unaffected. For example, if both SPARK andd YARN metric sources are enabled, and overrides are provided for Spark metrics only, all YARN metrics are collected.'
    Binding:
      description: 'Associates members, or principals, with a role.'
      type: object
      id: Binding
      properties:
        role:
          description: 'Role that is assigned to the list of members, or principals. For example, roles/viewer, roles/editor, or roles/owner.'
          type: string
        condition:
          $ref: '#/components/schemas/Expr'
          description: 'The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).'
        members:
          type: array
          description: 'Specifies the principals requesting access for a Google Cloud resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a Google service account. For example, my-other-app@appspot.gserviceaccount.com. serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]: An identifier for a Kubernetes service account (https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, my-project.svc.id.goog[my-namespace/my-kubernetes-sa]. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding.'
          items:
            type: string
    Status:
      properties:
        code:
          format: int32
          type: integer
          description: 'The status code, which should be an enum value of google.rpc.Code.'
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          type: array
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
      description: 'The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).'
      type: object
      id: Status
    JobPlacement:
      description: Dataproc job config.
      id: JobPlacement
      properties:
        clusterLabels:
          additionalProperties:
            type: string
          type: object
          description: Optional. Cluster labels to identify a cluster where the job will be submitted.
        clusterName:
          description: Required. The name of the cluster where the job will be submitted.
          type: string
        clusterUuid:
          type: string
          description: Output only. A cluster UUID generated by the Dataproc service when the job is submitted.
          readOnly: true
      type: object
    GkeNodePoolConfig:
      description: 'The configuration of a GKE node pool used by a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/concepts/jobs/dataproc-gke#create-a-dataproc-on-gke-cluster).'
      properties:
        locations:
          items:
            type: string
          type: array
          description: 'Optional. The list of Compute Engine zones (https://cloud.google.com/compute/docs/zones#available) where node pool nodes associated with a Dataproc on GKE virtual cluster will be located.Note: All node pools associated with a virtual cluster must be located in the same region as the virtual cluster, and they must be located in the same zone within that region.If a location is not specified during node pool creation, Dataproc on GKE will choose the zone.'
        autoscaling:
          $ref: '#/components/schemas/GkeNodePoolAutoscalingConfig'
          description: Optional. The autoscaler configuration for this node pool. The autoscaler is enabled only when a valid configuration is present.
        config:
          description: Optional. The node pool configuration.
          $ref: '#/components/schemas/GkeNodeConfig'
      id: GkeNodePoolConfig
      type: object
    InjectSessionCredentialsRequest:
      type: object
      description: A request to inject credentials to a session.
      properties:
        credentialsCiphertext:
          description: Required. The encrypted credentials being injected in to the session.The client is responsible for encrypting the credentials in a way that is supported by the session.A wrapped value is used here so that the actual contents of the encrypted credentials are not written to audit logs.
          type: string
        requestId:
          description: 'Optional. A unique ID used to identify the request. If the service receives two TerminateSessionRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.TerminateSessionRequest)s with the same ID, the first request is ignored to ensure the most recent credentials are injected.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The value must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
          type: string
      id: InjectSessionCredentialsRequest
    RuntimeConfig:
      description: Runtime configuration for a workload.
      properties:
        version:
          description: Optional. Version of the batch runtime.
          type: string
        properties:
          description: 'Optional. A mapping of property names to values, which are used to configure workload execution.'
          type: object
          additionalProperties:
            type: string
        containerImage:
          description: 'Optional. Optional custom container image for the job runtime environment. If not specified, a default container image will be used.'
          type: string
      id: RuntimeConfig
      type: object
    PrestoJob:
      type: object
      properties:
        outputFormat:
          type: string
          description: Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats
        clientTags:
          description: Optional. Presto client tags to attach to this query
          items:
            type: string
          type: array
        queryList:
          $ref: '#/components/schemas/QueryList'
          description: A list of queries.
        loggingConfig:
          description: Optional. The runtime log config for job execution.
          $ref: '#/components/schemas/LoggingConfig'
        queryFileUri:
          type: string
          description: The HCFS URI of the script that contains SQL queries.
        continueOnFailure:
          type: boolean
          description: Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
        properties:
          type: object
          description: 'Optional. A mapping of property names to values. Used to set Presto session properties (https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI'
          additionalProperties:
            type: string
      id: PrestoJob
      description: 'A Dataproc job for running Presto (https://prestosql.io/) queries. IMPORTANT: The Dataproc Presto Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/presto) must be enabled when the cluster is created to submit a Presto job to the cluster.'
    GkeNodePoolAcceleratorConfig:
      properties:
        acceleratorType:
          type: string
          description: The accelerator type resource namename (see GPUs on Compute Engine).
        acceleratorCount:
          type: string
          description: The number of accelerator cards exposed to an instance.
          format: int64
        gpuPartitionSize:
          type: string
          description: 'Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).'
      type: object
      description: A GkeNodeConfigAcceleratorConfig represents a Hardware Accelerator request for a node pool.
      id: GkeNodePoolAcceleratorConfig
    CancelJobRequest:
      id: CancelJobRequest
      description: A request to cancel a job.
      type: object
      properties: {}
    JobMetadata:
      properties:
        operationType:
          type: string
          description: Output only. Operation type.
          readOnly: true
        status:
          readOnly: true
          $ref: '#/components/schemas/JobStatus'
          description: Output only. Most recent job status.
        jobId:
          readOnly: true
          type: string
          description: Output only. The job id.
        startTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. Job submission time.
      type: object
      description: Job Operation metadata.
      id: JobMetadata
    Batch:
      id: Batch
      properties:
        stateMessage:
          type: string
          description: 'Output only. Batch state details, such as a failure description if the state is FAILED.'
          readOnly: true
        pysparkBatch:
          description: Optional. PySpark batch config.
          $ref: '#/components/schemas/PySparkBatch'
        state:
          description: Output only. The state of the batch.
          enumDescriptions:
            - The batch state is unknown.
            - The batch is created before running.
            - The batch is running.
            - The batch is cancelling.
            - The batch cancellation was successful.
            - The batch completed successfully.
            - The batch is no longer running due to an error.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
            - FAILED
          type: string
          readOnly: true
        stateTime:
          description: Output only. The time when the batch entered a current state.
          format: google-datetime
          type: string
          readOnly: true
        stateHistory:
          items:
            $ref: '#/components/schemas/StateHistory'
          readOnly: true
          type: array
          description: Output only. Historical state information for the batch.
        creator:
          type: string
          description: Output only. The email address of the user who created the batch.
          readOnly: true
        createTime:
          description: Output only. The time when the batch was created.
          type: string
          readOnly: true
          format: google-datetime
        sparkBatch:
          description: Optional. Spark batch config.
          $ref: '#/components/schemas/SparkBatch'
        operation:
          readOnly: true
          type: string
          description: Output only. The resource name of the operation associated with this batch.
        runtimeConfig:
          $ref: '#/components/schemas/RuntimeConfig'
          description: Optional. Runtime configuration for the batch execution.
        sparkSqlBatch:
          $ref: '#/components/schemas/SparkSqlBatch'
          description: Optional. SparkSql batch config.
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Optional. The labels to associate with this batch. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a batch.'
        runtimeInfo:
          readOnly: true
          description: Output only. Runtime information about batch execution.
          $ref: '#/components/schemas/RuntimeInfo'
        environmentConfig:
          description: Optional. Environment configuration for the batch execution.
          $ref: '#/components/schemas/EnvironmentConfig'
        sparkRBatch:
          description: Optional. SparkR batch config.
          $ref: '#/components/schemas/SparkRBatch'
        name:
          type: string
          description: Output only. The resource name of the batch.
          readOnly: true
        uuid:
          readOnly: true
          description: Output only. A batch UUID (Unique Universal Identifier). The service generates this value when it creates the batch.
          type: string
      type: object
      description: A representation of a batch workload in the service.
    PySparkBatch:
      id: PySparkBatch
      properties:
        mainPythonFileUri:
          description: Required. The HCFS URI of the main Python file to use as the Spark driver. Must be a .py file.
          type: string
        archiveUris:
          items:
            type: string
          type: array
          description: 'Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.'
        pythonFileUris:
          items:
            type: string
          type: array
          description: 'Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.'
        fileUris:
          items:
            type: string
          description: Optional. HCFS URIs of files to be placed in the working directory of each executor.
          type: array
        jarFileUris:
          type: array
          description: Optional. HCFS URIs of jar files to add to the classpath of the Spark driver and tasks.
          items:
            type: string
        args:
          items:
            type: string
          type: array
          description: 'Optional. The arguments to pass to the driver. Do not include arguments that can be set as batch properties, such as --conf, since a collision can occur that causes an incorrect batch submission.'
      type: object
      description: 'A configuration for running an Apache PySpark (https://spark.apache.org/docs/latest/api/python/getting_started/quickstart.html) batch workload.'
    QueryList:
      properties:
        queries:
          description: 'Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } '
          items:
            type: string
          type: array
      id: QueryList
      type: object
      description: A list of queries to run on a cluster.
    InstantiateWorkflowTemplateRequest:
      description: A request to instantiate a workflow template.
      id: InstantiateWorkflowTemplateRequest
      properties:
        parameters:
          description: Optional. Map from parameter names to values that should be used for those parameters. Values may not exceed 1000 characters.
          type: object
          additionalProperties:
            type: string
        version:
          description: 'Optional. The version of workflow template to instantiate. If specified, the workflow will be instantiated only if the current version of the workflow template has the supplied version.This option cannot be used to instantiate a previous version of workflow template.'
          format: int32
          type: integer
        requestId:
          description: 'Optional. A tag that prevents multiple concurrent workflow instances with the same tag from running. This mitigates risk of concurrent instances started due to retries.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The tag must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
          type: string
      type: object
    DriverSchedulingConfig:
      properties:
        vcores:
          type: integer
          description: Required. The number of vCPUs the driver is requesting.
          format: int32
        memoryMb:
          type: integer
          format: int32
          description: Required. The amount of memory in MB the driver is requesting.
      id: DriverSchedulingConfig
      description: Driver scheduling configuration.
      type: object
    SparkStandaloneAutoscalingConfig:
      description: Basic autoscaling configurations for Spark Standalone.
      type: object
      properties:
        gracefulDecommissionTimeout:
          type: string
          format: google-duration
          description: 'Required. Timeout for Spark graceful decommissioning of spark workers. Specifies the duration to wait for spark worker to complete spark decommissioning tasks before forcefully removing workers. Only applicable to downscaling operations.Bounds: 0s, 1d.'
        scaleDownMinWorkerFraction:
          format: double
          type: number
          description: 'Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.'
        scaleUpFactor:
          type: number
          description: 'Required. Fraction of required workers to add to Spark Standalone clusters. A scale-up factor of 1.0 will result in scaling up so that there are no more required workers for the Spark Job (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling).Bounds: 0.0, 1.0.'
          format: double
        scaleDownFactor:
          format: double
          description: 'Required. Fraction of required executors to remove from Spark Serverless clusters. A scale-down factor of 1.0 will result in scaling down so that there are no more executors for the Spark Job.(more aggressive scaling). A scale-down factor closer to 0 will result in a smaller magnitude of scaling donw (less aggressive scaling).Bounds: 0.0, 1.0.'
          type: number
        scaleUpMinWorkerFraction:
          description: 'Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.'
          format: double
          type: number
      id: SparkStandaloneAutoscalingConfig
    AutoscalingConfig:
      id: AutoscalingConfig
      properties:
        policyUri:
          description: 'Optional. The autoscaling policy used by the cluster.Only resource names including projectid and location (region) are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id] projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]Note that the policy must be in the same project and Dataproc region.'
          type: string
      description: Autoscaling Policy config associated with the cluster.
      type: object
    ManagedGroupConfig:
      properties:
        instanceGroupManagerName:
          description: Output only. The name of the Instance Group Manager for this group.
          readOnly: true
          type: string
        instanceTemplateName:
          description: Output only. The name of the Instance Template used for the Managed Instance Group.
          type: string
          readOnly: true
      type: object
      id: ManagedGroupConfig
      description: Specifies the resources used to actively manage an instance group.
    InjectCredentialsRequest:
      properties:
        clusterUuid:
          description: Required. The cluster UUID.
          type: string
        credentialsCiphertext:
          description: Required. The encrypted credentials being injected in to the cluster.The client is responsible for encrypting the credentials in a way that is supported by the cluster.A wrapped value is used here so that the actual contents of the encrypted credentials are not written to audit logs.
          type: string
      id: InjectCredentialsRequest
      description: A request to inject credentials into a cluster.
      type: object
    PySparkJob:
      id: PySparkJob
      properties:
        properties:
          additionalProperties:
            type: string
          type: object
          description: 'Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.'
        mainPythonFileUri:
          description: Required. The HCFS URI of the main Python file to use as the driver. Must be a .py file.
          type: string
        loggingConfig:
          $ref: '#/components/schemas/LoggingConfig'
          description: Optional. The runtime log config for job execution.
        args:
          description: 'Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.'
          items:
            type: string
          type: array
        jarFileUris:
          description: Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.
          items:
            type: string
          type: array
        fileUris:
          items:
            type: string
          type: array
          description: Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
        archiveUris:
          type: array
          description: 'Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.'
          items:
            type: string
        pythonFileUris:
          type: array
          description: 'Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.'
          items:
            type: string
      type: object
      description: 'A Dataproc job for running Apache PySpark (https://spark.apache.org/docs/0.9.0/python-programming-guide.html) applications on YARN.'
    GetPolicyOptions:
      type: object
      description: Encapsulates settings provided to GetIamPolicy.
      properties:
        requestedPolicyVersion:
          description: 'Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).'
          type: integer
          format: int32
      id: GetPolicyOptions
    SubmitJobRequest:
      type: object
      properties:
        job:
          $ref: '#/components/schemas/Job'
          description: Required. The job resource.
        requestId:
          type: string
          description: 'Optional. A unique id used to identify the request. If the server receives two SubmitJobRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.SubmitJobRequest)s with the same id, then the second request will be ignored and the first Job created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
      id: SubmitJobRequest
      description: A request to submit a job.
    GkeClusterConfig:
      id: GkeClusterConfig
      description: The cluster's GKE config.
      type: object
      properties:
        nodePoolTarget:
          items:
            $ref: '#/components/schemas/GkeNodePoolTarget'
          description: 'Optional. GKE node pools where workloads will be scheduled. At least one node pool must be assigned the DEFAULT GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a DEFAULT GkeNodePoolTarget. Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings.'
          type: array
        namespacedGkeDeploymentTarget:
          $ref: '#/components/schemas/NamespacedGkeDeploymentTarget'
          description: Optional. Deprecated. Use gkeClusterTarget. Used only for the deprecated beta. A target for the deployment.
          deprecated: true
        gkeClusterTarget:
          description: 'Optional. A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster (the GKE cluster can be zonal or regional). Format: ''projects/{project}/locations/{location}/clusters/{cluster_id}'''
          type: string
    SetIamPolicyRequest:
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
          description: 'REQUIRED: The complete policy to be applied to the resource. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
      description: Request message for SetIamPolicy method.
      id: SetIamPolicyRequest
      type: object
    StateHistory:
      id: StateHistory
      type: object
      description: Historical state information.
      properties:
        stateMessage:
          readOnly: true
          type: string
          description: Output only. Details about the state at this point in history.
        state:
          readOnly: true
          type: string
          enumDescriptions:
            - The batch state is unknown.
            - The batch is created before running.
            - The batch is running.
            - The batch is cancelling.
            - The batch cancellation was successful.
            - The batch completed successfully.
            - The batch is no longer running due to an error.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
            - FAILED
          description: Output only. The state of the batch at this point in history.
        stateStartTime:
          description: Output only. The time when the batch entered the historical state.
          readOnly: true
          format: google-datetime
          type: string
    RepairClusterRequest:
      description: A request to repair a cluster.
      type: object
      properties:
        nodePools:
          type: array
          items:
            $ref: '#/components/schemas/NodePool'
          description: Optional. Node pools and corresponding repair action to be taken. All node pools should be unique in this request. i.e. Multiple entries for the same node pool id are not allowed.
        requestId:
          type: string
          description: 'Optional. A unique ID used to identify the request. If the server receives two RepairClusterRequests with the same ID, the second request is ignored, and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
        gracefulDecommissionTimeout:
          format: google-duration
          type: string
          description: 'Optional. Timeout for graceful YARN decommissioning. Graceful decommissioning facilitates the removal of cluster nodes without interrupting jobs in progress. The timeout specifies the amount of time to wait for jobs finish before forcefully removing nodes. The default timeout is 0 for forceful decommissioning, and the maximum timeout period is 1 day. (see JSON Mapping—Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).graceful_decommission_timeout is supported in Dataproc image versions 1.2+.'
        clusterUuid:
          type: string
          description: Optional. Specifying the cluster_uuid means the RPC will fail (with error NOT_FOUND) if a cluster with the specified UUID does not exist.
        parentOperationId:
          type: string
          description: Optional. operation id of the parent operation sending the repair request
      id: RepairClusterRequest
    ClusterOperationMetadata:
      type: object
      properties:
        status:
          description: Output only. Current operation status.
          $ref: '#/components/schemas/ClusterOperationStatus'
          readOnly: true
        statusHistory:
          type: array
          description: Output only. The previous operation status.
          readOnly: true
          items:
            $ref: '#/components/schemas/ClusterOperationStatus'
        description:
          description: Output only. Short description of operation.
          readOnly: true
          type: string
        labels:
          description: Output only. Labels associated with the operation
          additionalProperties:
            type: string
          readOnly: true
          type: object
        clusterName:
          readOnly: true
          description: Output only. Name of the cluster for the operation.
          type: string
        clusterUuid:
          readOnly: true
          type: string
          description: Output only. Cluster UUID for the operation.
        warnings:
          readOnly: true
          type: array
          description: Output only. Errors encountered during operation execution.
          items:
            type: string
        operationType:
          description: Output only. The operation type.
          type: string
          readOnly: true
        childOperationIds:
          type: array
          description: Output only. Child operation ids
          readOnly: true
          items:
            type: string
      id: ClusterOperationMetadata
      description: Metadata describing the operation.
    LoggingConfig:
      description: The runtime logging config of the job.
      id: LoggingConfig
      type: object
      properties:
        driverLogLevels:
          type: object
          additionalProperties:
            type: string
            enum:
              - LEVEL_UNSPECIFIED
              - ALL
              - TRACE
              - DEBUG
              - INFO
              - WARN
              - ERROR
              - FATAL
              - 'OFF'
            enumDescriptions:
              - Level is unspecified. Use default level for log4j.
              - Use ALL level for log4j.
              - Use TRACE level for log4j.
              - Use DEBUG level for log4j.
              - Use INFO level for log4j.
              - Use WARN level for log4j.
              - Use ERROR level for log4j.
              - Use FATAL level for log4j.
              - Turn off log4j.
          description: 'The per-package log levels for the driver. This may include "root" package name to configure rootLogger. Examples: - ''com.google = FATAL'' - ''root = INFO'' - ''org.apache = DEBUG'''
    HadoopJob:
      description: 'A Dataproc job for running Apache Hadoop MapReduce (https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).'
      properties:
        mainClass:
          description: The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.
          type: string
        jarFileUris:
          description: Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.
          items:
            type: string
          type: array
        args:
          type: array
          items:
            type: string
          description: 'Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.'
        properties:
          type: object
          additionalProperties:
            type: string
          description: 'Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.'
        fileUris:
          description: Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
          items:
            type: string
          type: array
        archiveUris:
          type: array
          description: 'Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.'
          items:
            type: string
        mainJarFileUri:
          description: 'The HCFS URI of the jar file containing the main class. Examples: ''gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar'' ''hdfs:/tmp/test-samples/custom-wordcount.jar'' ''file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'''
          type: string
        loggingConfig:
          description: Optional. The runtime log config for job execution.
          $ref: '#/components/schemas/LoggingConfig'
      type: object
      id: HadoopJob
    ClusterSelector:
      type: object
      properties:
        clusterLabels:
          type: object
          description: Required. The cluster labels. Cluster must have all labels to match.
          additionalProperties:
            type: string
        zone:
          type: string
          description: 'Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.'
      description: A selector that chooses target cluster for jobs based on metadata.
      id: ClusterSelector
    ClusterOperation:
      properties:
        done:
          type: boolean
          readOnly: true
          description: Output only. Indicates the operation is done.
        error:
          type: string
          readOnly: true
          description: 'Output only. Error, if operation failed.'
        operationId:
          description: Output only. The id of the cluster operation.
          type: string
          readOnly: true
      type: object
      description: The cluster operation triggered by a workflow.
      id: ClusterOperation
    PigJob:
      type: object
      description: 'A Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.'
      id: PigJob
      properties:
        jarFileUris:
          type: array
          description: Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
          items:
            type: string
        queryList:
          $ref: '#/components/schemas/QueryList'
          description: A list of queries.
        scriptVariables:
          description: 'Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).'
          type: object
          additionalProperties:
            type: string
        queryFileUri:
          description: The HCFS URI of the script that contains the Pig queries.
          type: string
        properties:
          type: object
          additionalProperties:
            type: string
          description: 'Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.'
        continueOnFailure:
          description: Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
          type: boolean
        loggingConfig:
          $ref: '#/components/schemas/LoggingConfig'
          description: Optional. The runtime log config for job execution.
    ListBatchesResponse:
      id: ListBatchesResponse
      type: object
      properties:
        batches:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Batch'
          description: Output only. The batches from the specified collection.
        nextPageToken:
          type: string
          description: 'A token, which can be sent as page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.'
      description: A list of batch workloads.
    StopClusterRequest:
      type: object
      description: A request to stop a cluster.
      id: StopClusterRequest
      properties:
        clusterUuid:
          description: Optional. Specifying the cluster_uuid means the RPC will fail (with error NOT_FOUND) if a cluster with the specified UUID does not exist.
          type: string
        requestId:
          description: 'Optional. A unique ID used to identify the request. If the server receives two StopClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.StopClusterRequest)s with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
          type: string
    KerberosConfig:
      id: KerberosConfig
      description: Specifies Kerberos related configuration.
      type: object
      properties:
        crossRealmTrustRealm:
          type: string
          description: 'Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.'
        keystorePasswordUri:
          description: 'Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.'
          type: string
        keyPasswordUri:
          description: 'Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.'
          type: string
        rootPrincipalPasswordUri:
          type: string
          description: Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
        truststorePasswordUri:
          description: 'Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.'
          type: string
        keystoreUri:
          type: string
          description: 'Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.'
        kmsKeyUri:
          description: Optional. The uri of the KMS key used to encrypt various sensitive files.
          type: string
        kdcDbKeyUri:
          type: string
          description: Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
        tgtLifetimeHours:
          format: int32
          type: integer
          description: 'Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.'
        crossRealmTrustSharedPasswordUri:
          type: string
          description: 'Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.'
        truststoreUri:
          type: string
          description: 'Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.'
        realm:
          type: string
          description: 'Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.'
        crossRealmTrustAdminServer:
          type: string
          description: Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
        enableKerberos:
          type: boolean
          description: 'Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.'
        crossRealmTrustKdc:
          type: string
          description: Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
    ValueValidation:
      id: ValueValidation
      properties:
        values:
          type: array
          description: Required. List of allowed values for the parameter.
          items:
            type: string
      type: object
      description: Validation based on a list of allowed values.
    Policy:
      id: Policy
      properties:
        version:
          format: int32
          type: integer
          description: 'Specifies the format of the policy.Valid values are 0, 1, and 3. Requests that specify an invalid value are rejected.Any operation that affects conditional role bindings must specify version 3. This requirement applies to the following operations: Getting a policy that includes a conditional role binding Adding a conditional role binding to a policy Changing a conditional role binding in a policy Removing any role binding, with or without a condition, from a policy that includes conditionsImportant: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).'
        bindings:
          type: array
          description: 'Associates a list of members, or principals, with a role. Optionally, may specify a condition that determines how and when the bindings are applied. Each of the bindings must contain at least one principal.The bindings in a Policy can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the bindings grant 50 different roles to user:alice@example.com, and not to any other principal, then you can add another 1,450 principals to the bindings in the Policy.'
          items:
            $ref: '#/components/schemas/Binding'
        etag:
          type: string
          description: 'etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy, and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy.Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.'
          format: byte
      type: object
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).JSON example: { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } YAML example: bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the IAM documentation (https://cloud.google.com/iam/docs/).'
    TestIamPermissionsResponse:
      description: Response message for TestIamPermissions method.
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
          description: A subset of TestPermissionsRequest.permissions that the caller is allowed.
      id: TestIamPermissionsResponse
    WorkflowGraph:
      type: object
      id: WorkflowGraph
      description: The workflow graph.
      properties:
        nodes:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/WorkflowNode'
          description: Output only. The workflow nodes.
    ListSessionsResponse:
      properties:
        nextPageToken:
          type: string
          description: 'A token, which can be sent as page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.'
        sessions:
          description: Output only. The sessions from the specified collection.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Session'
      description: A list of interactive sessions.
      id: ListSessionsResponse
      type: object
    EncryptionConfig:
      type: object
      id: EncryptionConfig
      description: Encryption settings for the cluster.
      properties:
        gcePdKmsKeyName:
          description: Optional. The Cloud KMS key name to use for PD disk encryption for all instances in the cluster.
          type: string
        kmsKey:
          description: Optional. The Cloud KMS key name to use for encrypting customer core content and cluster PD disk for all instances in the cluster.
          type: string
    UsageSnapshot:
      description: The usage snapshot represents the resources consumed by a workload at a specified time.
      type: object
      id: UsageSnapshot
      properties:
        snapshotTime:
          format: google-datetime
          description: Optional. The timestamp of the usage snapshot.
          type: string
        shuffleStorageGb:
          description: 'Optional. Shuffle Storage in gigabytes (GB). (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing))'
          format: int64
          type: string
        shuffleStorageGbPremium:
          description: 'Optional. Shuffle Storage in gigabytes (GB) charged at premium tier. (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing))'
          format: int64
          type: string
        milliDcuPremium:
          type: string
          format: int64
          description: 'Optional. Milli (one-thousandth) Dataproc Compute Units (DCUs) charged at premium tier (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).'
        milliDcu:
          type: string
          description: 'Optional. Milli (one-thousandth) Dataproc Compute Units (DCUs) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).'
          format: int64
    Expr:
      type: object
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      id: Expr
      properties:
        title:
          type: string
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
        location:
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
          type: string
        description:
          type: string
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
    VirtualClusterConfig:
      properties:
        auxiliaryServicesConfig:
          description: Optional. Configuration of auxiliary services used by this cluster.
          $ref: '#/components/schemas/AuxiliaryServicesConfig'
        stagingBucket:
          description: 'Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster''s staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.'
          type: string
        kubernetesClusterConfig:
          $ref: '#/components/schemas/KubernetesClusterConfig'
          description: Required. The configuration for running the Dataproc cluster on Kubernetes.
      type: object
      description: 'The Dataproc cluster config for a cluster that does not directly control the underlying compute resources, such as a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/guides/dpgke/dataproc-gke-overview).'
      id: VirtualClusterConfig
    WorkflowMetadata:
      properties:
        graph:
          description: Output only. The workflow graph.
          $ref: '#/components/schemas/WorkflowGraph'
          readOnly: true
        template:
          description: 'Output only. The resource name of the workflow template as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}'
          type: string
          readOnly: true
        dagTimeout:
          format: google-duration
          readOnly: true
          description: 'Output only. The timeout duration for the DAG of jobs, expressed in seconds (see JSON representation of duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).'
          type: string
        parameters:
          additionalProperties:
            type: string
          description: Map from parameter names to values that were used for those parameters.
          type: object
        version:
          description: Output only. The version of template at the time of workflow instantiation.
          type: integer
          readOnly: true
          format: int32
        endTime:
          description: Output only. Workflow end time.
          readOnly: true
          format: google-datetime
          type: string
        startTime:
          type: string
          description: Output only. Workflow start time.
          readOnly: true
          format: google-datetime
        dagEndTime:
          format: google-datetime
          readOnly: true
          type: string
          description: 'Output only. DAG end time, only set for workflows with dag_timeout when DAG ends.'
        clusterName:
          description: Output only. The name of the target cluster.
          readOnly: true
          type: string
        createCluster:
          readOnly: true
          $ref: '#/components/schemas/ClusterOperation'
          description: Output only. The create cluster operation metadata.
        clusterUuid:
          type: string
          description: Output only. The UUID of target cluster.
          readOnly: true
        dagStartTime:
          description: 'Output only. DAG start time, only set for workflows with dag_timeout when DAG begins.'
          type: string
          readOnly: true
          format: google-datetime
        deleteCluster:
          description: Output only. The delete cluster operation metadata.
          readOnly: true
          $ref: '#/components/schemas/ClusterOperation'
        state:
          description: Output only. The workflow state.
          enum:
            - UNKNOWN
            - PENDING
            - RUNNING
            - DONE
          type: string
          readOnly: true
          enumDescriptions:
            - Unused.
            - The operation has been created.
            - The operation is running.
            - The operation is done; either cancelled or completed.
      description: A Dataproc workflow template resource.
      type: object
      id: WorkflowMetadata
    WorkflowNode:
      type: object
      id: WorkflowNode
      properties:
        prerequisiteStepIds:
          type: array
          description: Output only. Node's prerequisite nodes.
          items:
            type: string
          readOnly: true
        error:
          type: string
          readOnly: true
          description: Output only. The error detail.
        jobId:
          description: Output only. The job id; populated after the node enters RUNNING state.
          readOnly: true
          type: string
        state:
          enumDescriptions:
            - State is unspecified.
            - The node is awaiting prerequisite node to finish.
            - The node is runnable but not running.
            - The node is running.
            - The node completed successfully.
            - The node failed. A node can be marked FAILED because its ancestor or peer failed.
          type: string
          description: Output only. The node state.
          enum:
            - NODE_STATE_UNSPECIFIED
            - BLOCKED
            - RUNNABLE
            - RUNNING
            - COMPLETED
            - FAILED
          readOnly: true
        stepId:
          description: Output only. The name of the node.
          type: string
          readOnly: true
      description: The workflow node.
    JobReference:
      properties:
        projectId:
          type: string
          description: 'Optional. The ID of the Google Cloud Platform project that the job belongs to. If specified, must match the request project ID.'
        jobId:
          description: 'Optional. The job ID, which must be unique within the project.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.If not specified by the caller, the job ID will be provided by the server.'
          type: string
      id: JobReference
      type: object
      description: Encapsulates the full scoping used to reference a job.
    PeripheralsConfig:
      type: object
      description: Auxiliary services configuration for a workload.
      properties:
        metastoreService:
          type: string
          description: 'Optional. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[region]/services/[service_id]'
        sparkHistoryServerConfig:
          description: Optional. The Spark History Server configuration for the workload.
          $ref: '#/components/schemas/SparkHistoryServerConfig'
      id: PeripheralsConfig
    InstanceReference:
      properties:
        publicEciesKey:
          type: string
          description: The public ECIES key used for sharing data with this instance.
        instanceId:
          type: string
          description: The unique identifier of the Compute Engine instance.
        instanceName:
          type: string
          description: The user-friendly name of the Compute Engine instance.
        publicKey:
          type: string
          description: The public RSA key used for sharing data with this instance.
      type: object
      id: InstanceReference
      description: A reference to a Compute Engine instance.
    ListSessionTemplatesResponse:
      type: object
      id: ListSessionTemplatesResponse
      description: A list of session templates.
      properties:
        nextPageToken:
          type: string
          description: 'A token, which can be sent as page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.'
        sessionTemplates:
          readOnly: true
          description: Output only. Session template list
          items:
            $ref: '#/components/schemas/SessionTemplate'
          type: array
    DiskConfig:
      id: DiskConfig
      type: object
      properties:
        bootDiskSizeGb:
          format: int32
          description: Optional. Size in GB of the boot disk (default is 500GB).
          type: integer
        numLocalSsds:
          format: int32
          type: integer
          description: 'Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.'
        bootDiskType:
          type: string
          description: 'Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).'
        localSsdInterface:
          type: string
          description: 'Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).'
      description: Specifies the config of disk options for a group of VM instances.
    LifecycleConfig:
      id: LifecycleConfig
      properties:
        idleDeleteTtl:
          format: google-duration
          type: string
          description: 'Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).'
        autoDeleteTime:
          format: google-datetime
          type: string
          description: 'Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).'
        idleStartTime:
          format: google-datetime
          type: string
          readOnly: true
          description: 'Output only. The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).'
        autoDeleteTtl:
          format: google-duration
          type: string
          description: 'Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).'
      description: Specifies the cluster auto-delete schedule configuration.
      type: object
    HiveJob:
      type: object
      description: 'A Dataproc job for running Apache Hive (https://hive.apache.org/) queries on YARN.'
      properties:
        continueOnFailure:
          description: Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
          type: boolean
        scriptVariables:
          description: 'Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name="value";).'
          additionalProperties:
            type: string
          type: object
        queryFileUri:
          type: string
          description: The HCFS URI of the script that contains Hive queries.
        queryList:
          $ref: '#/components/schemas/QueryList'
          description: A list of queries.
        properties:
          type: object
          additionalProperties:
            type: string
          description: 'Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.'
        jarFileUris:
          description: Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
          type: array
          items:
            type: string
      id: HiveJob
    YarnApplication:
      id: YarnApplication
      properties:
        name:
          type: string
          description: Required. The application name.
        progress:
          description: 'Required. The numerical progress of the application, from 1 to 100.'
          type: number
          format: float
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - NEW
            - NEW_SAVING
            - SUBMITTED
            - ACCEPTED
            - RUNNING
            - FINISHED
            - FAILED
            - KILLED
          description: Required. The application state.
          enumDescriptions:
            - Status is unspecified.
            - Status is NEW.
            - Status is NEW_SAVING.
            - Status is SUBMITTED.
            - Status is ACCEPTED.
            - Status is RUNNING.
            - Status is FINISHED.
            - Status is FAILED.
            - Status is KILLED.
        trackingUrl:
          type: string
          description: 'Optional. The HTTP URL of the ApplicationMaster, HistoryServer, or TimelineServer that provides application-specific information. The URL uses the internal hostname, and requires a proxy server for resolution and, possibly, access.'
      description: 'A YARN application created by a job. Application information is a subset of org.apache.hadoop.yarn.proto.YarnProtos.ApplicationReportProto.Beta Feature: This report is available for testing purposes only. It may be changed before final release.'
      type: object
    DiagnoseClusterRequest:
      description: A request to collect cluster diagnostic information.
      id: DiagnoseClusterRequest
      type: object
      properties:
        job:
          deprecated: true
          description: 'Optional. DEPRECATED Specifies the job on which diagnosis is to be performed. Format: projects/{project}/regions/{region}/jobs/{job}'
          type: string
        yarnApplicationId:
          description: Optional. DEPRECATED Specifies the yarn application on which diagnosis is to be performed.
          type: string
          deprecated: true
        yarnApplicationIds:
          description: Optional. Specifies a list of yarn applications on which diagnosis is to be performed.
          type: array
          items:
            type: string
        jobs:
          type: array
          description: 'Optional. Specifies a list of jobs on which diagnosis is to be performed. Format: projects/{project}/regions/{region}/jobs/{job}'
          items:
            type: string
        diagnosisInterval:
          $ref: '#/components/schemas/Interval'
          description: Optional. Time interval in which diagnosis should be carried out on the cluster.
    SparkRBatch:
      type: object
      description: 'A configuration for running an Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) batch workload.'
      properties:
        mainRFileUri:
          type: string
          description: Required. The HCFS URI of the main R file to use as the driver. Must be a .R or .r file.
        fileUris:
          description: Optional. HCFS URIs of files to be placed in the working directory of each executor.
          type: array
          items:
            type: string
        archiveUris:
          description: 'Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.'
          items:
            type: string
          type: array
        args:
          description: 'Optional. The arguments to pass to the Spark driver. Do not include arguments that can be set as batch properties, such as --conf, since a collision can occur that causes an incorrect batch submission.'
          items:
            type: string
          type: array
      id: SparkRBatch
    AuxiliaryServicesConfig:
      type: object
      properties:
        sparkHistoryServerConfig:
          description: Optional. The Spark History Server configuration for the workload.
          $ref: '#/components/schemas/SparkHistoryServerConfig'
        metastoreConfig:
          description: Optional. The Hive Metastore configuration for this workload.
          $ref: '#/components/schemas/MetastoreConfig'
      id: AuxiliaryServicesConfig
      description: Auxiliary services configuration for a Cluster.
    InstanceGroupConfig:
      type: object
      properties:
        diskConfig:
          $ref: '#/components/schemas/DiskConfig'
          description: Optional. Disk option config settings.
        imageUri:
          type: string
          description: 'Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.'
        minCpuPlatform:
          description: 'Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).'
          type: string
        isPreemptible:
          description: Output only. Specifies that this instance group contains preemptible instances.
          type: boolean
          readOnly: true
        instanceNames:
          description: 'Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.'
          items:
            type: string
          readOnly: true
          type: array
        minNumInstances:
          type: integer
          format: int32
          description: 'Optional. The minimum number of instances to create. If min_num_instances is set, min_num_instances is used for a criteria to decide the cluster. Cluster creation will be failed by being an error state if the total number of instances created is less than the min_num_instances. For example, given that num_instances = 5 and min_num_instances = 3, * if 4 instances are created and then registered successfully but one instance is failed, the failed VM will be deleted and the cluster will be resized to 4 instances in running state. * if 2 instances are created successfully and 3 instances are failed, the cluster will be in an error state and does not delete failed VMs for debugging. * if 2 instance are created and then registered successfully but 3 instances are failed to initialize, the cluster will be in an error state and does not delete failed VMs for debugging. NB: This can only be set for primary workers now.'
        machineTypeUri:
          type: string
          description: 'Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.'
        instanceReferences:
          readOnly: true
          items:
            $ref: '#/components/schemas/InstanceReference'
          description: Output only. List of references to Compute Engine instances.
          type: array
        numInstances:
          format: int32
          description: 'Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.'
          type: integer
        preemptibility:
          enumDescriptions:
            - 'Preemptibility is unspecified, the system will choose the appropriate setting for each instance group.'
            - Instances are non-preemptible.This option is allowed for all instance groups and is the only valid value for Master and Worker instance groups.
            - 'Instances are preemptible (https://cloud.google.com/compute/docs/instances/preemptible).This option is allowed only for secondary worker (https://cloud.google.com/dataproc/docs/concepts/compute/secondary-vms) groups.'
            - 'Instances are Spot VMs (https://cloud.google.com/compute/docs/instances/spot).This option is allowed only for secondary worker (https://cloud.google.com/dataproc/docs/concepts/compute/secondary-vms) groups. Spot VMs are the latest version of preemptible VMs (https://cloud.google.com/compute/docs/instances/preemptible), and provide additional features.'
          enum:
            - PREEMPTIBILITY_UNSPECIFIED
            - NON_PREEMPTIBLE
            - PREEMPTIBLE
            - SPOT
          type: string
          description: Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
        managedGroupConfig:
          $ref: '#/components/schemas/ManagedGroupConfig'
          description: Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.
          readOnly: true
        accelerators:
          type: array
          items:
            $ref: '#/components/schemas/AcceleratorConfig'
          description: Optional. The Compute Engine accelerator configuration for these instances.
      description: 'The config settings for Compute Engine resources in an instance group, such as a master or worker group.'
      id: InstanceGroupConfig
    ListJobsResponse:
      description: A list of jobs in a project.
      properties:
        jobs:
          type: array
          description: Output only. Jobs list.
          items:
            $ref: '#/components/schemas/Job'
          readOnly: true
        nextPageToken:
          type: string
          description: 'Optional. This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent ListJobsRequest.'
      id: ListJobsResponse
      type: object
    UsageMetrics:
      properties:
        shuffleStorageGbSeconds:
          description: 'Optional. Shuffle storage usage in (GB x seconds) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).'
          format: int64
          type: string
        milliDcuSeconds:
          format: int64
          type: string
          description: 'Optional. DCU (Dataproc Compute Units) usage in (milliDCU x seconds) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).'
      type: object
      id: UsageMetrics
      description: Usage metrics represent approximate total resources consumed by a workload.
    ReservationAffinity:
      type: object
      properties:
        consumeReservationType:
          type: string
          description: Optional. Type of reservation to consume
          enumDescriptions:
            - ''
            - Do not consume from any allocated capacity.
            - Consume any reservation available.
            - Must consume from a specific reservation. Must specify key value fields for specifying the reservations.
          enum:
            - TYPE_UNSPECIFIED
            - NO_RESERVATION
            - ANY_RESERVATION
            - SPECIFIC_RESERVATION
        values:
          description: Optional. Corresponds to the label values of reservation resource.
          items:
            type: string
          type: array
        key:
          type: string
          description: Optional. Corresponds to the label key of reservation resource.
      id: ReservationAffinity
      description: Reservation Affinity for consuming Zonal reservation.
    ListWorkflowTemplatesResponse:
      description: A response to a request to list workflow templates in a project.
      type: object
      id: ListWorkflowTemplatesResponse
      properties:
        templates:
          type: array
          description: Output only. WorkflowTemplates list.
          readOnly: true
          items:
            $ref: '#/components/schemas/WorkflowTemplate'
        nextPageToken:
          description: 'Output only. This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent ListWorkflowTemplatesRequest.'
          type: string
          readOnly: true
    SecurityConfig:
      id: SecurityConfig
      description: 'Security related configuration, including encryption, Kerberos, etc.'
      type: object
      properties:
        identityConfig:
          description: 'Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.'
          $ref: '#/components/schemas/IdentityConfig'
        kerberosConfig:
          $ref: '#/components/schemas/KerberosConfig'
          description: Optional. Kerberos related configuration.
    GkeNodePoolTarget:
      type: object
      properties:
        nodePool:
          type: string
          description: 'Required. The target GKE node pool. Format: ''projects/{project}/locations/{location}/clusters/{cluster}/nodePools/{node_pool}'''
        roles:
          description: Required. The roles associated with the GKE node pool.
          items:
            enumDescriptions:
              - Role is unspecified.
              - 'At least one node pool must have the DEFAULT role. Work assigned to a role that is not associated with a node pool is assigned to the node pool with the DEFAULT role. For example, work assigned to the CONTROLLER role will be assigned to the node pool with the DEFAULT role if no node pool has the CONTROLLER role.'
              - 'Run work associated with the Dataproc control plane (for example, controllers and webhooks). Very low resource requirements.'
              - Run work associated with a Spark driver of a job.
              - Run work associated with a Spark executor of a job.
            type: string
            enum:
              - ROLE_UNSPECIFIED
              - DEFAULT
              - CONTROLLER
              - SPARK_DRIVER
              - SPARK_EXECUTOR
          type: array
        nodePoolConfig:
          $ref: '#/components/schemas/GkeNodePoolConfig'
          description: 'Input only. The configuration for the GKE node pool.If specified, Dataproc attempts to create a node pool with the specified shape. If one with the same name already exists, it is verified against all specified fields. If a field differs, the virtual cluster creation will fail.If omitted, any node pool with the specified name is used. If a node pool with the specified name does not exist, Dataproc create a node pool with default values.This is an input only field. It will not be returned by the API.'
      id: GkeNodePoolTarget
      description: GKE node pools that Dataproc workloads run on.
    ListAutoscalingPoliciesResponse:
      description: A response to a request to list autoscaling policies in a project.
      id: ListAutoscalingPoliciesResponse
      properties:
        policies:
          items:
            $ref: '#/components/schemas/AutoscalingPolicy'
          type: array
          description: Output only. Autoscaling policies list.
          readOnly: true
        nextPageToken:
          readOnly: true
          description: Output only. This token is included in the response if there are more results to fetch.
          type: string
      type: object
    EndpointConfig:
      description: Endpoint config for this cluster
      properties:
        httpPorts:
          readOnly: true
          additionalProperties:
            type: string
          type: object
          description: Output only. The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true.
        enableHttpPortAccess:
          type: boolean
          description: 'Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.'
      id: EndpointConfig
      type: object
    BasicYarnAutoscalingConfig:
      id: BasicYarnAutoscalingConfig
      description: Basic autoscaling configurations for YARN.
      properties:
        scaleDownMinWorkerFraction:
          format: double
          description: 'Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.'
          type: number
        scaleUpMinWorkerFraction:
          description: 'Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.'
          type: number
          format: double
        gracefulDecommissionTimeout:
          description: 'Required. Timeout for YARN graceful decommissioning of Node Managers. Specifies the duration to wait for jobs to complete before forcefully removing workers (and potentially interrupting jobs). Only applicable to downscaling operations.Bounds: 0s, 1d.'
          type: string
          format: google-duration
        scaleUpFactor:
          description: 'Required. Fraction of average YARN pending memory in the last cooldown period for which to add workers. A scale-up factor of 1.0 will result in scaling up so that there is no pending memory remaining after the update (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling). See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.'
          type: number
          format: double
        scaleDownFactor:
          format: double
          type: number
          description: 'Required. Fraction of average YARN pending memory in the last cooldown period for which to remove workers. A scale-down factor of 1 will result in scaling down so that there is no available memory remaining after the update (more aggressive scaling). A scale-down factor of 0 disables removing workers, which can be beneficial for autoscaling a single job. See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.'
      type: object
    AutoscalingPolicy:
      type: object
      properties:
        name:
          description: 'Output only. The "resource name" of the autoscaling policy, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For projects.locations.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}'
          readOnly: true
          type: string
        basicAlgorithm:
          $ref: '#/components/schemas/BasicAutoscalingAlgorithm'
        id:
          type: string
          description: 'Required. The policy id.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.'
        secondaryWorkerConfig:
          description: Optional. Describes how the autoscaler will operate for secondary workers.
          $ref: '#/components/schemas/InstanceGroupAutoscalingPolicyConfig'
        workerConfig:
          $ref: '#/components/schemas/InstanceGroupAutoscalingPolicyConfig'
          description: Required. Describes how the autoscaler will operate for primary workers.
        labels:
          type: object
          description: 'Optional. The labels to associate with this autoscaling policy. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with an autoscaling policy.'
          additionalProperties:
            type: string
      description: Describes an autoscaling policy for Dataproc cluster autoscaler.
      id: AutoscalingPolicy
    SparkSqlJob:
      id: SparkSqlJob
      description: 'A Dataproc job for running Apache Spark SQL (https://spark.apache.org/sql/) queries.'
      type: object
      properties:
        jarFileUris:
          items:
            type: string
          type: array
          description: Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
        queryFileUri:
          type: string
          description: The HCFS URI of the script that contains SQL queries.
        properties:
          description: 'Optional. A mapping of property names to values, used to configure Spark SQL''s SparkConf. Properties that conflict with values set by the Dataproc API may be overwritten.'
          additionalProperties:
            type: string
          type: object
        queryList:
          description: A list of queries.
          $ref: '#/components/schemas/QueryList'
        loggingConfig:
          $ref: '#/components/schemas/LoggingConfig'
          description: Optional. The runtime log config for job execution.
        scriptVariables:
          additionalProperties:
            type: string
          type: object
          description: 'Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).'
    NodePool:
      description: indicating a list of workers of same type
      type: object
      id: NodePool
      properties:
        id:
          type: string
          description: Required. A unique id of the node pool. Primary and Secondary workers can be specified using special reserved ids PRIMARY_WORKER_POOL and SECONDARY_WORKER_POOL respectively. Aux node pools can be referenced using corresponding pool id.
        repairAction:
          enumDescriptions:
            - No action will be taken by default.
            - delete the specified list of nodes.
          description: Required. Repair action to take on specified resources of the node pool.
          type: string
          enum:
            - REPAIR_ACTION_UNSPECIFIED
            - DELETE
        instanceNames:
          type: array
          description: Name of instances to be repaired. These instances must belong to specified node pool.
          items:
            type: string
    JobScheduling:
      id: JobScheduling
      properties:
        maxFailuresPerHour:
          format: int32
          type: integer
          description: 'Optional. Maximum number of times per hour a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed.A job may be reported as thrashing if the driver exits with a non-zero code four times within a 10-minute window.Maximum value is 10.Note: This restartable job option is not supported in Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).'
        maxFailuresTotal:
          type: integer
          format: int32
          description: 'Optional. Maximum total number of times a driver may be restarted as a result of the driver exiting with a non-zero code. After the maximum number is reached, the job will be reported as failed.Maximum value is 240.Note: Currently, this restartable job option is not supported in Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).'
      description: Job scheduling options.
      type: object
    ClusterConfig:
      properties:
        dataprocMetricConfig:
          $ref: '#/components/schemas/DataprocMetricConfig'
          description: Optional. The config for Dataproc metrics.
        metastoreConfig:
          $ref: '#/components/schemas/MetastoreConfig'
          description: Optional. Metastore configuration.
        workerConfig:
          $ref: '#/components/schemas/InstanceGroupConfig'
          description: Optional. The Compute Engine config settings for the cluster's worker instances.
        secondaryWorkerConfig:
          $ref: '#/components/schemas/InstanceGroupConfig'
          description: Optional. The Compute Engine config settings for a cluster's secondary worker instances
        softwareConfig:
          description: Optional. The config settings for cluster software.
          $ref: '#/components/schemas/SoftwareConfig'
        gceClusterConfig:
          description: Optional. The shared Compute Engine config settings for all instances in a cluster.
          $ref: '#/components/schemas/GceClusterConfig'
        configBucket:
          type: string
          description: 'Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster''s staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.'
        initializationActions:
          description: 'Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node''s role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ "${ROLE}" == ''Master'' ]]; then ... master specific actions ... else ... worker specific actions ... fi '
          items:
            $ref: '#/components/schemas/NodeInitializationAction'
          type: array
        securityConfig:
          description: Optional. Security settings for the cluster.
          $ref: '#/components/schemas/SecurityConfig'
        tempBucket:
          description: 'Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster''s temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.'
          type: string
        autoscalingConfig:
          $ref: '#/components/schemas/AutoscalingConfig'
          description: Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.
        auxiliaryNodeGroups:
          type: array
          items:
            $ref: '#/components/schemas/AuxiliaryNodeGroup'
          description: Optional. The node group settings.
        encryptionConfig:
          description: Optional. Encryption settings for the cluster.
          $ref: '#/components/schemas/EncryptionConfig'
        endpointConfig:
          description: Optional. Port/endpoint configuration for this cluster
          $ref: '#/components/schemas/EndpointConfig'
        lifecycleConfig:
          $ref: '#/components/schemas/LifecycleConfig'
          description: Optional. Lifecycle setting for the cluster.
        masterConfig:
          description: Optional. The Compute Engine config settings for the cluster's master instance.
          $ref: '#/components/schemas/InstanceGroupConfig'
        gkeClusterConfig:
          description: 'Optional. BETA. The Kubernetes Engine config for Dataproc clusters deployed to The Kubernetes Engine config for Dataproc clusters deployed to Kubernetes. These config settings are mutually exclusive with Compute Engine-based options, such as gce_cluster_config, master_config, worker_config, secondary_worker_config, and autoscaling_config.'
          deprecated: true
          $ref: '#/components/schemas/GkeClusterConfig'
      type: object
      id: ClusterConfig
      description: The cluster config.
    TestIamPermissionsRequest:
      type: object
      description: Request message for TestIamPermissions method.
      properties:
        permissions:
          description: 'The set of permissions to check for the resource. Permissions with wildcards (such as * or storage.*) are not allowed. For more information see IAM Overview (https://cloud.google.com/iam/docs/overview#permissions).'
          items:
            type: string
          type: array
      id: TestIamPermissionsRequest
    TrinoJob:
      id: TrinoJob
      type: object
      properties:
        outputFormat:
          description: Optional. The format in which query output will be displayed. See the Trino documentation for supported output formats
          type: string
        clientTags:
          items:
            type: string
          type: array
          description: Optional. Trino client tags to attach to this query
        continueOnFailure:
          description: Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
          type: boolean
        queryList:
          description: A list of queries.
          $ref: '#/components/schemas/QueryList'
        queryFileUri:
          description: The HCFS URI of the script that contains SQL queries.
          type: string
        loggingConfig:
          $ref: '#/components/schemas/LoggingConfig'
          description: Optional. The runtime log config for job execution.
        properties:
          additionalProperties:
            type: string
          description: 'Optional. A mapping of property names to values. Used to set Trino session properties (https://trino.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Trino CLI'
          type: object
      description: 'A Dataproc job for running Trino (https://trino.io/) queries. IMPORTANT: The Dataproc Trino Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/trino) must be enabled when the cluster is created to submit a Trino job to the cluster.'
    GceClusterConfig:
      properties:
        networkUri:
          description: 'Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see Using Subnetworks (https://cloud.google.com/compute/docs/subnetworks) for more information).A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default projects/[project_id]/global/networks/default default'
          type: string
        subnetworkUri:
          type: string
          description: 'Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/[region]/subnetworks/sub0 projects/[project_id]/regions/[region]/subnetworks/sub0 sub0'
        serviceAccount:
          description: 'Optional. The Dataproc service account (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see VM Data Plane identity (https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services.If not specified, the Compute Engine default service account (https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.'
          type: string
        zoneUri:
          type: string
          description: 'Optional. The Compute Engine zone where the Dataproc cluster will be located. If omitted, the service will pick a zone in the cluster''s Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone] projects/[project_id]/zones/[zone] [zone]'
        internalIpOnly:
          type: boolean
          description: 'Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.'
        serviceAccountScopes:
          items:
            type: string
          type: array
          description: 'Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: https://www.googleapis.com/auth/cloud.useraccounts.readonly https://www.googleapis.com/auth/devstorage.read_write https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided: https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/bigtable.admin.table https://www.googleapis.com/auth/bigtable.data https://www.googleapis.com/auth/devstorage.full_control'
        confidentialInstanceConfig:
          $ref: '#/components/schemas/ConfidentialInstanceConfig'
          description: 'Optional. Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs).'
        tags:
          description: 'The Compute Engine tags to add to all instances (see Tagging instances (https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).'
          items:
            type: string
          type: array
        privateIpv6GoogleAccess:
          description: Optional. The type of IPv6 access for a cluster.
          enum:
            - PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED
            - INHERIT_FROM_SUBNETWORK
            - OUTBOUND
            - BIDIRECTIONAL
          enumDescriptions:
            - 'If unspecified, Compute Engine default behavior will apply, which is the same as INHERIT_FROM_SUBNETWORK.'
            - Private access to and from Google Services configuration inherited from the subnetwork configuration. This is the default Compute Engine behavior.
            - Enables outbound private IPv6 access to Google Services from the Dataproc cluster.
            - Enables bidirectional private IPv6 access between Google Services and the Dataproc cluster.
          type: string
        reservationAffinity:
          description: Optional. Reservation Affinity for consuming Zonal reservation.
          $ref: '#/components/schemas/ReservationAffinity'
        nodeGroupAffinity:
          $ref: '#/components/schemas/NodeGroupAffinity'
          description: Optional. Node Group Affinity for sole-tenant clusters.
        shieldedInstanceConfig:
          $ref: '#/components/schemas/ShieldedInstanceConfig'
          description: 'Optional. Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).'
        metadata:
          description: 'Optional. The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).'
          additionalProperties:
            type: string
          type: object
      id: GceClusterConfig
      description: 'Common config settings for resources of Compute Engine cluster instances, applicable to all instances in the cluster.'
      type: object
    InstanceGroupAutoscalingPolicyConfig:
      properties:
        weight:
          format: int32
          type: integer
          description: 'Optional. Weight for the instance group, which is used to determine the fraction of total workers in the cluster from this instance group. For example, if primary workers have weight 2, and secondary workers have weight 1, the cluster will have approximately 2 primary workers for each secondary worker.The cluster may not reach the specified balance if constrained by min/max bounds or other autoscaling settings. For example, if max_instances for secondary workers is 0, then only primary workers will be added. The cluster can also be out of balance when created.If weight is not set on any instance group, the cluster will default to equal weight for all groups: the cluster will attempt to maintain an equal number of workers in each group within the configured size bounds for each group. If weight is set for one group only, the cluster will default to zero weight on the unset group. For example if weight is set only on primary workers, the cluster will use primary workers only and no secondary workers.'
        minInstances:
          format: int32
          type: integer
          description: 'Optional. Minimum number of instances for this group.Primary workers - Bounds: 2, max_instances. Default: 2. Secondary workers - Bounds: 0, max_instances. Default: 0.'
        maxInstances:
          format: int32
          type: integer
          description: 'Required. Maximum number of instances for this group. Required for primary workers. Note that by default, clusters will not use secondary workers. Required for secondary workers if the minimum secondary instances is set.Primary workers - Bounds: [min_instances, ). Secondary workers - Bounds: [min_instances, ). Default: 0.'
      id: InstanceGroupAutoscalingPolicyConfig
      description: 'Configuration for the size bounds of an instance group, including its proportional size to other groups.'
      type: object
    RegexValidation:
      type: object
      id: RegexValidation
      description: Validation based on regular expressions.
      properties:
        regexes:
          type: array
          description: Required. RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient).
          items:
            type: string
    DataprocMetricConfig:
      description: Dataproc metric config.
      properties:
        metrics:
          description: Required. Metrics sources to enable.
          type: array
          items:
            $ref: '#/components/schemas/Metric'
      type: object
      id: DataprocMetricConfig
    ClusterStatus:
      properties:
        detail:
          type: string
          readOnly: true
          description: Optional. Output only. Details of cluster's state.
        substate:
          enum:
            - UNSPECIFIED
            - UNHEALTHY
            - STALE_STATUS
          type: string
          description: Output only. Additional state information that includes status reported by the agent.
          enumDescriptions:
            - The cluster substate is unknown.
            - 'The cluster is known to be in an unhealthy state (for example, critical daemons are not running or HDFS capacity is exhausted).Applies to RUNNING state.'
            - The agent-reported status is out of date (may occur if Dataproc loses communication with Agent).Applies to RUNNING state.
          readOnly: true
        state:
          description: Output only. The cluster's state.
          enum:
            - UNKNOWN
            - CREATING
            - RUNNING
            - ERROR
            - ERROR_DUE_TO_UPDATE
            - DELETING
            - UPDATING
            - STOPPING
            - STOPPED
            - STARTING
            - REPAIRING
          type: string
          enumDescriptions:
            - The cluster state is unknown.
            - The cluster is being created and set up. It is not ready for use.
            - 'The cluster is currently running and healthy. It is ready for use.Note: The cluster state changes from "creating" to "running" status after the master node(s), first two primary worker nodes (and the last primary worker node if primary workers > 2) are running.'
            - The cluster encountered an error. It is not ready for use.
            - 'The cluster has encountered an error while being updated. Jobs can be submitted to the cluster, but the cluster cannot be updated.'
            - The cluster is being deleted. It cannot be used.
            - The cluster is being updated. It continues to accept and process jobs.
            - The cluster is being stopped. It cannot be used.
            - The cluster is currently stopped. It is not ready for use.
            - The cluster is being started. It is not ready for use.
            - The cluster is being repaired. It is not ready for use.
          readOnly: true
        stateStartTime:
          description: 'Output only. Time when this state was entered (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).'
          format: google-datetime
          readOnly: true
          type: string
      id: ClusterStatus
      type: object
      description: The status of a cluster and its instances.
    SparkJob:
      properties:
        args:
          items:
            type: string
          description: 'Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.'
          type: array
        mainClass:
          type: string
          description: The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris.
        loggingConfig:
          description: Optional. The runtime log config for job execution.
          $ref: '#/components/schemas/LoggingConfig'
        jarFileUris:
          description: Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
          type: array
          items:
            type: string
        archiveUris:
          description: 'Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.'
          items:
            type: string
          type: array
        fileUris:
          description: Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
          type: array
          items:
            type: string
        mainJarFileUri:
          description: The HCFS URI of the jar file that contains the main class.
          type: string
        properties:
          description: 'Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.'
          additionalProperties:
            type: string
          type: object
      description: 'A Dataproc job for running Apache Spark (https://spark.apache.org/) applications on YARN.'
      type: object
      id: SparkJob
    TerminateSessionRequest:
      properties:
        requestId:
          type: string
          description: 'Optional. A unique ID used to identify the request. If the service receives two TerminateSessionRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.TerminateSessionRequest)s with the same ID, the second request is ignored.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The value must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
      id: TerminateSessionRequest
      description: A request to terminate an interactive session.
      type: object
    ExecutionConfig:
      id: ExecutionConfig
      type: object
      description: Execution configuration for a workload.
      properties:
        subnetworkUri:
          description: Optional. Subnetwork URI to connect workload to.
          type: string
        kmsKey:
          type: string
          description: Optional. The Cloud KMS key to use for encryption.
        serviceAccount:
          type: string
          description: Optional. Service account that used to execute workload.
        stagingBucket:
          type: string
          description: 'Optional. A Cloud Storage bucket used to stage workload dependencies, config files, and store workload output and other ephemeral data, such as Spark history files. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location according to the region where your workload is running, and then create and manage project-level, per-location staging and temporary buckets. This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.'
        idleTtl:
          type: string
          format: google-duration
          description: 'Optional. Applies to sessions only. The duration to keep the session alive while it''s idling. Exceeding this threshold causes the session to terminate. This field cannot be set on a batch workload. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). Defaults to 1 hour if not set. If both ttl and idle_ttl are specified for an interactive session, the conditions are treated as OR conditions: the workload will be terminated when it has been idle for idle_ttl or when ttl has been exceeded, whichever occurs first.'
        networkTags:
          description: Optional. Tags used for network traffic control.
          items:
            type: string
          type: array
        ttl:
          description: 'Optional. The duration after which the workload will be terminated. When the workload exceeds this duration, it will be unconditionally terminated without waiting for ongoing work to finish. If ttl is not specified for a batch workload, the workload will be allowed to run until it exits naturally (or runs forever without exiting). If ttl is not specified for an interactive session, it defaults to 24h. If ttl is not specified for a batch that uses 2.1+ runtime version, it defaults to 4h. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). If both ttl and idle_ttl are specified (for an interactive session), the conditions are treated as OR conditions: the workload will be terminated when it has been idle for idle_ttl or when ttl has been exceeded, whichever occurs first.'
          type: string
          format: google-duration
        networkUri:
          type: string
          description: Optional. Network URI to connect workload to.
    ShieldedInstanceConfig:
      description: 'Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).'
      id: ShieldedInstanceConfig
      properties:
        enableSecureBoot:
          description: Optional. Defines whether instances have Secure Boot enabled.
          type: boolean
        enableIntegrityMonitoring:
          type: boolean
          description: Optional. Defines whether instances have integrity monitoring enabled.
        enableVtpm:
          description: Optional. Defines whether instances have the vTPM enabled.
          type: boolean
      type: object
    Session:
      id: Session
      properties:
        stateHistory:
          type: array
          description: Output only. Historical state information for the session.
          items:
            $ref: '#/components/schemas/SessionStateHistory'
          readOnly: true
        sessionTemplate:
          type: string
          description: 'Optional. The session template used by the session.Only resource names including project ID and location are valid.Example: * https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/sessionTemplates/[template_id] * projects/[project_id]/locations/[dataproc_region]/sessionTemplates/[template_id]Note that the template must be in the same project and Dataproc region.'
        stateMessage:
          description: 'Output only. Session state details, such as a failure description if the state is FAILED.'
          type: string
          readOnly: true
        runtimeInfo:
          $ref: '#/components/schemas/RuntimeInfo'
          description: Output only. Runtime information about session execution.
          readOnly: true
        name:
          description: Required. The resource name of the session.
          type: string
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time when the session was created.
        state:
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - TERMINATING
            - TERMINATED
            - FAILED
          type: string
          description: Output only. A state of the session.
          readOnly: true
          enumDescriptions:
            - The session state is unknown.
            - The session is created before running.
            - The session is running.
            - The session is terminating.
            - The session is terminated successfully.
            - The session is no longer running due to an error.
        creator:
          description: Output only. The email address of the user who created the session.
          readOnly: true
          type: string
        labels:
          type: object
          description: 'Optional. The labels to associate with this session. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a session.'
          additionalProperties:
            type: string
        runtimeConfig:
          description: Optional. Runtime configuration for the session execution.
          $ref: '#/components/schemas/RuntimeConfig'
        user:
          type: string
          description: Optional. The email address of the user who owns the session.
        environmentConfig:
          $ref: '#/components/schemas/EnvironmentConfig'
          description: Optional. Environment configuration for the session execution.
        stateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time when the session entered a current state.
        uuid:
          description: Output only. A session UUID (Unique Universal Identifier). The service generates this value when it creates the session.
          readOnly: true
          type: string
        jupyterSession:
          $ref: '#/components/schemas/JupyterConfig'
          description: Optional. Jupyter session config.
      type: object
      description: 'A representation of a session in the service. Next ID: 18'
    KubernetesClusterConfig:
      type: object
      description: The configuration for running the Dataproc cluster on Kubernetes.
      id: KubernetesClusterConfig
      properties:
        kubernetesNamespace:
          type: string
          description: 'Optional. A namespace within the Kubernetes cluster to deploy into. If this namespace does not exist, it is created. If it exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it. If not specified, the name of the Dataproc Cluster is used.'
        kubernetesSoftwareConfig:
          description: Optional. The software configuration for this Dataproc cluster running on Kubernetes.
          $ref: '#/components/schemas/KubernetesSoftwareConfig'
        gkeClusterConfig:
          description: Required. The configuration for running the Dataproc cluster on GKE.
          $ref: '#/components/schemas/GkeClusterConfig'
    TemplateParameter:
      id: TemplateParameter
      description: 'A configurable parameter that replaces one or more fields in the template. Parameterizable fields: - Labels - File uris - Job properties - Job arguments - Script variables - Main class (in HadoopJob and SparkJob) - Zone (in ClusterSelector)'
      type: object
      properties:
        validation:
          $ref: '#/components/schemas/ParameterValidation'
          description: Optional. Validation rules to be applied to this parameter's value.
        description:
          type: string
          description: Optional. Brief description of the parameter. Must not exceed 1024 characters.
        fields:
          type: array
          items:
            type: string
          description: 'Required. Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter''s list of field paths.A field path is similar in syntax to a google.protobuf.FieldMask. For example, a field path that references the zone field of a workflow template''s cluster selector would be specified as placement.clusterSelector.zone.Also, field paths can reference fields using the following syntax: Values in maps can be referenced by key: labels''key'' placement.clusterSelector.clusterLabels''key'' placement.managedCluster.labels''key'' placement.clusterSelector.clusterLabels''key'' jobs''step-id''.labels''key'' Jobs in the jobs list can be referenced by step-id: jobs''step-id''.hadoopJob.mainJarFileUri jobs''step-id''.hiveJob.queryFileUri jobs''step-id''.pySparkJob.mainPythonFileUri jobs''step-id''.hadoopJob.jarFileUris0 jobs''step-id''.hadoopJob.archiveUris0 jobs''step-id''.hadoopJob.fileUris0 jobs''step-id''.pySparkJob.pythonFileUris0 Items in repeated fields can be referenced by a zero-based index: jobs''step-id''.sparkJob.args0 Other examples: jobs''step-id''.hadoopJob.properties''key'' jobs''step-id''.hadoopJob.args0 jobs''step-id''.hiveJob.scriptVariables''key'' jobs''step-id''.hadoopJob.mainJarFileUri placement.clusterSelector.zoneIt may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid: placement.clusterSelector.clusterLabels jobs''step-id''.sparkJob.args'
        name:
          type: string
          description: 'Required. Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.'
    ListOperationsResponse:
      type: object
      properties:
        operations:
          type: array
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          type: string
          description: The standard List next-page token.
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
    ClusterOperationStatus:
      id: ClusterOperationStatus
      description: The status of the operation.
      properties:
        state:
          readOnly: true
          enum:
            - UNKNOWN
            - PENDING
            - RUNNING
            - DONE
          enumDescriptions:
            - Unused.
            - The operation has been created.
            - The operation is running.
            - The operation is done; either cancelled or completed.
          type: string
          description: Output only. A message containing the operation state.
        details:
          readOnly: true
          description: Output only. A message containing any operation metadata details.
          type: string
        stateStartTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time this state was entered.
          type: string
        innerState:
          readOnly: true
          type: string
          description: Output only. A message containing the detailed operation state.
      type: object
    SessionTemplate:
      properties:
        description:
          type: string
          description: Optional. Brief description of the template.
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time when the template was created.
        runtimeConfig:
          $ref: '#/components/schemas/RuntimeConfig'
          description: Optional. Runtime configuration for session execution.
        labels:
          type: object
          description: 'Optional. The labels to associate with sessions created using this template. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a session.'
          additionalProperties:
            type: string
        name:
          description: Required. The resource name of the session template.
          type: string
        environmentConfig:
          description: Optional. Environment configuration for session execution.
          $ref: '#/components/schemas/EnvironmentConfig'
        creator:
          description: Output only. The email address of the user who created the template.
          readOnly: true
          type: string
        jupyterSession:
          description: Optional. Jupyter session config.
          $ref: '#/components/schemas/JupyterConfig'
        updateTime:
          description: Output only. The time template was last updated.
          readOnly: true
          type: string
          format: google-datetime
      description: 'A representation of a session template in the service. Next ID: 12'
      type: object
      id: SessionTemplate
    AcceleratorConfig:
      type: object
      description: 'Specifies the type and number of accelerator cards attached to the instances of an instance. See GPUs on Compute Engine (https://cloud.google.com/compute/docs/gpus/).'
      id: AcceleratorConfig
      properties:
        acceleratorCount:
          format: int32
          type: integer
          description: The number of the accelerator cards of this type exposed to this instance.
        acceleratorTypeUri:
          description: 'Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-k80 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-k80 nvidia-tesla-k80Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-k80.'
          type: string
    JupyterConfig:
      properties:
        kernel:
          description: Optional. Kernel
          enum:
            - KERNEL_UNSPECIFIED
            - PYTHON
            - SCALA
          type: string
          enumDescriptions:
            - The kernel is unknown.
            - Python kernel.
            - Scala kernel.
        displayName:
          type: string
          description: 'Optional. Display name, shown in the Jupyter kernelspec card.'
      id: JupyterConfig
      type: object
      description: Jupyter configuration for an interactive session.
    SparkRJob:
      type: object
      properties:
        args:
          description: 'Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.'
          type: array
          items:
            type: string
        archiveUris:
          type: array
          description: 'Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.'
          items:
            type: string
        loggingConfig:
          description: Optional. The runtime log config for job execution.
          $ref: '#/components/schemas/LoggingConfig'
        mainRFileUri:
          type: string
          description: Required. The HCFS URI of the main R file to use as the driver. Must be a .R file.
        properties:
          additionalProperties:
            type: string
          description: 'Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.'
          type: object
        fileUris:
          items:
            type: string
          description: Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
          type: array
      description: 'A Dataproc job for running Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) applications on YARN.'
      id: SparkRJob
    GkeNodeConfig:
      properties:
        minCpuPlatform:
          description: 'Optional. Minimum CPU platform (https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as "Intel Haswell"` or Intel Sandy Bridge".'
          type: string
        accelerators:
          type: array
          description: 'Optional. A list of hardware accelerators (https://cloud.google.com/compute/docs/gpus) to attach to each node.'
          items:
            $ref: '#/components/schemas/GkeNodePoolAcceleratorConfig'
        localSsdCount:
          format: int32
          description: 'Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see Adding Local SSDs (https://cloud.google.com/compute/docs/disks/local-ssd)).'
          type: integer
        bootDiskKmsKey:
          description: 'Optional. The Customer Managed Encryption Key (CMEK) (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}'
          type: string
        machineType:
          description: 'Optional. The name of a Compute Engine machine type (https://cloud.google.com/compute/docs/machine-types).'
          type: string
        spot:
          type: boolean
          description: 'Optional. Whether the nodes are created as Spot VM instances (https://cloud.google.com/compute/docs/instances/spot). Spot VMs are the latest update to legacy preemptible VMs. Spot VMs do not have a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).'
        preemptible:
          description: 'Optional. Whether the nodes are created as legacy preemptible VM instances (https://cloud.google.com/compute/docs/instances/preemptible). Also see Spot VMs, preemptible VM instances without a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).'
          type: boolean
      type: object
      description: Parameters that describe cluster nodes.
      id: GkeNodeConfig
    SparkBatch:
      description: 'A configuration for running an Apache Spark (https://spark.apache.org/) batch workload.'
      properties:
        archiveUris:
          type: array
          description: 'Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.'
          items:
            type: string
        mainJarFileUri:
          description: Optional. The HCFS URI of the jar file that contains the main class.
          type: string
        jarFileUris:
          description: Optional. HCFS URIs of jar files to add to the classpath of the Spark driver and tasks.
          items:
            type: string
          type: array
        mainClass:
          type: string
          description: Optional. The name of the driver main class. The jar file that contains the class must be in the classpath or specified in jar_file_uris.
        fileUris:
          items:
            type: string
          description: Optional. HCFS URIs of files to be placed in the working directory of each executor.
          type: array
        args:
          description: 'Optional. The arguments to pass to the driver. Do not include arguments that can be set as batch properties, such as --conf, since a collision can occur that causes an incorrect batch submission.'
          items:
            type: string
          type: array
      id: SparkBatch
      type: object
    Operation:
      id: Operation
      type: object
      properties:
        done:
          type: boolean
          description: 'If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.'
        metadata:
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        response:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.'
          type: object
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.'
          type: string
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
      description: This resource represents a long-running operation that is the result of a network API call.
    Job:
      description: A Dataproc job resource.
      properties:
        prestoJob:
          $ref: '#/components/schemas/PrestoJob'
          description: Optional. Job is a Presto job.
        hadoopJob:
          description: Optional. Job is a Hadoop job.
          $ref: '#/components/schemas/HadoopJob'
        reference:
          $ref: '#/components/schemas/JobReference'
          description: 'Optional. The fully qualified reference to the job, which can be used to obtain the equivalent REST path of the job resource. If this property is not specified when a job is created, the server generates a job_id.'
        sparkRJob:
          description: Optional. Job is a SparkR job.
          $ref: '#/components/schemas/SparkRJob'
        yarnApplications:
          type: array
          items:
            $ref: '#/components/schemas/YarnApplication'
          readOnly: true
          description: 'Output only. The collection of YARN applications spun up by this job.Beta Feature: This report is available for testing purposes only. It may be changed before final release.'
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'Optional. The labels to associate with this job. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a job.'
        pigJob:
          description: Optional. Job is a Pig job.
          $ref: '#/components/schemas/PigJob'
        driverControlFilesUri:
          description: 'Output only. If present, the location of miscellaneous control files which may be used as part of job setup and handling. If not present, control files may be placed in the same location as driver_output_uri.'
          readOnly: true
          type: string
        done:
          description: 'Output only. Indicates whether the job is completed. If the value is false, the job is still in progress. If true, the job is completed, and status.state field will indicate if it was successful, failed, or cancelled.'
          type: boolean
          readOnly: true
        scheduling:
          $ref: '#/components/schemas/JobScheduling'
          description: Optional. Job scheduling configuration.
        sparkSqlJob:
          $ref: '#/components/schemas/SparkSqlJob'
          description: Optional. Job is a SparkSql job.
        status:
          description: Output only. The job status. Additional application-specific status information may be contained in the type_job and yarn_applications fields.
          $ref: '#/components/schemas/JobStatus'
          readOnly: true
        placement:
          $ref: '#/components/schemas/JobPlacement'
          description: 'Required. Job information, including how, when, and where to run the job.'
        driverSchedulingConfig:
          description: Optional. Driver scheduling configuration.
          $ref: '#/components/schemas/DriverSchedulingConfig'
        trinoJob:
          $ref: '#/components/schemas/TrinoJob'
          description: Optional. Job is a Trino job.
        statusHistory:
          description: Output only. The previous job status.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/JobStatus'
        hiveJob:
          description: Optional. Job is a Hive job.
          $ref: '#/components/schemas/HiveJob'
        jobUuid:
          type: string
          description: Output only. A UUID that uniquely identifies a job within the project over time. This is in contrast to a user-settable reference.job_id that may be reused over time.
          readOnly: true
        sparkJob:
          $ref: '#/components/schemas/SparkJob'
          description: Optional. Job is a Spark job.
        flinkJob:
          $ref: '#/components/schemas/FlinkJob'
          description: Optional. Job is a Flink job.
        pysparkJob:
          description: Optional. Job is a PySpark job.
          $ref: '#/components/schemas/PySparkJob'
        driverOutputResourceUri:
          description: Output only. A URI pointing to the location of the stdout of the job's driver program.
          readOnly: true
          type: string
      id: Job
      type: object
    WorkflowTemplate:
      id: WorkflowTemplate
      type: object
      description: A Dataproc workflow template resource.
      properties:
        jobs:
          description: Required. The Directed Acyclic Graph of Jobs to submit.
          items:
            $ref: '#/components/schemas/OrderedJob'
          type: array
        placement:
          description: Required. WorkflowTemplate scheduling information.
          $ref: '#/components/schemas/WorkflowTemplatePlacement'
        name:
          description: 'Output only. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}'
          readOnly: true
          type: string
        version:
          description: 'Optional. Used to perform a consistent read-modify-write.This field should be left blank for a CreateWorkflowTemplate request. It is required for an UpdateWorkflowTemplate request, and must match the current server version. A typical update template flow would fetch the current template with a GetWorkflowTemplate request, which will return the current template with the version field filled in with the current server version. The user updates other fields in the template, then returns it as part of the UpdateWorkflowTemplate request.'
          format: int32
          type: integer
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time template was created.
        id:
          type: string
        labels:
          description: 'Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created by the workflow instance.Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).No more than 32 labels can be associated with a template.'
          additionalProperties:
            type: string
          type: object
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/TemplateParameter'
          description: Optional. Template parameters whose values are substituted into the template. Values for parameters must be provided when the template is instantiated.
        dagTimeout:
          type: string
          format: google-duration
          description: 'Optional. Timeout duration for the DAG of jobs, expressed in seconds (see JSON representation of duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). The timeout duration must be from 10 minutes ("600s") to 24 hours ("86400s"). The timer begins when the first job is submitted. If the workflow is running at the end of the timeout period, any remaining jobs are cancelled, the workflow is ended, and if the workflow was running on a managed cluster, the cluster is deleted.'
        updateTime:
          description: Output only. The time template was last updated.
          readOnly: true
          type: string
          format: google-datetime
    ParameterValidation:
      id: ParameterValidation
      type: object
      properties:
        regex:
          $ref: '#/components/schemas/RegexValidation'
          description: Validation based on regular expressions.
        values:
          $ref: '#/components/schemas/ValueValidation'
          description: Validation based on a list of allowed values.
      description: Configuration for parameter validation.
    AuxiliaryNodeGroup:
      id: AuxiliaryNodeGroup
      type: object
      description: Node group identification and configuration information.
      properties:
        nodeGroup:
          description: Required. Node group configuration.
          $ref: '#/components/schemas/NodeGroup'
        nodeGroupId:
          description: 'Optional. A node group ID. Generated if not specified.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of from 3 to 33 characters.'
          type: string
    WorkflowTemplatePlacement:
      type: object
      id: WorkflowTemplatePlacement
      description: Specifies workflow execution target.Either managed_cluster or cluster_selector is required.
      properties:
        managedCluster:
          description: A cluster that is managed by the workflow.
          $ref: '#/components/schemas/ManagedCluster'
        clusterSelector:
          $ref: '#/components/schemas/ClusterSelector'
          description: Optional. A selector that chooses target cluster for jobs based on metadata.The selector is evaluated at the time each job is submitted.
    GkeNodePoolAutoscalingConfig:
      description: GkeNodePoolAutoscaling contains information the cluster autoscaler needs to adjust the size of the node pool to the current cluster usage.
      type: object
      id: GkeNodePoolAutoscalingConfig
      properties:
        maxNodeCount:
          description: 'The maximum number of nodes in the node pool. Must be >= min_node_count, and must be > 0. Note: Quota must be sufficient to scale up the cluster.'
          format: int32
          type: integer
        minNodeCount:
          description: The minimum number of nodes in the node pool. Must be >= 0 and <= max_node_count.
          type: integer
          format: int32
    StartClusterRequest:
      id: StartClusterRequest
      type: object
      properties:
        clusterUuid:
          type: string
          description: Optional. Specifying the cluster_uuid means the RPC will fail (with error NOT_FOUND) if a cluster with the specified UUID does not exist.
        requestId:
          type: string
          description: 'Optional. A unique ID used to identify the request. If the server receives two StartClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.StartClusterRequest)s with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
      description: A request to start a cluster.
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    batches:
      id: google.dataproc.batches
      name: batches
      title: Batches
      methods:
        projects_locations_batches_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batches~1{batchesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_batches_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batches~1{batchesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_batches_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batches/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.batches
        _projects_locations_batches_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batches/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_batches_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batches/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/batches/methods/projects_locations_batches_get'
          - $ref: '#/components/x-stackQL-resources/batches/methods/projects_locations_batches_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/batches/methods/projects_locations_batches_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/batches/methods/projects_locations_batches_delete'
    workflow_templates_iam_policies:
      id: google.dataproc.workflow_templates_iam_policies
      name: workflow_templates_iam_policies
      title: Workflow Templates Iam Policies
      methods:
        projects_locations_workflow_templates_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates~1{workflowTemplatesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workflow_templates_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates~1{workflowTemplatesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workflow_templates_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates~1{workflowTemplatesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates~1{workflowTemplatesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates~1{workflowTemplatesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates~1{workflowTemplatesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_templates_iam_policies/methods/projects_locations_workflow_templates_get_iam_policy'
          - $ref: '#/components/x-stackQL-resources/workflow_templates_iam_policies/methods/projects_regions_workflow_templates_get_iam_policy'
        insert: []
        update: []
        delete: []
    workflow_templates:
      id: google.dataproc.workflow_templates
      name: workflow_templates
      title: Workflow Templates
      methods:
        projects_locations_workflow_templates_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates~1{workflowTemplatesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workflow_templates_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates~1{workflowTemplatesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workflow_templates_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates~1{workflowTemplatesId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workflow_templates_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workflow_templates_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.templates
        _projects_locations_workflow_templates_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workflow_templates_instantiate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates~1{workflowTemplatesId}:instantiate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_workflow_templates_instantiate_inline:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflowTemplates:instantiateInline/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_instantiate_inline:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates:instantiateInline/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates~1{workflowTemplatesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates~1{workflowTemplatesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates~1{workflowTemplatesId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.templates
        _projects_regions_workflow_templates_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_workflow_templates_instantiate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1workflowTemplates~1{workflowTemplatesId}:instantiate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_templates/methods/projects_locations_workflow_templates_get'
          - $ref: '#/components/x-stackQL-resources/workflow_templates/methods/projects_locations_workflow_templates_list'
          - $ref: '#/components/x-stackQL-resources/workflow_templates/methods/projects_regions_workflow_templates_get'
          - $ref: '#/components/x-stackQL-resources/workflow_templates/methods/projects_regions_workflow_templates_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/workflow_templates/methods/projects_locations_workflow_templates_create'
          - $ref: '#/components/x-stackQL-resources/workflow_templates/methods/projects_regions_workflow_templates_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workflow_templates/methods/projects_locations_workflow_templates_delete'
          - $ref: '#/components/x-stackQL-resources/workflow_templates/methods/projects_regions_workflow_templates_delete'
    sessions:
      id: google.dataproc.sessions
      name: sessions
      title: Sessions
      methods:
        projects_locations_sessions_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sessions~1{sessionsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sessions_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sessions~1{sessionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sessions_terminate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sessions~1{sessionsId}:terminate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sessions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sessions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sessions
        _projects_locations_sessions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sessions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sessions_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sessions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sessions_inject_credentials:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sessions~1{sessionsId}:injectCredentials/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sessions/methods/projects_locations_sessions_get'
          - $ref: '#/components/x-stackQL-resources/sessions/methods/projects_locations_sessions_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sessions/methods/projects_locations_sessions_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sessions/methods/projects_locations_sessions_delete'
    session_templates:
      id: google.dataproc.session_templates
      name: session_templates
      title: Session Templates
      methods:
        projects_locations_session_templates_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sessionTemplates~1{sessionTemplatesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_session_templates_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sessionTemplates~1{sessionTemplatesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_session_templates_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sessionTemplates~1{sessionTemplatesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_session_templates_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sessionTemplates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_session_templates_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sessionTemplates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sessionTemplates
        _projects_locations_session_templates_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sessionTemplates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/session_templates/methods/projects_locations_session_templates_get'
          - $ref: '#/components/x-stackQL-resources/session_templates/methods/projects_locations_session_templates_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/session_templates/methods/projects_locations_session_templates_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/session_templates/methods/projects_locations_session_templates_delete'
    operations:
      id: google.dataproc.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_regions_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_regions_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_regions_operations_get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_regions_operations_delete'
    autoscaling_policies:
      id: google.dataproc.autoscaling_policies
      name: autoscaling_policies
      title: Autoscaling Policies
      methods:
        projects_locations_autoscaling_policies_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autoscalingPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.policies
        _projects_locations_autoscaling_policies_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autoscalingPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_autoscaling_policies_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autoscalingPolicies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_autoscaling_policies_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autoscalingPolicies~1{autoscalingPoliciesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_autoscaling_policies_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autoscalingPolicies~1{autoscalingPoliciesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_autoscaling_policies_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autoscalingPolicies~1{autoscalingPoliciesId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_autoscaling_policies_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1autoscalingPolicies~1{autoscalingPoliciesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_autoscaling_policies_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1autoscalingPolicies~1{autoscalingPoliciesId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_autoscaling_policies_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1autoscalingPolicies~1{autoscalingPoliciesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_autoscaling_policies_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1autoscalingPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.policies
        _projects_regions_autoscaling_policies_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1autoscalingPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_autoscaling_policies_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1autoscalingPolicies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/autoscaling_policies/methods/projects_locations_autoscaling_policies_list'
          - $ref: '#/components/x-stackQL-resources/autoscaling_policies/methods/projects_locations_autoscaling_policies_get'
          - $ref: '#/components/x-stackQL-resources/autoscaling_policies/methods/projects_regions_autoscaling_policies_get'
          - $ref: '#/components/x-stackQL-resources/autoscaling_policies/methods/projects_regions_autoscaling_policies_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/autoscaling_policies/methods/projects_locations_autoscaling_policies_create'
          - $ref: '#/components/x-stackQL-resources/autoscaling_policies/methods/projects_regions_autoscaling_policies_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/autoscaling_policies/methods/projects_locations_autoscaling_policies_delete'
          - $ref: '#/components/x-stackQL-resources/autoscaling_policies/methods/projects_regions_autoscaling_policies_delete'
    autoscaling_policies_iam_policies:
      id: google.dataproc.autoscaling_policies_iam_policies
      name: autoscaling_policies_iam_policies
      title: Autoscaling Policies Iam Policies
      methods:
        projects_locations_autoscaling_policies_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autoscalingPolicies~1{autoscalingPoliciesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_autoscaling_policies_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autoscalingPolicies~1{autoscalingPoliciesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_autoscaling_policies_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autoscalingPolicies~1{autoscalingPoliciesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_autoscaling_policies_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1autoscalingPolicies~1{autoscalingPoliciesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_autoscaling_policies_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1autoscalingPolicies~1{autoscalingPoliciesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_autoscaling_policies_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1autoscalingPolicies~1{autoscalingPoliciesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/autoscaling_policies_iam_policies/methods/projects_locations_autoscaling_policies_get_iam_policy'
          - $ref: '#/components/x-stackQL-resources/autoscaling_policies_iam_policies/methods/projects_regions_autoscaling_policies_get_iam_policy'
        insert: []
        update: []
        delete: []
    operations_iam_policies:
      id: google.dataproc.operations_iam_policies
      name: operations_iam_policies
      title: Operations Iam Policies
      methods:
        projects_regions_operations_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1operations~1{operationsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_operations_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1operations~1{operationsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_operations_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1operations~1{operationsId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations_iam_policies/methods/projects_regions_operations_get_iam_policy'
        insert: []
        update: []
        delete: []
    jobs:
      id: google.dataproc.jobs
      name: jobs
      title: Jobs
      methods:
        projects_regions_jobs_submit:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1jobs:submit/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_jobs_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1jobs~1{jobId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_jobs_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1jobs~1{jobId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_jobs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1jobs~1{jobId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_jobs_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1jobs~1{jobId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_jobs_submit_as_operation:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1jobs:submitAsOperation/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_jobs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobs
        _projects_regions_jobs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_regions_jobs_get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_regions_jobs_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_regions_jobs_delete'
    jobs_iam_policies:
      id: google.dataproc.jobs_iam_policies
      name: jobs_iam_policies
      title: Jobs Iam Policies
      methods:
        projects_regions_jobs_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1jobs~1{jobsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_jobs_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1jobs~1{jobsId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_jobs_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1jobs~1{jobsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs_iam_policies/methods/projects_regions_jobs_get_iam_policy'
        insert: []
        update: []
        delete: []
    node_groups:
      id: google.dataproc.node_groups
      name: node_groups
      title: Node Groups
      methods:
        projects_regions_clusters_node_groups_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1clusters~1{clustersId}~1nodeGroups~1{nodeGroupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_node_groups_resize:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1clusters~1{clustersId}~1nodeGroups~1{nodeGroupsId}:resize/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_node_groups_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1clusters~1{clustersId}~1nodeGroups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/node_groups/methods/projects_regions_clusters_node_groups_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/node_groups/methods/projects_regions_clusters_node_groups_create'
        update: []
        delete: []
    clusters:
      id: google.dataproc.clusters
      name: clusters
      title: Clusters
      methods:
        projects_regions_clusters_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1clusters~1{clusterName}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1clusters~1{clusterName}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1clusters~1{clusterName}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_stop:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1clusters~1{clusterName}:stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1clusters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1clusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.clusters
        _projects_regions_clusters_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1clusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_diagnose:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1clusters~1{clusterName}:diagnose/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_inject_credentials:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1clusters~1{clustersId}:injectCredentials/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_repair:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1clusters~1{clusterName}:repair/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_start:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1regions~1{region}~1clusters~1{clusterName}:start/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/projects_regions_clusters_get'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/projects_regions_clusters_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/projects_regions_clusters_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/projects_regions_clusters_delete'
    clusters_iam_policies:
      id: google.dataproc.clusters_iam_policies
      name: clusters_iam_policies
      title: Clusters Iam Policies
      methods:
        projects_regions_clusters_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1clusters~1{clustersId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1clusters~1{clustersId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_regions_clusters_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1regions~1{regionsId}~1clusters~1{clustersId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters_iam_policies/methods/projects_regions_clusters_get_iam_policy'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/batches/{batchesId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
    delete:
      description: 'Deletes the batch workload resource. If the batch is not in a CANCELLED, SUCCEEDED or FAILED State, the delete operation fails and the response returns FAILED_PRECONDITION.'
      operationId: dataproc.projects.locations.batches.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: batchesId
          required: true
          schema:
            type: string
      x-stackQL-resource: batches
      x-stackQL-method: projects_locations_batches_delete
      x-stackQL-verb: delete
    get:
      description: Gets the batch workload resource representation.
      operationId: dataproc.projects.locations.batches.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: batchesId
          required: true
          schema:
            type: string
      x-stackQL-resource: batches
      x-stackQL-method: projects_locations_batches_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/batches':
    parameters: *ref_1
    get:
      description: Lists batch workloads.
      operationId: dataproc.projects.locations.batches.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: batches
      x-stackQL-method: projects_locations_batches_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.batches
    post:
      description: Creates a batch workload that executes asynchronously.
      operationId: dataproc.projects.locations.batches.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Batch'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: batchId
          schema:
            type: string
      x-stackQL-resource: batches
      x-stackQL-method: projects_locations_batches_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataproc.projects.locations.workflowTemplates.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates_iam_policies
      x-stackQL-method: projects_locations_workflow_templates_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}':
    parameters: *ref_1
    get:
      description: Retrieves the latest workflow template.Can retrieve previously instantiated template by specifying optional version parameter.
      operationId: dataproc.projects.locations.workflowTemplates.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: version
          schema:
            type: integer
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_locations_workflow_templates_get
      x-stackQL-verb: select
    delete:
      description: Deletes a workflow template. It does not cancel in-progress workflows.
      operationId: dataproc.projects.locations.workflowTemplates.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: version
          schema:
            type: integer
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_locations_workflow_templates_delete
      x-stackQL-verb: delete
    put:
      description: Updates (replaces) workflow template. The updated template must contain version that matches the current server version.
      operationId: dataproc.projects.locations.workflowTemplates.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTemplate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_locations_workflow_templates_update
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates':
    parameters: *ref_1
    post:
      description: Creates new workflow template.
      operationId: dataproc.projects.locations.workflowTemplates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTemplate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_locations_workflow_templates_create
      x-stackQL-verb: insert
    get:
      description: Lists workflows that match the specified filter in the request.
      operationId: dataproc.projects.locations.workflowTemplates.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkflowTemplatesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_locations_workflow_templates_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.templates
  '/v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataproc.projects.locations.workflowTemplates.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates_iam_policies
      x-stackQL-method: projects_locations_workflow_templates_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataproc.projects.locations.workflowTemplates.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates_iam_policies
      x-stackQL-method: projects_locations_workflow_templates_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}:instantiate':
    parameters: *ref_1
    post:
      description: 'Instantiates a template and begins execution.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On successful completion, Operation.response will be Empty.'
      operationId: dataproc.projects.locations.workflowTemplates.instantiate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstantiateWorkflowTemplateRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_locations_workflow_templates_instantiate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates:instantiateInline':
    parameters: *ref_1
    post:
      description: 'Instantiates a template and begins execution.This method is equivalent to executing the sequence CreateWorkflowTemplate, InstantiateWorkflowTemplate, DeleteWorkflowTemplate.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On successful completion, Operation.response will be Empty.'
      operationId: dataproc.projects.locations.workflowTemplates.instantiateInline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTemplate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_locations_workflow_templates_instantiate_inline
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/sessions/{sessionsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes the interactive session resource. If the session is not in terminal state, it will be terminated and deleted afterwards.'
      operationId: dataproc.projects.locations.sessions.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: sessions
      x-stackQL-method: projects_locations_sessions_delete
      x-stackQL-verb: delete
    get:
      description: Gets the resource representation for an interactive session.
      operationId: dataproc.projects.locations.sessions.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: sessions
      x-stackQL-method: projects_locations_sessions_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/sessions/{sessionsId}:terminate':
    parameters: *ref_1
    post:
      description: Terminates the interactive session.
      operationId: dataproc.projects.locations.sessions.terminate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminateSessionRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: sessions
      x-stackQL-method: projects_locations_sessions_terminate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/sessions':
    parameters: *ref_1
    get:
      description: Lists interactive sessions.
      operationId: dataproc.projects.locations.sessions.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSessionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: sessions
      x-stackQL-method: projects_locations_sessions_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.sessions
    post:
      description: Create an interactive session asynchronously.
      operationId: dataproc.projects.locations.sessions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Session'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: sessionId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: sessions
      x-stackQL-method: projects_locations_sessions_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/sessions/{sessionsId}:injectCredentials':
    parameters: *ref_1
    post:
      description: Inject Credentials in the interactive session.
      operationId: dataproc.projects.locations.sessions.injectCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InjectSessionCredentialsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: sessions
      x-stackQL-method: projects_locations_sessions_inject_credentials
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/sessionTemplates/{sessionTemplatesId}':
    parameters: *ref_1
    patch:
      description: 'Updates the session template, synchronously.Disable check for update_mask, because all updates will be full replacements.'
      operationId: dataproc.projects.locations.sessionTemplates.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionTemplate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: session_templates
      x-stackQL-method: projects_locations_session_templates_patch
      x-stackQL-verb: exec
    get:
      description: Gets the resource representation for a session template.
      operationId: dataproc.projects.locations.sessionTemplates.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: session_templates
      x-stackQL-method: projects_locations_session_templates_get
      x-stackQL-verb: select
    delete:
      description: Deletes a session template.
      operationId: dataproc.projects.locations.sessionTemplates.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: session_templates
      x-stackQL-method: projects_locations_session_templates_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/sessionTemplates':
    parameters: *ref_1
    post:
      description: 'Create an session template, synchronously.'
      operationId: dataproc.projects.locations.sessionTemplates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionTemplate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: session_templates
      x-stackQL-method: projects_locations_session_templates_create
      x-stackQL-verb: insert
    get:
      description: Lists session templates.
      operationId: dataproc.projects.locations.sessionTemplates.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSessionTemplatesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: session_templates
      x-stackQL-method: projects_locations_session_templates_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.sessionTemplates
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns UNIMPLEMENTED.'
      operationId: dataproc.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: dataproc.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_get
      x-stackQL-verb: select
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns google.rpc.Code.UNIMPLEMENTED.'
      operationId: dataproc.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.'
      operationId: dataproc.projects.locations.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies':
    parameters: *ref_1
    get:
      description: Lists autoscaling policies in the project.
      operationId: dataproc.projects.locations.autoscalingPolicies.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAutoscalingPoliciesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_locations_autoscaling_policies_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.policies
    post:
      description: Creates new autoscaling policy.
      operationId: dataproc.projects.locations.autoscalingPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoscalingPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscalingPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_locations_autoscaling_policies_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies/{autoscalingPoliciesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataproc.projects.locations.autoscalingPolicies.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies_iam_policies
      x-stackQL-method: projects_locations_autoscaling_policies_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies/{autoscalingPoliciesId}':
    parameters: *ref_1
    get:
      description: Retrieves autoscaling policy.
      operationId: dataproc.projects.locations.autoscalingPolicies.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscalingPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_locations_autoscaling_policies_get
      x-stackQL-verb: select
    delete:
      description: Deletes an autoscaling policy. It is an error to delete an autoscaling policy that is in use by one or more clusters.
      operationId: dataproc.projects.locations.autoscalingPolicies.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_locations_autoscaling_policies_delete
      x-stackQL-verb: delete
    put:
      description: 'Updates (replaces) autoscaling policy.Disabled check for update_mask, because all updates will be full replacements.'
      operationId: dataproc.projects.locations.autoscalingPolicies.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoscalingPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscalingPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_locations_autoscaling_policies_update
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies/{autoscalingPoliciesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataproc.projects.locations.autoscalingPolicies.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies_iam_policies
      x-stackQL-method: projects_locations_autoscaling_policies_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies/{autoscalingPoliciesId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataproc.projects.locations.autoscalingPolicies.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies_iam_policies
      x-stackQL-method: projects_locations_autoscaling_policies_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies/{autoscalingPoliciesId}':
    parameters: *ref_1
    delete:
      description: Deletes an autoscaling policy. It is an error to delete an autoscaling policy that is in use by one or more clusters.
      operationId: dataproc.projects.regions.autoscalingPolicies.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_regions_autoscaling_policies_delete
      x-stackQL-verb: delete
    put:
      description: 'Updates (replaces) autoscaling policy.Disabled check for update_mask, because all updates will be full replacements.'
      operationId: dataproc.projects.regions.autoscalingPolicies.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoscalingPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscalingPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_regions_autoscaling_policies_update
      x-stackQL-verb: exec
    get:
      description: Retrieves autoscaling policy.
      operationId: dataproc.projects.regions.autoscalingPolicies.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscalingPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_regions_autoscaling_policies_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies':
    parameters: *ref_1
    get:
      description: Lists autoscaling policies in the project.
      operationId: dataproc.projects.regions.autoscalingPolicies.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAutoscalingPoliciesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_regions_autoscaling_policies_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.policies
    post:
      description: Creates new autoscaling policy.
      operationId: dataproc.projects.regions.autoscalingPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoscalingPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscalingPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies
      x-stackQL-method: projects_regions_autoscaling_policies_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies/{autoscalingPoliciesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataproc.projects.regions.autoscalingPolicies.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies_iam_policies
      x-stackQL-method: projects_regions_autoscaling_policies_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies/{autoscalingPoliciesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataproc.projects.regions.autoscalingPolicies.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies_iam_policies
      x-stackQL-method: projects_regions_autoscaling_policies_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies/{autoscalingPoliciesId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataproc.projects.regions.autoscalingPolicies.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: autoscalingPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: autoscaling_policies_iam_policies
      x-stackQL-method: projects_regions_autoscaling_policies_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/regions/{regionsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns UNIMPLEMENTED.'
      operationId: dataproc.projects.regions.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_regions_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataproc.projects.regions.operations.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations_iam_policies
      x-stackQL-method: projects_regions_operations_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataproc.projects.regions.operations.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations_iam_policies
      x-stackQL-method: projects_regions_operations_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns google.rpc.Code.UNIMPLEMENTED.'
      operationId: dataproc.projects.regions.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_regions_operations_delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: dataproc.projects.regions.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_regions_operations_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataproc.projects.regions.operations.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations_iam_policies
      x-stackQL-method: projects_regions_operations_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.'
      operationId: dataproc.projects.regions.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_regions_operations_cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates:instantiateInline':
    parameters: *ref_1
    post:
      description: 'Instantiates a template and begins execution.This method is equivalent to executing the sequence CreateWorkflowTemplate, InstantiateWorkflowTemplate, DeleteWorkflowTemplate.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On successful completion, Operation.response will be Empty.'
      operationId: dataproc.projects.regions.workflowTemplates.instantiateInline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTemplate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_regions_workflow_templates_instantiate_inline
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}':
    parameters: *ref_1
    get:
      description: Retrieves the latest workflow template.Can retrieve previously instantiated template by specifying optional version parameter.
      operationId: dataproc.projects.regions.workflowTemplates.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: version
          schema:
            type: integer
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_regions_workflow_templates_get
      x-stackQL-verb: select
    delete:
      description: Deletes a workflow template. It does not cancel in-progress workflows.
      operationId: dataproc.projects.regions.workflowTemplates.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: version
          schema:
            type: integer
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_regions_workflow_templates_delete
      x-stackQL-verb: delete
    put:
      description: Updates (replaces) workflow template. The updated template must contain version that matches the current server version.
      operationId: dataproc.projects.regions.workflowTemplates.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTemplate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_regions_workflow_templates_update
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates':
    parameters: *ref_1
    get:
      description: Lists workflows that match the specified filter in the request.
      operationId: dataproc.projects.regions.workflowTemplates.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkflowTemplatesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_regions_workflow_templates_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.templates
    post:
      description: Creates new workflow template.
      operationId: dataproc.projects.regions.workflowTemplates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTemplate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_regions_workflow_templates_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataproc.projects.regions.workflowTemplates.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates_iam_policies
      x-stackQL-method: projects_regions_workflow_templates_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataproc.projects.regions.workflowTemplates.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates_iam_policies
      x-stackQL-method: projects_regions_workflow_templates_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataproc.projects.regions.workflowTemplates.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates_iam_policies
      x-stackQL-method: projects_regions_workflow_templates_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}:instantiate':
    parameters: *ref_1
    post:
      description: 'Instantiates a template and begins execution.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On successful completion, Operation.response will be Empty.'
      operationId: dataproc.projects.regions.workflowTemplates.instantiate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstantiateWorkflowTemplateRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflow_templates
      x-stackQL-method: projects_regions_workflow_templates_instantiate
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/regions/{region}/jobs:submit':
    parameters: *ref_1
    post:
      description: Submits a job to a cluster.
      operationId: dataproc.projects.regions.jobs.submit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_regions_jobs_submit
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/jobs/{jobsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataproc.projects.regions.jobs.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs_iam_policies
      x-stackQL-method: projects_regions_jobs_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/regions/{region}/jobs/{jobId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts a job cancellation request. To access the job resource after cancellation, call regions/{region}/jobs.list (https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs/list) or regions/{region}/jobs.get (https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs/get).'
      operationId: dataproc.projects.regions.jobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_regions_jobs_cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/jobs/{jobsId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataproc.projects.regions.jobs.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs_iam_policies
      x-stackQL-method: projects_regions_jobs_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectId}/regions/{region}/jobs/{jobId}':
    parameters: *ref_1
    patch:
      description: Updates a job in a project.
      operationId: dataproc.projects.regions.jobs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_regions_jobs_patch
      x-stackQL-verb: exec
    get:
      description: Gets the resource representation for a job in a project.
      operationId: dataproc.projects.regions.jobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_regions_jobs_get
      x-stackQL-verb: select
    delete:
      description: 'Deletes the job from the project. If the job is active, the delete fails, and the response returns FAILED_PRECONDITION.'
      operationId: dataproc.projects.regions.jobs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_regions_jobs_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/regions/{regionsId}/jobs/{jobsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataproc.projects.regions.jobs.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs_iam_policies
      x-stackQL-method: projects_regions_jobs_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/regions/{region}/jobs:submitAsOperation':
    parameters: *ref_1
    post:
      description: Submits job to a cluster.
      operationId: dataproc.projects.regions.jobs.submitAsOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_regions_jobs_submit_as_operation
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/regions/{region}/jobs':
    parameters: *ref_1
    get:
      description: 'Lists regions/{region}/jobs in a project.'
      operationId: dataproc.projects.regions.jobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: query
          name: clusterName
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: jobStateMatcher
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_regions_jobs_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.jobs
  '/v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}/nodeGroups/{nodeGroupsId}':
    parameters: *ref_1
    get:
      description: Gets the resource representation for a node group in a cluster.
      operationId: dataproc.projects.regions.clusters.nodeGroups.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeGroup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: nodeGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: node_groups
      x-stackQL-method: projects_regions_clusters_node_groups_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}/nodeGroups/{nodeGroupsId}:resize':
    parameters: *ref_1
    post:
      description: 'Resizes a node group in a cluster. The returned Operation.metadata is NodeGroupOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#nodegroupoperationmetadata).'
      operationId: dataproc.projects.regions.clusters.nodeGroups.resize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResizeNodeGroupRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: nodeGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: node_groups
      x-stackQL-method: projects_regions_clusters_node_groups_resize
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}/nodeGroups':
    parameters: *ref_1
    post:
      description: 'Creates a node group in a cluster. The returned Operation.metadata is NodeGroupOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#nodegroupoperationmetadata).'
      operationId: dataproc.projects.regions.clusters.nodeGroups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeGroup'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: nodeGroupId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: node_groups
      x-stackQL-method: projects_regions_clusters_node_groups_create
      x-stackQL-verb: insert
  '/v1/projects/{projectId}/regions/{region}/clusters/{clusterName}':
    parameters: *ref_1
    patch:
      description: 'Updates a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata). The cluster must be in a RUNNING state or an error is returned.'
      operationId: dataproc.projects.regions.clusters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
        - in: query
          name: gracefulDecommissionTimeout
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_patch
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata).'
      operationId: dataproc.projects.regions.clusters.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: clusterUuid
          schema:
            type: string
        - in: query
          name: gracefulTerminationTimeout
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_delete
      x-stackQL-verb: delete
    get:
      description: Gets the resource representation for a cluster in a project.
      operationId: dataproc.projects.regions.clusters.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_get
      x-stackQL-verb: select
  '/v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:stop':
    parameters: *ref_1
    post:
      description: Stops a cluster in a project.
      operationId: dataproc.projects.regions.clusters.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopClusterRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_stop
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataproc.projects.regions.clusters.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters_iam_policies
      x-stackQL-method: projects_regions_clusters_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/regions/{region}/clusters':
    parameters: *ref_1
    post:
      description: 'Creates a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata).'
      operationId: dataproc.projects.regions.clusters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: actionOnFailedPrimaryWorkers
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_create
      x-stackQL-verb: insert
    get:
      description: 'Lists all regions/{region}/clusters in a project alphabetically.'
      operationId: dataproc.projects.regions.clusters.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.clusters
  '/v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataproc.projects.regions.clusters.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters_iam_policies
      x-stackQL-method: projects_regions_clusters_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:diagnose':
    parameters: *ref_1
    post:
      description: 'Gets cluster diagnostic information. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata). After the operation completes, Operation.response contains DiagnoseClusterResults (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#diagnoseclusterresults).'
      operationId: dataproc.projects.regions.clusters.diagnose
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnoseClusterRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_diagnose
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataproc.projects.regions.clusters.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters_iam_policies
      x-stackQL-method: projects_regions_clusters_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}:injectCredentials':
    parameters: *ref_1
    post:
      description: Inject encrypted credentials into all of the VMs in a cluster.The target cluster must be a personal auth cluster assigned to the user who is issuing the RPC.
      operationId: dataproc.projects.regions.clusters.injectCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InjectCredentialsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: regionsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_inject_credentials
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:repair':
    parameters: *ref_1
    post:
      description: Repairs a cluster.
      operationId: dataproc.projects.regions.clusters.repair
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepairClusterRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_repair
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:start':
    parameters: *ref_1
    post:
      description: Starts a cluster in a project.
      operationId: dataproc.projects.regions.clusters.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartClusterRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: projects_regions_clusters_start
      x-stackQL-verb: exec
