openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Vision API
  description: 'Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.'
  version: v1
  x-discovery-doc-revision: '20230811'
  x-generated-date: '2023-08-28'
externalDocs:
  url: 'https://cloud.google.com/vision/'
servers:
  - url: 'https://vision.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-vision': Apply machine learning models to understand and label images
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation:
      id: GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation
      properties:
        mid:
          type: string
          description: Object ID that should align with EntityAnnotation mid.
        languageCode:
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
        name:
          description: 'Object name, expressed in its `language_code` language.'
          type: string
        score:
          type: number
          format: float
          description: 'Score of the result. Range [0, 1].'
      type: object
      description: Prediction for what the object in the bounding box is.
    GoogleCloudVisionV1p3beta1ImageAnnotationContext:
      properties:
        uri:
          type: string
          description: The URI of the file used to produce the image.
        pageNumber:
          format: int32
          description: 'If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image.'
          type: integer
      id: GoogleCloudVisionV1p3beta1ImageAnnotationContext
      description: 'If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.'
      type: object
    GoogleCloudVisionV1p4beta1OutputConfig:
      description: The desired output location and metadata.
      id: GoogleCloudVisionV1p4beta1OutputConfig
      type: object
      properties:
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1GcsDestination'
          description: The Google Cloud Storage location to write the output(s) to.
        batchSize:
          description: 'The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations.'
          format: int32
          type: integer
    Status:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
      type: object
      properties:
        details:
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        code:
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
          type: integer
    GoogleCloudVisionV1p4beta1TextAnnotation:
      description: 'TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.'
      type: object
      id: GoogleCloudVisionV1p4beta1TextAnnotation
      properties:
        pages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Page'
          description: List of pages detected by OCR.
        text:
          description: UTF-8 text detected on the pages.
          type: string
    GoogleCloudVisionV1p3beta1FaceAnnotation:
      description: A face annotation object contains the results of face detection.
      properties:
        detectionConfidence:
          type: number
          format: float
          description: 'Detection confidence. Range [0, 1].'
        sorrowLikelihood:
          description: Sorrow likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        fdBoundingPoly:
          description: 'The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the "amount of skin" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
        joyLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Joy likelihood.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to "frame" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated.
        underExposedLikelihood:
          description: Under-exposed likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        surpriseLikelihood:
          description: Surprise likelihood.
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        landmarkingConfidence:
          type: number
          format: float
          description: 'Face landmarking confidence. Range [0, 1].'
        angerLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Anger likelihood.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        landmarks:
          description: Detected face landmarks.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1FaceAnnotationLandmark'
        rollAngle:
          type: number
          format: float
          description: 'Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].'
        panAngle:
          description: 'Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180].'
          format: float
          type: number
        headwearLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Headwear likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        blurredLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Blurred likelihood.
          type: string
        tiltAngle:
          description: 'Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image''s horizontal plane. Range [-180,180].'
          type: number
          format: float
      type: object
      id: GoogleCloudVisionV1p3beta1FaceAnnotation
    GoogleCloudVisionV1p1beta1NormalizedVertex:
      properties:
        'y':
          format: float
          type: number
          description: Y coordinate.
        x:
          format: float
          description: X coordinate.
          type: number
      type: object
      id: GoogleCloudVisionV1p1beta1NormalizedVertex
      description: 'A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.'
    GoogleCloudVisionV1p4beta1ProductSearchResultsResult:
      properties:
        score:
          description: 'A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).'
          format: float
          type: number
        image:
          description: The resource name of the image from the product that is the closest match to the query.
          type: string
        product:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Product'
          description: The Product.
      type: object
      description: Information about a product.
      id: GoogleCloudVisionV1p4beta1ProductSearchResultsResult
    GoogleCloudVisionV1p2beta1ProductKeyValue:
      description: A product label represented as a key-value pair.
      properties:
        key:
          description: The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
          type: string
        value:
          description: The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
          type: string
      type: object
      id: GoogleCloudVisionV1p2beta1ProductKeyValue
    Feature:
      type: object
      id: Feature
      description: 'The type of Google Cloud Vision API detection to perform, and the maximum number of results to return for that type. Multiple `Feature` objects can be specified in the `features` list.'
      properties:
        maxResults:
          description: 'Maximum number of results of this type. Does not apply to `TEXT_DETECTION`, `DOCUMENT_TEXT_DETECTION`, or `CROP_HINTS`.'
          format: int32
          type: integer
        model:
          type: string
          description: 'Model to use for the feature. Supported values: "builtin/stable" (the default if unset) and "builtin/latest". `DOCUMENT_TEXT_DETECTION` and `TEXT_DETECTION` also support "builtin/weekly" for the bleeding edge release updated weekly.'
        type:
          enumDescriptions:
            - Unspecified feature type.
            - Run face detection.
            - Run landmark detection.
            - Run logo detection.
            - Run label detection.
            - 'Run text detection / optical character recognition (OCR). Text detection is optimized for areas of text within a larger image; if the image is a document, use `DOCUMENT_TEXT_DETECTION` instead.'
            - Run dense text document OCR. Takes precedence when both `DOCUMENT_TEXT_DETECTION` and `TEXT_DETECTION` are present.
            - Run Safe Search to detect potentially unsafe or undesirable content.
            - 'Compute a set of image properties, such as the image''s dominant colors.'
            - Run crop hints.
            - Run web detection.
            - Run Product Search.
            - Run localizer for object detection.
          enum:
            - TYPE_UNSPECIFIED
            - FACE_DETECTION
            - LANDMARK_DETECTION
            - LOGO_DETECTION
            - LABEL_DETECTION
            - TEXT_DETECTION
            - DOCUMENT_TEXT_DETECTION
            - SAFE_SEARCH_DETECTION
            - IMAGE_PROPERTIES
            - CROP_HINTS
            - WEB_DETECTION
            - PRODUCT_SEARCH
            - OBJECT_LOCALIZATION
          description: The feature type.
          type: string
    GoogleCloudVisionV1p4beta1WebDetection:
      id: GoogleCloudVisionV1p4beta1WebDetection
      type: object
      description: Relevant information for the image from the Internet.
      properties:
        pagesWithMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebPage'
          description: Web pages containing the matching images from the Internet.
          type: array
        fullMatchingImages:
          description: Fully matching images from the Internet. Can include resized copies of the query image.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage'
        webEntities:
          description: Deduced entities from similar images on the Internet.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebEntity'
        partialMatchingImages:
          description: Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage'
        bestGuessLabels:
          type: array
          description: The service's best guess as to the topic of the request image. Inferred from similar images on the open web.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebLabel'
        visuallySimilarImages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage'
          description: The visually similar image results.
    GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse:
      id: GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse
      type: object
      description: Response to an async batch image annotation request.
      properties:
        outputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1OutputConfig'
          description: The output location and metadata from AsyncBatchAnnotateImagesRequest.
    GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult:
      id: GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult
      properties:
        boundingPoly:
          description: The bounding polygon around the product detected in the query image.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
        objectAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation'
          description: List of generic predictions for the object in the bounding box.
        results:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResultsResult'
          type: array
          description: 'List of results, one for each product match.'
      type: object
      description: Information about the products similar to a single product in a query image.
    GoogleCloudVisionV1p2beta1Word:
      type: object
      properties:
        property:
          description: Additional information detected for the word.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty'
        confidence:
          format: float
          description: 'Confidence of the OCR results for the word. Range [0, 1].'
          type: number
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
          description: 'The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        symbols:
          description: List of symbols in the word. The order of the symbols follows the natural reading order.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Symbol'
      description: A word representation.
      id: GoogleCloudVisionV1p2beta1Word
    GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation:
      id: GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation
      type: object
      description: Set of detected objects with bounding boxes.
      properties:
        languageCode:
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
        name:
          type: string
          description: 'Object name, expressed in its `language_code` language.'
        score:
          format: float
          description: 'Score of the result. Range [0, 1].'
          type: number
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: Image region to which this object belongs. This must be populated.
        mid:
          type: string
          description: Object ID that should align with EntityAnnotation mid.
    BatchAnnotateImagesResponse:
      type: object
      description: Response to a batch image annotation request.
      id: BatchAnnotateImagesResponse
      properties:
        responses:
          type: array
          items:
            $ref: '#/components/schemas/AnnotateImageResponse'
          description: Individual responses to image annotation requests within the batch.
    GoogleCloudVisionV1p1beta1InputConfig:
      description: The desired input location and metadata.
      type: object
      id: GoogleCloudVisionV1p1beta1InputConfig
      properties:
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1GcsSource'
          description: The Google Cloud Storage location to read the input from.
        content:
          type: string
          description: 'File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests.'
          format: byte
        mimeType:
          description: 'The type of the file. Currently only "application/pdf", "image/tiff" and "image/gif" are supported. Wildcards are not supported.'
          type: string
    RemoveProductFromProductSetRequest:
      id: RemoveProductFromProductSetRequest
      properties:
        product:
          description: 'Required. The resource name for the Product to be removed from this ProductSet. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`'
          type: string
      description: Request message for the `RemoveProductFromProductSet` method.
      type: object
    GoogleCloudVisionV1p1beta1WebDetectionWebPage:
      properties:
        url:
          type: string
          description: The result web page URL.
        pageTitle:
          description: 'Title for the web page, may contain HTML markups.'
          type: string
        fullMatchingImages:
          description: Fully matching images on the page. Can include resized copies of the query image.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage'
          type: array
        score:
          format: float
          type: number
          description: (Deprecated) Overall relevancy score for the web page.
        partialMatchingImages:
          description: Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage'
      id: GoogleCloudVisionV1p1beta1WebDetectionWebPage
      description: Metadata for web pages.
      type: object
    Word:
      properties:
        symbols:
          description: List of symbols in the word. The order of the symbols follows the natural reading order.
          type: array
          items:
            $ref: '#/components/schemas/Symbol'
        boundingBox:
          $ref: '#/components/schemas/BoundingPoly'
          description: 'The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        confidence:
          format: float
          type: number
          description: 'Confidence of the OCR results for the word. Range [0, 1].'
        property:
          description: Additional information detected for the word.
          $ref: '#/components/schemas/TextProperty'
      description: A word representation.
      type: object
      id: Word
    GoogleCloudVisionV1p3beta1LocationInfo:
      description: Detected entity location information.
      properties:
        latLng:
          $ref: '#/components/schemas/LatLng'
          description: lat/long location coordinates.
      type: object
      id: GoogleCloudVisionV1p3beta1LocationInfo
    GoogleCloudVisionV1p4beta1ImageProperties:
      id: GoogleCloudVisionV1p4beta1ImageProperties
      properties:
        dominantColors:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1DominantColorsAnnotation'
          description: 'If present, dominant colors completed successfully.'
      description: 'Stores image properties, such as dominant colors.'
      type: object
    EntityAnnotation:
      description: Set of detected entity features.
      id: EntityAnnotation
      properties:
        confidence:
          deprecated: true
          description: '**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the "Eiffel Tower" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].'
          format: float
          type: number
        boundingPoly:
          description: Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features.
          $ref: '#/components/schemas/BoundingPoly'
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
          description: 'Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.'
        mid:
          description: 'Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).'
          type: string
        description:
          type: string
          description: 'Entity textual description, expressed in its `locale` language.'
        locations:
          items:
            $ref: '#/components/schemas/LocationInfo'
          description: 'The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.'
          type: array
        topicality:
          type: number
          description: 'The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of "tower" is likely higher to an image containing the detected "Eiffel Tower" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].'
          format: float
        locale:
          description: The language code for the locale in which the entity textual `description` is expressed.
          type: string
        score:
          description: 'Overall score of the result. Range [0, 1].'
          type: number
          format: float
      type: object
    LocationInfo:
      id: LocationInfo
      description: Detected entity location information.
      properties:
        latLng:
          $ref: '#/components/schemas/LatLng'
          description: lat/long location coordinates.
      type: object
    GoogleCloudVisionV1p4beta1WebDetectionWebLabel:
      description: Label to provide extra metadata for the web detection.
      type: object
      properties:
        label:
          type: string
          description: Label for extra metadata.
        languageCode:
          description: 'The BCP-47 language code for `label`, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
      id: GoogleCloudVisionV1p4beta1WebDetectionWebLabel
    ListProductsInProductSetResponse:
      properties:
        products:
          description: The list of Products.
          type: array
          items:
            $ref: '#/components/schemas/Product'
        nextPageToken:
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
          type: string
      description: Response message for the `ListProductsInProductSet` method.
      type: object
      id: ListProductsInProductSetResponse
    GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse:
      properties:
        outputConfig:
          description: The output location and metadata from AsyncAnnotateFileRequest.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1OutputConfig'
      type: object
      description: The response for a single offline file annotation request.
      id: GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse
    GoogleCloudVisionV1p4beta1Property:
      properties:
        uint64Value:
          description: Value of numeric properties.
          type: string
          format: uint64
        value:
          description: Value of the property.
          type: string
        name:
          description: Name of the property.
          type: string
      type: object
      id: GoogleCloudVisionV1p4beta1Property
      description: A `Property` consists of a user-supplied name/value pair.
    GoogleCloudVisionV1p2beta1Vertex:
      description: 'A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.'
      type: object
      id: GoogleCloudVisionV1p2beta1Vertex
      properties:
        x:
          format: int32
          description: X coordinate.
          type: integer
        'y':
          description: Y coordinate.
          format: int32
          type: integer
    GoogleCloudVisionV1p4beta1ProductSearchResults:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResultsResult'
          description: 'List of results, one for each product match.'
        indexTime:
          description: Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results.
          type: string
          format: google-datetime
        productGroupedResults:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult'
          description: 'List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results.'
          type: array
      id: GoogleCloudVisionV1p4beta1ProductSearchResults
      description: Results for a product search request.
    GoogleCloudVisionV1p4beta1Position:
      properties:
        x:
          format: float
          description: X coordinate.
          type: number
        z:
          format: float
          type: number
          description: Z coordinate (or depth).
        'y':
          description: Y coordinate.
          type: number
          format: float
      type: object
      id: GoogleCloudVisionV1p4beta1Position
      description: 'A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image.'
    GoogleCloudVisionV1p4beta1Symbol:
      description: A single symbol representation.
      id: GoogleCloudVisionV1p4beta1Symbol
      properties:
        text:
          type: string
          description: The actual UTF-8 representation of the symbol.
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: 'The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        confidence:
          description: 'Confidence of the OCR results for the symbol. Range [0, 1].'
          type: number
          format: float
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty'
          description: Additional information detected for the symbol.
      type: object
    GoogleCloudVisionV1p3beta1InputConfig:
      type: object
      id: GoogleCloudVisionV1p3beta1InputConfig
      description: The desired input location and metadata.
      properties:
        mimeType:
          type: string
          description: 'The type of the file. Currently only "application/pdf", "image/tiff" and "image/gif" are supported. Wildcards are not supported.'
        gcsSource:
          description: The Google Cloud Storage location to read the input from.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1GcsSource'
        content:
          format: byte
          type: string
          description: 'File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests.'
    GoogleCloudVisionV1p3beta1ReferenceImage:
      type: object
      description: 'A `ReferenceImage` represents a product image and its associated metadata, such as bounding boxes.'
      properties:
        boundingPolys:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          type: array
          description: 'Optional. Bounding polygons around the areas of interest in the reference image. If this field is empty, the system will try to detect regions of interest. At most 10 bounding polygons will be used. The provided shape is converted into a non-rotated rectangle. Once converted, the small edge of the rectangle must be greater than or equal to 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5 is not).'
        name:
          type: string
          description: 'The resource name of the reference image. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`. This field is ignored when creating a reference image.'
        uri:
          type: string
          description: 'Required. The Google Cloud Storage URI of the reference image. The URI must start with `gs://`.'
      id: GoogleCloudVisionV1p3beta1ReferenceImage
    GoogleCloudVisionV1p1beta1Property:
      type: object
      id: GoogleCloudVisionV1p1beta1Property
      properties:
        value:
          type: string
          description: Value of the property.
        name:
          description: Name of the property.
          type: string
        uint64Value:
          type: string
          format: uint64
          description: Value of numeric properties.
      description: A `Property` consists of a user-supplied name/value pair.
    BatchAnnotateImagesRequest:
      description: Multiple image annotation requests are batched into a single service call.
      id: BatchAnnotateImagesRequest
      type: object
      properties:
        requests:
          description: Required. Individual image annotation requests for this batch.
          items:
            $ref: '#/components/schemas/AnnotateImageRequest'
          type: array
        parent:
          description: 'Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.'
          type: string
    GoogleCloudVisionV1p4beta1ImageAnnotationContext:
      type: object
      description: 'If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.'
      properties:
        pageNumber:
          format: int32
          description: 'If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image.'
          type: integer
        uri:
          description: The URI of the file used to produce the image.
          type: string
      id: GoogleCloudVisionV1p4beta1ImageAnnotationContext
    GoogleCloudVisionV1p2beta1OperationMetadata:
      id: GoogleCloudVisionV1p2beta1OperationMetadata
      type: object
      properties:
        createTime:
          format: google-datetime
          type: string
          description: The time when the batch request was received.
        state:
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
          type: string
          description: Current state of the batch operation.
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
        updateTime:
          description: The time when the operation result was last updated.
          type: string
          format: google-datetime
      description: Contains metadata for the BatchAnnotateImages operation.
    ImportProductSetsResponse:
      type: object
      description: Response message for the `ImportProductSets` method. This message is returned by the google.longrunning.Operations.GetOperation method in the returned google.longrunning.Operation.response field.
      properties:
        referenceImages:
          description: The list of reference_images that are imported successfully.
          items:
            $ref: '#/components/schemas/ReferenceImage'
          type: array
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/Status'
          description: 'The rpc status for each ImportProductSet request, including both successes and errors. The number of statuses here matches the number of lines in the csv file, and statuses[i] stores the success or failure status of processing the i-th line of the csv, starting from line 0.'
      id: ImportProductSetsResponse
    GoogleCloudVisionV1p2beta1WebDetectionWebLabel:
      description: Label to provide extra metadata for the web detection.
      properties:
        label:
          description: Label for extra metadata.
          type: string
        languageCode:
          type: string
          description: 'The BCP-47 language code for `label`, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
      id: GoogleCloudVisionV1p2beta1WebDetectionWebLabel
      type: object
    GoogleCloudVisionV1p2beta1WebDetectionWebEntity:
      type: object
      description: Entity deduced from similar images on the Internet.
      properties:
        description:
          type: string
          description: 'Canonical description of the entity, in English.'
        score:
          format: float
          type: number
          description: Overall relevancy score for the entity. Not normalized and not comparable across different image queries.
        entityId:
          description: Opaque entity ID.
          type: string
      id: GoogleCloudVisionV1p2beta1WebDetectionWebEntity
    Paragraph:
      properties:
        property:
          $ref: '#/components/schemas/TextProperty'
          description: Additional information detected for the paragraph.
        confidence:
          type: number
          description: 'Confidence of the OCR results for the paragraph. Range [0, 1].'
          format: float
        words:
          description: List of all words in this paragraph.
          items:
            $ref: '#/components/schemas/Word'
          type: array
        boundingBox:
          description: 'The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/BoundingPoly'
      id: Paragraph
      type: object
      description: Structural unit of text representing a number of words in certain order.
    GoogleCloudVisionV1p3beta1Word:
      type: object
      description: A word representation.
      id: GoogleCloudVisionV1p3beta1Word
      properties:
        confidence:
          description: 'Confidence of the OCR results for the word. Range [0, 1].'
          type: number
          format: float
        boundingBox:
          description: 'The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
        symbols:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Symbol'
          description: List of symbols in the word. The order of the symbols follows the natural reading order.
          type: array
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty'
          description: Additional information detected for the word.
    GoogleCloudVisionV1p2beta1AnnotateImageResponse:
      properties:
        localizedObjectAnnotations:
          description: 'If present, localized object detection has completed successfully. This will be sorted descending by confidence score.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation'
        faceAnnotations:
          description: 'If present, face detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1FaceAnnotation'
          type: array
        landmarkAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1EntityAnnotation'
          type: array
          description: 'If present, landmark detection has completed successfully.'
        safeSearchAnnotation:
          description: 'If present, safe-search annotation has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1SafeSearchAnnotation'
        context:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ImageAnnotationContext'
          description: 'If present, contextual information is needed to understand where this image comes from.'
        labelAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1EntityAnnotation'
          description: 'If present, label detection has completed successfully.'
          type: array
        imagePropertiesAnnotation:
          description: 'If present, image properties were extracted successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ImageProperties'
        webDetection:
          description: 'If present, web detection has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetection'
        error:
          description: 'If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set.'
          $ref: '#/components/schemas/Status'
        logoAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1EntityAnnotation'
          type: array
          description: 'If present, logo detection has completed successfully.'
        cropHintsAnnotation:
          description: 'If present, crop hints have completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1CropHintsAnnotation'
        textAnnotations:
          description: 'If present, text (OCR) detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1EntityAnnotation'
          type: array
        fullTextAnnotation:
          description: 'If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotation'
        productSearchResults:
          description: 'If present, product search has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResults'
      type: object
      description: Response to an image annotation request.
      id: GoogleCloudVisionV1p2beta1AnnotateImageResponse
    GoogleCloudVisionV1p1beta1ImageProperties:
      properties:
        dominantColors:
          description: 'If present, dominant colors completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1DominantColorsAnnotation'
      description: 'Stores image properties, such as dominant colors.'
      id: GoogleCloudVisionV1p1beta1ImageProperties
      type: object
    GoogleCloudVisionV1p3beta1ProductKeyValue:
      id: GoogleCloudVisionV1p3beta1ProductKeyValue
      properties:
        key:
          description: The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
          type: string
        value:
          description: The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
          type: string
      description: A product label represented as a key-value pair.
      type: object
    WebImage:
      properties:
        url:
          type: string
          description: The result image URL.
        score:
          type: number
          description: (Deprecated) Overall relevancy score for the image.
          format: float
      description: Metadata for online images.
      type: object
      id: WebImage
    GoogleCloudVisionV1p3beta1CropHint:
      type: object
      id: GoogleCloudVisionV1p3beta1CropHint
      properties:
        confidence:
          description: 'Confidence of this being a salient region. Range [0, 1].'
          format: float
          type: number
        boundingPoly:
          description: The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
        importanceFraction:
          format: float
          description: Fraction of importance of this salient region with respect to the original image.
          type: number
      description: Single crop hint that is used to generate a new crop when serving an image.
    GoogleCloudVisionV1p1beta1GcsSource:
      id: GoogleCloudVisionV1p1beta1GcsSource
      description: The Google Cloud Storage location where the input will be read from.
      type: object
      properties:
        uri:
          description: Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported.
          type: string
    GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation:
      type: object
      description: Set of detected objects with bounding boxes.
      properties:
        mid:
          type: string
          description: Object ID that should align with EntityAnnotation mid.
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        boundingPoly:
          description: Image region to which this object belongs. This must be populated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
        name:
          type: string
          description: 'Object name, expressed in its `language_code` language.'
        score:
          format: float
          type: number
          description: 'Score of the result. Range [0, 1].'
      id: GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation
    WebLabel:
      id: WebLabel
      type: object
      description: Label to provide extra metadata for the web detection.
      properties:
        languageCode:
          description: 'The BCP-47 language code for `label`, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
        label:
          description: Label for extra metadata.
          type: string
    ListOperationsResponse:
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
    GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation:
      properties:
        mid:
          type: string
          description: Object ID that should align with EntityAnnotation mid.
        languageCode:
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
        boundingPoly:
          description: Image region to which this object belongs. This must be populated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
        name:
          description: 'Object name, expressed in its `language_code` language.'
          type: string
        score:
          description: 'Score of the result. Range [0, 1].'
          format: float
          type: number
      id: GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation
      type: object
      description: Set of detected objects with bounding boxes.
    GoogleCloudVisionV1p4beta1ColorInfo:
      description: 'Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.'
      id: GoogleCloudVisionV1p4beta1ColorInfo
      type: object
      properties:
        color:
          $ref: '#/components/schemas/Color'
          description: RGB components of the color.
        pixelFraction:
          description: 'The fraction of pixels the color occupies in the image. Value in range [0, 1].'
          format: float
          type: number
        score:
          format: float
          type: number
          description: 'Image-specific score for this color. Value in range [0, 1].'
    GoogleCloudVisionV1p3beta1Block:
      properties:
        blockType:
          description: 'Detected block type (text, image etc) for this block.'
          type: string
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
        confidence:
          format: float
          description: 'Confidence of the OCR results on the block. Range [0, 1].'
          type: number
        property:
          description: Additional information detected for the block.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty'
        paragraphs:
          type: array
          description: List of paragraphs in this block (if this blocks is of type text).
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Paragraph'
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: 'The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
      description: Logical element on the page.
      type: object
      id: GoogleCloudVisionV1p3beta1Block
    GoogleCloudVisionV1p3beta1AsyncBatchAnnotateFilesResponse:
      type: object
      description: Response to an async batch file annotation request.
      id: GoogleCloudVisionV1p3beta1AsyncBatchAnnotateFilesResponse
      properties:
        responses:
          type: array
          description: 'The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse'
    GoogleCloudVisionV1p2beta1Page:
      id: GoogleCloudVisionV1p2beta1Page
      description: Detected page from OCR.
      properties:
        confidence:
          format: float
          description: 'Confidence of the OCR results on the page. Range [0, 1].'
          type: number
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty'
          description: Additional information detected on the page.
        height:
          description: Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
          type: integer
          format: int32
        width:
          type: integer
          format: int32
          description: Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
        blocks:
          description: 'List of blocks of text, images etc on this page.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Block'
      type: object
    GoogleCloudVisionV1p2beta1LocationInfo:
      type: object
      id: GoogleCloudVisionV1p2beta1LocationInfo
      properties:
        latLng:
          $ref: '#/components/schemas/LatLng'
          description: lat/long location coordinates.
      description: Detected entity location information.
    ImportProductSetsGcsSource:
      properties:
        csvFileUri:
          description: 'The Google Cloud Storage URI of the input csv file. The URI must start with `gs://`. The format of the input csv file should be one image per line. In each line, there are 8 columns. 1. image-uri 2. image-id 3. product-set-id 4. product-id 5. product-category 6. product-display-name 7. labels 8. bounding-poly The `image-uri`, `product-set-id`, `product-id`, and `product-category` columns are required. All other columns are optional. If the `ProductSet` or `Product` specified by the `product-set-id` and `product-id` values does not exist, then the system will create a new `ProductSet` or `Product` for the image. In this case, the `product-display-name` column refers to display_name, the `product-category` column refers to product_category, and the `labels` column refers to product_labels. The `image-id` column is optional but must be unique if provided. If it is empty, the system will automatically assign a unique id to the image. The `product-display-name` column is optional. If it is empty, the system sets the display_name field for the product to a space (" "). You can update the `display_name` later by using the API. If a `Product` with the specified `product-id` already exists, then the system ignores the `product-display-name`, `product-category`, and `labels` columns. The `labels` column (optional) is a line containing a list of comma-separated key-value pairs, in the following format: "key_1=value_1,key_2=value_2,...,key_n=value_n" The `bounding-poly` column (optional) identifies one region of interest from the image in the same manner as `CreateReferenceImage`. If you do not specify the `bounding-poly` column, then the system will try to detect regions of interest automatically. At most one `bounding-poly` column is allowed per line. If the image contains multiple regions of interest, add a line to the CSV file that includes the same product information, and the `bounding-poly` values for each region of interest. The `bounding-poly` column must contain an even number of comma-separated numbers, in the format "p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y". Use non-negative integers for absolute bounding polygons, and float values in [0, 1] for normalized bounding polygons. The system will resize the image if the image resolution is too large to process (larger than 20MP).'
          type: string
      type: object
      description: The Google Cloud Storage location for a csv file which preserves a list of ImportProductSetRequests in each line.
      id: ImportProductSetsGcsSource
    GoogleCloudVisionV1p1beta1OutputConfig:
      id: GoogleCloudVisionV1p1beta1OutputConfig
      type: object
      properties:
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1GcsDestination'
          description: The Google Cloud Storage location to write the output(s) to.
        batchSize:
          type: integer
          description: 'The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations.'
          format: int32
      description: The desired output location and metadata.
    Result:
      properties:
        product:
          description: The Product.
          $ref: '#/components/schemas/Product'
        image:
          type: string
          description: The resource name of the image from the product that is the closest match to the query.
        score:
          format: float
          type: number
          description: 'A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).'
      id: Result
      type: object
      description: Information about a product.
    GoogleCloudVisionV1p4beta1GcsSource:
      id: GoogleCloudVisionV1p4beta1GcsSource
      description: The Google Cloud Storage location where the input will be read from.
      properties:
        uri:
          description: Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported.
          type: string
      type: object
    GoogleCloudVisionV1p4beta1BatchOperationMetadata:
      id: GoogleCloudVisionV1p4beta1BatchOperationMetadata
      type: object
      properties:
        submitTime:
          description: The time when the batch request was submitted to the server.
          format: google-datetime
          type: string
        state:
          description: The current state of the batch operation.
          enumDescriptions:
            - Invalid.
            - Request is actively being processed.
            - The request is done and at least one item has been successfully processed.
            - The request is done and no item has been successfully processed.
            - The request is done after the longrunning.Operations.CancelOperation has been called by the user. Any records that were processed before the cancel command are output as specified in the request.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - PROCESSING
            - SUCCESSFUL
            - FAILED
            - CANCELLED
        endTime:
          format: google-datetime
          type: string
          description: The time when the batch request is finished and google.longrunning.Operation.done is set to true.
      description: 'Metadata for the batch operations such as the current state. This is included in the `metadata` field of the `Operation` returned by the `GetOperation` call of the `google::longrunning::Operations` service.'
    GoogleCloudVisionV1p2beta1DominantColorsAnnotation:
      id: GoogleCloudVisionV1p2beta1DominantColorsAnnotation
      type: object
      description: Set of dominant colors and their corresponding scores.
      properties:
        colors:
          description: RGB color values with their score and pixel fraction.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ColorInfo'
    DominantColorsAnnotation:
      properties:
        colors:
          description: RGB color values with their score and pixel fraction.
          items:
            $ref: '#/components/schemas/ColorInfo'
          type: array
      id: DominantColorsAnnotation
      type: object
      description: Set of dominant colors and their corresponding scores.
    GoogleCloudVisionV1p3beta1Property:
      description: A `Property` consists of a user-supplied name/value pair.
      id: GoogleCloudVisionV1p3beta1Property
      type: object
      properties:
        name:
          description: Name of the property.
          type: string
        value:
          type: string
          description: Value of the property.
        uint64Value:
          format: uint64
          description: Value of numeric properties.
          type: string
    GoogleCloudVisionV1p3beta1Vertex:
      type: object
      description: 'A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.'
      properties:
        'y':
          format: int32
          type: integer
          description: Y coordinate.
        x:
          type: integer
          description: X coordinate.
          format: int32
      id: GoogleCloudVisionV1p3beta1Vertex
    OperationMetadata:
      type: object
      properties:
        updateTime:
          format: google-datetime
          description: The time when the operation result was last updated.
          type: string
        createTime:
          format: google-datetime
          type: string
          description: The time when the batch request was received.
        state:
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
          description: Current state of the batch operation.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
      description: Contains metadata for the BatchAnnotateImages operation.
      id: OperationMetadata
    GoogleCloudVisionV1p3beta1DominantColorsAnnotation:
      description: Set of dominant colors and their corresponding scores.
      type: object
      properties:
        colors:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ColorInfo'
          description: RGB color values with their score and pixel fraction.
          type: array
      id: GoogleCloudVisionV1p3beta1DominantColorsAnnotation
    GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesResponse:
      type: object
      description: Response to an async batch file annotation request.
      properties:
        responses:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse'
          description: 'The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest.'
          type: array
      id: GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesResponse
    ProductSearchResults:
      properties:
        results:
          type: array
          description: 'List of results, one for each product match.'
          items:
            $ref: '#/components/schemas/Result'
        indexTime:
          description: Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results.
          format: google-datetime
          type: string
        productGroupedResults:
          items:
            $ref: '#/components/schemas/GroupedResult'
          type: array
          description: 'List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results.'
      id: ProductSearchResults
      description: Results for a product search request.
      type: object
    GoogleCloudVisionV1p2beta1TextAnnotationTextProperty:
      description: Additional information detected on the structural component.
      id: GoogleCloudVisionV1p2beta1TextAnnotationTextProperty
      properties:
        detectedBreak:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak'
          description: Detected start or end of a text segment.
        detectedLanguages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage'
          description: A list of detected languages together with confidence.
          type: array
      type: object
    GoogleCloudVisionV1p1beta1WebDetectionWebEntity:
      properties:
        entityId:
          type: string
          description: Opaque entity ID.
        description:
          type: string
          description: 'Canonical description of the entity, in English.'
        score:
          format: float
          description: Overall relevancy score for the entity. Not normalized and not comparable across different image queries.
          type: number
      type: object
      id: GoogleCloudVisionV1p1beta1WebDetectionWebEntity
      description: Entity deduced from similar images on the Internet.
    GoogleCloudVisionV1p4beta1NormalizedVertex:
      properties:
        x:
          format: float
          type: number
          description: X coordinate.
        'y':
          type: number
          description: Y coordinate.
          format: float
      description: 'A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.'
      type: object
      id: GoogleCloudVisionV1p4beta1NormalizedVertex
    GoogleCloudVisionV1p2beta1InputConfig:
      properties:
        mimeType:
          type: string
          description: 'The type of the file. Currently only "application/pdf", "image/tiff" and "image/gif" are supported. Wildcards are not supported.'
        gcsSource:
          description: The Google Cloud Storage location to read the input from.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1GcsSource'
        content:
          description: 'File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests.'
          format: byte
          type: string
      description: The desired input location and metadata.
      id: GoogleCloudVisionV1p2beta1InputConfig
      type: object
    GoogleCloudVisionV1p3beta1FaceAnnotationLandmark:
      properties:
        position:
          description: Face landmark position.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Position'
        type:
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - 'Nose, bottom right.'
            - 'Nose, bottom left.'
            - 'Nose, bottom center.'
            - 'Left eye, top boundary.'
            - 'Left eye, right corner.'
            - 'Left eye, bottom boundary.'
            - 'Left eye, left corner.'
            - 'Right eye, top boundary.'
            - 'Right eye, right corner.'
            - 'Right eye, bottom boundary.'
            - 'Right eye, left corner.'
            - 'Left eyebrow, upper midpoint.'
            - 'Right eyebrow, upper midpoint.'
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
          type: string
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
          description: Face landmark type.
      description: 'A face-specific landmark (for example, a face feature).'
      id: GoogleCloudVisionV1p3beta1FaceAnnotationLandmark
      type: object
    ListProductsResponse:
      type: object
      properties:
        nextPageToken:
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          description: List of products.
      id: ListProductsResponse
      description: Response message for the `ListProducts` method.
    CropHintsParams:
      type: object
      id: CropHintsParams
      description: Parameters for crop hints annotation request.
      properties:
        aspectRatios:
          type: array
          items:
            format: float
            type: number
          description: 'Aspect ratios in floats, representing the ratio of the width to the height of the image. For example, if the desired aspect ratio is 4/3, the corresponding float value should be 1.33333. If not specified, the best possible crop is returned. The number of provided aspect ratios is limited to a maximum of 16; any aspect ratios provided after the 16th are ignored.'
    GoogleCloudVisionV1p2beta1ImageAnnotationContext:
      description: 'If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.'
      type: object
      properties:
        uri:
          type: string
          description: The URI of the file used to produce the image.
        pageNumber:
          format: int32
          type: integer
          description: 'If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image.'
      id: GoogleCloudVisionV1p2beta1ImageAnnotationContext
    Position:
      type: object
      id: Position
      properties:
        x:
          format: float
          description: X coordinate.
          type: number
        'y':
          type: number
          description: Y coordinate.
          format: float
        z:
          type: number
          format: float
          description: Z coordinate (or depth).
      description: 'A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image.'
    GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse:
      description: The response for a single offline file annotation request.
      id: GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse
      type: object
      properties:
        outputConfig:
          description: The output location and metadata from AsyncAnnotateFileRequest.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1OutputConfig'
    Block:
      id: Block
      properties:
        property:
          $ref: '#/components/schemas/TextProperty'
          description: Additional information detected for the block.
        confidence:
          format: float
          type: number
          description: 'Confidence of the OCR results on the block. Range [0, 1].'
        paragraphs:
          description: List of paragraphs in this block (if this blocks is of type text).
          items:
            $ref: '#/components/schemas/Paragraph'
          type: array
        boundingBox:
          $ref: '#/components/schemas/BoundingPoly'
          description: 'The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        blockType:
          type: string
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
          description: 'Detected block type (text, image etc) for this block.'
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
      type: object
      description: Logical element on the page.
    GoogleCloudVisionV1p3beta1Position:
      description: 'A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image.'
      properties:
        x:
          type: number
          description: X coordinate.
          format: float
        z:
          format: float
          type: number
          description: Z coordinate (or depth).
        'y':
          description: Y coordinate.
          format: float
          type: number
      type: object
      id: GoogleCloudVisionV1p3beta1Position
    GoogleCloudVisionV1p1beta1ColorInfo:
      description: 'Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.'
      properties:
        pixelFraction:
          type: number
          description: 'The fraction of pixels the color occupies in the image. Value in range [0, 1].'
          format: float
        color:
          description: RGB components of the color.
          $ref: '#/components/schemas/Color'
        score:
          type: number
          description: 'Image-specific score for this color. Value in range [0, 1].'
          format: float
      type: object
      id: GoogleCloudVisionV1p1beta1ColorInfo
    GoogleCloudVisionV1p1beta1DominantColorsAnnotation:
      description: Set of dominant colors and their corresponding scores.
      id: GoogleCloudVisionV1p1beta1DominantColorsAnnotation
      type: object
      properties:
        colors:
          type: array
          description: RGB color values with their score and pixel fraction.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ColorInfo'
    GoogleCloudVisionV1p3beta1OperationMetadata:
      type: object
      properties:
        state:
          description: Current state of the batch operation.
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
        createTime:
          format: google-datetime
          description: The time when the batch request was received.
          type: string
        updateTime:
          type: string
          format: google-datetime
          description: The time when the operation result was last updated.
      id: GoogleCloudVisionV1p3beta1OperationMetadata
      description: Contains metadata for the BatchAnnotateImages operation.
    GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage:
      id: GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage
      properties:
        languageCode:
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
        confidence:
          format: float
          description: 'Confidence of detected language. Range [0, 1].'
          type: number
      description: Detected language for a structural component.
      type: object
    GoogleCloudVisionV1p2beta1NormalizedVertex:
      type: object
      id: GoogleCloudVisionV1p2beta1NormalizedVertex
      description: 'A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.'
      properties:
        x:
          type: number
          description: X coordinate.
          format: float
        'y':
          format: float
          description: Y coordinate.
          type: number
    GoogleCloudVisionV1p1beta1LocationInfo:
      id: GoogleCloudVisionV1p1beta1LocationInfo
      description: Detected entity location information.
      properties:
        latLng:
          $ref: '#/components/schemas/LatLng'
          description: lat/long location coordinates.
      type: object
    GoogleCloudVisionV1p4beta1CropHint:
      properties:
        importanceFraction:
          type: number
          description: Fraction of importance of this salient region with respect to the original image.
          format: float
        boundingPoly:
          description: The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
        confidence:
          type: number
          description: 'Confidence of this being a salient region. Range [0, 1].'
          format: float
      id: GoogleCloudVisionV1p4beta1CropHint
      description: Single crop hint that is used to generate a new crop when serving an image.
      type: object
    GoogleCloudVisionV1p4beta1BatchAnnotateFilesResponse:
      id: GoogleCloudVisionV1p4beta1BatchAnnotateFilesResponse
      description: A list of file annotation responses.
      type: object
      properties:
        responses:
          description: 'The list of file annotation responses, each response corresponding to each AnnotateFileRequest in BatchAnnotateFilesRequest.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1AnnotateFileResponse'
          type: array
    GoogleCloudVisionV1p2beta1WebDetectionWebImage:
      id: GoogleCloudVisionV1p2beta1WebDetectionWebImage
      type: object
      description: Metadata for online images.
      properties:
        url:
          description: The result image URL.
          type: string
        score:
          description: (Deprecated) Overall relevancy score for the image.
          type: number
          format: float
    DetectedBreak:
      type: object
      description: Detected start or end of a structural component.
      id: DetectedBreak
      properties:
        isPrefix:
          description: True if break prepends the element.
          type: boolean
        type:
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
          type: string
          description: Detected break type.
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - 'End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.'
            - Line break that ends a paragraph.
    GoogleCloudVisionV1p1beta1Symbol:
      description: A single symbol representation.
      type: object
      id: GoogleCloudVisionV1p1beta1Symbol
      properties:
        text:
          type: string
          description: The actual UTF-8 representation of the symbol.
        boundingBox:
          description: 'The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
        property:
          description: Additional information detected for the symbol.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty'
        confidence:
          description: 'Confidence of the OCR results for the symbol. Range [0, 1].'
          format: float
          type: number
    GoogleCloudVisionV1p2beta1CropHintsAnnotation:
      type: object
      properties:
        cropHints:
          description: Crop hint results.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1CropHint'
          type: array
      description: Set of crop hints that are used to generate new crops when serving images.
      id: GoogleCloudVisionV1p2beta1CropHintsAnnotation
    Operation:
      type: object
      id: Operation
      properties:
        response:
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        metadata:
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
      description: This resource represents a long-running operation that is the result of a network API call.
    GoogleCloudVisionV1p1beta1CropHint:
      type: object
      description: Single crop hint that is used to generate a new crop when serving an image.
      id: GoogleCloudVisionV1p1beta1CropHint
      properties:
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
          description: The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale.
        confidence:
          type: number
          format: float
          description: 'Confidence of this being a salient region. Range [0, 1].'
        importanceFraction:
          type: number
          description: Fraction of importance of this salient region with respect to the original image.
          format: float
    GoogleCloudVisionV1p2beta1Property:
      type: object
      id: GoogleCloudVisionV1p2beta1Property
      properties:
        value:
          description: Value of the property.
          type: string
        uint64Value:
          type: string
          description: Value of numeric properties.
          format: uint64
        name:
          type: string
          description: Name of the property.
      description: A `Property` consists of a user-supplied name/value pair.
    GoogleCloudVisionV1p3beta1TextAnnotation:
      description: 'TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.'
      type: object
      properties:
        pages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Page'
          description: List of pages detected by OCR.
          type: array
        text:
          type: string
          description: UTF-8 text detected on the pages.
      id: GoogleCloudVisionV1p3beta1TextAnnotation
    AsyncAnnotateFileResponse:
      type: object
      id: AsyncAnnotateFileResponse
      description: The response for a single offline file annotation request.
      properties:
        outputConfig:
          description: The output location and metadata from AsyncAnnotateFileRequest.
          $ref: '#/components/schemas/OutputConfig'
    GoogleCloudVisionV1p3beta1GcsSource:
      type: object
      id: GoogleCloudVisionV1p3beta1GcsSource
      properties:
        uri:
          type: string
          description: Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported.
      description: The Google Cloud Storage location where the input will be read from.
    GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak:
      description: Detected start or end of a structural component.
      properties:
        isPrefix:
          type: boolean
          description: True if break prepends the element.
        type:
          type: string
          description: Detected break type.
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - 'End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.'
            - Line break that ends a paragraph.
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
      type: object
      id: GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak
    GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak:
      id: GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak
      type: object
      properties:
        isPrefix:
          description: True if break prepends the element.
          type: boolean
        type:
          type: string
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - 'End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.'
            - Line break that ends a paragraph.
          description: Detected break type.
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
      description: Detected start or end of a structural component.
    GoogleCloudVisionV1p3beta1ImageProperties:
      id: GoogleCloudVisionV1p3beta1ImageProperties
      description: 'Stores image properties, such as dominant colors.'
      properties:
        dominantColors:
          description: 'If present, dominant colors completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1DominantColorsAnnotation'
      type: object
    AnnotateFileRequest:
      id: AnnotateFileRequest
      properties:
        imageContext:
          $ref: '#/components/schemas/ImageContext'
          description: Additional context that may accompany the image(s) in the file.
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
          description: Required. Requested features.
        pages:
          description: 'Pages of the file to perform image annotation. Pages starts from 1, we assume the first page of the file is page 1. At most 5 pages are supported per request. Pages can be negative. Page 1 means the first page. Page 2 means the second page. Page -1 means the last page. Page -2 means the second to the last page. If the file is GIF instead of PDF or TIFF, page refers to GIF frames. If this field is empty, by default the service performs image annotation for the first 5 pages of the file.'
          type: array
          items:
            type: integer
            format: int32
        inputConfig:
          $ref: '#/components/schemas/InputConfig'
          description: Required. Information about the input file.
      description: 'A request to annotate one single file, e.g. a PDF, TIFF or GIF file.'
      type: object
    ImageProperties:
      type: object
      id: ImageProperties
      properties:
        dominantColors:
          $ref: '#/components/schemas/DominantColorsAnnotation'
          description: 'If present, dominant colors completed successfully.'
      description: 'Stores image properties, such as dominant colors.'
    BatchOperationMetadata:
      description: 'Metadata for the batch operations such as the current state. This is included in the `metadata` field of the `Operation` returned by the `GetOperation` call of the `google::longrunning::Operations` service.'
      id: BatchOperationMetadata
      properties:
        state:
          type: string
          enumDescriptions:
            - Invalid.
            - Request is actively being processed.
            - The request is done and at least one item has been successfully processed.
            - The request is done and no item has been successfully processed.
            - The request is done after the longrunning.Operations.CancelOperation has been called by the user. Any records that were processed before the cancel command are output as specified in the request.
          enum:
            - STATE_UNSPECIFIED
            - PROCESSING
            - SUCCESSFUL
            - FAILED
            - CANCELLED
          description: The current state of the batch operation.
        endTime:
          type: string
          format: google-datetime
          description: The time when the batch request is finished and google.longrunning.Operation.done is set to true.
        submitTime:
          format: google-datetime
          description: The time when the batch request was submitted to the server.
          type: string
      type: object
    GoogleCloudVisionV1p1beta1FaceAnnotation:
      description: A face annotation object contains the results of face detection.
      type: object
      id: GoogleCloudVisionV1p1beta1FaceAnnotation
      properties:
        surpriseLikelihood:
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Surprise likelihood.
        landmarks:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1FaceAnnotationLandmark'
          type: array
          description: Detected face landmarks.
        sorrowLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: Sorrow likelihood.
        underExposedLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: Under-exposed likelihood.
        landmarkingConfidence:
          type: number
          description: 'Face landmarking confidence. Range [0, 1].'
          format: float
        panAngle:
          description: 'Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180].'
          format: float
          type: number
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
          description: The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to "frame" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated.
        headwearLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Headwear likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        fdBoundingPoly:
          description: 'The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the "amount of skin" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
        blurredLikelihood:
          description: Blurred likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        rollAngle:
          format: float
          description: 'Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].'
          type: number
        detectionConfidence:
          type: number
          description: 'Detection confidence. Range [0, 1].'
          format: float
        tiltAngle:
          description: 'Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image''s horizontal plane. Range [-180,180].'
          format: float
          type: number
        joyLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          description: Joy likelihood.
        angerLikelihood:
          description: Anger likelihood.
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
    GoogleCloudVisionV1p1beta1SafeSearchAnnotation:
      properties:
        adult:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: 'Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities.'
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        medical:
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Likelihood that this is a medical image.
        violence:
          type: string
          description: Likelihood that this image contains violent content.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        racy:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          description: 'Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.'
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        spoof:
          type: string
          description: Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
      description: 'Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).'
      type: object
      id: GoogleCloudVisionV1p1beta1SafeSearchAnnotation
    GoogleCloudVisionV1p1beta1Paragraph:
      properties:
        boundingBox:
          description: 'The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
        words:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Word'
          description: List of all words in this paragraph.
        property:
          description: Additional information detected for the paragraph.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty'
        confidence:
          description: 'Confidence of the OCR results for the paragraph. Range [0, 1].'
          format: float
          type: number
      description: Structural unit of text representing a number of words in certain order.
      id: GoogleCloudVisionV1p1beta1Paragraph
      type: object
    GoogleCloudVisionV1p1beta1ProductSearchResultsResult:
      id: GoogleCloudVisionV1p1beta1ProductSearchResultsResult
      type: object
      description: Information about a product.
      properties:
        product:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Product'
          description: The Product.
        image:
          type: string
          description: The resource name of the image from the product that is the closest match to the query.
        score:
          description: 'A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).'
          format: float
          type: number
    GoogleCloudVisionV1p1beta1ProductKeyValue:
      properties:
        key:
          type: string
          description: The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
        value:
          type: string
          description: The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
      type: object
      description: A product label represented as a key-value pair.
      id: GoogleCloudVisionV1p1beta1ProductKeyValue
    AnnotateImageRequest:
      properties:
        image:
          $ref: '#/components/schemas/Image'
          description: The image to be processed.
        imageContext:
          description: Additional context that may accompany the image.
          $ref: '#/components/schemas/ImageContext'
        features:
          items:
            $ref: '#/components/schemas/Feature'
          description: Requested features.
          type: array
      type: object
      description: 'Request for performing Google Cloud Vision API tasks over a user-provided image, with user-requested features, and with context information.'
      id: AnnotateImageRequest
    GoogleCloudVisionV1p2beta1ProductSearchResults:
      description: Results for a product search request.
      type: object
      properties:
        productGroupedResults:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult'
          description: 'List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results.'
          type: array
        indexTime:
          type: string
          description: Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results.
          format: google-datetime
        results:
          description: 'List of results, one for each product match.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResultsResult'
          type: array
      id: GoogleCloudVisionV1p2beta1ProductSearchResults
    Vertex:
      type: object
      properties:
        x:
          type: integer
          description: X coordinate.
          format: int32
        'y':
          format: int32
          type: integer
          description: Y coordinate.
      id: Vertex
      description: 'A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.'
    GoogleCloudVisionV1p2beta1ProductSearchResultsResult:
      id: GoogleCloudVisionV1p2beta1ProductSearchResultsResult
      properties:
        product:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Product'
          description: The Product.
        image:
          description: The resource name of the image from the product that is the closest match to the query.
          type: string
        score:
          type: number
          format: float
          description: 'A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).'
      description: Information about a product.
      type: object
    GoogleCloudVisionV1p1beta1WebDetectionWebImage:
      id: GoogleCloudVisionV1p1beta1WebDetectionWebImage
      type: object
      description: Metadata for online images.
      properties:
        score:
          format: float
          description: (Deprecated) Overall relevancy score for the image.
          type: number
        url:
          description: The result image URL.
          type: string
    ReferenceImage:
      description: 'A `ReferenceImage` represents a product image and its associated metadata, such as bounding boxes.'
      properties:
        boundingPolys:
          items:
            $ref: '#/components/schemas/BoundingPoly'
          type: array
          description: 'Optional. Bounding polygons around the areas of interest in the reference image. If this field is empty, the system will try to detect regions of interest. At most 10 bounding polygons will be used. The provided shape is converted into a non-rotated rectangle. Once converted, the small edge of the rectangle must be greater than or equal to 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5 is not).'
        name:
          type: string
          description: 'The resource name of the reference image. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`. This field is ignored when creating a reference image.'
        uri:
          description: 'Required. The Google Cloud Storage URI of the reference image. The URI must start with `gs://`.'
          type: string
      id: ReferenceImage
      type: object
    OutputConfig:
      id: OutputConfig
      type: object
      description: The desired output location and metadata.
      properties:
        batchSize:
          type: integer
          format: int32
          description: 'The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations.'
        gcsDestination:
          description: The Google Cloud Storage location to write the output(s) to.
          $ref: '#/components/schemas/GcsDestination'
    GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak:
      description: Detected start or end of a structural component.
      properties:
        isPrefix:
          description: True if break prepends the element.
          type: boolean
        type:
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - 'End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.'
            - Line break that ends a paragraph.
          description: Detected break type.
          type: string
      type: object
      id: GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak
    GroupedResult:
      properties:
        results:
          items:
            $ref: '#/components/schemas/Result'
          description: 'List of results, one for each product match.'
          type: array
        boundingPoly:
          description: The bounding polygon around the product detected in the query image.
          $ref: '#/components/schemas/BoundingPoly'
        objectAnnotations:
          items:
            $ref: '#/components/schemas/ObjectAnnotation'
          description: List of generic predictions for the object in the bounding box.
          type: array
      description: Information about the products similar to a single product in a query image.
      type: object
      id: GroupedResult
    GoogleCloudVisionV1p2beta1WebDetection:
      properties:
        fullMatchingImages:
          description: Fully matching images from the Internet. Can include resized copies of the query image.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage'
          type: array
        webEntities:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebEntity'
          description: Deduced entities from similar images on the Internet.
          type: array
        partialMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage'
          type: array
          description: Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
        visuallySimilarImages:
          description: The visually similar image results.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage'
        pagesWithMatchingImages:
          description: Web pages containing the matching images from the Internet.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebPage'
          type: array
        bestGuessLabels:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebLabel'
          type: array
          description: The service's best guess as to the topic of the request image. Inferred from similar images on the open web.
      id: GoogleCloudVisionV1p2beta1WebDetection
      type: object
      description: Relevant information for the image from the Internet.
    GoogleCloudVisionV1p3beta1NormalizedVertex:
      description: 'A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.'
      type: object
      id: GoogleCloudVisionV1p3beta1NormalizedVertex
      properties:
        x:
          type: number
          description: X coordinate.
          format: float
        'y':
          format: float
          description: Y coordinate.
          type: number
    GoogleCloudVisionV1p4beta1BoundingPoly:
      description: A bounding polygon for the detected image annotation.
      properties:
        vertices:
          description: The bounding polygon vertices.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Vertex'
          type: array
        normalizedVertices:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1NormalizedVertex'
          type: array
          description: The bounding polygon normalized vertices.
      id: GoogleCloudVisionV1p4beta1BoundingPoly
      type: object
    GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation:
      properties:
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
          description: Image region to which this object belongs. This must be populated.
        name:
          description: 'Object name, expressed in its `language_code` language.'
          type: string
        languageCode:
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
        score:
          format: float
          description: 'Score of the result. Range [0, 1].'
          type: number
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
      id: GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation
      type: object
      description: Set of detected objects with bounding boxes.
    AnnotateFileResponse:
      description: 'Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.'
      type: object
      properties:
        totalPages:
          type: integer
          description: This field gives the total number of pages in the file.
          format: int32
        error:
          description: 'If set, represents the error message for the failed request. The `responses` field will not be set in this case.'
          $ref: '#/components/schemas/Status'
        responses:
          type: array
          items:
            $ref: '#/components/schemas/AnnotateImageResponse'
          description: Individual responses to images found within the file. This field will be empty if the `error` field is set.
        inputConfig:
          description: Information about the file for which this response is generated.
          $ref: '#/components/schemas/InputConfig'
      id: AnnotateFileResponse
    GoogleCloudVisionV1p3beta1TextAnnotationTextProperty:
      properties:
        detectedBreak:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak'
          description: Detected start or end of a text segment.
        detectedLanguages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage'
          type: array
          description: A list of detected languages together with confidence.
      id: GoogleCloudVisionV1p3beta1TextAnnotationTextProperty
      description: Additional information detected on the structural component.
      type: object
    PurgeProductsRequest:
      description: Request message for the `PurgeProducts` method.
      properties:
        force:
          description: The default value is false. Override this value to true to actually perform the purge.
          type: boolean
        deleteOrphanProducts:
          description: 'If delete_orphan_products is true, all Products that are not in any ProductSet will be deleted.'
          type: boolean
        productSetPurgeConfig:
          description: Specify which ProductSet contains the Products to be deleted.
          $ref: '#/components/schemas/ProductSetPurgeConfig'
      id: PurgeProductsRequest
      type: object
    GoogleCloudVisionV1p3beta1WebDetectionWebPage:
      type: object
      properties:
        score:
          type: number
          description: (Deprecated) Overall relevancy score for the web page.
          format: float
        url:
          description: The result web page URL.
          type: string
        pageTitle:
          description: 'Title for the web page, may contain HTML markups.'
          type: string
        partialMatchingImages:
          description: Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage'
          type: array
        fullMatchingImages:
          description: Fully matching images on the page. Can include resized copies of the query image.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage'
      description: Metadata for web pages.
      id: GoogleCloudVisionV1p3beta1WebDetectionWebPage
    ImageSource:
      type: object
      id: ImageSource
      properties:
        imageUri:
          description: 'The URI of the source image. Can be either: 1. A Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info. 2. A publicly-accessible image HTTP/HTTPS URL. When fetching images from HTTP/HTTPS URLs, Google cannot guarantee that the request will be completed. Your request may fail if the specified host denies the request (e.g. due to request throttling or DOS prevention), or if Google throttles requests to the site for abuse prevention. You should not depend on externally-hosted images for production applications. When both `gcs_image_uri` and `image_uri` are specified, `image_uri` takes precedence.'
          type: string
        gcsImageUri:
          description: '**Use `image_uri` instead.** The Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.'
          type: string
      description: External image source (Google Cloud Storage or web URL image location).
    KeyValue:
      id: KeyValue
      type: object
      properties:
        key:
          type: string
          description: The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
        value:
          type: string
          description: The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
      description: A product label represented as a key-value pair.
    GoogleCloudVisionV1p4beta1Paragraph:
      id: GoogleCloudVisionV1p4beta1Paragraph
      description: Structural unit of text representing a number of words in certain order.
      type: object
      properties:
        words:
          type: array
          description: List of all words in this paragraph.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Word'
        confidence:
          description: 'Confidence of the OCR results for the paragraph. Range [0, 1].'
          format: float
          type: number
        property:
          description: Additional information detected for the paragraph.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty'
        boundingBox:
          description: 'The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
    GoogleCloudVisionV1p4beta1WebDetectionWebEntity:
      type: object
      properties:
        entityId:
          description: Opaque entity ID.
          type: string
        description:
          description: 'Canonical description of the entity, in English.'
          type: string
        score:
          description: Overall relevancy score for the entity. Not normalized and not comparable across different image queries.
          type: number
          format: float
      description: Entity deduced from similar images on the Internet.
      id: GoogleCloudVisionV1p4beta1WebDetectionWebEntity
    GoogleCloudVisionV1p4beta1LocationInfo:
      description: Detected entity location information.
      properties:
        latLng:
          description: lat/long location coordinates.
          $ref: '#/components/schemas/LatLng'
      type: object
      id: GoogleCloudVisionV1p4beta1LocationInfo
    GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse:
      properties:
        outputConfig:
          description: The output location and metadata from AsyncAnnotateFileRequest.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1OutputConfig'
      id: GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse
      type: object
      description: The response for a single offline file annotation request.
    GoogleCloudVisionV1p4beta1FaceRecognitionResult:
      type: object
      properties:
        confidence:
          description: 'Recognition confidence. Range [0, 1].'
          type: number
          format: float
        celebrity:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Celebrity'
          description: The Celebrity that this face was matched to.
      description: Information about a face's identity.
      id: GoogleCloudVisionV1p4beta1FaceRecognitionResult
    CropHintsAnnotation:
      id: CropHintsAnnotation
      type: object
      description: Set of crop hints that are used to generate new crops when serving images.
      properties:
        cropHints:
          items:
            $ref: '#/components/schemas/CropHint'
          description: Crop hint results.
          type: array
    GoogleCloudVisionV1p1beta1TextAnnotation:
      description: 'TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.'
      properties:
        text:
          description: UTF-8 text detected on the pages.
          type: string
        pages:
          type: array
          description: List of pages detected by OCR.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Page'
      type: object
      id: GoogleCloudVisionV1p1beta1TextAnnotation
    GoogleCloudVisionV1p3beta1SafeSearchAnnotation:
      description: 'Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).'
      id: GoogleCloudVisionV1p3beta1SafeSearchAnnotation
      properties:
        racy:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: 'Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.'
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        medical:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: Likelihood that this is a medical image.
        violence:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Likelihood that this image contains violent content.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        adult:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: 'Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities.'
        spoof:
          description: Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
      type: object
    GoogleCloudVisionV1p4beta1Vertex:
      type: object
      description: 'A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.'
      id: GoogleCloudVisionV1p4beta1Vertex
      properties:
        x:
          description: X coordinate.
          format: int32
          type: integer
        'y':
          description: Y coordinate.
          format: int32
          type: integer
    GoogleCloudVisionV1p1beta1Block:
      id: GoogleCloudVisionV1p1beta1Block
      type: object
      properties:
        confidence:
          format: float
          type: number
          description: 'Confidence of the OCR results on the block. Range [0, 1].'
        blockType:
          type: string
          description: 'Detected block type (text, image etc) for this block.'
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
          description: 'The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        paragraphs:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Paragraph'
          type: array
          description: List of paragraphs in this block (if this blocks is of type text).
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty'
          description: Additional information detected for the block.
      description: Logical element on the page.
    GoogleCloudVisionV1p3beta1GcsDestination:
      description: The Google Cloud Storage location where the output will be written to.
      type: object
      properties:
        uri:
          type: string
          description: 'Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with "filenameprefix". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files.'
      id: GoogleCloudVisionV1p3beta1GcsDestination
    Color:
      properties:
        green:
          format: float
          description: 'The amount of green in the color as a value in the interval [0, 1].'
          type: number
        alpha:
          format: float
          type: number
          description: 'The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).'
        blue:
          type: number
          format: float
          description: 'The amount of blue in the color as a value in the interval [0, 1].'
        red:
          format: float
          type: number
          description: 'The amount of red in the color as a value in the interval [0, 1].'
      id: Color
      type: object
      description: 'Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor''s `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn''t have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!(''alpha'' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join('',''); return [''rgba('', rgbParams, '','', alphaFrac, '')''].join(''''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = [''#'']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push(''0''); } resultBuilder.push(hexString); return resultBuilder.join(''''); }; // ...'
    GoogleCloudVisionV1p3beta1WebDetection:
      id: GoogleCloudVisionV1p3beta1WebDetection
      description: Relevant information for the image from the Internet.
      type: object
      properties:
        visuallySimilarImages:
          description: The visually similar image results.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage'
          type: array
        pagesWithMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebPage'
          type: array
          description: Web pages containing the matching images from the Internet.
        webEntities:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebEntity'
          type: array
          description: Deduced entities from similar images on the Internet.
        partialMatchingImages:
          description: Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage'
        bestGuessLabels:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebLabel'
          type: array
          description: The service's best guess as to the topic of the request image. Inferred from similar images on the open web.
        fullMatchingImages:
          description: Fully matching images from the Internet. Can include resized copies of the query image.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage'
          type: array
    GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation:
      type: object
      properties:
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
        name:
          type: string
          description: 'Object name, expressed in its `language_code` language.'
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        score:
          description: 'Score of the result. Range [0, 1].'
          format: float
          type: number
      id: GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation
      description: Prediction for what the object in the bounding box is.
    GoogleCloudVisionV1p3beta1Symbol:
      properties:
        confidence:
          type: number
          description: 'Confidence of the OCR results for the symbol. Range [0, 1].'
          format: float
        text:
          description: The actual UTF-8 representation of the symbol.
          type: string
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: 'The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        property:
          description: Additional information detected for the symbol.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty'
      type: object
      description: A single symbol representation.
      id: GoogleCloudVisionV1p3beta1Symbol
    GoogleCloudVisionV1p4beta1EntityAnnotation:
      description: Set of detected entity features.
      properties:
        boundingPoly:
          description: Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
        description:
          type: string
          description: 'Entity textual description, expressed in its `locale` language.'
        locations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1LocationInfo'
          description: 'The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.'
          type: array
        topicality:
          description: 'The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of "tower" is likely higher to an image containing the detected "Eiffel Tower" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].'
          type: number
          format: float
        mid:
          type: string
          description: 'Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).'
        confidence:
          format: float
          deprecated: true
          description: '**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the "Eiffel Tower" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].'
          type: number
        properties:
          description: 'Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Property'
        score:
          format: float
          type: number
          description: 'Overall score of the result. Range [0, 1].'
        locale:
          type: string
          description: The language code for the locale in which the entity textual `description` is expressed.
      type: object
      id: GoogleCloudVisionV1p4beta1EntityAnnotation
    ProductSearchParams:
      description: Parameters for a product search request.
      type: object
      id: ProductSearchParams
      properties:
        productCategories:
          items:
            type: string
          type: array
          description: 'The list of product categories to search in. Currently, we only consider the first category, and either "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1", or "general-v1" should be specified. The legacy categories "homegoods", "apparel", and "toys" are still supported but will be deprecated. For new products, please use "homegoods-v2", "apparel-v2", or "toys-v2" for better product search accuracy. It is recommended to migrate existing products to these categories as well.'
        boundingPoly:
          $ref: '#/components/schemas/BoundingPoly'
          description: 'The bounding polygon around the area of interest in the image. If it is not specified, system discretion will be applied.'
        filter:
          type: string
          description: 'The filtering expression. This can be used to restrict search results based on Product labels. We currently support an AND of OR of key-value expressions, where each expression within an OR must have the same key. An ''='' should be used to connect the key and value. For example, "(color = red OR color = blue) AND brand = Google" is acceptable, but "(color = red OR brand = Google)" is not acceptable. "color: red" is not acceptable because it uses a '':'' instead of an ''=''.'
        productSet:
          description: 'The resource name of a ProductSet to be searched for similar images. Format is: `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`.'
          type: string
    GoogleCloudVisionV1p2beta1FaceAnnotation:
      type: object
      id: GoogleCloudVisionV1p2beta1FaceAnnotation
      properties:
        fdBoundingPoly:
          description: 'The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the "amount of skin" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
        headwearLikelihood:
          type: string
          description: Headwear likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        landmarks:
          description: Detected face landmarks.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1FaceAnnotationLandmark'
        angerLikelihood:
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Anger likelihood.
        sorrowLikelihood:
          description: Sorrow likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        underExposedLikelihood:
          description: Under-exposed likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        joyLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Joy likelihood.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        tiltAngle:
          type: number
          format: float
          description: 'Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image''s horizontal plane. Range [-180,180].'
        panAngle:
          description: 'Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180].'
          format: float
          type: number
        surpriseLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Surprise likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        boundingPoly:
          description: The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to "frame" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
        detectionConfidence:
          type: number
          description: 'Detection confidence. Range [0, 1].'
          format: float
        blurredLikelihood:
          type: string
          description: Blurred likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        rollAngle:
          format: float
          description: 'Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].'
          type: number
        landmarkingConfidence:
          format: float
          description: 'Face landmarking confidence. Range [0, 1].'
          type: number
      description: A face annotation object contains the results of face detection.
    Property:
      properties:
        uint64Value:
          description: Value of numeric properties.
          format: uint64
          type: string
        name:
          description: Name of the property.
          type: string
        value:
          type: string
          description: Value of the property.
      id: Property
      type: object
      description: A `Property` consists of a user-supplied name/value pair.
    GoogleCloudVisionV1p2beta1ImageProperties:
      type: object
      description: 'Stores image properties, such as dominant colors.'
      properties:
        dominantColors:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1DominantColorsAnnotation'
          description: 'If present, dominant colors completed successfully.'
      id: GoogleCloudVisionV1p2beta1ImageProperties
    AnnotateImageResponse:
      description: Response to an image annotation request.
      id: AnnotateImageResponse
      properties:
        cropHintsAnnotation:
          description: 'If present, crop hints have completed successfully.'
          $ref: '#/components/schemas/CropHintsAnnotation'
        logoAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/EntityAnnotation'
          description: 'If present, logo detection has completed successfully.'
        productSearchResults:
          description: 'If present, product search has completed successfully.'
          $ref: '#/components/schemas/ProductSearchResults'
        landmarkAnnotations:
          items:
            $ref: '#/components/schemas/EntityAnnotation'
          type: array
          description: 'If present, landmark detection has completed successfully.'
        safeSearchAnnotation:
          $ref: '#/components/schemas/SafeSearchAnnotation'
          description: 'If present, safe-search annotation has completed successfully.'
        localizedObjectAnnotations:
          description: 'If present, localized object detection has completed successfully. This will be sorted descending by confidence score.'
          items:
            $ref: '#/components/schemas/LocalizedObjectAnnotation'
          type: array
        webDetection:
          description: 'If present, web detection has completed successfully.'
          $ref: '#/components/schemas/WebDetection'
        faceAnnotations:
          items:
            $ref: '#/components/schemas/FaceAnnotation'
          type: array
          description: 'If present, face detection has completed successfully.'
        error:
          description: 'If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set.'
          $ref: '#/components/schemas/Status'
        fullTextAnnotation:
          description: 'If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text.'
          $ref: '#/components/schemas/TextAnnotation'
        context:
          $ref: '#/components/schemas/ImageAnnotationContext'
          description: 'If present, contextual information is needed to understand where this image comes from.'
        imagePropertiesAnnotation:
          description: 'If present, image properties were extracted successfully.'
          $ref: '#/components/schemas/ImageProperties'
        textAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/EntityAnnotation'
          description: 'If present, text (OCR) detection has completed successfully.'
        labelAnnotations:
          items:
            $ref: '#/components/schemas/EntityAnnotation'
          type: array
          description: 'If present, label detection has completed successfully.'
      type: object
    GoogleCloudVisionV1p3beta1Product:
      properties:
        name:
          description: 'The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product.'
          type: string
        productCategory:
          type: string
          description: 'Immutable. The category for the product identified by the reference image. This should be one of "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories "homegoods", "apparel", and "toys" are still supported, but these should not be used for new products.'
        description:
          description: User-provided metadata to be stored with this product. Must be at most 4096 characters long.
          type: string
        displayName:
          type: string
          description: The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long.
        productLabels:
          type: array
          description: 'Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. "1199". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductKeyValue'
      description: A Product contains ReferenceImages.
      type: object
      id: GoogleCloudVisionV1p3beta1Product
    GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage:
      properties:
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        confidence:
          format: float
          type: number
          description: 'Confidence of detected language. Range [0, 1].'
      description: Detected language for a structural component.
      id: GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage
      type: object
    GoogleCloudVisionV1p4beta1Block:
      description: Logical element on the page.
      id: GoogleCloudVisionV1p4beta1Block
      type: object
      properties:
        paragraphs:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Paragraph'
          description: List of paragraphs in this block (if this blocks is of type text).
          type: array
        boundingBox:
          description: 'The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty'
          description: Additional information detected for the block.
        blockType:
          description: 'Detected block type (text, image etc) for this block.'
          type: string
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
        confidence:
          type: number
          description: 'Confidence of the OCR results on the block. Range [0, 1].'
          format: float
    GoogleCloudVisionV1p2beta1TextAnnotation:
      description: 'TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.'
      type: object
      properties:
        text:
          type: string
          description: UTF-8 text detected on the pages.
        pages:
          description: List of pages detected by OCR.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Page'
      id: GoogleCloudVisionV1p2beta1TextAnnotation
    GoogleCloudVisionV1p2beta1Symbol:
      properties:
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty'
          description: Additional information detected for the symbol.
        confidence:
          format: float
          description: 'Confidence of the OCR results for the symbol. Range [0, 1].'
          type: number
        boundingBox:
          description: 'The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
        text:
          type: string
          description: The actual UTF-8 representation of the symbol.
      id: GoogleCloudVisionV1p2beta1Symbol
      type: object
      description: A single symbol representation.
    GoogleCloudVisionV1p2beta1AsyncBatchAnnotateFilesResponse:
      id: GoogleCloudVisionV1p2beta1AsyncBatchAnnotateFilesResponse
      type: object
      description: Response to an async batch file annotation request.
      properties:
        responses:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse'
          type: array
          description: 'The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest.'
    Empty:
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      properties: {}
    GoogleCloudVisionV1p1beta1EntityAnnotation:
      id: GoogleCloudVisionV1p1beta1EntityAnnotation
      type: object
      properties:
        description:
          description: 'Entity textual description, expressed in its `locale` language.'
          type: string
        mid:
          description: 'Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).'
          type: string
        score:
          description: 'Overall score of the result. Range [0, 1].'
          type: number
          format: float
        properties:
          type: array
          description: 'Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Property'
        locations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1LocationInfo'
          description: 'The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.'
          type: array
        topicality:
          description: 'The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of "tower" is likely higher to an image containing the detected "Eiffel Tower" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].'
          format: float
          type: number
        locale:
          description: The language code for the locale in which the entity textual `description` is expressed.
          type: string
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
          description: Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features.
        confidence:
          type: number
          deprecated: true
          description: '**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the "Eiffel Tower" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].'
          format: float
      description: Set of detected entity features.
    GoogleCloudVisionV1p3beta1CropHintsAnnotation:
      description: Set of crop hints that are used to generate new crops when serving images.
      properties:
        cropHints:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1CropHint'
          type: array
          description: Crop hint results.
      id: GoogleCloudVisionV1p3beta1CropHintsAnnotation
      type: object
    GoogleCloudVisionV1p1beta1ProductSearchResults:
      id: GoogleCloudVisionV1p1beta1ProductSearchResults
      properties:
        productGroupedResults:
          type: array
          description: 'List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult'
        indexTime:
          type: string
          format: google-datetime
          description: Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results.
        results:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResultsResult'
          description: 'List of results, one for each product match.'
      description: Results for a product search request.
      type: object
    BoundingPoly:
      description: A bounding polygon for the detected image annotation.
      type: object
      id: BoundingPoly
      properties:
        vertices:
          type: array
          items:
            $ref: '#/components/schemas/Vertex'
          description: The bounding polygon vertices.
        normalizedVertices:
          type: array
          items:
            $ref: '#/components/schemas/NormalizedVertex'
          description: The bounding polygon normalized vertices.
    GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage:
      description: Detected language for a structural component.
      type: object
      properties:
        confidence:
          type: number
          format: float
          description: 'Confidence of detected language. Range [0, 1].'
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
      id: GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage
    CropHint:
      properties:
        importanceFraction:
          format: float
          type: number
          description: Fraction of importance of this salient region with respect to the original image.
        confidence:
          type: number
          format: float
          description: 'Confidence of this being a salient region. Range [0, 1].'
        boundingPoly:
          $ref: '#/components/schemas/BoundingPoly'
          description: The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale.
      description: Single crop hint that is used to generate a new crop when serving an image.
      type: object
      id: CropHint
    GoogleCloudVisionV1p3beta1BoundingPoly:
      description: A bounding polygon for the detected image annotation.
      properties:
        vertices:
          description: The bounding polygon vertices.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Vertex'
        normalizedVertices:
          description: The bounding polygon normalized vertices.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1NormalizedVertex'
      type: object
      id: GoogleCloudVisionV1p3beta1BoundingPoly
    GoogleCloudVisionV1p4beta1CropHintsAnnotation:
      properties:
        cropHints:
          type: array
          description: Crop hint results.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1CropHint'
      id: GoogleCloudVisionV1p4beta1CropHintsAnnotation
      type: object
      description: Set of crop hints that are used to generate new crops when serving images.
    FaceAnnotation:
      description: A face annotation object contains the results of face detection.
      id: FaceAnnotation
      type: object
      properties:
        surpriseLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Surprise likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        rollAngle:
          type: number
          description: 'Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].'
          format: float
        fdBoundingPoly:
          description: 'The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the "amount of skin" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix.'
          $ref: '#/components/schemas/BoundingPoly'
        sorrowLikelihood:
          description: Sorrow likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        detectionConfidence:
          description: 'Detection confidence. Range [0, 1].'
          type: number
          format: float
        boundingPoly:
          description: The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to "frame" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated.
          $ref: '#/components/schemas/BoundingPoly'
        blurredLikelihood:
          type: string
          description: Blurred likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        headwearLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Headwear likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        tiltAngle:
          type: number
          description: 'Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image''s horizontal plane. Range [-180,180].'
          format: float
        panAngle:
          format: float
          description: 'Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180].'
          type: number
        landmarks:
          items:
            $ref: '#/components/schemas/Landmark'
          type: array
          description: Detected face landmarks.
        joyLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Joy likelihood.
          type: string
        landmarkingConfidence:
          format: float
          description: 'Face landmarking confidence. Range [0, 1].'
          type: number
        underExposedLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Under-exposed likelihood.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        angerLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          description: Anger likelihood.
    GoogleCloudVisionV1p3beta1ProductSearchResultsResult:
      properties:
        product:
          description: The Product.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Product'
        score:
          type: number
          description: 'A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).'
          format: float
        image:
          description: The resource name of the image from the product that is the closest match to the query.
          type: string
      type: object
      id: GoogleCloudVisionV1p3beta1ProductSearchResultsResult
      description: Information about a product.
    GoogleCloudVisionV1p4beta1ImportProductSetsResponse:
      properties:
        statuses:
          items:
            $ref: '#/components/schemas/Status'
          type: array
          description: 'The rpc status for each ImportProductSet request, including both successes and errors. The number of statuses here matches the number of lines in the csv file, and statuses[i] stores the success or failure status of processing the i-th line of the csv, starting from line 0.'
        referenceImages:
          description: The list of reference_images that are imported successfully.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ReferenceImage'
      type: object
      description: Response message for the `ImportProductSets` method. This message is returned by the google.longrunning.Operations.GetOperation method in the returned google.longrunning.Operation.response field.
      id: GoogleCloudVisionV1p4beta1ImportProductSetsResponse
    GoogleCloudVisionV1p2beta1ColorInfo:
      type: object
      id: GoogleCloudVisionV1p2beta1ColorInfo
      description: 'Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.'
      properties:
        pixelFraction:
          description: 'The fraction of pixels the color occupies in the image. Value in range [0, 1].'
          type: number
          format: float
        color:
          $ref: '#/components/schemas/Color'
          description: RGB components of the color.
        score:
          type: number
          description: 'Image-specific score for this color. Value in range [0, 1].'
          format: float
    ImageAnnotationContext:
      id: ImageAnnotationContext
      type: object
      description: 'If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.'
      properties:
        pageNumber:
          description: 'If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image.'
          type: integer
          format: int32
        uri:
          description: The URI of the file used to produce the image.
          type: string
    GoogleCloudVisionV1p4beta1InputConfig:
      type: object
      description: The desired input location and metadata.
      properties:
        mimeType:
          description: 'The type of the file. Currently only "application/pdf", "image/tiff" and "image/gif" are supported. Wildcards are not supported.'
          type: string
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1GcsSource'
          description: The Google Cloud Storage location to read the input from.
        content:
          description: 'File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests.'
          format: byte
          type: string
      id: GoogleCloudVisionV1p4beta1InputConfig
    GoogleCloudVisionV1p4beta1SafeSearchAnnotation:
      description: 'Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).'
      type: object
      id: GoogleCloudVisionV1p4beta1SafeSearchAnnotation
      properties:
        adult:
          description: 'Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities.'
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        spoof:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive.
        medical:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Likelihood that this is a medical image.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        violence:
          description: Likelihood that this image contains violent content.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        racy:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: 'Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.'
          type: string
    WebDetection:
      description: Relevant information for the image from the Internet.
      id: WebDetection
      type: object
      properties:
        pagesWithMatchingImages:
          description: Web pages containing the matching images from the Internet.
          type: array
          items:
            $ref: '#/components/schemas/WebPage'
        webEntities:
          description: Deduced entities from similar images on the Internet.
          items:
            $ref: '#/components/schemas/WebEntity'
          type: array
        bestGuessLabels:
          items:
            $ref: '#/components/schemas/WebLabel'
          type: array
          description: The service's best guess as to the topic of the request image. Inferred from similar images on the open web.
        fullMatchingImages:
          items:
            $ref: '#/components/schemas/WebImage'
          type: array
          description: Fully matching images from the Internet. Can include resized copies of the query image.
        partialMatchingImages:
          items:
            $ref: '#/components/schemas/WebImage'
          type: array
          description: Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
        visuallySimilarImages:
          items:
            $ref: '#/components/schemas/WebImage'
          description: The visually similar image results.
          type: array
    GoogleCloudVisionV1p3beta1Paragraph:
      id: GoogleCloudVisionV1p3beta1Paragraph
      properties:
        confidence:
          type: number
          description: 'Confidence of the OCR results for the paragraph. Range [0, 1].'
          format: float
        boundingBox:
          description: 'The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
        property:
          description: Additional information detected for the paragraph.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty'
        words:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Word'
          description: List of all words in this paragraph.
      description: Structural unit of text representing a number of words in certain order.
      type: object
    WebDetectionParams:
      type: object
      properties:
        includeGeoResults:
          description: Whether to include results derived from the geo information in the image.
          type: boolean
      id: WebDetectionParams
      description: Parameters for web detection request.
    GoogleCloudVisionV1p3beta1EntityAnnotation:
      type: object
      description: Set of detected entity features.
      properties:
        locations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1LocationInfo'
          description: 'The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.'
          type: array
        topicality:
          description: 'The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of "tower" is likely higher to an image containing the detected "Eiffel Tower" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].'
          type: number
          format: float
        mid:
          type: string
          description: 'Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).'
        locale:
          type: string
          description: The language code for the locale in which the entity textual `description` is expressed.
        properties:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Property'
          description: 'Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.'
        confidence:
          description: '**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the "Eiffel Tower" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].'
          type: number
          format: float
          deprecated: true
        description:
          description: 'Entity textual description, expressed in its `locale` language.'
          type: string
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features.
        score:
          format: float
          description: 'Overall score of the result. Range [0, 1].'
          type: number
      id: GoogleCloudVisionV1p3beta1EntityAnnotation
    GoogleCloudVisionV1p3beta1Page:
      properties:
        confidence:
          format: float
          description: 'Confidence of the OCR results on the page. Range [0, 1].'
          type: number
        blocks:
          description: 'List of blocks of text, images etc on this page.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Block'
        height:
          type: integer
          format: int32
          description: Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
        width:
          description: Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
          type: integer
          format: int32
        property:
          description: Additional information detected on the page.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty'
      type: object
      description: Detected page from OCR.
      id: GoogleCloudVisionV1p3beta1Page
    GoogleCloudVisionV1p3beta1BatchOperationMetadata:
      id: GoogleCloudVisionV1p3beta1BatchOperationMetadata
      properties:
        endTime:
          type: string
          format: google-datetime
          description: The time when the batch request is finished and google.longrunning.Operation.done is set to true.
        state:
          enum:
            - STATE_UNSPECIFIED
            - PROCESSING
            - SUCCESSFUL
            - FAILED
            - CANCELLED
          description: The current state of the batch operation.
          type: string
          enumDescriptions:
            - Invalid.
            - Request is actively being processed.
            - The request is done and at least one item has been successfully processed.
            - The request is done and no item has been successfully processed.
            - The request is done after the longrunning.Operations.CancelOperation has been called by the user. Any records that were processed before the cancel command are output as specified in the request.
        submitTime:
          description: The time when the batch request was submitted to the server.
          format: google-datetime
          type: string
      type: object
      description: 'Metadata for the batch operations such as the current state. This is included in the `metadata` field of the `Operation` returned by the `GetOperation` call of the `google::longrunning::Operations` service.'
    GoogleCloudVisionV1p1beta1WebDetectionWebLabel:
      type: object
      id: GoogleCloudVisionV1p1beta1WebDetectionWebLabel
      properties:
        languageCode:
          description: 'The BCP-47 language code for `label`, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
        label:
          description: Label for extra metadata.
          type: string
      description: Label to provide extra metadata for the web detection.
    GoogleCloudVisionV1p1beta1TextAnnotationTextProperty:
      id: GoogleCloudVisionV1p1beta1TextAnnotationTextProperty
      type: object
      description: Additional information detected on the structural component.
      properties:
        detectedLanguages:
          type: array
          description: A list of detected languages together with confidence.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage'
        detectedBreak:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak'
          description: Detected start or end of a text segment.
    ColorInfo:
      type: object
      id: ColorInfo
      description: 'Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.'
      properties:
        color:
          $ref: '#/components/schemas/Color'
          description: RGB components of the color.
        score:
          type: number
          format: float
          description: 'Image-specific score for this color. Value in range [0, 1].'
        pixelFraction:
          description: 'The fraction of pixels the color occupies in the image. Value in range [0, 1].'
          format: float
          type: number
    GoogleCloudVisionV1p4beta1OperationMetadata:
      properties:
        updateTime:
          type: string
          description: The time when the operation result was last updated.
          format: google-datetime
        state:
          type: string
          description: Current state of the batch operation.
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
        createTime:
          description: The time when the batch request was received.
          format: google-datetime
          type: string
      description: Contains metadata for the BatchAnnotateImages operation.
      id: GoogleCloudVisionV1p4beta1OperationMetadata
      type: object
    LatLng:
      id: LatLng
      properties:
        latitude:
          format: double
          description: 'The latitude in degrees. It must be in the range [-90.0, +90.0].'
          type: number
        longitude:
          description: 'The longitude in degrees. It must be in the range [-180.0, +180.0].'
          format: double
          type: number
      type: object
      description: 'An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.'
    GoogleCloudVisionV1p4beta1WebDetectionWebImage:
      description: Metadata for online images.
      type: object
      properties:
        score:
          format: float
          description: (Deprecated) Overall relevancy score for the image.
          type: number
        url:
          type: string
          description: The result image URL.
      id: GoogleCloudVisionV1p4beta1WebDetectionWebImage
    TextDetectionParams:
      properties:
        enableTextDetectionConfidenceScore:
          type: boolean
          description: 'By default, Cloud Vision API only includes confidence score for DOCUMENT_TEXT_DETECTION result. Set the flag to true to include confidence score for TEXT_DETECTION as well.'
        advancedOcrOptions:
          description: 'A list of advanced OCR options to further fine-tune OCR behavior. Current valid values are: - `legacy_layout`: a heuristics layout detection algorithm, which serves as an alternative to the current ML-based layout detection algorithm. Customers can choose the best suitable layout algorithm based on their situation.'
          items:
            type: string
          type: array
      id: TextDetectionParams
      type: object
      description: Parameters for text detections. This is used to control TEXT_DETECTION and DOCUMENT_TEXT_DETECTION features.
    GoogleCloudVisionV1p4beta1Celebrity:
      properties:
        description:
          description: The Celebrity's description.
          type: string
        displayName:
          type: string
          description: The Celebrity's display name.
        name:
          type: string
          description: 'The resource name of the preloaded Celebrity. Has the format `builtin/{mid}`.'
      type: object
      id: GoogleCloudVisionV1p4beta1Celebrity
      description: A Celebrity is a group of Faces with an identity.
    GoogleCloudVisionV1p4beta1AsyncBatchAnnotateFilesResponse:
      properties:
        responses:
          type: array
          description: 'The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse'
      id: GoogleCloudVisionV1p4beta1AsyncBatchAnnotateFilesResponse
      type: object
      description: Response to an async batch file annotation request.
    AsyncBatchAnnotateFilesRequest:
      type: object
      properties:
        parent:
          type: string
          description: 'Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.'
        requests:
          type: array
          description: Required. Individual async file annotation requests for this batch.
          items:
            $ref: '#/components/schemas/AsyncAnnotateFileRequest'
      description: Multiple async file annotation requests are batched into a single service call.
      id: AsyncBatchAnnotateFilesRequest
    WebEntity:
      type: object
      id: WebEntity
      properties:
        entityId:
          description: Opaque entity ID.
          type: string
        score:
          description: Overall relevancy score for the entity. Not normalized and not comparable across different image queries.
          format: float
          type: number
        description:
          description: 'Canonical description of the entity, in English.'
          type: string
      description: Entity deduced from similar images on the Internet.
    GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult:
      type: object
      id: GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult
      properties:
        boundingPoly:
          description: The bounding polygon around the product detected in the query image.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
        results:
          description: 'List of results, one for each product match.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResultsResult'
          type: array
        objectAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation'
          description: List of generic predictions for the object in the bounding box.
          type: array
      description: Information about the products similar to a single product in a query image.
    AsyncBatchAnnotateImagesResponse:
      type: object
      properties:
        outputConfig:
          description: The output location and metadata from AsyncBatchAnnotateImagesRequest.
          $ref: '#/components/schemas/OutputConfig'
      id: AsyncBatchAnnotateImagesResponse
      description: Response to an async batch image annotation request.
    GoogleCloudVisionV1p1beta1Word:
      type: object
      properties:
        property:
          description: Additional information detected for the word.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty'
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
          description: 'The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        symbols:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Symbol'
          type: array
          description: List of symbols in the word. The order of the symbols follows the natural reading order.
        confidence:
          description: 'Confidence of the OCR results for the word. Range [0, 1].'
          format: float
          type: number
      id: GoogleCloudVisionV1p1beta1Word
      description: A word representation.
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      id: CancelOperationRequest
      properties: {}
      type: object
    GoogleCloudVisionV1p3beta1ProductSearchResults:
      type: object
      properties:
        indexTime:
          description: Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results.
          type: string
          format: google-datetime
        productGroupedResults:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult'
          type: array
          description: 'List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results.'
        results:
          description: 'List of results, one for each product match.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResultsResult'
          type: array
      id: GoogleCloudVisionV1p3beta1ProductSearchResults
      description: Results for a product search request.
    GoogleCloudVisionV1p1beta1Vertex:
      description: 'A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.'
      properties:
        'y':
          type: integer
          description: Y coordinate.
          format: int32
        x:
          type: integer
          format: int32
          description: X coordinate.
      id: GoogleCloudVisionV1p1beta1Vertex
      type: object
    GoogleCloudVisionV1p4beta1AnnotateImageResponse:
      type: object
      id: GoogleCloudVisionV1p4beta1AnnotateImageResponse
      description: Response to an image annotation request.
      properties:
        imagePropertiesAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ImageProperties'
          description: 'If present, image properties were extracted successfully.'
        webDetection:
          description: 'If present, web detection has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetection'
        localizedObjectAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation'
          description: 'If present, localized object detection has completed successfully. This will be sorted descending by confidence score.'
          type: array
        logoAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1EntityAnnotation'
          description: 'If present, logo detection has completed successfully.'
        error:
          $ref: '#/components/schemas/Status'
          description: 'If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set.'
        context:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ImageAnnotationContext'
          description: 'If present, contextual information is needed to understand where this image comes from.'
        safeSearchAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1SafeSearchAnnotation'
          description: 'If present, safe-search annotation has completed successfully.'
        cropHintsAnnotation:
          description: 'If present, crop hints have completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1CropHintsAnnotation'
        productSearchResults:
          description: 'If present, product search has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResults'
        labelAnnotations:
          description: 'If present, label detection has completed successfully.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1EntityAnnotation'
        textAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1EntityAnnotation'
          description: 'If present, text (OCR) detection has completed successfully.'
        faceAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1FaceAnnotation'
          description: 'If present, face detection has completed successfully.'
          type: array
        landmarkAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1EntityAnnotation'
          type: array
          description: 'If present, landmark detection has completed successfully.'
        fullTextAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotation'
          description: 'If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text.'
    GoogleCloudVisionV1p2beta1GcsDestination:
      type: object
      properties:
        uri:
          type: string
          description: 'Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with "filenameprefix". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files.'
      id: GoogleCloudVisionV1p2beta1GcsDestination
      description: The Google Cloud Storage location where the output will be written to.
    InputConfig:
      type: object
      properties:
        gcsSource:
          $ref: '#/components/schemas/GcsSource'
          description: The Google Cloud Storage location to read the input from.
        mimeType:
          description: 'The type of the file. Currently only "application/pdf", "image/tiff" and "image/gif" are supported. Wildcards are not supported.'
          type: string
        content:
          type: string
          format: byte
          description: 'File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests.'
      id: InputConfig
      description: The desired input location and metadata.
    GoogleCloudVisionV1p1beta1OperationMetadata:
      id: GoogleCloudVisionV1p1beta1OperationMetadata
      type: object
      properties:
        updateTime:
          type: string
          format: google-datetime
          description: The time when the operation result was last updated.
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
          description: Current state of the batch operation.
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
        createTime:
          description: The time when the batch request was received.
          format: google-datetime
          type: string
      description: Contains metadata for the BatchAnnotateImages operation.
    GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult:
      properties:
        results:
          type: array
          description: 'List of results, one for each product match.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResultsResult'
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: The bounding polygon around the product detected in the query image.
        objectAnnotations:
          description: List of generic predictions for the object in the bounding box.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation'
      type: object
      id: GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult
      description: Information about the products similar to a single product in a query image.
    ListReferenceImagesResponse:
      id: ListReferenceImagesResponse
      properties:
        pageSize:
          type: integer
          description: 'The maximum number of items to return. Default 10, maximum 100.'
          format: int32
        referenceImages:
          items:
            $ref: '#/components/schemas/ReferenceImage'
          type: array
          description: The list of reference images.
        nextPageToken:
          type: string
          description: 'The next_page_token returned from a previous List request, if any.'
      type: object
      description: Response message for the `ListReferenceImages` method.
    GoogleCloudVisionV1p1beta1GcsDestination:
      description: The Google Cloud Storage location where the output will be written to.
      id: GoogleCloudVisionV1p1beta1GcsDestination
      type: object
      properties:
        uri:
          description: 'Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with "filenameprefix". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files.'
          type: string
    ProductSet:
      type: object
      properties:
        indexTime:
          description: 'Output only. The time at which this ProductSet was last indexed. Query results will reflect all updates before this time. If this ProductSet has never been indexed, this timestamp is the default value "1970-01-01T00:00:00Z". This field is ignored when creating a ProductSet.'
          readOnly: true
          type: string
          format: google-datetime
        displayName:
          description: The user-provided name for this ProductSet. Must not be empty. Must be at most 4096 characters long.
          type: string
        name:
          type: string
          description: 'The resource name of the ProductSet. Format is: `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`. This field is ignored when creating a ProductSet.'
        indexError:
          $ref: '#/components/schemas/Status'
          readOnly: true
          description: 'Output only. If there was an error with indexing the product set, the field is populated. This field is ignored when creating a ProductSet.'
      description: 'A ProductSet contains Products. A ProductSet can contain a maximum of 1 million reference images. If the limit is exceeded, periodic indexing will fail.'
      id: ProductSet
    GoogleCloudVisionV1p1beta1Page:
      id: GoogleCloudVisionV1p1beta1Page
      description: Detected page from OCR.
      type: object
      properties:
        confidence:
          type: number
          format: float
          description: 'Confidence of the OCR results on the page. Range [0, 1].'
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty'
          description: Additional information detected on the page.
        width:
          format: int32
          description: Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
          type: integer
        blocks:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Block'
          type: array
          description: 'List of blocks of text, images etc on this page.'
        height:
          type: integer
          format: int32
          description: Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
    GoogleCloudVisionV1p4beta1FaceAnnotationLandmark:
      description: 'A face-specific landmark (for example, a face feature).'
      properties:
        type:
          description: Face landmark type.
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
          type: string
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - 'Nose, bottom right.'
            - 'Nose, bottom left.'
            - 'Nose, bottom center.'
            - 'Left eye, top boundary.'
            - 'Left eye, right corner.'
            - 'Left eye, bottom boundary.'
            - 'Left eye, left corner.'
            - 'Right eye, top boundary.'
            - 'Right eye, right corner.'
            - 'Right eye, bottom boundary.'
            - 'Right eye, left corner.'
            - 'Left eyebrow, upper midpoint.'
            - 'Right eyebrow, upper midpoint.'
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
        position:
          description: Face landmark position.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Position'
      type: object
      id: GoogleCloudVisionV1p4beta1FaceAnnotationLandmark
    GoogleCloudVisionV1p4beta1ReferenceImage:
      description: 'A `ReferenceImage` represents a product image and its associated metadata, such as bounding boxes.'
      type: object
      id: GoogleCloudVisionV1p4beta1ReferenceImage
      properties:
        name:
          description: 'The resource name of the reference image. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`. This field is ignored when creating a reference image.'
          type: string
        boundingPolys:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          type: array
          description: 'Optional. Bounding polygons around the areas of interest in the reference image. If this field is empty, the system will try to detect regions of interest. At most 10 bounding polygons will be used. The provided shape is converted into a non-rotated rectangle. Once converted, the small edge of the rectangle must be greater than or equal to 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5 is not).'
        uri:
          description: 'Required. The Google Cloud Storage URI of the reference image. The URI must start with `gs://`.'
          type: string
    GoogleCloudVisionV1p4beta1Product:
      type: object
      id: GoogleCloudVisionV1p4beta1Product
      description: A Product contains ReferenceImages.
      properties:
        productLabels:
          type: array
          description: 'Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. "1199". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductKeyValue'
        name:
          type: string
          description: 'The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product.'
        productCategory:
          description: 'Immutable. The category for the product identified by the reference image. This should be one of "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories "homegoods", "apparel", and "toys" are still supported, but these should not be used for new products.'
          type: string
        displayName:
          description: The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long.
          type: string
        description:
          description: User-provided metadata to be stored with this product. Must be at most 4096 characters long.
          type: string
    GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse:
      type: object
      properties:
        outputConfig:
          description: The output location and metadata from AsyncAnnotateFileRequest.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1OutputConfig'
      id: GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse
      description: The response for a single offline file annotation request.
    GoogleCloudVisionV1p1beta1AnnotateFileResponse:
      type: object
      description: 'Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.'
      properties:
        error:
          description: 'If set, represents the error message for the failed request. The `responses` field will not be set in this case.'
          $ref: '#/components/schemas/Status'
        inputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1InputConfig'
          description: Information about the file for which this response is generated.
        totalPages:
          format: int32
          description: This field gives the total number of pages in the file.
          type: integer
        responses:
          description: Individual responses to images found within the file. This field will be empty if the `error` field is set.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1AnnotateImageResponse'
          type: array
      id: GoogleCloudVisionV1p1beta1AnnotateFileResponse
    GoogleCloudVisionV1p1beta1Position:
      type: object
      id: GoogleCloudVisionV1p1beta1Position
      properties:
        x:
          type: number
          format: float
          description: X coordinate.
        z:
          type: number
          format: float
          description: Z coordinate (or depth).
        'y':
          type: number
          description: Y coordinate.
          format: float
      description: 'A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image.'
    GoogleCloudVisionV1p1beta1WebDetection:
      type: object
      description: Relevant information for the image from the Internet.
      id: GoogleCloudVisionV1p1beta1WebDetection
      properties:
        partialMatchingImages:
          description: Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage'
          type: array
        bestGuessLabels:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebLabel'
          description: The service's best guess as to the topic of the request image. Inferred from similar images on the open web.
        visuallySimilarImages:
          type: array
          description: The visually similar image results.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage'
        webEntities:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebEntity'
          description: Deduced entities from similar images on the Internet.
          type: array
        fullMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage'
          type: array
          description: Fully matching images from the Internet. Can include resized copies of the query image.
        pagesWithMatchingImages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebPage'
          description: Web pages containing the matching images from the Internet.
    GoogleCloudVisionV1p3beta1AnnotateFileResponse:
      properties:
        totalPages:
          description: This field gives the total number of pages in the file.
          format: int32
          type: integer
        inputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1InputConfig'
          description: Information about the file for which this response is generated.
        error:
          $ref: '#/components/schemas/Status'
          description: 'If set, represents the error message for the failed request. The `responses` field will not be set in this case.'
        responses:
          description: Individual responses to images found within the file. This field will be empty if the `error` field is set.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1AnnotateImageResponse'
      id: GoogleCloudVisionV1p3beta1AnnotateFileResponse
      description: 'Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.'
      type: object
    GoogleCloudVisionV1p1beta1FaceAnnotationLandmark:
      id: GoogleCloudVisionV1p1beta1FaceAnnotationLandmark
      properties:
        position:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Position'
          description: Face landmark position.
        type:
          type: string
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
          description: Face landmark type.
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - 'Nose, bottom right.'
            - 'Nose, bottom left.'
            - 'Nose, bottom center.'
            - 'Left eye, top boundary.'
            - 'Left eye, right corner.'
            - 'Left eye, bottom boundary.'
            - 'Left eye, left corner.'
            - 'Right eye, top boundary.'
            - 'Right eye, right corner.'
            - 'Right eye, bottom boundary.'
            - 'Right eye, left corner.'
            - 'Left eyebrow, upper midpoint.'
            - 'Right eyebrow, upper midpoint.'
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
      description: 'A face-specific landmark (for example, a face feature).'
      type: object
    Product:
      id: Product
      properties:
        productCategory:
          description: 'Immutable. The category for the product identified by the reference image. This should be one of "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories "homegoods", "apparel", and "toys" are still supported, but these should not be used for new products.'
          type: string
        productLabels:
          type: array
          description: 'Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. "1199". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet.'
          items:
            $ref: '#/components/schemas/KeyValue'
        name:
          type: string
          description: 'The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product.'
        description:
          description: User-provided metadata to be stored with this product. Must be at most 4096 characters long.
          type: string
        displayName:
          type: string
          description: The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long.
      type: object
      description: A Product contains ReferenceImages.
    GoogleCloudVisionV1p2beta1EntityAnnotation:
      properties:
        confidence:
          deprecated: true
          description: '**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the "Eiffel Tower" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].'
          type: number
          format: float
        topicality:
          type: number
          format: float
          description: 'The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of "tower" is likely higher to an image containing the detected "Eiffel Tower" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].'
        locations:
          type: array
          description: 'The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1LocationInfo'
        description:
          description: 'Entity textual description, expressed in its `locale` language.'
          type: string
        score:
          type: number
          format: float
          description: 'Overall score of the result. Range [0, 1].'
        boundingPoly:
          description: Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
        properties:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Property'
          description: 'Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.'
          type: array
        locale:
          description: The language code for the locale in which the entity textual `description` is expressed.
          type: string
        mid:
          description: 'Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).'
          type: string
      description: Set of detected entity features.
      id: GoogleCloudVisionV1p2beta1EntityAnnotation
      type: object
    GoogleCloudVisionV1p2beta1OutputConfig:
      type: object
      description: The desired output location and metadata.
      properties:
        gcsDestination:
          description: The Google Cloud Storage location to write the output(s) to.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1GcsDestination'
        batchSize:
          format: int32
          description: 'The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations.'
          type: integer
      id: GoogleCloudVisionV1p2beta1OutputConfig
    SafeSearchAnnotation:
      properties:
        adult:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: 'Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities.'
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        medical:
          type: string
          description: Likelihood that this is a medical image.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        racy:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: 'Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.'
        spoof:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive.
        violence:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          description: Likelihood that this image contains violent content.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
      description: 'Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).'
      type: object
      id: SafeSearchAnnotation
    GoogleCloudVisionV1p4beta1GcsDestination:
      description: The Google Cloud Storage location where the output will be written to.
      id: GoogleCloudVisionV1p4beta1GcsDestination
      type: object
      properties:
        uri:
          type: string
          description: 'Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with "filenameprefix". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files.'
    GoogleCloudVisionV1p4beta1ProductKeyValue:
      description: A product label represented as a key-value pair.
      id: GoogleCloudVisionV1p4beta1ProductKeyValue
      properties:
        value:
          description: The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
          type: string
        key:
          description: The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
          type: string
      type: object
    AddProductToProductSetRequest:
      id: AddProductToProductSetRequest
      properties:
        product:
          type: string
          description: 'Required. The resource name for the Product to be added to this ProductSet. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`'
      type: object
      description: Request message for the `AddProductToProductSet` method.
    ListProductSetsResponse:
      properties:
        productSets:
          description: List of ProductSets.
          items:
            $ref: '#/components/schemas/ProductSet'
          type: array
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
      description: Response message for the `ListProductSets` method.
      id: ListProductSetsResponse
      type: object
    GoogleCloudVisionV1p2beta1CropHint:
      id: GoogleCloudVisionV1p2beta1CropHint
      type: object
      description: Single crop hint that is used to generate a new crop when serving an image.
      properties:
        importanceFraction:
          format: float
          type: number
          description: Fraction of importance of this salient region with respect to the original image.
        confidence:
          description: 'Confidence of this being a salient region. Range [0, 1].'
          format: float
          type: number
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
          description: The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale.
    NormalizedVertex:
      type: object
      description: 'A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.'
      properties:
        x:
          description: X coordinate.
          format: float
          type: number
        'y':
          format: float
          description: Y coordinate.
          type: number
      id: NormalizedVertex
    GoogleCloudVisionV1p2beta1Block:
      description: Logical element on the page.
      properties:
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
          description: 'The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        property:
          description: Additional information detected for the block.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty'
        blockType:
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
          description: 'Detected block type (text, image etc) for this block.'
          type: string
        paragraphs:
          description: List of paragraphs in this block (if this blocks is of type text).
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Paragraph'
        confidence:
          description: 'Confidence of the OCR results on the block. Range [0, 1].'
          format: float
          type: number
      type: object
      id: GoogleCloudVisionV1p2beta1Block
    GoogleCloudVisionV1p1beta1AnnotateImageResponse:
      type: object
      description: Response to an image annotation request.
      id: GoogleCloudVisionV1p1beta1AnnotateImageResponse
      properties:
        safeSearchAnnotation:
          description: 'If present, safe-search annotation has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1SafeSearchAnnotation'
        landmarkAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1EntityAnnotation'
          description: 'If present, landmark detection has completed successfully.'
        logoAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1EntityAnnotation'
          description: 'If present, logo detection has completed successfully.'
          type: array
        faceAnnotations:
          description: 'If present, face detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1FaceAnnotation'
          type: array
        localizedObjectAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation'
          type: array
          description: 'If present, localized object detection has completed successfully. This will be sorted descending by confidence score.'
        imagePropertiesAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ImageProperties'
          description: 'If present, image properties were extracted successfully.'
        error:
          $ref: '#/components/schemas/Status'
          description: 'If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set.'
        labelAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1EntityAnnotation'
          description: 'If present, label detection has completed successfully.'
        cropHintsAnnotation:
          description: 'If present, crop hints have completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1CropHintsAnnotation'
        webDetection:
          description: 'If present, web detection has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetection'
        fullTextAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotation'
          description: 'If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text.'
        textAnnotations:
          description: 'If present, text (OCR) detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1EntityAnnotation'
          type: array
        productSearchResults:
          description: 'If present, product search has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResults'
        context:
          description: 'If present, contextual information is needed to understand where this image comes from.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ImageAnnotationContext'
    GoogleCloudVisionV1p3beta1WebDetectionWebLabel:
      description: Label to provide extra metadata for the web detection.
      type: object
      id: GoogleCloudVisionV1p3beta1WebDetectionWebLabel
      properties:
        label:
          description: Label for extra metadata.
          type: string
        languageCode:
          description: 'The BCP-47 language code for `label`, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
    GoogleCloudVisionV1p2beta1SafeSearchAnnotation:
      description: 'Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).'
      properties:
        spoof:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive.
        adult:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: 'Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities.'
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        racy:
          type: string
          description: 'Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.'
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        medical:
          description: Likelihood that this is a medical image.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        violence:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Likelihood that this image contains violent content.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
      id: GoogleCloudVisionV1p2beta1SafeSearchAnnotation
      type: object
    GoogleCloudVisionV1p3beta1WebDetectionWebImage:
      properties:
        url:
          type: string
          description: The result image URL.
        score:
          description: (Deprecated) Overall relevancy score for the image.
          format: float
          type: number
      description: Metadata for online images.
      id: GoogleCloudVisionV1p3beta1WebDetectionWebImage
      type: object
    LocalizedObjectAnnotation:
      description: Set of detected objects with bounding boxes.
      type: object
      properties:
        score:
          format: float
          description: 'Score of the result. Range [0, 1].'
          type: number
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
        boundingPoly:
          $ref: '#/components/schemas/BoundingPoly'
          description: Image region to which this object belongs. This must be populated.
        name:
          description: 'Object name, expressed in its `language_code` language.'
          type: string
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
      id: LocalizedObjectAnnotation
    GoogleCloudVisionV1p2beta1Product:
      id: GoogleCloudVisionV1p2beta1Product
      properties:
        description:
          type: string
          description: User-provided metadata to be stored with this product. Must be at most 4096 characters long.
        displayName:
          description: The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long.
          type: string
        productLabels:
          description: 'Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. "1199". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductKeyValue'
          type: array
        name:
          description: 'The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product.'
          type: string
        productCategory:
          type: string
          description: 'Immutable. The category for the product identified by the reference image. This should be one of "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories "homegoods", "apparel", and "toys" are still supported, but these should not be used for new products.'
      type: object
      description: A Product contains ReferenceImages.
    GoogleCloudVisionV1p2beta1BoundingPoly:
      type: object
      description: A bounding polygon for the detected image annotation.
      id: GoogleCloudVisionV1p2beta1BoundingPoly
      properties:
        normalizedVertices:
          description: The bounding polygon normalized vertices.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1NormalizedVertex'
          type: array
        vertices:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Vertex'
          type: array
          description: The bounding polygon vertices.
    GoogleCloudVisionV1p4beta1FaceAnnotation:
      type: object
      description: A face annotation object contains the results of face detection.
      properties:
        joyLikelihood:
          description: Joy likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        surpriseLikelihood:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Surprise likelihood.
        landmarks:
          type: array
          description: Detected face landmarks.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1FaceAnnotationLandmark'
        recognitionResult:
          description: 'Additional recognition information. Only computed if image_context.face_recognition_params is provided, **and** a match is found to a Celebrity in the input CelebritySet. This field is sorted in order of decreasing confidence values.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1FaceRecognitionResult'
        rollAngle:
          type: number
          description: 'Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].'
          format: float
        landmarkingConfidence:
          description: 'Face landmarking confidence. Range [0, 1].'
          format: float
          type: number
        headwearLikelihood:
          type: string
          description: Headwear likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        boundingPoly:
          description: The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to "frame" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
        detectionConfidence:
          format: float
          type: number
          description: 'Detection confidence. Range [0, 1].'
        fdBoundingPoly:
          description: 'The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the "amount of skin" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
        panAngle:
          type: number
          format: float
          description: 'Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180].'
        tiltAngle:
          format: float
          type: number
          description: 'Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image''s horizontal plane. Range [-180,180].'
        blurredLikelihood:
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Blurred likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        angerLikelihood:
          type: string
          description: Anger likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        sorrowLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Sorrow likelihood.
          type: string
        underExposedLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: Under-exposed likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
      id: GoogleCloudVisionV1p4beta1FaceAnnotation
    GoogleCloudVisionV1p2beta1AnnotateFileResponse:
      id: GoogleCloudVisionV1p2beta1AnnotateFileResponse
      description: 'Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.'
      properties:
        totalPages:
          type: integer
          description: This field gives the total number of pages in the file.
          format: int32
        responses:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1AnnotateImageResponse'
          description: Individual responses to images found within the file. This field will be empty if the `error` field is set.
          type: array
        error:
          $ref: '#/components/schemas/Status'
          description: 'If set, represents the error message for the failed request. The `responses` field will not be set in this case.'
        inputConfig:
          description: Information about the file for which this response is generated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1InputConfig'
      type: object
    ImportProductSetsRequest:
      type: object
      properties:
        inputConfig:
          $ref: '#/components/schemas/ImportProductSetsInputConfig'
          description: Required. The input content for the list of requests.
      description: Request message for the `ImportProductSets` method.
      id: ImportProductSetsRequest
    GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak:
      id: GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak
      properties:
        type:
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - 'End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.'
            - Line break that ends a paragraph.
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
          type: string
          description: Detected break type.
        isPrefix:
          description: True if break prepends the element.
          type: boolean
      description: Detected start or end of a structural component.
      type: object
    GoogleCloudVisionV1p2beta1WebDetectionWebPage:
      properties:
        fullMatchingImages:
          description: Fully matching images on the page. Can include resized copies of the query image.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage'
        partialMatchingImages:
          description: Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage'
          type: array
        score:
          description: (Deprecated) Overall relevancy score for the web page.
          format: float
          type: number
        pageTitle:
          type: string
          description: 'Title for the web page, may contain HTML markups.'
        url:
          description: The result web page URL.
          type: string
      id: GoogleCloudVisionV1p2beta1WebDetectionWebPage
      type: object
      description: Metadata for web pages.
    TextAnnotation:
      properties:
        pages:
          description: List of pages detected by OCR.
          items:
            $ref: '#/components/schemas/Page'
          type: array
        text:
          type: string
          description: UTF-8 text detected on the pages.
      type: object
      id: TextAnnotation
      description: 'TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.'
    GcsSource:
      description: The Google Cloud Storage location where the input will be read from.
      id: GcsSource
      properties:
        uri:
          type: string
          description: Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported.
      type: object
    AsyncBatchAnnotateImagesRequest:
      properties:
        requests:
          type: array
          description: Required. Individual image annotation requests for this batch.
          items:
            $ref: '#/components/schemas/AnnotateImageRequest'
        outputConfig:
          description: Required. The desired output location and metadata (e.g. format).
          $ref: '#/components/schemas/OutputConfig'
        parent:
          type: string
          description: 'Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.'
      id: AsyncBatchAnnotateImagesRequest
      type: object
      description: Request for async image annotation for a list of images.
    TextProperty:
      properties:
        detectedBreak:
          $ref: '#/components/schemas/DetectedBreak'
          description: Detected start or end of a text segment.
        detectedLanguages:
          description: A list of detected languages together with confidence.
          items:
            $ref: '#/components/schemas/DetectedLanguage'
          type: array
      description: Additional information detected on the structural component.
      id: TextProperty
      type: object
    LatLongRect:
      description: Rectangle determined by min and max `LatLng` pairs.
      properties:
        minLatLng:
          description: Min lat/long pair.
          $ref: '#/components/schemas/LatLng'
        maxLatLng:
          description: Max lat/long pair.
          $ref: '#/components/schemas/LatLng'
      type: object
      id: LatLongRect
    GoogleCloudVisionV1p1beta1BoundingPoly:
      properties:
        normalizedVertices:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1NormalizedVertex'
          description: The bounding polygon normalized vertices.
          type: array
        vertices:
          description: The bounding polygon vertices.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Vertex'
      description: A bounding polygon for the detected image annotation.
      id: GoogleCloudVisionV1p1beta1BoundingPoly
      type: object
    GoogleCloudVisionV1p1beta1CropHintsAnnotation:
      id: GoogleCloudVisionV1p1beta1CropHintsAnnotation
      properties:
        cropHints:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1CropHint'
          description: Crop hint results.
      description: Set of crop hints that are used to generate new crops when serving images.
      type: object
    ProductSetPurgeConfig:
      description: Config to control which ProductSet contains the Products to be deleted.
      id: ProductSetPurgeConfig
      properties:
        productSetId:
          description: 'The ProductSet that contains the Products to delete. If a Product is a member of product_set_id in addition to other ProductSets, the Product will still be deleted.'
          type: string
      type: object
    ImportProductSetsInputConfig:
      properties:
        gcsSource:
          description: The Google Cloud Storage location for a csv file which preserves a list of ImportProductSetRequests in each line.
          $ref: '#/components/schemas/ImportProductSetsGcsSource'
      description: The input content for the `ImportProductSets` method.
      id: ImportProductSetsInputConfig
      type: object
    Landmark:
      properties:
        position:
          description: Face landmark position.
          $ref: '#/components/schemas/Position'
        type:
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - 'Nose, bottom right.'
            - 'Nose, bottom left.'
            - 'Nose, bottom center.'
            - 'Left eye, top boundary.'
            - 'Left eye, right corner.'
            - 'Left eye, bottom boundary.'
            - 'Left eye, left corner.'
            - 'Right eye, top boundary.'
            - 'Right eye, right corner.'
            - 'Right eye, bottom boundary.'
            - 'Right eye, left corner.'
            - 'Left eyebrow, upper midpoint.'
            - 'Right eyebrow, upper midpoint.'
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
          type: string
          description: Face landmark type.
      type: object
      id: Landmark
      description: 'A face-specific landmark (for example, a face feature).'
    GoogleCloudVisionV1p3beta1ImportProductSetsResponse:
      type: object
      properties:
        referenceImages:
          type: array
          description: The list of reference_images that are imported successfully.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ReferenceImage'
        statuses:
          items:
            $ref: '#/components/schemas/Status'
          type: array
          description: 'The rpc status for each ImportProductSet request, including both successes and errors. The number of statuses here matches the number of lines in the csv file, and statuses[i] stores the success or failure status of processing the i-th line of the csv, starting from line 0.'
      description: Response message for the `ImportProductSets` method. This message is returned by the google.longrunning.Operations.GetOperation method in the returned google.longrunning.Operation.response field.
      id: GoogleCloudVisionV1p3beta1ImportProductSetsResponse
    GoogleCloudVisionV1p4beta1Word:
      type: object
      id: GoogleCloudVisionV1p4beta1Word
      description: A word representation.
      properties:
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty'
          description: Additional information detected for the word.
        confidence:
          description: 'Confidence of the OCR results for the word. Range [0, 1].'
          format: float
          type: number
        symbols:
          description: List of symbols in the word. The order of the symbols follows the natural reading order.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Symbol'
        boundingBox:
          description: 'The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
    DetectedLanguage:
      properties:
        confidence:
          type: number
          format: float
          description: 'Confidence of detected language. Range [0, 1].'
        languageCode:
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
      description: Detected language for a structural component.
      type: object
      id: DetectedLanguage
    GoogleCloudVisionV1p3beta1ColorInfo:
      type: object
      id: GoogleCloudVisionV1p3beta1ColorInfo
      description: 'Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.'
      properties:
        score:
          format: float
          description: 'Image-specific score for this color. Value in range [0, 1].'
          type: number
        color:
          $ref: '#/components/schemas/Color'
          description: RGB components of the color.
        pixelFraction:
          type: number
          format: float
          description: 'The fraction of pixels the color occupies in the image. Value in range [0, 1].'
    GcsDestination:
      description: The Google Cloud Storage location where the output will be written to.
      properties:
        uri:
          type: string
          description: 'Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with "filenameprefix". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files.'
      type: object
      id: GcsDestination
    WebPage:
      type: object
      description: Metadata for web pages.
      properties:
        score:
          description: (Deprecated) Overall relevancy score for the web page.
          format: float
          type: number
        pageTitle:
          type: string
          description: 'Title for the web page, may contain HTML markups.'
        url:
          type: string
          description: The result web page URL.
        partialMatchingImages:
          type: array
          description: Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          items:
            $ref: '#/components/schemas/WebImage'
        fullMatchingImages:
          description: Fully matching images on the page. Can include resized copies of the query image.
          items:
            $ref: '#/components/schemas/WebImage'
          type: array
      id: WebPage
    GoogleCloudVisionV1p4beta1WebDetectionWebPage:
      description: Metadata for web pages.
      id: GoogleCloudVisionV1p4beta1WebDetectionWebPage
      properties:
        partialMatchingImages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage'
          description: Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
        url:
          type: string
          description: The result web page URL.
        fullMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage'
          type: array
          description: Fully matching images on the page. Can include resized copies of the query image.
        pageTitle:
          description: 'Title for the web page, may contain HTML markups.'
          type: string
        score:
          format: float
          type: number
          description: (Deprecated) Overall relevancy score for the web page.
      type: object
    Page:
      description: Detected page from OCR.
      id: Page
      properties:
        height:
          type: integer
          description: Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
          format: int32
        width:
          description: Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
          type: integer
          format: int32
        confidence:
          description: 'Confidence of the OCR results on the page. Range [0, 1].'
          type: number
          format: float
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/Block'
          description: 'List of blocks of text, images etc on this page.'
        property:
          $ref: '#/components/schemas/TextProperty'
          description: Additional information detected on the page.
      type: object
    GoogleCloudVisionV1p4beta1Page:
      properties:
        height:
          format: int32
          description: Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
          type: integer
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty'
          description: Additional information detected on the page.
        blocks:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Block'
          description: 'List of blocks of text, images etc on this page.'
          type: array
        width:
          type: integer
          format: int32
          description: Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
        confidence:
          type: number
          format: float
          description: 'Confidence of the OCR results on the page. Range [0, 1].'
      description: Detected page from OCR.
      id: GoogleCloudVisionV1p4beta1Page
      type: object
    GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult:
      description: Information about the products similar to a single product in a query image.
      type: object
      id: GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult
      properties:
        results:
          description: 'List of results, one for each product match.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResultsResult'
        boundingPoly:
          description: The bounding polygon around the product detected in the query image.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
        objectAnnotations:
          type: array
          description: List of generic predictions for the object in the bounding box.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation'
    ObjectAnnotation:
      properties:
        score:
          description: 'Score of the result. Range [0, 1].'
          type: number
          format: float
        mid:
          type: string
          description: Object ID that should align with EntityAnnotation mid.
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        name:
          description: 'Object name, expressed in its `language_code` language.'
          type: string
      id: ObjectAnnotation
      description: Prediction for what the object in the bounding box is.
      type: object
    GoogleCloudVisionV1p2beta1Position:
      type: object
      description: 'A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image.'
      properties:
        'y':
          description: Y coordinate.
          format: float
          type: number
        x:
          type: number
          format: float
          description: X coordinate.
        z:
          description: Z coordinate (or depth).
          type: number
          format: float
      id: GoogleCloudVisionV1p2beta1Position
    AsyncAnnotateFileRequest:
      id: AsyncAnnotateFileRequest
      type: object
      properties:
        outputConfig:
          description: Required. The desired output location and metadata (e.g. format).
          $ref: '#/components/schemas/OutputConfig'
        inputConfig:
          $ref: '#/components/schemas/InputConfig'
          description: Required. Information about the input file.
        features:
          items:
            $ref: '#/components/schemas/Feature'
          description: Required. Requested features.
          type: array
        imageContext:
          $ref: '#/components/schemas/ImageContext'
          description: Additional context that may accompany the image(s) in the file.
      description: An offline file annotation request.
    GoogleCloudVisionV1p2beta1Paragraph:
      properties:
        boundingBox:
          description: 'The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
        words:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Word'
          type: array
          description: List of all words in this paragraph.
        confidence:
          description: 'Confidence of the OCR results for the paragraph. Range [0, 1].'
          type: number
          format: float
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty'
          description: Additional information detected for the paragraph.
      id: GoogleCloudVisionV1p2beta1Paragraph
      type: object
      description: Structural unit of text representing a number of words in certain order.
    Symbol:
      type: object
      properties:
        boundingBox:
          description: 'The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/BoundingPoly'
        text:
          type: string
          description: The actual UTF-8 representation of the symbol.
        confidence:
          format: float
          type: number
          description: 'Confidence of the OCR results for the symbol. Range [0, 1].'
        property:
          $ref: '#/components/schemas/TextProperty'
          description: Additional information detected for the symbol.
      id: Symbol
      description: A single symbol representation.
    GoogleCloudVisionV1p3beta1OutputConfig:
      properties:
        gcsDestination:
          description: The Google Cloud Storage location to write the output(s) to.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1GcsDestination'
        batchSize:
          format: int32
          description: 'The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations.'
          type: integer
      id: GoogleCloudVisionV1p3beta1OutputConfig
      description: The desired output location and metadata.
      type: object
    ImageContext:
      description: Image context and/or feature-specific parameters.
      properties:
        webDetectionParams:
          description: Parameters for web detection.
          $ref: '#/components/schemas/WebDetectionParams'
        cropHintsParams:
          $ref: '#/components/schemas/CropHintsParams'
          description: Parameters for crop hints annotation request.
        productSearchParams:
          description: Parameters for product search.
          $ref: '#/components/schemas/ProductSearchParams'
        textDetectionParams:
          description: Parameters for text detection and document text detection.
          $ref: '#/components/schemas/TextDetectionParams'
        languageHints:
          type: array
          items:
            type: string
          description: 'List of languages to use for TEXT_DETECTION. In most cases, an empty value yields the best results since it enables automatic language detection. For languages based on the Latin alphabet, setting `language_hints` is not needed. In rare cases, when the language of the text in the image is known, setting a hint will help get better results (although it will be a significant hindrance if the hint is wrong). Text detection returns an error if one or more of the specified languages is not one of the [supported languages](https://cloud.google.com/vision/docs/languages).'
        latLongRect:
          $ref: '#/components/schemas/LatLongRect'
          description: Not used.
      type: object
      id: ImageContext
    GoogleCloudVisionV1p2beta1GcsSource:
      id: GoogleCloudVisionV1p2beta1GcsSource
      description: The Google Cloud Storage location where the input will be read from.
      properties:
        uri:
          type: string
          description: Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported.
      type: object
    BatchAnnotateFilesResponse:
      type: object
      properties:
        responses:
          type: array
          description: 'The list of file annotation responses, each response corresponding to each AnnotateFileRequest in BatchAnnotateFilesRequest.'
          items:
            $ref: '#/components/schemas/AnnotateFileResponse'
      id: BatchAnnotateFilesResponse
      description: A list of file annotation responses.
    GoogleCloudVisionV1p4beta1TextAnnotationTextProperty:
      id: GoogleCloudVisionV1p4beta1TextAnnotationTextProperty
      description: Additional information detected on the structural component.
      properties:
        detectedBreak:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak'
          description: Detected start or end of a text segment.
        detectedLanguages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage'
          description: A list of detected languages together with confidence.
      type: object
    GoogleCloudVisionV1p1beta1ImageAnnotationContext:
      id: GoogleCloudVisionV1p1beta1ImageAnnotationContext
      properties:
        pageNumber:
          format: int32
          description: 'If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image.'
          type: integer
        uri:
          description: The URI of the file used to produce the image.
          type: string
      description: 'If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.'
      type: object
    GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation:
      type: object
      id: GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation
      properties:
        name:
          type: string
          description: 'Object name, expressed in its `language_code` language.'
        score:
          type: number
          format: float
          description: 'Score of the result. Range [0, 1].'
        mid:
          type: string
          description: Object ID that should align with EntityAnnotation mid.
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
      description: Prediction for what the object in the bounding box is.
    GoogleCloudVisionV1p3beta1WebDetectionWebEntity:
      properties:
        description:
          description: 'Canonical description of the entity, in English.'
          type: string
        entityId:
          description: Opaque entity ID.
          type: string
        score:
          description: Overall relevancy score for the entity. Not normalized and not comparable across different image queries.
          type: number
          format: float
      description: Entity deduced from similar images on the Internet.
      type: object
      id: GoogleCloudVisionV1p3beta1WebDetectionWebEntity
    GoogleCloudVisionV1p1beta1Product:
      id: GoogleCloudVisionV1p1beta1Product
      description: A Product contains ReferenceImages.
      type: object
      properties:
        name:
          type: string
          description: 'The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product.'
        productLabels:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductKeyValue'
          description: 'Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. "1199". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet.'
        description:
          description: User-provided metadata to be stored with this product. Must be at most 4096 characters long.
          type: string
        displayName:
          description: The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long.
          type: string
        productCategory:
          description: 'Immutable. The category for the product identified by the reference image. This should be one of "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories "homegoods", "apparel", and "toys" are still supported, but these should not be used for new products.'
          type: string
    GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation:
      type: object
      properties:
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        name:
          description: 'Object name, expressed in its `language_code` language.'
          type: string
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
        score:
          type: number
          format: float
          description: 'Score of the result. Range [0, 1].'
      description: Prediction for what the object in the bounding box is.
      id: GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation
    GoogleCloudVisionV1p3beta1AnnotateImageResponse:
      properties:
        logoAnnotations:
          type: array
          description: 'If present, logo detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1EntityAnnotation'
        webDetection:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetection'
          description: 'If present, web detection has completed successfully.'
        fullTextAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotation'
          description: 'If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text.'
        localizedObjectAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation'
          description: 'If present, localized object detection has completed successfully. This will be sorted descending by confidence score.'
        context:
          description: 'If present, contextual information is needed to understand where this image comes from.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ImageAnnotationContext'
        error:
          description: 'If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set.'
          $ref: '#/components/schemas/Status'
        faceAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1FaceAnnotation'
          type: array
          description: 'If present, face detection has completed successfully.'
        cropHintsAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1CropHintsAnnotation'
          description: 'If present, crop hints have completed successfully.'
        landmarkAnnotations:
          type: array
          description: 'If present, landmark detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1EntityAnnotation'
        textAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1EntityAnnotation'
          description: 'If present, text (OCR) detection has completed successfully.'
          type: array
        labelAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1EntityAnnotation'
          type: array
          description: 'If present, label detection has completed successfully.'
        imagePropertiesAnnotation:
          description: 'If present, image properties were extracted successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ImageProperties'
        productSearchResults:
          description: 'If present, product search has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResults'
        safeSearchAnnotation:
          description: 'If present, safe-search annotation has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1SafeSearchAnnotation'
      type: object
      id: GoogleCloudVisionV1p3beta1AnnotateImageResponse
      description: Response to an image annotation request.
    BatchAnnotateFilesRequest:
      description: A list of requests to annotate files using the BatchAnnotateFiles API.
      type: object
      properties:
        requests:
          items:
            $ref: '#/components/schemas/AnnotateFileRequest'
          description: Required. The list of file annotation requests. Right now we support only one AnnotateFileRequest in BatchAnnotateFilesRequest.
          type: array
        parent:
          description: 'Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.'
          type: string
      id: BatchAnnotateFilesRequest
    GoogleCloudVisionV1p4beta1AnnotateFileResponse:
      properties:
        error:
          $ref: '#/components/schemas/Status'
          description: 'If set, represents the error message for the failed request. The `responses` field will not be set in this case.'
        inputConfig:
          description: Information about the file for which this response is generated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1InputConfig'
        responses:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1AnnotateImageResponse'
          type: array
          description: Individual responses to images found within the file. This field will be empty if the `error` field is set.
        totalPages:
          type: integer
          format: int32
          description: This field gives the total number of pages in the file.
      type: object
      description: 'Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.'
      id: GoogleCloudVisionV1p4beta1AnnotateFileResponse
    GoogleCloudVisionV1p2beta1FaceAnnotationLandmark:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Position'
          description: Face landmark position.
        type:
          description: Face landmark type.
          type: string
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - 'Nose, bottom right.'
            - 'Nose, bottom left.'
            - 'Nose, bottom center.'
            - 'Left eye, top boundary.'
            - 'Left eye, right corner.'
            - 'Left eye, bottom boundary.'
            - 'Left eye, left corner.'
            - 'Right eye, top boundary.'
            - 'Right eye, right corner.'
            - 'Right eye, bottom boundary.'
            - 'Right eye, left corner.'
            - 'Left eyebrow, upper midpoint.'
            - 'Right eyebrow, upper midpoint.'
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
      description: 'A face-specific landmark (for example, a face feature).'
      id: GoogleCloudVisionV1p2beta1FaceAnnotationLandmark
    AsyncBatchAnnotateFilesResponse:
      id: AsyncBatchAnnotateFilesResponse
      type: object
      description: Response to an async batch file annotation request.
      properties:
        responses:
          type: array
          items:
            $ref: '#/components/schemas/AsyncAnnotateFileResponse'
          description: 'The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest.'
    GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage:
      type: object
      properties:
        confidence:
          description: 'Confidence of detected language. Range [0, 1].'
          type: number
          format: float
        languageCode:
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
      id: GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage
      description: Detected language for a structural component.
    Image:
      description: Client image to perform Google Cloud Vision API tasks over.
      type: object
      properties:
        source:
          description: 'Google Cloud Storage image location, or publicly-accessible image URL. If both `content` and `source` are provided for an image, `content` takes precedence and is used to perform the image annotation request.'
          $ref: '#/components/schemas/ImageSource'
        content:
          type: string
          format: byte
          description: 'Image content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateImages requests. It does not work for AsyncBatchAnnotateImages requests.'
      id: Image
    GoogleCloudVisionV1p4beta1DominantColorsAnnotation:
      description: Set of dominant colors and their corresponding scores.
      properties:
        colors:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ColorInfo'
          description: RGB color values with their score and pixel fraction.
      type: object
      id: GoogleCloudVisionV1p4beta1DominantColorsAnnotation
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  x-stackQL-resources:
    files:
      id: google.vision.files
      name: files
      title: Files
      methods:
        projects_locations_files_async_batch_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1files:asyncBatchAnnotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_files_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1files:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_files_async_batch_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1files:asyncBatchAnnotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_files_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1files:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        files_async_batch_annotate:
          operation:
            $ref: '#/paths/~1v1~1files:asyncBatchAnnotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        files_annotate:
          operation:
            $ref: '#/paths/~1v1~1files:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    products:
      id: google.vision.products
      name: products
      title: Products
      methods:
        projects_locations_products_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_purge:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products:purge/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.products
        _projects_locations_products_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_products_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}~1products/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.products
        _projects_locations_product_sets_products_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}~1products/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/products/methods/projects_locations_products_get'
          - $ref: '#/components/x-stackQL-resources/products/methods/projects_locations_products_list'
          - $ref: '#/components/x-stackQL-resources/products/methods/projects_locations_product_sets_products_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/products/methods/projects_locations_products_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/products/methods/projects_locations_products_delete'
    reference_images:
      id: google.vision.reference_images
      name: reference_images
      title: Reference Images
      methods:
        projects_locations_products_reference_images_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}~1referenceImages~1{referenceImagesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_reference_images_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}~1referenceImages~1{referenceImagesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_reference_images_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}~1referenceImages/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_reference_images_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}~1referenceImages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.referenceImages
        _projects_locations_products_reference_images_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}~1referenceImages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reference_images/methods/projects_locations_products_reference_images_get'
          - $ref: '#/components/x-stackQL-resources/reference_images/methods/projects_locations_products_reference_images_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/reference_images/methods/projects_locations_products_reference_images_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/reference_images/methods/projects_locations_products_reference_images_delete'
    images:
      id: google.vision.images
      name: images
      title: Images
      methods:
        projects_locations_images_async_batch_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1images:asyncBatchAnnotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_images_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1images:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_images_async_batch_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1images:asyncBatchAnnotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_images_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1images:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        images_annotate:
          operation:
            $ref: '#/paths/~1v1~1images:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        images_async_batch_annotate:
          operation:
            $ref: '#/paths/~1v1~1images:asyncBatchAnnotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    operations:
      id: google.vision.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        operations_delete:
          operation:
            $ref: '#/paths/~1v1~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        operations_get:
          operation:
            $ref: '#/paths/~1v1~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        operations_list:
          operation:
            $ref: '#/paths/~1v1~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _operations_list:
          operation:
            $ref: '#/paths/~1v1~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/operations_delete'
    product_sets_product:
      id: google.vision.product_sets_product
      name: product_sets_product
      title: Product Sets Product
      methods:
        projects_locations_product_sets_remove_product:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}:removeProduct/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_add_product:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}:addProduct/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    product_sets:
      id: google.vision.product_sets
      name: product_sets
      title: Product Sets
      methods:
        projects_locations_product_sets_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.productSets
        _projects_locations_product_sets_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_import:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets:import/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/product_sets/methods/projects_locations_product_sets_list'
          - $ref: '#/components/x-stackQL-resources/product_sets/methods/projects_locations_product_sets_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/product_sets/methods/projects_locations_product_sets_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/product_sets/methods/projects_locations_product_sets_delete'
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/files:asyncBatchAnnotate':
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
    post:
      description: 'Run asynchronous image detection and annotation for a list of generic files, such as PDF files, which may contain multiple pages and multiple images per page. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results).'
      operationId: vision.projects.locations.files.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-method: projects_locations_files_async_batch_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/files:annotate':
    parameters: *ref_1
    post:
      description: 'Service that performs image detection and annotation for a batch of files. Now only "application/pdf", "image/tiff" and "image/gif" are supported. This service will extract at most 5 (customers can specify which 5 in AnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each file provided and perform detection and annotation for each image extracted.'
      operationId: vision.projects.locations.files.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateFilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-method: projects_locations_files_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/products/{productsId}':
    parameters: *ref_1
    patch:
      description: 'Makes changes to a Product resource. Only the `display_name`, `description`, and `labels` fields can be updated right now. If labels are updated, the change will not be reflected in queries until the next index time. Possible errors: * Returns NOT_FOUND if the Product does not exist. * Returns INVALID_ARGUMENT if display_name is present in update_mask but is missing from the request or longer than 4096 characters. * Returns INVALID_ARGUMENT if description is present in update_mask but is longer than 4096 characters. * Returns INVALID_ARGUMENT if product_category is present in update_mask.'
      operationId: vision.projects.locations.products.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_products_patch
      x-stackQL-verb: exec
    delete:
      description: 'Permanently deletes a product and its reference images. Metadata of the product and all its images will be deleted right away, but search queries against ProductSets containing the product may still work until all related caches are refreshed.'
      operationId: vision.projects.locations.products.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_products_delete
      x-stackQL-verb: delete
    get:
      description: 'Gets information associated with a Product. Possible errors: * Returns NOT_FOUND if the Product does not exist.'
      operationId: vision.projects.locations.products.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_products_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/products:purge':
    parameters: *ref_1
    post:
      description: 'Asynchronous API to delete all Products in a ProductSet or all Products that are in no ProductSet. If a Product is a member of the specified ProductSet in addition to other ProductSets, the Product will still be deleted. It is recommended to not delete the specified ProductSet until after this operation has completed. It is also recommended to not add any of the Products involved in the batch delete to a new ProductSet while this operation is running because those Products may still end up deleted. It''s not possible to undo the PurgeProducts operation. Therefore, it is recommended to keep the csv files used in ImportProductSets (if that was how you originally built the Product Set) before starting PurgeProducts, in case you need to re-import the data after deletion. If the plan is to purge all of the Products from a ProductSet and then re-use the empty ProductSet to re-import new Products into the empty ProductSet, you must wait until the PurgeProducts operation has finished for that ProductSet. The google.longrunning.Operation API can be used to keep track of the progress and results of the request. `Operation.metadata` contains `BatchOperationMetadata`. (progress)'
      operationId: vision.projects.locations.products.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurgeProductsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_products_purge
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/products':
    parameters: *ref_1
    get:
      description: 'Lists products in an unspecified order. Possible errors: * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.'
      operationId: vision.projects.locations.products.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_products_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.products
    post:
      description: 'Creates and returns a new product resource. Possible errors: * Returns INVALID_ARGUMENT if display_name is missing or longer than 4096 characters. * Returns INVALID_ARGUMENT if description is longer than 4096 characters. * Returns INVALID_ARGUMENT if product_category is missing or invalid.'
      operationId: vision.projects.locations.products.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: productId
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_products_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/products/{productsId}/referenceImages/{referenceImagesId}':
    parameters: *ref_1
    delete:
      description: 'Permanently deletes a reference image. The image metadata will be deleted right away, but search queries against ProductSets containing the image may still work until all related caches are refreshed. The actual image files are not deleted from Google Cloud Storage.'
      operationId: vision.projects.locations.products.referenceImages.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: path
          name: referenceImagesId
          required: true
          schema:
            type: string
      x-stackQL-resource: reference_images
      x-stackQL-method: projects_locations_products_reference_images_delete
      x-stackQL-verb: delete
    get:
      description: 'Gets information associated with a ReferenceImage. Possible errors: * Returns NOT_FOUND if the specified image does not exist.'
      operationId: vision.projects.locations.products.referenceImages.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceImage'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: path
          name: referenceImagesId
          required: true
          schema:
            type: string
      x-stackQL-resource: reference_images
      x-stackQL-method: projects_locations_products_reference_images_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/products/{productsId}/referenceImages':
    parameters: *ref_1
    post:
      description: 'Creates and returns a new ReferenceImage resource. The `bounding_poly` field is optional. If `bounding_poly` is not specified, the system will try to detect regions of interest in the image that are compatible with the product_category on the parent product. If it is specified, detection is ALWAYS skipped. The system converts polygons into non-rotated rectangles. Note that the pipeline will resize the image if the image resolution is too large to process (above 50MP). Possible errors: * Returns INVALID_ARGUMENT if the image_uri is missing or longer than 4096 characters. * Returns INVALID_ARGUMENT if the product does not exist. * Returns INVALID_ARGUMENT if bounding_poly is not provided, and nothing compatible with the parent product''s product_category is detected. * Returns INVALID_ARGUMENT if bounding_poly contains more than 10 polygons.'
      operationId: vision.projects.locations.products.referenceImages.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenceImage'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceImage'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: query
          name: referenceImageId
          schema:
            type: string
      x-stackQL-resource: reference_images
      x-stackQL-method: projects_locations_products_reference_images_create
      x-stackQL-verb: insert
    get:
      description: 'Lists reference images. Possible errors: * Returns NOT_FOUND if the parent product does not exist. * Returns INVALID_ARGUMENT if the page_size is greater than 100, or less than 1.'
      operationId: vision.projects.locations.products.referenceImages.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReferenceImagesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: reference_images
      x-stackQL-method: projects_locations_products_reference_images_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.referenceImages
  '/v1/projects/{projectsId}/locations/{locationsId}/images:asyncBatchAnnotate':
    parameters: *ref_1
    post:
      description: 'Run asynchronous image detection and annotation for a list of images. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results). This service will write image annotation outputs to json files in customer GCS bucket, each json file containing BatchAnnotateImagesResponse proto.'
      operationId: vision.projects.locations.images.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: images
      x-stackQL-method: projects_locations_images_async_batch_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/images:annotate':
    parameters: *ref_1
    post:
      description: Run image detection and annotation for a batch of images.
      operationId: vision.projects.locations.images.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateImagesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: images
      x-stackQL-method: projects_locations_images_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: vision.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}/products':
    parameters: *ref_1
    get:
      description: 'Lists the Products in a ProductSet, in an unspecified order. If the ProductSet does not exist, the products field of the response will be empty. Possible errors: * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.'
      operationId: vision.projects.locations.productSets.products.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductsInProductSetResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_product_sets_products_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.products
  '/v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}:removeProduct':
    parameters: *ref_1
    post:
      description: Removes a Product from the specified ProductSet.
      operationId: vision.projects.locations.productSets.removeProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveProductFromProductSetRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets_product
      x-stackQL-method: projects_locations_product_sets_remove_product
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/productSets':
    parameters: *ref_1
    post:
      description: 'Creates and returns a new ProductSet resource. Possible errors: * Returns INVALID_ARGUMENT if display_name is missing, or is longer than 4096 characters.'
      operationId: vision.projects.locations.productSets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: productSetId
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-method: projects_locations_product_sets_create
      x-stackQL-verb: insert
    get:
      description: 'Lists ProductSets in an unspecified order. Possible errors: * Returns INVALID_ARGUMENT if page_size is greater than 100, or less than 1.'
      operationId: vision.projects.locations.productSets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductSetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: product_sets
      x-stackQL-method: projects_locations_product_sets_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.productSets
  '/v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}:addProduct':
    parameters: *ref_1
    post:
      description: 'Adds a Product to the specified ProductSet. If the Product is already present, no change is made. One Product can be added to at most 100 ProductSets. Possible errors: * Returns NOT_FOUND if the Product or the ProductSet doesn''t exist.'
      operationId: vision.projects.locations.productSets.addProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProductToProductSetRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets_product
      x-stackQL-method: projects_locations_product_sets_add_product
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}':
    parameters: *ref_1
    patch:
      description: 'Makes changes to a ProductSet resource. Only display_name can be updated currently. Possible errors: * Returns NOT_FOUND if the ProductSet does not exist. * Returns INVALID_ARGUMENT if display_name is present in update_mask but missing from the request or longer than 4096 characters.'
      operationId: vision.projects.locations.productSets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-method: projects_locations_product_sets_patch
      x-stackQL-verb: exec
    get:
      description: 'Gets information associated with a ProductSet. Possible errors: * Returns NOT_FOUND if the ProductSet does not exist.'
      operationId: vision.projects.locations.productSets.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-method: projects_locations_product_sets_get
      x-stackQL-verb: select
    delete:
      description: Permanently deletes a ProductSet. Products and ReferenceImages in the ProductSet are not deleted. The actual image files are not deleted from Google Cloud Storage.
      operationId: vision.projects.locations.productSets.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-method: projects_locations_product_sets_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/productSets:import':
    parameters: *ref_1
    post:
      description: Asynchronous API that imports a list of reference images to specified product sets based on a list of image information. The google.longrunning.Operation API can be used to keep track of the progress and results of the request. `Operation.metadata` contains `BatchOperationMetadata`. (progress) `Operation.response` contains `ImportProductSetsResponse`. (results) The input source of this method is a csv file on Google Cloud Storage. For the format of the csv file please see ImportProductSetsGcsSource.csv_file_uri.
      operationId: vision.projects.locations.productSets.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportProductSetsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-method: projects_locations_product_sets_import
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/images:asyncBatchAnnotate':
    parameters: *ref_1
    post:
      description: 'Run asynchronous image detection and annotation for a list of images. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results). This service will write image annotation outputs to json files in customer GCS bucket, each json file containing BatchAnnotateImagesResponse proto.'
      operationId: vision.projects.images.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: images
      x-stackQL-method: projects_images_async_batch_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/images:annotate':
    parameters: *ref_1
    post:
      description: Run image detection and annotation for a batch of images.
      operationId: vision.projects.images.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateImagesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: images
      x-stackQL-method: projects_images_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: vision.projects.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_operations_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/files:asyncBatchAnnotate':
    parameters: *ref_1
    post:
      description: 'Run asynchronous image detection and annotation for a list of generic files, such as PDF files, which may contain multiple pages and multiple images per page. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results).'
      operationId: vision.projects.files.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-method: projects_files_async_batch_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/files:annotate':
    parameters: *ref_1
    post:
      description: 'Service that performs image detection and annotation for a batch of files. Now only "application/pdf", "image/tiff" and "image/gif" are supported. This service will extract at most 5 (customers can specify which 5 in AnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each file provided and perform detection and annotation for each image extracted.'
      operationId: vision.projects.files.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateFilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-method: projects_files_annotate
      x-stackQL-verb: exec
  '/v1/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: vision.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: locations_operations_get
      x-stackQL-verb: select
  '/v1/files:asyncBatchAnnotate':
    parameters: *ref_1
    post:
      description: 'Run asynchronous image detection and annotation for a list of generic files, such as PDF files, which may contain multiple pages and multiple images per page. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results).'
      operationId: vision.files.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
      x-stackQL-resource: files
      x-stackQL-method: files_async_batch_annotate
      x-stackQL-verb: exec
  '/v1/files:annotate':
    parameters: *ref_1
    post:
      description: 'Service that performs image detection and annotation for a batch of files. Now only "application/pdf", "image/tiff" and "image/gif" are supported. This service will extract at most 5 (customers can specify which 5 in AnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each file provided and perform detection and annotation for each image extracted.'
      operationId: vision.files.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateFilesResponse'
      parameters: []
      x-stackQL-resource: files
      x-stackQL-method: files_annotate
      x-stackQL-verb: exec
  '/v1/images:annotate':
    parameters: *ref_1
    post:
      description: Run image detection and annotation for a batch of images.
      operationId: vision.images.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateImagesResponse'
      parameters: []
      x-stackQL-resource: images
      x-stackQL-method: images_annotate
      x-stackQL-verb: exec
  '/v1/images:asyncBatchAnnotate':
    parameters: *ref_1
    post:
      description: 'Run asynchronous image detection and annotation for a list of images. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results). This service will write image annotation outputs to json files in customer GCS bucket, each json file containing BatchAnnotateImagesResponse proto.'
      operationId: vision.images.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
      x-stackQL-resource: images
      x-stackQL-method: images_async_batch_annotate
      x-stackQL-verb: exec
  '/v1/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: vision.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: operations_delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: vision.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: operations_get
      x-stackQL-verb: select
  '/v1/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: vision.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: operations_cancel
      x-stackQL-verb: exec
  /v1/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: vision.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
