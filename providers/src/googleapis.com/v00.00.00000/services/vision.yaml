openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Vision API
  description: 'Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.'
  version: v1
  x-discovery-doc-revision: '20230804'
  x-generated-date: '2023-08-17'
externalDocs:
  url: 'https://cloud.google.com/vision/'
servers:
  - url: 'https://vision.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
            'https://www.googleapis.com/auth/cloud-vision': Apply machine learning models to understand and label images
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudVisionV1p1beta1Position:
      description: 'A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image.'
      properties:
        x:
          type: number
          format: float
          description: X coordinate.
        z:
          description: Z coordinate (or depth).
          format: float
          type: number
        'y':
          type: number
          format: float
          description: Y coordinate.
      type: object
      id: GoogleCloudVisionV1p1beta1Position
    GoogleCloudVisionV1p3beta1Vertex:
      type: object
      properties:
        'y':
          description: Y coordinate.
          format: int32
          type: integer
        x:
          format: int32
          type: integer
          description: X coordinate.
      description: 'A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.'
      id: GoogleCloudVisionV1p3beta1Vertex
    BoundingPoly:
      type: object
      description: A bounding polygon for the detected image annotation.
      id: BoundingPoly
      properties:
        vertices:
          description: The bounding polygon vertices.
          type: array
          items:
            $ref: '#/components/schemas/Vertex'
        normalizedVertices:
          description: The bounding polygon normalized vertices.
          type: array
          items:
            $ref: '#/components/schemas/NormalizedVertex'
    GoogleCloudVisionV1p3beta1BoundingPoly:
      description: A bounding polygon for the detected image annotation.
      id: GoogleCloudVisionV1p3beta1BoundingPoly
      type: object
      properties:
        vertices:
          description: The bounding polygon vertices.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Vertex'
          type: array
        normalizedVertices:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1NormalizedVertex'
          description: The bounding polygon normalized vertices.
    GoogleCloudVisionV1p2beta1Vertex:
      properties:
        x:
          description: X coordinate.
          type: integer
          format: int32
        'y':
          type: integer
          format: int32
          description: Y coordinate.
      type: object
      id: GoogleCloudVisionV1p2beta1Vertex
      description: 'A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.'
    GoogleCloudVisionV1p2beta1Product:
      id: GoogleCloudVisionV1p2beta1Product
      description: A Product contains ReferenceImages.
      properties:
        productCategory:
          type: string
          description: 'Immutable. The category for the product identified by the reference image. This should be one of "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories "homegoods", "apparel", and "toys" are still supported, but these should not be used for new products.'
        productLabels:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductKeyValue'
          description: 'Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. "1199". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet.'
        description:
          description: User-provided metadata to be stored with this product. Must be at most 4096 characters long.
          type: string
        displayName:
          description: The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long.
          type: string
        name:
          description: 'The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product.'
          type: string
      type: object
    GoogleCloudVisionV1p1beta1Vertex:
      type: object
      description: 'A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.'
      properties:
        x:
          type: integer
          format: int32
          description: X coordinate.
        'y':
          type: integer
          format: int32
          description: Y coordinate.
      id: GoogleCloudVisionV1p1beta1Vertex
    GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse:
      description: The response for a single offline file annotation request.
      properties:
        outputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1OutputConfig'
          description: The output location and metadata from AsyncAnnotateFileRequest.
      type: object
      id: GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse
    ListReferenceImagesResponse:
      type: object
      id: ListReferenceImagesResponse
      properties:
        nextPageToken:
          description: 'The next_page_token returned from a previous List request, if any.'
          type: string
        referenceImages:
          description: The list of reference images.
          items:
            $ref: '#/components/schemas/ReferenceImage'
          type: array
        pageSize:
          type: integer
          format: int32
          description: 'The maximum number of items to return. Default 10, maximum 100.'
      description: Response message for the `ListReferenceImages` method.
    TextProperty:
      id: TextProperty
      type: object
      description: Additional information detected on the structural component.
      properties:
        detectedBreak:
          description: Detected start or end of a text segment.
          $ref: '#/components/schemas/DetectedBreak'
        detectedLanguages:
          type: array
          items:
            $ref: '#/components/schemas/DetectedLanguage'
          description: A list of detected languages together with confidence.
    Product:
      type: object
      id: Product
      description: A Product contains ReferenceImages.
      properties:
        productCategory:
          description: 'Immutable. The category for the product identified by the reference image. This should be one of "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories "homegoods", "apparel", and "toys" are still supported, but these should not be used for new products.'
          type: string
        displayName:
          type: string
          description: The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long.
        name:
          type: string
          description: 'The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product.'
        productLabels:
          type: array
          items:
            $ref: '#/components/schemas/KeyValue'
          description: 'Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. "1199". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet.'
        description:
          type: string
          description: User-provided metadata to be stored with this product. Must be at most 4096 characters long.
    GoogleCloudVisionV1p2beta1TextAnnotation:
      description: 'TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.'
      id: GoogleCloudVisionV1p2beta1TextAnnotation
      properties:
        pages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Page'
          description: List of pages detected by OCR.
          type: array
        text:
          type: string
          description: UTF-8 text detected on the pages.
      type: object
    GoogleCloudVisionV1p4beta1GcsSource:
      properties:
        uri:
          description: Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported.
          type: string
      description: The Google Cloud Storage location where the input will be read from.
      id: GoogleCloudVisionV1p4beta1GcsSource
      type: object
    AnnotateFileRequest:
      id: AnnotateFileRequest
      type: object
      properties:
        pages:
          type: array
          description: 'Pages of the file to perform image annotation. Pages starts from 1, we assume the first page of the file is page 1. At most 5 pages are supported per request. Pages can be negative. Page 1 means the first page. Page 2 means the second page. Page -1 means the last page. Page -2 means the second to the last page. If the file is GIF instead of PDF or TIFF, page refers to GIF frames. If this field is empty, by default the service performs image annotation for the first 5 pages of the file.'
          items:
            type: integer
            format: int32
        inputConfig:
          description: Required. Information about the input file.
          $ref: '#/components/schemas/InputConfig'
        imageContext:
          $ref: '#/components/schemas/ImageContext'
          description: Additional context that may accompany the image(s) in the file.
        features:
          description: Required. Requested features.
          items:
            $ref: '#/components/schemas/Feature'
          type: array
      description: 'A request to annotate one single file, e.g. a PDF, TIFF or GIF file.'
    GoogleCloudVisionV1p4beta1SafeSearchAnnotation:
      id: GoogleCloudVisionV1p4beta1SafeSearchAnnotation
      description: 'Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).'
      properties:
        adult:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: 'Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities.'
        violence:
          description: Likelihood that this image contains violent content.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        racy:
          description: 'Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.'
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        medical:
          description: Likelihood that this is a medical image.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        spoof:
          description: Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
      type: object
    GoogleCloudVisionV1p3beta1Word:
      id: GoogleCloudVisionV1p3beta1Word
      type: object
      description: A word representation.
      properties:
        symbols:
          type: array
          description: List of symbols in the word. The order of the symbols follows the natural reading order.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Symbol'
        boundingBox:
          description: 'The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
        confidence:
          description: 'Confidence of the OCR results for the word. Range [0, 1].'
          format: float
          type: number
        property:
          description: Additional information detected for the word.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty'
    GoogleCloudVisionV1p1beta1NormalizedVertex:
      properties:
        x:
          type: number
          description: X coordinate.
          format: float
        'y':
          description: Y coordinate.
          type: number
          format: float
      id: GoogleCloudVisionV1p1beta1NormalizedVertex
      type: object
      description: 'A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.'
    BatchAnnotateFilesResponse:
      type: object
      properties:
        responses:
          type: array
          items:
            $ref: '#/components/schemas/AnnotateFileResponse'
          description: 'The list of file annotation responses, each response corresponding to each AnnotateFileRequest in BatchAnnotateFilesRequest.'
      id: BatchAnnotateFilesResponse
      description: A list of file annotation responses.
    GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse:
      properties:
        outputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1OutputConfig'
          description: The output location and metadata from AsyncAnnotateFileRequest.
      description: The response for a single offline file annotation request.
      type: object
      id: GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse
    GcsSource:
      id: GcsSource
      type: object
      description: The Google Cloud Storage location where the input will be read from.
      properties:
        uri:
          type: string
          description: Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported.
    GoogleCloudVisionV1p1beta1Word:
      properties:
        property:
          description: Additional information detected for the word.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty'
        confidence:
          format: float
          type: number
          description: 'Confidence of the OCR results for the word. Range [0, 1].'
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
          description: 'The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        symbols:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Symbol'
          description: List of symbols in the word. The order of the symbols follows the natural reading order.
          type: array
      id: GoogleCloudVisionV1p1beta1Word
      description: A word representation.
      type: object
    GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation:
      properties:
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        score:
          description: 'Score of the result. Range [0, 1].'
          format: float
          type: number
        name:
          description: 'Object name, expressed in its `language_code` language.'
          type: string
        mid:
          type: string
          description: Object ID that should align with EntityAnnotation mid.
      type: object
      description: Prediction for what the object in the bounding box is.
      id: GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation
    AsyncAnnotateFileResponse:
      properties:
        outputConfig:
          description: The output location and metadata from AsyncAnnotateFileRequest.
          $ref: '#/components/schemas/OutputConfig'
      description: The response for a single offline file annotation request.
      id: AsyncAnnotateFileResponse
      type: object
    GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse:
      id: GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse
      description: The response for a single offline file annotation request.
      properties:
        outputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1OutputConfig'
          description: The output location and metadata from AsyncAnnotateFileRequest.
      type: object
    GoogleCloudVisionV1p4beta1Product:
      description: A Product contains ReferenceImages.
      type: object
      properties:
        name:
          type: string
          description: 'The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product.'
        description:
          description: User-provided metadata to be stored with this product. Must be at most 4096 characters long.
          type: string
        displayName:
          description: The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long.
          type: string
        productLabels:
          type: array
          description: 'Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. "1199". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductKeyValue'
        productCategory:
          description: 'Immutable. The category for the product identified by the reference image. This should be one of "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories "homegoods", "apparel", and "toys" are still supported, but these should not be used for new products.'
          type: string
      id: GoogleCloudVisionV1p4beta1Product
    GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage:
      id: GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage
      type: object
      properties:
        confidence:
          description: 'Confidence of detected language. Range [0, 1].'
          type: number
          format: float
        languageCode:
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
      description: Detected language for a structural component.
    ListProductSetsResponse:
      properties:
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
        productSets:
          description: List of ProductSets.
          items:
            $ref: '#/components/schemas/ProductSet'
          type: array
      description: Response message for the `ListProductSets` method.
      type: object
      id: ListProductSetsResponse
    GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation:
      properties:
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        score:
          type: number
          format: float
          description: 'Score of the result. Range [0, 1].'
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
        name:
          description: 'Object name, expressed in its `language_code` language.'
          type: string
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: Image region to which this object belongs. This must be populated.
      id: GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation
      type: object
      description: Set of detected objects with bounding boxes.
    GoogleCloudVisionV1p3beta1FaceAnnotationLandmark:
      description: 'A face-specific landmark (for example, a face feature).'
      properties:
        type:
          type: string
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
          description: Face landmark type.
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - 'Nose, bottom right.'
            - 'Nose, bottom left.'
            - 'Nose, bottom center.'
            - 'Left eye, top boundary.'
            - 'Left eye, right corner.'
            - 'Left eye, bottom boundary.'
            - 'Left eye, left corner.'
            - 'Right eye, top boundary.'
            - 'Right eye, right corner.'
            - 'Right eye, bottom boundary.'
            - 'Right eye, left corner.'
            - 'Left eyebrow, upper midpoint.'
            - 'Right eyebrow, upper midpoint.'
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
        position:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Position'
          description: Face landmark position.
      type: object
      id: GoogleCloudVisionV1p3beta1FaceAnnotationLandmark
    GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult:
      properties:
        results:
          description: 'List of results, one for each product match.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResultsResult'
          type: array
        objectAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation'
          description: List of generic predictions for the object in the bounding box.
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: The bounding polygon around the product detected in the query image.
      description: Information about the products similar to a single product in a query image.
      type: object
      id: GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult
    GoogleCloudVisionV1p2beta1Symbol:
      properties:
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty'
          description: Additional information detected for the symbol.
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
          description: 'The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        text:
          description: The actual UTF-8 representation of the symbol.
          type: string
        confidence:
          format: float
          type: number
          description: 'Confidence of the OCR results for the symbol. Range [0, 1].'
      id: GoogleCloudVisionV1p2beta1Symbol
      description: A single symbol representation.
      type: object
    CropHintsAnnotation:
      type: object
      description: Set of crop hints that are used to generate new crops when serving images.
      properties:
        cropHints:
          type: array
          description: Crop hint results.
          items:
            $ref: '#/components/schemas/CropHint'
      id: CropHintsAnnotation
    GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak:
      description: Detected start or end of a structural component.
      type: object
      properties:
        isPrefix:
          description: True if break prepends the element.
          type: boolean
        type:
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
          description: Detected break type.
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - 'End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.'
            - Line break that ends a paragraph.
          type: string
      id: GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak
    ImportProductSetsResponse:
      description: Response message for the `ImportProductSets` method. This message is returned by the google.longrunning.Operations.GetOperation method in the returned google.longrunning.Operation.response field.
      id: ImportProductSetsResponse
      type: object
      properties:
        referenceImages:
          items:
            $ref: '#/components/schemas/ReferenceImage'
          description: The list of reference_images that are imported successfully.
          type: array
        statuses:
          items:
            $ref: '#/components/schemas/Status'
          type: array
          description: 'The rpc status for each ImportProductSet request, including both successes and errors. The number of statuses here matches the number of lines in the csv file, and statuses[i] stores the success or failure status of processing the i-th line of the csv, starting from line 0.'
    GoogleCloudVisionV1p4beta1LocationInfo:
      description: Detected entity location information.
      type: object
      properties:
        latLng:
          $ref: '#/components/schemas/LatLng'
          description: lat/long location coordinates.
      id: GoogleCloudVisionV1p4beta1LocationInfo
    GoogleCloudVisionV1p3beta1ProductSearchResults:
      properties:
        productGroupedResults:
          description: 'List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult'
          type: array
        indexTime:
          format: google-datetime
          type: string
          description: Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results.
        results:
          type: array
          description: 'List of results, one for each product match.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResultsResult'
      type: object
      id: GoogleCloudVisionV1p3beta1ProductSearchResults
      description: Results for a product search request.
    GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse:
      id: GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse
      description: Response to an async batch image annotation request.
      type: object
      properties:
        outputConfig:
          description: The output location and metadata from AsyncBatchAnnotateImagesRequest.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1OutputConfig'
    GoogleCloudVisionV1p2beta1EntityAnnotation:
      type: object
      properties:
        topicality:
          format: float
          description: 'The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of "tower" is likely higher to an image containing the detected "Eiffel Tower" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].'
          type: number
        description:
          description: 'Entity textual description, expressed in its `locale` language.'
          type: string
        locale:
          type: string
          description: The language code for the locale in which the entity textual `description` is expressed.
        mid:
          type: string
          description: 'Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).'
        locations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1LocationInfo'
          type: array
          description: 'The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.'
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
          description: Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features.
        confidence:
          description: '**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the "Eiffel Tower" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].'
          deprecated: true
          format: float
          type: number
        properties:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Property'
          type: array
          description: 'Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.'
        score:
          description: 'Overall score of the result. Range [0, 1].'
          format: float
          type: number
      description: Set of detected entity features.
      id: GoogleCloudVisionV1p2beta1EntityAnnotation
    GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse:
      type: object
      properties:
        outputConfig:
          description: The output location and metadata from AsyncAnnotateFileRequest.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1OutputConfig'
      id: GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse
      description: The response for a single offline file annotation request.
    ListProductsResponse:
      id: ListProductsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
        products:
          type: array
          description: List of products.
          items:
            $ref: '#/components/schemas/Product'
      description: Response message for the `ListProducts` method.
    Color:
      description: 'Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor''s `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn''t have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!(''alpha'' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join('',''); return [''rgba('', rgbParams, '','', alphaFrac, '')''].join(''''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = [''#'']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push(''0''); } resultBuilder.push(hexString); return resultBuilder.join(''''); }; // ...'
      id: Color
      properties:
        green:
          type: number
          description: 'The amount of green in the color as a value in the interval [0, 1].'
          format: float
        blue:
          format: float
          type: number
          description: 'The amount of blue in the color as a value in the interval [0, 1].'
        red:
          description: 'The amount of red in the color as a value in the interval [0, 1].'
          format: float
          type: number
        alpha:
          description: 'The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).'
          format: float
          type: number
      type: object
    GoogleCloudVisionV1p4beta1DominantColorsAnnotation:
      type: object
      id: GoogleCloudVisionV1p4beta1DominantColorsAnnotation
      description: Set of dominant colors and their corresponding scores.
      properties:
        colors:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ColorInfo'
          description: RGB color values with their score and pixel fraction.
    BatchOperationMetadata:
      description: 'Metadata for the batch operations such as the current state. This is included in the `metadata` field of the `Operation` returned by the `GetOperation` call of the `google::longrunning::Operations` service.'
      type: object
      id: BatchOperationMetadata
      properties:
        endTime:
          type: string
          format: google-datetime
          description: The time when the batch request is finished and google.longrunning.Operation.done is set to true.
        submitTime:
          format: google-datetime
          description: The time when the batch request was submitted to the server.
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - PROCESSING
            - SUCCESSFUL
            - FAILED
            - CANCELLED
          type: string
          enumDescriptions:
            - Invalid.
            - Request is actively being processed.
            - The request is done and at least one item has been successfully processed.
            - The request is done and no item has been successfully processed.
            - The request is done after the longrunning.Operations.CancelOperation has been called by the user. Any records that were processed before the cancel command are output as specified in the request.
          description: The current state of the batch operation.
    GoogleCloudVisionV1p4beta1ProductSearchResults:
      id: GoogleCloudVisionV1p4beta1ProductSearchResults
      properties:
        indexTime:
          description: Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results.
          format: google-datetime
          type: string
        results:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResultsResult'
          description: 'List of results, one for each product match.'
          type: array
        productGroupedResults:
          type: array
          description: 'List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult'
      type: object
      description: Results for a product search request.
    AnnotateImageRequest:
      description: 'Request for performing Google Cloud Vision API tasks over a user-provided image, with user-requested features, and with context information.'
      id: AnnotateImageRequest
      type: object
      properties:
        image:
          description: The image to be processed.
          $ref: '#/components/schemas/Image'
        imageContext:
          $ref: '#/components/schemas/ImageContext'
          description: Additional context that may accompany the image.
        features:
          description: Requested features.
          items:
            $ref: '#/components/schemas/Feature'
          type: array
    GoogleCloudVisionV1p2beta1CropHint:
      id: GoogleCloudVisionV1p2beta1CropHint
      type: object
      properties:
        boundingPoly:
          description: The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
        confidence:
          format: float
          description: 'Confidence of this being a salient region. Range [0, 1].'
          type: number
        importanceFraction:
          type: number
          format: float
          description: Fraction of importance of this salient region with respect to the original image.
      description: Single crop hint that is used to generate a new crop when serving an image.
    GoogleCloudVisionV1p2beta1ColorInfo:
      type: object
      properties:
        pixelFraction:
          format: float
          description: 'The fraction of pixels the color occupies in the image. Value in range [0, 1].'
          type: number
        score:
          format: float
          description: 'Image-specific score for this color. Value in range [0, 1].'
          type: number
        color:
          description: RGB components of the color.
          $ref: '#/components/schemas/Color'
      description: 'Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.'
      id: GoogleCloudVisionV1p2beta1ColorInfo
    GoogleCloudVisionV1p1beta1Property:
      properties:
        value:
          description: Value of the property.
          type: string
        name:
          type: string
          description: Name of the property.
        uint64Value:
          format: uint64
          description: Value of numeric properties.
          type: string
      id: GoogleCloudVisionV1p1beta1Property
      type: object
      description: A `Property` consists of a user-supplied name/value pair.
    GroupedResult:
      type: object
      description: Information about the products similar to a single product in a query image.
      properties:
        objectAnnotations:
          description: List of generic predictions for the object in the bounding box.
          items:
            $ref: '#/components/schemas/ObjectAnnotation'
          type: array
        results:
          description: 'List of results, one for each product match.'
          items:
            $ref: '#/components/schemas/Result'
          type: array
        boundingPoly:
          $ref: '#/components/schemas/BoundingPoly'
          description: The bounding polygon around the product detected in the query image.
      id: GroupedResult
    GoogleCloudVisionV1p1beta1FaceAnnotationLandmark:
      description: 'A face-specific landmark (for example, a face feature).'
      id: GoogleCloudVisionV1p1beta1FaceAnnotationLandmark
      type: object
      properties:
        type:
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - 'Nose, bottom right.'
            - 'Nose, bottom left.'
            - 'Nose, bottom center.'
            - 'Left eye, top boundary.'
            - 'Left eye, right corner.'
            - 'Left eye, bottom boundary.'
            - 'Left eye, left corner.'
            - 'Right eye, top boundary.'
            - 'Right eye, right corner.'
            - 'Right eye, bottom boundary.'
            - 'Right eye, left corner.'
            - 'Left eyebrow, upper midpoint.'
            - 'Right eyebrow, upper midpoint.'
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
          type: string
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
          description: Face landmark type.
        position:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Position'
          description: Face landmark position.
    Result:
      properties:
        product:
          $ref: '#/components/schemas/Product'
          description: The Product.
        score:
          type: number
          format: float
          description: 'A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).'
        image:
          type: string
          description: The resource name of the image from the product that is the closest match to the query.
      id: Result
      type: object
      description: Information about a product.
    WebEntity:
      properties:
        entityId:
          description: Opaque entity ID.
          type: string
        score:
          description: Overall relevancy score for the entity. Not normalized and not comparable across different image queries.
          type: number
          format: float
        description:
          description: 'Canonical description of the entity, in English.'
          type: string
      type: object
      description: Entity deduced from similar images on the Internet.
      id: WebEntity
    GoogleCloudVisionV1p1beta1EntityAnnotation:
      id: GoogleCloudVisionV1p1beta1EntityAnnotation
      description: Set of detected entity features.
      type: object
      properties:
        score:
          type: number
          format: float
          description: 'Overall score of the result. Range [0, 1].'
        confidence:
          description: '**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the "Eiffel Tower" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].'
          type: number
          deprecated: true
          format: float
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
          description: Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features.
        locations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1LocationInfo'
          description: 'The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.'
          type: array
        mid:
          description: 'Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).'
          type: string
        locale:
          type: string
          description: The language code for the locale in which the entity textual `description` is expressed.
        description:
          type: string
          description: 'Entity textual description, expressed in its `locale` language.'
        properties:
          description: 'Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Property'
          type: array
        topicality:
          type: number
          description: 'The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of "tower" is likely higher to an image containing the detected "Eiffel Tower" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].'
          format: float
    Empty:
      properties: {}
      id: Empty
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    GoogleCloudVisionV1p2beta1WebDetectionWebEntity:
      type: object
      properties:
        description:
          type: string
          description: 'Canonical description of the entity, in English.'
        score:
          type: number
          description: Overall relevancy score for the entity. Not normalized and not comparable across different image queries.
          format: float
        entityId:
          type: string
          description: Opaque entity ID.
      description: Entity deduced from similar images on the Internet.
      id: GoogleCloudVisionV1p2beta1WebDetectionWebEntity
    GoogleCloudVisionV1p4beta1WebDetectionWebPage:
      type: object
      id: GoogleCloudVisionV1p4beta1WebDetectionWebPage
      properties:
        pageTitle:
          type: string
          description: 'Title for the web page, may contain HTML markups.'
        url:
          description: The result web page URL.
          type: string
        partialMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage'
          type: array
          description: Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
        score:
          format: float
          description: (Deprecated) Overall relevancy score for the web page.
          type: number
        fullMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage'
          type: array
          description: Fully matching images on the page. Can include resized copies of the query image.
      description: Metadata for web pages.
    GoogleCloudVisionV1p2beta1WebDetectionWebPage:
      properties:
        pageTitle:
          description: 'Title for the web page, may contain HTML markups.'
          type: string
        fullMatchingImages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage'
          description: Fully matching images on the page. Can include resized copies of the query image.
        score:
          description: (Deprecated) Overall relevancy score for the web page.
          type: number
          format: float
        partialMatchingImages:
          description: Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage'
          type: array
        url:
          description: The result web page URL.
          type: string
      id: GoogleCloudVisionV1p2beta1WebDetectionWebPage
      description: Metadata for web pages.
      type: object
    LocationInfo:
      properties:
        latLng:
          $ref: '#/components/schemas/LatLng'
          description: lat/long location coordinates.
      type: object
      description: Detected entity location information.
      id: LocationInfo
    GoogleCloudVisionV1p1beta1AnnotateImageResponse:
      type: object
      id: GoogleCloudVisionV1p1beta1AnnotateImageResponse
      description: Response to an image annotation request.
      properties:
        productSearchResults:
          description: 'If present, product search has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResults'
        localizedObjectAnnotations:
          type: array
          description: 'If present, localized object detection has completed successfully. This will be sorted descending by confidence score.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation'
        logoAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1EntityAnnotation'
          description: 'If present, logo detection has completed successfully.'
        labelAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1EntityAnnotation'
          description: 'If present, label detection has completed successfully.'
          type: array
        context:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ImageAnnotationContext'
          description: 'If present, contextual information is needed to understand where this image comes from.'
        webDetection:
          description: 'If present, web detection has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetection'
        cropHintsAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1CropHintsAnnotation'
          description: 'If present, crop hints have completed successfully.'
        fullTextAnnotation:
          description: 'If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotation'
        imagePropertiesAnnotation:
          description: 'If present, image properties were extracted successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ImageProperties'
        landmarkAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1EntityAnnotation'
          description: 'If present, landmark detection has completed successfully.'
          type: array
        textAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1EntityAnnotation'
          description: 'If present, text (OCR) detection has completed successfully.'
        error:
          description: 'If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set.'
          $ref: '#/components/schemas/Status'
        faceAnnotations:
          type: array
          description: 'If present, face detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1FaceAnnotation'
        safeSearchAnnotation:
          description: 'If present, safe-search annotation has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1SafeSearchAnnotation'
    GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult:
      type: object
      properties:
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
          description: The bounding polygon around the product detected in the query image.
        objectAnnotations:
          type: array
          description: List of generic predictions for the object in the bounding box.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation'
        results:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResultsResult'
          description: 'List of results, one for each product match.'
      id: GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult
      description: Information about the products similar to a single product in a query image.
    GoogleCloudVisionV1p2beta1WebDetection:
      type: object
      description: Relevant information for the image from the Internet.
      id: GoogleCloudVisionV1p2beta1WebDetection
      properties:
        webEntities:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebEntity'
          type: array
          description: Deduced entities from similar images on the Internet.
        partialMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage'
          type: array
          description: Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
        fullMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage'
          description: Fully matching images from the Internet. Can include resized copies of the query image.
          type: array
        pagesWithMatchingImages:
          description: Web pages containing the matching images from the Internet.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebPage'
        bestGuessLabels:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebLabel'
          type: array
          description: The service's best guess as to the topic of the request image. Inferred from similar images on the open web.
        visuallySimilarImages:
          description: The visually similar image results.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage'
          type: array
    GoogleCloudVisionV1p2beta1NormalizedVertex:
      properties:
        'y':
          format: float
          type: number
          description: Y coordinate.
        x:
          format: float
          description: X coordinate.
          type: number
      type: object
      description: 'A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.'
      id: GoogleCloudVisionV1p2beta1NormalizedVertex
    Status:
      id: Status
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
      properties:
        code:
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        details:
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
    GoogleCloudVisionV1p1beta1WebDetectionWebPage:
      type: object
      properties:
        pageTitle:
          description: 'Title for the web page, may contain HTML markups.'
          type: string
        partialMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage'
          description: Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          type: array
        score:
          type: number
          description: (Deprecated) Overall relevancy score for the web page.
          format: float
        url:
          type: string
          description: The result web page URL.
        fullMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage'
          description: Fully matching images on the page. Can include resized copies of the query image.
          type: array
      id: GoogleCloudVisionV1p1beta1WebDetectionWebPage
      description: Metadata for web pages.
    ProductSearchParams:
      type: object
      description: Parameters for a product search request.
      properties:
        productCategories:
          items:
            type: string
          type: array
          description: 'The list of product categories to search in. Currently, we only consider the first category, and either "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1", or "general-v1" should be specified. The legacy categories "homegoods", "apparel", and "toys" are still supported but will be deprecated. For new products, please use "homegoods-v2", "apparel-v2", or "toys-v2" for better product search accuracy. It is recommended to migrate existing products to these categories as well.'
        filter:
          description: 'The filtering expression. This can be used to restrict search results based on Product labels. We currently support an AND of OR of key-value expressions, where each expression within an OR must have the same key. An ''='' should be used to connect the key and value. For example, "(color = red OR color = blue) AND brand = Google" is acceptable, but "(color = red OR brand = Google)" is not acceptable. "color: red" is not acceptable because it uses a '':'' instead of an ''=''.'
          type: string
        boundingPoly:
          description: 'The bounding polygon around the area of interest in the image. If it is not specified, system discretion will be applied.'
          $ref: '#/components/schemas/BoundingPoly'
        productSet:
          type: string
          description: 'The resource name of a ProductSet to be searched for similar images. Format is: `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`.'
      id: ProductSearchParams
    GcsDestination:
      type: object
      id: GcsDestination
      properties:
        uri:
          description: 'Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with "filenameprefix". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files.'
          type: string
      description: The Google Cloud Storage location where the output will be written to.
    GoogleCloudVisionV1p4beta1FaceRecognitionResult:
      type: object
      description: Information about a face's identity.
      id: GoogleCloudVisionV1p4beta1FaceRecognitionResult
      properties:
        confidence:
          format: float
          type: number
          description: 'Recognition confidence. Range [0, 1].'
        celebrity:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Celebrity'
          description: The Celebrity that this face was matched to.
    GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak:
      properties:
        type:
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
          description: Detected break type.
          type: string
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - 'End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.'
            - Line break that ends a paragraph.
        isPrefix:
          description: True if break prepends the element.
          type: boolean
      id: GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak
      type: object
      description: Detected start or end of a structural component.
    GoogleCloudVisionV1p3beta1FaceAnnotation:
      id: GoogleCloudVisionV1p3beta1FaceAnnotation
      type: object
      description: A face annotation object contains the results of face detection.
      properties:
        headwearLikelihood:
          type: string
          description: Headwear likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        rollAngle:
          type: number
          format: float
          description: 'Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].'
        surpriseLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Surprise likelihood.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        underExposedLikelihood:
          description: Under-exposed likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        landmarks:
          type: array
          description: Detected face landmarks.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1FaceAnnotationLandmark'
        sorrowLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Sorrow likelihood.
        landmarkingConfidence:
          description: 'Face landmarking confidence. Range [0, 1].'
          type: number
          format: float
        fdBoundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: 'The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the "amount of skin" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix.'
        detectionConfidence:
          format: float
          description: 'Detection confidence. Range [0, 1].'
          type: number
        panAngle:
          format: float
          description: 'Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180].'
          type: number
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to "frame" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated.
        blurredLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          description: Blurred likelihood.
        angerLikelihood:
          description: Anger likelihood.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        joyLikelihood:
          description: Joy likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        tiltAngle:
          description: 'Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image''s horizontal plane. Range [-180,180].'
          type: number
          format: float
    TextDetectionParams:
      properties:
        enableTextDetectionConfidenceScore:
          description: 'By default, Cloud Vision API only includes confidence score for DOCUMENT_TEXT_DETECTION result. Set the flag to true to include confidence score for TEXT_DETECTION as well.'
          type: boolean
        advancedOcrOptions:
          description: 'A list of advanced OCR options to further fine-tune OCR behavior. Current valid values are: - `legacy_layout`: a heuristics layout detection algorithm, which serves as an alternative to the current ML-based layout detection algorithm. Customers can choose the best suitable layout algorithm based on their situation.'
          type: array
          items:
            type: string
      description: Parameters for text detections. This is used to control TEXT_DETECTION and DOCUMENT_TEXT_DETECTION features.
      type: object
      id: TextDetectionParams
    GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation:
      description: Prediction for what the object in the bounding box is.
      type: object
      id: GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation
      properties:
        name:
          description: 'Object name, expressed in its `language_code` language.'
          type: string
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        score:
          format: float
          type: number
          description: 'Score of the result. Range [0, 1].'
    AsyncBatchAnnotateImagesRequest:
      id: AsyncBatchAnnotateImagesRequest
      type: object
      properties:
        parent:
          type: string
          description: 'Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.'
        requests:
          type: array
          items:
            $ref: '#/components/schemas/AnnotateImageRequest'
          description: Required. Individual image annotation requests for this batch.
        outputConfig:
          description: Required. The desired output location and metadata (e.g. format).
          $ref: '#/components/schemas/OutputConfig'
      description: Request for async image annotation for a list of images.
    GoogleCloudVisionV1p4beta1AnnotateImageResponse:
      description: Response to an image annotation request.
      id: GoogleCloudVisionV1p4beta1AnnotateImageResponse
      properties:
        localizedObjectAnnotations:
          type: array
          description: 'If present, localized object detection has completed successfully. This will be sorted descending by confidence score.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation'
        faceAnnotations:
          type: array
          description: 'If present, face detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1FaceAnnotation'
        landmarkAnnotations:
          description: 'If present, landmark detection has completed successfully.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1EntityAnnotation'
        logoAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1EntityAnnotation'
          type: array
          description: 'If present, logo detection has completed successfully.'
        webDetection:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetection'
          description: 'If present, web detection has completed successfully.'
        fullTextAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotation'
          description: 'If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text.'
        safeSearchAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1SafeSearchAnnotation'
          description: 'If present, safe-search annotation has completed successfully.'
        textAnnotations:
          description: 'If present, text (OCR) detection has completed successfully.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1EntityAnnotation'
        imagePropertiesAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ImageProperties'
          description: 'If present, image properties were extracted successfully.'
        context:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ImageAnnotationContext'
          description: 'If present, contextual information is needed to understand where this image comes from.'
        labelAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1EntityAnnotation'
          description: 'If present, label detection has completed successfully.'
          type: array
        error:
          description: 'If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set.'
          $ref: '#/components/schemas/Status'
        productSearchResults:
          description: 'If present, product search has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResults'
        cropHintsAnnotation:
          description: 'If present, crop hints have completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1CropHintsAnnotation'
      type: object
    ImageSource:
      type: object
      description: External image source (Google Cloud Storage or web URL image location).
      properties:
        imageUri:
          type: string
          description: 'The URI of the source image. Can be either: 1. A Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info. 2. A publicly-accessible image HTTP/HTTPS URL. When fetching images from HTTP/HTTPS URLs, Google cannot guarantee that the request will be completed. Your request may fail if the specified host denies the request (e.g. due to request throttling or DOS prevention), or if Google throttles requests to the site for abuse prevention. You should not depend on externally-hosted images for production applications. When both `gcs_image_uri` and `image_uri` are specified, `image_uri` takes precedence.'
        gcsImageUri:
          type: string
          description: '**Use `image_uri` instead.** The Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.'
      id: ImageSource
    GoogleCloudVisionV1p2beta1Paragraph:
      id: GoogleCloudVisionV1p2beta1Paragraph
      type: object
      properties:
        property:
          description: Additional information detected for the paragraph.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty'
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
          description: 'The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        words:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Word'
          description: List of all words in this paragraph.
        confidence:
          type: number
          format: float
          description: 'Confidence of the OCR results for the paragraph. Range [0, 1].'
      description: Structural unit of text representing a number of words in certain order.
    GoogleCloudVisionV1p3beta1NormalizedVertex:
      type: object
      properties:
        x:
          type: number
          description: X coordinate.
          format: float
        'y':
          format: float
          description: Y coordinate.
          type: number
      description: 'A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.'
      id: GoogleCloudVisionV1p3beta1NormalizedVertex
    GoogleCloudVisionV1p3beta1CropHint:
      id: GoogleCloudVisionV1p3beta1CropHint
      description: Single crop hint that is used to generate a new crop when serving an image.
      type: object
      properties:
        importanceFraction:
          description: Fraction of importance of this salient region with respect to the original image.
          type: number
          format: float
        confidence:
          description: 'Confidence of this being a salient region. Range [0, 1].'
          format: float
          type: number
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale.
    GoogleCloudVisionV1p4beta1Block:
      id: GoogleCloudVisionV1p4beta1Block
      type: object
      properties:
        property:
          description: Additional information detected for the block.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty'
        paragraphs:
          description: List of paragraphs in this block (if this blocks is of type text).
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Paragraph'
          type: array
        blockType:
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
          type: string
          description: 'Detected block type (text, image etc) for this block.'
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
        confidence:
          description: 'Confidence of the OCR results on the block. Range [0, 1].'
          format: float
          type: number
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: 'The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
      description: Logical element on the page.
    GoogleCloudVisionV1p2beta1ImageAnnotationContext:
      id: GoogleCloudVisionV1p2beta1ImageAnnotationContext
      properties:
        uri:
          type: string
          description: The URI of the file used to produce the image.
        pageNumber:
          description: 'If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image.'
          format: int32
          type: integer
      description: 'If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.'
      type: object
    AsyncBatchAnnotateFilesResponse:
      id: AsyncBatchAnnotateFilesResponse
      properties:
        responses:
          items:
            $ref: '#/components/schemas/AsyncAnnotateFileResponse'
          description: 'The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest.'
          type: array
      description: Response to an async batch file annotation request.
      type: object
    WebDetection:
      type: object
      properties:
        fullMatchingImages:
          items:
            $ref: '#/components/schemas/WebImage'
          description: Fully matching images from the Internet. Can include resized copies of the query image.
          type: array
        bestGuessLabels:
          items:
            $ref: '#/components/schemas/WebLabel'
          description: The service's best guess as to the topic of the request image. Inferred from similar images on the open web.
          type: array
        pagesWithMatchingImages:
          description: Web pages containing the matching images from the Internet.
          items:
            $ref: '#/components/schemas/WebPage'
          type: array
        partialMatchingImages:
          type: array
          description: Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          items:
            $ref: '#/components/schemas/WebImage'
        webEntities:
          items:
            $ref: '#/components/schemas/WebEntity'
          type: array
          description: Deduced entities from similar images on the Internet.
        visuallySimilarImages:
          items:
            $ref: '#/components/schemas/WebImage'
          description: The visually similar image results.
          type: array
      id: WebDetection
      description: Relevant information for the image from the Internet.
    GoogleCloudVisionV1p3beta1WebDetectionWebImage:
      id: GoogleCloudVisionV1p3beta1WebDetectionWebImage
      type: object
      description: Metadata for online images.
      properties:
        url:
          type: string
          description: The result image URL.
        score:
          format: float
          type: number
          description: (Deprecated) Overall relevancy score for the image.
    GoogleCloudVisionV1p3beta1ProductKeyValue:
      description: A product label represented as a key-value pair.
      id: GoogleCloudVisionV1p3beta1ProductKeyValue
      properties:
        value:
          type: string
          description: The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
        key:
          type: string
          description: The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
      type: object
    GoogleCloudVisionV1p3beta1Product:
      id: GoogleCloudVisionV1p3beta1Product
      properties:
        name:
          type: string
          description: 'The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product.'
        displayName:
          type: string
          description: The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long.
        productCategory:
          description: 'Immutable. The category for the product identified by the reference image. This should be one of "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories "homegoods", "apparel", and "toys" are still supported, but these should not be used for new products.'
          type: string
        description:
          description: User-provided metadata to be stored with this product. Must be at most 4096 characters long.
          type: string
        productLabels:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductKeyValue'
          description: 'Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. "1199". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet.'
          type: array
      description: A Product contains ReferenceImages.
      type: object
    GoogleCloudVisionV1p2beta1ImageProperties:
      id: GoogleCloudVisionV1p2beta1ImageProperties
      properties:
        dominantColors:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1DominantColorsAnnotation'
          description: 'If present, dominant colors completed successfully.'
      type: object
      description: 'Stores image properties, such as dominant colors.'
    GoogleCloudVisionV1p3beta1GcsDestination:
      type: object
      description: The Google Cloud Storage location where the output will be written to.
      properties:
        uri:
          type: string
          description: 'Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with "filenameprefix". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files.'
      id: GoogleCloudVisionV1p3beta1GcsDestination
    GoogleCloudVisionV1p4beta1ImageAnnotationContext:
      description: 'If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.'
      properties:
        pageNumber:
          description: 'If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image.'
          type: integer
          format: int32
        uri:
          type: string
          description: The URI of the file used to produce the image.
      type: object
      id: GoogleCloudVisionV1p4beta1ImageAnnotationContext
    GoogleCloudVisionV1p4beta1FaceAnnotationLandmark:
      type: object
      description: 'A face-specific landmark (for example, a face feature).'
      id: GoogleCloudVisionV1p4beta1FaceAnnotationLandmark
      properties:
        position:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Position'
          description: Face landmark position.
        type:
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
          description: Face landmark type.
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - 'Nose, bottom right.'
            - 'Nose, bottom left.'
            - 'Nose, bottom center.'
            - 'Left eye, top boundary.'
            - 'Left eye, right corner.'
            - 'Left eye, bottom boundary.'
            - 'Left eye, left corner.'
            - 'Right eye, top boundary.'
            - 'Right eye, right corner.'
            - 'Right eye, bottom boundary.'
            - 'Right eye, left corner.'
            - 'Left eyebrow, upper midpoint.'
            - 'Right eyebrow, upper midpoint.'
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
          type: string
    ListProductsInProductSetResponse:
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          description: The list of Products.
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
      type: object
      id: ListProductsInProductSetResponse
      description: Response message for the `ListProductsInProductSet` method.
    GoogleCloudVisionV1p2beta1SafeSearchAnnotation:
      id: GoogleCloudVisionV1p2beta1SafeSearchAnnotation
      type: object
      properties:
        spoof:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive.
        violence:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Likelihood that this image contains violent content.
        racy:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: 'Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.'
        adult:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: 'Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities.'
        medical:
          description: Likelihood that this is a medical image.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
      description: 'Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).'
    GoogleCloudVisionV1p4beta1ImageProperties:
      type: object
      description: 'Stores image properties, such as dominant colors.'
      id: GoogleCloudVisionV1p4beta1ImageProperties
      properties:
        dominantColors:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1DominantColorsAnnotation'
          description: 'If present, dominant colors completed successfully.'
    ImportProductSetsGcsSource:
      description: The Google Cloud Storage location for a csv file which preserves a list of ImportProductSetRequests in each line.
      properties:
        csvFileUri:
          type: string
          description: 'The Google Cloud Storage URI of the input csv file. The URI must start with `gs://`. The format of the input csv file should be one image per line. In each line, there are 8 columns. 1. image-uri 2. image-id 3. product-set-id 4. product-id 5. product-category 6. product-display-name 7. labels 8. bounding-poly The `image-uri`, `product-set-id`, `product-id`, and `product-category` columns are required. All other columns are optional. If the `ProductSet` or `Product` specified by the `product-set-id` and `product-id` values does not exist, then the system will create a new `ProductSet` or `Product` for the image. In this case, the `product-display-name` column refers to display_name, the `product-category` column refers to product_category, and the `labels` column refers to product_labels. The `image-id` column is optional but must be unique if provided. If it is empty, the system will automatically assign a unique id to the image. The `product-display-name` column is optional. If it is empty, the system sets the display_name field for the product to a space (" "). You can update the `display_name` later by using the API. If a `Product` with the specified `product-id` already exists, then the system ignores the `product-display-name`, `product-category`, and `labels` columns. The `labels` column (optional) is a line containing a list of comma-separated key-value pairs, in the following format: "key_1=value_1,key_2=value_2,...,key_n=value_n" The `bounding-poly` column (optional) identifies one region of interest from the image in the same manner as `CreateReferenceImage`. If you do not specify the `bounding-poly` column, then the system will try to detect regions of interest automatically. At most one `bounding-poly` column is allowed per line. If the image contains multiple regions of interest, add a line to the CSV file that includes the same product information, and the `bounding-poly` values for each region of interest. The `bounding-poly` column must contain an even number of comma-separated numbers, in the format "p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y". Use non-negative integers for absolute bounding polygons, and float values in [0, 1] for normalized bounding polygons. The system will resize the image if the image resolution is too large to process (larger than 20MP).'
      type: object
      id: ImportProductSetsGcsSource
    GoogleCloudVisionV1p1beta1Page:
      properties:
        confidence:
          format: float
          description: 'Confidence of the OCR results on the page. Range [0, 1].'
          type: number
        blocks:
          type: array
          description: 'List of blocks of text, images etc on this page.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Block'
        width:
          description: Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
          type: integer
          format: int32
        height:
          type: integer
          format: int32
          description: Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
        property:
          description: Additional information detected on the page.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty'
      type: object
      id: GoogleCloudVisionV1p1beta1Page
      description: Detected page from OCR.
    Page:
      description: Detected page from OCR.
      properties:
        height:
          format: int32
          type: integer
          description: Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
        blocks:
          description: 'List of blocks of text, images etc on this page.'
          type: array
          items:
            $ref: '#/components/schemas/Block'
        confidence:
          type: number
          description: 'Confidence of the OCR results on the page. Range [0, 1].'
          format: float
        property:
          $ref: '#/components/schemas/TextProperty'
          description: Additional information detected on the page.
        width:
          type: integer
          format: int32
          description: Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
      type: object
      id: Page
    ImportProductSetsInputConfig:
      description: The input content for the `ImportProductSets` method.
      properties:
        gcsSource:
          $ref: '#/components/schemas/ImportProductSetsGcsSource'
          description: The Google Cloud Storage location for a csv file which preserves a list of ImportProductSetRequests in each line.
      id: ImportProductSetsInputConfig
      type: object
    Word:
      description: A word representation.
      id: Word
      type: object
      properties:
        confidence:
          description: 'Confidence of the OCR results for the word. Range [0, 1].'
          type: number
          format: float
        boundingBox:
          $ref: '#/components/schemas/BoundingPoly'
          description: 'The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        property:
          description: Additional information detected for the word.
          $ref: '#/components/schemas/TextProperty'
        symbols:
          items:
            $ref: '#/components/schemas/Symbol'
          description: List of symbols in the word. The order of the symbols follows the natural reading order.
          type: array
    GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak:
      description: Detected start or end of a structural component.
      type: object
      properties:
        isPrefix:
          description: True if break prepends the element.
          type: boolean
        type:
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - 'End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.'
            - Line break that ends a paragraph.
          type: string
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
          description: Detected break type.
      id: GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak
    GoogleCloudVisionV1p1beta1LocationInfo:
      description: Detected entity location information.
      id: GoogleCloudVisionV1p1beta1LocationInfo
      type: object
      properties:
        latLng:
          $ref: '#/components/schemas/LatLng'
          description: lat/long location coordinates.
    Image:
      description: Client image to perform Google Cloud Vision API tasks over.
      id: Image
      properties:
        content:
          type: string
          description: 'Image content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateImages requests. It does not work for AsyncBatchAnnotateImages requests.'
          format: byte
        source:
          $ref: '#/components/schemas/ImageSource'
          description: 'Google Cloud Storage image location, or publicly-accessible image URL. If both `content` and `source` are provided for an image, `content` takes precedence and is used to perform the image annotation request.'
      type: object
    Operation:
      type: object
      id: Operation
      properties:
        response:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          type: object
      description: This resource represents a long-running operation that is the result of a network API call.
    GoogleCloudVisionV1p3beta1GcsSource:
      id: GoogleCloudVisionV1p3beta1GcsSource
      type: object
      description: The Google Cloud Storage location where the input will be read from.
      properties:
        uri:
          description: Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported.
          type: string
    AsyncBatchAnnotateImagesResponse:
      type: object
      id: AsyncBatchAnnotateImagesResponse
      properties:
        outputConfig:
          $ref: '#/components/schemas/OutputConfig'
          description: The output location and metadata from AsyncBatchAnnotateImagesRequest.
      description: Response to an async batch image annotation request.
    GoogleCloudVisionV1p1beta1OutputConfig:
      description: The desired output location and metadata.
      type: object
      properties:
        batchSize:
          format: int32
          description: 'The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations.'
          type: integer
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1GcsDestination'
          description: The Google Cloud Storage location to write the output(s) to.
      id: GoogleCloudVisionV1p1beta1OutputConfig
    GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation:
      properties:
        mid:
          type: string
          description: Object ID that should align with EntityAnnotation mid.
        boundingPoly:
          description: Image region to which this object belongs. This must be populated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
        name:
          description: 'Object name, expressed in its `language_code` language.'
          type: string
        languageCode:
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
        score:
          type: number
          format: float
          description: 'Score of the result. Range [0, 1].'
      id: GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation
      description: Set of detected objects with bounding boxes.
      type: object
    GoogleCloudVisionV1p2beta1AnnotateFileResponse:
      properties:
        inputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1InputConfig'
          description: Information about the file for which this response is generated.
        totalPages:
          format: int32
          type: integer
          description: This field gives the total number of pages in the file.
        responses:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1AnnotateImageResponse'
          description: Individual responses to images found within the file. This field will be empty if the `error` field is set.
        error:
          $ref: '#/components/schemas/Status'
          description: 'If set, represents the error message for the failed request. The `responses` field will not be set in this case.'
      type: object
      id: GoogleCloudVisionV1p2beta1AnnotateFileResponse
      description: 'Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.'
    GoogleCloudVisionV1p1beta1TextAnnotationTextProperty:
      properties:
        detectedLanguages:
          description: A list of detected languages together with confidence.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage'
        detectedBreak:
          description: Detected start or end of a text segment.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak'
      type: object
      description: Additional information detected on the structural component.
      id: GoogleCloudVisionV1p1beta1TextAnnotationTextProperty
    ImageContext:
      id: ImageContext
      type: object
      description: Image context and/or feature-specific parameters.
      properties:
        cropHintsParams:
          $ref: '#/components/schemas/CropHintsParams'
          description: Parameters for crop hints annotation request.
        latLongRect:
          $ref: '#/components/schemas/LatLongRect'
          description: Not used.
        textDetectionParams:
          $ref: '#/components/schemas/TextDetectionParams'
          description: Parameters for text detection and document text detection.
        languageHints:
          items:
            type: string
          description: 'List of languages to use for TEXT_DETECTION. In most cases, an empty value yields the best results since it enables automatic language detection. For languages based on the Latin alphabet, setting `language_hints` is not needed. In rare cases, when the language of the text in the image is known, setting a hint will help get better results (although it will be a significant hindrance if the hint is wrong). Text detection returns an error if one or more of the specified languages is not one of the [supported languages](https://cloud.google.com/vision/docs/languages).'
          type: array
        productSearchParams:
          $ref: '#/components/schemas/ProductSearchParams'
          description: Parameters for product search.
        webDetectionParams:
          $ref: '#/components/schemas/WebDetectionParams'
          description: Parameters for web detection.
    GoogleCloudVisionV1p4beta1TextAnnotationTextProperty:
      type: object
      description: Additional information detected on the structural component.
      id: GoogleCloudVisionV1p4beta1TextAnnotationTextProperty
      properties:
        detectedBreak:
          description: Detected start or end of a text segment.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak'
        detectedLanguages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage'
          type: array
          description: A list of detected languages together with confidence.
    GoogleCloudVisionV1p4beta1BoundingPoly:
      properties:
        vertices:
          description: The bounding polygon vertices.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Vertex'
        normalizedVertices:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1NormalizedVertex'
          type: array
          description: The bounding polygon normalized vertices.
      id: GoogleCloudVisionV1p4beta1BoundingPoly
      type: object
      description: A bounding polygon for the detected image annotation.
    Block:
      properties:
        blockType:
          description: 'Detected block type (text, image etc) for this block.'
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
          type: string
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
        property:
          description: Additional information detected for the block.
          $ref: '#/components/schemas/TextProperty'
        confidence:
          description: 'Confidence of the OCR results on the block. Range [0, 1].'
          format: float
          type: number
        boundingBox:
          description: 'The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/BoundingPoly'
        paragraphs:
          type: array
          description: List of paragraphs in this block (if this blocks is of type text).
          items:
            $ref: '#/components/schemas/Paragraph'
      id: Block
      type: object
      description: Logical element on the page.
    GoogleCloudVisionV1p4beta1Vertex:
      description: 'A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.'
      type: object
      id: GoogleCloudVisionV1p4beta1Vertex
      properties:
        x:
          type: integer
          description: X coordinate.
          format: int32
        'y':
          format: int32
          description: Y coordinate.
          type: integer
    WebDetectionParams:
      id: WebDetectionParams
      type: object
      description: Parameters for web detection request.
      properties:
        includeGeoResults:
          description: Whether to include results derived from the geo information in the image.
          type: boolean
    ProductSet:
      properties:
        displayName:
          description: The user-provided name for this ProductSet. Must not be empty. Must be at most 4096 characters long.
          type: string
        indexTime:
          readOnly: true
          format: google-datetime
          description: 'Output only. The time at which this ProductSet was last indexed. Query results will reflect all updates before this time. If this ProductSet has never been indexed, this timestamp is the default value "1970-01-01T00:00:00Z". This field is ignored when creating a ProductSet.'
          type: string
        name:
          description: 'The resource name of the ProductSet. Format is: `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`. This field is ignored when creating a ProductSet.'
          type: string
        indexError:
          readOnly: true
          description: 'Output only. If there was an error with indexing the product set, the field is populated. This field is ignored when creating a ProductSet.'
          $ref: '#/components/schemas/Status'
      description: 'A ProductSet contains Products. A ProductSet can contain a maximum of 1 million reference images. If the limit is exceeded, periodic indexing will fail.'
      type: object
      id: ProductSet
    ImportProductSetsRequest:
      properties:
        inputConfig:
          $ref: '#/components/schemas/ImportProductSetsInputConfig'
          description: Required. The input content for the list of requests.
      description: Request message for the `ImportProductSets` method.
      type: object
      id: ImportProductSetsRequest
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      properties:
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
        nextPageToken:
          type: string
          description: The standard List next-page token.
      type: object
    ColorInfo:
      type: object
      properties:
        score:
          description: 'Image-specific score for this color. Value in range [0, 1].'
          format: float
          type: number
        color:
          description: RGB components of the color.
          $ref: '#/components/schemas/Color'
        pixelFraction:
          description: 'The fraction of pixels the color occupies in the image. Value in range [0, 1].'
          type: number
          format: float
      id: ColorInfo
      description: 'Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.'
    LocalizedObjectAnnotation:
      description: Set of detected objects with bounding boxes.
      type: object
      id: LocalizedObjectAnnotation
      properties:
        boundingPoly:
          description: Image region to which this object belongs. This must be populated.
          $ref: '#/components/schemas/BoundingPoly'
        name:
          description: 'Object name, expressed in its `language_code` language.'
          type: string
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        score:
          format: float
          description: 'Score of the result. Range [0, 1].'
          type: number
        mid:
          type: string
          description: Object ID that should align with EntityAnnotation mid.
    GoogleCloudVisionV1p4beta1CropHintsAnnotation:
      description: Set of crop hints that are used to generate new crops when serving images.
      type: object
      id: GoogleCloudVisionV1p4beta1CropHintsAnnotation
      properties:
        cropHints:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1CropHint'
          type: array
          description: Crop hint results.
    LatLongRect:
      properties:
        minLatLng:
          $ref: '#/components/schemas/LatLng'
          description: Min lat/long pair.
        maxLatLng:
          description: Max lat/long pair.
          $ref: '#/components/schemas/LatLng'
      type: object
      id: LatLongRect
      description: Rectangle determined by min and max `LatLng` pairs.
    GoogleCloudVisionV1p4beta1BatchAnnotateFilesResponse:
      type: object
      id: GoogleCloudVisionV1p4beta1BatchAnnotateFilesResponse
      properties:
        responses:
          type: array
          description: 'The list of file annotation responses, each response corresponding to each AnnotateFileRequest in BatchAnnotateFilesRequest.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1AnnotateFileResponse'
      description: A list of file annotation responses.
    GoogleCloudVisionV1p3beta1ImageAnnotationContext:
      description: 'If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.'
      properties:
        pageNumber:
          description: 'If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image.'
          type: integer
          format: int32
        uri:
          description: The URI of the file used to produce the image.
          type: string
      type: object
      id: GoogleCloudVisionV1p3beta1ImageAnnotationContext
    GoogleCloudVisionV1p4beta1TextAnnotation:
      type: object
      description: 'TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.'
      id: GoogleCloudVisionV1p4beta1TextAnnotation
      properties:
        pages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Page'
          description: List of pages detected by OCR.
          type: array
        text:
          type: string
          description: UTF-8 text detected on the pages.
    ProductSearchResults:
      type: object
      id: ProductSearchResults
      description: Results for a product search request.
      properties:
        results:
          items:
            $ref: '#/components/schemas/Result'
          description: 'List of results, one for each product match.'
          type: array
        indexTime:
          description: Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results.
          type: string
          format: google-datetime
        productGroupedResults:
          type: array
          items:
            $ref: '#/components/schemas/GroupedResult'
          description: 'List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results.'
    GoogleCloudVisionV1p3beta1TextAnnotation:
      type: object
      id: GoogleCloudVisionV1p3beta1TextAnnotation
      properties:
        pages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Page'
          description: List of pages detected by OCR.
        text:
          type: string
          description: UTF-8 text detected on the pages.
      description: 'TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.'
    LatLng:
      properties:
        latitude:
          type: number
          format: double
          description: 'The latitude in degrees. It must be in the range [-90.0, +90.0].'
        longitude:
          format: double
          type: number
          description: 'The longitude in degrees. It must be in the range [-180.0, +180.0].'
      type: object
      description: 'An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.'
      id: LatLng
    GoogleCloudVisionV1p3beta1WebDetectionWebEntity:
      description: Entity deduced from similar images on the Internet.
      id: GoogleCloudVisionV1p3beta1WebDetectionWebEntity
      type: object
      properties:
        score:
          description: Overall relevancy score for the entity. Not normalized and not comparable across different image queries.
          format: float
          type: number
        description:
          type: string
          description: 'Canonical description of the entity, in English.'
        entityId:
          type: string
          description: Opaque entity ID.
    GoogleCloudVisionV1p3beta1ColorInfo:
      description: 'Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.'
      properties:
        color:
          $ref: '#/components/schemas/Color'
          description: RGB components of the color.
        score:
          format: float
          type: number
          description: 'Image-specific score for this color. Value in range [0, 1].'
        pixelFraction:
          type: number
          description: 'The fraction of pixels the color occupies in the image. Value in range [0, 1].'
          format: float
      id: GoogleCloudVisionV1p3beta1ColorInfo
      type: object
    GoogleCloudVisionV1p1beta1InputConfig:
      id: GoogleCloudVisionV1p1beta1InputConfig
      description: The desired input location and metadata.
      properties:
        content:
          format: byte
          description: 'File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests.'
          type: string
        mimeType:
          description: 'The type of the file. Currently only "application/pdf", "image/tiff" and "image/gif" are supported. Wildcards are not supported.'
          type: string
        gcsSource:
          description: The Google Cloud Storage location to read the input from.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1GcsSource'
      type: object
    OutputConfig:
      id: OutputConfig
      description: The desired output location and metadata.
      properties:
        gcsDestination:
          description: The Google Cloud Storage location to write the output(s) to.
          $ref: '#/components/schemas/GcsDestination'
        batchSize:
          format: int32
          type: integer
          description: 'The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations.'
      type: object
    GoogleCloudVisionV1p4beta1InputConfig:
      type: object
      id: GoogleCloudVisionV1p4beta1InputConfig
      description: The desired input location and metadata.
      properties:
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1GcsSource'
          description: The Google Cloud Storage location to read the input from.
        content:
          format: byte
          description: 'File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests.'
          type: string
        mimeType:
          description: 'The type of the file. Currently only "application/pdf", "image/tiff" and "image/gif" are supported. Wildcards are not supported.'
          type: string
    GoogleCloudVisionV1p3beta1AnnotateImageResponse:
      description: Response to an image annotation request.
      type: object
      properties:
        labelAnnotations:
          type: array
          description: 'If present, label detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1EntityAnnotation'
        localizedObjectAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation'
          type: array
          description: 'If present, localized object detection has completed successfully. This will be sorted descending by confidence score.'
        webDetection:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetection'
          description: 'If present, web detection has completed successfully.'
        error:
          description: 'If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set.'
          $ref: '#/components/schemas/Status'
        fullTextAnnotation:
          description: 'If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotation'
        logoAnnotations:
          description: 'If present, logo detection has completed successfully.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1EntityAnnotation'
        safeSearchAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1SafeSearchAnnotation'
          description: 'If present, safe-search annotation has completed successfully.'
        cropHintsAnnotation:
          description: 'If present, crop hints have completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1CropHintsAnnotation'
        imagePropertiesAnnotation:
          description: 'If present, image properties were extracted successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ImageProperties'
        productSearchResults:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResults'
          description: 'If present, product search has completed successfully.'
        faceAnnotations:
          description: 'If present, face detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1FaceAnnotation'
          type: array
        context:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ImageAnnotationContext'
          description: 'If present, contextual information is needed to understand where this image comes from.'
        landmarkAnnotations:
          description: 'If present, landmark detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1EntityAnnotation'
          type: array
        textAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1EntityAnnotation'
          type: array
          description: 'If present, text (OCR) detection has completed successfully.'
      id: GoogleCloudVisionV1p3beta1AnnotateImageResponse
    GoogleCloudVisionV1p1beta1ColorInfo:
      id: GoogleCloudVisionV1p1beta1ColorInfo
      properties:
        color:
          $ref: '#/components/schemas/Color'
          description: RGB components of the color.
        pixelFraction:
          description: 'The fraction of pixels the color occupies in the image. Value in range [0, 1].'
          format: float
          type: number
        score:
          type: number
          description: 'Image-specific score for this color. Value in range [0, 1].'
          format: float
      type: object
      description: 'Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.'
    GoogleCloudVisionV1p3beta1ReferenceImage:
      id: GoogleCloudVisionV1p3beta1ReferenceImage
      properties:
        uri:
          description: 'Required. The Google Cloud Storage URI of the reference image. The URI must start with `gs://`.'
          type: string
        boundingPolys:
          description: 'Optional. Bounding polygons around the areas of interest in the reference image. If this field is empty, the system will try to detect regions of interest. At most 10 bounding polygons will be used. The provided shape is converted into a non-rotated rectangle. Once converted, the small edge of the rectangle must be greater than or equal to 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5 is not).'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
        name:
          description: 'The resource name of the reference image. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`. This field is ignored when creating a reference image.'
          type: string
      type: object
      description: 'A `ReferenceImage` represents a product image and its associated metadata, such as bounding boxes.'
    OperationMetadata:
      description: Contains metadata for the BatchAnnotateImages operation.
      properties:
        createTime:
          format: google-datetime
          description: The time when the batch request was received.
          type: string
        state:
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
          type: string
          description: Current state of the batch operation.
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
        updateTime:
          format: google-datetime
          description: The time when the operation result was last updated.
          type: string
      id: OperationMetadata
      type: object
    GoogleCloudVisionV1p1beta1WebDetection:
      description: Relevant information for the image from the Internet.
      id: GoogleCloudVisionV1p1beta1WebDetection
      properties:
        bestGuessLabels:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebLabel'
          description: The service's best guess as to the topic of the request image. Inferred from similar images on the open web.
        webEntities:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebEntity'
          description: Deduced entities from similar images on the Internet.
          type: array
        partialMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage'
          description: Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          type: array
        visuallySimilarImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage'
          description: The visually similar image results.
          type: array
        fullMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage'
          type: array
          description: Fully matching images from the Internet. Can include resized copies of the query image.
        pagesWithMatchingImages:
          description: Web pages containing the matching images from the Internet.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebPage'
      type: object
    GoogleCloudVisionV1p4beta1Property:
      id: GoogleCloudVisionV1p4beta1Property
      properties:
        uint64Value:
          description: Value of numeric properties.
          format: uint64
          type: string
        name:
          description: Name of the property.
          type: string
        value:
          type: string
          description: Value of the property.
      type: object
      description: A `Property` consists of a user-supplied name/value pair.
    AsyncAnnotateFileRequest:
      type: object
      description: An offline file annotation request.
      id: AsyncAnnotateFileRequest
      properties:
        inputConfig:
          description: Required. Information about the input file.
          $ref: '#/components/schemas/InputConfig'
        features:
          items:
            $ref: '#/components/schemas/Feature'
          type: array
          description: Required. Requested features.
        imageContext:
          description: Additional context that may accompany the image(s) in the file.
          $ref: '#/components/schemas/ImageContext'
        outputConfig:
          description: Required. The desired output location and metadata (e.g. format).
          $ref: '#/components/schemas/OutputConfig'
    GoogleCloudVisionV1p1beta1ImageProperties:
      id: GoogleCloudVisionV1p1beta1ImageProperties
      properties:
        dominantColors:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1DominantColorsAnnotation'
          description: 'If present, dominant colors completed successfully.'
      description: 'Stores image properties, such as dominant colors.'
      type: object
    GoogleCloudVisionV1p2beta1ProductSearchResults:
      type: object
      id: GoogleCloudVisionV1p2beta1ProductSearchResults
      description: Results for a product search request.
      properties:
        results:
          description: 'List of results, one for each product match.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResultsResult'
          type: array
        productGroupedResults:
          type: array
          description: 'List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult'
        indexTime:
          format: google-datetime
          description: Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results.
          type: string
    GoogleCloudVisionV1p1beta1Block:
      type: object
      description: Logical element on the page.
      properties:
        confidence:
          format: float
          type: number
          description: 'Confidence of the OCR results on the block. Range [0, 1].'
        paragraphs:
          description: List of paragraphs in this block (if this blocks is of type text).
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Paragraph'
          type: array
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
          description: 'The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty'
          description: Additional information detected for the block.
        blockType:
          type: string
          description: 'Detected block type (text, image etc) for this block.'
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
      id: GoogleCloudVisionV1p1beta1Block
    GoogleCloudVisionV1p3beta1OperationMetadata:
      properties:
        updateTime:
          format: google-datetime
          type: string
          description: The time when the operation result was last updated.
        createTime:
          description: The time when the batch request was received.
          format: google-datetime
          type: string
        state:
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
          type: string
          description: Current state of the batch operation.
      description: Contains metadata for the BatchAnnotateImages operation.
      type: object
      id: GoogleCloudVisionV1p3beta1OperationMetadata
    BatchAnnotateFilesRequest:
      description: A list of requests to annotate files using the BatchAnnotateFiles API.
      id: BatchAnnotateFilesRequest
      type: object
      properties:
        requests:
          type: array
          items:
            $ref: '#/components/schemas/AnnotateFileRequest'
          description: Required. The list of file annotation requests. Right now we support only one AnnotateFileRequest in BatchAnnotateFilesRequest.
        parent:
          type: string
          description: 'Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.'
    GoogleCloudVisionV1p3beta1Property:
      type: object
      properties:
        value:
          type: string
          description: Value of the property.
        uint64Value:
          format: uint64
          type: string
          description: Value of numeric properties.
        name:
          description: Name of the property.
          type: string
      description: A `Property` consists of a user-supplied name/value pair.
      id: GoogleCloudVisionV1p3beta1Property
    GoogleCloudVisionV1p4beta1AnnotateFileResponse:
      properties:
        totalPages:
          description: This field gives the total number of pages in the file.
          type: integer
          format: int32
        responses:
          description: Individual responses to images found within the file. This field will be empty if the `error` field is set.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1AnnotateImageResponse'
        inputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1InputConfig'
          description: Information about the file for which this response is generated.
        error:
          description: 'If set, represents the error message for the failed request. The `responses` field will not be set in this case.'
          $ref: '#/components/schemas/Status'
      description: 'Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.'
      id: GoogleCloudVisionV1p4beta1AnnotateFileResponse
      type: object
    GoogleCloudVisionV1p1beta1Product:
      properties:
        productLabels:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductKeyValue'
          description: 'Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. "1199". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet.'
        productCategory:
          description: 'Immutable. The category for the product identified by the reference image. This should be one of "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories "homegoods", "apparel", and "toys" are still supported, but these should not be used for new products.'
          type: string
        description:
          type: string
          description: User-provided metadata to be stored with this product. Must be at most 4096 characters long.
        displayName:
          type: string
          description: The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long.
        name:
          description: 'The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product.'
          type: string
      id: GoogleCloudVisionV1p1beta1Product
      type: object
      description: A Product contains ReferenceImages.
    GoogleCloudVisionV1p4beta1WebDetectionWebEntity:
      id: GoogleCloudVisionV1p4beta1WebDetectionWebEntity
      description: Entity deduced from similar images on the Internet.
      type: object
      properties:
        entityId:
          description: Opaque entity ID.
          type: string
        description:
          description: 'Canonical description of the entity, in English.'
          type: string
        score:
          type: number
          description: Overall relevancy score for the entity. Not normalized and not comparable across different image queries.
          format: float
    GoogleCloudVisionV1p1beta1CropHint:
      properties:
        importanceFraction:
          description: Fraction of importance of this salient region with respect to the original image.
          format: float
          type: number
        boundingPoly:
          description: The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
        confidence:
          type: number
          description: 'Confidence of this being a salient region. Range [0, 1].'
          format: float
      id: GoogleCloudVisionV1p1beta1CropHint
      description: Single crop hint that is used to generate a new crop when serving an image.
      type: object
    GoogleCloudVisionV1p2beta1BoundingPoly:
      type: object
      properties:
        normalizedVertices:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1NormalizedVertex'
          description: The bounding polygon normalized vertices.
        vertices:
          description: The bounding polygon vertices.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Vertex'
          type: array
      id: GoogleCloudVisionV1p2beta1BoundingPoly
      description: A bounding polygon for the detected image annotation.
    InputConfig:
      id: InputConfig
      type: object
      properties:
        mimeType:
          type: string
          description: 'The type of the file. Currently only "application/pdf", "image/tiff" and "image/gif" are supported. Wildcards are not supported.'
        content:
          type: string
          format: byte
          description: 'File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests.'
        gcsSource:
          description: The Google Cloud Storage location to read the input from.
          $ref: '#/components/schemas/GcsSource'
      description: The desired input location and metadata.
    GoogleCloudVisionV1p2beta1Property:
      properties:
        value:
          type: string
          description: Value of the property.
        name:
          description: Name of the property.
          type: string
        uint64Value:
          format: uint64
          description: Value of numeric properties.
          type: string
      description: A `Property` consists of a user-supplied name/value pair.
      type: object
      id: GoogleCloudVisionV1p2beta1Property
    CropHint:
      id: CropHint
      type: object
      properties:
        importanceFraction:
          format: float
          description: Fraction of importance of this salient region with respect to the original image.
          type: number
        boundingPoly:
          $ref: '#/components/schemas/BoundingPoly'
          description: The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale.
        confidence:
          type: number
          description: 'Confidence of this being a salient region. Range [0, 1].'
          format: float
      description: Single crop hint that is used to generate a new crop when serving an image.
    GoogleCloudVisionV1p2beta1Page:
      type: object
      description: Detected page from OCR.
      properties:
        property:
          description: Additional information detected on the page.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty'
        confidence:
          type: number
          description: 'Confidence of the OCR results on the page. Range [0, 1].'
          format: float
        height:
          format: int32
          description: Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
          type: integer
        width:
          description: Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
          format: int32
          type: integer
        blocks:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Block'
          description: 'List of blocks of text, images etc on this page.'
          type: array
      id: GoogleCloudVisionV1p2beta1Page
    GoogleCloudVisionV1p4beta1WebDetectionWebImage:
      description: Metadata for online images.
      properties:
        url:
          description: The result image URL.
          type: string
        score:
          format: float
          description: (Deprecated) Overall relevancy score for the image.
          type: number
      id: GoogleCloudVisionV1p4beta1WebDetectionWebImage
      type: object
    GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage:
      description: Detected language for a structural component.
      type: object
      id: GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage
      properties:
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        confidence:
          description: 'Confidence of detected language. Range [0, 1].'
          format: float
          type: number
    GoogleCloudVisionV1p3beta1ImageProperties:
      properties:
        dominantColors:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1DominantColorsAnnotation'
          description: 'If present, dominant colors completed successfully.'
      description: 'Stores image properties, such as dominant colors.'
      type: object
      id: GoogleCloudVisionV1p3beta1ImageProperties
    DominantColorsAnnotation:
      description: Set of dominant colors and their corresponding scores.
      properties:
        colors:
          type: array
          description: RGB color values with their score and pixel fraction.
          items:
            $ref: '#/components/schemas/ColorInfo'
      id: DominantColorsAnnotation
      type: object
    GoogleCloudVisionV1p3beta1WebDetectionWebPage:
      type: object
      id: GoogleCloudVisionV1p3beta1WebDetectionWebPage
      description: Metadata for web pages.
      properties:
        score:
          type: number
          format: float
          description: (Deprecated) Overall relevancy score for the web page.
        partialMatchingImages:
          type: array
          description: Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage'
        url:
          type: string
          description: The result web page URL.
        fullMatchingImages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage'
          description: Fully matching images on the page. Can include resized copies of the query image.
        pageTitle:
          type: string
          description: 'Title for the web page, may contain HTML markups.'
    GoogleCloudVisionV1p3beta1WebDetection:
      properties:
        webEntities:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebEntity'
          description: Deduced entities from similar images on the Internet.
        pagesWithMatchingImages:
          description: Web pages containing the matching images from the Internet.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebPage'
          type: array
        bestGuessLabels:
          type: array
          description: The service's best guess as to the topic of the request image. Inferred from similar images on the open web.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebLabel'
        visuallySimilarImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage'
          description: The visually similar image results.
          type: array
        fullMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage'
          description: Fully matching images from the Internet. Can include resized copies of the query image.
          type: array
        partialMatchingImages:
          description: Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage'
          type: array
      description: Relevant information for the image from the Internet.
      type: object
      id: GoogleCloudVisionV1p3beta1WebDetection
    GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult:
      description: Information about the products similar to a single product in a query image.
      id: GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult
      type: object
      properties:
        results:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResultsResult'
          type: array
          description: 'List of results, one for each product match.'
        objectAnnotations:
          description: List of generic predictions for the object in the bounding box.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation'
          type: array
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: The bounding polygon around the product detected in the query image.
    Property:
      properties:
        uint64Value:
          format: uint64
          type: string
          description: Value of numeric properties.
        value:
          description: Value of the property.
          type: string
        name:
          type: string
          description: Name of the property.
      type: object
      id: Property
      description: A `Property` consists of a user-supplied name/value pair.
    Paragraph:
      type: object
      description: Structural unit of text representing a number of words in certain order.
      id: Paragraph
      properties:
        property:
          $ref: '#/components/schemas/TextProperty'
          description: Additional information detected for the paragraph.
        confidence:
          description: 'Confidence of the OCR results for the paragraph. Range [0, 1].'
          type: number
          format: float
        words:
          type: array
          items:
            $ref: '#/components/schemas/Word'
          description: List of all words in this paragraph.
        boundingBox:
          description: 'The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/BoundingPoly'
    GoogleCloudVisionV1p4beta1Paragraph:
      type: object
      properties:
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: 'The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        words:
          description: List of all words in this paragraph.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Word'
          type: array
        property:
          description: Additional information detected for the paragraph.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty'
        confidence:
          description: 'Confidence of the OCR results for the paragraph. Range [0, 1].'
          type: number
          format: float
      description: Structural unit of text representing a number of words in certain order.
      id: GoogleCloudVisionV1p4beta1Paragraph
    AsyncBatchAnnotateFilesRequest:
      type: object
      description: Multiple async file annotation requests are batched into a single service call.
      properties:
        parent:
          type: string
          description: 'Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.'
        requests:
          items:
            $ref: '#/components/schemas/AsyncAnnotateFileRequest'
          type: array
          description: Required. Individual async file annotation requests for this batch.
      id: AsyncBatchAnnotateFilesRequest
    GoogleCloudVisionV1p4beta1CropHint:
      properties:
        boundingPoly:
          description: The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
        confidence:
          format: float
          description: 'Confidence of this being a salient region. Range [0, 1].'
          type: number
        importanceFraction:
          format: float
          type: number
          description: Fraction of importance of this salient region with respect to the original image.
      type: object
      description: Single crop hint that is used to generate a new crop when serving an image.
      id: GoogleCloudVisionV1p4beta1CropHint
    GoogleCloudVisionV1p2beta1FaceAnnotation:
      properties:
        angerLikelihood:
          type: string
          description: Anger likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        boundingPoly:
          description: The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to "frame" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
        landmarks:
          type: array
          description: Detected face landmarks.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1FaceAnnotationLandmark'
        sorrowLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Sorrow likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        panAngle:
          format: float
          description: 'Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180].'
          type: number
        fdBoundingPoly:
          description: 'The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the "amount of skin" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
        blurredLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Blurred likelihood.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        headwearLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: Headwear likelihood.
        tiltAngle:
          format: float
          description: 'Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image''s horizontal plane. Range [-180,180].'
          type: number
        rollAngle:
          type: number
          format: float
          description: 'Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].'
        joyLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Joy likelihood.
        surpriseLikelihood:
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Surprise likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        detectionConfidence:
          type: number
          format: float
          description: 'Detection confidence. Range [0, 1].'
        landmarkingConfidence:
          format: float
          type: number
          description: 'Face landmarking confidence. Range [0, 1].'
        underExposedLikelihood:
          description: Under-exposed likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
      description: A face annotation object contains the results of face detection.
      type: object
      id: GoogleCloudVisionV1p2beta1FaceAnnotation
    GoogleCloudVisionV1p3beta1Paragraph:
      type: object
      properties:
        confidence:
          format: float
          description: 'Confidence of the OCR results for the paragraph. Range [0, 1].'
          type: number
        words:
          description: List of all words in this paragraph.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Word'
          type: array
        boundingBox:
          description: 'The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
        property:
          description: Additional information detected for the paragraph.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty'
      description: Structural unit of text representing a number of words in certain order.
      id: GoogleCloudVisionV1p3beta1Paragraph
    Feature:
      description: 'The type of Google Cloud Vision API detection to perform, and the maximum number of results to return for that type. Multiple `Feature` objects can be specified in the `features` list.'
      type: object
      properties:
        maxResults:
          type: integer
          format: int32
          description: 'Maximum number of results of this type. Does not apply to `TEXT_DETECTION`, `DOCUMENT_TEXT_DETECTION`, or `CROP_HINTS`.'
        type:
          enum:
            - TYPE_UNSPECIFIED
            - FACE_DETECTION
            - LANDMARK_DETECTION
            - LOGO_DETECTION
            - LABEL_DETECTION
            - TEXT_DETECTION
            - DOCUMENT_TEXT_DETECTION
            - SAFE_SEARCH_DETECTION
            - IMAGE_PROPERTIES
            - CROP_HINTS
            - WEB_DETECTION
            - PRODUCT_SEARCH
            - OBJECT_LOCALIZATION
          type: string
          description: The feature type.
          enumDescriptions:
            - Unspecified feature type.
            - Run face detection.
            - Run landmark detection.
            - Run logo detection.
            - Run label detection.
            - 'Run text detection / optical character recognition (OCR). Text detection is optimized for areas of text within a larger image; if the image is a document, use `DOCUMENT_TEXT_DETECTION` instead.'
            - Run dense text document OCR. Takes precedence when both `DOCUMENT_TEXT_DETECTION` and `TEXT_DETECTION` are present.
            - Run Safe Search to detect potentially unsafe or undesirable content.
            - 'Compute a set of image properties, such as the image''s dominant colors.'
            - Run crop hints.
            - Run web detection.
            - Run Product Search.
            - Run localizer for object detection.
        model:
          description: 'Model to use for the feature. Supported values: "builtin/stable" (the default if unset) and "builtin/latest". `DOCUMENT_TEXT_DETECTION` and `TEXT_DETECTION` also support "builtin/weekly" for the bleeding edge release updated weekly.'
          type: string
      id: Feature
    AnnotateImageResponse:
      properties:
        productSearchResults:
          $ref: '#/components/schemas/ProductSearchResults'
          description: 'If present, product search has completed successfully.'
        faceAnnotations:
          items:
            $ref: '#/components/schemas/FaceAnnotation'
          description: 'If present, face detection has completed successfully.'
          type: array
        logoAnnotations:
          type: array
          description: 'If present, logo detection has completed successfully.'
          items:
            $ref: '#/components/schemas/EntityAnnotation'
        localizedObjectAnnotations:
          items:
            $ref: '#/components/schemas/LocalizedObjectAnnotation'
          description: 'If present, localized object detection has completed successfully. This will be sorted descending by confidence score.'
          type: array
        context:
          $ref: '#/components/schemas/ImageAnnotationContext'
          description: 'If present, contextual information is needed to understand where this image comes from.'
        webDetection:
          description: 'If present, web detection has completed successfully.'
          $ref: '#/components/schemas/WebDetection'
        labelAnnotations:
          description: 'If present, label detection has completed successfully.'
          type: array
          items:
            $ref: '#/components/schemas/EntityAnnotation'
        fullTextAnnotation:
          description: 'If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text.'
          $ref: '#/components/schemas/TextAnnotation'
        textAnnotations:
          description: 'If present, text (OCR) detection has completed successfully.'
          type: array
          items:
            $ref: '#/components/schemas/EntityAnnotation'
        imagePropertiesAnnotation:
          description: 'If present, image properties were extracted successfully.'
          $ref: '#/components/schemas/ImageProperties'
        safeSearchAnnotation:
          description: 'If present, safe-search annotation has completed successfully.'
          $ref: '#/components/schemas/SafeSearchAnnotation'
        cropHintsAnnotation:
          description: 'If present, crop hints have completed successfully.'
          $ref: '#/components/schemas/CropHintsAnnotation'
        landmarkAnnotations:
          type: array
          description: 'If present, landmark detection has completed successfully.'
          items:
            $ref: '#/components/schemas/EntityAnnotation'
        error:
          $ref: '#/components/schemas/Status'
          description: 'If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set.'
      id: AnnotateImageResponse
      type: object
      description: Response to an image annotation request.
    GoogleCloudVisionV1p3beta1InputConfig:
      id: GoogleCloudVisionV1p3beta1InputConfig
      properties:
        content:
          description: 'File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests.'
          type: string
          format: byte
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1GcsSource'
          description: The Google Cloud Storage location to read the input from.
        mimeType:
          description: 'The type of the file. Currently only "application/pdf", "image/tiff" and "image/gif" are supported. Wildcards are not supported.'
          type: string
      description: The desired input location and metadata.
      type: object
    GoogleCloudVisionV1p2beta1Position:
      type: object
      description: 'A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image.'
      id: GoogleCloudVisionV1p2beta1Position
      properties:
        z:
          type: number
          format: float
          description: Z coordinate (or depth).
        'y':
          format: float
          description: Y coordinate.
          type: number
        x:
          format: float
          description: X coordinate.
          type: number
    GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage:
      properties:
        languageCode:
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
        confidence:
          format: float
          type: number
          description: 'Confidence of detected language. Range [0, 1].'
      id: GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage
      description: Detected language for a structural component.
      type: object
    GoogleCloudVisionV1p2beta1AsyncBatchAnnotateFilesResponse:
      properties:
        responses:
          type: array
          description: 'The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse'
      description: Response to an async batch file annotation request.
      type: object
      id: GoogleCloudVisionV1p2beta1AsyncBatchAnnotateFilesResponse
    GoogleCloudVisionV1p3beta1AnnotateFileResponse:
      properties:
        totalPages:
          type: integer
          format: int32
          description: This field gives the total number of pages in the file.
        error:
          $ref: '#/components/schemas/Status'
          description: 'If set, represents the error message for the failed request. The `responses` field will not be set in this case.'
        inputConfig:
          description: Information about the file for which this response is generated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1InputConfig'
        responses:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1AnnotateImageResponse'
          type: array
          description: Individual responses to images found within the file. This field will be empty if the `error` field is set.
      description: 'Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.'
      id: GoogleCloudVisionV1p3beta1AnnotateFileResponse
      type: object
    GoogleCloudVisionV1p1beta1BoundingPoly:
      id: GoogleCloudVisionV1p1beta1BoundingPoly
      properties:
        vertices:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Vertex'
          type: array
          description: The bounding polygon vertices.
        normalizedVertices:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1NormalizedVertex'
          type: array
          description: The bounding polygon normalized vertices.
      description: A bounding polygon for the detected image annotation.
      type: object
    GoogleCloudVisionV1p4beta1FaceAnnotation:
      type: object
      id: GoogleCloudVisionV1p4beta1FaceAnnotation
      description: A face annotation object contains the results of face detection.
      properties:
        headwearLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: Headwear likelihood.
        detectionConfidence:
          type: number
          description: 'Detection confidence. Range [0, 1].'
          format: float
        panAngle:
          description: 'Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180].'
          type: number
          format: float
        joyLikelihood:
          description: Joy likelihood.
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        rollAngle:
          format: float
          description: 'Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].'
          type: number
        landmarks:
          description: Detected face landmarks.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1FaceAnnotationLandmark'
        landmarkingConfidence:
          description: 'Face landmarking confidence. Range [0, 1].'
          format: float
          type: number
        surpriseLikelihood:
          type: string
          description: Surprise likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        recognitionResult:
          description: 'Additional recognition information. Only computed if image_context.face_recognition_params is provided, **and** a match is found to a Celebrity in the input CelebritySet. This field is sorted in order of decreasing confidence values.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1FaceRecognitionResult'
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to "frame" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated.
        fdBoundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: 'The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the "amount of skin" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix.'
        tiltAngle:
          format: float
          description: 'Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image''s horizontal plane. Range [-180,180].'
          type: number
        sorrowLikelihood:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Sorrow likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        underExposedLikelihood:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Under-exposed likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        blurredLikelihood:
          description: Blurred likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        angerLikelihood:
          type: string
          description: Anger likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
    GoogleCloudVisionV1p1beta1Paragraph:
      description: Structural unit of text representing a number of words in certain order.
      type: object
      properties:
        confidence:
          description: 'Confidence of the OCR results for the paragraph. Range [0, 1].'
          format: float
          type: number
        words:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Word'
          description: List of all words in this paragraph.
          type: array
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty'
          description: Additional information detected for the paragraph.
        boundingBox:
          description: 'The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
      id: GoogleCloudVisionV1p1beta1Paragraph
    GoogleCloudVisionV1p4beta1GcsDestination:
      properties:
        uri:
          description: 'Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with "filenameprefix". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files.'
          type: string
      type: object
      id: GoogleCloudVisionV1p4beta1GcsDestination
      description: The Google Cloud Storage location where the output will be written to.
    GoogleCloudVisionV1p1beta1ImageAnnotationContext:
      id: GoogleCloudVisionV1p1beta1ImageAnnotationContext
      properties:
        pageNumber:
          format: int32
          description: 'If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image.'
          type: integer
        uri:
          description: The URI of the file used to produce the image.
          type: string
      type: object
      description: 'If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.'
    ObjectAnnotation:
      description: Prediction for what the object in the bounding box is.
      properties:
        score:
          format: float
          type: number
          description: 'Score of the result. Range [0, 1].'
        mid:
          type: string
          description: Object ID that should align with EntityAnnotation mid.
        name:
          type: string
          description: 'Object name, expressed in its `language_code` language.'
        languageCode:
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
      type: object
      id: ObjectAnnotation
    GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage:
      properties:
        confidence:
          format: float
          type: number
          description: 'Confidence of detected language. Range [0, 1].'
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
      type: object
      description: Detected language for a structural component.
      id: GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage
    GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation:
      description: Prediction for what the object in the bounding box is.
      properties:
        languageCode:
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
        name:
          description: 'Object name, expressed in its `language_code` language.'
          type: string
        score:
          description: 'Score of the result. Range [0, 1].'
          format: float
          type: number
      type: object
      id: GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation
    GoogleCloudVisionV1p4beta1AsyncBatchAnnotateFilesResponse:
      id: GoogleCloudVisionV1p4beta1AsyncBatchAnnotateFilesResponse
      properties:
        responses:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse'
          type: array
          description: 'The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest.'
      description: Response to an async batch file annotation request.
      type: object
    GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation:
      type: object
      properties:
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
          description: Image region to which this object belongs. This must be populated.
        score:
          description: 'Score of the result. Range [0, 1].'
          format: float
          type: number
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
        name:
          type: string
          description: 'Object name, expressed in its `language_code` language.'
      id: GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation
      description: Set of detected objects with bounding boxes.
    GoogleCloudVisionV1p4beta1ImportProductSetsResponse:
      id: GoogleCloudVisionV1p4beta1ImportProductSetsResponse
      description: Response message for the `ImportProductSets` method. This message is returned by the google.longrunning.Operations.GetOperation method in the returned google.longrunning.Operation.response field.
      type: object
      properties:
        referenceImages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ReferenceImage'
          description: The list of reference_images that are imported successfully.
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/Status'
          description: 'The rpc status for each ImportProductSet request, including both successes and errors. The number of statuses here matches the number of lines in the csv file, and statuses[i] stores the success or failure status of processing the i-th line of the csv, starting from line 0.'
    ReferenceImage:
      properties:
        name:
          description: 'The resource name of the reference image. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`. This field is ignored when creating a reference image.'
          type: string
        uri:
          type: string
          description: 'Required. The Google Cloud Storage URI of the reference image. The URI must start with `gs://`.'
        boundingPolys:
          description: 'Optional. Bounding polygons around the areas of interest in the reference image. If this field is empty, the system will try to detect regions of interest. At most 10 bounding polygons will be used. The provided shape is converted into a non-rotated rectangle. Once converted, the small edge of the rectangle must be greater than or equal to 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5 is not).'
          type: array
          items:
            $ref: '#/components/schemas/BoundingPoly'
      id: ReferenceImage
      type: object
      description: 'A `ReferenceImage` represents a product image and its associated metadata, such as bounding boxes.'
    Vertex:
      id: Vertex
      type: object
      description: 'A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.'
      properties:
        'y':
          format: int32
          type: integer
          description: Y coordinate.
        x:
          format: int32
          description: X coordinate.
          type: integer
    PurgeProductsRequest:
      type: object
      id: PurgeProductsRequest
      description: Request message for the `PurgeProducts` method.
      properties:
        deleteOrphanProducts:
          description: 'If delete_orphan_products is true, all Products that are not in any ProductSet will be deleted.'
          type: boolean
        productSetPurgeConfig:
          description: Specify which ProductSet contains the Products to be deleted.
          $ref: '#/components/schemas/ProductSetPurgeConfig'
        force:
          type: boolean
          description: The default value is false. Override this value to true to actually perform the purge.
    WebLabel:
      type: object
      properties:
        languageCode:
          description: 'The BCP-47 language code for `label`, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
        label:
          description: Label for extra metadata.
          type: string
      description: Label to provide extra metadata for the web detection.
      id: WebLabel
    Landmark:
      description: 'A face-specific landmark (for example, a face feature).'
      type: object
      id: Landmark
      properties:
        type:
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - 'Nose, bottom right.'
            - 'Nose, bottom left.'
            - 'Nose, bottom center.'
            - 'Left eye, top boundary.'
            - 'Left eye, right corner.'
            - 'Left eye, bottom boundary.'
            - 'Left eye, left corner.'
            - 'Right eye, top boundary.'
            - 'Right eye, right corner.'
            - 'Right eye, bottom boundary.'
            - 'Right eye, left corner.'
            - 'Left eyebrow, upper midpoint.'
            - 'Right eyebrow, upper midpoint.'
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
          description: Face landmark type.
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
          type: string
        position:
          $ref: '#/components/schemas/Position'
          description: Face landmark position.
    GoogleCloudVisionV1p3beta1BatchOperationMetadata:
      description: 'Metadata for the batch operations such as the current state. This is included in the `metadata` field of the `Operation` returned by the `GetOperation` call of the `google::longrunning::Operations` service.'
      type: object
      properties:
        endTime:
          type: string
          format: google-datetime
          description: The time when the batch request is finished and google.longrunning.Operation.done is set to true.
        state:
          description: The current state of the batch operation.
          enum:
            - STATE_UNSPECIFIED
            - PROCESSING
            - SUCCESSFUL
            - FAILED
            - CANCELLED
          type: string
          enumDescriptions:
            - Invalid.
            - Request is actively being processed.
            - The request is done and at least one item has been successfully processed.
            - The request is done and no item has been successfully processed.
            - The request is done after the longrunning.Operations.CancelOperation has been called by the user. Any records that were processed before the cancel command are output as specified in the request.
        submitTime:
          description: The time when the batch request was submitted to the server.
          type: string
          format: google-datetime
      id: GoogleCloudVisionV1p3beta1BatchOperationMetadata
    GoogleCloudVisionV1p3beta1WebDetectionWebLabel:
      type: object
      description: Label to provide extra metadata for the web detection.
      properties:
        label:
          description: Label for extra metadata.
          type: string
        languageCode:
          description: 'The BCP-47 language code for `label`, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
      id: GoogleCloudVisionV1p3beta1WebDetectionWebLabel
    GoogleCloudVisionV1p4beta1Celebrity:
      properties:
        description:
          type: string
          description: The Celebrity's description.
        displayName:
          description: The Celebrity's display name.
          type: string
        name:
          description: 'The resource name of the preloaded Celebrity. Has the format `builtin/{mid}`.'
          type: string
      description: A Celebrity is a group of Faces with an identity.
      id: GoogleCloudVisionV1p4beta1Celebrity
      type: object
    SafeSearchAnnotation:
      description: 'Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).'
      id: SafeSearchAnnotation
      type: object
      properties:
        racy:
          description: 'Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.'
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        spoof:
          description: Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        medical:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Likelihood that this is a medical image.
          type: string
        adult:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: 'Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities.'
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        violence:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Likelihood that this image contains violent content.
    GoogleCloudVisionV1p1beta1WebDetectionWebLabel:
      type: object
      id: GoogleCloudVisionV1p1beta1WebDetectionWebLabel
      properties:
        label:
          description: Label for extra metadata.
          type: string
        languageCode:
          type: string
          description: 'The BCP-47 language code for `label`, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
      description: Label to provide extra metadata for the web detection.
    GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak:
      description: Detected start or end of a structural component.
      id: GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak
      properties:
        isPrefix:
          type: boolean
          description: True if break prepends the element.
        type:
          type: string
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - 'End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.'
            - Line break that ends a paragraph.
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
          description: Detected break type.
      type: object
    GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesResponse:
      properties:
        responses:
          description: 'The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse'
      type: object
      description: Response to an async batch file annotation request.
      id: GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesResponse
    ImageAnnotationContext:
      id: ImageAnnotationContext
      description: 'If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.'
      properties:
        pageNumber:
          type: integer
          description: 'If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image.'
          format: int32
        uri:
          type: string
          description: The URI of the file used to produce the image.
      type: object
    GoogleCloudVisionV1p4beta1ReferenceImage:
      properties:
        uri:
          description: 'Required. The Google Cloud Storage URI of the reference image. The URI must start with `gs://`.'
          type: string
        name:
          description: 'The resource name of the reference image. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`. This field is ignored when creating a reference image.'
          type: string
        boundingPolys:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: 'Optional. Bounding polygons around the areas of interest in the reference image. If this field is empty, the system will try to detect regions of interest. At most 10 bounding polygons will be used. The provided shape is converted into a non-rotated rectangle. Once converted, the small edge of the rectangle must be greater than or equal to 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5 is not).'
          type: array
      id: GoogleCloudVisionV1p4beta1ReferenceImage
      type: object
      description: 'A `ReferenceImage` represents a product image and its associated metadata, such as bounding boxes.'
    KeyValue:
      type: object
      id: KeyValue
      description: A product label represented as a key-value pair.
      properties:
        value:
          description: The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
          type: string
        key:
          description: The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
          type: string
    GoogleCloudVisionV1p3beta1DominantColorsAnnotation:
      id: GoogleCloudVisionV1p3beta1DominantColorsAnnotation
      type: object
      properties:
        colors:
          type: array
          description: RGB color values with their score and pixel fraction.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ColorInfo'
      description: Set of dominant colors and their corresponding scores.
    GoogleCloudVisionV1p1beta1GcsDestination:
      description: The Google Cloud Storage location where the output will be written to.
      properties:
        uri:
          type: string
          description: 'Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with "filenameprefix". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files.'
      type: object
      id: GoogleCloudVisionV1p1beta1GcsDestination
    GoogleCloudVisionV1p3beta1LocationInfo:
      type: object
      id: GoogleCloudVisionV1p3beta1LocationInfo
      properties:
        latLng:
          description: lat/long location coordinates.
          $ref: '#/components/schemas/LatLng'
      description: Detected entity location information.
    DetectedBreak:
      id: DetectedBreak
      description: Detected start or end of a structural component.
      properties:
        type:
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - 'End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.'
            - Line break that ends a paragraph.
          type: string
          description: Detected break type.
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
        isPrefix:
          description: True if break prepends the element.
          type: boolean
      type: object
    GoogleCloudVisionV1p4beta1Page:
      description: Detected page from OCR.
      id: GoogleCloudVisionV1p4beta1Page
      type: object
      properties:
        width:
          description: Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
          format: int32
          type: integer
        height:
          description: Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
          type: integer
          format: int32
        confidence:
          description: 'Confidence of the OCR results on the page. Range [0, 1].'
          type: number
          format: float
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty'
          description: Additional information detected on the page.
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Block'
          description: 'List of blocks of text, images etc on this page.'
    GoogleCloudVisionV1p2beta1AnnotateImageResponse:
      id: GoogleCloudVisionV1p2beta1AnnotateImageResponse
      description: Response to an image annotation request.
      properties:
        logoAnnotations:
          description: 'If present, logo detection has completed successfully.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1EntityAnnotation'
        imagePropertiesAnnotation:
          description: 'If present, image properties were extracted successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ImageProperties'
        textAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1EntityAnnotation'
          description: 'If present, text (OCR) detection has completed successfully.'
          type: array
        productSearchResults:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResults'
          description: 'If present, product search has completed successfully.'
        faceAnnotations:
          description: 'If present, face detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1FaceAnnotation'
          type: array
        safeSearchAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1SafeSearchAnnotation'
          description: 'If present, safe-search annotation has completed successfully.'
        error:
          description: 'If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set.'
          $ref: '#/components/schemas/Status'
        context:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ImageAnnotationContext'
          description: 'If present, contextual information is needed to understand where this image comes from.'
        cropHintsAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1CropHintsAnnotation'
          description: 'If present, crop hints have completed successfully.'
        landmarkAnnotations:
          description: 'If present, landmark detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1EntityAnnotation'
          type: array
        fullTextAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotation'
          description: 'If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text.'
        localizedObjectAnnotations:
          type: array
          description: 'If present, localized object detection has completed successfully. This will be sorted descending by confidence score.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation'
        webDetection:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetection'
          description: 'If present, web detection has completed successfully.'
        labelAnnotations:
          description: 'If present, label detection has completed successfully.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1EntityAnnotation'
      type: object
    GoogleCloudVisionV1p2beta1WebDetectionWebImage:
      type: object
      id: GoogleCloudVisionV1p2beta1WebDetectionWebImage
      description: Metadata for online images.
      properties:
        score:
          type: number
          description: (Deprecated) Overall relevancy score for the image.
          format: float
        url:
          description: The result image URL.
          type: string
    GoogleCloudVisionV1p1beta1ProductSearchResultsResult:
      id: GoogleCloudVisionV1p1beta1ProductSearchResultsResult
      description: Information about a product.
      type: object
      properties:
        product:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Product'
          description: The Product.
        image:
          type: string
          description: The resource name of the image from the product that is the closest match to the query.
        score:
          type: number
          format: float
          description: 'A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).'
    GoogleCloudVisionV1p3beta1ProductSearchResultsResult:
      properties:
        image:
          description: The resource name of the image from the product that is the closest match to the query.
          type: string
        product:
          description: The Product.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Product'
        score:
          format: float
          description: 'A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).'
          type: number
      id: GoogleCloudVisionV1p3beta1ProductSearchResultsResult
      description: Information about a product.
      type: object
    GoogleCloudVisionV1p4beta1WebDetectionWebLabel:
      type: object
      properties:
        label:
          type: string
          description: Label for extra metadata.
        languageCode:
          description: 'The BCP-47 language code for `label`, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
      description: Label to provide extra metadata for the web detection.
      id: GoogleCloudVisionV1p4beta1WebDetectionWebLabel
    GoogleCloudVisionV1p4beta1OperationMetadata:
      description: Contains metadata for the BatchAnnotateImages operation.
      properties:
        createTime:
          description: The time when the batch request was received.
          format: google-datetime
          type: string
        state:
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
          description: Current state of the batch operation.
          type: string
        updateTime:
          type: string
          format: google-datetime
          description: The time when the operation result was last updated.
      type: object
      id: GoogleCloudVisionV1p4beta1OperationMetadata
    GoogleCloudVisionV1p2beta1WebDetectionWebLabel:
      properties:
        label:
          description: Label for extra metadata.
          type: string
        languageCode:
          description: 'The BCP-47 language code for `label`, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
      id: GoogleCloudVisionV1p2beta1WebDetectionWebLabel
      type: object
      description: Label to provide extra metadata for the web detection.
    GoogleCloudVisionV1p2beta1TextAnnotationTextProperty:
      description: Additional information detected on the structural component.
      type: object
      properties:
        detectedLanguages:
          type: array
          description: A list of detected languages together with confidence.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage'
        detectedBreak:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak'
          description: Detected start or end of a text segment.
      id: GoogleCloudVisionV1p2beta1TextAnnotationTextProperty
    GoogleCloudVisionV1p4beta1Position:
      description: 'A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image.'
      type: object
      id: GoogleCloudVisionV1p4beta1Position
      properties:
        x:
          description: X coordinate.
          format: float
          type: number
        'y':
          format: float
          type: number
          description: Y coordinate.
        z:
          description: Z coordinate (or depth).
          format: float
          type: number
    ProductSetPurgeConfig:
      id: ProductSetPurgeConfig
      description: Config to control which ProductSet contains the Products to be deleted.
      type: object
      properties:
        productSetId:
          description: 'The ProductSet that contains the Products to delete. If a Product is a member of product_set_id in addition to other ProductSets, the Product will still be deleted.'
          type: string
    GoogleCloudVisionV1p1beta1DominantColorsAnnotation:
      properties:
        colors:
          description: RGB color values with their score and pixel fraction.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ColorInfo'
      description: Set of dominant colors and their corresponding scores.
      id: GoogleCloudVisionV1p1beta1DominantColorsAnnotation
      type: object
    GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult:
      description: Information about the products similar to a single product in a query image.
      id: GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult
      properties:
        results:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResultsResult'
          type: array
          description: 'List of results, one for each product match.'
        objectAnnotations:
          description: List of generic predictions for the object in the bounding box.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation'
          type: array
        boundingPoly:
          description: The bounding polygon around the product detected in the query image.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
      type: object
    GoogleCloudVisionV1p3beta1Block:
      type: object
      id: GoogleCloudVisionV1p3beta1Block
      properties:
        confidence:
          description: 'Confidence of the OCR results on the block. Range [0, 1].'
          format: float
          type: number
        blockType:
          description: 'Detected block type (text, image etc) for this block.'
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
          type: string
        boundingBox:
          description: 'The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
        property:
          description: Additional information detected for the block.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty'
        paragraphs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Paragraph'
          description: List of paragraphs in this block (if this blocks is of type text).
      description: Logical element on the page.
    GoogleCloudVisionV1p3beta1ImportProductSetsResponse:
      description: Response message for the `ImportProductSets` method. This message is returned by the google.longrunning.Operations.GetOperation method in the returned google.longrunning.Operation.response field.
      properties:
        statuses:
          items:
            $ref: '#/components/schemas/Status'
          description: 'The rpc status for each ImportProductSet request, including both successes and errors. The number of statuses here matches the number of lines in the csv file, and statuses[i] stores the success or failure status of processing the i-th line of the csv, starting from line 0.'
          type: array
        referenceImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ReferenceImage'
          description: The list of reference_images that are imported successfully.
          type: array
      type: object
      id: GoogleCloudVisionV1p3beta1ImportProductSetsResponse
    GoogleCloudVisionV1p1beta1AnnotateFileResponse:
      description: 'Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.'
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Status'
          description: 'If set, represents the error message for the failed request. The `responses` field will not be set in this case.'
        inputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1InputConfig'
          description: Information about the file for which this response is generated.
        totalPages:
          type: integer
          description: This field gives the total number of pages in the file.
          format: int32
        responses:
          description: Individual responses to images found within the file. This field will be empty if the `error` field is set.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1AnnotateImageResponse'
      id: GoogleCloudVisionV1p1beta1AnnotateFileResponse
    ImageProperties:
      description: 'Stores image properties, such as dominant colors.'
      id: ImageProperties
      properties:
        dominantColors:
          description: 'If present, dominant colors completed successfully.'
          $ref: '#/components/schemas/DominantColorsAnnotation'
      type: object
    FaceAnnotation:
      type: object
      description: A face annotation object contains the results of face detection.
      id: FaceAnnotation
      properties:
        landmarkingConfidence:
          type: number
          description: 'Face landmarking confidence. Range [0, 1].'
          format: float
        joyLikelihood:
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Joy likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        panAngle:
          description: 'Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180].'
          type: number
          format: float
        boundingPoly:
          $ref: '#/components/schemas/BoundingPoly'
          description: The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to "frame" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated.
        headwearLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Headwear likelihood.
          type: string
        rollAngle:
          type: number
          description: 'Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].'
          format: float
        blurredLikelihood:
          description: Blurred likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        surpriseLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: Surprise likelihood.
        tiltAngle:
          type: number
          description: 'Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image''s horizontal plane. Range [-180,180].'
          format: float
        sorrowLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Sorrow likelihood.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        angerLikelihood:
          type: string
          description: Anger likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        detectionConfidence:
          description: 'Detection confidence. Range [0, 1].'
          type: number
          format: float
        underExposedLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Under-exposed likelihood.
          type: string
        landmarks:
          type: array
          items:
            $ref: '#/components/schemas/Landmark'
          description: Detected face landmarks.
        fdBoundingPoly:
          description: 'The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the "amount of skin" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix.'
          $ref: '#/components/schemas/BoundingPoly'
    GoogleCloudVisionV1p1beta1ProductKeyValue:
      properties:
        key:
          type: string
          description: The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
        value:
          type: string
          description: The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
      description: A product label represented as a key-value pair.
      type: object
      id: GoogleCloudVisionV1p1beta1ProductKeyValue
    GoogleCloudVisionV1p4beta1ProductSearchResultsResult:
      properties:
        product:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Product'
          description: The Product.
        score:
          type: number
          format: float
          description: 'A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).'
        image:
          description: The resource name of the image from the product that is the closest match to the query.
          type: string
      description: Information about a product.
      type: object
      id: GoogleCloudVisionV1p4beta1ProductSearchResultsResult
    GoogleCloudVisionV1p3beta1CropHintsAnnotation:
      description: Set of crop hints that are used to generate new crops when serving images.
      type: object
      properties:
        cropHints:
          type: array
          description: Crop hint results.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1CropHint'
      id: GoogleCloudVisionV1p3beta1CropHintsAnnotation
    GoogleCloudVisionV1p1beta1ProductSearchResults:
      description: Results for a product search request.
      id: GoogleCloudVisionV1p1beta1ProductSearchResults
      type: object
      properties:
        indexTime:
          type: string
          format: google-datetime
          description: Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results.
        results:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResultsResult'
          description: 'List of results, one for each product match.'
          type: array
        productGroupedResults:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult'
          type: array
          description: 'List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results.'
    AnnotateFileResponse:
      description: 'Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.'
      properties:
        inputConfig:
          $ref: '#/components/schemas/InputConfig'
          description: Information about the file for which this response is generated.
        responses:
          items:
            $ref: '#/components/schemas/AnnotateImageResponse'
          description: Individual responses to images found within the file. This field will be empty if the `error` field is set.
          type: array
        error:
          description: 'If set, represents the error message for the failed request. The `responses` field will not be set in this case.'
          $ref: '#/components/schemas/Status'
        totalPages:
          description: This field gives the total number of pages in the file.
          format: int32
          type: integer
      type: object
      id: AnnotateFileResponse
    GoogleCloudVisionV1p2beta1OperationMetadata:
      description: Contains metadata for the BatchAnnotateImages operation.
      type: object
      id: GoogleCloudVisionV1p2beta1OperationMetadata
      properties:
        updateTime:
          type: string
          format: google-datetime
          description: The time when the operation result was last updated.
        createTime:
          format: google-datetime
          type: string
          description: The time when the batch request was received.
        state:
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
          type: string
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
          description: Current state of the batch operation.
    GoogleCloudVisionV1p4beta1WebDetection:
      type: object
      description: Relevant information for the image from the Internet.
      properties:
        partialMatchingImages:
          type: array
          description: Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage'
        pagesWithMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebPage'
          type: array
          description: Web pages containing the matching images from the Internet.
        webEntities:
          description: Deduced entities from similar images on the Internet.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebEntity'
          type: array
        bestGuessLabels:
          type: array
          description: The service's best guess as to the topic of the request image. Inferred from similar images on the open web.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebLabel'
        visuallySimilarImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage'
          description: The visually similar image results.
          type: array
        fullMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage'
          type: array
          description: Fully matching images from the Internet. Can include resized copies of the query image.
      id: GoogleCloudVisionV1p4beta1WebDetection
    GoogleCloudVisionV1p2beta1GcsDestination:
      properties:
        uri:
          description: 'Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with "filenameprefix". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files.'
          type: string
      id: GoogleCloudVisionV1p2beta1GcsDestination
      type: object
      description: The Google Cloud Storage location where the output will be written to.
    GoogleCloudVisionV1p1beta1GcsSource:
      type: object
      description: The Google Cloud Storage location where the input will be read from.
      id: GoogleCloudVisionV1p1beta1GcsSource
      properties:
        uri:
          description: Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported.
          type: string
    GoogleCloudVisionV1p3beta1Symbol:
      properties:
        text:
          type: string
          description: The actual UTF-8 representation of the symbol.
        property:
          description: Additional information detected for the symbol.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty'
        boundingBox:
          description: 'The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
        confidence:
          format: float
          type: number
          description: 'Confidence of the OCR results for the symbol. Range [0, 1].'
      type: object
      description: A single symbol representation.
      id: GoogleCloudVisionV1p3beta1Symbol
    GoogleCloudVisionV1p2beta1CropHintsAnnotation:
      id: GoogleCloudVisionV1p2beta1CropHintsAnnotation
      description: Set of crop hints that are used to generate new crops when serving images.
      properties:
        cropHints:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1CropHint'
          type: array
          description: Crop hint results.
      type: object
    CropHintsParams:
      type: object
      description: Parameters for crop hints annotation request.
      id: CropHintsParams
      properties:
        aspectRatios:
          type: array
          items:
            format: float
            type: number
          description: 'Aspect ratios in floats, representing the ratio of the width to the height of the image. For example, if the desired aspect ratio is 4/3, the corresponding float value should be 1.33333. If not specified, the best possible crop is returned. The number of provided aspect ratios is limited to a maximum of 16; any aspect ratios provided after the 16th are ignored.'
    GoogleCloudVisionV1p3beta1TextAnnotationTextProperty:
      properties:
        detectedLanguages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage'
          description: A list of detected languages together with confidence.
          type: array
        detectedBreak:
          description: Detected start or end of a text segment.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak'
      description: Additional information detected on the structural component.
      type: object
      id: GoogleCloudVisionV1p3beta1TextAnnotationTextProperty
    GoogleCloudVisionV1p3beta1Position:
      type: object
      id: GoogleCloudVisionV1p3beta1Position
      properties:
        z:
          format: float
          type: number
          description: Z coordinate (or depth).
        x:
          type: number
          description: X coordinate.
          format: float
        'y':
          type: number
          format: float
          description: Y coordinate.
      description: 'A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image.'
    GoogleCloudVisionV1p3beta1SafeSearchAnnotation:
      type: object
      id: GoogleCloudVisionV1p3beta1SafeSearchAnnotation
      properties:
        racy:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: 'Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.'
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        adult:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: 'Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities.'
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        violence:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Likelihood that this image contains violent content.
          type: string
        medical:
          description: Likelihood that this is a medical image.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        spoof:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive.
          type: string
      description: 'Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).'
    Symbol:
      description: A single symbol representation.
      id: Symbol
      properties:
        confidence:
          description: 'Confidence of the OCR results for the symbol. Range [0, 1].'
          type: number
          format: float
        property:
          description: Additional information detected for the symbol.
          $ref: '#/components/schemas/TextProperty'
        text:
          description: The actual UTF-8 representation of the symbol.
          type: string
        boundingBox:
          $ref: '#/components/schemas/BoundingPoly'
          description: 'The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
      type: object
    GoogleCloudVisionV1p3beta1AsyncBatchAnnotateFilesResponse:
      description: Response to an async batch file annotation request.
      type: object
      id: GoogleCloudVisionV1p3beta1AsyncBatchAnnotateFilesResponse
      properties:
        responses:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse'
          description: 'The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest.'
          type: array
    GoogleCloudVisionV1p4beta1OutputConfig:
      properties:
        batchSize:
          format: int32
          description: 'The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations.'
          type: integer
        gcsDestination:
          description: The Google Cloud Storage location to write the output(s) to.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1GcsDestination'
      description: The desired output location and metadata.
      id: GoogleCloudVisionV1p4beta1OutputConfig
      type: object
    GoogleCloudVisionV1p4beta1Symbol:
      description: A single symbol representation.
      properties:
        boundingBox:
          description: 'The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
        text:
          type: string
          description: The actual UTF-8 representation of the symbol.
        confidence:
          description: 'Confidence of the OCR results for the symbol. Range [0, 1].'
          type: number
          format: float
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty'
          description: Additional information detected for the symbol.
      id: GoogleCloudVisionV1p4beta1Symbol
      type: object
    WebPage:
      id: WebPage
      type: object
      description: Metadata for web pages.
      properties:
        score:
          type: number
          format: float
          description: (Deprecated) Overall relevancy score for the web page.
        pageTitle:
          description: 'Title for the web page, may contain HTML markups.'
          type: string
        partialMatchingImages:
          items:
            $ref: '#/components/schemas/WebImage'
          description: Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          type: array
        fullMatchingImages:
          type: array
          description: Fully matching images on the page. Can include resized copies of the query image.
          items:
            $ref: '#/components/schemas/WebImage'
        url:
          description: The result web page URL.
          type: string
    GoogleCloudVisionV1p2beta1OutputConfig:
      description: The desired output location and metadata.
      type: object
      properties:
        batchSize:
          type: integer
          format: int32
          description: 'The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations.'
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1GcsDestination'
          description: The Google Cloud Storage location to write the output(s) to.
      id: GoogleCloudVisionV1p2beta1OutputConfig
    GoogleCloudVisionV1p2beta1InputConfig:
      description: The desired input location and metadata.
      id: GoogleCloudVisionV1p2beta1InputConfig
      properties:
        content:
          format: byte
          description: 'File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests.'
          type: string
        mimeType:
          type: string
          description: 'The type of the file. Currently only "application/pdf", "image/tiff" and "image/gif" are supported. Wildcards are not supported.'
        gcsSource:
          description: The Google Cloud Storage location to read the input from.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1GcsSource'
      type: object
    GoogleCloudVisionV1p1beta1SafeSearchAnnotation:
      type: object
      id: GoogleCloudVisionV1p1beta1SafeSearchAnnotation
      properties:
        racy:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: 'Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.'
        medical:
          type: string
          description: Likelihood that this is a medical image.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        spoof:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive.
        adult:
          description: 'Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities.'
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        violence:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Likelihood that this image contains violent content.
          type: string
      description: 'Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).'
    BatchAnnotateImagesRequest:
      type: object
      properties:
        requests:
          items:
            $ref: '#/components/schemas/AnnotateImageRequest'
          type: array
          description: Required. Individual image annotation requests for this batch.
        parent:
          type: string
          description: 'Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.'
      description: Multiple image annotation requests are batched into a single service call.
      id: BatchAnnotateImagesRequest
    GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation:
      type: object
      properties:
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        name:
          description: 'Object name, expressed in its `language_code` language.'
          type: string
        score:
          type: number
          description: 'Score of the result. Range [0, 1].'
          format: float
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: Image region to which this object belongs. This must be populated.
      id: GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation
      description: Set of detected objects with bounding boxes.
    GoogleCloudVisionV1p2beta1GcsSource:
      id: GoogleCloudVisionV1p2beta1GcsSource
      type: object
      description: The Google Cloud Storage location where the input will be read from.
      properties:
        uri:
          description: Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported.
          type: string
    GoogleCloudVisionV1p2beta1ProductSearchResultsResult:
      properties:
        product:
          description: The Product.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Product'
        image:
          type: string
          description: The resource name of the image from the product that is the closest match to the query.
        score:
          format: float
          description: 'A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).'
          type: number
      type: object
      id: GoogleCloudVisionV1p2beta1ProductSearchResultsResult
      description: Information about a product.
    GoogleCloudVisionV1p4beta1ColorInfo:
      description: 'Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.'
      properties:
        color:
          $ref: '#/components/schemas/Color'
          description: RGB components of the color.
        pixelFraction:
          type: number
          description: 'The fraction of pixels the color occupies in the image. Value in range [0, 1].'
          format: float
        score:
          description: 'Image-specific score for this color. Value in range [0, 1].'
          type: number
          format: float
      type: object
      id: GoogleCloudVisionV1p4beta1ColorInfo
    GoogleCloudVisionV1p3beta1Page:
      type: object
      properties:
        width:
          format: int32
          type: integer
          description: Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty'
          description: Additional information detected on the page.
        confidence:
          type: number
          description: 'Confidence of the OCR results on the page. Range [0, 1].'
          format: float
        blocks:
          description: 'List of blocks of text, images etc on this page.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Block'
          type: array
        height:
          type: integer
          format: int32
          description: Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
      id: GoogleCloudVisionV1p3beta1Page
      description: Detected page from OCR.
    GoogleCloudVisionV1p2beta1LocationInfo:
      id: GoogleCloudVisionV1p2beta1LocationInfo
      type: object
      properties:
        latLng:
          $ref: '#/components/schemas/LatLng'
          description: lat/long location coordinates.
      description: Detected entity location information.
    TextAnnotation:
      properties:
        text:
          description: UTF-8 text detected on the pages.
          type: string
        pages:
          type: array
          description: List of pages detected by OCR.
          items:
            $ref: '#/components/schemas/Page'
      description: 'TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.'
      id: TextAnnotation
      type: object
    GoogleCloudVisionV1p4beta1Word:
      id: GoogleCloudVisionV1p4beta1Word
      description: A word representation.
      properties:
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: 'The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        confidence:
          format: float
          type: number
          description: 'Confidence of the OCR results for the word. Range [0, 1].'
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty'
          description: Additional information detected for the word.
        symbols:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Symbol'
          description: List of symbols in the word. The order of the symbols follows the natural reading order.
      type: object
    DetectedLanguage:
      type: object
      description: Detected language for a structural component.
      properties:
        confidence:
          format: float
          type: number
          description: 'Confidence of detected language. Range [0, 1].'
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
      id: DetectedLanguage
    WebImage:
      description: Metadata for online images.
      properties:
        score:
          format: float
          type: number
          description: (Deprecated) Overall relevancy score for the image.
        url:
          description: The result image URL.
          type: string
      type: object
      id: WebImage
    GoogleCloudVisionV1p1beta1WebDetectionWebEntity:
      description: Entity deduced from similar images on the Internet.
      type: object
      properties:
        description:
          type: string
          description: 'Canonical description of the entity, in English.'
        entityId:
          type: string
          description: Opaque entity ID.
        score:
          format: float
          type: number
          description: Overall relevancy score for the entity. Not normalized and not comparable across different image queries.
      id: GoogleCloudVisionV1p1beta1WebDetectionWebEntity
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    NormalizedVertex:
      properties:
        'y':
          description: Y coordinate.
          type: number
          format: float
        x:
          format: float
          type: number
          description: X coordinate.
      description: 'A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.'
      id: NormalizedVertex
      type: object
    GoogleCloudVisionV1p1beta1CropHintsAnnotation:
      properties:
        cropHints:
          description: Crop hint results.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1CropHint'
      id: GoogleCloudVisionV1p1beta1CropHintsAnnotation
      description: Set of crop hints that are used to generate new crops when serving images.
      type: object
    GoogleCloudVisionV1p1beta1Symbol:
      properties:
        text:
          description: The actual UTF-8 representation of the symbol.
          type: string
        property:
          description: Additional information detected for the symbol.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty'
        confidence:
          description: 'Confidence of the OCR results for the symbol. Range [0, 1].'
          format: float
          type: number
        boundingBox:
          description: 'The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
      id: GoogleCloudVisionV1p1beta1Symbol
      description: A single symbol representation.
      type: object
    BatchAnnotateImagesResponse:
      id: BatchAnnotateImagesResponse
      description: Response to a batch image annotation request.
      type: object
      properties:
        responses:
          description: Individual responses to image annotation requests within the batch.
          type: array
          items:
            $ref: '#/components/schemas/AnnotateImageResponse'
    GoogleCloudVisionV1p1beta1WebDetectionWebImage:
      type: object
      id: GoogleCloudVisionV1p1beta1WebDetectionWebImage
      properties:
        url:
          description: The result image URL.
          type: string
        score:
          format: float
          description: (Deprecated) Overall relevancy score for the image.
          type: number
      description: Metadata for online images.
    GoogleCloudVisionV1p2beta1FaceAnnotationLandmark:
      type: object
      properties:
        type:
          description: Face landmark type.
          type: string
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - 'Nose, bottom right.'
            - 'Nose, bottom left.'
            - 'Nose, bottom center.'
            - 'Left eye, top boundary.'
            - 'Left eye, right corner.'
            - 'Left eye, bottom boundary.'
            - 'Left eye, left corner.'
            - 'Right eye, top boundary.'
            - 'Right eye, right corner.'
            - 'Right eye, bottom boundary.'
            - 'Right eye, left corner.'
            - 'Left eyebrow, upper midpoint.'
            - 'Right eyebrow, upper midpoint.'
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
        position:
          description: Face landmark position.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Position'
      id: GoogleCloudVisionV1p2beta1FaceAnnotationLandmark
      description: 'A face-specific landmark (for example, a face feature).'
    GoogleCloudVisionV1p2beta1Word:
      id: GoogleCloudVisionV1p2beta1Word
      type: object
      description: A word representation.
      properties:
        boundingBox:
          description: 'The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
        confidence:
          type: number
          description: 'Confidence of the OCR results for the word. Range [0, 1].'
          format: float
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty'
          description: Additional information detected for the word.
        symbols:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Symbol'
          type: array
          description: List of symbols in the word. The order of the symbols follows the natural reading order.
    GoogleCloudVisionV1p4beta1NormalizedVertex:
      description: 'A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.'
      properties:
        'y':
          type: number
          description: Y coordinate.
          format: float
        x:
          type: number
          description: X coordinate.
          format: float
      id: GoogleCloudVisionV1p4beta1NormalizedVertex
      type: object
    GoogleCloudVisionV1p1beta1TextAnnotation:
      id: GoogleCloudVisionV1p1beta1TextAnnotation
      properties:
        text:
          description: UTF-8 text detected on the pages.
          type: string
        pages:
          description: List of pages detected by OCR.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Page'
          type: array
      description: 'TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.'
      type: object
    Position:
      type: object
      id: Position
      properties:
        z:
          description: Z coordinate (or depth).
          format: float
          type: number
        'y':
          description: Y coordinate.
          format: float
          type: number
        x:
          format: float
          description: X coordinate.
          type: number
      description: 'A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image.'
    GoogleCloudVisionV1p1beta1OperationMetadata:
      id: GoogleCloudVisionV1p1beta1OperationMetadata
      description: Contains metadata for the BatchAnnotateImages operation.
      type: object
      properties:
        state:
          type: string
          description: Current state of the batch operation.
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
        updateTime:
          format: google-datetime
          description: The time when the operation result was last updated.
          type: string
        createTime:
          format: google-datetime
          description: The time when the batch request was received.
          type: string
    GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation:
      id: GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation
      description: Prediction for what the object in the bounding box is.
      properties:
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        mid:
          type: string
          description: Object ID that should align with EntityAnnotation mid.
        name:
          description: 'Object name, expressed in its `language_code` language.'
          type: string
        score:
          description: 'Score of the result. Range [0, 1].'
          type: number
          format: float
      type: object
    GoogleCloudVisionV1p3beta1EntityAnnotation:
      description: Set of detected entity features.
      properties:
        properties:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Property'
          description: 'Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.'
          type: array
        topicality:
          description: 'The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of "tower" is likely higher to an image containing the detected "Eiffel Tower" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].'
          format: float
          type: number
        locations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1LocationInfo'
          description: 'The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.'
        score:
          format: float
          type: number
          description: 'Overall score of the result. Range [0, 1].'
        boundingPoly:
          description: Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
        description:
          description: 'Entity textual description, expressed in its `locale` language.'
          type: string
        mid:
          description: 'Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).'
          type: string
        locale:
          description: The language code for the locale in which the entity textual `description` is expressed.
          type: string
        confidence:
          format: float
          type: number
          description: '**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the "Eiffel Tower" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].'
          deprecated: true
      id: GoogleCloudVisionV1p3beta1EntityAnnotation
      type: object
    GoogleCloudVisionV1p3beta1OutputConfig:
      id: GoogleCloudVisionV1p3beta1OutputConfig
      properties:
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1GcsDestination'
          description: The Google Cloud Storage location to write the output(s) to.
        batchSize:
          format: int32
          type: integer
          description: 'The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations.'
      description: The desired output location and metadata.
      type: object
    GoogleCloudVisionV1p2beta1Block:
      id: GoogleCloudVisionV1p2beta1Block
      properties:
        confidence:
          description: 'Confidence of the OCR results on the block. Range [0, 1].'
          format: float
          type: number
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
          description: 'The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        blockType:
          description: 'Detected block type (text, image etc) for this block.'
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
          type: string
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
        property:
          description: Additional information detected for the block.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty'
        paragraphs:
          type: array
          description: List of paragraphs in this block (if this blocks is of type text).
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Paragraph'
      type: object
      description: Logical element on the page.
    GoogleCloudVisionV1p1beta1FaceAnnotation:
      type: object
      description: A face annotation object contains the results of face detection.
      id: GoogleCloudVisionV1p1beta1FaceAnnotation
      properties:
        rollAngle:
          format: float
          description: 'Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].'
          type: number
        underExposedLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          description: Under-exposed likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        surpriseLikelihood:
          description: Surprise likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        landmarks:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1FaceAnnotationLandmark'
          description: Detected face landmarks.
        joyLikelihood:
          type: string
          description: Joy likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        sorrowLikelihood:
          type: string
          description: Sorrow likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        fdBoundingPoly:
          description: 'The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the "amount of skin" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
        blurredLikelihood:
          description: Blurred likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        tiltAngle:
          format: float
          description: 'Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image''s horizontal plane. Range [-180,180].'
          type: number
        angerLikelihood:
          description: Anger likelihood.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        landmarkingConfidence:
          format: float
          type: number
          description: 'Face landmarking confidence. Range [0, 1].'
        panAngle:
          type: number
          description: 'Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180].'
          format: float
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
          description: The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to "frame" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated.
        headwearLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Headwear likelihood.
        detectionConfidence:
          type: number
          format: float
          description: 'Detection confidence. Range [0, 1].'
    GoogleCloudVisionV1p4beta1BatchOperationMetadata:
      properties:
        submitTime:
          format: google-datetime
          type: string
          description: The time when the batch request was submitted to the server.
        state:
          enumDescriptions:
            - Invalid.
            - Request is actively being processed.
            - The request is done and at least one item has been successfully processed.
            - The request is done and no item has been successfully processed.
            - The request is done after the longrunning.Operations.CancelOperation has been called by the user. Any records that were processed before the cancel command are output as specified in the request.
          description: The current state of the batch operation.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - PROCESSING
            - SUCCESSFUL
            - FAILED
            - CANCELLED
        endTime:
          description: The time when the batch request is finished and google.longrunning.Operation.done is set to true.
          type: string
          format: google-datetime
      id: GoogleCloudVisionV1p4beta1BatchOperationMetadata
      type: object
      description: 'Metadata for the batch operations such as the current state. This is included in the `metadata` field of the `Operation` returned by the `GetOperation` call of the `google::longrunning::Operations` service.'
    GoogleCloudVisionV1p4beta1EntityAnnotation:
      description: Set of detected entity features.
      type: object
      id: GoogleCloudVisionV1p4beta1EntityAnnotation
      properties:
        mid:
          description: 'Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).'
          type: string
        properties:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Property'
          type: array
          description: 'Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.'
        locale:
          type: string
          description: The language code for the locale in which the entity textual `description` is expressed.
        boundingPoly:
          description: Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
        topicality:
          type: number
          format: float
          description: 'The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of "tower" is likely higher to an image containing the detected "Eiffel Tower" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].'
        locations:
          description: 'The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1LocationInfo'
        score:
          type: number
          format: float
          description: 'Overall score of the result. Range [0, 1].'
        description:
          description: 'Entity textual description, expressed in its `locale` language.'
          type: string
        confidence:
          type: number
          format: float
          description: '**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the "Eiffel Tower" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].'
          deprecated: true
    GoogleCloudVisionV1p2beta1DominantColorsAnnotation:
      description: Set of dominant colors and their corresponding scores.
      properties:
        colors:
          description: RGB color values with their score and pixel fraction.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ColorInfo'
          type: array
      type: object
      id: GoogleCloudVisionV1p2beta1DominantColorsAnnotation
    GoogleCloudVisionV1p4beta1ProductKeyValue:
      properties:
        value:
          type: string
          description: The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
        key:
          description: The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
          type: string
      type: object
      description: A product label represented as a key-value pair.
      id: GoogleCloudVisionV1p4beta1ProductKeyValue
    GoogleCloudVisionV1p2beta1ProductKeyValue:
      properties:
        value:
          description: The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
          type: string
        key:
          description: The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
          type: string
      description: A product label represented as a key-value pair.
      type: object
      id: GoogleCloudVisionV1p2beta1ProductKeyValue
    AddProductToProductSetRequest:
      id: AddProductToProductSetRequest
      description: Request message for the `AddProductToProductSet` method.
      properties:
        product:
          type: string
          description: 'Required. The resource name for the Product to be added to this ProductSet. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`'
      type: object
    RemoveProductFromProductSetRequest:
      id: RemoveProductFromProductSetRequest
      description: Request message for the `RemoveProductFromProductSet` method.
      properties:
        product:
          type: string
          description: 'Required. The resource name for the Product to be removed from this ProductSet. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`'
      type: object
    EntityAnnotation:
      type: object
      id: EntityAnnotation
      properties:
        topicality:
          description: 'The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of "tower" is likely higher to an image containing the detected "Eiffel Tower" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].'
          type: number
          format: float
        score:
          description: 'Overall score of the result. Range [0, 1].'
          format: float
          type: number
        locations:
          description: 'The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.'
          type: array
          items:
            $ref: '#/components/schemas/LocationInfo'
        confidence:
          type: number
          format: float
          deprecated: true
          description: '**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the "Eiffel Tower" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].'
        mid:
          type: string
          description: 'Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).'
        properties:
          description: 'Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.'
          type: array
          items:
            $ref: '#/components/schemas/Property'
        description:
          description: 'Entity textual description, expressed in its `locale` language.'
          type: string
        boundingPoly:
          $ref: '#/components/schemas/BoundingPoly'
          description: Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features.
        locale:
          description: The language code for the locale in which the entity textual `description` is expressed.
          type: string
      description: Set of detected entity features.
  parameters:
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
  x-stackQL-resources:
    images:
      id: google.vision.images
      name: images
      title: Images
      methods:
        images_async_batch_annotate:
          operation:
            $ref: '#/paths/~1v1~1images:asyncBatchAnnotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        images_annotate:
          operation:
            $ref: '#/paths/~1v1~1images:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_images_async_batch_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1images:asyncBatchAnnotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_images_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1images:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_images_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1images:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_images_async_batch_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1images:asyncBatchAnnotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    operations:
      id: google.vision.operations
      name: operations
      title: Operations
      methods:
        operations_delete:
          operation:
            $ref: '#/paths/~1v1~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        operations_get:
          operation:
            $ref: '#/paths/~1v1~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        operations_list:
          operation:
            $ref: '#/paths/~1v1~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _operations_list:
          operation:
            $ref: '#/paths/~1v1~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/operations_delete'
    files:
      id: google.vision.files
      name: files
      title: Files
      methods:
        files_async_batch_annotate:
          operation:
            $ref: '#/paths/~1v1~1files:asyncBatchAnnotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        files_annotate:
          operation:
            $ref: '#/paths/~1v1~1files:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_files_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1files:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_files_async_batch_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1files:asyncBatchAnnotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_files_async_batch_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1files:asyncBatchAnnotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_files_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1files:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    products:
      id: google.vision.products
      name: products
      title: Products
      methods:
        projects_locations_product_sets_products_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}~1products/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.products
        _projects_locations_product_sets_products_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}~1products/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.products
        _projects_locations_products_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_purge:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products:purge/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/products/methods/projects_locations_product_sets_products_list'
          - $ref: '#/components/x-stackQL-resources/products/methods/projects_locations_products_list'
          - $ref: '#/components/x-stackQL-resources/products/methods/projects_locations_products_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/products/methods/projects_locations_products_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/products/methods/projects_locations_products_delete'
    product_sets_product:
      id: google.vision.product_sets_product
      name: product_sets_product
      title: Product Sets Product
      methods:
        projects_locations_product_sets_add_product:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}:addProduct/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_remove_product:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}:removeProduct/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    product_sets:
      id: google.vision.product_sets
      name: product_sets
      title: Product Sets
      methods:
        projects_locations_product_sets_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.productSets
        _projects_locations_product_sets_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_import:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets:import/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/product_sets/methods/projects_locations_product_sets_get'
          - $ref: '#/components/x-stackQL-resources/product_sets/methods/projects_locations_product_sets_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/product_sets/methods/projects_locations_product_sets_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/product_sets/methods/projects_locations_product_sets_delete'
    reference_images:
      id: google.vision.reference_images
      name: reference_images
      title: Reference Images
      methods:
        projects_locations_products_reference_images_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}~1referenceImages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.referenceImages
        _projects_locations_products_reference_images_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}~1referenceImages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_reference_images_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}~1referenceImages/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_reference_images_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}~1referenceImages~1{referenceImagesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_reference_images_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}~1referenceImages~1{referenceImagesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reference_images/methods/projects_locations_products_reference_images_list'
          - $ref: '#/components/x-stackQL-resources/reference_images/methods/projects_locations_products_reference_images_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/reference_images/methods/projects_locations_products_reference_images_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/reference_images/methods/projects_locations_products_reference_images_delete'
paths:
  '/v1/images:asyncBatchAnnotate':
    parameters: &ref_1
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
    post:
      description: 'Run asynchronous image detection and annotation for a list of images. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results). This service will write image annotation outputs to json files in customer GCS bucket, each json file containing BatchAnnotateImagesResponse proto.'
      operationId: vision.images.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
      x-stackQL-resource: images
      x-stackQL-method: images_async_batch_annotate
      x-stackQL-verb: exec
  '/v1/images:annotate':
    parameters: *ref_1
    post:
      description: Run image detection and annotation for a batch of images.
      operationId: vision.images.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateImagesResponse'
      parameters: []
      x-stackQL-resource: images
      x-stackQL-method: images_annotate
      x-stackQL-verb: exec
  '/v1/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: vision.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: operations_delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: vision.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: operations_get
      x-stackQL-verb: exec
  /v1/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: vision.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: vision.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: operations_cancel
      x-stackQL-verb: exec
  '/v1/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: vision.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: locations_operations_get
      x-stackQL-verb: exec
  '/v1/files:asyncBatchAnnotate':
    parameters: *ref_1
    post:
      description: 'Run asynchronous image detection and annotation for a list of generic files, such as PDF files, which may contain multiple pages and multiple images per page. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results).'
      operationId: vision.files.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
      x-stackQL-resource: files
      x-stackQL-method: files_async_batch_annotate
      x-stackQL-verb: exec
  '/v1/files:annotate':
    parameters: *ref_1
    post:
      description: 'Service that performs image detection and annotation for a batch of files. Now only "application/pdf", "image/tiff" and "image/gif" are supported. This service will extract at most 5 (customers can specify which 5 in AnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each file provided and perform detection and annotation for each image extracted.'
      operationId: vision.files.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateFilesResponse'
      parameters: []
      x-stackQL-resource: files
      x-stackQL-method: files_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/images:asyncBatchAnnotate':
    parameters: *ref_1
    post:
      description: 'Run asynchronous image detection and annotation for a list of images. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results). This service will write image annotation outputs to json files in customer GCS bucket, each json file containing BatchAnnotateImagesResponse proto.'
      operationId: vision.projects.images.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: images
      x-stackQL-method: projects_images_async_batch_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/images:annotate':
    parameters: *ref_1
    post:
      description: Run image detection and annotation for a batch of images.
      operationId: vision.projects.images.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateImagesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: images
      x-stackQL-method: projects_images_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/files:annotate':
    parameters: *ref_1
    post:
      description: 'Service that performs image detection and annotation for a batch of files. Now only "application/pdf", "image/tiff" and "image/gif" are supported. This service will extract at most 5 (customers can specify which 5 in AnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each file provided and perform detection and annotation for each image extracted.'
      operationId: vision.projects.files.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateFilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-method: projects_files_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/files:asyncBatchAnnotate':
    parameters: *ref_1
    post:
      description: 'Run asynchronous image detection and annotation for a list of generic files, such as PDF files, which may contain multiple pages and multiple images per page. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results).'
      operationId: vision.projects.files.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-method: projects_files_async_batch_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}/products':
    parameters: *ref_1
    get:
      description: 'Lists the Products in a ProductSet, in an unspecified order. If the ProductSet does not exist, the products field of the response will be empty. Possible errors: * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.'
      operationId: vision.projects.locations.productSets.products.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductsInProductSetResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_product_sets_products_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.products
  '/v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}:addProduct':
    parameters: *ref_1
    post:
      description: 'Adds a Product to the specified ProductSet. If the Product is already present, no change is made. One Product can be added to at most 100 ProductSets. Possible errors: * Returns NOT_FOUND if the Product or the ProductSet doesn''t exist.'
      operationId: vision.projects.locations.productSets.addProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProductToProductSetRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets_product
      x-stackQL-method: projects_locations_product_sets_add_product
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}':
    parameters: *ref_1
    get:
      description: 'Gets information associated with a ProductSet. Possible errors: * Returns NOT_FOUND if the ProductSet does not exist.'
      operationId: vision.projects.locations.productSets.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-method: projects_locations_product_sets_get
      x-stackQL-verb: select
    patch:
      description: 'Makes changes to a ProductSet resource. Only display_name can be updated currently. Possible errors: * Returns NOT_FOUND if the ProductSet does not exist. * Returns INVALID_ARGUMENT if display_name is present in update_mask but missing from the request or longer than 4096 characters.'
      operationId: vision.projects.locations.productSets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-method: projects_locations_product_sets_patch
      x-stackQL-verb: exec
    delete:
      description: Permanently deletes a ProductSet. Products and ReferenceImages in the ProductSet are not deleted. The actual image files are not deleted from Google Cloud Storage.
      operationId: vision.projects.locations.productSets.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-method: projects_locations_product_sets_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/productSets':
    parameters: *ref_1
    get:
      description: 'Lists ProductSets in an unspecified order. Possible errors: * Returns INVALID_ARGUMENT if page_size is greater than 100, or less than 1.'
      operationId: vision.projects.locations.productSets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductSetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-method: projects_locations_product_sets_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.productSets
    post:
      description: 'Creates and returns a new ProductSet resource. Possible errors: * Returns INVALID_ARGUMENT if display_name is missing, or is longer than 4096 characters.'
      operationId: vision.projects.locations.productSets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: productSetId
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-method: projects_locations_product_sets_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}:removeProduct':
    parameters: *ref_1
    post:
      description: Removes a Product from the specified ProductSet.
      operationId: vision.projects.locations.productSets.removeProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveProductFromProductSetRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets_product
      x-stackQL-method: projects_locations_product_sets_remove_product
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/productSets:import':
    parameters: *ref_1
    post:
      description: Asynchronous API that imports a list of reference images to specified product sets based on a list of image information. The google.longrunning.Operation API can be used to keep track of the progress and results of the request. `Operation.metadata` contains `BatchOperationMetadata`. (progress) `Operation.response` contains `ImportProductSetsResponse`. (results) The input source of this method is a csv file on Google Cloud Storage. For the format of the csv file please see ImportProductSetsGcsSource.csv_file_uri.
      operationId: vision.projects.locations.productSets.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportProductSetsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-method: projects_locations_product_sets_import
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: vision.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/files:asyncBatchAnnotate':
    parameters: *ref_1
    post:
      description: 'Run asynchronous image detection and annotation for a list of generic files, such as PDF files, which may contain multiple pages and multiple images per page. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results).'
      operationId: vision.projects.locations.files.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-method: projects_locations_files_async_batch_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/files:annotate':
    parameters: *ref_1
    post:
      description: 'Service that performs image detection and annotation for a batch of files. Now only "application/pdf", "image/tiff" and "image/gif" are supported. This service will extract at most 5 (customers can specify which 5 in AnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each file provided and perform detection and annotation for each image extracted.'
      operationId: vision.projects.locations.files.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateFilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-method: projects_locations_files_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/images:annotate':
    parameters: *ref_1
    post:
      description: Run image detection and annotation for a batch of images.
      operationId: vision.projects.locations.images.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateImagesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: images
      x-stackQL-method: projects_locations_images_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/images:asyncBatchAnnotate':
    parameters: *ref_1
    post:
      description: 'Run asynchronous image detection and annotation for a list of images. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results). This service will write image annotation outputs to json files in customer GCS bucket, each json file containing BatchAnnotateImagesResponse proto.'
      operationId: vision.projects.locations.images.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: images
      x-stackQL-method: projects_locations_images_async_batch_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/products/{productsId}/referenceImages':
    parameters: *ref_1
    get:
      description: 'Lists reference images. Possible errors: * Returns NOT_FOUND if the parent product does not exist. * Returns INVALID_ARGUMENT if the page_size is greater than 100, or less than 1.'
      operationId: vision.projects.locations.products.referenceImages.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReferenceImagesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: reference_images
      x-stackQL-method: projects_locations_products_reference_images_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.referenceImages
    post:
      description: 'Creates and returns a new ReferenceImage resource. The `bounding_poly` field is optional. If `bounding_poly` is not specified, the system will try to detect regions of interest in the image that are compatible with the product_category on the parent product. If it is specified, detection is ALWAYS skipped. The system converts polygons into non-rotated rectangles. Note that the pipeline will resize the image if the image resolution is too large to process (above 50MP). Possible errors: * Returns INVALID_ARGUMENT if the image_uri is missing or longer than 4096 characters. * Returns INVALID_ARGUMENT if the product does not exist. * Returns INVALID_ARGUMENT if bounding_poly is not provided, and nothing compatible with the parent product''s product_category is detected. * Returns INVALID_ARGUMENT if bounding_poly contains more than 10 polygons.'
      operationId: vision.projects.locations.products.referenceImages.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenceImage'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceImage'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: query
          name: referenceImageId
          schema:
            type: string
      x-stackQL-resource: reference_images
      x-stackQL-method: projects_locations_products_reference_images_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/products/{productsId}/referenceImages/{referenceImagesId}':
    parameters: *ref_1
    delete:
      description: 'Permanently deletes a reference image. The image metadata will be deleted right away, but search queries against ProductSets containing the image may still work until all related caches are refreshed. The actual image files are not deleted from Google Cloud Storage.'
      operationId: vision.projects.locations.products.referenceImages.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: path
          name: referenceImagesId
          required: true
          schema:
            type: string
      x-stackQL-resource: reference_images
      x-stackQL-method: projects_locations_products_reference_images_delete
      x-stackQL-verb: delete
    get:
      description: 'Gets information associated with a ReferenceImage. Possible errors: * Returns NOT_FOUND if the specified image does not exist.'
      operationId: vision.projects.locations.products.referenceImages.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceImage'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: path
          name: referenceImagesId
          required: true
          schema:
            type: string
      x-stackQL-resource: reference_images
      x-stackQL-method: projects_locations_products_reference_images_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/products':
    parameters: *ref_1
    get:
      description: 'Lists products in an unspecified order. Possible errors: * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.'
      operationId: vision.projects.locations.products.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_products_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.products
    post:
      description: 'Creates and returns a new product resource. Possible errors: * Returns INVALID_ARGUMENT if display_name is missing or longer than 4096 characters. * Returns INVALID_ARGUMENT if description is longer than 4096 characters. * Returns INVALID_ARGUMENT if product_category is missing or invalid.'
      operationId: vision.projects.locations.products.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: productId
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_products_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/products/{productsId}':
    parameters: *ref_1
    delete:
      description: 'Permanently deletes a product and its reference images. Metadata of the product and all its images will be deleted right away, but search queries against ProductSets containing the product may still work until all related caches are refreshed.'
      operationId: vision.projects.locations.products.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_products_delete
      x-stackQL-verb: delete
    patch:
      description: 'Makes changes to a Product resource. Only the `display_name`, `description`, and `labels` fields can be updated right now. If labels are updated, the change will not be reflected in queries until the next index time. Possible errors: * Returns NOT_FOUND if the Product does not exist. * Returns INVALID_ARGUMENT if display_name is present in update_mask but is missing from the request or longer than 4096 characters. * Returns INVALID_ARGUMENT if description is present in update_mask but is longer than 4096 characters. * Returns INVALID_ARGUMENT if product_category is present in update_mask.'
      operationId: vision.projects.locations.products.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_products_patch
      x-stackQL-verb: exec
    get:
      description: 'Gets information associated with a Product. Possible errors: * Returns NOT_FOUND if the Product does not exist.'
      operationId: vision.projects.locations.products.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_products_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/products:purge':
    parameters: *ref_1
    post:
      description: 'Asynchronous API to delete all Products in a ProductSet or all Products that are in no ProductSet. If a Product is a member of the specified ProductSet in addition to other ProductSets, the Product will still be deleted. It is recommended to not delete the specified ProductSet until after this operation has completed. It is also recommended to not add any of the Products involved in the batch delete to a new ProductSet while this operation is running because those Products may still end up deleted. It''s not possible to undo the PurgeProducts operation. Therefore, it is recommended to keep the csv files used in ImportProductSets (if that was how you originally built the Product Set) before starting PurgeProducts, in case you need to re-import the data after deletion. If the plan is to purge all of the Products from a ProductSet and then re-use the empty ProductSet to re-import new Products into the empty ProductSet, you must wait until the PurgeProducts operation has finished for that ProductSet. The google.longrunning.Operation API can be used to keep track of the progress and results of the request. `Operation.metadata` contains `BatchOperationMetadata`. (progress)'
      operationId: vision.projects.locations.products.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurgeProductsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_products_purge
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: vision.projects.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_operations_get
      x-stackQL-verb: exec
