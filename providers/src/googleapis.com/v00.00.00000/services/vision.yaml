openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Vision API
  description: 'Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.'
  version: v1
  x-discovery-doc-revision: '20230811'
  x-generated-date: '2023-08-22'
externalDocs:
  url: 'https://cloud.google.com/vision/'
servers:
  - url: 'https://vision.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
            'https://www.googleapis.com/auth/cloud-vision': Apply machine learning models to understand and label images
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudVisionV1p1beta1OperationMetadata:
      id: GoogleCloudVisionV1p1beta1OperationMetadata
      description: Contains metadata for the BatchAnnotateImages operation.
      type: object
      properties:
        updateTime:
          type: string
          description: The time when the operation result was last updated.
          format: google-datetime
        createTime:
          format: google-datetime
          type: string
          description: The time when the batch request was received.
        state:
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
          description: Current state of the batch operation.
          type: string
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
    GoogleCloudVisionV1p1beta1InputConfig:
      id: GoogleCloudVisionV1p1beta1InputConfig
      properties:
        mimeType:
          description: 'The type of the file. Currently only "application/pdf", "image/tiff" and "image/gif" are supported. Wildcards are not supported.'
          type: string
        content:
          description: 'File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests.'
          format: byte
          type: string
        gcsSource:
          description: The Google Cloud Storage location to read the input from.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1GcsSource'
      type: object
      description: The desired input location and metadata.
    GoogleCloudVisionV1p3beta1Product:
      properties:
        productLabels:
          description: 'Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. "1199". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductKeyValue'
          type: array
        name:
          type: string
          description: 'The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product.'
        displayName:
          type: string
          description: The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long.
        description:
          description: User-provided metadata to be stored with this product. Must be at most 4096 characters long.
          type: string
        productCategory:
          type: string
          description: 'Immutable. The category for the product identified by the reference image. This should be one of "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories "homegoods", "apparel", and "toys" are still supported, but these should not be used for new products.'
      description: A Product contains ReferenceImages.
      id: GoogleCloudVisionV1p3beta1Product
      type: object
    GoogleCloudVisionV1p1beta1OutputConfig:
      id: GoogleCloudVisionV1p1beta1OutputConfig
      properties:
        batchSize:
          description: 'The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations.'
          type: integer
          format: int32
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1GcsDestination'
          description: The Google Cloud Storage location to write the output(s) to.
      description: The desired output location and metadata.
      type: object
    GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult:
      properties:
        objectAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation'
          description: List of generic predictions for the object in the bounding box.
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: The bounding polygon around the product detected in the query image.
        results:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResultsResult'
          description: 'List of results, one for each product match.'
      type: object
      id: GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult
      description: Information about the products similar to a single product in a query image.
    GoogleCloudVisionV1p3beta1ImageProperties:
      id: GoogleCloudVisionV1p3beta1ImageProperties
      properties:
        dominantColors:
          description: 'If present, dominant colors completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1DominantColorsAnnotation'
      type: object
      description: 'Stores image properties, such as dominant colors.'
    GoogleCloudVisionV1p3beta1Block:
      properties:
        confidence:
          type: number
          format: float
          description: 'Confidence of the OCR results on the block. Range [0, 1].'
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty'
          description: Additional information detected for the block.
        boundingBox:
          description: 'The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
        blockType:
          description: 'Detected block type (text, image etc) for this block.'
          type: string
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
        paragraphs:
          description: List of paragraphs in this block (if this blocks is of type text).
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Paragraph'
          type: array
      description: Logical element on the page.
      type: object
      id: GoogleCloudVisionV1p3beta1Block
    Page:
      id: Page
      type: object
      properties:
        confidence:
          type: number
          format: float
          description: 'Confidence of the OCR results on the page. Range [0, 1].'
        property:
          description: Additional information detected on the page.
          $ref: '#/components/schemas/TextProperty'
        height:
          type: integer
          format: int32
          description: Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
        width:
          type: integer
          format: int32
          description: Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
        blocks:
          description: 'List of blocks of text, images etc on this page.'
          items:
            $ref: '#/components/schemas/Block'
          type: array
      description: Detected page from OCR.
    CancelOperationRequest:
      properties: {}
      id: CancelOperationRequest
      type: object
      description: The request message for Operations.CancelOperation.
    GoogleCloudVisionV1p2beta1DominantColorsAnnotation:
      id: GoogleCloudVisionV1p2beta1DominantColorsAnnotation
      description: Set of dominant colors and their corresponding scores.
      properties:
        colors:
          description: RGB color values with their score and pixel fraction.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ColorInfo'
      type: object
    GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage:
      type: object
      id: GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage
      properties:
        languageCode:
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
        confidence:
          description: 'Confidence of detected language. Range [0, 1].'
          type: number
          format: float
      description: Detected language for a structural component.
    BoundingPoly:
      type: object
      description: A bounding polygon for the detected image annotation.
      properties:
        normalizedVertices:
          items:
            $ref: '#/components/schemas/NormalizedVertex'
          type: array
          description: The bounding polygon normalized vertices.
        vertices:
          type: array
          items:
            $ref: '#/components/schemas/Vertex'
          description: The bounding polygon vertices.
      id: BoundingPoly
    GoogleCloudVisionV1p4beta1DominantColorsAnnotation:
      id: GoogleCloudVisionV1p4beta1DominantColorsAnnotation
      type: object
      properties:
        colors:
          description: RGB color values with their score and pixel fraction.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ColorInfo'
          type: array
      description: Set of dominant colors and their corresponding scores.
    GoogleCloudVisionV1p2beta1InputConfig:
      description: The desired input location and metadata.
      id: GoogleCloudVisionV1p2beta1InputConfig
      type: object
      properties:
        mimeType:
          description: 'The type of the file. Currently only "application/pdf", "image/tiff" and "image/gif" are supported. Wildcards are not supported.'
          type: string
        gcsSource:
          description: The Google Cloud Storage location to read the input from.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1GcsSource'
        content:
          description: 'File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests.'
          format: byte
          type: string
    GoogleCloudVisionV1p4beta1Property:
      type: object
      properties:
        value:
          type: string
          description: Value of the property.
        uint64Value:
          type: string
          format: uint64
          description: Value of numeric properties.
        name:
          type: string
          description: Name of the property.
      id: GoogleCloudVisionV1p4beta1Property
      description: A `Property` consists of a user-supplied name/value pair.
    AsyncBatchAnnotateImagesRequest:
      description: Request for async image annotation for a list of images.
      id: AsyncBatchAnnotateImagesRequest
      properties:
        requests:
          items:
            $ref: '#/components/schemas/AnnotateImageRequest'
          type: array
          description: Required. Individual image annotation requests for this batch.
        outputConfig:
          description: Required. The desired output location and metadata (e.g. format).
          $ref: '#/components/schemas/OutputConfig'
        parent:
          description: 'Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.'
          type: string
      type: object
    GoogleCloudVisionV1p4beta1WebDetectionWebPage:
      type: object
      properties:
        url:
          type: string
          description: The result web page URL.
        partialMatchingImages:
          description: Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage'
        score:
          type: number
          description: (Deprecated) Overall relevancy score for the web page.
          format: float
        fullMatchingImages:
          description: Fully matching images on the page. Can include resized copies of the query image.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage'
        pageTitle:
          description: 'Title for the web page, may contain HTML markups.'
          type: string
      description: Metadata for web pages.
      id: GoogleCloudVisionV1p4beta1WebDetectionWebPage
    GoogleCloudVisionV1p2beta1WebDetectionWebEntity:
      type: object
      id: GoogleCloudVisionV1p2beta1WebDetectionWebEntity
      description: Entity deduced from similar images on the Internet.
      properties:
        entityId:
          type: string
          description: Opaque entity ID.
        description:
          description: 'Canonical description of the entity, in English.'
          type: string
        score:
          format: float
          description: Overall relevancy score for the entity. Not normalized and not comparable across different image queries.
          type: number
    GoogleCloudVisionV1p4beta1ColorInfo:
      properties:
        score:
          description: 'Image-specific score for this color. Value in range [0, 1].'
          type: number
          format: float
        color:
          description: RGB components of the color.
          $ref: '#/components/schemas/Color'
        pixelFraction:
          description: 'The fraction of pixels the color occupies in the image. Value in range [0, 1].'
          format: float
          type: number
      id: GoogleCloudVisionV1p4beta1ColorInfo
      description: 'Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.'
      type: object
    Color:
      type: object
      id: Color
      description: 'Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor''s `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn''t have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!(''alpha'' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join('',''); return [''rgba('', rgbParams, '','', alphaFrac, '')''].join(''''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = [''#'']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push(''0''); } resultBuilder.push(hexString); return resultBuilder.join(''''); }; // ...'
      properties:
        green:
          format: float
          description: 'The amount of green in the color as a value in the interval [0, 1].'
          type: number
        blue:
          format: float
          type: number
          description: 'The amount of blue in the color as a value in the interval [0, 1].'
        alpha:
          format: float
          type: number
          description: 'The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).'
        red:
          type: number
          format: float
          description: 'The amount of red in the color as a value in the interval [0, 1].'
    LatLng:
      id: LatLng
      description: 'An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.'
      properties:
        latitude:
          format: double
          description: 'The latitude in degrees. It must be in the range [-90.0, +90.0].'
          type: number
        longitude:
          description: 'The longitude in degrees. It must be in the range [-180.0, +180.0].'
          format: double
          type: number
      type: object
    ImportProductSetsInputConfig:
      id: ImportProductSetsInputConfig
      description: The input content for the `ImportProductSets` method.
      properties:
        gcsSource:
          $ref: '#/components/schemas/ImportProductSetsGcsSource'
          description: The Google Cloud Storage location for a csv file which preserves a list of ImportProductSetRequests in each line.
      type: object
    GoogleCloudVisionV1p3beta1SafeSearchAnnotation:
      description: 'Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).'
      id: GoogleCloudVisionV1p3beta1SafeSearchAnnotation
      type: object
      properties:
        spoof:
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        adult:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: 'Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities.'
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        medical:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Likelihood that this is a medical image.
          type: string
        racy:
          description: 'Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.'
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        violence:
          description: Likelihood that this image contains violent content.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
    Status:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
      properties:
        code:
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
          format: int32
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        details:
          type: array
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
      type: object
    GoogleCloudVisionV1p1beta1GcsSource:
      description: The Google Cloud Storage location where the input will be read from.
      type: object
      properties:
        uri:
          type: string
          description: Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported.
      id: GoogleCloudVisionV1p1beta1GcsSource
    GoogleCloudVisionV1p4beta1WebDetection:
      description: Relevant information for the image from the Internet.
      id: GoogleCloudVisionV1p4beta1WebDetection
      type: object
      properties:
        webEntities:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebEntity'
          type: array
          description: Deduced entities from similar images on the Internet.
        bestGuessLabels:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebLabel'
          description: The service's best guess as to the topic of the request image. Inferred from similar images on the open web.
          type: array
        pagesWithMatchingImages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebPage'
          description: Web pages containing the matching images from the Internet.
        fullMatchingImages:
          description: Fully matching images from the Internet. Can include resized copies of the query image.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage'
        partialMatchingImages:
          description: Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage'
        visuallySimilarImages:
          description: The visually similar image results.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage'
          type: array
    GoogleCloudVisionV1p3beta1Property:
      id: GoogleCloudVisionV1p3beta1Property
      properties:
        value:
          type: string
          description: Value of the property.
        uint64Value:
          description: Value of numeric properties.
          type: string
          format: uint64
        name:
          description: Name of the property.
          type: string
      type: object
      description: A `Property` consists of a user-supplied name/value pair.
    GoogleCloudVisionV1p4beta1AnnotateImageResponse:
      description: Response to an image annotation request.
      id: GoogleCloudVisionV1p4beta1AnnotateImageResponse
      type: object
      properties:
        landmarkAnnotations:
          type: array
          description: 'If present, landmark detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1EntityAnnotation'
        labelAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1EntityAnnotation'
          type: array
          description: 'If present, label detection has completed successfully.'
        faceAnnotations:
          description: 'If present, face detection has completed successfully.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1FaceAnnotation'
        webDetection:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetection'
          description: 'If present, web detection has completed successfully.'
        textAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1EntityAnnotation'
          description: 'If present, text (OCR) detection has completed successfully.'
          type: array
        context:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ImageAnnotationContext'
          description: 'If present, contextual information is needed to understand where this image comes from.'
        localizedObjectAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation'
          description: 'If present, localized object detection has completed successfully. This will be sorted descending by confidence score.'
          type: array
        error:
          $ref: '#/components/schemas/Status'
          description: 'If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set.'
        cropHintsAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1CropHintsAnnotation'
          description: 'If present, crop hints have completed successfully.'
        productSearchResults:
          description: 'If present, product search has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResults'
        safeSearchAnnotation:
          description: 'If present, safe-search annotation has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1SafeSearchAnnotation'
        logoAnnotations:
          type: array
          description: 'If present, logo detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1EntityAnnotation'
        fullTextAnnotation:
          description: 'If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotation'
        imagePropertiesAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ImageProperties'
          description: 'If present, image properties were extracted successfully.'
    Landmark:
      description: 'A face-specific landmark (for example, a face feature).'
      properties:
        position:
          description: Face landmark position.
          $ref: '#/components/schemas/Position'
        type:
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - 'Nose, bottom right.'
            - 'Nose, bottom left.'
            - 'Nose, bottom center.'
            - 'Left eye, top boundary.'
            - 'Left eye, right corner.'
            - 'Left eye, bottom boundary.'
            - 'Left eye, left corner.'
            - 'Right eye, top boundary.'
            - 'Right eye, right corner.'
            - 'Right eye, bottom boundary.'
            - 'Right eye, left corner.'
            - 'Left eyebrow, upper midpoint.'
            - 'Right eyebrow, upper midpoint.'
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
          type: string
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
          description: Face landmark type.
      id: Landmark
      type: object
    GoogleCloudVisionV1p4beta1ImageProperties:
      type: object
      description: 'Stores image properties, such as dominant colors.'
      id: GoogleCloudVisionV1p4beta1ImageProperties
      properties:
        dominantColors:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1DominantColorsAnnotation'
          description: 'If present, dominant colors completed successfully.'
    GoogleCloudVisionV1p4beta1AsyncBatchAnnotateFilesResponse:
      type: object
      properties:
        responses:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse'
          description: 'The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest.'
          type: array
      id: GoogleCloudVisionV1p4beta1AsyncBatchAnnotateFilesResponse
      description: Response to an async batch file annotation request.
    BatchOperationMetadata:
      id: BatchOperationMetadata
      description: 'Metadata for the batch operations such as the current state. This is included in the `metadata` field of the `Operation` returned by the `GetOperation` call of the `google::longrunning::Operations` service.'
      type: object
      properties:
        state:
          description: The current state of the batch operation.
          enum:
            - STATE_UNSPECIFIED
            - PROCESSING
            - SUCCESSFUL
            - FAILED
            - CANCELLED
          type: string
          enumDescriptions:
            - Invalid.
            - Request is actively being processed.
            - The request is done and at least one item has been successfully processed.
            - The request is done and no item has been successfully processed.
            - The request is done after the longrunning.Operations.CancelOperation has been called by the user. Any records that were processed before the cancel command are output as specified in the request.
        endTime:
          format: google-datetime
          type: string
          description: The time when the batch request is finished and google.longrunning.Operation.done is set to true.
        submitTime:
          format: google-datetime
          description: The time when the batch request was submitted to the server.
          type: string
    GoogleCloudVisionV1p4beta1BoundingPoly:
      properties:
        vertices:
          type: array
          description: The bounding polygon vertices.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Vertex'
        normalizedVertices:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1NormalizedVertex'
          description: The bounding polygon normalized vertices.
      type: object
      description: A bounding polygon for the detected image annotation.
      id: GoogleCloudVisionV1p4beta1BoundingPoly
    GoogleCloudVisionV1p4beta1EntityAnnotation:
      type: object
      properties:
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features.
        topicality:
          format: float
          description: 'The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of "tower" is likely higher to an image containing the detected "Eiffel Tower" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].'
          type: number
        properties:
          type: array
          description: 'Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Property'
        description:
          description: 'Entity textual description, expressed in its `locale` language.'
          type: string
        confidence:
          description: '**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the "Eiffel Tower" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].'
          format: float
          type: number
          deprecated: true
        score:
          format: float
          type: number
          description: 'Overall score of the result. Range [0, 1].'
        locale:
          description: The language code for the locale in which the entity textual `description` is expressed.
          type: string
        mid:
          description: 'Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).'
          type: string
        locations:
          description: 'The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1LocationInfo'
      id: GoogleCloudVisionV1p4beta1EntityAnnotation
      description: Set of detected entity features.
    GoogleCloudVisionV1p3beta1DominantColorsAnnotation:
      type: object
      id: GoogleCloudVisionV1p3beta1DominantColorsAnnotation
      description: Set of dominant colors and their corresponding scores.
      properties:
        colors:
          description: RGB color values with their score and pixel fraction.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ColorInfo'
          type: array
    GoogleCloudVisionV1p3beta1ReferenceImage:
      properties:
        uri:
          description: 'Required. The Google Cloud Storage URI of the reference image. The URI must start with `gs://`.'
          type: string
        boundingPolys:
          description: 'Optional. Bounding polygons around the areas of interest in the reference image. If this field is empty, the system will try to detect regions of interest. At most 10 bounding polygons will be used. The provided shape is converted into a non-rotated rectangle. Once converted, the small edge of the rectangle must be greater than or equal to 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5 is not).'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          type: array
        name:
          description: 'The resource name of the reference image. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`. This field is ignored when creating a reference image.'
          type: string
      id: GoogleCloudVisionV1p3beta1ReferenceImage
      description: 'A `ReferenceImage` represents a product image and its associated metadata, such as bounding boxes.'
      type: object
    GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage:
      properties:
        confidence:
          format: float
          type: number
          description: 'Confidence of detected language. Range [0, 1].'
        languageCode:
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
      description: Detected language for a structural component.
      id: GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage
      type: object
    GoogleCloudVisionV1p1beta1WebDetectionWebEntity:
      type: object
      properties:
        entityId:
          type: string
          description: Opaque entity ID.
        score:
          format: float
          description: Overall relevancy score for the entity. Not normalized and not comparable across different image queries.
          type: number
        description:
          description: 'Canonical description of the entity, in English.'
          type: string
      description: Entity deduced from similar images on the Internet.
      id: GoogleCloudVisionV1p1beta1WebDetectionWebEntity
    GoogleCloudVisionV1p1beta1Position:
      type: object
      description: 'A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image.'
      properties:
        z:
          description: Z coordinate (or depth).
          format: float
          type: number
        x:
          type: number
          description: X coordinate.
          format: float
        'y':
          format: float
          description: Y coordinate.
          type: number
      id: GoogleCloudVisionV1p1beta1Position
    GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak:
      properties:
        type:
          description: Detected break type.
          type: string
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - 'End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.'
            - Line break that ends a paragraph.
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
        isPrefix:
          description: True if break prepends the element.
          type: boolean
      description: Detected start or end of a structural component.
      type: object
      id: GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak
    ImportProductSetsGcsSource:
      properties:
        csvFileUri:
          type: string
          description: 'The Google Cloud Storage URI of the input csv file. The URI must start with `gs://`. The format of the input csv file should be one image per line. In each line, there are 8 columns. 1. image-uri 2. image-id 3. product-set-id 4. product-id 5. product-category 6. product-display-name 7. labels 8. bounding-poly The `image-uri`, `product-set-id`, `product-id`, and `product-category` columns are required. All other columns are optional. If the `ProductSet` or `Product` specified by the `product-set-id` and `product-id` values does not exist, then the system will create a new `ProductSet` or `Product` for the image. In this case, the `product-display-name` column refers to display_name, the `product-category` column refers to product_category, and the `labels` column refers to product_labels. The `image-id` column is optional but must be unique if provided. If it is empty, the system will automatically assign a unique id to the image. The `product-display-name` column is optional. If it is empty, the system sets the display_name field for the product to a space (" "). You can update the `display_name` later by using the API. If a `Product` with the specified `product-id` already exists, then the system ignores the `product-display-name`, `product-category`, and `labels` columns. The `labels` column (optional) is a line containing a list of comma-separated key-value pairs, in the following format: "key_1=value_1,key_2=value_2,...,key_n=value_n" The `bounding-poly` column (optional) identifies one region of interest from the image in the same manner as `CreateReferenceImage`. If you do not specify the `bounding-poly` column, then the system will try to detect regions of interest automatically. At most one `bounding-poly` column is allowed per line. If the image contains multiple regions of interest, add a line to the CSV file that includes the same product information, and the `bounding-poly` values for each region of interest. The `bounding-poly` column must contain an even number of comma-separated numbers, in the format "p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y". Use non-negative integers for absolute bounding polygons, and float values in [0, 1] for normalized bounding polygons. The system will resize the image if the image resolution is too large to process (larger than 20MP).'
      description: The Google Cloud Storage location for a csv file which preserves a list of ImportProductSetRequests in each line.
      type: object
      id: ImportProductSetsGcsSource
    GoogleCloudVisionV1p1beta1Page:
      description: Detected page from OCR.
      properties:
        height:
          description: Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
          type: integer
          format: int32
        confidence:
          description: 'Confidence of the OCR results on the page. Range [0, 1].'
          type: number
          format: float
        width:
          type: integer
          description: Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
          format: int32
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty'
          description: Additional information detected on the page.
        blocks:
          type: array
          description: 'List of blocks of text, images etc on this page.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Block'
      type: object
      id: GoogleCloudVisionV1p1beta1Page
    GoogleCloudVisionV1p2beta1CropHintsAnnotation:
      id: GoogleCloudVisionV1p2beta1CropHintsAnnotation
      type: object
      description: Set of crop hints that are used to generate new crops when serving images.
      properties:
        cropHints:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1CropHint'
          description: Crop hint results.
          type: array
    GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak:
      type: object
      description: Detected start or end of a structural component.
      id: GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak
      properties:
        type:
          type: string
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - 'End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.'
            - Line break that ends a paragraph.
          description: Detected break type.
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
        isPrefix:
          type: boolean
          description: True if break prepends the element.
    ImageProperties:
      properties:
        dominantColors:
          description: 'If present, dominant colors completed successfully.'
          $ref: '#/components/schemas/DominantColorsAnnotation'
      type: object
      description: 'Stores image properties, such as dominant colors.'
      id: ImageProperties
    ProductSet:
      type: object
      id: ProductSet
      properties:
        indexTime:
          description: 'Output only. The time at which this ProductSet was last indexed. Query results will reflect all updates before this time. If this ProductSet has never been indexed, this timestamp is the default value "1970-01-01T00:00:00Z". This field is ignored when creating a ProductSet.'
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          type: string
          description: The user-provided name for this ProductSet. Must not be empty. Must be at most 4096 characters long.
        indexError:
          description: 'Output only. If there was an error with indexing the product set, the field is populated. This field is ignored when creating a ProductSet.'
          readOnly: true
          $ref: '#/components/schemas/Status'
        name:
          description: 'The resource name of the ProductSet. Format is: `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`. This field is ignored when creating a ProductSet.'
          type: string
      description: 'A ProductSet contains Products. A ProductSet can contain a maximum of 1 million reference images. If the limit is exceeded, periodic indexing will fail.'
    GoogleCloudVisionV1p3beta1GcsDestination:
      id: GoogleCloudVisionV1p3beta1GcsDestination
      description: The Google Cloud Storage location where the output will be written to.
      type: object
      properties:
        uri:
          type: string
          description: 'Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with "filenameprefix". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files.'
    AnnotateImageResponse:
      id: AnnotateImageResponse
      properties:
        localizedObjectAnnotations:
          type: array
          description: 'If present, localized object detection has completed successfully. This will be sorted descending by confidence score.'
          items:
            $ref: '#/components/schemas/LocalizedObjectAnnotation'
        imagePropertiesAnnotation:
          description: 'If present, image properties were extracted successfully.'
          $ref: '#/components/schemas/ImageProperties'
        logoAnnotations:
          items:
            $ref: '#/components/schemas/EntityAnnotation'
          description: 'If present, logo detection has completed successfully.'
          type: array
        safeSearchAnnotation:
          description: 'If present, safe-search annotation has completed successfully.'
          $ref: '#/components/schemas/SafeSearchAnnotation'
        cropHintsAnnotation:
          $ref: '#/components/schemas/CropHintsAnnotation'
          description: 'If present, crop hints have completed successfully.'
        productSearchResults:
          $ref: '#/components/schemas/ProductSearchResults'
          description: 'If present, product search has completed successfully.'
        labelAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/EntityAnnotation'
          description: 'If present, label detection has completed successfully.'
        landmarkAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/EntityAnnotation'
          description: 'If present, landmark detection has completed successfully.'
        error:
          description: 'If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set.'
          $ref: '#/components/schemas/Status'
        webDetection:
          $ref: '#/components/schemas/WebDetection'
          description: 'If present, web detection has completed successfully.'
        textAnnotations:
          description: 'If present, text (OCR) detection has completed successfully.'
          type: array
          items:
            $ref: '#/components/schemas/EntityAnnotation'
        fullTextAnnotation:
          description: 'If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text.'
          $ref: '#/components/schemas/TextAnnotation'
        faceAnnotations:
          description: 'If present, face detection has completed successfully.'
          type: array
          items:
            $ref: '#/components/schemas/FaceAnnotation'
        context:
          description: 'If present, contextual information is needed to understand where this image comes from.'
          $ref: '#/components/schemas/ImageAnnotationContext'
      description: Response to an image annotation request.
      type: object
    GoogleCloudVisionV1p1beta1CropHintsAnnotation:
      type: object
      description: Set of crop hints that are used to generate new crops when serving images.
      properties:
        cropHints:
          description: Crop hint results.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1CropHint'
      id: GoogleCloudVisionV1p1beta1CropHintsAnnotation
    GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation:
      id: GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation
      properties:
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        score:
          description: 'Score of the result. Range [0, 1].'
          format: float
          type: number
        name:
          description: 'Object name, expressed in its `language_code` language.'
          type: string
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
      description: Prediction for what the object in the bounding box is.
      type: object
    GoogleCloudVisionV1p2beta1Symbol:
      description: A single symbol representation.
      id: GoogleCloudVisionV1p2beta1Symbol
      properties:
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty'
          description: Additional information detected for the symbol.
        confidence:
          format: float
          description: 'Confidence of the OCR results for the symbol. Range [0, 1].'
          type: number
        text:
          type: string
          description: The actual UTF-8 representation of the symbol.
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
          description: 'The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
      type: object
    GoogleCloudVisionV1p3beta1OutputConfig:
      properties:
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1GcsDestination'
          description: The Google Cloud Storage location to write the output(s) to.
        batchSize:
          format: int32
          type: integer
          description: 'The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations.'
      type: object
      id: GoogleCloudVisionV1p3beta1OutputConfig
      description: The desired output location and metadata.
    CropHintsAnnotation:
      id: CropHintsAnnotation
      properties:
        cropHints:
          items:
            $ref: '#/components/schemas/CropHint'
          type: array
          description: Crop hint results.
      description: Set of crop hints that are used to generate new crops when serving images.
      type: object
    GoogleCloudVisionV1p3beta1WebDetectionWebImage:
      properties:
        url:
          description: The result image URL.
          type: string
        score:
          type: number
          format: float
          description: (Deprecated) Overall relevancy score for the image.
      id: GoogleCloudVisionV1p3beta1WebDetectionWebImage
      description: Metadata for online images.
      type: object
    GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult:
      description: Information about the products similar to a single product in a query image.
      properties:
        objectAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation'
          type: array
          description: List of generic predictions for the object in the bounding box.
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
          description: The bounding polygon around the product detected in the query image.
        results:
          description: 'List of results, one for each product match.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResultsResult'
          type: array
      type: object
      id: GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult
    GoogleCloudVisionV1p2beta1AnnotateFileResponse:
      type: object
      properties:
        inputConfig:
          description: Information about the file for which this response is generated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1InputConfig'
        responses:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1AnnotateImageResponse'
          description: Individual responses to images found within the file. This field will be empty if the `error` field is set.
        error:
          $ref: '#/components/schemas/Status'
          description: 'If set, represents the error message for the failed request. The `responses` field will not be set in this case.'
        totalPages:
          format: int32
          description: This field gives the total number of pages in the file.
          type: integer
      id: GoogleCloudVisionV1p2beta1AnnotateFileResponse
      description: 'Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.'
    GoogleCloudVisionV1p3beta1ProductKeyValue:
      id: GoogleCloudVisionV1p3beta1ProductKeyValue
      type: object
      description: A product label represented as a key-value pair.
      properties:
        key:
          type: string
          description: The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
        value:
          description: The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
          type: string
    BatchAnnotateImagesResponse:
      properties:
        responses:
          description: Individual responses to image annotation requests within the batch.
          type: array
          items:
            $ref: '#/components/schemas/AnnotateImageResponse'
      id: BatchAnnotateImagesResponse
      description: Response to a batch image annotation request.
      type: object
    GoogleCloudVisionV1p1beta1FaceAnnotation:
      id: GoogleCloudVisionV1p1beta1FaceAnnotation
      type: object
      properties:
        landmarks:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1FaceAnnotationLandmark'
          description: Detected face landmarks.
          type: array
        detectionConfidence:
          description: 'Detection confidence. Range [0, 1].'
          format: float
          type: number
        fdBoundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
          description: 'The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the "amount of skin" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix.'
        blurredLikelihood:
          description: Blurred likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        sorrowLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Sorrow likelihood.
        tiltAngle:
          type: number
          description: 'Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image''s horizontal plane. Range [-180,180].'
          format: float
        surpriseLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: Surprise likelihood.
        joyLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Joy likelihood.
        panAngle:
          type: number
          description: 'Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180].'
          format: float
        headwearLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Headwear likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        landmarkingConfidence:
          format: float
          type: number
          description: 'Face landmarking confidence. Range [0, 1].'
        angerLikelihood:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Anger likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        boundingPoly:
          description: The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to "frame" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
        underExposedLikelihood:
          type: string
          description: Under-exposed likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        rollAngle:
          format: float
          type: number
          description: 'Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].'
      description: A face annotation object contains the results of face detection.
    GoogleCloudVisionV1p3beta1CropHintsAnnotation:
      id: GoogleCloudVisionV1p3beta1CropHintsAnnotation
      properties:
        cropHints:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1CropHint'
          description: Crop hint results.
          type: array
      description: Set of crop hints that are used to generate new crops when serving images.
      type: object
    GoogleCloudVisionV1p1beta1Word:
      type: object
      properties:
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
          description: 'The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty'
          description: Additional information detected for the word.
        confidence:
          description: 'Confidence of the OCR results for the word. Range [0, 1].'
          format: float
          type: number
        symbols:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Symbol'
          description: List of symbols in the word. The order of the symbols follows the natural reading order.
          type: array
      id: GoogleCloudVisionV1p1beta1Word
      description: A word representation.
    GoogleCloudVisionV1p4beta1ReferenceImage:
      id: GoogleCloudVisionV1p4beta1ReferenceImage
      properties:
        boundingPolys:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: 'Optional. Bounding polygons around the areas of interest in the reference image. If this field is empty, the system will try to detect regions of interest. At most 10 bounding polygons will be used. The provided shape is converted into a non-rotated rectangle. Once converted, the small edge of the rectangle must be greater than or equal to 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5 is not).'
        uri:
          description: 'Required. The Google Cloud Storage URI of the reference image. The URI must start with `gs://`.'
          type: string
        name:
          description: 'The resource name of the reference image. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`. This field is ignored when creating a reference image.'
          type: string
      type: object
      description: 'A `ReferenceImage` represents a product image and its associated metadata, such as bounding boxes.'
    GoogleCloudVisionV1p1beta1ImageAnnotationContext:
      id: GoogleCloudVisionV1p1beta1ImageAnnotationContext
      description: 'If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.'
      type: object
      properties:
        uri:
          description: The URI of the file used to produce the image.
          type: string
        pageNumber:
          description: 'If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image.'
          format: int32
          type: integer
    GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation:
      type: object
      properties:
        name:
          description: 'Object name, expressed in its `language_code` language.'
          type: string
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: Image region to which this object belongs. This must be populated.
        score:
          type: number
          description: 'Score of the result. Range [0, 1].'
          format: float
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
      id: GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation
      description: Set of detected objects with bounding boxes.
    GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation:
      id: GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation
      properties:
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        score:
          description: 'Score of the result. Range [0, 1].'
          format: float
          type: number
        mid:
          type: string
          description: Object ID that should align with EntityAnnotation mid.
        name:
          description: 'Object name, expressed in its `language_code` language.'
          type: string
      type: object
      description: Prediction for what the object in the bounding box is.
    GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult:
      type: object
      description: Information about the products similar to a single product in a query image.
      id: GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult
      properties:
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: The bounding polygon around the product detected in the query image.
        objectAnnotations:
          description: List of generic predictions for the object in the bounding box.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation'
          type: array
        results:
          type: array
          description: 'List of results, one for each product match.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResultsResult'
    Operation:
      properties:
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        response:
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
      type: object
      description: This resource represents a long-running operation that is the result of a network API call.
      id: Operation
    GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation:
      description: Prediction for what the object in the bounding box is.
      type: object
      id: GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation
      properties:
        score:
          format: float
          description: 'Score of the result. Range [0, 1].'
          type: number
        mid:
          type: string
          description: Object ID that should align with EntityAnnotation mid.
        languageCode:
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
        name:
          description: 'Object name, expressed in its `language_code` language.'
          type: string
    GoogleCloudVisionV1p1beta1WebDetectionWebPage:
      id: GoogleCloudVisionV1p1beta1WebDetectionWebPage
      type: object
      description: Metadata for web pages.
      properties:
        fullMatchingImages:
          type: array
          description: Fully matching images on the page. Can include resized copies of the query image.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage'
        score:
          format: float
          type: number
          description: (Deprecated) Overall relevancy score for the web page.
        url:
          type: string
          description: The result web page URL.
        pageTitle:
          description: 'Title for the web page, may contain HTML markups.'
          type: string
        partialMatchingImages:
          description: Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage'
    OperationMetadata:
      description: Contains metadata for the BatchAnnotateImages operation.
      type: object
      properties:
        state:
          type: string
          description: Current state of the batch operation.
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
        updateTime:
          description: The time when the operation result was last updated.
          format: google-datetime
          type: string
        createTime:
          format: google-datetime
          type: string
          description: The time when the batch request was received.
      id: OperationMetadata
    GoogleCloudVisionV1p1beta1ProductSearchResults:
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResultsResult'
          description: 'List of results, one for each product match.'
        productGroupedResults:
          description: 'List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult'
        indexTime:
          type: string
          format: google-datetime
          description: Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results.
      type: object
      description: Results for a product search request.
      id: GoogleCloudVisionV1p1beta1ProductSearchResults
    Vertex:
      type: object
      description: 'A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.'
      properties:
        'y':
          format: int32
          description: Y coordinate.
          type: integer
        x:
          format: int32
          description: X coordinate.
          type: integer
      id: Vertex
    GoogleCloudVisionV1p1beta1Property:
      properties:
        name:
          description: Name of the property.
          type: string
        value:
          type: string
          description: Value of the property.
        uint64Value:
          type: string
          description: Value of numeric properties.
          format: uint64
      id: GoogleCloudVisionV1p1beta1Property
      type: object
      description: A `Property` consists of a user-supplied name/value pair.
    GoogleCloudVisionV1p3beta1WebDetectionWebEntity:
      type: object
      id: GoogleCloudVisionV1p3beta1WebDetectionWebEntity
      properties:
        entityId:
          type: string
          description: Opaque entity ID.
        description:
          type: string
          description: 'Canonical description of the entity, in English.'
        score:
          description: Overall relevancy score for the entity. Not normalized and not comparable across different image queries.
          format: float
          type: number
      description: Entity deduced from similar images on the Internet.
    ImageSource:
      description: External image source (Google Cloud Storage or web URL image location).
      properties:
        gcsImageUri:
          description: '**Use `image_uri` instead.** The Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.'
          type: string
        imageUri:
          description: 'The URI of the source image. Can be either: 1. A Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info. 2. A publicly-accessible image HTTP/HTTPS URL. When fetching images from HTTP/HTTPS URLs, Google cannot guarantee that the request will be completed. Your request may fail if the specified host denies the request (e.g. due to request throttling or DOS prevention), or if Google throttles requests to the site for abuse prevention. You should not depend on externally-hosted images for production applications. When both `gcs_image_uri` and `image_uri` are specified, `image_uri` takes precedence.'
          type: string
      id: ImageSource
      type: object
    GoogleCloudVisionV1p2beta1ImageAnnotationContext:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
          description: 'If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image.'
        uri:
          type: string
          description: The URI of the file used to produce the image.
      description: 'If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.'
      id: GoogleCloudVisionV1p2beta1ImageAnnotationContext
    DetectedLanguage:
      type: object
      description: Detected language for a structural component.
      properties:
        confidence:
          type: number
          format: float
          description: 'Confidence of detected language. Range [0, 1].'
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
      id: DetectedLanguage
    Result:
      properties:
        image:
          type: string
          description: The resource name of the image from the product that is the closest match to the query.
        product:
          $ref: '#/components/schemas/Product'
          description: The Product.
        score:
          type: number
          description: 'A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).'
          format: float
      description: Information about a product.
      id: Result
      type: object
    GoogleCloudVisionV1p3beta1FaceAnnotation:
      id: GoogleCloudVisionV1p3beta1FaceAnnotation
      type: object
      description: A face annotation object contains the results of face detection.
      properties:
        surpriseLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Surprise likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        joyLikelihood:
          description: Joy likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        rollAngle:
          format: float
          type: number
          description: 'Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].'
        detectionConfidence:
          format: float
          description: 'Detection confidence. Range [0, 1].'
          type: number
        fdBoundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: 'The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the "amount of skin" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix.'
        underExposedLikelihood:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Under-exposed likelihood.
        landmarkingConfidence:
          description: 'Face landmarking confidence. Range [0, 1].'
          format: float
          type: number
        panAngle:
          type: number
          description: 'Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180].'
          format: float
        blurredLikelihood:
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Blurred likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to "frame" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated.
        tiltAngle:
          format: float
          type: number
          description: 'Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image''s horizontal plane. Range [-180,180].'
        landmarks:
          description: Detected face landmarks.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1FaceAnnotationLandmark'
        sorrowLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Sorrow likelihood.
        headwearLikelihood:
          description: Headwear likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        angerLikelihood:
          description: Anger likelihood.
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
    GoogleCloudVisionV1p3beta1BatchOperationMetadata:
      id: GoogleCloudVisionV1p3beta1BatchOperationMetadata
      description: 'Metadata for the batch operations such as the current state. This is included in the `metadata` field of the `Operation` returned by the `GetOperation` call of the `google::longrunning::Operations` service.'
      type: object
      properties:
        submitTime:
          format: google-datetime
          type: string
          description: The time when the batch request was submitted to the server.
        endTime:
          format: google-datetime
          type: string
          description: The time when the batch request is finished and google.longrunning.Operation.done is set to true.
        state:
          description: The current state of the batch operation.
          type: string
          enumDescriptions:
            - Invalid.
            - Request is actively being processed.
            - The request is done and at least one item has been successfully processed.
            - The request is done and no item has been successfully processed.
            - The request is done after the longrunning.Operations.CancelOperation has been called by the user. Any records that were processed before the cancel command are output as specified in the request.
          enum:
            - STATE_UNSPECIFIED
            - PROCESSING
            - SUCCESSFUL
            - FAILED
            - CANCELLED
    CropHintsParams:
      properties:
        aspectRatios:
          type: array
          description: 'Aspect ratios in floats, representing the ratio of the width to the height of the image. For example, if the desired aspect ratio is 4/3, the corresponding float value should be 1.33333. If not specified, the best possible crop is returned. The number of provided aspect ratios is limited to a maximum of 16; any aspect ratios provided after the 16th are ignored.'
          items:
            type: number
            format: float
      id: CropHintsParams
      description: Parameters for crop hints annotation request.
      type: object
    GoogleCloudVisionV1p4beta1ProductKeyValue:
      id: GoogleCloudVisionV1p4beta1ProductKeyValue
      description: A product label represented as a key-value pair.
      type: object
      properties:
        value:
          description: The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
          type: string
        key:
          type: string
          description: The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
    GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak:
      type: object
      description: Detected start or end of a structural component.
      properties:
        isPrefix:
          description: True if break prepends the element.
          type: boolean
        type:
          description: Detected break type.
          type: string
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - 'End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.'
            - Line break that ends a paragraph.
      id: GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak
    GoogleCloudVisionV1p1beta1AnnotateFileResponse:
      id: GoogleCloudVisionV1p1beta1AnnotateFileResponse
      properties:
        error:
          $ref: '#/components/schemas/Status'
          description: 'If set, represents the error message for the failed request. The `responses` field will not be set in this case.'
        responses:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1AnnotateImageResponse'
          type: array
          description: Individual responses to images found within the file. This field will be empty if the `error` field is set.
        inputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1InputConfig'
          description: Information about the file for which this response is generated.
        totalPages:
          format: int32
          type: integer
          description: This field gives the total number of pages in the file.
      description: 'Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.'
      type: object
    GoogleCloudVisionV1p3beta1WebDetectionWebPage:
      id: GoogleCloudVisionV1p3beta1WebDetectionWebPage
      description: Metadata for web pages.
      properties:
        score:
          format: float
          type: number
          description: (Deprecated) Overall relevancy score for the web page.
        fullMatchingImages:
          description: Fully matching images on the page. Can include resized copies of the query image.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage'
        partialMatchingImages:
          description: Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage'
        pageTitle:
          description: 'Title for the web page, may contain HTML markups.'
          type: string
        url:
          type: string
          description: The result web page URL.
      type: object
    GoogleCloudVisionV1p4beta1AnnotateFileResponse:
      type: object
      properties:
        responses:
          description: Individual responses to images found within the file. This field will be empty if the `error` field is set.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1AnnotateImageResponse'
          type: array
        totalPages:
          format: int32
          description: This field gives the total number of pages in the file.
          type: integer
        inputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1InputConfig'
          description: Information about the file for which this response is generated.
        error:
          $ref: '#/components/schemas/Status'
          description: 'If set, represents the error message for the failed request. The `responses` field will not be set in this case.'
      id: GoogleCloudVisionV1p4beta1AnnotateFileResponse
      description: 'Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.'
    GoogleCloudVisionV1p3beta1Position:
      properties:
        z:
          format: float
          description: Z coordinate (or depth).
          type: number
        'y':
          description: Y coordinate.
          format: float
          type: number
        x:
          format: float
          description: X coordinate.
          type: number
      id: GoogleCloudVisionV1p3beta1Position
      description: 'A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image.'
      type: object
    GoogleCloudVisionV1p2beta1LocationInfo:
      properties:
        latLng:
          $ref: '#/components/schemas/LatLng'
          description: lat/long location coordinates.
      type: object
      id: GoogleCloudVisionV1p2beta1LocationInfo
      description: Detected entity location information.
    GoogleCloudVisionV1p2beta1AnnotateImageResponse:
      description: Response to an image annotation request.
      id: GoogleCloudVisionV1p2beta1AnnotateImageResponse
      type: object
      properties:
        logoAnnotations:
          type: array
          description: 'If present, logo detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1EntityAnnotation'
        landmarkAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1EntityAnnotation'
          description: 'If present, landmark detection has completed successfully.'
          type: array
        labelAnnotations:
          type: array
          description: 'If present, label detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1EntityAnnotation'
        fullTextAnnotation:
          description: 'If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotation'
        productSearchResults:
          description: 'If present, product search has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResults'
        context:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ImageAnnotationContext'
          description: 'If present, contextual information is needed to understand where this image comes from.'
        textAnnotations:
          description: 'If present, text (OCR) detection has completed successfully.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1EntityAnnotation'
        faceAnnotations:
          description: 'If present, face detection has completed successfully.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1FaceAnnotation'
        imagePropertiesAnnotation:
          description: 'If present, image properties were extracted successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ImageProperties'
        localizedObjectAnnotations:
          description: 'If present, localized object detection has completed successfully. This will be sorted descending by confidence score.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation'
        cropHintsAnnotation:
          description: 'If present, crop hints have completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1CropHintsAnnotation'
        safeSearchAnnotation:
          description: 'If present, safe-search annotation has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1SafeSearchAnnotation'
        webDetection:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetection'
          description: 'If present, web detection has completed successfully.'
        error:
          $ref: '#/components/schemas/Status'
          description: 'If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set.'
    GoogleCloudVisionV1p4beta1WebDetectionWebImage:
      properties:
        url:
          description: The result image URL.
          type: string
        score:
          format: float
          type: number
          description: (Deprecated) Overall relevancy score for the image.
      description: Metadata for online images.
      type: object
      id: GoogleCloudVisionV1p4beta1WebDetectionWebImage
    AsyncAnnotateFileRequest:
      description: An offline file annotation request.
      type: object
      id: AsyncAnnotateFileRequest
      properties:
        features:
          description: Required. Requested features.
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        outputConfig:
          description: Required. The desired output location and metadata (e.g. format).
          $ref: '#/components/schemas/OutputConfig'
        inputConfig:
          description: Required. Information about the input file.
          $ref: '#/components/schemas/InputConfig'
        imageContext:
          $ref: '#/components/schemas/ImageContext'
          description: Additional context that may accompany the image(s) in the file.
    GoogleCloudVisionV1p4beta1Product:
      description: A Product contains ReferenceImages.
      type: object
      properties:
        productLabels:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductKeyValue'
          type: array
          description: 'Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. "1199". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet.'
        displayName:
          type: string
          description: The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long.
        description:
          type: string
          description: User-provided metadata to be stored with this product. Must be at most 4096 characters long.
        productCategory:
          type: string
          description: 'Immutable. The category for the product identified by the reference image. This should be one of "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories "homegoods", "apparel", and "toys" are still supported, but these should not be used for new products.'
        name:
          description: 'The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product.'
          type: string
      id: GoogleCloudVisionV1p4beta1Product
    KeyValue:
      properties:
        value:
          description: The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
          type: string
        key:
          description: The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
          type: string
      id: KeyValue
      description: A product label represented as a key-value pair.
      type: object
    GoogleCloudVisionV1p3beta1ImageAnnotationContext:
      id: GoogleCloudVisionV1p3beta1ImageAnnotationContext
      description: 'If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.'
      properties:
        pageNumber:
          type: integer
          description: 'If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image.'
          format: int32
        uri:
          description: The URI of the file used to produce the image.
          type: string
      type: object
    GoogleCloudVisionV1p2beta1EntityAnnotation:
      description: Set of detected entity features.
      type: object
      properties:
        properties:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Property'
          description: 'Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.'
          type: array
        confidence:
          type: number
          description: '**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the "Eiffel Tower" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].'
          format: float
          deprecated: true
        description:
          description: 'Entity textual description, expressed in its `locale` language.'
          type: string
        topicality:
          description: 'The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of "tower" is likely higher to an image containing the detected "Eiffel Tower" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].'
          type: number
          format: float
        mid:
          type: string
          description: 'Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).'
        score:
          type: number
          format: float
          description: 'Overall score of the result. Range [0, 1].'
        locations:
          type: array
          description: 'The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1LocationInfo'
        locale:
          type: string
          description: The language code for the locale in which the entity textual `description` is expressed.
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
          description: Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features.
      id: GoogleCloudVisionV1p2beta1EntityAnnotation
    GoogleCloudVisionV1p4beta1ImageAnnotationContext:
      description: 'If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.'
      id: GoogleCloudVisionV1p4beta1ImageAnnotationContext
      type: object
      properties:
        uri:
          type: string
          description: The URI of the file used to produce the image.
        pageNumber:
          format: int32
          description: 'If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image.'
          type: integer
    ListProductSetsResponse:
      id: ListProductSetsResponse
      description: Response message for the `ListProductSets` method.
      type: object
      properties:
        productSets:
          description: List of ProductSets.
          type: array
          items:
            $ref: '#/components/schemas/ProductSet'
        nextPageToken:
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
          type: string
    ProductSearchResults:
      description: Results for a product search request.
      properties:
        indexTime:
          description: Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results.
          format: google-datetime
          type: string
        results:
          description: 'List of results, one for each product match.'
          items:
            $ref: '#/components/schemas/Result'
          type: array
        productGroupedResults:
          description: 'List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results.'
          items:
            $ref: '#/components/schemas/GroupedResult'
          type: array
      type: object
      id: ProductSearchResults
    Word:
      id: Word
      description: A word representation.
      type: object
      properties:
        symbols:
          type: array
          items:
            $ref: '#/components/schemas/Symbol'
          description: List of symbols in the word. The order of the symbols follows the natural reading order.
        confidence:
          type: number
          description: 'Confidence of the OCR results for the word. Range [0, 1].'
          format: float
        property:
          $ref: '#/components/schemas/TextProperty'
          description: Additional information detected for the word.
        boundingBox:
          description: 'The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/BoundingPoly'
    GoogleCloudVisionV1p3beta1ColorInfo:
      type: object
      properties:
        score:
          type: number
          description: 'Image-specific score for this color. Value in range [0, 1].'
          format: float
        color:
          description: RGB components of the color.
          $ref: '#/components/schemas/Color'
        pixelFraction:
          format: float
          description: 'The fraction of pixels the color occupies in the image. Value in range [0, 1].'
          type: number
      id: GoogleCloudVisionV1p3beta1ColorInfo
      description: 'Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.'
    GoogleCloudVisionV1p3beta1Word:
      properties:
        confidence:
          type: number
          format: float
          description: 'Confidence of the OCR results for the word. Range [0, 1].'
        boundingBox:
          description: 'The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
        symbols:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Symbol'
          description: List of symbols in the word. The order of the symbols follows the natural reading order.
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty'
          description: Additional information detected for the word.
      description: A word representation.
      type: object
      id: GoogleCloudVisionV1p3beta1Word
    GoogleCloudVisionV1p2beta1Word:
      description: A word representation.
      properties:
        confidence:
          type: number
          description: 'Confidence of the OCR results for the word. Range [0, 1].'
          format: float
        boundingBox:
          description: 'The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
        symbols:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Symbol'
          type: array
          description: List of symbols in the word. The order of the symbols follows the natural reading order.
        property:
          description: Additional information detected for the word.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty'
      type: object
      id: GoogleCloudVisionV1p2beta1Word
    GoogleCloudVisionV1p4beta1ImportProductSetsResponse:
      type: object
      description: Response message for the `ImportProductSets` method. This message is returned by the google.longrunning.Operations.GetOperation method in the returned google.longrunning.Operation.response field.
      properties:
        statuses:
          items:
            $ref: '#/components/schemas/Status'
          description: 'The rpc status for each ImportProductSet request, including both successes and errors. The number of statuses here matches the number of lines in the csv file, and statuses[i] stores the success or failure status of processing the i-th line of the csv, starting from line 0.'
          type: array
        referenceImages:
          description: The list of reference_images that are imported successfully.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ReferenceImage'
      id: GoogleCloudVisionV1p4beta1ImportProductSetsResponse
    TextDetectionParams:
      id: TextDetectionParams
      description: Parameters for text detections. This is used to control TEXT_DETECTION and DOCUMENT_TEXT_DETECTION features.
      type: object
      properties:
        advancedOcrOptions:
          type: array
          items:
            type: string
          description: 'A list of advanced OCR options to further fine-tune OCR behavior. Current valid values are: - `legacy_layout`: a heuristics layout detection algorithm, which serves as an alternative to the current ML-based layout detection algorithm. Customers can choose the best suitable layout algorithm based on their situation.'
        enableTextDetectionConfidenceScore:
          description: 'By default, Cloud Vision API only includes confidence score for DOCUMENT_TEXT_DETECTION result. Set the flag to true to include confidence score for TEXT_DETECTION as well.'
          type: boolean
    GoogleCloudVisionV1p1beta1CropHint:
      properties:
        confidence:
          format: float
          description: 'Confidence of this being a salient region. Range [0, 1].'
          type: number
        importanceFraction:
          type: number
          format: float
          description: Fraction of importance of this salient region with respect to the original image.
        boundingPoly:
          description: The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
      id: GoogleCloudVisionV1p1beta1CropHint
      description: Single crop hint that is used to generate a new crop when serving an image.
      type: object
    GoogleCloudVisionV1p4beta1FaceRecognitionResult:
      id: GoogleCloudVisionV1p4beta1FaceRecognitionResult
      description: Information about a face's identity.
      type: object
      properties:
        celebrity:
          description: The Celebrity that this face was matched to.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Celebrity'
        confidence:
          format: float
          description: 'Recognition confidence. Range [0, 1].'
          type: number
    GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult:
      description: Information about the products similar to a single product in a query image.
      properties:
        boundingPoly:
          description: The bounding polygon around the product detected in the query image.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
        objectAnnotations:
          type: array
          description: List of generic predictions for the object in the bounding box.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation'
        results:
          description: 'List of results, one for each product match.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResultsResult'
          type: array
      id: GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult
      type: object
    GoogleCloudVisionV1p4beta1GcsDestination:
      properties:
        uri:
          description: 'Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with "filenameprefix". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files.'
          type: string
      id: GoogleCloudVisionV1p4beta1GcsDestination
      type: object
      description: The Google Cloud Storage location where the output will be written to.
    GoogleCloudVisionV1p3beta1WebDetection:
      id: GoogleCloudVisionV1p3beta1WebDetection
      properties:
        partialMatchingImages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage'
          description: Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
        visuallySimilarImages:
          description: The visually similar image results.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage'
          type: array
        bestGuessLabels:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebLabel'
          description: The service's best guess as to the topic of the request image. Inferred from similar images on the open web.
        webEntities:
          description: Deduced entities from similar images on the Internet.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebEntity'
        fullMatchingImages:
          description: Fully matching images from the Internet. Can include resized copies of the query image.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage'
        pagesWithMatchingImages:
          description: Web pages containing the matching images from the Internet.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebPage'
      type: object
      description: Relevant information for the image from the Internet.
    GoogleCloudVisionV1p3beta1ProductSearchResults:
      properties:
        results:
          type: array
          description: 'List of results, one for each product match.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResultsResult'
        indexTime:
          format: google-datetime
          type: string
          description: Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results.
        productGroupedResults:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult'
          description: 'List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results.'
      type: object
      description: Results for a product search request.
      id: GoogleCloudVisionV1p3beta1ProductSearchResults
    TextAnnotation:
      description: 'TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.'
      type: object
      properties:
        pages:
          type: array
          items:
            $ref: '#/components/schemas/Page'
          description: List of pages detected by OCR.
        text:
          type: string
          description: UTF-8 text detected on the pages.
      id: TextAnnotation
    GoogleCloudVisionV1p1beta1SafeSearchAnnotation:
      description: 'Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).'
      properties:
        racy:
          type: string
          description: 'Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.'
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        violence:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Likelihood that this image contains violent content.
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        medical:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: Likelihood that this is a medical image.
        spoof:
          description: Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        adult:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: 'Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities.'
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
      id: GoogleCloudVisionV1p1beta1SafeSearchAnnotation
      type: object
    GoogleCloudVisionV1p4beta1Symbol:
      properties:
        text:
          type: string
          description: The actual UTF-8 representation of the symbol.
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: 'The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        confidence:
          description: 'Confidence of the OCR results for the symbol. Range [0, 1].'
          type: number
          format: float
        property:
          description: Additional information detected for the symbol.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty'
      description: A single symbol representation.
      type: object
      id: GoogleCloudVisionV1p4beta1Symbol
    GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak:
      id: GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak
      type: object
      properties:
        type:
          description: Detected break type.
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - 'End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.'
            - Line break that ends a paragraph.
          type: string
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
        isPrefix:
          type: boolean
          description: True if break prepends the element.
      description: Detected start or end of a structural component.
    GoogleCloudVisionV1p1beta1NormalizedVertex:
      type: object
      properties:
        x:
          format: float
          type: number
          description: X coordinate.
        'y':
          format: float
          description: Y coordinate.
          type: number
      description: 'A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.'
      id: GoogleCloudVisionV1p1beta1NormalizedVertex
    GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse:
      id: GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse
      type: object
      description: The response for a single offline file annotation request.
      properties:
        outputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1OutputConfig'
          description: The output location and metadata from AsyncAnnotateFileRequest.
    ReferenceImage:
      properties:
        uri:
          type: string
          description: 'Required. The Google Cloud Storage URI of the reference image. The URI must start with `gs://`.'
        name:
          type: string
          description: 'The resource name of the reference image. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`. This field is ignored when creating a reference image.'
        boundingPolys:
          items:
            $ref: '#/components/schemas/BoundingPoly'
          description: 'Optional. Bounding polygons around the areas of interest in the reference image. If this field is empty, the system will try to detect regions of interest. At most 10 bounding polygons will be used. The provided shape is converted into a non-rotated rectangle. Once converted, the small edge of the rectangle must be greater than or equal to 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5 is not).'
          type: array
      description: 'A `ReferenceImage` represents a product image and its associated metadata, such as bounding boxes.'
      id: ReferenceImage
      type: object
    GoogleCloudVisionV1p4beta1FaceAnnotation:
      type: object
      id: GoogleCloudVisionV1p4beta1FaceAnnotation
      description: A face annotation object contains the results of face detection.
      properties:
        landmarkingConfidence:
          description: 'Face landmarking confidence. Range [0, 1].'
          type: number
          format: float
        rollAngle:
          description: 'Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].'
          type: number
          format: float
        blurredLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          description: Blurred likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        boundingPoly:
          description: The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to "frame" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
        detectionConfidence:
          description: 'Detection confidence. Range [0, 1].'
          format: float
          type: number
        headwearLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: Headwear likelihood.
        surpriseLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Surprise likelihood.
          type: string
        panAngle:
          description: 'Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180].'
          format: float
          type: number
        fdBoundingPoly:
          description: 'The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the "amount of skin" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
        underExposedLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          description: Under-exposed likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        joyLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          description: Joy likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        landmarks:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1FaceAnnotationLandmark'
          type: array
          description: Detected face landmarks.
        recognitionResult:
          type: array
          description: 'Additional recognition information. Only computed if image_context.face_recognition_params is provided, **and** a match is found to a Celebrity in the input CelebritySet. This field is sorted in order of decreasing confidence values.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1FaceRecognitionResult'
        angerLikelihood:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Anger likelihood.
        tiltAngle:
          type: number
          format: float
          description: 'Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image''s horizontal plane. Range [-180,180].'
        sorrowLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Sorrow likelihood.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
    Position:
      description: 'A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image.'
      id: Position
      properties:
        x:
          description: X coordinate.
          format: float
          type: number
        'y':
          description: Y coordinate.
          type: number
          format: float
        z:
          description: Z coordinate (or depth).
          type: number
          format: float
      type: object
    GoogleCloudVisionV1p3beta1BoundingPoly:
      id: GoogleCloudVisionV1p3beta1BoundingPoly
      properties:
        normalizedVertices:
          type: array
          description: The bounding polygon normalized vertices.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1NormalizedVertex'
        vertices:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Vertex'
          type: array
          description: The bounding polygon vertices.
      description: A bounding polygon for the detected image annotation.
      type: object
    AnnotateImageRequest:
      description: 'Request for performing Google Cloud Vision API tasks over a user-provided image, with user-requested features, and with context information.'
      id: AnnotateImageRequest
      type: object
      properties:
        imageContext:
          description: Additional context that may accompany the image.
          $ref: '#/components/schemas/ImageContext'
        image:
          $ref: '#/components/schemas/Image'
          description: The image to be processed.
        features:
          items:
            $ref: '#/components/schemas/Feature'
          type: array
          description: Requested features.
    FaceAnnotation:
      id: FaceAnnotation
      properties:
        boundingPoly:
          description: The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to "frame" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated.
          $ref: '#/components/schemas/BoundingPoly'
        angerLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Anger likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        blurredLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Blurred likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        detectionConfidence:
          description: 'Detection confidence. Range [0, 1].'
          type: number
          format: float
        headwearLikelihood:
          description: Headwear likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        landmarkingConfidence:
          description: 'Face landmarking confidence. Range [0, 1].'
          type: number
          format: float
        rollAngle:
          format: float
          type: number
          description: 'Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].'
        panAngle:
          type: number
          description: 'Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180].'
          format: float
        surpriseLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Surprise likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        tiltAngle:
          format: float
          type: number
          description: 'Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image''s horizontal plane. Range [-180,180].'
        sorrowLikelihood:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Sorrow likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        underExposedLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Under-exposed likelihood.
          type: string
        landmarks:
          items:
            $ref: '#/components/schemas/Landmark'
          description: Detected face landmarks.
          type: array
        fdBoundingPoly:
          description: 'The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the "amount of skin" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix.'
          $ref: '#/components/schemas/BoundingPoly'
        joyLikelihood:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Joy likelihood.
      type: object
      description: A face annotation object contains the results of face detection.
    GoogleCloudVisionV1p2beta1FaceAnnotationLandmark:
      properties:
        type:
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - 'Nose, bottom right.'
            - 'Nose, bottom left.'
            - 'Nose, bottom center.'
            - 'Left eye, top boundary.'
            - 'Left eye, right corner.'
            - 'Left eye, bottom boundary.'
            - 'Left eye, left corner.'
            - 'Right eye, top boundary.'
            - 'Right eye, right corner.'
            - 'Right eye, bottom boundary.'
            - 'Right eye, left corner.'
            - 'Left eyebrow, upper midpoint.'
            - 'Right eyebrow, upper midpoint.'
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
          description: Face landmark type.
          type: string
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
        position:
          description: Face landmark position.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Position'
      description: 'A face-specific landmark (for example, a face feature).'
      id: GoogleCloudVisionV1p2beta1FaceAnnotationLandmark
      type: object
    GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation:
      description: Set of detected objects with bounding boxes.
      id: GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation
      type: object
      properties:
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: Image region to which this object belongs. This must be populated.
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        score:
          type: number
          description: 'Score of the result. Range [0, 1].'
          format: float
        name:
          type: string
          description: 'Object name, expressed in its `language_code` language.'
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
    BatchAnnotateFilesRequest:
      properties:
        parent:
          type: string
          description: 'Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.'
        requests:
          items:
            $ref: '#/components/schemas/AnnotateFileRequest'
          description: Required. The list of file annotation requests. Right now we support only one AnnotateFileRequest in BatchAnnotateFilesRequest.
          type: array
      id: BatchAnnotateFilesRequest
      type: object
      description: A list of requests to annotate files using the BatchAnnotateFiles API.
    GoogleCloudVisionV1p2beta1Product:
      description: A Product contains ReferenceImages.
      type: object
      id: GoogleCloudVisionV1p2beta1Product
      properties:
        productLabels:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductKeyValue'
          description: 'Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. "1199". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet.'
          type: array
        description:
          type: string
          description: User-provided metadata to be stored with this product. Must be at most 4096 characters long.
        displayName:
          description: The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long.
          type: string
        name:
          description: 'The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product.'
          type: string
        productCategory:
          type: string
          description: 'Immutable. The category for the product identified by the reference image. This should be one of "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories "homegoods", "apparel", and "toys" are still supported, but these should not be used for new products.'
    GoogleCloudVisionV1p2beta1SafeSearchAnnotation:
      properties:
        spoof:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        racy:
          description: 'Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.'
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        adult:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: 'Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities.'
          type: string
        medical:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Likelihood that this is a medical image.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        violence:
          type: string
          description: Likelihood that this image contains violent content.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
      type: object
      description: 'Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).'
      id: GoogleCloudVisionV1p2beta1SafeSearchAnnotation
    GoogleCloudVisionV1p2beta1ProductKeyValue:
      properties:
        key:
          type: string
          description: The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
        value:
          type: string
          description: The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
      id: GoogleCloudVisionV1p2beta1ProductKeyValue
      description: A product label represented as a key-value pair.
      type: object
    GoogleCloudVisionV1p2beta1Page:
      type: object
      description: Detected page from OCR.
      id: GoogleCloudVisionV1p2beta1Page
      properties:
        height:
          description: Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
          format: int32
          type: integer
        blocks:
          description: 'List of blocks of text, images etc on this page.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Block'
          type: array
        width:
          type: integer
          description: Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
          format: int32
        confidence:
          type: number
          description: 'Confidence of the OCR results on the page. Range [0, 1].'
          format: float
        property:
          description: Additional information detected on the page.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty'
    TextProperty:
      properties:
        detectedBreak:
          $ref: '#/components/schemas/DetectedBreak'
          description: Detected start or end of a text segment.
        detectedLanguages:
          type: array
          items:
            $ref: '#/components/schemas/DetectedLanguage'
          description: A list of detected languages together with confidence.
      description: Additional information detected on the structural component.
      id: TextProperty
      type: object
    AsyncAnnotateFileResponse:
      type: object
      description: The response for a single offline file annotation request.
      id: AsyncAnnotateFileResponse
      properties:
        outputConfig:
          description: The output location and metadata from AsyncAnnotateFileRequest.
          $ref: '#/components/schemas/OutputConfig'
    ProductSearchParams:
      properties:
        productCategories:
          type: array
          items:
            type: string
          description: 'The list of product categories to search in. Currently, we only consider the first category, and either "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1", or "general-v1" should be specified. The legacy categories "homegoods", "apparel", and "toys" are still supported but will be deprecated. For new products, please use "homegoods-v2", "apparel-v2", or "toys-v2" for better product search accuracy. It is recommended to migrate existing products to these categories as well.'
        productSet:
          type: string
          description: 'The resource name of a ProductSet to be searched for similar images. Format is: `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`.'
        boundingPoly:
          $ref: '#/components/schemas/BoundingPoly'
          description: 'The bounding polygon around the area of interest in the image. If it is not specified, system discretion will be applied.'
        filter:
          description: 'The filtering expression. This can be used to restrict search results based on Product labels. We currently support an AND of OR of key-value expressions, where each expression within an OR must have the same key. An ''='' should be used to connect the key and value. For example, "(color = red OR color = blue) AND brand = Google" is acceptable, but "(color = red OR brand = Google)" is not acceptable. "color: red" is not acceptable because it uses a '':'' instead of an ''=''.'
          type: string
      type: object
      id: ProductSearchParams
      description: Parameters for a product search request.
    GoogleCloudVisionV1p1beta1ImageProperties:
      properties:
        dominantColors:
          description: 'If present, dominant colors completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1DominantColorsAnnotation'
      description: 'Stores image properties, such as dominant colors.'
      id: GoogleCloudVisionV1p1beta1ImageProperties
      type: object
    GoogleCloudVisionV1p4beta1CropHint:
      description: Single crop hint that is used to generate a new crop when serving an image.
      id: GoogleCloudVisionV1p4beta1CropHint
      properties:
        confidence:
          description: 'Confidence of this being a salient region. Range [0, 1].'
          format: float
          type: number
        boundingPoly:
          description: The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
        importanceFraction:
          format: float
          description: Fraction of importance of this salient region with respect to the original image.
          type: number
      type: object
    GoogleCloudVisionV1p1beta1Vertex:
      description: 'A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.'
      id: GoogleCloudVisionV1p1beta1Vertex
      type: object
      properties:
        'y':
          description: Y coordinate.
          format: int32
          type: integer
        x:
          type: integer
          format: int32
          description: X coordinate.
    GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage:
      description: Detected language for a structural component.
      id: GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage
      type: object
      properties:
        confidence:
          description: 'Confidence of detected language. Range [0, 1].'
          type: number
          format: float
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
    GoogleCloudVisionV1p1beta1TextAnnotationTextProperty:
      properties:
        detectedBreak:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak'
          description: Detected start or end of a text segment.
        detectedLanguages:
          type: array
          description: A list of detected languages together with confidence.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage'
      type: object
      description: Additional information detected on the structural component.
      id: GoogleCloudVisionV1p1beta1TextAnnotationTextProperty
    GoogleCloudVisionV1p3beta1AnnotateFileResponse:
      type: object
      properties:
        inputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1InputConfig'
          description: Information about the file for which this response is generated.
        responses:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1AnnotateImageResponse'
          description: Individual responses to images found within the file. This field will be empty if the `error` field is set.
        totalPages:
          description: This field gives the total number of pages in the file.
          format: int32
          type: integer
        error:
          $ref: '#/components/schemas/Status'
          description: 'If set, represents the error message for the failed request. The `responses` field will not be set in this case.'
      id: GoogleCloudVisionV1p3beta1AnnotateFileResponse
      description: 'Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.'
    GoogleCloudVisionV1p3beta1AnnotateImageResponse:
      description: Response to an image annotation request.
      properties:
        safeSearchAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1SafeSearchAnnotation'
          description: 'If present, safe-search annotation has completed successfully.'
        landmarkAnnotations:
          type: array
          description: 'If present, landmark detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1EntityAnnotation'
        logoAnnotations:
          description: 'If present, logo detection has completed successfully.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1EntityAnnotation'
        fullTextAnnotation:
          description: 'If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotation'
        productSearchResults:
          description: 'If present, product search has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResults'
        textAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1EntityAnnotation'
          description: 'If present, text (OCR) detection has completed successfully.'
          type: array
        error:
          $ref: '#/components/schemas/Status'
          description: 'If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set.'
        localizedObjectAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation'
          description: 'If present, localized object detection has completed successfully. This will be sorted descending by confidence score.'
          type: array
        faceAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1FaceAnnotation'
          description: 'If present, face detection has completed successfully.'
          type: array
        webDetection:
          description: 'If present, web detection has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetection'
        context:
          description: 'If present, contextual information is needed to understand where this image comes from.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ImageAnnotationContext'
        cropHintsAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1CropHintsAnnotation'
          description: 'If present, crop hints have completed successfully.'
        labelAnnotations:
          description: 'If present, label detection has completed successfully.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1EntityAnnotation'
        imagePropertiesAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ImageProperties'
          description: 'If present, image properties were extracted successfully.'
      id: GoogleCloudVisionV1p3beta1AnnotateImageResponse
      type: object
    GcsSource:
      id: GcsSource
      properties:
        uri:
          description: Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported.
          type: string
      type: object
      description: The Google Cloud Storage location where the input will be read from.
    LocalizedObjectAnnotation:
      description: Set of detected objects with bounding boxes.
      id: LocalizedObjectAnnotation
      type: object
      properties:
        name:
          type: string
          description: 'Object name, expressed in its `language_code` language.'
        languageCode:
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
        score:
          description: 'Score of the result. Range [0, 1].'
          format: float
          type: number
        boundingPoly:
          description: Image region to which this object belongs. This must be populated.
          $ref: '#/components/schemas/BoundingPoly'
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
    GoogleCloudVisionV1p2beta1Position:
      type: object
      properties:
        x:
          format: float
          description: X coordinate.
          type: number
        'y':
          format: float
          description: Y coordinate.
          type: number
        z:
          format: float
          type: number
          description: Z coordinate (or depth).
      description: 'A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image.'
      id: GoogleCloudVisionV1p2beta1Position
    GoogleCloudVisionV1p4beta1Paragraph:
      type: object
      id: GoogleCloudVisionV1p4beta1Paragraph
      properties:
        confidence:
          format: float
          description: 'Confidence of the OCR results for the paragraph. Range [0, 1].'
          type: number
        property:
          description: Additional information detected for the paragraph.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty'
        words:
          type: array
          description: List of all words in this paragraph.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Word'
        boundingBox:
          description: 'The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
      description: Structural unit of text representing a number of words in certain order.
    AsyncBatchAnnotateFilesResponse:
      id: AsyncBatchAnnotateFilesResponse
      type: object
      properties:
        responses:
          type: array
          description: 'The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest.'
          items:
            $ref: '#/components/schemas/AsyncAnnotateFileResponse'
      description: Response to an async batch file annotation request.
    GoogleCloudVisionV1p1beta1BoundingPoly:
      id: GoogleCloudVisionV1p1beta1BoundingPoly
      properties:
        vertices:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Vertex'
          description: The bounding polygon vertices.
          type: array
        normalizedVertices:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1NormalizedVertex'
          description: The bounding polygon normalized vertices.
      description: A bounding polygon for the detected image annotation.
      type: object
    WebLabel:
      type: object
      properties:
        languageCode:
          type: string
          description: 'The BCP-47 language code for `label`, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        label:
          description: Label for extra metadata.
          type: string
      id: WebLabel
      description: Label to provide extra metadata for the web detection.
    ProductSetPurgeConfig:
      properties:
        productSetId:
          description: 'The ProductSet that contains the Products to delete. If a Product is a member of product_set_id in addition to other ProductSets, the Product will still be deleted.'
          type: string
      description: Config to control which ProductSet contains the Products to be deleted.
      type: object
      id: ProductSetPurgeConfig
    GoogleCloudVisionV1p2beta1OutputConfig:
      id: GoogleCloudVisionV1p2beta1OutputConfig
      type: object
      description: The desired output location and metadata.
      properties:
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1GcsDestination'
          description: The Google Cloud Storage location to write the output(s) to.
        batchSize:
          format: int32
          type: integer
          description: 'The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations.'
    GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation:
      type: object
      properties:
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
        boundingPoly:
          description: Image region to which this object belongs. This must be populated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
        name:
          description: 'Object name, expressed in its `language_code` language.'
          type: string
        score:
          format: float
          description: 'Score of the result. Range [0, 1].'
          type: number
      description: Set of detected objects with bounding boxes.
      id: GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation
    GoogleCloudVisionV1p1beta1ColorInfo:
      type: object
      description: 'Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.'
      properties:
        color:
          $ref: '#/components/schemas/Color'
          description: RGB components of the color.
        score:
          format: float
          description: 'Image-specific score for this color. Value in range [0, 1].'
          type: number
        pixelFraction:
          format: float
          description: 'The fraction of pixels the color occupies in the image. Value in range [0, 1].'
          type: number
      id: GoogleCloudVisionV1p1beta1ColorInfo
    Property:
      description: A `Property` consists of a user-supplied name/value pair.
      properties:
        uint64Value:
          type: string
          format: uint64
          description: Value of numeric properties.
        name:
          description: Name of the property.
          type: string
        value:
          type: string
          description: Value of the property.
      type: object
      id: Property
    LocationInfo:
      id: LocationInfo
      properties:
        latLng:
          $ref: '#/components/schemas/LatLng'
          description: lat/long location coordinates.
      description: Detected entity location information.
      type: object
    GoogleCloudVisionV1p3beta1OperationMetadata:
      description: Contains metadata for the BatchAnnotateImages operation.
      type: object
      properties:
        createTime:
          format: google-datetime
          type: string
          description: The time when the batch request was received.
        updateTime:
          description: The time when the operation result was last updated.
          format: google-datetime
          type: string
        state:
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
          description: Current state of the batch operation.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
      id: GoogleCloudVisionV1p3beta1OperationMetadata
    GoogleCloudVisionV1p4beta1InputConfig:
      properties:
        mimeType:
          type: string
          description: 'The type of the file. Currently only "application/pdf", "image/tiff" and "image/gif" are supported. Wildcards are not supported.'
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1GcsSource'
          description: The Google Cloud Storage location to read the input from.
        content:
          type: string
          format: byte
          description: 'File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests.'
      description: The desired input location and metadata.
      type: object
      id: GoogleCloudVisionV1p4beta1InputConfig
    GoogleCloudVisionV1p1beta1Product:
      type: object
      description: A Product contains ReferenceImages.
      id: GoogleCloudVisionV1p1beta1Product
      properties:
        productLabels:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductKeyValue'
          description: 'Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. "1199". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet.'
          type: array
        name:
          description: 'The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product.'
          type: string
        displayName:
          type: string
          description: The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long.
        productCategory:
          description: 'Immutable. The category for the product identified by the reference image. This should be one of "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories "homegoods", "apparel", and "toys" are still supported, but these should not be used for new products.'
          type: string
        description:
          type: string
          description: User-provided metadata to be stored with this product. Must be at most 4096 characters long.
    WebPage:
      type: object
      description: Metadata for web pages.
      id: WebPage
      properties:
        partialMatchingImages:
          description: Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          items:
            $ref: '#/components/schemas/WebImage'
          type: array
        url:
          type: string
          description: The result web page URL.
        fullMatchingImages:
          description: Fully matching images on the page. Can include resized copies of the query image.
          type: array
          items:
            $ref: '#/components/schemas/WebImage'
        score:
          format: float
          description: (Deprecated) Overall relevancy score for the web page.
          type: number
        pageTitle:
          type: string
          description: 'Title for the web page, may contain HTML markups.'
    GoogleCloudVisionV1p4beta1GcsSource:
      type: object
      properties:
        uri:
          description: Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported.
          type: string
      description: The Google Cloud Storage location where the input will be read from.
      id: GoogleCloudVisionV1p4beta1GcsSource
    GoogleCloudVisionV1p3beta1Vertex:
      type: object
      id: GoogleCloudVisionV1p3beta1Vertex
      description: 'A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.'
      properties:
        x:
          format: int32
          type: integer
          description: X coordinate.
        'y':
          format: int32
          description: Y coordinate.
          type: integer
    GoogleCloudVisionV1p4beta1BatchOperationMetadata:
      description: 'Metadata for the batch operations such as the current state. This is included in the `metadata` field of the `Operation` returned by the `GetOperation` call of the `google::longrunning::Operations` service.'
      id: GoogleCloudVisionV1p4beta1BatchOperationMetadata
      properties:
        endTime:
          type: string
          format: google-datetime
          description: The time when the batch request is finished and google.longrunning.Operation.done is set to true.
        state:
          enum:
            - STATE_UNSPECIFIED
            - PROCESSING
            - SUCCESSFUL
            - FAILED
            - CANCELLED
          enumDescriptions:
            - Invalid.
            - Request is actively being processed.
            - The request is done and at least one item has been successfully processed.
            - The request is done and no item has been successfully processed.
            - The request is done after the longrunning.Operations.CancelOperation has been called by the user. Any records that were processed before the cancel command are output as specified in the request.
          type: string
          description: The current state of the batch operation.
        submitTime:
          description: The time when the batch request was submitted to the server.
          type: string
          format: google-datetime
      type: object
    WebDetection:
      type: object
      properties:
        webEntities:
          items:
            $ref: '#/components/schemas/WebEntity'
          type: array
          description: Deduced entities from similar images on the Internet.
        fullMatchingImages:
          type: array
          items:
            $ref: '#/components/schemas/WebImage'
          description: Fully matching images from the Internet. Can include resized copies of the query image.
        pagesWithMatchingImages:
          type: array
          description: Web pages containing the matching images from the Internet.
          items:
            $ref: '#/components/schemas/WebPage'
        visuallySimilarImages:
          description: The visually similar image results.
          type: array
          items:
            $ref: '#/components/schemas/WebImage'
        bestGuessLabels:
          type: array
          items:
            $ref: '#/components/schemas/WebLabel'
          description: The service's best guess as to the topic of the request image. Inferred from similar images on the open web.
        partialMatchingImages:
          description: Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          items:
            $ref: '#/components/schemas/WebImage'
          type: array
      id: WebDetection
      description: Relevant information for the image from the Internet.
    GoogleCloudVisionV1p1beta1TextAnnotation:
      type: object
      id: GoogleCloudVisionV1p1beta1TextAnnotation
      properties:
        text:
          type: string
          description: UTF-8 text detected on the pages.
        pages:
          description: List of pages detected by OCR.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Page'
          type: array
      description: 'TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.'
    GoogleCloudVisionV1p3beta1CropHint:
      properties:
        confidence:
          description: 'Confidence of this being a salient region. Range [0, 1].'
          type: number
          format: float
        importanceFraction:
          format: float
          type: number
          description: Fraction of importance of this salient region with respect to the original image.
        boundingPoly:
          description: The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
      type: object
      id: GoogleCloudVisionV1p3beta1CropHint
      description: Single crop hint that is used to generate a new crop when serving an image.
    GoogleCloudVisionV1p1beta1WebDetectionWebImage:
      type: object
      id: GoogleCloudVisionV1p1beta1WebDetectionWebImage
      description: Metadata for online images.
      properties:
        url:
          description: The result image URL.
          type: string
        score:
          description: (Deprecated) Overall relevancy score for the image.
          format: float
          type: number
    BatchAnnotateImagesRequest:
      description: Multiple image annotation requests are batched into a single service call.
      id: BatchAnnotateImagesRequest
      properties:
        requests:
          description: Required. Individual image annotation requests for this batch.
          type: array
          items:
            $ref: '#/components/schemas/AnnotateImageRequest'
        parent:
          description: 'Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.'
          type: string
      type: object
    GoogleCloudVisionV1p4beta1CropHintsAnnotation:
      properties:
        cropHints:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1CropHint'
          description: Crop hint results.
      id: GoogleCloudVisionV1p4beta1CropHintsAnnotation
      type: object
      description: Set of crop hints that are used to generate new crops when serving images.
    EntityAnnotation:
      id: EntityAnnotation
      properties:
        score:
          format: float
          type: number
          description: 'Overall score of the result. Range [0, 1].'
        description:
          type: string
          description: 'Entity textual description, expressed in its `locale` language.'
        properties:
          description: 'Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.'
          items:
            $ref: '#/components/schemas/Property'
          type: array
        topicality:
          type: number
          description: 'The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of "tower" is likely higher to an image containing the detected "Eiffel Tower" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].'
          format: float
        mid:
          type: string
          description: 'Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).'
        boundingPoly:
          $ref: '#/components/schemas/BoundingPoly'
          description: Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features.
        confidence:
          description: '**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the "Eiffel Tower" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].'
          deprecated: true
          format: float
          type: number
        locations:
          description: 'The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.'
          items:
            $ref: '#/components/schemas/LocationInfo'
          type: array
        locale:
          description: The language code for the locale in which the entity textual `description` is expressed.
          type: string
      type: object
      description: Set of detected entity features.
    GoogleCloudVisionV1p1beta1ProductSearchResultsResult:
      description: Information about a product.
      properties:
        image:
          description: The resource name of the image from the product that is the closest match to the query.
          type: string
        score:
          type: number
          description: 'A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).'
          format: float
        product:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Product'
          description: The Product.
      id: GoogleCloudVisionV1p1beta1ProductSearchResultsResult
      type: object
    GoogleCloudVisionV1p3beta1InputConfig:
      description: The desired input location and metadata.
      id: GoogleCloudVisionV1p3beta1InputConfig
      properties:
        gcsSource:
          description: The Google Cloud Storage location to read the input from.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1GcsSource'
        mimeType:
          description: 'The type of the file. Currently only "application/pdf", "image/tiff" and "image/gif" are supported. Wildcards are not supported.'
          type: string
        content:
          description: 'File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests.'
          type: string
          format: byte
      type: object
    GoogleCloudVisionV1p3beta1Page:
      description: Detected page from OCR.
      properties:
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Block'
          description: 'List of blocks of text, images etc on this page.'
        confidence:
          format: float
          description: 'Confidence of the OCR results on the page. Range [0, 1].'
          type: number
        height:
          description: Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
          format: int32
          type: integer
        width:
          description: Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
          format: int32
          type: integer
        property:
          description: Additional information detected on the page.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty'
      id: GoogleCloudVisionV1p3beta1Page
      type: object
    GoogleCloudVisionV1p2beta1TextAnnotationTextProperty:
      type: object
      properties:
        detectedLanguages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage'
          description: A list of detected languages together with confidence.
        detectedBreak:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak'
          description: Detected start or end of a text segment.
      description: Additional information detected on the structural component.
      id: GoogleCloudVisionV1p2beta1TextAnnotationTextProperty
    Product:
      id: Product
      properties:
        productLabels:
          type: array
          description: 'Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. "1199". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet.'
          items:
            $ref: '#/components/schemas/KeyValue'
        name:
          description: 'The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product.'
          type: string
        productCategory:
          type: string
          description: 'Immutable. The category for the product identified by the reference image. This should be one of "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories "homegoods", "apparel", and "toys" are still supported, but these should not be used for new products.'
        displayName:
          type: string
          description: The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long.
        description:
          type: string
          description: User-provided metadata to be stored with this product. Must be at most 4096 characters long.
      description: A Product contains ReferenceImages.
      type: object
    GoogleCloudVisionV1p2beta1Paragraph:
      description: Structural unit of text representing a number of words in certain order.
      id: GoogleCloudVisionV1p2beta1Paragraph
      type: object
      properties:
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty'
          description: Additional information detected for the paragraph.
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
          description: 'The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        confidence:
          description: 'Confidence of the OCR results for the paragraph. Range [0, 1].'
          format: float
          type: number
        words:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Word'
          description: List of all words in this paragraph.
    GoogleCloudVisionV1p4beta1ProductSearchResults:
      type: object
      id: GoogleCloudVisionV1p4beta1ProductSearchResults
      description: Results for a product search request.
      properties:
        indexTime:
          description: Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results.
          format: google-datetime
          type: string
        results:
          type: array
          description: 'List of results, one for each product match.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResultsResult'
        productGroupedResults:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult'
          description: 'List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results.'
    GoogleCloudVisionV1p2beta1WebDetectionWebPage:
      type: object
      id: GoogleCloudVisionV1p2beta1WebDetectionWebPage
      description: Metadata for web pages.
      properties:
        pageTitle:
          type: string
          description: 'Title for the web page, may contain HTML markups.'
        score:
          format: float
          type: number
          description: (Deprecated) Overall relevancy score for the web page.
        fullMatchingImages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage'
          description: Fully matching images on the page. Can include resized copies of the query image.
        partialMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage'
          type: array
          description: Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
        url:
          description: The result web page URL.
          type: string
    GoogleCloudVisionV1p3beta1FaceAnnotationLandmark:
      description: 'A face-specific landmark (for example, a face feature).'
      id: GoogleCloudVisionV1p3beta1FaceAnnotationLandmark
      type: object
      properties:
        position:
          description: Face landmark position.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Position'
        type:
          description: Face landmark type.
          type: string
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - 'Nose, bottom right.'
            - 'Nose, bottom left.'
            - 'Nose, bottom center.'
            - 'Left eye, top boundary.'
            - 'Left eye, right corner.'
            - 'Left eye, bottom boundary.'
            - 'Left eye, left corner.'
            - 'Right eye, top boundary.'
            - 'Right eye, right corner.'
            - 'Right eye, bottom boundary.'
            - 'Right eye, left corner.'
            - 'Left eyebrow, upper midpoint.'
            - 'Right eyebrow, upper midpoint.'
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
    AsyncBatchAnnotateImagesResponse:
      type: object
      properties:
        outputConfig:
          $ref: '#/components/schemas/OutputConfig'
          description: The output location and metadata from AsyncBatchAnnotateImagesRequest.
      id: AsyncBatchAnnotateImagesResponse
      description: Response to an async batch image annotation request.
    GoogleCloudVisionV1p1beta1Block:
      type: object
      description: Logical element on the page.
      properties:
        confidence:
          description: 'Confidence of the OCR results on the block. Range [0, 1].'
          type: number
          format: float
        blockType:
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
          type: string
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
          description: 'Detected block type (text, image etc) for this block.'
        paragraphs:
          description: List of paragraphs in this block (if this blocks is of type text).
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Paragraph'
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty'
          description: Additional information detected for the block.
        boundingBox:
          description: 'The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
      id: GoogleCloudVisionV1p1beta1Block
    GoogleCloudVisionV1p4beta1Vertex:
      properties:
        x:
          type: integer
          format: int32
          description: X coordinate.
        'y':
          type: integer
          description: Y coordinate.
          format: int32
      description: 'A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.'
      type: object
      id: GoogleCloudVisionV1p4beta1Vertex
    GoogleCloudVisionV1p2beta1ProductSearchResultsResult:
      properties:
        score:
          format: float
          description: 'A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).'
          type: number
        image:
          description: The resource name of the image from the product that is the closest match to the query.
          type: string
        product:
          description: The Product.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Product'
      description: Information about a product.
      id: GoogleCloudVisionV1p2beta1ProductSearchResultsResult
      type: object
    GoogleCloudVisionV1p1beta1GcsDestination:
      properties:
        uri:
          type: string
          description: 'Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with "filenameprefix". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files.'
      description: The Google Cloud Storage location where the output will be written to.
      id: GoogleCloudVisionV1p1beta1GcsDestination
      type: object
    GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation:
      description: Set of detected objects with bounding boxes.
      type: object
      properties:
        boundingPoly:
          description: Image region to which this object belongs. This must be populated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
        mid:
          type: string
          description: Object ID that should align with EntityAnnotation mid.
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        name:
          type: string
          description: 'Object name, expressed in its `language_code` language.'
        score:
          type: number
          description: 'Score of the result. Range [0, 1].'
          format: float
      id: GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation
    GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse:
      properties:
        outputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1OutputConfig'
          description: The output location and metadata from AsyncAnnotateFileRequest.
      type: object
      id: GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse
      description: The response for a single offline file annotation request.
    GoogleCloudVisionV1p4beta1ProductSearchResultsResult:
      type: object
      description: Information about a product.
      id: GoogleCloudVisionV1p4beta1ProductSearchResultsResult
      properties:
        score:
          description: 'A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).'
          type: number
          format: float
        product:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Product'
          description: The Product.
        image:
          type: string
          description: The resource name of the image from the product that is the closest match to the query.
    GoogleCloudVisionV1p1beta1AnnotateImageResponse:
      description: Response to an image annotation request.
      properties:
        context:
          description: 'If present, contextual information is needed to understand where this image comes from.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ImageAnnotationContext'
        productSearchResults:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResults'
          description: 'If present, product search has completed successfully.'
        webDetection:
          description: 'If present, web detection has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetection'
        localizedObjectAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation'
          description: 'If present, localized object detection has completed successfully. This will be sorted descending by confidence score.'
        faceAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1FaceAnnotation'
          type: array
          description: 'If present, face detection has completed successfully.'
        imagePropertiesAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ImageProperties'
          description: 'If present, image properties were extracted successfully.'
        textAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1EntityAnnotation'
          description: 'If present, text (OCR) detection has completed successfully.'
        labelAnnotations:
          type: array
          description: 'If present, label detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1EntityAnnotation'
        safeSearchAnnotation:
          description: 'If present, safe-search annotation has completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1SafeSearchAnnotation'
        fullTextAnnotation:
          description: 'If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotation'
        logoAnnotations:
          description: 'If present, logo detection has completed successfully.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1EntityAnnotation'
          type: array
        landmarkAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1EntityAnnotation'
          description: 'If present, landmark detection has completed successfully.'
        error:
          description: 'If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set.'
          $ref: '#/components/schemas/Status'
        cropHintsAnnotation:
          description: 'If present, crop hints have completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1CropHintsAnnotation'
      type: object
      id: GoogleCloudVisionV1p1beta1AnnotateImageResponse
    GoogleCloudVisionV1p2beta1Property:
      id: GoogleCloudVisionV1p2beta1Property
      properties:
        uint64Value:
          description: Value of numeric properties.
          type: string
          format: uint64
        name:
          description: Name of the property.
          type: string
        value:
          description: Value of the property.
          type: string
      type: object
      description: A `Property` consists of a user-supplied name/value pair.
    BatchAnnotateFilesResponse:
      description: A list of file annotation responses.
      type: object
      properties:
        responses:
          items:
            $ref: '#/components/schemas/AnnotateFileResponse'
          description: 'The list of file annotation responses, each response corresponding to each AnnotateFileRequest in BatchAnnotateFilesRequest.'
          type: array
      id: BatchAnnotateFilesResponse
    Feature:
      type: object
      description: 'The type of Google Cloud Vision API detection to perform, and the maximum number of results to return for that type. Multiple `Feature` objects can be specified in the `features` list.'
      id: Feature
      properties:
        type:
          enumDescriptions:
            - Unspecified feature type.
            - Run face detection.
            - Run landmark detection.
            - Run logo detection.
            - Run label detection.
            - 'Run text detection / optical character recognition (OCR). Text detection is optimized for areas of text within a larger image; if the image is a document, use `DOCUMENT_TEXT_DETECTION` instead.'
            - Run dense text document OCR. Takes precedence when both `DOCUMENT_TEXT_DETECTION` and `TEXT_DETECTION` are present.
            - Run Safe Search to detect potentially unsafe or undesirable content.
            - 'Compute a set of image properties, such as the image''s dominant colors.'
            - Run crop hints.
            - Run web detection.
            - Run Product Search.
            - Run localizer for object detection.
          enum:
            - TYPE_UNSPECIFIED
            - FACE_DETECTION
            - LANDMARK_DETECTION
            - LOGO_DETECTION
            - LABEL_DETECTION
            - TEXT_DETECTION
            - DOCUMENT_TEXT_DETECTION
            - SAFE_SEARCH_DETECTION
            - IMAGE_PROPERTIES
            - CROP_HINTS
            - WEB_DETECTION
            - PRODUCT_SEARCH
            - OBJECT_LOCALIZATION
          type: string
          description: The feature type.
        model:
          type: string
          description: 'Model to use for the feature. Supported values: "builtin/stable" (the default if unset) and "builtin/latest". `DOCUMENT_TEXT_DETECTION` and `TEXT_DETECTION` also support "builtin/weekly" for the bleeding edge release updated weekly.'
        maxResults:
          type: integer
          format: int32
          description: 'Maximum number of results of this type. Does not apply to `TEXT_DETECTION`, `DOCUMENT_TEXT_DETECTION`, or `CROP_HINTS`.'
    GoogleCloudVisionV1p1beta1DominantColorsAnnotation:
      type: object
      properties:
        colors:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ColorInfo'
          description: RGB color values with their score and pixel fraction.
          type: array
      id: GoogleCloudVisionV1p1beta1DominantColorsAnnotation
      description: Set of dominant colors and their corresponding scores.
    SafeSearchAnnotation:
      properties:
        spoof:
          description: Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        racy:
          description: 'Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.'
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        adult:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: 'Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities.'
          type: string
        medical:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: Likelihood that this is a medical image.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        violence:
          description: Likelihood that this image contains violent content.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
      description: 'Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).'
      type: object
      id: SafeSearchAnnotation
    GoogleCloudVisionV1p4beta1WebDetectionWebLabel:
      type: object
      description: Label to provide extra metadata for the web detection.
      properties:
        label:
          description: Label for extra metadata.
          type: string
        languageCode:
          type: string
          description: 'The BCP-47 language code for `label`, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
      id: GoogleCloudVisionV1p4beta1WebDetectionWebLabel
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      type: object
      id: Empty
    GoogleCloudVisionV1p3beta1EntityAnnotation:
      id: GoogleCloudVisionV1p3beta1EntityAnnotation
      description: Set of detected entity features.
      type: object
      properties:
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features.
        topicality:
          description: 'The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of "tower" is likely higher to an image containing the detected "Eiffel Tower" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].'
          format: float
          type: number
        properties:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Property'
          type: array
          description: 'Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.'
        locale:
          type: string
          description: The language code for the locale in which the entity textual `description` is expressed.
        description:
          description: 'Entity textual description, expressed in its `locale` language.'
          type: string
        mid:
          description: 'Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).'
          type: string
        locations:
          description: 'The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1LocationInfo'
          type: array
        score:
          type: number
          description: 'Overall score of the result. Range [0, 1].'
          format: float
        confidence:
          format: float
          description: '**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the "Eiffel Tower" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].'
          deprecated: true
          type: number
    ImageContext:
      properties:
        cropHintsParams:
          $ref: '#/components/schemas/CropHintsParams'
          description: Parameters for crop hints annotation request.
        textDetectionParams:
          description: Parameters for text detection and document text detection.
          $ref: '#/components/schemas/TextDetectionParams'
        webDetectionParams:
          description: Parameters for web detection.
          $ref: '#/components/schemas/WebDetectionParams'
        latLongRect:
          $ref: '#/components/schemas/LatLongRect'
          description: Not used.
        productSearchParams:
          $ref: '#/components/schemas/ProductSearchParams'
          description: Parameters for product search.
        languageHints:
          items:
            type: string
          type: array
          description: 'List of languages to use for TEXT_DETECTION. In most cases, an empty value yields the best results since it enables automatic language detection. For languages based on the Latin alphabet, setting `language_hints` is not needed. In rare cases, when the language of the text in the image is known, setting a hint will help get better results (although it will be a significant hindrance if the hint is wrong). Text detection returns an error if one or more of the specified languages is not one of the [supported languages](https://cloud.google.com/vision/docs/languages).'
      id: ImageContext
      type: object
      description: Image context and/or feature-specific parameters.
    GoogleCloudVisionV1p1beta1WebDetectionWebLabel:
      description: Label to provide extra metadata for the web detection.
      id: GoogleCloudVisionV1p1beta1WebDetectionWebLabel
      properties:
        languageCode:
          type: string
          description: 'The BCP-47 language code for `label`, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        label:
          description: Label for extra metadata.
          type: string
      type: object
    ColorInfo:
      description: 'Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.'
      type: object
      properties:
        score:
          type: number
          format: float
          description: 'Image-specific score for this color. Value in range [0, 1].'
        color:
          description: RGB components of the color.
          $ref: '#/components/schemas/Color'
        pixelFraction:
          format: float
          description: 'The fraction of pixels the color occupies in the image. Value in range [0, 1].'
          type: number
      id: ColorInfo
    GoogleCloudVisionV1p3beta1Paragraph:
      description: Structural unit of text representing a number of words in certain order.
      id: GoogleCloudVisionV1p3beta1Paragraph
      properties:
        boundingBox:
          description: 'The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty'
          description: Additional information detected for the paragraph.
        words:
          description: List of all words in this paragraph.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Word'
          type: array
        confidence:
          format: float
          description: 'Confidence of the OCR results for the paragraph. Range [0, 1].'
          type: number
      type: object
    GoogleCloudVisionV1p1beta1Paragraph:
      id: GoogleCloudVisionV1p1beta1Paragraph
      description: Structural unit of text representing a number of words in certain order.
      type: object
      properties:
        property:
          description: Additional information detected for the paragraph.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty'
        boundingBox:
          description: 'The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
        confidence:
          type: number
          description: 'Confidence of the OCR results for the paragraph. Range [0, 1].'
          format: float
        words:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Word'
          description: List of all words in this paragraph.
          type: array
    GoogleCloudVisionV1p3beta1LocationInfo:
      id: GoogleCloudVisionV1p3beta1LocationInfo
      type: object
      properties:
        latLng:
          $ref: '#/components/schemas/LatLng'
          description: lat/long location coordinates.
      description: Detected entity location information.
    LatLongRect:
      type: object
      id: LatLongRect
      description: Rectangle determined by min and max `LatLng` pairs.
      properties:
        maxLatLng:
          $ref: '#/components/schemas/LatLng'
          description: Max lat/long pair.
        minLatLng:
          description: Min lat/long pair.
          $ref: '#/components/schemas/LatLng'
    GoogleCloudVisionV1p2beta1ProductSearchResults:
      description: Results for a product search request.
      properties:
        results:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResultsResult'
          type: array
          description: 'List of results, one for each product match.'
        indexTime:
          format: google-datetime
          description: Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results.
          type: string
        productGroupedResults:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult'
          description: 'List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results.'
          type: array
      type: object
      id: GoogleCloudVisionV1p2beta1ProductSearchResults
    GoogleCloudVisionV1p1beta1LocationInfo:
      id: GoogleCloudVisionV1p1beta1LocationInfo
      properties:
        latLng:
          description: lat/long location coordinates.
          $ref: '#/components/schemas/LatLng'
      description: Detected entity location information.
      type: object
    ListOperationsResponse:
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          type: array
          description: A list of operations that matches the specified filter in the request.
      type: object
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
    RemoveProductFromProductSetRequest:
      id: RemoveProductFromProductSetRequest
      type: object
      description: Request message for the `RemoveProductFromProductSet` method.
      properties:
        product:
          type: string
          description: 'Required. The resource name for the Product to be removed from this ProductSet. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`'
    GoogleCloudVisionV1p2beta1WebDetectionWebImage:
      type: object
      description: Metadata for online images.
      properties:
        score:
          type: number
          format: float
          description: (Deprecated) Overall relevancy score for the image.
        url:
          description: The result image URL.
          type: string
      id: GoogleCloudVisionV1p2beta1WebDetectionWebImage
    WebDetectionParams:
      properties:
        includeGeoResults:
          type: boolean
          description: Whether to include results derived from the geo information in the image.
      description: Parameters for web detection request.
      id: WebDetectionParams
      type: object
    GoogleCloudVisionV1p3beta1WebDetectionWebLabel:
      description: Label to provide extra metadata for the web detection.
      id: GoogleCloudVisionV1p3beta1WebDetectionWebLabel
      type: object
      properties:
        label:
          type: string
          description: Label for extra metadata.
        languageCode:
          type: string
          description: 'The BCP-47 language code for `label`, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
    ImportProductSetsRequest:
      description: Request message for the `ImportProductSets` method.
      id: ImportProductSetsRequest
      type: object
      properties:
        inputConfig:
          description: Required. The input content for the list of requests.
          $ref: '#/components/schemas/ImportProductSetsInputConfig'
    GoogleCloudVisionV1p3beta1Symbol:
      description: A single symbol representation.
      id: GoogleCloudVisionV1p3beta1Symbol
      properties:
        text:
          description: The actual UTF-8 representation of the symbol.
          type: string
        confidence:
          type: number
          format: float
          description: 'Confidence of the OCR results for the symbol. Range [0, 1].'
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: 'The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        property:
          description: Additional information detected for the symbol.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty'
      type: object
    GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse:
      type: object
      description: The response for a single offline file annotation request.
      properties:
        outputConfig:
          description: The output location and metadata from AsyncAnnotateFileRequest.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1OutputConfig'
      id: GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse
    GoogleCloudVisionV1p2beta1NormalizedVertex:
      properties:
        'y':
          description: Y coordinate.
          format: float
          type: number
        x:
          description: X coordinate.
          type: number
          format: float
      id: GoogleCloudVisionV1p2beta1NormalizedVertex
      type: object
      description: 'A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.'
    GcsDestination:
      description: The Google Cloud Storage location where the output will be written to.
      type: object
      id: GcsDestination
      properties:
        uri:
          type: string
          description: 'Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with "filenameprefix". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files.'
    GoogleCloudVisionV1p4beta1NormalizedVertex:
      description: 'A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.'
      id: GoogleCloudVisionV1p4beta1NormalizedVertex
      properties:
        'y':
          description: Y coordinate.
          format: float
          type: number
        x:
          format: float
          description: X coordinate.
          type: number
      type: object
    GoogleCloudVisionV1p4beta1OutputConfig:
      id: GoogleCloudVisionV1p4beta1OutputConfig
      properties:
        gcsDestination:
          description: The Google Cloud Storage location to write the output(s) to.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1GcsDestination'
        batchSize:
          type: integer
          format: int32
          description: 'The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations.'
      type: object
      description: The desired output location and metadata.
    GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage:
      properties:
        confidence:
          type: number
          format: float
          description: 'Confidence of detected language. Range [0, 1].'
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
      type: object
      id: GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage
      description: Detected language for a structural component.
    AnnotateFileRequest:
      properties:
        pages:
          type: array
          items:
            type: integer
            format: int32
          description: 'Pages of the file to perform image annotation. Pages starts from 1, we assume the first page of the file is page 1. At most 5 pages are supported per request. Pages can be negative. Page 1 means the first page. Page 2 means the second page. Page -1 means the last page. Page -2 means the second to the last page. If the file is GIF instead of PDF or TIFF, page refers to GIF frames. If this field is empty, by default the service performs image annotation for the first 5 pages of the file.'
        imageContext:
          $ref: '#/components/schemas/ImageContext'
          description: Additional context that may accompany the image(s) in the file.
        inputConfig:
          $ref: '#/components/schemas/InputConfig'
          description: Required. Information about the input file.
        features:
          items:
            $ref: '#/components/schemas/Feature'
          type: array
          description: Required. Requested features.
      description: 'A request to annotate one single file, e.g. a PDF, TIFF or GIF file.'
      id: AnnotateFileRequest
      type: object
    GoogleCloudVisionV1p1beta1WebDetection:
      type: object
      id: GoogleCloudVisionV1p1beta1WebDetection
      properties:
        partialMatchingImages:
          description: Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage'
        fullMatchingImages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage'
          description: Fully matching images from the Internet. Can include resized copies of the query image.
        pagesWithMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebPage'
          description: Web pages containing the matching images from the Internet.
          type: array
        visuallySimilarImages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage'
          description: The visually similar image results.
        webEntities:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebEntity'
          description: Deduced entities from similar images on the Internet.
          type: array
        bestGuessLabels:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebLabel'
          description: The service's best guess as to the topic of the request image. Inferred from similar images on the open web.
          type: array
      description: Relevant information for the image from the Internet.
    AsyncBatchAnnotateFilesRequest:
      properties:
        parent:
          type: string
          description: 'Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.'
        requests:
          items:
            $ref: '#/components/schemas/AsyncAnnotateFileRequest'
          type: array
          description: Required. Individual async file annotation requests for this batch.
      description: Multiple async file annotation requests are batched into a single service call.
      id: AsyncBatchAnnotateFilesRequest
      type: object
    GoogleCloudVisionV1p3beta1NormalizedVertex:
      description: 'A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.'
      properties:
        x:
          description: X coordinate.
          format: float
          type: number
        'y':
          description: Y coordinate.
          type: number
          format: float
      id: GoogleCloudVisionV1p3beta1NormalizedVertex
      type: object
    GoogleCloudVisionV1p4beta1SafeSearchAnnotation:
      type: object
      id: GoogleCloudVisionV1p4beta1SafeSearchAnnotation
      properties:
        racy:
          description: 'Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.'
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        medical:
          description: Likelihood that this is a medical image.
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        violence:
          description: Likelihood that this image contains violent content.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        spoof:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          description: Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        adult:
          description: 'Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities.'
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
      description: 'Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).'
    ListProductsInProductSetResponse:
      id: ListProductsInProductSetResponse
      properties:
        nextPageToken:
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
          type: string
        products:
          items:
            $ref: '#/components/schemas/Product'
          description: The list of Products.
          type: array
      description: Response message for the `ListProductsInProductSet` method.
      type: object
    NormalizedVertex:
      properties:
        x:
          description: X coordinate.
          type: number
          format: float
        'y':
          format: float
          type: number
          description: Y coordinate.
      description: 'A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.'
      type: object
      id: NormalizedVertex
    GoogleCloudVisionV1p2beta1ImageProperties:
      properties:
        dominantColors:
          description: 'If present, dominant colors completed successfully.'
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1DominantColorsAnnotation'
      id: GoogleCloudVisionV1p2beta1ImageProperties
      description: 'Stores image properties, such as dominant colors.'
      type: object
    GroupedResult:
      description: Information about the products similar to a single product in a query image.
      type: object
      properties:
        boundingPoly:
          description: The bounding polygon around the product detected in the query image.
          $ref: '#/components/schemas/BoundingPoly'
        objectAnnotations:
          items:
            $ref: '#/components/schemas/ObjectAnnotation'
          description: List of generic predictions for the object in the bounding box.
          type: array
        results:
          items:
            $ref: '#/components/schemas/Result'
          type: array
          description: 'List of results, one for each product match.'
      id: GroupedResult
    GoogleCloudVisionV1p2beta1CropHint:
      properties:
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
          description: The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale.
        confidence:
          format: float
          description: 'Confidence of this being a salient region. Range [0, 1].'
          type: number
        importanceFraction:
          format: float
          type: number
          description: Fraction of importance of this salient region with respect to the original image.
      description: Single crop hint that is used to generate a new crop when serving an image.
      type: object
      id: GoogleCloudVisionV1p2beta1CropHint
    ListProductsResponse:
      type: object
      properties:
        products:
          items:
            $ref: '#/components/schemas/Product'
          type: array
          description: List of products.
        nextPageToken:
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
          type: string
      id: ListProductsResponse
      description: Response message for the `ListProducts` method.
    GoogleCloudVisionV1p4beta1TextAnnotation:
      properties:
        text:
          type: string
          description: UTF-8 text detected on the pages.
        pages:
          description: List of pages detected by OCR.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Page'
          type: array
      description: 'TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.'
      type: object
      id: GoogleCloudVisionV1p4beta1TextAnnotation
    OutputConfig:
      properties:
        batchSize:
          type: integer
          description: 'The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations.'
          format: int32
        gcsDestination:
          $ref: '#/components/schemas/GcsDestination'
          description: The Google Cloud Storage location to write the output(s) to.
      description: The desired output location and metadata.
      id: OutputConfig
      type: object
    PurgeProductsRequest:
      description: Request message for the `PurgeProducts` method.
      properties:
        force:
          description: The default value is false. Override this value to true to actually perform the purge.
          type: boolean
        productSetPurgeConfig:
          description: Specify which ProductSet contains the Products to be deleted.
          $ref: '#/components/schemas/ProductSetPurgeConfig'
        deleteOrphanProducts:
          description: 'If delete_orphan_products is true, all Products that are not in any ProductSet will be deleted.'
          type: boolean
      type: object
      id: PurgeProductsRequest
    DetectedBreak:
      id: DetectedBreak
      properties:
        isPrefix:
          description: True if break prepends the element.
          type: boolean
        type:
          description: Detected break type.
          type: string
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - 'End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.'
            - Line break that ends a paragraph.
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
      type: object
      description: Detected start or end of a structural component.
    GoogleCloudVisionV1p4beta1OperationMetadata:
      id: GoogleCloudVisionV1p4beta1OperationMetadata
      properties:
        state:
          description: Current state of the batch operation.
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
          type: string
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
        createTime:
          description: The time when the batch request was received.
          type: string
          format: google-datetime
        updateTime:
          format: google-datetime
          description: The time when the operation result was last updated.
          type: string
      description: Contains metadata for the BatchAnnotateImages operation.
      type: object
    WebEntity:
      type: object
      id: WebEntity
      properties:
        description:
          type: string
          description: 'Canonical description of the entity, in English.'
        entityId:
          description: Opaque entity ID.
          type: string
        score:
          type: number
          format: float
          description: Overall relevancy score for the entity. Not normalized and not comparable across different image queries.
      description: Entity deduced from similar images on the Internet.
    GoogleCloudVisionV1p4beta1Word:
      properties:
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: 'The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
        confidence:
          description: 'Confidence of the OCR results for the word. Range [0, 1].'
          format: float
          type: number
        symbols:
          description: List of symbols in the word. The order of the symbols follows the natural reading order.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Symbol'
        property:
          description: Additional information detected for the word.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty'
      type: object
      description: A word representation.
      id: GoogleCloudVisionV1p4beta1Word
    GoogleCloudVisionV1p2beta1TextAnnotation:
      type: object
      description: 'TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.'
      id: GoogleCloudVisionV1p2beta1TextAnnotation
      properties:
        text:
          type: string
          description: UTF-8 text detected on the pages.
        pages:
          description: List of pages detected by OCR.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Page'
    GoogleCloudVisionV1p2beta1OperationMetadata:
      type: object
      properties:
        updateTime:
          type: string
          format: google-datetime
          description: The time when the operation result was last updated.
        state:
          type: string
          description: Current state of the batch operation.
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
        createTime:
          description: The time when the batch request was received.
          type: string
          format: google-datetime
      id: GoogleCloudVisionV1p2beta1OperationMetadata
      description: Contains metadata for the BatchAnnotateImages operation.
    Block:
      properties:
        property:
          $ref: '#/components/schemas/TextProperty'
          description: Additional information detected for the block.
        paragraphs:
          description: List of paragraphs in this block (if this blocks is of type text).
          type: array
          items:
            $ref: '#/components/schemas/Paragraph'
        confidence:
          description: 'Confidence of the OCR results on the block. Range [0, 1].'
          format: float
          type: number
        blockType:
          type: string
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
          description: 'Detected block type (text, image etc) for this block.'
        boundingBox:
          $ref: '#/components/schemas/BoundingPoly'
          description: 'The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
      id: Block
      description: Logical element on the page.
      type: object
    ObjectAnnotation:
      type: object
      properties:
        name:
          type: string
          description: 'Object name, expressed in its `language_code` language.'
        mid:
          type: string
          description: Object ID that should align with EntityAnnotation mid.
        score:
          type: number
          description: 'Score of the result. Range [0, 1].'
          format: float
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
      id: ObjectAnnotation
      description: Prediction for what the object in the bounding box is.
    ImportProductSetsResponse:
      description: Response message for the `ImportProductSets` method. This message is returned by the google.longrunning.Operations.GetOperation method in the returned google.longrunning.Operation.response field.
      type: object
      properties:
        referenceImages:
          type: array
          items:
            $ref: '#/components/schemas/ReferenceImage'
          description: The list of reference_images that are imported successfully.
        statuses:
          description: 'The rpc status for each ImportProductSet request, including both successes and errors. The number of statuses here matches the number of lines in the csv file, and statuses[i] stores the success or failure status of processing the i-th line of the csv, starting from line 0.'
          items:
            $ref: '#/components/schemas/Status'
          type: array
      id: ImportProductSetsResponse
    AddProductToProductSetRequest:
      id: AddProductToProductSetRequest
      type: object
      description: Request message for the `AddProductToProductSet` method.
      properties:
        product:
          type: string
          description: 'Required. The resource name for the Product to be added to this ProductSet. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`'
    GoogleCloudVisionV1p2beta1FaceAnnotation:
      description: A face annotation object contains the results of face detection.
      id: GoogleCloudVisionV1p2beta1FaceAnnotation
      type: object
      properties:
        sorrowLikelihood:
          description: Sorrow likelihood.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        headwearLikelihood:
          description: Headwear likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        boundingPoly:
          description: The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to "frame" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
        angerLikelihood:
          description: Anger likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        underExposedLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: Under-exposed likelihood.
        panAngle:
          format: float
          type: number
          description: 'Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180].'
        tiltAngle:
          description: 'Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image''s horizontal plane. Range [-180,180].'
          type: number
          format: float
        rollAngle:
          type: number
          description: 'Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].'
          format: float
        joyLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          description: Joy likelihood.
        blurredLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Blurred likelihood.
        landmarks:
          description: Detected face landmarks.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1FaceAnnotationLandmark'
        detectionConfidence:
          type: number
          description: 'Detection confidence. Range [0, 1].'
          format: float
        landmarkingConfidence:
          type: number
          description: 'Face landmarking confidence. Range [0, 1].'
          format: float
        surpriseLikelihood:
          description: Surprise likelihood.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        fdBoundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
          description: 'The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the "amount of skin" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix.'
    Paragraph:
      id: Paragraph
      properties:
        property:
          description: Additional information detected for the paragraph.
          $ref: '#/components/schemas/TextProperty'
        boundingBox:
          description: 'The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/BoundingPoly'
        words:
          description: List of all words in this paragraph.
          type: array
          items:
            $ref: '#/components/schemas/Word'
        confidence:
          description: 'Confidence of the OCR results for the paragraph. Range [0, 1].'
          format: float
          type: number
      description: Structural unit of text representing a number of words in certain order.
      type: object
    GoogleCloudVisionV1p1beta1EntityAnnotation:
      description: Set of detected entity features.
      properties:
        score:
          type: number
          format: float
          description: 'Overall score of the result. Range [0, 1].'
        locations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1LocationInfo'
          description: 'The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.'
        topicality:
          type: number
          format: float
          description: 'The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of "tower" is likely higher to an image containing the detected "Eiffel Tower" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].'
        boundingPoly:
          description: Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
        properties:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Property'
          type: array
          description: 'Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.'
        locale:
          description: The language code for the locale in which the entity textual `description` is expressed.
          type: string
        confidence:
          type: number
          deprecated: true
          format: float
          description: '**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the "Eiffel Tower" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].'
        description:
          type: string
          description: 'Entity textual description, expressed in its `locale` language.'
        mid:
          description: 'Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).'
          type: string
      id: GoogleCloudVisionV1p1beta1EntityAnnotation
      type: object
    GoogleCloudVisionV1p4beta1Page:
      id: GoogleCloudVisionV1p4beta1Page
      type: object
      description: Detected page from OCR.
      properties:
        confidence:
          description: 'Confidence of the OCR results on the page. Range [0, 1].'
          format: float
          type: number
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty'
          description: Additional information detected on the page.
        blocks:
          description: 'List of blocks of text, images etc on this page.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Block'
          type: array
        width:
          format: int32
          type: integer
          description: Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
        height:
          type: integer
          description: Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
          format: int32
    ListReferenceImagesResponse:
      properties:
        nextPageToken:
          type: string
          description: 'The next_page_token returned from a previous List request, if any.'
        pageSize:
          type: integer
          description: 'The maximum number of items to return. Default 10, maximum 100.'
          format: int32
        referenceImages:
          items:
            $ref: '#/components/schemas/ReferenceImage'
          description: The list of reference images.
          type: array
      description: Response message for the `ListReferenceImages` method.
      id: ListReferenceImagesResponse
      type: object
    GoogleCloudVisionV1p2beta1WebDetectionWebLabel:
      description: Label to provide extra metadata for the web detection.
      type: object
      id: GoogleCloudVisionV1p2beta1WebDetectionWebLabel
      properties:
        label:
          description: Label for extra metadata.
          type: string
        languageCode:
          type: string
          description: 'The BCP-47 language code for `label`, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
    GoogleCloudVisionV1p1beta1Symbol:
      properties:
        text:
          type: string
          description: The actual UTF-8 representation of the symbol.
        confidence:
          type: number
          description: 'Confidence of the OCR results for the symbol. Range [0, 1].'
          format: float
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty'
          description: Additional information detected for the symbol.
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
          description: 'The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
      type: object
      description: A single symbol representation.
      id: GoogleCloudVisionV1p1beta1Symbol
    GoogleCloudVisionV1p4beta1WebDetectionWebEntity:
      description: Entity deduced from similar images on the Internet.
      type: object
      id: GoogleCloudVisionV1p4beta1WebDetectionWebEntity
      properties:
        description:
          type: string
          description: 'Canonical description of the entity, in English.'
        entityId:
          type: string
          description: Opaque entity ID.
        score:
          description: Overall relevancy score for the entity. Not normalized and not comparable across different image queries.
          type: number
          format: float
    GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse:
      type: object
      properties:
        outputConfig:
          description: The output location and metadata from AsyncBatchAnnotateImagesRequest.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1OutputConfig'
      description: Response to an async batch image annotation request.
      id: GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse
    GoogleCloudVisionV1p3beta1AsyncBatchAnnotateFilesResponse:
      type: object
      description: Response to an async batch file annotation request.
      id: GoogleCloudVisionV1p3beta1AsyncBatchAnnotateFilesResponse
      properties:
        responses:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse'
          description: 'The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest.'
          type: array
    GoogleCloudVisionV1p1beta1ProductKeyValue:
      properties:
        value:
          description: The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
          type: string
        key:
          type: string
          description: The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.
      description: A product label represented as a key-value pair.
      type: object
      id: GoogleCloudVisionV1p1beta1ProductKeyValue
    Image:
      type: object
      description: Client image to perform Google Cloud Vision API tasks over.
      properties:
        content:
          type: string
          format: byte
          description: 'Image content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateImages requests. It does not work for AsyncBatchAnnotateImages requests.'
        source:
          description: 'Google Cloud Storage image location, or publicly-accessible image URL. If both `content` and `source` are provided for an image, `content` takes precedence and is used to perform the image annotation request.'
          $ref: '#/components/schemas/ImageSource'
      id: Image
    GoogleCloudVisionV1p3beta1ProductSearchResultsResult:
      properties:
        product:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Product'
          description: The Product.
        score:
          format: float
          type: number
          description: 'A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).'
        image:
          type: string
          description: The resource name of the image from the product that is the closest match to the query.
      type: object
      description: Information about a product.
      id: GoogleCloudVisionV1p3beta1ProductSearchResultsResult
    GoogleCloudVisionV1p4beta1TextAnnotationTextProperty:
      id: GoogleCloudVisionV1p4beta1TextAnnotationTextProperty
      properties:
        detectedBreak:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak'
          description: Detected start or end of a text segment.
        detectedLanguages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage'
          description: A list of detected languages together with confidence.
      description: Additional information detected on the structural component.
      type: object
    GoogleCloudVisionV1p4beta1FaceAnnotationLandmark:
      properties:
        position:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Position'
          description: Face landmark position.
        type:
          description: Face landmark type.
          type: string
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - 'Nose, bottom right.'
            - 'Nose, bottom left.'
            - 'Nose, bottom center.'
            - 'Left eye, top boundary.'
            - 'Left eye, right corner.'
            - 'Left eye, bottom boundary.'
            - 'Left eye, left corner.'
            - 'Right eye, top boundary.'
            - 'Right eye, right corner.'
            - 'Right eye, bottom boundary.'
            - 'Right eye, left corner.'
            - 'Left eyebrow, upper midpoint.'
            - 'Right eyebrow, upper midpoint.'
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
      description: 'A face-specific landmark (for example, a face feature).'
      id: GoogleCloudVisionV1p4beta1FaceAnnotationLandmark
      type: object
    AnnotateFileResponse:
      id: AnnotateFileResponse
      type: object
      description: 'Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.'
      properties:
        inputConfig:
          description: Information about the file for which this response is generated.
          $ref: '#/components/schemas/InputConfig'
        totalPages:
          description: This field gives the total number of pages in the file.
          type: integer
          format: int32
        error:
          description: 'If set, represents the error message for the failed request. The `responses` field will not be set in this case.'
          $ref: '#/components/schemas/Status'
        responses:
          description: Individual responses to images found within the file. This field will be empty if the `error` field is set.
          items:
            $ref: '#/components/schemas/AnnotateImageResponse'
          type: array
    InputConfig:
      id: InputConfig
      properties:
        gcsSource:
          $ref: '#/components/schemas/GcsSource'
          description: The Google Cloud Storage location to read the input from.
        content:
          type: string
          format: byte
          description: 'File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests.'
        mimeType:
          description: 'The type of the file. Currently only "application/pdf", "image/tiff" and "image/gif" are supported. Wildcards are not supported.'
          type: string
      description: The desired input location and metadata.
      type: object
    GoogleCloudVisionV1p3beta1GcsSource:
      type: object
      description: The Google Cloud Storage location where the input will be read from.
      properties:
        uri:
          type: string
          description: Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported.
      id: GoogleCloudVisionV1p3beta1GcsSource
    GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse:
      properties:
        outputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1OutputConfig'
          description: The output location and metadata from AsyncAnnotateFileRequest.
      id: GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse
      description: The response for a single offline file annotation request.
      type: object
    GoogleCloudVisionV1p4beta1LocationInfo:
      properties:
        latLng:
          description: lat/long location coordinates.
          $ref: '#/components/schemas/LatLng'
      description: Detected entity location information.
      id: GoogleCloudVisionV1p4beta1LocationInfo
      type: object
    GoogleCloudVisionV1p1beta1FaceAnnotationLandmark:
      properties:
        position:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Position'
          description: Face landmark position.
        type:
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - 'Nose, bottom right.'
            - 'Nose, bottom left.'
            - 'Nose, bottom center.'
            - 'Left eye, top boundary.'
            - 'Left eye, right corner.'
            - 'Left eye, bottom boundary.'
            - 'Left eye, left corner.'
            - 'Right eye, top boundary.'
            - 'Right eye, right corner.'
            - 'Right eye, bottom boundary.'
            - 'Right eye, left corner.'
            - 'Left eyebrow, upper midpoint.'
            - 'Right eyebrow, upper midpoint.'
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
          description: Face landmark type.
          type: string
      id: GoogleCloudVisionV1p1beta1FaceAnnotationLandmark
      type: object
      description: 'A face-specific landmark (for example, a face feature).'
    GoogleCloudVisionV1p2beta1WebDetection:
      description: Relevant information for the image from the Internet.
      type: object
      id: GoogleCloudVisionV1p2beta1WebDetection
      properties:
        visuallySimilarImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage'
          type: array
          description: The visually similar image results.
        partialMatchingImages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage'
          description: Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.
        bestGuessLabels:
          description: The service's best guess as to the topic of the request image. Inferred from similar images on the open web.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebLabel'
          type: array
        fullMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage'
          description: Fully matching images from the Internet. Can include resized copies of the query image.
          type: array
        pagesWithMatchingImages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebPage'
          description: Web pages containing the matching images from the Internet.
        webEntities:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebEntity'
          type: array
          description: Deduced entities from similar images on the Internet.
    GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesResponse:
      properties:
        responses:
          description: 'The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse'
      id: GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesResponse
      description: Response to an async batch file annotation request.
      type: object
    GoogleCloudVisionV1p2beta1Vertex:
      id: GoogleCloudVisionV1p2beta1Vertex
      description: 'A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.'
      properties:
        x:
          type: integer
          description: X coordinate.
          format: int32
        'y':
          description: Y coordinate.
          format: int32
          type: integer
      type: object
    Symbol:
      description: A single symbol representation.
      properties:
        confidence:
          type: number
          format: float
          description: 'Confidence of the OCR results for the symbol. Range [0, 1].'
        text:
          type: string
          description: The actual UTF-8 representation of the symbol.
        property:
          $ref: '#/components/schemas/TextProperty'
          description: Additional information detected for the symbol.
        boundingBox:
          $ref: '#/components/schemas/BoundingPoly'
          description: 'The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
      id: Symbol
      type: object
    GoogleCloudVisionV1p4beta1Position:
      properties:
        x:
          description: X coordinate.
          format: float
          type: number
        'y':
          description: Y coordinate.
          format: float
          type: number
        z:
          description: Z coordinate (or depth).
          type: number
          format: float
      id: GoogleCloudVisionV1p4beta1Position
      description: 'A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image.'
      type: object
    GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation:
      properties:
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
        score:
          description: 'Score of the result. Range [0, 1].'
          type: number
          format: float
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
        name:
          type: string
          description: 'Object name, expressed in its `language_code` language.'
      description: Prediction for what the object in the bounding box is.
      type: object
      id: GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation
    GoogleCloudVisionV1p4beta1Celebrity:
      description: A Celebrity is a group of Faces with an identity.
      id: GoogleCloudVisionV1p4beta1Celebrity
      type: object
      properties:
        name:
          description: 'The resource name of the preloaded Celebrity. Has the format `builtin/{mid}`.'
          type: string
        displayName:
          description: The Celebrity's display name.
          type: string
        description:
          description: The Celebrity's description.
          type: string
    CropHint:
      id: CropHint
      type: object
      properties:
        boundingPoly:
          $ref: '#/components/schemas/BoundingPoly'
          description: The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale.
        importanceFraction:
          format: float
          type: number
          description: Fraction of importance of this salient region with respect to the original image.
        confidence:
          format: float
          description: 'Confidence of this being a salient region. Range [0, 1].'
          type: number
      description: Single crop hint that is used to generate a new crop when serving an image.
    GoogleCloudVisionV1p4beta1BatchAnnotateFilesResponse:
      properties:
        responses:
          description: 'The list of file annotation responses, each response corresponding to each AnnotateFileRequest in BatchAnnotateFilesRequest.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1AnnotateFileResponse'
      id: GoogleCloudVisionV1p4beta1BatchAnnotateFilesResponse
      description: A list of file annotation responses.
      type: object
    GoogleCloudVisionV1p2beta1BoundingPoly:
      properties:
        vertices:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Vertex'
          type: array
          description: The bounding polygon vertices.
        normalizedVertices:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1NormalizedVertex'
          type: array
          description: The bounding polygon normalized vertices.
      id: GoogleCloudVisionV1p2beta1BoundingPoly
      description: A bounding polygon for the detected image annotation.
      type: object
    GoogleCloudVisionV1p4beta1Block:
      properties:
        blockType:
          description: 'Detected block type (text, image etc) for this block.'
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
          type: string
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
        confidence:
          description: 'Confidence of the OCR results on the block. Range [0, 1].'
          format: float
          type: number
        property:
          description: Additional information detected for the block.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty'
        paragraphs:
          description: List of paragraphs in this block (if this blocks is of type text).
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Paragraph'
          type: array
        boundingBox:
          description: 'The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
      type: object
      id: GoogleCloudVisionV1p4beta1Block
      description: Logical element on the page.
    GoogleCloudVisionV1p3beta1TextAnnotationTextProperty:
      type: object
      description: Additional information detected on the structural component.
      properties:
        detectedBreak:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak'
          description: Detected start or end of a text segment.
        detectedLanguages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage'
          description: A list of detected languages together with confidence.
          type: array
      id: GoogleCloudVisionV1p3beta1TextAnnotationTextProperty
    WebImage:
      description: Metadata for online images.
      type: object
      id: WebImage
      properties:
        url:
          description: The result image URL.
          type: string
        score:
          description: (Deprecated) Overall relevancy score for the image.
          type: number
          format: float
    GoogleCloudVisionV1p2beta1ColorInfo:
      properties:
        color:
          description: RGB components of the color.
          $ref: '#/components/schemas/Color'
        pixelFraction:
          type: number
          format: float
          description: 'The fraction of pixels the color occupies in the image. Value in range [0, 1].'
        score:
          type: number
          description: 'Image-specific score for this color. Value in range [0, 1].'
          format: float
      type: object
      id: GoogleCloudVisionV1p2beta1ColorInfo
      description: 'Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.'
    GoogleCloudVisionV1p2beta1GcsSource:
      type: object
      description: The Google Cloud Storage location where the input will be read from.
      properties:
        uri:
          description: Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported.
          type: string
      id: GoogleCloudVisionV1p2beta1GcsSource
    ImageAnnotationContext:
      id: ImageAnnotationContext
      description: 'If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.'
      properties:
        uri:
          description: The URI of the file used to produce the image.
          type: string
        pageNumber:
          description: 'If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image.'
          type: integer
          format: int32
      type: object
    GoogleCloudVisionV1p3beta1TextAnnotation:
      id: GoogleCloudVisionV1p3beta1TextAnnotation
      properties:
        text:
          type: string
          description: UTF-8 text detected on the pages.
        pages:
          description: List of pages detected by OCR.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Page'
          type: array
      type: object
      description: 'TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.'
    GoogleCloudVisionV1p2beta1AsyncBatchAnnotateFilesResponse:
      properties:
        responses:
          type: array
          description: 'The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest.'
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse'
      description: Response to an async batch file annotation request.
      id: GoogleCloudVisionV1p2beta1AsyncBatchAnnotateFilesResponse
      type: object
    GoogleCloudVisionV1p2beta1Block:
      description: Logical element on the page.
      properties:
        paragraphs:
          description: List of paragraphs in this block (if this blocks is of type text).
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Paragraph'
          type: array
        confidence:
          type: number
          description: 'Confidence of the OCR results on the block. Range [0, 1].'
          format: float
        blockType:
          type: string
          description: 'Detected block type (text, image etc) for this block.'
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
        property:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty'
          description: Additional information detected for the block.
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
          description: 'The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the ''natural'' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it''s rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).'
      type: object
      id: GoogleCloudVisionV1p2beta1Block
    GoogleCloudVisionV1p2beta1GcsDestination:
      properties:
        uri:
          description: 'Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with "filenameprefix". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files.'
          type: string
      type: object
      description: The Google Cloud Storage location where the output will be written to.
      id: GoogleCloudVisionV1p2beta1GcsDestination
    GoogleCloudVisionV1p3beta1ImportProductSetsResponse:
      type: object
      description: Response message for the `ImportProductSets` method. This message is returned by the google.longrunning.Operations.GetOperation method in the returned google.longrunning.Operation.response field.
      properties:
        statuses:
          items:
            $ref: '#/components/schemas/Status'
          type: array
          description: 'The rpc status for each ImportProductSet request, including both successes and errors. The number of statuses here matches the number of lines in the csv file, and statuses[i] stores the success or failure status of processing the i-th line of the csv, starting from line 0.'
        referenceImages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ReferenceImage'
          description: The list of reference_images that are imported successfully.
      id: GoogleCloudVisionV1p3beta1ImportProductSetsResponse
    DominantColorsAnnotation:
      id: DominantColorsAnnotation
      properties:
        colors:
          description: RGB color values with their score and pixel fraction.
          items:
            $ref: '#/components/schemas/ColorInfo'
          type: array
      description: Set of dominant colors and their corresponding scores.
      type: object
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
  x-stackQL-resources:
    operations:
      id: google.vision.operations
      name: operations
      title: Operations
      methods:
        locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        operations_get:
          operation:
            $ref: '#/paths/~1v1~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        operations_delete:
          operation:
            $ref: '#/paths/~1v1~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        operations_list:
          operation:
            $ref: '#/paths/~1v1~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _operations_list:
          operation:
            $ref: '#/paths/~1v1~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_operations_get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/operations_delete'
    images:
      id: google.vision.images
      name: images
      title: Images
      methods:
        images_annotate:
          operation:
            $ref: '#/paths/~1v1~1images:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        images_async_batch_annotate:
          operation:
            $ref: '#/paths/~1v1~1images:asyncBatchAnnotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_images_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1images:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_images_async_batch_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1images:asyncBatchAnnotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_images_async_batch_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1images:asyncBatchAnnotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_images_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1images:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    files:
      id: google.vision.files
      name: files
      title: Files
      methods:
        files_annotate:
          operation:
            $ref: '#/paths/~1v1~1files:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        files_async_batch_annotate:
          operation:
            $ref: '#/paths/~1v1~1files:asyncBatchAnnotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_files_async_batch_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1files:asyncBatchAnnotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_files_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1files:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_files_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1files:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_files_async_batch_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1files:asyncBatchAnnotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    products:
      id: google.vision.products
      name: products
      title: Products
      methods:
        projects_locations_products_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.products
        _projects_locations_products_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_purge:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products:purge/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_products_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}~1products/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.products
        _projects_locations_product_sets_products_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}~1products/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/products/methods/projects_locations_products_list'
          - $ref: '#/components/x-stackQL-resources/products/methods/projects_locations_products_get'
          - $ref: '#/components/x-stackQL-resources/products/methods/projects_locations_product_sets_products_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/products/methods/projects_locations_products_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/products/methods/projects_locations_products_delete'
    reference_images:
      id: google.vision.reference_images
      name: reference_images
      title: Reference Images
      methods:
        projects_locations_products_reference_images_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}~1referenceImages~1{referenceImagesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_reference_images_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}~1referenceImages~1{referenceImagesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_reference_images_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}~1referenceImages/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_products_reference_images_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}~1referenceImages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.referenceImages
        _projects_locations_products_reference_images_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1products~1{productsId}~1referenceImages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reference_images/methods/projects_locations_products_reference_images_get'
          - $ref: '#/components/x-stackQL-resources/reference_images/methods/projects_locations_products_reference_images_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/reference_images/methods/projects_locations_products_reference_images_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/reference_images/methods/projects_locations_products_reference_images_delete'
    product_sets:
      id: google.vision.product_sets
      name: product_sets
      title: Product Sets
      methods:
        projects_locations_product_sets_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.productSets
        _projects_locations_product_sets_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_import:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets:import/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/product_sets/methods/projects_locations_product_sets_list'
          - $ref: '#/components/x-stackQL-resources/product_sets/methods/projects_locations_product_sets_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/product_sets/methods/projects_locations_product_sets_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/product_sets/methods/projects_locations_product_sets_delete'
    product_sets_product:
      id: google.vision.product_sets_product
      name: product_sets_product
      title: Product Sets Product
      methods:
        projects_locations_product_sets_add_product:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}:addProduct/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_product_sets_remove_product:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1productSets~1{productSetsId}:removeProduct/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  '/v1/locations/{locationsId}/operations/{operationsId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: vision.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: locations_operations_get
      x-stackQL-verb: select
  '/v1/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: vision.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: operations_get
      x-stackQL-verb: select
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: vision.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: operations_delete
      x-stackQL-verb: delete
  '/v1/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: vision.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: operations_cancel
      x-stackQL-verb: exec
  /v1/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: vision.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/images:annotate':
    parameters: *ref_1
    post:
      description: Run image detection and annotation for a batch of images.
      operationId: vision.images.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateImagesResponse'
      parameters: []
      x-stackQL-resource: images
      x-stackQL-method: images_annotate
      x-stackQL-verb: exec
  '/v1/images:asyncBatchAnnotate':
    parameters: *ref_1
    post:
      description: 'Run asynchronous image detection and annotation for a list of images. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results). This service will write image annotation outputs to json files in customer GCS bucket, each json file containing BatchAnnotateImagesResponse proto.'
      operationId: vision.images.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
      x-stackQL-resource: images
      x-stackQL-method: images_async_batch_annotate
      x-stackQL-verb: exec
  '/v1/files:annotate':
    parameters: *ref_1
    post:
      description: 'Service that performs image detection and annotation for a batch of files. Now only "application/pdf", "image/tiff" and "image/gif" are supported. This service will extract at most 5 (customers can specify which 5 in AnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each file provided and perform detection and annotation for each image extracted.'
      operationId: vision.files.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateFilesResponse'
      parameters: []
      x-stackQL-resource: files
      x-stackQL-method: files_annotate
      x-stackQL-verb: exec
  '/v1/files:asyncBatchAnnotate':
    parameters: *ref_1
    post:
      description: 'Run asynchronous image detection and annotation for a list of generic files, such as PDF files, which may contain multiple pages and multiple images per page. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results).'
      operationId: vision.files.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
      x-stackQL-resource: files
      x-stackQL-method: files_async_batch_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/images:annotate':
    parameters: *ref_1
    post:
      description: Run image detection and annotation for a batch of images.
      operationId: vision.projects.images.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateImagesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: images
      x-stackQL-method: projects_images_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/images:asyncBatchAnnotate':
    parameters: *ref_1
    post:
      description: 'Run asynchronous image detection and annotation for a list of images. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results). This service will write image annotation outputs to json files in customer GCS bucket, each json file containing BatchAnnotateImagesResponse proto.'
      operationId: vision.projects.images.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: images
      x-stackQL-method: projects_images_async_batch_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/products':
    parameters: *ref_1
    get:
      description: 'Lists products in an unspecified order. Possible errors: * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.'
      operationId: vision.projects.locations.products.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_products_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.products
    post:
      description: 'Creates and returns a new product resource. Possible errors: * Returns INVALID_ARGUMENT if display_name is missing or longer than 4096 characters. * Returns INVALID_ARGUMENT if description is longer than 4096 characters. * Returns INVALID_ARGUMENT if product_category is missing or invalid.'
      operationId: vision.projects.locations.products.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: productId
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_products_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/products/{productsId}':
    parameters: *ref_1
    patch:
      description: 'Makes changes to a Product resource. Only the `display_name`, `description`, and `labels` fields can be updated right now. If labels are updated, the change will not be reflected in queries until the next index time. Possible errors: * Returns NOT_FOUND if the Product does not exist. * Returns INVALID_ARGUMENT if display_name is present in update_mask but is missing from the request or longer than 4096 characters. * Returns INVALID_ARGUMENT if description is present in update_mask but is longer than 4096 characters. * Returns INVALID_ARGUMENT if product_category is present in update_mask.'
      operationId: vision.projects.locations.products.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_products_patch
      x-stackQL-verb: exec
    get:
      description: 'Gets information associated with a Product. Possible errors: * Returns NOT_FOUND if the Product does not exist.'
      operationId: vision.projects.locations.products.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_products_get
      x-stackQL-verb: select
    delete:
      description: 'Permanently deletes a product and its reference images. Metadata of the product and all its images will be deleted right away, but search queries against ProductSets containing the product may still work until all related caches are refreshed.'
      operationId: vision.projects.locations.products.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_products_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/products:purge':
    parameters: *ref_1
    post:
      description: 'Asynchronous API to delete all Products in a ProductSet or all Products that are in no ProductSet. If a Product is a member of the specified ProductSet in addition to other ProductSets, the Product will still be deleted. It is recommended to not delete the specified ProductSet until after this operation has completed. It is also recommended to not add any of the Products involved in the batch delete to a new ProductSet while this operation is running because those Products may still end up deleted. It''s not possible to undo the PurgeProducts operation. Therefore, it is recommended to keep the csv files used in ImportProductSets (if that was how you originally built the Product Set) before starting PurgeProducts, in case you need to re-import the data after deletion. If the plan is to purge all of the Products from a ProductSet and then re-use the empty ProductSet to re-import new Products into the empty ProductSet, you must wait until the PurgeProducts operation has finished for that ProductSet. The google.longrunning.Operation API can be used to keep track of the progress and results of the request. `Operation.metadata` contains `BatchOperationMetadata`. (progress)'
      operationId: vision.projects.locations.products.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurgeProductsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_products_purge
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/products/{productsId}/referenceImages/{referenceImagesId}':
    parameters: *ref_1
    delete:
      description: 'Permanently deletes a reference image. The image metadata will be deleted right away, but search queries against ProductSets containing the image may still work until all related caches are refreshed. The actual image files are not deleted from Google Cloud Storage.'
      operationId: vision.projects.locations.products.referenceImages.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: path
          name: referenceImagesId
          required: true
          schema:
            type: string
      x-stackQL-resource: reference_images
      x-stackQL-method: projects_locations_products_reference_images_delete
      x-stackQL-verb: delete
    get:
      description: 'Gets information associated with a ReferenceImage. Possible errors: * Returns NOT_FOUND if the specified image does not exist.'
      operationId: vision.projects.locations.products.referenceImages.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceImage'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: path
          name: referenceImagesId
          required: true
          schema:
            type: string
      x-stackQL-resource: reference_images
      x-stackQL-method: projects_locations_products_reference_images_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/products/{productsId}/referenceImages':
    parameters: *ref_1
    post:
      description: 'Creates and returns a new ReferenceImage resource. The `bounding_poly` field is optional. If `bounding_poly` is not specified, the system will try to detect regions of interest in the image that are compatible with the product_category on the parent product. If it is specified, detection is ALWAYS skipped. The system converts polygons into non-rotated rectangles. Note that the pipeline will resize the image if the image resolution is too large to process (above 50MP). Possible errors: * Returns INVALID_ARGUMENT if the image_uri is missing or longer than 4096 characters. * Returns INVALID_ARGUMENT if the product does not exist. * Returns INVALID_ARGUMENT if bounding_poly is not provided, and nothing compatible with the parent product''s product_category is detected. * Returns INVALID_ARGUMENT if bounding_poly contains more than 10 polygons.'
      operationId: vision.projects.locations.products.referenceImages.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenceImage'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceImage'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: query
          name: referenceImageId
          schema:
            type: string
      x-stackQL-resource: reference_images
      x-stackQL-method: projects_locations_products_reference_images_create
      x-stackQL-verb: insert
    get:
      description: 'Lists reference images. Possible errors: * Returns NOT_FOUND if the parent product does not exist. * Returns INVALID_ARGUMENT if the page_size is greater than 100, or less than 1.'
      operationId: vision.projects.locations.products.referenceImages.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReferenceImagesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: reference_images
      x-stackQL-method: projects_locations_products_reference_images_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.referenceImages
  '/v1/projects/{projectsId}/locations/{locationsId}/images:asyncBatchAnnotate':
    parameters: *ref_1
    post:
      description: 'Run asynchronous image detection and annotation for a list of images. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results). This service will write image annotation outputs to json files in customer GCS bucket, each json file containing BatchAnnotateImagesResponse proto.'
      operationId: vision.projects.locations.images.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: images
      x-stackQL-method: projects_locations_images_async_batch_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/images:annotate':
    parameters: *ref_1
    post:
      description: Run image detection and annotation for a batch of images.
      operationId: vision.projects.locations.images.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateImagesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: images
      x-stackQL-method: projects_locations_images_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/files:asyncBatchAnnotate':
    parameters: *ref_1
    post:
      description: 'Run asynchronous image detection and annotation for a list of generic files, such as PDF files, which may contain multiple pages and multiple images per page. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results).'
      operationId: vision.projects.locations.files.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-method: projects_locations_files_async_batch_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/files:annotate':
    parameters: *ref_1
    post:
      description: 'Service that performs image detection and annotation for a batch of files. Now only "application/pdf", "image/tiff" and "image/gif" are supported. This service will extract at most 5 (customers can specify which 5 in AnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each file provided and perform detection and annotation for each image extracted.'
      operationId: vision.projects.locations.files.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateFilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-method: projects_locations_files_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}/products':
    parameters: *ref_1
    get:
      description: 'Lists the Products in a ProductSet, in an unspecified order. If the ProductSet does not exist, the products field of the response will be empty. Possible errors: * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.'
      operationId: vision.projects.locations.productSets.products.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductsInProductSetResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: products
      x-stackQL-method: projects_locations_product_sets_products_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.products
  '/v1/projects/{projectsId}/locations/{locationsId}/productSets':
    parameters: *ref_1
    get:
      description: 'Lists ProductSets in an unspecified order. Possible errors: * Returns INVALID_ARGUMENT if page_size is greater than 100, or less than 1.'
      operationId: vision.projects.locations.productSets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductSetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-method: projects_locations_product_sets_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.productSets
    post:
      description: 'Creates and returns a new ProductSet resource. Possible errors: * Returns INVALID_ARGUMENT if display_name is missing, or is longer than 4096 characters.'
      operationId: vision.projects.locations.productSets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: productSetId
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-method: projects_locations_product_sets_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}':
    parameters: *ref_1
    delete:
      description: Permanently deletes a ProductSet. Products and ReferenceImages in the ProductSet are not deleted. The actual image files are not deleted from Google Cloud Storage.
      operationId: vision.projects.locations.productSets.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-method: projects_locations_product_sets_delete
      x-stackQL-verb: delete
    get:
      description: 'Gets information associated with a ProductSet. Possible errors: * Returns NOT_FOUND if the ProductSet does not exist.'
      operationId: vision.projects.locations.productSets.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-method: projects_locations_product_sets_get
      x-stackQL-verb: select
    patch:
      description: 'Makes changes to a ProductSet resource. Only display_name can be updated currently. Possible errors: * Returns NOT_FOUND if the ProductSet does not exist. * Returns INVALID_ARGUMENT if display_name is present in update_mask but missing from the request or longer than 4096 characters.'
      operationId: vision.projects.locations.productSets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-method: projects_locations_product_sets_patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/productSets:import':
    parameters: *ref_1
    post:
      description: Asynchronous API that imports a list of reference images to specified product sets based on a list of image information. The google.longrunning.Operation API can be used to keep track of the progress and results of the request. `Operation.metadata` contains `BatchOperationMetadata`. (progress) `Operation.response` contains `ImportProductSetsResponse`. (results) The input source of this method is a csv file on Google Cloud Storage. For the format of the csv file please see ImportProductSetsGcsSource.csv_file_uri.
      operationId: vision.projects.locations.productSets.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportProductSetsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-method: projects_locations_product_sets_import
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}:addProduct':
    parameters: *ref_1
    post:
      description: 'Adds a Product to the specified ProductSet. If the Product is already present, no change is made. One Product can be added to at most 100 ProductSets. Possible errors: * Returns NOT_FOUND if the Product or the ProductSet doesn''t exist.'
      operationId: vision.projects.locations.productSets.addProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProductToProductSetRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets_product
      x-stackQL-method: projects_locations_product_sets_add_product
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}:removeProduct':
    parameters: *ref_1
    post:
      description: Removes a Product from the specified ProductSet.
      operationId: vision.projects.locations.productSets.removeProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveProductFromProductSetRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets_product
      x-stackQL-method: projects_locations_product_sets_remove_product
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: vision.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/files:annotate':
    parameters: *ref_1
    post:
      description: 'Service that performs image detection and annotation for a batch of files. Now only "application/pdf", "image/tiff" and "image/gif" are supported. This service will extract at most 5 (customers can specify which 5 in AnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each file provided and perform detection and annotation for each image extracted.'
      operationId: vision.projects.files.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateFilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-method: projects_files_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/files:asyncBatchAnnotate':
    parameters: *ref_1
    post:
      description: 'Run asynchronous image detection and annotation for a list of generic files, such as PDF files, which may contain multiple pages and multiple images per page. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results).'
      operationId: vision.projects.files.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-method: projects_files_async_batch_annotate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: vision.projects.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-vision'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-vision'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_operations_get
      x-stackQL-verb: select
