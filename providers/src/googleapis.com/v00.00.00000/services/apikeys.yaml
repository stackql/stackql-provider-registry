openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: API Keys API
  description: Manages the API keys associated with developer projects.
  version: v2
  x-discovery-doc-revision: '20230815'
  x-generated-date: '2023-08-17'
externalDocs:
  url: 'https://cloud.google.com/api-keys/docs'
servers:
  - url: 'https://apikeys.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
            'https://www.googleapis.com/auth/cloud-platform.read-only': View your data across Google Cloud services and see the email address of your Google Account
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    V2ApiTarget:
      id: V2ApiTarget
      description: A restriction for a specific service and optionally one or multiple specific methods. Both fields are case insensitive.
      properties:
        methods:
          items:
            type: string
          type: array
          description: 'Optional. List of one or more methods that can be called. If empty, all methods for the service are allowed. A wildcard (*) can be used as the last symbol. Valid examples: `google.cloud.translate.v2.TranslateService.GetSupportedLanguage` `TranslateText` `Get*` `translate.googleapis.com.Get*`'
        service:
          type: string
          description: 'The service for this restriction. It should be the canonical service name, for example: `translate.googleapis.com`. You can use [`gcloud services list`](/sdk/gcloud/reference/services/list) to get a list of services that are enabled in the project.'
      type: object
    V2UndeleteKeyRequest:
      type: object
      properties: {}
      description: Request message for `UndeleteKey` method.
      id: V2UndeleteKeyRequest
    Status:
      type: object
      id: Status
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        code:
          type: integer
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
    V2Key:
      description: The representation of a key managed by the API Keys API.
      id: V2Key
      type: object
      properties:
        createTime:
          format: google-datetime
          description: Output only. A timestamp identifying the time this key was originally created.
          readOnly: true
          type: string
        updateTime:
          readOnly: true
          type: string
          description: Output only. A timestamp identifying the time this key was last updated.
          format: google-datetime
        restrictions:
          description: Key restrictions.
          $ref: '#/components/schemas/V2Restrictions'
        annotations:
          type: object
          additionalProperties:
            type: string
          description: Annotations is an unstructured key-value map stored with a policy that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects.
        displayName:
          type: string
          description: Human-readable display name of this key that you can modify. The maximum length is 63 characters.
        etag:
          readOnly: true
          type: string
          description: 'Output only. A checksum computed by the server based on the current value of the Key resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. See https://google.aip.dev/154.'
        uid:
          description: Output only. Unique id in UUID4 format.
          type: string
          readOnly: true
        keyString:
          description: Output only. An encrypted and signed value held by this key. This field can be accessed only through the `GetKeyString` method.
          readOnly: true
          type: string
        name:
          type: string
          description: 'Output only. The resource name of the key. The `name` has the form: `projects//locations/global/keys/`. For example: `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2` NOTE: Key is a global resource; hence the only supported value for location is `global`.'
          readOnly: true
        deleteTime:
          type: string
          readOnly: true
          format: google-datetime
          description: 'Output only. A timestamp when this key was deleted. If the resource is not deleted, this must be empty.'
    V2GetKeyStringResponse:
      description: Response message for `GetKeyString` method.
      id: V2GetKeyStringResponse
      type: object
      properties:
        keyString:
          type: string
          description: An encrypted and signed value of the key.
    V2BrowserKeyRestrictions:
      description: The HTTP referrers (websites) that are allowed to use the key.
      properties:
        allowedReferrers:
          items:
            type: string
          description: A list of regular expressions for the referrer URLs that are allowed to make API calls with this key.
          type: array
      id: V2BrowserKeyRestrictions
      type: object
    V2AndroidKeyRestrictions:
      type: object
      id: V2AndroidKeyRestrictions
      properties:
        allowedApplications:
          type: array
          items:
            $ref: '#/components/schemas/V2AndroidApplication'
          description: A list of Android applications that are allowed to make API calls with this key.
      description: The Android apps that are allowed to use the key.
    V2LookupKeyResponse:
      properties:
        parent:
          description: The project that owns the key with the value specified in the request.
          type: string
        name:
          type: string
          description: 'The resource name of the API key. If the API key has been purged, resource name is empty.'
      type: object
      id: V2LookupKeyResponse
      description: Response message for `LookupKey` method.
    V2ServerKeyRestrictions:
      description: The IP addresses of callers that are allowed to use the key.
      id: V2ServerKeyRestrictions
      properties:
        allowedIps:
          items:
            type: string
          type: array
          description: A list of the caller IP addresses that are allowed to make API calls with this key.
      type: object
    V2Restrictions:
      description: Describes the restrictions on the key.
      type: object
      id: V2Restrictions
      properties:
        apiTargets:
          description: 'A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.'
          items:
            $ref: '#/components/schemas/V2ApiTarget'
          type: array
        serverKeyRestrictions:
          description: The IP addresses of callers that are allowed to use the key.
          $ref: '#/components/schemas/V2ServerKeyRestrictions'
        androidKeyRestrictions:
          description: The Android apps that are allowed to use the key.
          $ref: '#/components/schemas/V2AndroidKeyRestrictions'
        iosKeyRestrictions:
          $ref: '#/components/schemas/V2IosKeyRestrictions'
          description: The iOS apps that are allowed to use the key.
        browserKeyRestrictions:
          description: The HTTP referrers (websites) that are allowed to use the key.
          $ref: '#/components/schemas/V2BrowserKeyRestrictions'
    Operation:
      properties:
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        response:
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        metadata:
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
    V2IosKeyRestrictions:
      id: V2IosKeyRestrictions
      type: object
      properties:
        allowedBundleIds:
          type: array
          description: A list of bundle IDs that are allowed when making API calls with this key.
          items:
            type: string
      description: The iOS apps that are allowed to use the key.
    V2ListKeysResponse:
      properties:
        keys:
          description: A list of API keys.
          type: array
          items:
            $ref: '#/components/schemas/V2Key'
        nextPageToken:
          type: string
          description: The pagination token for the next page of results.
      id: V2ListKeysResponse
      type: object
      description: Response message for `ListKeys` method.
    V2AndroidApplication:
      type: object
      id: V2AndroidApplication
      properties:
        packageName:
          type: string
          description: The package name of the application.
        sha1Fingerprint:
          type: string
          description: 'The SHA1 fingerprint of the application. For example, both sha1 formats are acceptable : DA:39:A3:EE:5E:6B:4B:0D:32:55:BF:EF:95:60:18:90:AF:D8:07:09 or DA39A3EE5E6B4B0D3255BFEF95601890AFD80709. Output format is the latter.'
      description: Identifier of an Android application for key use.
  parameters:
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
  x-stackQL-resources:
    keys:
      id: google.apikeys.keys
      name: keys
      title: Keys
      methods:
        lookup_key:
          operation:
            $ref: '#/paths/~1v2~1keys:lookupKey/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1keys~1{keysId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1keys~1{keysId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1keys~1{keysId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1keys~1{keysId}:undelete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.keys
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1keys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/keys/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/keys/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/keys/methods/delete'
    operations:
      id: google.apikeys.operations
      name: operations
      title: Operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v2~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    keys_key_string:
      id: google.apikeys.keys_key_string
      name: keys_key_string
      title: Keys Key String
      methods:
        get_key_string:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1keys~1{keysId}~1keyString/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/keys_key_string/methods/get_key_string'
        insert: []
        update: []
        delete: []
paths:
  '/v2/keys:lookupKey':
    parameters: &ref_1
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
    get:
      description: 'Find the parent project and resource name of the API key that matches the key string in the request. If the API key has been purged, resource name will not be set. The service account must have the `apikeys.keys.lookup` permission on the parent project.'
      operationId: apikeys.keys.lookupKey
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2LookupKeyResponse'
      parameters:
        - in: query
          name: keyString
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-method: lookup_key
      x-stackQL-verb: exec
  '/v2/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: apikeys.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/keys/{keysId}':
    parameters: *ref_1
    patch:
      description: 'Patches the modifiable fields of an API key. The key string of the API key isn''t included in the response. NOTE: Key is a global resource; hence the only supported value for location is `global`.'
      operationId: apikeys.projects.locations.keys.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2Key'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: 'Deletes an API key. Deleted key can be retrieved within 30 days of deletion. Afterward, key will be purged from the project. NOTE: Key is a global resource; hence the only supported value for location is `global`.'
      operationId: apikeys.projects.locations.keys.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: 'Gets the metadata for an API key. The key string of the API key isn''t included in the response. NOTE: Key is a global resource; hence the only supported value for location is `global`.'
      operationId: apikeys.projects.locations.keys.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2Key'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/keys/{keysId}/keyString':
    parameters: *ref_1
    get:
      description: 'Get the key string for an API key. NOTE: Key is a global resource; hence the only supported value for location is `global`.'
      operationId: apikeys.projects.locations.keys.getKeyString
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetKeyStringResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys_key_string
      x-stackQL-method: get_key_string
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}/keys/{keysId}:undelete':
    parameters: *ref_1
    post:
      description: 'Undeletes an API key which was deleted within 30 days. NOTE: Key is a global resource; hence the only supported value for location is `global`.'
      operationId: apikeys.projects.locations.keys.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2UndeleteKeyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-method: undelete
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/keys':
    parameters: *ref_1
    get:
      description: 'Lists the API keys owned by a project. The key string of the API key isn''t included in the response. NOTE: Key is a global resource; hence the only supported value for location is `global`.'
      operationId: apikeys.projects.locations.keys.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2ListKeysResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: keys
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.keys
    post:
      description: 'Creates a new API key. NOTE: Key is a global resource; hence the only supported value for location is `global`.'
      operationId: apikeys.projects.locations.keys.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2Key'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: keyId
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-method: create
      x-stackQL-verb: insert
