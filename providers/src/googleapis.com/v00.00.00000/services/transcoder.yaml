openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Transcoder API
  description: 'This API converts video files into formats suitable for consumer distribution. For more information, see the Transcoder API overview. '
  version: v1
  x-discovery-doc-revision: '20230105'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://cloud.google.com/transcoder/docs/
servers:
  - url: https://transcoder.googleapis.com
components:
  schemas:
    Output:
      type: object
      description: Location of output file(s) in a Cloud Storage bucket.
      properties:
        uri:
          type: string
          description: URI for the output file(s). For example, `gs://my-bucket/outputs/`. If empty, the value is populated from `Job.output_uri`. See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats).
      id: Output
    Job:
      id: Job
      properties:
        outputUri:
          description: Input only. Specify the `output_uri` to populate an empty `Job.config.output.uri` or `JobTemplate.config.output.uri` when using template. URI for the output file(s). For example, `gs://my-bucket/outputs/`. See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats).
          type: string
        endTime:
          format: google-datetime
          type: string
          description: Output only. The time the transcoding finished.
          readOnly: true
        config:
          $ref: '#/components/schemas/JobConfig'
          description: The configuration for this job.
        state:
          enum:
            - PROCESSING_STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - FAILED
          enumDescriptions:
            - The processing state is not specified.
            - The job is enqueued and will be picked up for processing soon.
            - The job is being processed.
            - The job has been completed successfully.
            - The job has failed. For additional information, see `failure_reason` and `failure_details`
          readOnly: true
          description: Output only. The current state of the job.
          type: string
        createTime:
          type: string
          description: Output only. The time the job was created.
          readOnly: true
          format: google-datetime
        inputUri:
          type: string
          description: Input only. Specify the `input_uri` to populate empty `uri` fields in each element of `Job.config.inputs` or `JobTemplate.config.inputs` when using template. URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`). See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats).
        labels:
          description: The labels associated with this job. You can use these to organize and group your jobs.
          type: object
          additionalProperties:
            type: string
        name:
          type: string
          description: 'The resource name of the job. Format: `projects/{project_number}/locations/{location}/jobs/{job}`'
        error:
          description: Output only. An error object that describes the reason for the failure. This property is always present when `state` is `FAILED`.
          $ref: '#/components/schemas/Status'
          readOnly: true
        ttlAfterCompletionDays:
          type: integer
          format: int32
          description: Job time to live value in days, which will be effective after job completion. Job should be deleted automatically after the given TTL. Enter a value between 1 and 90. The default is 30.
        templateId:
          type: string
          description: 'Input only. Specify the `template_id` to use for populating `Job.config`. The default is `preset/web-hd`. Preset Transcoder templates: - `preset/{preset_id}` - User defined JobTemplate: `{job_template_id}`'
        startTime:
          readOnly: true
          description: Output only. The time the transcoding started.
          format: google-datetime
          type: string
      type: object
      description: Transcoding job resource.
    AdBreak:
      properties:
        startTimeOffset:
          format: google-duration
          description: Start time in seconds for the ad break, relative to the output file timeline. The default is `0s`.
          type: string
      description: Ad break.
      id: AdBreak
      type: object
    Color:
      description: Color preprocessing configuration. **Note:** This configuration is not supported.
      id: Color
      type: object
      properties:
        brightness:
          format: double
          type: number
          description: Control brightness of the video. Enter a value between -1 and 1, where -1 is minimum brightness and 1 is maximum brightness. 0 is no change. The default is 0.
        saturation:
          format: double
          type: number
          description: Control color saturation of the video. Enter a value between -1 and 1, where -1 is fully desaturated and 1 is maximum saturation. 0 is no change. The default is 0.
        contrast:
          format: double
          type: number
          description: Control black and white contrast of the video. Enter a value between -1 and 1, where -1 is minimum contrast and 1 is maximum contrast. 0 is no change. The default is 0.
    BwdifConfig:
      description: Bob Weaver Deinterlacing Filter Configuration.
      properties:
        mode:
          type: string
          description: 'Specifies the deinterlacing mode to adopt. The default is `send_frame`. Supported values: - `send_frame`: Output one frame for each frame - `send_field`: Output one frame for each field'
        parity:
          type: string
          description: 'The picture field parity assumed for the input interlaced video. The default is `auto`. Supported values: - `tff`: Assume the top field is first - `bff`: Assume the bottom field is first - `auto`: Enable automatic detection of field parity'
        deinterlaceAllFrames:
          type: boolean
          description: Deinterlace all frames rather than just the frames identified as interlaced. The default is `false`.
      id: BwdifConfig
      type: object
    Denoise:
      type: object
      description: Denoise preprocessing configuration. **Note:** This configuration is not supported.
      id: Denoise
      properties:
        strength:
          format: double
          description: Set strength of the denoise. Enter a value between 0 and 1. The higher the value, the smoother the image. 0 is no denoising. The default is 0.
          type: number
        tune:
          type: string
          description: 'Set the denoiser mode. The default is `standard`. Supported denoiser modes: - `standard` - `grain`'
    ElementaryStream:
      description: Encoding of an input file such as an audio, video, or text track. Elementary streams must be packaged before mapping and sharing between different output formats.
      id: ElementaryStream
      properties:
        videoStream:
          description: Encoding of a video stream.
          $ref: '#/components/schemas/VideoStream'
        audioStream:
          description: Encoding of an audio stream.
          $ref: '#/components/schemas/AudioStream'
        key:
          description: A unique key for this elementary stream.
          type: string
        textStream:
          $ref: '#/components/schemas/TextStream'
          description: Encoding of a text stream. For example, closed captions or subtitles.
      type: object
    Deinterlace:
      description: Deinterlace configuration for input video.
      properties:
        bwdif:
          description: Specifies the Bob Weaver Deinterlacing Filter Configuration.
          $ref: '#/components/schemas/BwdifConfig'
        yadif:
          description: Specifies the Yet Another Deinterlacing Filter Configuration.
          $ref: '#/components/schemas/YadifConfig'
      id: Deinterlace
      type: object
    Input:
      type: object
      description: Input asset.
      id: Input
      properties:
        preprocessingConfig:
          description: Preprocessing configurations.
          $ref: '#/components/schemas/PreprocessingConfig'
        key:
          type: string
          description: A unique key for this input. Must be specified when using advanced mapping and edit lists.
        uri:
          type: string
          description: URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`). If empty, the value is populated from `Job.input_uri`. See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats).
    Status:
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
        code:
          format: int32
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
      id: Status
    PreprocessingConfig:
      id: PreprocessingConfig
      properties:
        crop:
          $ref: '#/components/schemas/Crop'
          description: Specify the video cropping configuration.
        deblock:
          $ref: '#/components/schemas/Deblock'
          description: Deblock preprocessing configuration.
        color:
          description: Color preprocessing configuration.
          $ref: '#/components/schemas/Color'
        deinterlace:
          description: Specify the video deinterlace configuration.
          $ref: '#/components/schemas/Deinterlace'
        audio:
          description: Audio preprocessing configuration.
          $ref: '#/components/schemas/Audio'
        denoise:
          $ref: '#/components/schemas/Denoise'
          description: Denoise preprocessing configuration.
        pad:
          $ref: '#/components/schemas/Pad'
          description: Specify the video pad filter configuration.
      description: Preprocessing configurations.
      type: object
    AnimationStatic:
      description: Display static overlay object.
      id: AnimationStatic
      properties:
        startTimeOffset:
          type: string
          format: google-duration
          description: 'The time to start displaying the overlay object, in seconds. Default: 0'
        xy:
          $ref: '#/components/schemas/NormalizedCoordinate'
          description: 'Normalized coordinates based on output video resolution. Valid values: `0.0`–`1.0`. `xy` is the upper-left coordinate of the overlay object. For example, use the x and y coordinates {0,0} to position the top-left corner of the overlay animation in the top-left corner of the output video.'
      type: object
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      type: object
      properties: {}
    JobConfig:
      type: object
      id: JobConfig
      properties:
        adBreaks:
          items:
            $ref: '#/components/schemas/AdBreak'
          description: List of ad breaks. Specifies where to insert ad break tags in the output manifests.
          type: array
        inputs:
          items:
            $ref: '#/components/schemas/Input'
          type: array
          description: List of input assets stored in Cloud Storage.
        muxStreams:
          items:
            $ref: '#/components/schemas/MuxStream'
          type: array
          description: List of multiplexing settings for output streams.
        elementaryStreams:
          description: List of elementary streams.
          items:
            $ref: '#/components/schemas/ElementaryStream'
          type: array
        output:
          $ref: '#/components/schemas/Output'
          description: Output configuration.
        editList:
          description: List of `Edit atom`s. Defines the ultimate timeline of the resulting file or manifest.
          type: array
          items:
            $ref: '#/components/schemas/EditAtom'
        manifests:
          items:
            $ref: '#/components/schemas/Manifest'
          description: List of output manifests.
          type: array
        overlays:
          type: array
          items:
            $ref: '#/components/schemas/Overlay'
          description: List of overlays on the output video, in descending Z-order.
        spriteSheets:
          items:
            $ref: '#/components/schemas/SpriteSheet'
          type: array
          description: List of output sprite sheets. Spritesheets require at least one VideoStream in the Jobconfig.
        pubsubDestination:
          $ref: '#/components/schemas/PubsubDestination'
          description: Destination on Pub/Sub.
      description: Job configuration
    ListJobTemplatesResponse:
      description: Response message for `TranscoderService.ListJobTemplates`.
      id: ListJobTemplatesResponse
      properties:
        jobTemplates:
          items:
            $ref: '#/components/schemas/JobTemplate'
          type: array
          description: List of job templates in the specified region.
        unreachable:
          items:
            type: string
          type: array
          description: List of regions that could not be reached.
        nextPageToken:
          description: The pagination token.
          type: string
      type: object
    AnimationEnd:
      id: AnimationEnd
      description: End previous overlay animation from the video. Without AnimationEnd, the overlay object will keep the state of previous animation until the end of the video.
      properties:
        startTimeOffset:
          description: 'The time to end overlay object, in seconds. Default: 0'
          format: google-duration
          type: string
      type: object
    Animation:
      id: Animation
      description: Animation types.
      properties:
        animationEnd:
          $ref: '#/components/schemas/AnimationEnd'
          description: End previous animation.
        animationFade:
          description: Display overlay object with fade animation.
          $ref: '#/components/schemas/AnimationFade'
        animationStatic:
          $ref: '#/components/schemas/AnimationStatic'
          description: Display static overlay object.
      type: object
    YadifConfig:
      description: Yet Another Deinterlacing Filter Configuration.
      id: YadifConfig
      type: object
      properties:
        mode:
          description: 'Specifies the deinterlacing mode to adopt. The default is `send_frame`. Supported values: - `send_frame`: Output one frame for each frame - `send_field`: Output one frame for each field'
          type: string
        disableSpatialInterlacing:
          type: boolean
          description: Disable spacial interlacing. The default is `false`.
        deinterlaceAllFrames:
          type: boolean
          description: Deinterlace all frames rather than just the frames identified as interlaced. The default is `false`.
        parity:
          type: string
          description: 'The picture field parity assumed for the input interlaced video. The default is `auto`. Supported values: - `tff`: Assume the top field is first - `bff`: Assume the bottom field is first - `auto`: Enable automatic detection of field parity'
    JobTemplate:
      properties:
        name:
          type: string
          description: 'The resource name of the job template. Format: `projects/{project_number}/locations/{location}/jobTemplates/{job_template}`'
        labels:
          type: object
          additionalProperties:
            type: string
          description: The labels associated with this job template. You can use these to organize and group your job templates.
        config:
          description: The configuration for this template.
          $ref: '#/components/schemas/JobConfig'
      id: JobTemplate
      type: object
      description: Transcoding job template resource.
    AnimationFade:
      type: object
      description: Display overlay object with fade animation.
      id: AnimationFade
      properties:
        fadeType:
          enum:
            - FADE_TYPE_UNSPECIFIED
            - FADE_IN
            - FADE_OUT
          description: 'Required. Type of fade animation: `FADE_IN` or `FADE_OUT`.'
          enumDescriptions:
            - The fade type is not specified.
            - Fade the overlay object into view.
            - Fade the overlay object out of view.
          type: string
        xy:
          description: 'Normalized coordinates based on output video resolution. Valid values: `0.0`–`1.0`. `xy` is the upper-left coordinate of the overlay object. For example, use the x and y coordinates {0,0} to position the top-left corner of the overlay animation in the top-left corner of the output video.'
          $ref: '#/components/schemas/NormalizedCoordinate'
        startTimeOffset:
          type: string
          description: 'The time to start the fade animation, in seconds. Default: 0'
          format: google-duration
        endTimeOffset:
          description: 'The time to end the fade animation, in seconds. Default: `start_time_offset` + 1s'
          format: google-duration
          type: string
    SpriteSheet:
      description: Sprite sheet configuration.
      id: SpriteSheet
      type: object
      properties:
        quality:
          type: integer
          description: The quality of the generated sprite sheet. Enter a value between 1 and 100, where 1 is the lowest quality and 100 is the highest quality. The default is 100. A high quality value corresponds to a low image data compression ratio.
          format: int32
        format:
          description: 'Format type. The default is `jpeg`. Supported formats: - `jpeg`'
          type: string
        columnCount:
          type: integer
          format: int32
          description: The maximum number of sprites per row in a sprite sheet. The default is 0, which indicates no maximum limit.
        spriteHeightPixels:
          type: integer
          format: int32
          description: Required. The height of sprite in pixels. Must be an even integer. To preserve the source aspect ratio, set the SpriteSheet.sprite_height_pixels field or the SpriteSheet.sprite_width_pixels field, but not both (the API will automatically calculate the missing field). For portrait videos that contain horizontal ASR and rotation metadata, provide the height, in pixels, per the horizontal ASR. The API calculates the width per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.
        totalCount:
          type: integer
          format: int32
          description: Total number of sprites. Create the specified number of sprites distributed evenly across the timeline of the output media. The default is 100.
        startTimeOffset:
          format: google-duration
          type: string
          description: Start time in seconds, relative to the output file timeline. Determines the first sprite to pick. The default is `0s`.
        spriteWidthPixels:
          format: int32
          description: Required. The width of sprite in pixels. Must be an even integer. To preserve the source aspect ratio, set the SpriteSheet.sprite_width_pixels field or the SpriteSheet.sprite_height_pixels field, but not both (the API will automatically calculate the missing field). For portrait videos that contain horizontal ASR and rotation metadata, provide the width, in pixels, per the horizontal ASR. The API calculates the height per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.
          type: integer
        interval:
          format: google-duration
          type: string
          description: Starting from `0s`, create sprites at regular intervals. Specify the interval value in seconds.
        filePrefix:
          type: string
          description: Required. File name prefix for the generated sprite sheets. Each sprite sheet has an incremental 10-digit zero-padded suffix starting from 0 before the extension, such as `sprite_sheet0000000123.jpeg`.
        endTimeOffset:
          type: string
          description: End time in seconds, relative to the output file timeline. When `end_time_offset` is not specified, the sprites are generated until the end of the output file.
          format: google-duration
        rowCount:
          type: integer
          format: int32
          description: The maximum number of rows per sprite sheet. When the sprite sheet is full, a new sprite sheet is created. The default is 0, which indicates no maximum limit.
    EditAtom:
      id: EditAtom
      properties:
        startTimeOffset:
          description: Start time in seconds for the atom, relative to the input file timeline. The default is `0s`.
          format: google-duration
          type: string
        key:
          type: string
          description: A unique key for this atom. Must be specified when using advanced mapping.
        endTimeOffset:
          description: End time in seconds for the atom, relative to the input file timeline. When `end_time_offset` is not specified, the `inputs` are used until the end of the atom.
          type: string
          format: google-duration
        inputs:
          description: List of `Input.key`s identifying files that should be used in this atom. The listed `inputs` must have the same timeline.
          items:
            type: string
          type: array
      description: Edit atom.
      type: object
    PubsubDestination:
      description: A Pub/Sub destination.
      id: PubsubDestination
      type: object
      properties:
        topic:
          type: string
          description: 'The name of the Pub/Sub topic to publish job completion notification to. For example: `projects/{project}/topics/{topic}`.'
    TextStream:
      type: object
      properties:
        mapping:
          items:
            $ref: '#/components/schemas/TextMapping'
          type: array
          description: The mapping for the `Job.edit_list` atoms with text `EditAtom.inputs`.
        codec:
          type: string
          description: 'The codec for this text stream. The default is `webvtt`. Supported text codecs: - `srt` - `ttml` - `cea608` - `cea708` - `webvtt`'
      description: Encoding of a text stream. For example, closed captions or subtitles.
      id: TextStream
    TextMapping:
      properties:
        inputTrack:
          type: integer
          format: int32
          description: Required. The zero-based index of the track in the input file.
        atomKey:
          description: Required. The `EditAtom.key` that references atom with text inputs in the `Job.edit_list`.
          type: string
        inputKey:
          description: Required. The `Input.key` that identifies the input file.
          type: string
      description: The mapping for the `Job.edit_list` atoms with text `EditAtom.inputs`.
      id: TextMapping
      type: object
    AudioStream:
      description: Audio stream resource.
      properties:
        sampleRateHertz:
          description: The audio sample rate in Hertz. The default is 48000 Hertz.
          type: integer
          format: int32
        channelLayout:
          description: 'A list of channel names specifying layout of the audio channels. This only affects the metadata embedded in the container headers, if supported by the specified format. The default is `["fl", "fr"]`. Supported channel names: - `fl` - Front left channel - `fr` - Front right channel - `sl` - Side left channel - `sr` - Side right channel - `fc` - Front center channel - `lfe` - Low frequency'
          items:
            type: string
          type: array
        bitrateBps:
          description: Required. Audio bitrate in bits per second. Must be between 1 and 10,000,000.
          type: integer
          format: int32
        channelCount:
          description: Number of audio channels. Must be between 1 and 6. The default is 2.
          format: int32
          type: integer
        codec:
          type: string
          description: 'The codec for this audio stream. The default is `aac`. Supported audio codecs: - `aac` - `aac-he` - `aac-he-v2` - `mp3` - `ac3` - `eac3`'
        mapping:
          items:
            $ref: '#/components/schemas/AudioMapping'
          type: array
          description: The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
      type: object
      id: AudioStream
    Deblock:
      id: Deblock
      description: Deblock preprocessing configuration. **Note:** This configuration is not supported.
      type: object
      properties:
        enabled:
          type: boolean
          description: Enable deblocker. The default is `false`.
        strength:
          format: double
          type: number
          description: Set strength of the deblocker. Enter a value between 0 and 1. The higher the value, the stronger the block removal. 0 is no deblocking. The default is 0.
    MuxStream:
      description: Multiplexing settings for output stream.
      properties:
        key:
          description: A unique key for this multiplexed stream. HLS media manifests will be named `MuxStream.key` with the `.m3u8` extension suffix.
          type: string
        container:
          description: 'The container format. The default is `mp4` Supported container formats: - `ts` - `fmp4`- the corresponding file extension is `.m4s` - `mp4` - `vtt` See also: [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats)'
          type: string
        segmentSettings:
          description: Segment settings for `ts`, `fmp4` and `vtt`.
          $ref: '#/components/schemas/SegmentSettings'
        elementaryStreams:
          type: array
          description: List of `ElementaryStream.key`s multiplexed in this stream.
          items:
            type: string
        fileName:
          description: The name of the generated file. The default is `MuxStream.key` with the extension suffix corresponding to the `MuxStream.container`. Individual segments also have an incremental 10-digit zero-padded suffix starting from 0 before the extension, such as `mux_stream0000000123.ts`.
          type: string
      id: MuxStream
      type: object
    H264CodecSettings:
      properties:
        bitrateBps:
          description: Required. The video bitrate in bits per second. The minimum value is 1,000. The maximum value is 800,000,000.
          format: int32
          type: integer
        rateControlMode:
          description: 'Specify the `rate_control_mode`. The default is `vbr`. Supported rate control modes: - `vbr` - variable bitrate - `crf` - constant rate factor'
          type: string
        vbvSizeBits:
          type: integer
          format: int32
          description: Size of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to `VideoStream.bitrate_bps`.
        profile:
          type: string
          description: 'Enforces the specified codec profile. The following profiles are supported: * `baseline` * `main` * `high` (default) The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.264#Tune). Note that certain values for this field may cause the transcoder to override other fields you set in the `H264CodecSettings` message.'
        gopDuration:
          format: google-duration
          description: Select the GOP size based on the specified duration. The default is `3s`. Note that `gopDuration` must be less than or equal to [`segmentDuration`](#SegmentSettings), and [`segmentDuration`](#SegmentSettings) must be divisible by `gopDuration`.
          type: string
        enableTwoPass:
          description: Use two-pass encoding strategy to achieve better video quality. `VideoStream.rate_control_mode` must be `vbr`. The default is `false`.
          type: boolean
        pixelFormat:
          type: string
          description: 'Pixel format to use. The default is `yuv420p`. Supported pixel formats: - `yuv420p` pixel format - `yuv422p` pixel format - `yuv444p` pixel format - `yuv420p10` 10-bit HDR pixel format - `yuv422p10` 10-bit HDR pixel format - `yuv444p10` 10-bit HDR pixel format - `yuv420p12` 12-bit HDR pixel format - `yuv422p12` 12-bit HDR pixel format - `yuv444p12` 12-bit HDR pixel format'
        tune:
          description: Enforces the specified codec tune. The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.264#Tune). Note that certain values for this field may cause the transcoder to override other fields you set in the `H264CodecSettings` message.
          type: string
        aqStrength:
          type: number
          description: Specify the intensity of the adaptive quantizer (AQ). Must be between 0 and 1, where 0 disables the quantizer and 1 maximizes the quantizer. A higher value equals a lower bitrate but smoother image. The default is 0.
          format: double
        preset:
          type: string
          description: Enforces the specified codec preset. The default is `veryfast`. The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.264#Preset). Note that certain values for this field may cause the transcoder to override other fields you set in the `H264CodecSettings` message.
        bPyramid:
          description: Allow B-pyramid for reference frame selection. This may not be supported on all decoders. The default is `false`.
          type: boolean
        gopFrameCount:
          format: int32
          description: Select the GOP size based on the specified frame count. Must be greater than zero.
          type: integer
        entropyCoder:
          type: string
          description: 'The entropy coder to use. The default is `cabac`. Supported entropy coders: - `cavlc` - `cabac`'
        crfLevel:
          format: int32
          type: integer
          description: Target CRF level. Must be between 10 and 36, where 10 is the highest quality and 36 is the most efficient compression. The default is 21.
        widthPixels:
          type: integer
          description: The width of the video in pixels. Must be an even integer. When not specified, the width is adjusted to match the specified height and input aspect ratio. If both are omitted, the input width is used. For portrait videos that contain horizontal ASR and rotation metadata, provide the width, in pixels, per the horizontal ASR. The API calculates the height per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.
          format: int32
        allowOpenGop:
          description: Specifies whether an open Group of Pictures (GOP) structure should be allowed or not. The default is `false`.
          type: boolean
        bFrameCount:
          format: int32
          type: integer
          description: The number of consecutive B-frames. Must be greater than or equal to zero. Must be less than `VideoStream.gop_frame_count` if set. The default is 0.
        vbvFullnessBits:
          format: int32
          type: integer
          description: Initial fullness of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to 90% of `VideoStream.vbv_size_bits`.
        frameRate:
          description: Required. The target video frame rate in frames per second (FPS). Must be less than or equal to 120. Will default to the input frame rate if larger than the input frame rate. The API will generate an output FPS that is divisible by the input FPS, and smaller or equal to the target FPS. See [Calculating frame rate](https://cloud.google.com/transcoder/docs/concepts/frame-rate) for more information.
          type: number
          format: double
        heightPixels:
          type: integer
          format: int32
          description: The height of the video in pixels. Must be an even integer. When not specified, the height is adjusted to match the specified width and input aspect ratio. If both are omitted, the input height is used. For portrait videos that contain horizontal ASR and rotation metadata, provide the height, in pixels, per the horizontal ASR. The API calculates the width per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.
      type: object
      id: H264CodecSettings
      description: H264 codec settings.
    Vp9CodecSettings:
      properties:
        heightPixels:
          format: int32
          type: integer
          description: The height of the video in pixels. Must be an even integer. When not specified, the height is adjusted to match the specified width and input aspect ratio. If both are omitted, the input height is used. For portrait videos that contain horizontal ASR and rotation metadata, provide the height, in pixels, per the horizontal ASR. The API calculates the width per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.
        pixelFormat:
          type: string
          description: 'Pixel format to use. The default is `yuv420p`. Supported pixel formats: - `yuv420p` pixel format - `yuv422p` pixel format - `yuv444p` pixel format - `yuv420p10` 10-bit HDR pixel format - `yuv422p10` 10-bit HDR pixel format - `yuv444p10` 10-bit HDR pixel format - `yuv420p12` 12-bit HDR pixel format - `yuv422p12` 12-bit HDR pixel format - `yuv444p12` 12-bit HDR pixel format'
        gopDuration:
          format: google-duration
          description: Select the GOP size based on the specified duration. The default is `3s`. Note that `gopDuration` must be less than or equal to [`segmentDuration`](#SegmentSettings), and [`segmentDuration`](#SegmentSettings) must be divisible by `gopDuration`.
          type: string
        frameRate:
          format: double
          description: Required. The target video frame rate in frames per second (FPS). Must be less than or equal to 120. Will default to the input frame rate if larger than the input frame rate. The API will generate an output FPS that is divisible by the input FPS, and smaller or equal to the target FPS. See [Calculating frame rate](https://cloud.google.com/transcoder/docs/concepts/frame-rate) for more information.
          type: number
        rateControlMode:
          description: 'Specify the `rate_control_mode`. The default is `vbr`. Supported rate control modes: - `vbr` - variable bitrate'
          type: string
        gopFrameCount:
          type: integer
          format: int32
          description: Select the GOP size based on the specified frame count. Must be greater than zero.
        widthPixels:
          description: The width of the video in pixels. Must be an even integer. When not specified, the width is adjusted to match the specified height and input aspect ratio. If both are omitted, the input width is used. For portrait videos that contain horizontal ASR and rotation metadata, provide the width, in pixels, per the horizontal ASR. The API calculates the height per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.
          type: integer
          format: int32
        crfLevel:
          type: integer
          format: int32
          description: Target CRF level. Must be between 10 and 36, where 10 is the highest quality and 36 is the most efficient compression. The default is 21. **Note:** This field is not supported.
        bitrateBps:
          type: integer
          format: int32
          description: Required. The video bitrate in bits per second. The minimum value is 1,000. The maximum value is 480,000,000.
        profile:
          description: 'Enforces the specified codec profile. The following profiles are supported: * `profile0` (default) * `profile1` * `profile2` * `profile3` The available options are [WebM-compatible](https://www.webmproject.org/vp9/profiles/). Note that certain values for this field may cause the transcoder to override other fields you set in the `Vp9CodecSettings` message.'
          type: string
      description: VP9 codec settings.
      id: Vp9CodecSettings
      type: object
    SegmentSettings:
      properties:
        segmentDuration:
          format: google-duration
          description: Duration of the segments in seconds. The default is `6.0s`. Note that `segmentDuration` must be greater than or equal to [`gopDuration`](#videostream), and `segmentDuration` must be divisible by [`gopDuration`](#videostream).
          type: string
        individualSegments:
          type: boolean
          description: Required. Create an individual segment file. The default is `false`.
      id: SegmentSettings
      type: object
      description: Segment settings for `ts`, `fmp4` and `vtt`.
    AudioMapping:
      properties:
        inputKey:
          description: Required. The `Input.key` that identifies the input file.
          type: string
        inputChannel:
          format: int32
          type: integer
          description: Required. The zero-based index of the channel in the input audio stream.
        atomKey:
          description: Required. The `EditAtom.key` that references the atom with audio inputs in the `Job.edit_list`.
          type: string
        inputTrack:
          type: integer
          format: int32
          description: Required. The zero-based index of the track in the input file.
        gainDb:
          format: double
          type: number
          description: Audio volume control in dB. Negative values decrease volume, positive values increase. The default is 0.
        outputChannel:
          type: integer
          format: int32
          description: Required. The zero-based index of the channel in the output audio stream.
      id: AudioMapping
      type: object
      description: The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
    Manifest:
      properties:
        fileName:
          description: The name of the generated file. The default is `manifest` with the extension suffix corresponding to the `Manifest.type`.
          type: string
        type:
          description: Required. Type of the manifest, can be `HLS` or `DASH`.
          type: string
          enum:
            - MANIFEST_TYPE_UNSPECIFIED
            - HLS
            - DASH
          enumDescriptions:
            - The manifest type is not specified.
            - Create `HLS` manifest. The corresponding file extension is `.m3u8`.
            - Create `DASH` manifest. The corresponding file extension is `.mpd`.
        muxStreams:
          description: Required. List of user given `MuxStream.key`s that should appear in this manifest. When `Manifest.type` is `HLS`, a media manifest with name `MuxStream.key` and `.m3u8` extension is generated for each element of the `Manifest.mux_streams`.
          type: array
          items:
            type: string
      id: Manifest
      description: Manifest configuration.
      type: object
    NormalizedCoordinate:
      description: '2D normalized coordinates. Default: `{0.0, 0.0}`'
      properties:
        'y':
          format: double
          type: number
          description: Normalized y coordinate.
        x:
          description: Normalized x coordinate.
          type: number
          format: double
      id: NormalizedCoordinate
      type: object
    Crop:
      description: Video cropping configuration for the input video. The cropped input video is scaled to match the output resolution.
      properties:
        leftPixels:
          type: integer
          description: The number of pixels to crop from the left. The default is 0.
          format: int32
        bottomPixels:
          description: The number of pixels to crop from the bottom. The default is 0.
          type: integer
          format: int32
        rightPixels:
          type: integer
          description: The number of pixels to crop from the right. The default is 0.
          format: int32
        topPixels:
          type: integer
          format: int32
          description: The number of pixels to crop from the top. The default is 0.
      type: object
      id: Crop
    H265CodecSettings:
      id: H265CodecSettings
      description: H265 codec settings.
      type: object
      properties:
        crfLevel:
          type: integer
          description: Target CRF level. Must be between 10 and 36, where 10 is the highest quality and 36 is the most efficient compression. The default is 21.
          format: int32
        preset:
          description: Enforces the specified codec preset. The default is `veryfast`. The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.265). Note that certain values for this field may cause the transcoder to override other fields you set in the `H265CodecSettings` message.
          type: string
        vbvFullnessBits:
          format: int32
          description: Initial fullness of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to 90% of `VideoStream.vbv_size_bits`.
          type: integer
        bitrateBps:
          type: integer
          format: int32
          description: Required. The video bitrate in bits per second. The minimum value is 1,000. The maximum value is 800,000,000.
        bPyramid:
          type: boolean
          description: Allow B-pyramid for reference frame selection. This may not be supported on all decoders. The default is `false`.
        rateControlMode:
          type: string
          description: 'Specify the `rate_control_mode`. The default is `vbr`. Supported rate control modes: - `vbr` - variable bitrate - `crf` - constant rate factor'
        vbvSizeBits:
          type: integer
          description: Size of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to `VideoStream.bitrate_bps`.
          format: int32
        gopDuration:
          format: google-duration
          type: string
          description: Select the GOP size based on the specified duration. The default is `3s`. Note that `gopDuration` must be less than or equal to [`segmentDuration`](#SegmentSettings), and [`segmentDuration`](#SegmentSettings) must be divisible by `gopDuration`.
        heightPixels:
          format: int32
          description: The height of the video in pixels. Must be an even integer. When not specified, the height is adjusted to match the specified width and input aspect ratio. If both are omitted, the input height is used. For portrait videos that contain horizontal ASR and rotation metadata, provide the height, in pixels, per the horizontal ASR. The API calculates the width per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.
          type: integer
        frameRate:
          type: number
          format: double
          description: Required. The target video frame rate in frames per second (FPS). Must be less than or equal to 120. Will default to the input frame rate if larger than the input frame rate. The API will generate an output FPS that is divisible by the input FPS, and smaller or equal to the target FPS. See [Calculating frame rate](https://cloud.google.com/transcoder/docs/concepts/frame-rate) for more information.
        enableTwoPass:
          description: Use two-pass encoding strategy to achieve better video quality. `VideoStream.rate_control_mode` must be `vbr`. The default is `false`.
          type: boolean
        allowOpenGop:
          type: boolean
          description: Specifies whether an open Group of Pictures (GOP) structure should be allowed or not. The default is `false`.
        aqStrength:
          type: number
          description: Specify the intensity of the adaptive quantizer (AQ). Must be between 0 and 1, where 0 disables the quantizer and 1 maximizes the quantizer. A higher value equals a lower bitrate but smoother image. The default is 0.
          format: double
        bFrameCount:
          type: integer
          format: int32
          description: The number of consecutive B-frames. Must be greater than or equal to zero. Must be less than `VideoStream.gop_frame_count` if set. The default is 0.
        profile:
          description: 'Enforces the specified codec profile. The following profiles are supported: * 8-bit profiles * `main` (default) * `main-intra` * `mainstillpicture` * 10-bit profiles * `main10` (default) * `main10-intra` * `main422-10` * `main422-10-intra` * `main444-10` * `main444-10-intra` * 12-bit profiles * `main12` (default) * `main12-intra` * `main422-12` * `main422-12-intra` * `main444-12` * `main444-12-intra` The available options are [FFmpeg-compatible](https://x265.readthedocs.io/). Note that certain values for this field may cause the transcoder to override other fields you set in the `H265CodecSettings` message.'
          type: string
        tune:
          description: Enforces the specified codec tune. The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.265). Note that certain values for this field may cause the transcoder to override other fields you set in the `H265CodecSettings` message.
          type: string
        widthPixels:
          type: integer
          format: int32
          description: The width of the video in pixels. Must be an even integer. When not specified, the width is adjusted to match the specified height and input aspect ratio. If both are omitted, the input width is used. For portrait videos that contain horizontal ASR and rotation metadata, provide the width, in pixels, per the horizontal ASR. The API calculates the height per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.
        pixelFormat:
          type: string
          description: 'Pixel format to use. The default is `yuv420p`. Supported pixel formats: - `yuv420p` pixel format - `yuv422p` pixel format - `yuv444p` pixel format - `yuv420p10` 10-bit HDR pixel format - `yuv422p10` 10-bit HDR pixel format - `yuv444p10` 10-bit HDR pixel format - `yuv420p12` 12-bit HDR pixel format - `yuv422p12` 12-bit HDR pixel format - `yuv444p12` 12-bit HDR pixel format'
        gopFrameCount:
          description: Select the GOP size based on the specified frame count. Must be greater than zero.
          type: integer
          format: int32
    Pad:
      type: object
      id: Pad
      description: Pad filter configuration for the input video. The padded input video is scaled after padding with black to match the output resolution.
      properties:
        topPixels:
          description: The number of pixels to add to the top. The default is 0.
          type: integer
          format: int32
        leftPixels:
          description: The number of pixels to add to the left. The default is 0.
          format: int32
          type: integer
        bottomPixels:
          type: integer
          format: int32
          description: The number of pixels to add to the bottom. The default is 0.
        rightPixels:
          format: int32
          type: integer
          description: The number of pixels to add to the right. The default is 0.
    Image:
      properties:
        resolution:
          $ref: '#/components/schemas/NormalizedCoordinate'
          description: 'Normalized image resolution, based on output video resolution. Valid values: `0.0`–`1.0`. To respect the original image aspect ratio, set either `x` or `y` to `0.0`. To use the original image resolution, set both `x` and `y` to `0.0`.'
        alpha:
          description: Target image opacity. Valid values are from `1.0` (solid, default) to `0.0` (transparent), exclusive. Set this to a value greater than `0.0`.
          format: double
          type: number
        uri:
          description: Required. URI of the JPEG image in Cloud Storage. For example, `gs://bucket/inputs/image.jpeg`. JPEG is the only supported image type.
          type: string
      type: object
      id: Image
      description: Overlaid jpeg image.
    VideoStream:
      description: Video stream resource.
      type: object
      properties:
        vp9:
          description: VP9 codec settings.
          $ref: '#/components/schemas/Vp9CodecSettings'
        h265:
          $ref: '#/components/schemas/H265CodecSettings'
          description: H265 codec settings.
        h264:
          $ref: '#/components/schemas/H264CodecSettings'
          description: H264 codec settings.
      id: VideoStream
    Audio:
      properties:
        lowBoost:
          description: Enable boosting low frequency components. The default is `false`. **Note:** This field is not supported.
          type: boolean
        highBoost:
          description: Enable boosting high frequency components. The default is `false`. **Note:** This field is not supported.
          type: boolean
        lufs:
          description: 'Specify audio loudness normalization in loudness units relative to full scale (LUFS). Enter a value between -24 and 0 (the default), where: * -24 is the Advanced Television Systems Committee (ATSC A/85) standard * -23 is the EU R128 broadcast standard * -19 is the prior standard for online mono audio * -18 is the ReplayGain standard * -16 is the prior standard for stereo audio * -14 is the new online audio standard recommended by Spotify, as well as Amazon Echo * 0 disables normalization'
          type: number
          format: double
      type: object
      description: Audio preprocessing configuration.
      id: Audio
    Overlay:
      type: object
      id: Overlay
      description: Overlay configuration.
      properties:
        animations:
          type: array
          items:
            $ref: '#/components/schemas/Animation'
          description: List of Animations. The list should be chronological, without any time overlap.
        image:
          description: Image overlay.
          $ref: '#/components/schemas/Image'
    ListJobsResponse:
      properties:
        unreachable:
          items:
            type: string
          type: array
          description: List of regions that could not be reached.
        jobs:
          type: array
          description: List of jobs in the specified region.
          items:
            $ref: '#/components/schemas/Job'
        nextPageToken:
          description: The pagination token.
          type: string
      description: Response message for `TranscoderService.ListJobs`.
      id: ListJobsResponse
      type: object
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    job_templates:
      id: google.transcoder.job_templates
      name: job_templates
      title: Job_templates
      methods:
        projects_locations_jobTemplates_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1jobTemplates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobTemplates_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1jobTemplates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobTemplates_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1jobTemplates~1{jobTemplatesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobTemplates_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1jobTemplates~1{jobTemplatesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/job_templates/methods/projects_locations_jobTemplates_get'
          - $ref: '#/components/x-stackQL-resources/job_templates/methods/projects_locations_jobTemplates_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/job_templates/methods/projects_locations_jobTemplates_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/job_templates/methods/projects_locations_jobTemplates_delete'
    jobs:
      id: google.transcoder.jobs
      name: jobs
      title: Jobs
      methods:
        projects_locations_jobs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1jobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_jobs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_jobs_get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_jobs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_jobs_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_jobs_delete'
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/jobTemplates:
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
    post:
      description: Creates a job template in the specified region.
      operationId: transcoder.projects.locations.jobTemplates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobTemplate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: jobTemplateId
          schema:
            type: string
      x-stackQL-resource: job_templates
      x-stackQL-verb: insert
    get:
      description: Lists job templates in the specified region.
      operationId: transcoder.projects.locations.jobTemplates.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobTemplatesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: job_templates
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/jobTemplates/{jobTemplatesId}:
    parameters: *ref_1
    delete:
      description: Deletes a job template.
      operationId: transcoder.projects.locations.jobTemplates.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: job_templates
      x-stackQL-verb: delete
    get:
      description: Returns the job template data.
      operationId: transcoder.projects.locations.jobTemplates.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: job_templates
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}:
    parameters: *ref_1
    get:
      description: Returns the job data.
      operationId: transcoder.projects.locations.jobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: select
    delete:
      description: Deletes a job.
      operationId: transcoder.projects.locations.jobs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: jobs
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/jobs:
    parameters: *ref_1
    post:
      description: Creates a job in the specified region.
      operationId: transcoder.projects.locations.jobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: insert
    get:
      description: Lists jobs in the specified region.
      operationId: transcoder.projects.locations.jobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: select
