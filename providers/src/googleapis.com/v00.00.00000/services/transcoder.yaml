openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Transcoder API
  description: 'This API converts video files into formats suitable for consumer distribution. For more information, see the Transcoder API overview. '
  version: v1
  x-discovery-doc-revision: '20230809'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/transcoder/docs/'
servers:
  - url: 'https://transcoder.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    AudioStream:
      type: object
      id: AudioStream
      properties:
        displayName:
          description: The name for this particular audio stream that will be added to the HLS/DASH manifest. Not supported in MP4 files.
          type: string
        channelCount:
          type: integer
          description: Number of audio channels. Must be between 1 and 6. The default is 2.
          format: int32
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier. Not supported in MP4 files.'
        mapping:
          items:
            $ref: '#/components/schemas/AudioMapping'
          description: The mapping for the JobConfig.edit_list atoms with audio EditAtom.inputs.
          type: array
        sampleRateHertz:
          description: The audio sample rate in Hertz. The default is 48000 Hertz.
          type: integer
          format: int32
        codec:
          description: 'The codec for this audio stream. The default is `aac`. Supported audio codecs: - `aac` - `aac-he` - `aac-he-v2` - `mp3` - `ac3` - `eac3`'
          type: string
        bitrateBps:
          description: 'Required. Audio bitrate in bits per second. Must be between 1 and 10,000,000.'
          format: int32
          type: integer
        channelLayout:
          type: array
          description: 'A list of channel names specifying layout of the audio channels. This only affects the metadata embedded in the container headers, if supported by the specified format. The default is `["fl", "fr"]`. Supported channel names: - `fl` - Front left channel - `fr` - Front right channel - `sl` - Side left channel - `sr` - Side right channel - `fc` - Front center channel - `lfe` - Low frequency'
          items:
            type: string
      description: Audio stream resource.
    ListJobTemplatesResponse:
      type: object
      id: ListJobTemplatesResponse
      properties:
        jobTemplates:
          description: List of job templates in the specified region.
          type: array
          items:
            $ref: '#/components/schemas/JobTemplate'
        unreachable:
          items:
            type: string
          type: array
          description: List of regions that could not be reached.
        nextPageToken:
          description: The pagination token.
          type: string
      description: Response message for `TranscoderService.ListJobTemplates`.
    AudioMapping:
      description: The mapping for the JobConfig.edit_list atoms with audio EditAtom.inputs.
      type: object
      id: AudioMapping
      properties:
        inputTrack:
          type: integer
          description: Required. The zero-based index of the track in the input file.
          format: int32
        gainDb:
          format: double
          type: number
          description: 'Audio volume control in dB. Negative values decrease volume, positive values increase. The default is 0.'
        atomKey:
          description: Required. The EditAtom.key that references the atom with audio inputs in the JobConfig.edit_list.
          type: string
        inputChannel:
          description: Required. The zero-based index of the channel in the input audio stream.
          type: integer
          format: int32
        inputKey:
          type: string
          description: Required. The Input.key that identifies the input file.
        outputChannel:
          type: integer
          description: Required. The zero-based index of the channel in the output audio stream.
          format: int32
    Vp9CodecSettings:
      type: object
      id: Vp9CodecSettings
      description: VP9 codec settings.
      properties:
        pixelFormat:
          description: 'Pixel format to use. The default is `yuv420p`. Supported pixel formats: - `yuv420p` pixel format - `yuv422p` pixel format - `yuv444p` pixel format - `yuv420p10` 10-bit HDR pixel format - `yuv422p10` 10-bit HDR pixel format - `yuv444p10` 10-bit HDR pixel format - `yuv420p12` 12-bit HDR pixel format - `yuv422p12` 12-bit HDR pixel format - `yuv444p12` 12-bit HDR pixel format'
          type: string
        widthPixels:
          format: int32
          type: integer
          description: 'The width of the video in pixels. Must be an even integer. When not specified, the width is adjusted to match the specified height and input aspect ratio. If both are omitted, the input width is used. For portrait videos that contain horizontal ASR and rotation metadata, provide the width, in pixels, per the horizontal ASR. The API calculates the height per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.'
        profile:
          description: 'Enforces the specified codec profile. The following profiles are supported: * `profile0` (default) * `profile1` * `profile2` * `profile3` The available options are [WebM-compatible](https://www.webmproject.org/vp9/profiles/). Note that certain values for this field may cause the transcoder to override other fields you set in the `Vp9CodecSettings` message.'
          type: string
        rateControlMode:
          description: 'Specify the mode. The default is `vbr`. Supported rate control modes: - `vbr` - variable bitrate'
          type: string
        gopFrameCount:
          type: integer
          description: Select the GOP size based on the specified frame count. Must be greater than zero.
          format: int32
        gopDuration:
          description: 'Select the GOP size based on the specified duration. The default is `3s`. Note that `gopDuration` must be less than or equal to [`segmentDuration`](#SegmentSettings), and [`segmentDuration`](#SegmentSettings) must be divisible by `gopDuration`.'
          type: string
          format: google-duration
        bitrateBps:
          format: int32
          description: 'Required. The video bitrate in bits per second. The minimum value is 1,000. The maximum value is 480,000,000.'
          type: integer
        heightPixels:
          format: int32
          type: integer
          description: 'The height of the video in pixels. Must be an even integer. When not specified, the height is adjusted to match the specified width and input aspect ratio. If both are omitted, the input height is used. For portrait videos that contain horizontal ASR and rotation metadata, provide the height, in pixels, per the horizontal ASR. The API calculates the width per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.'
        frameRate:
          format: double
          description: 'Required. The target video frame rate in frames per second (FPS). Must be less than or equal to 120. Will default to the input frame rate if larger than the input frame rate. The API will generate an output FPS that is divisible by the input FPS, and smaller or equal to the target FPS. See [Calculating frame rate](https://cloud.google.com/transcoder/docs/concepts/frame-rate) for more information.'
          type: number
        crfLevel:
          type: integer
          format: int32
          description: 'Target CRF level. Must be between 10 and 36, where 10 is the highest quality and 36 is the most efficient compression. The default is 21. **Note:** This field is not supported.'
    Deblock:
      type: object
      id: Deblock
      description: 'Deblock preprocessing configuration. **Note:** This configuration is not supported.'
      properties:
        enabled:
          type: boolean
          description: Enable deblocker. The default is `false`.
        strength:
          type: number
          format: double
          description: 'Set strength of the deblocker. Enter a value between 0 and 1. The higher the value, the stronger the block removal. 0 is no deblocking. The default is 0.'
    Image:
      id: Image
      type: object
      description: Overlaid image.
      properties:
        uri:
          type: string
          description: 'Required. URI of the image in Cloud Storage. For example, `gs://bucket/inputs/image.png`. Only PNG and JPEG images are supported.'
        alpha:
          description: 'Target image opacity. Valid values are from `1.0` (solid, default) to `0.0` (transparent), exclusive. Set this to a value greater than `0.0`.'
          type: number
          format: double
        resolution:
          $ref: '#/components/schemas/NormalizedCoordinate'
          description: 'Normalized image resolution, based on output video resolution. Valid values: `0.0`â€“`1.0`. To respect the original image aspect ratio, set either `x` or `y` to `0.0`. To use the original image resolution, set both `x` and `y` to `0.0`.'
    Animation:
      id: Animation
      type: object
      properties:
        animationEnd:
          description: End previous animation.
          $ref: '#/components/schemas/AnimationEnd'
        animationStatic:
          $ref: '#/components/schemas/AnimationStatic'
          description: Display static overlay object.
        animationFade:
          $ref: '#/components/schemas/AnimationFade'
          description: Display overlay object with fade animation.
      description: Animation types.
    H265CodecSettings:
      id: H265CodecSettings
      type: object
      properties:
        heightPixels:
          format: int32
          type: integer
          description: 'The height of the video in pixels. Must be an even integer. When not specified, the height is adjusted to match the specified width and input aspect ratio. If both are omitted, the input height is used. For portrait videos that contain horizontal ASR and rotation metadata, provide the height, in pixels, per the horizontal ASR. The API calculates the width per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.'
        enableTwoPass:
          type: boolean
          description: Use two-pass encoding strategy to achieve better video quality. H265CodecSettings.rate_control_mode must be `vbr`. The default is `false`.
        allowOpenGop:
          type: boolean
          description: Specifies whether an open Group of Pictures (GOP) structure should be allowed or not. The default is `false`.
        bPyramid:
          description: Allow B-pyramid for reference frame selection. This may not be supported on all decoders. The default is `false`.
          type: boolean
        gopFrameCount:
          format: int32
          type: integer
          description: Select the GOP size based on the specified frame count. Must be greater than zero.
        aqStrength:
          type: number
          description: 'Specify the intensity of the adaptive quantizer (AQ). Must be between 0 and 1, where 0 disables the quantizer and 1 maximizes the quantizer. A higher value equals a lower bitrate but smoother image. The default is 0.'
          format: double
        widthPixels:
          type: integer
          description: 'The width of the video in pixels. Must be an even integer. When not specified, the width is adjusted to match the specified height and input aspect ratio. If both are omitted, the input width is used. For portrait videos that contain horizontal ASR and rotation metadata, provide the width, in pixels, per the horizontal ASR. The API calculates the height per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.'
          format: int32
        vbvFullnessBits:
          format: int32
          description: Initial fullness of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to 90% of H265CodecSettings.vbv_size_bits.
          type: integer
        tune:
          description: 'Enforces the specified codec tune. The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.265). Note that certain values for this field may cause the transcoder to override other fields you set in the `H265CodecSettings` message.'
          type: string
        gopDuration:
          type: string
          format: google-duration
          description: 'Select the GOP size based on the specified duration. The default is `3s`. Note that `gopDuration` must be less than or equal to [`segmentDuration`](#SegmentSettings), and [`segmentDuration`](#SegmentSettings) must be divisible by `gopDuration`.'
        rateControlMode:
          description: 'Specify the mode. The default is `vbr`. Supported rate control modes: - `vbr` - variable bitrate - `crf` - constant rate factor'
          type: string
        bFrameCount:
          description: The number of consecutive B-frames. Must be greater than or equal to zero. Must be less than H265CodecSettings.gop_frame_count if set. The default is 0.
          format: int32
          type: integer
        bitrateBps:
          format: int32
          description: 'Required. The video bitrate in bits per second. The minimum value is 1,000. The maximum value is 800,000,000.'
          type: integer
        profile:
          description: 'Enforces the specified codec profile. The following profiles are supported: * 8-bit profiles * `main` (default) * `main-intra` * `mainstillpicture` * 10-bit profiles * `main10` (default) * `main10-intra` * `main422-10` * `main422-10-intra` * `main444-10` * `main444-10-intra` * 12-bit profiles * `main12` (default) * `main12-intra` * `main422-12` * `main422-12-intra` * `main444-12` * `main444-12-intra` The available options are [FFmpeg-compatible](https://x265.readthedocs.io/). Note that certain values for this field may cause the transcoder to override other fields you set in the `H265CodecSettings` message.'
          type: string
        preset:
          description: 'Enforces the specified codec preset. The default is `veryfast`. The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.265). Note that certain values for this field may cause the transcoder to override other fields you set in the `H265CodecSettings` message.'
          type: string
        pixelFormat:
          type: string
          description: 'Pixel format to use. The default is `yuv420p`. Supported pixel formats: - `yuv420p` pixel format - `yuv422p` pixel format - `yuv444p` pixel format - `yuv420p10` 10-bit HDR pixel format - `yuv422p10` 10-bit HDR pixel format - `yuv444p10` 10-bit HDR pixel format - `yuv420p12` 12-bit HDR pixel format - `yuv422p12` 12-bit HDR pixel format - `yuv444p12` 12-bit HDR pixel format'
        frameRate:
          format: double
          description: 'Required. The target video frame rate in frames per second (FPS). Must be less than or equal to 120. Will default to the input frame rate if larger than the input frame rate. The API will generate an output FPS that is divisible by the input FPS, and smaller or equal to the target FPS. See [Calculating frame rate](https://cloud.google.com/transcoder/docs/concepts/frame-rate) for more information.'
          type: number
        crfLevel:
          type: integer
          format: int32
          description: 'Target CRF level. Must be between 10 and 36, where 10 is the highest quality and 36 is the most efficient compression. The default is 21.'
        vbvSizeBits:
          description: Size of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to `VideoStream.bitrate_bps`.
          format: int32
          type: integer
      description: H265 codec settings.
    SegmentSettings:
      properties:
        segmentDuration:
          description: 'Duration of the segments in seconds. The default is `6.0s`. Note that `segmentDuration` must be greater than or equal to [`gopDuration`](#videostream), and `segmentDuration` must be divisible by [`gopDuration`](#videostream).'
          format: google-duration
          type: string
        individualSegments:
          type: boolean
          description: Required. Create an individual segment file. The default is `false`.
      id: SegmentSettings
      description: 'Segment settings for `ts`, `fmp4` and `vtt`.'
      type: object
    PubsubDestination:
      description: A Pub/Sub destination.
      properties:
        topic:
          description: 'The name of the Pub/Sub topic to publish job completion notification to. For example: `projects/{project}/topics/{topic}`.'
          type: string
      type: object
      id: PubsubDestination
    H264CodecSettings:
      properties:
        aqStrength:
          format: double
          type: number
          description: 'Specify the intensity of the adaptive quantizer (AQ). Must be between 0 and 1, where 0 disables the quantizer and 1 maximizes the quantizer. A higher value equals a lower bitrate but smoother image. The default is 0.'
        rateControlMode:
          description: 'Specify the mode. The default is `vbr`. Supported rate control modes: - `vbr` - variable bitrate - `crf` - constant rate factor'
          type: string
        bitrateBps:
          type: integer
          description: 'Required. The video bitrate in bits per second. The minimum value is 1,000. The maximum value is 800,000,000.'
          format: int32
        widthPixels:
          type: integer
          description: 'The width of the video in pixels. Must be an even integer. When not specified, the width is adjusted to match the specified height and input aspect ratio. If both are omitted, the input width is used. For portrait videos that contain horizontal ASR and rotation metadata, provide the width, in pixels, per the horizontal ASR. The API calculates the height per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.'
          format: int32
        allowOpenGop:
          type: boolean
          description: Specifies whether an open Group of Pictures (GOP) structure should be allowed or not. The default is `false`.
        pixelFormat:
          type: string
          description: 'Pixel format to use. The default is `yuv420p`. Supported pixel formats: - `yuv420p` pixel format - `yuv422p` pixel format - `yuv444p` pixel format - `yuv420p10` 10-bit HDR pixel format - `yuv422p10` 10-bit HDR pixel format - `yuv444p10` 10-bit HDR pixel format - `yuv420p12` 12-bit HDR pixel format - `yuv422p12` 12-bit HDR pixel format - `yuv444p12` 12-bit HDR pixel format'
        gopDuration:
          description: 'Select the GOP size based on the specified duration. The default is `3s`. Note that `gopDuration` must be less than or equal to [`segmentDuration`](#SegmentSettings), and [`segmentDuration`](#SegmentSettings) must be divisible by `gopDuration`.'
          format: google-duration
          type: string
        frameRate:
          format: double
          type: number
          description: 'Required. The target video frame rate in frames per second (FPS). Must be less than or equal to 120. Will default to the input frame rate if larger than the input frame rate. The API will generate an output FPS that is divisible by the input FPS, and smaller or equal to the target FPS. See [Calculating frame rate](https://cloud.google.com/transcoder/docs/concepts/frame-rate) for more information.'
        tune:
          description: 'Enforces the specified codec tune. The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.264#Tune). Note that certain values for this field may cause the transcoder to override other fields you set in the `H264CodecSettings` message.'
          type: string
        bPyramid:
          description: Allow B-pyramid for reference frame selection. This may not be supported on all decoders. The default is `false`.
          type: boolean
        crfLevel:
          type: integer
          description: 'Target CRF level. Must be between 10 and 36, where 10 is the highest quality and 36 is the most efficient compression. The default is 21.'
          format: int32
        preset:
          type: string
          description: 'Enforces the specified codec preset. The default is `veryfast`. The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.264#Preset). Note that certain values for this field may cause the transcoder to override other fields you set in the `H264CodecSettings` message.'
        enableTwoPass:
          description: Use two-pass encoding strategy to achieve better video quality. H264CodecSettings.rate_control_mode must be `vbr`. The default is `false`.
          type: boolean
        vbvFullnessBits:
          type: integer
          format: int32
          description: Initial fullness of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to 90% of H264CodecSettings.vbv_size_bits.
        entropyCoder:
          description: 'The entropy coder to use. The default is `cabac`. Supported entropy coders: - `cavlc` - `cabac`'
          type: string
        bFrameCount:
          format: int32
          description: The number of consecutive B-frames. Must be greater than or equal to zero. Must be less than H264CodecSettings.gop_frame_count if set. The default is 0.
          type: integer
        gopFrameCount:
          type: integer
          format: int32
          description: Select the GOP size based on the specified frame count. Must be greater than zero.
        vbvSizeBits:
          type: integer
          format: int32
          description: Size of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to H264CodecSettings.bitrate_bps.
        heightPixels:
          format: int32
          description: 'The height of the video in pixels. Must be an even integer. When not specified, the height is adjusted to match the specified width and input aspect ratio. If both are omitted, the input height is used. For portrait videos that contain horizontal ASR and rotation metadata, provide the height, in pixels, per the horizontal ASR. The API calculates the width per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.'
          type: integer
        profile:
          description: 'Enforces the specified codec profile. The following profiles are supported: * `baseline` * `main` * `high` (default) The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.264#Tune). Note that certain values for this field may cause the transcoder to override other fields you set in the `H264CodecSettings` message.'
          type: string
      description: H264 codec settings.
      id: H264CodecSettings
      type: object
    SpriteSheet:
      type: object
      properties:
        filePrefix:
          description: 'Required. File name prefix for the generated sprite sheets. Each sprite sheet has an incremental 10-digit zero-padded suffix starting from 0 before the extension, such as `sprite_sheet0000000123.jpeg`.'
          type: string
        rowCount:
          format: int32
          type: integer
          description: 'The maximum number of rows per sprite sheet. When the sprite sheet is full, a new sprite sheet is created. The default is 0, which indicates no maximum limit.'
        totalCount:
          type: integer
          format: int32
          description: Total number of sprites. Create the specified number of sprites distributed evenly across the timeline of the output media. The default is 100.
        quality:
          format: int32
          description: 'The quality of the generated sprite sheet. Enter a value between 1 and 100, where 1 is the lowest quality and 100 is the highest quality. The default is 100. A high quality value corresponds to a low image data compression ratio.'
          type: integer
        spriteHeightPixels:
          description: 'Required. The height of sprite in pixels. Must be an even integer. To preserve the source aspect ratio, set the SpriteSheet.sprite_height_pixels field or the SpriteSheet.sprite_width_pixels field, but not both (the API will automatically calculate the missing field). For portrait videos that contain horizontal ASR and rotation metadata, provide the height, in pixels, per the horizontal ASR. The API calculates the width per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.'
          format: int32
          type: integer
        format:
          type: string
          description: 'Format type. The default is `jpeg`. Supported formats: - `jpeg`'
        spriteWidthPixels:
          type: integer
          description: 'Required. The width of sprite in pixels. Must be an even integer. To preserve the source aspect ratio, set the SpriteSheet.sprite_width_pixels field or the SpriteSheet.sprite_height_pixels field, but not both (the API will automatically calculate the missing field). For portrait videos that contain horizontal ASR and rotation metadata, provide the width, in pixels, per the horizontal ASR. The API calculates the height per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.'
          format: int32
        interval:
          type: string
          description: 'Starting from `0s`, create sprites at regular intervals. Specify the interval value in seconds.'
          format: google-duration
        startTimeOffset:
          format: google-duration
          description: 'Start time in seconds, relative to the output file timeline. Determines the first sprite to pick. The default is `0s`.'
          type: string
        endTimeOffset:
          format: google-duration
          type: string
          description: 'End time in seconds, relative to the output file timeline. When `end_time_offset` is not specified, the sprites are generated until the end of the output file.'
        columnCount:
          format: int32
          description: 'The maximum number of sprites per row in a sprite sheet. The default is 0, which indicates no maximum limit.'
          type: integer
      description: Sprite sheet configuration.
      id: SpriteSheet
    AdBreak:
      id: AdBreak
      description: Ad break.
      type: object
      properties:
        startTimeOffset:
          type: string
          description: 'Start time in seconds for the ad break, relative to the output file timeline. The default is `0s`.'
          format: google-duration
    SecretManagerSource:
      type: object
      id: SecretManagerSource
      properties:
        secretVersion:
          type: string
          description: 'Required. The name of the Secret Version containing the encryption key in the following format: `projects/{project}/secrets/{secret_id}/versions/{version_number}` Note that only numbered versions are supported. Aliases like "latest" are not supported.'
      description: Configuration for secrets stored in Google Secret Manager.
    JobTemplate:
      properties:
        labels:
          type: object
          description: The labels associated with this job template. You can use these to organize and group your job templates.
          additionalProperties:
            type: string
        name:
          description: 'The resource name of the job template. Format: `projects/{project_number}/locations/{location}/jobTemplates/{job_template}`'
          type: string
        config:
          $ref: '#/components/schemas/JobConfig'
          description: The configuration for this template.
      id: JobTemplate
      type: object
      description: Transcoding job template resource.
    PreprocessingConfig:
      id: PreprocessingConfig
      description: Preprocessing configurations.
      type: object
      properties:
        color:
          $ref: '#/components/schemas/Color'
          description: Color preprocessing configuration.
        deinterlace:
          $ref: '#/components/schemas/Deinterlace'
          description: Specify the video deinterlace configuration.
        crop:
          description: Specify the video cropping configuration.
          $ref: '#/components/schemas/Crop'
        denoise:
          $ref: '#/components/schemas/Denoise'
          description: Denoise preprocessing configuration.
        audio:
          description: Audio preprocessing configuration.
          $ref: '#/components/schemas/Audio'
        deblock:
          description: Deblock preprocessing configuration.
          $ref: '#/components/schemas/Deblock'
        pad:
          $ref: '#/components/schemas/Pad'
          description: Specify the video pad filter configuration.
    AnimationFade:
      properties:
        fadeType:
          enum:
            - FADE_TYPE_UNSPECIFIED
            - FADE_IN
            - FADE_OUT
          description: 'Required. Type of fade animation: `FADE_IN` or `FADE_OUT`.'
          enumDescriptions:
            - The fade type is not specified.
            - Fade the overlay object into view.
            - Fade the overlay object out of view.
          type: string
        endTimeOffset:
          format: google-duration
          type: string
          description: 'The time to end the fade animation, in seconds. Default: `start_time_offset` + 1s'
        xy:
          $ref: '#/components/schemas/NormalizedCoordinate'
          description: 'Normalized coordinates based on output video resolution. Valid values: `0.0`â€“`1.0`. `xy` is the upper-left coordinate of the overlay object. For example, use the x and y coordinates {0,0} to position the top-left corner of the overlay animation in the top-left corner of the output video.'
        startTimeOffset:
          format: google-duration
          type: string
          description: 'The time to start the fade animation, in seconds. Default: 0'
      type: object
      id: AnimationFade
      description: Display overlay object with fade animation.
    DashConfig:
      properties:
        segmentReferenceScheme:
          type: string
          description: The segment reference scheme for a `DASH` manifest. The default is `SEGMENT_LIST`.
          enumDescriptions:
            - The segment reference scheme is not specified.
            - 'Explicitly lists the URLs of media files for each segment. For example, if SegmentSettings.individual_segments is `true`, then the manifest contains fields similar to the following: ```xml ... ```'
            - 'SegmentSettings.individual_segments must be set to `true` to use this segment reference scheme. Uses the DASH specification `` tag to determine the URLs of media files for each segment. For example: ```xml ... ```'
          enum:
            - SEGMENT_REFERENCE_SCHEME_UNSPECIFIED
            - SEGMENT_LIST
            - SEGMENT_TEMPLATE_NUMBER
      id: DashConfig
      description: '`DASH` manifest configuration.'
      type: object
    Aes128Encryption:
      description: Configuration for AES-128 encryption.
      type: object
      id: Aes128Encryption
      properties: {}
    Manifest:
      type: object
      description: Manifest configuration.
      properties:
        muxStreams:
          type: array
          items:
            type: string
          description: 'Required. List of user supplied MuxStream.key values that should appear in this manifest. When Manifest.type is `HLS`, a media manifest with name MuxStream.key and `.m3u8` extension is generated for each element in this list.'
        fileName:
          description: The name of the generated file. The default is `manifest` with the extension suffix corresponding to the Manifest.type.
          type: string
        dash:
          $ref: '#/components/schemas/DashConfig'
          description: '`DASH` manifest configuration.'
        type:
          enum:
            - MANIFEST_TYPE_UNSPECIFIED
            - HLS
            - DASH
          description: Required. Type of the manifest.
          enumDescriptions:
            - The manifest type is not specified.
            - Create an HLS manifest. The corresponding file extension is `.m3u8`.
            - Create an MPEG-DASH manifest. The corresponding file extension is `.mpd`.
          type: string
      id: Manifest
    Output:
      id: Output
      type: object
      description: Location of output file(s) in a Cloud Storage bucket.
      properties:
        uri:
          type: string
          description: 'URI for the output file(s). For example, `gs://my-bucket/outputs/`. If empty, the value is populated from Job.output_uri. See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats).'
    Pad:
      type: object
      id: Pad
      properties:
        topPixels:
          format: int32
          description: The number of pixels to add to the top. The default is 0.
          type: integer
        bottomPixels:
          format: int32
          description: The number of pixels to add to the bottom. The default is 0.
          type: integer
        leftPixels:
          type: integer
          format: int32
          description: The number of pixels to add to the left. The default is 0.
        rightPixels:
          description: The number of pixels to add to the right. The default is 0.
          type: integer
          format: int32
      description: Pad filter configuration for the input video. The padded input video is scaled after padding with black to match the output resolution.
    TextMapping:
      description: The mapping for the JobConfig.edit_list atoms with text EditAtom.inputs.
      properties:
        inputKey:
          description: Required. The Input.key that identifies the input file.
          type: string
        atomKey:
          type: string
          description: Required. The EditAtom.key that references atom with text inputs in the JobConfig.edit_list.
        inputTrack:
          format: int32
          type: integer
          description: Required. The zero-based index of the track in the input file.
      type: object
      id: TextMapping
    NormalizedCoordinate:
      description: '2D normalized coordinates. Default: `{0.0, 0.0}`'
      properties:
        x:
          format: double
          type: number
          description: Normalized x coordinate.
        'y':
          description: Normalized y coordinate.
          type: number
          format: double
      type: object
      id: NormalizedCoordinate
    ElementaryStream:
      description: 'Encoding of an input file such as an audio, video, or text track. Elementary streams must be packaged before mapping and sharing between different output formats.'
      type: object
      id: ElementaryStream
      properties:
        videoStream:
          $ref: '#/components/schemas/VideoStream'
          description: Encoding of a video stream.
        key:
          type: string
          description: A unique key for this elementary stream.
        audioStream:
          $ref: '#/components/schemas/AudioStream'
          description: Encoding of an audio stream.
        textStream:
          $ref: '#/components/schemas/TextStream'
          description: 'Encoding of a text stream. For example, closed captions or subtitles.'
    Deinterlace:
      description: Deinterlace configuration for input video.
      properties:
        bwdif:
          $ref: '#/components/schemas/BwdifConfig'
          description: Specifies the Bob Weaver Deinterlacing Filter Configuration.
        yadif:
          $ref: '#/components/schemas/YadifConfig'
          description: Specifies the Yet Another Deinterlacing Filter Configuration.
      type: object
      id: Deinterlace
    Overlay:
      id: Overlay
      description: Overlay configuration.
      type: object
      properties:
        image:
          $ref: '#/components/schemas/Image'
          description: Image overlay.
        animations:
          type: array
          items:
            $ref: '#/components/schemas/Animation'
          description: 'List of animations. The list should be chronological, without any time overlap.'
    Status:
      properties:
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        code:
          type: integer
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
      type: object
    SampleAesEncryption:
      description: Configuration for SAMPLE-AES encryption.
      properties: {}
      type: object
      id: SampleAesEncryption
    Job:
      properties:
        name:
          type: string
          description: 'The resource name of the job. Format: `projects/{project_number}/locations/{location}/jobs/{job}`'
        inputUri:
          type: string
          description: 'Input only. Specify the `input_uri` to populate empty `uri` fields in each element of `Job.config.inputs` or `JobTemplate.config.inputs` when using template. URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`). See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats).'
        templateId:
          type: string
          description: 'Input only. Specify the `template_id` to use for populating `Job.config`. The default is `preset/web-hd`, which is the only supported preset. User defined JobTemplate: `{job_template_id}`'
        createTime:
          description: Output only. The time the job was created.
          type: string
          readOnly: true
          format: google-datetime
        config:
          $ref: '#/components/schemas/JobConfig'
          description: The configuration for this job.
        state:
          enumDescriptions:
            - The processing state is not specified.
            - The job is enqueued and will be picked up for processing soon.
            - The job is being processed.
            - The job has been completed successfully.
            - 'The job has failed. For additional information, see [Troubleshooting](https://cloud.google.com/transcoder/docs/troubleshooting).'
          enum:
            - PROCESSING_STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - FAILED
          description: Output only. The current state of the job.
          readOnly: true
          type: string
        mode:
          enumDescriptions:
            - The job processing mode is not specified.
            - The job processing mode is interactive mode. Interactive job will either be ran or rejected if quota does not allow for it.
            - The job processing mode is batch mode. Batch mode allows queuing of jobs.
          type: string
          description: The processing mode of the job. The default is `PROCESSING_MODE_INTERACTIVE`.
          enum:
            - PROCESSING_MODE_UNSPECIFIED
            - PROCESSING_MODE_INTERACTIVE
            - PROCESSING_MODE_BATCH
        startTime:
          format: google-datetime
          type: string
          description: Output only. The time the transcoding started.
          readOnly: true
        optimization:
          type: string
          enumDescriptions:
            - The optimization strategy is not specified.
            - Prioritize job processing speed.
            - Disable all optimizations.
          description: Optional. The optimization strategy of the job. The default is `AUTODETECT`.
          enum:
            - OPTIMIZATION_STRATEGY_UNSPECIFIED
            - AUTODETECT
            - DISABLED
        labels:
          description: The labels associated with this job. You can use these to organize and group your jobs.
          additionalProperties:
            type: string
          type: object
        ttlAfterCompletionDays:
          format: int32
          description: 'Job time to live value in days, which will be effective after job completion. Job should be deleted automatically after the given TTL. Enter a value between 1 and 90. The default is 30.'
          type: integer
        error:
          description: Output only. An error object that describes the reason for the failure. This property is always present when ProcessingState is `FAILED`.
          readOnly: true
          $ref: '#/components/schemas/Status'
        endTime:
          description: Output only. The time the transcoding finished.
          type: string
          readOnly: true
          format: google-datetime
        outputUri:
          type: string
          description: 'Input only. Specify the `output_uri` to populate an empty `Job.config.output.uri` or `JobTemplate.config.output.uri` when using template. URI for the output file(s). For example, `gs://my-bucket/outputs/`. See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats).'
        batchModePriority:
          type: integer
          description: The processing priority of a batch job. This field can only be set for batch mode jobs. The default value is 0. This value cannot be negative. Higher values correspond to higher priorities for the job.
          format: int32
      id: Job
      type: object
      description: Transcoding job resource.
    Denoise:
      type: object
      description: 'Denoise preprocessing configuration. **Note:** This configuration is not supported.'
      id: Denoise
      properties:
        strength:
          format: double
          description: 'Set strength of the denoise. Enter a value between 0 and 1. The higher the value, the smoother the image. 0 is no denoising. The default is 0.'
          type: number
        tune:
          type: string
          description: 'Set the denoiser mode. The default is `standard`. Supported denoiser modes: - `standard` - `grain`'
    TextStream:
      id: TextStream
      type: object
      description: 'Encoding of a text stream. For example, closed captions or subtitles.'
      properties:
        languageCode:
          type: string
          description: 'The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier. Not supported in MP4 files.'
        codec:
          type: string
          description: 'The codec for this text stream. The default is `webvtt`. Supported text codecs: - `srt` - `ttml` - `cea608` - `cea708` - `webvtt`'
        mapping:
          description: The mapping for the JobConfig.edit_list atoms with text EditAtom.inputs.
          type: array
          items:
            $ref: '#/components/schemas/TextMapping'
        displayName:
          type: string
          description: The name for this particular text stream that will be added to the HLS/DASH manifest. Not supported in MP4 files.
    Encryption:
      type: object
      properties:
        secretManagerKeySource:
          $ref: '#/components/schemas/SecretManagerSource'
          description: Keys are stored in Google Secret Manager.
        drmSystems:
          $ref: '#/components/schemas/DrmSystems'
          description: 'Required. DRM system(s) to use; at least one must be specified. If a DRM system is omitted, it is considered disabled.'
        id:
          type: string
          description: Required. Identifier for this set of encryption options.
        aes128:
          description: Configuration for AES-128 encryption.
          $ref: '#/components/schemas/Aes128Encryption'
        mpegCenc:
          $ref: '#/components/schemas/MpegCommonEncryption'
          description: Configuration for MPEG Common Encryption (MPEG-CENC).
        sampleAes:
          description: Configuration for SAMPLE-AES encryption.
          $ref: '#/components/schemas/SampleAesEncryption'
      description: Encryption settings.
      id: Encryption
    MpegCommonEncryption:
      description: Configuration for MPEG Common Encryption (MPEG-CENC).
      properties:
        scheme:
          type: string
          description: 'Required. Specify the encryption scheme. Supported encryption schemes: - `cenc` - `cbcs`'
      type: object
      id: MpegCommonEncryption
    BwdifConfig:
      id: BwdifConfig
      type: object
      properties:
        parity:
          description: 'The picture field parity assumed for the input interlaced video. The default is `auto`. Supported values: - `tff`: Assume the top field is first - `bff`: Assume the bottom field is first - `auto`: Enable automatic detection of field parity'
          type: string
        mode:
          type: string
          description: 'Specifies the deinterlacing mode to adopt. The default is `send_frame`. Supported values: - `send_frame`: Output one frame for each frame - `send_field`: Output one frame for each field'
        deinterlaceAllFrames:
          description: Deinterlace all frames rather than just the frames identified as interlaced. The default is `false`.
          type: boolean
      description: Bob Weaver Deinterlacing Filter Configuration.
    DrmSystems:
      description: Defines configuration for DRM systems in use.
      type: object
      properties:
        clearkey:
          $ref: '#/components/schemas/Clearkey'
          description: Clearkey configuration.
        fairplay:
          description: Fairplay configuration.
          $ref: '#/components/schemas/Fairplay'
        playready:
          $ref: '#/components/schemas/Playready'
          description: Playready configuration.
        widevine:
          $ref: '#/components/schemas/Widevine'
          description: Widevine configuration.
      id: DrmSystems
    ListJobsResponse:
      properties:
        jobs:
          items:
            $ref: '#/components/schemas/Job'
          description: List of jobs in the specified region.
          type: array
        nextPageToken:
          type: string
          description: The pagination token.
        unreachable:
          description: List of regions that could not be reached.
          type: array
          items:
            type: string
      description: Response message for `TranscoderService.ListJobs`.
      type: object
      id: ListJobsResponse
    JobConfig:
      properties:
        pubsubDestination:
          $ref: '#/components/schemas/PubsubDestination'
          description: Destination on Pub/Sub.
        encryptions:
          type: array
          items:
            $ref: '#/components/schemas/Encryption'
          description: List of encryption configurations for the content. Each configuration has an ID. Specify this ID in the MuxStream.encryption_id field to indicate the configuration to use for that `MuxStream` output.
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/Input'
          description: List of input assets stored in Cloud Storage.
        manifests:
          description: List of output manifests.
          type: array
          items:
            $ref: '#/components/schemas/Manifest'
        elementaryStreams:
          items:
            $ref: '#/components/schemas/ElementaryStream'
          description: List of elementary streams.
          type: array
        overlays:
          items:
            $ref: '#/components/schemas/Overlay'
          type: array
          description: 'List of overlays on the output video, in descending Z-order.'
        editList:
          type: array
          items:
            $ref: '#/components/schemas/EditAtom'
          description: List of edit atoms. Defines the ultimate timeline of the resulting file or manifest.
        adBreaks:
          items:
            $ref: '#/components/schemas/AdBreak'
          type: array
          description: List of ad breaks. Specifies where to insert ad break tags in the output manifests.
        spriteSheets:
          items:
            $ref: '#/components/schemas/SpriteSheet'
          description: List of output sprite sheets. Spritesheets require at least one VideoStream in the Jobconfig.
          type: array
        muxStreams:
          type: array
          items:
            $ref: '#/components/schemas/MuxStream'
          description: List of multiplexing settings for output streams.
        output:
          $ref: '#/components/schemas/Output'
          description: Output configuration.
      description: Job configuration
      type: object
      id: JobConfig
    Audio:
      description: Audio preprocessing configuration.
      id: Audio
      properties:
        highBoost:
          description: 'Enable boosting high frequency components. The default is `false`. **Note:** This field is not supported.'
          type: boolean
        lufs:
          type: number
          description: 'Specify audio loudness normalization in loudness units relative to full scale (LUFS). Enter a value between -24 and 0 (the default), where: * -24 is the Advanced Television Systems Committee (ATSC A/85) standard * -23 is the EU R128 broadcast standard * -19 is the prior standard for online mono audio * -18 is the ReplayGain standard * -16 is the prior standard for stereo audio * -14 is the new online audio standard recommended by Spotify, as well as Amazon Echo * 0 disables normalization'
          format: double
        lowBoost:
          description: 'Enable boosting low frequency components. The default is `false`. **Note:** This field is not supported.'
          type: boolean
      type: object
    Widevine:
      type: object
      properties: {}
      description: Widevine configuration.
      id: Widevine
    AnimationStatic:
      type: object
      id: AnimationStatic
      description: Display static overlay object.
      properties:
        startTimeOffset:
          description: 'The time to start displaying the overlay object, in seconds. Default: 0'
          type: string
          format: google-duration
        xy:
          description: 'Normalized coordinates based on output video resolution. Valid values: `0.0`â€“`1.0`. `xy` is the upper-left coordinate of the overlay object. For example, use the x and y coordinates {0,0} to position the top-left corner of the overlay animation in the top-left corner of the output video.'
          $ref: '#/components/schemas/NormalizedCoordinate'
    Crop:
      properties:
        rightPixels:
          format: int32
          description: The number of pixels to crop from the right. The default is 0.
          type: integer
        leftPixels:
          description: The number of pixels to crop from the left. The default is 0.
          format: int32
          type: integer
        bottomPixels:
          description: The number of pixels to crop from the bottom. The default is 0.
          format: int32
          type: integer
        topPixels:
          description: The number of pixels to crop from the top. The default is 0.
          format: int32
          type: integer
      id: Crop
      description: Video cropping configuration for the input video. The cropped input video is scaled to match the output resolution.
      type: object
    MuxStream:
      properties:
        fileName:
          type: string
          description: 'The name of the generated file. The default is MuxStream.key with the extension suffix corresponding to the MuxStream.container. Individual segments also have an incremental 10-digit zero-padded suffix starting from 0 before the extension, such as `mux_stream0000000123.ts`.'
        segmentSettings:
          $ref: '#/components/schemas/SegmentSettings'
          description: 'Segment settings for `ts`, `fmp4` and `vtt`.'
        elementaryStreams:
          items:
            type: string
          type: array
          description: List of ElementaryStream.key values multiplexed in this stream.
        encryptionId:
          description: 'Identifier of the encryption configuration to use. If omitted, output will be unencrypted.'
          type: string
        container:
          description: 'The container format. The default is `mp4` Supported container formats: - `ts` - `fmp4`- the corresponding file extension is `.m4s` - `mp4` - `vtt` See also: [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats)'
          type: string
        key:
          description: A unique key for this multiplexed stream.
          type: string
      type: object
      description: Multiplexing settings for output stream.
      id: MuxStream
    Empty:
      type: object
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
    Input:
      id: Input
      properties:
        key:
          description: A unique key for this input. Must be specified when using advanced mapping and edit lists.
          type: string
        uri:
          type: string
          description: 'URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`). If empty, the value is populated from Job.input_uri. See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats).'
        preprocessingConfig:
          description: Preprocessing configurations.
          $ref: '#/components/schemas/PreprocessingConfig'
      type: object
      description: Input asset.
    Fairplay:
      description: Fairplay configuration.
      type: object
      id: Fairplay
      properties: {}
    VideoStream:
      properties:
        h265:
          description: H265 codec settings.
          $ref: '#/components/schemas/H265CodecSettings'
        h264:
          $ref: '#/components/schemas/H264CodecSettings'
          description: H264 codec settings.
        vp9:
          $ref: '#/components/schemas/Vp9CodecSettings'
          description: VP9 codec settings.
      type: object
      description: Video stream resource.
      id: VideoStream
    Clearkey:
      description: Clearkey configuration.
      properties: {}
      type: object
      id: Clearkey
    Color:
      description: 'Color preprocessing configuration. **Note:** This configuration is not supported.'
      type: object
      properties:
        saturation:
          description: 'Control color saturation of the video. Enter a value between -1 and 1, where -1 is fully desaturated and 1 is maximum saturation. 0 is no change. The default is 0.'
          format: double
          type: number
        brightness:
          format: double
          type: number
          description: 'Control brightness of the video. Enter a value between -1 and 1, where -1 is minimum brightness and 1 is maximum brightness. 0 is no change. The default is 0.'
        contrast:
          description: 'Control black and white contrast of the video. Enter a value between -1 and 1, where -1 is minimum contrast and 1 is maximum contrast. 0 is no change. The default is 0.'
          format: double
          type: number
      id: Color
    YadifConfig:
      type: object
      id: YadifConfig
      properties:
        parity:
          description: 'The picture field parity assumed for the input interlaced video. The default is `auto`. Supported values: - `tff`: Assume the top field is first - `bff`: Assume the bottom field is first - `auto`: Enable automatic detection of field parity'
          type: string
        deinterlaceAllFrames:
          type: boolean
          description: Deinterlace all frames rather than just the frames identified as interlaced. The default is `false`.
        disableSpatialInterlacing:
          type: boolean
          description: Disable spacial interlacing. The default is `false`.
        mode:
          description: 'Specifies the deinterlacing mode to adopt. The default is `send_frame`. Supported values: - `send_frame`: Output one frame for each frame - `send_field`: Output one frame for each field'
          type: string
      description: Yet Another Deinterlacing Filter Configuration.
    AnimationEnd:
      type: object
      description: 'End previous overlay animation from the video. Without `AnimationEnd`, the overlay object will keep the state of previous animation until the end of the video.'
      id: AnimationEnd
      properties:
        startTimeOffset:
          format: google-duration
          description: 'The time to end overlay object, in seconds. Default: 0'
          type: string
    EditAtom:
      type: object
      properties:
        inputs:
          description: List of Input.key values identifying files that should be used in this atom. The listed `inputs` must have the same timeline.
          type: array
          items:
            type: string
        key:
          type: string
          description: A unique key for this atom. Must be specified when using advanced mapping.
        startTimeOffset:
          description: 'Start time in seconds for the atom, relative to the input file timeline. The default is `0s`.'
          format: google-duration
          type: string
        endTimeOffset:
          type: string
          description: 'End time in seconds for the atom, relative to the input file timeline. When `end_time_offset` is not specified, the `inputs` are used until the end of the atom.'
          format: google-duration
      description: Edit atom.
      id: EditAtom
    Playready:
      id: Playready
      type: object
      description: Playready configuration.
      properties: {}
  parameters:
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  x-stackQL-resources:
    job_templates:
      id: google.transcoder.job_templates
      name: job_templates
      title: Job Templates
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1jobTemplates~1{jobTemplatesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1jobTemplates~1{jobTemplatesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1jobTemplates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobTemplates
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1jobTemplates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1jobTemplates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/job_templates/methods/get'
          - $ref: '#/components/x-stackQL-resources/job_templates/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/job_templates/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/job_templates/methods/delete'
    jobs:
      id: google.transcoder.jobs
      name: jobs
      title: Jobs
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1jobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/delete'
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/jobTemplates/{jobTemplatesId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
    get:
      description: Returns the job template data.
      operationId: transcoder.projects.locations.jobTemplates.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: job_templates
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a job template.
      operationId: transcoder.projects.locations.jobTemplates.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: job_templates
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/jobTemplates':
    parameters: *ref_1
    get:
      description: Lists job templates in the specified region.
      operationId: transcoder.projects.locations.jobTemplates.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobTemplatesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: job_templates
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.jobTemplates
    post:
      description: Creates a job template in the specified region.
      operationId: transcoder.projects.locations.jobTemplates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobTemplate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: jobTemplateId
          schema:
            type: string
      x-stackQL-resource: job_templates
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}':
    parameters: *ref_1
    get:
      description: Returns the job data.
      operationId: transcoder.projects.locations.jobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a job.
      operationId: transcoder.projects.locations.jobs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: jobs
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/jobs':
    parameters: *ref_1
    post:
      description: Creates a job in the specified region.
      operationId: transcoder.projects.locations.jobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists jobs in the specified region.
      operationId: transcoder.projects.locations.jobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: jobs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.jobs
