openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Certificate Manager API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230802'
  x-generated-date: '2023-08-17'
externalDocs:
  url: 'https://cloud.google.com/certificate-manager'
servers:
  - url: 'https://certificatemanager.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    ListCertificateMapsResponse:
      description: Response for the `ListCertificateMaps` method.
      properties:
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
        certificateMaps:
          description: A list of certificate maps for the parent resource.
          type: array
          items:
            $ref: '#/components/schemas/CertificateMap'
        nextPageToken:
          type: string
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
      type: object
      id: ListCertificateMapsResponse
    OperationMetadata:
      id: OperationMetadata
      properties:
        createTime:
          format: google-datetime
          description: The time the operation was created.
          type: string
        endTime:
          description: The time the operation finished running.
          type: string
          format: google-datetime
        verb:
          type: string
          description: Name of the verb executed by the operation.
        target:
          description: Server-defined resource path for the target of the operation.
          type: string
        apiVersion:
          type: string
          description: API version used to start the operation.
        requestedCancellation:
          type: boolean
          description: 'Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
        statusMessage:
          description: 'Human-readable status of the operation, if any.'
          type: string
      type: object
      description: Represents the metadata of the long-running operation. Output only.
    ListCertificateMapEntriesResponse:
      type: object
      description: Response for the `ListCertificateMapEntries` method.
      properties:
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        certificateMapEntries:
          items:
            $ref: '#/components/schemas/CertificateMapEntry'
          type: array
          description: A list of certificate map entries for the parent resource.
        nextPageToken:
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
          type: string
      id: ListCertificateMapEntriesResponse
    CancelOperationRequest:
      properties: {}
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
    ProvisioningIssue:
      properties:
        details:
          type: string
          description: Output only. Human readable explanation about the issue. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use Reason enum.
          readOnly: true
        reason:
          type: string
          description: Output only. Reason for provisioning failures.
          enumDescriptions:
            - Reason is unspecified.
            - 'Certificate provisioning failed due to an issue with one or more of the domains on the certificate. For details of which domains failed, consult the `authorization_attempt_info` field.'
            - Exceeded Certificate Authority quotas or internal rate limits of the system. Provisioning may take longer to complete.
          readOnly: true
          enum:
            - REASON_UNSPECIFIED
            - AUTHORIZATION_ISSUE
            - RATE_LIMITED
      id: ProvisioningIssue
      description: Information about issues with provisioning a Managed Certificate.
      type: object
    ListOperationsResponse:
      id: ListOperationsResponse
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: A list of operations that matches the specified filter in the request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
      description: The response message for Operations.ListOperations.
      type: object
    IpConfig:
      description: Defines IP configuration where this Certificate Map is serving.
      id: IpConfig
      properties:
        ports:
          readOnly: true
          type: array
          items:
            type: integer
            format: uint32
          description: Output only. Ports.
        ipAddress:
          readOnly: true
          description: Output only. An external IP address.
          type: string
      type: object
    DnsAuthorization:
      properties:
        description:
          description: One or more paragraphs of text description of a DnsAuthorization.
          type: string
        name:
          description: A user-defined name of the dns authorization. DnsAuthorization names must be unique globally and match pattern `projects/*/locations/*/dnsAuthorizations/*`.
          type: string
        dnsResourceRecord:
          $ref: '#/components/schemas/DnsResourceRecord'
          readOnly: true
          description: Output only. DNS Resource Record that needs to be added to DNS configuration.
        domain:
          description: 'Required. Immutable. A domain that is being authorized. A DnsAuthorization resource covers a single domain and its wildcard, e.g. authorization for `example.com` can be used to issue certificates for `example.com` and `*.example.com`.'
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: Set of labels associated with a DnsAuthorization.
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The creation timestamp of a DnsAuthorization.
          type: string
        updateTime:
          format: google-datetime
          readOnly: true
          description: Output only. The last update timestamp of a DnsAuthorization.
          type: string
      description: A DnsAuthorization resource describes a way to perform domain authorization for certificate issuance.
      id: DnsAuthorization
      type: object
    Certificate:
      type: object
      id: Certificate
      description: Defines TLS certificate.
      properties:
        expireTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The expiry timestamp of a Certificate.
        managed:
          description: 'If set, contains configuration and state of a managed certificate.'
          $ref: '#/components/schemas/ManagedCertificate'
        description:
          type: string
          description: One or more paragraphs of text description of a certificate.
        pemCertificate:
          type: string
          description: Output only. The PEM-encoded certificate chain.
          readOnly: true
        labels:
          type: object
          description: Set of labels associated with a Certificate.
          additionalProperties:
            type: string
        selfManaged:
          description: 'If set, defines data of a self-managed certificate.'
          $ref: '#/components/schemas/SelfManagedCertificate'
        name:
          description: A user-defined name of the certificate. Certificate names must be unique globally and match pattern `projects/*/locations/*/certificates/*`.
          type: string
        updateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The last update timestamp of a Certificate.
        sanDnsnames:
          items:
            type: string
          readOnly: true
          type: array
          description: Output only. The list of Subject Alternative Names of dnsName type defined in the certificate (see RFC 5280 4.2.1.6). Managed certificates that haven't been provisioned yet have this field populated with a value of the managed.domains field.
        scope:
          type: string
          description: Immutable. The scope of the certificate.
          enum:
            - DEFAULT
            - EDGE_CACHE
            - ALL_REGIONS
          enumDescriptions:
            - 'Certificates with default scope are served from core Google data centers. If unsure, choose this option.'
            - 'Certificates with scope EDGE_CACHE are special-purposed certificates, served from Edge Points of Presence. See https://cloud.google.com/vpc/docs/edge-locations.'
            - 'Certificates with ALL_REGIONS scope are served from all GCP regions. See https://cloud.google.com/compute/docs/regions-zones.'
        createTime:
          description: Output only. The creation timestamp of a Certificate.
          format: google-datetime
          type: string
          readOnly: true
    CertificateMapEntry:
      id: CertificateMapEntry
      properties:
        createTime:
          description: Output only. The creation timestamp of a Certificate Map Entry.
          format: google-datetime
          type: string
          readOnly: true
        matcher:
          type: string
          enumDescriptions:
            - A matcher has't been recognized.
            - A primary certificate that is served when SNI wasn't specified in the request or SNI couldn't be found in the map.
          description: 'A predefined matcher for particular cases, other than SNI selection.'
          enum:
            - MATCHER_UNSPECIFIED
            - PRIMARY
        certificates:
          description: A set of Certificates defines for the given `hostname`. There can be defined up to four certificates in each Certificate Map Entry. Each certificate must match pattern `projects/*/locations/*/certificates/*`.
          type: array
          items:
            type: string
        labels:
          additionalProperties:
            type: string
          description: Set of labels associated with a Certificate Map Entry.
          type: object
        state:
          enumDescriptions:
            - The status is undefined.
            - The configuration is serving.
            - Update is in progress. Some frontends may serve this configuration.
          type: string
          description: Output only. A serving state of this Certificate Map Entry.
          readOnly: true
          enum:
            - SERVING_STATE_UNSPECIFIED
            - ACTIVE
            - PENDING
        name:
          type: string
          description: A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.
        hostname:
          type: string
          description: 'A Hostname (FQDN, e.g. `example.com`) or a wildcard hostname expression (`*.example.com`) for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for selecting a proper certificate.'
        description:
          type: string
          description: One or more paragraphs of text description of a certificate map entry.
        updateTime:
          description: Output only. The update timestamp of a Certificate Map Entry.
          type: string
          readOnly: true
          format: google-datetime
      description: Defines a certificate map entry.
      type: object
    Status:
      properties:
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        code:
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
          format: int32
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
    Operation:
      type: object
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        response:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
        metadata:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
      id: Operation
    TrustAnchor:
      id: TrustAnchor
      type: object
      properties:
        pemCertificate:
          type: string
          description: PEM root certificate of the PKI used for validation. Each certificate provided in PEM format may occupy up to 5kB.
      description: Defines a trust anchor.
    TrustConfig:
      description: Defines a trust config.
      properties:
        updateTime:
          type: string
          description: Output only. The last update timestamp of a TrustConfig.
          format: google-datetime
          readOnly: true
        name:
          type: string
          description: A user-defined name of the trust config. TrustConfig names must be unique globally and match pattern `projects/*/locations/*/trustConfigs/*`.
        labels:
          type: object
          description: Set of labels associated with a TrustConfig.
          additionalProperties:
            type: string
        trustStores:
          type: array
          items:
            $ref: '#/components/schemas/TrustStore'
          description: 'Set of trust stores to perform validation against. This field is supported when TrustConfig is configured with Load Balancers, currently not supported for SPIFFE certificate validation. Only one TrustStore specified is currently allowed.'
        createTime:
          format: google-datetime
          description: Output only. The creation timestamp of a TrustConfig.
          readOnly: true
          type: string
        etag:
          type: string
          description: 'This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.'
        description:
          description: One or more paragraphs of text description of a TrustConfig.
          type: string
      type: object
      id: TrustConfig
    AuthorizationAttemptInfo:
      type: object
      properties:
        details:
          description: Output only. Human readable explanation for reaching the state. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use FailureReason enum.
          type: string
          readOnly: true
        failureReason:
          enumDescriptions:
            - FailureReason is unspecified.
            - There was a problem with the user's DNS or load balancer configuration for this domain.
            - Certificate issuance forbidden by an explicit CAA record for the domain or a failure to check CAA records for the domain.
            - 'Reached a CA or internal rate-limit for the domain, e.g. for certificates per top-level private domain.'
          type: string
          description: Output only. Reason for failure of the authorization attempt for the domain.
          enum:
            - FAILURE_REASON_UNSPECIFIED
            - CONFIG
            - CAA
            - RATE_LIMITED
          readOnly: true
        state:
          enumDescriptions:
            - State is unspecified.
            - Certificate provisioning for this domain is under way. Google Cloud will attempt to authorize the domain.
            - 'A managed certificate can be provisioned, no issues for this domain.'
            - Attempt to authorize the domain failed. This prevents the Managed Certificate from being issued. See `failure_reason` and `details` fields for more information.
          type: string
          description: Output only. State of the domain for managed certificate issuance.
          enum:
            - STATE_UNSPECIFIED
            - AUTHORIZING
            - AUTHORIZED
            - FAILED
          readOnly: true
        domain:
          type: string
          description: Domain name of the authorization attempt.
      description: State of the latest attempt to authorize a domain for certificate issuance.
      id: AuthorizationAttemptInfo
    ListDnsAuthorizationsResponse:
      description: Response for the `ListDnsAuthorizations` method.
      type: object
      id: ListDnsAuthorizationsResponse
      properties:
        dnsAuthorizations:
          type: array
          items:
            $ref: '#/components/schemas/DnsAuthorization'
          description: A list of dns authorizations for the parent resource.
        nextPageToken:
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
          type: string
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
    TrustStore:
      properties:
        intermediateCas:
          type: array
          description: Set of intermediate CA certificates used for the path building phase of chain validation. The field is currently not supported if TrustConfig is used for the workload certificate feature.
          items:
            $ref: '#/components/schemas/IntermediateCA'
        trustAnchors:
          items:
            $ref: '#/components/schemas/TrustAnchor'
          type: array
          description: List of Trust Anchors to be used while performing validation against a given TrustStore.
      type: object
      id: TrustStore
      description: Defines a trust store.
    ManagedCertificate:
      description: 'Configuration and state of a Managed Certificate. Certificate Manager provisions and renews Managed Certificates automatically, for as long as it''s authorized to do so.'
      id: ManagedCertificate
      type: object
      properties:
        domains:
          description: Immutable. The domains for which a managed SSL certificate will be generated. Wildcard domains are only supported with DNS challenge resolution.
          items:
            type: string
          type: array
        issuanceConfig:
          description: 'Immutable. The resource name for a CertificateIssuanceConfig used to configure private PKI certificates in the format `projects/*/locations/*/certificateIssuanceConfigs/*`. If this field is not set, the certificates will instead be publicly signed as documented at https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs#caa.'
          type: string
        dnsAuthorizations:
          items:
            type: string
          type: array
          description: Immutable. Authorizations that will be used for performing domain authorization.
        authorizationAttemptInfo:
          description: Output only. Detailed state of the latest authorization attempt for each domain specified for managed certificate resource.
          items:
            $ref: '#/components/schemas/AuthorizationAttemptInfo'
          type: array
          readOnly: true
        provisioningIssue:
          description: Output only. Information about issues with provisioning a Managed Certificate.
          $ref: '#/components/schemas/ProvisioningIssue'
          readOnly: true
        state:
          readOnly: true
          description: Output only. State of the managed certificate resource.
          enumDescriptions:
            - State is unspecified.
            - 'Certificate Manager attempts to provision or renew the certificate. If the process takes longer than expected, consult the `provisioning_issue` field.'
            - 'Multiple certificate provisioning attempts failed and Certificate Manager gave up. To try again, delete and create a new managed Certificate resource. For details see the `provisioning_issue` field.'
            - 'The certificate management is working, and a certificate has been provisioned.'
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - FAILED
            - ACTIVE
          type: string
    ListTrustConfigsResponse:
      id: ListTrustConfigsResponse
      type: object
      properties:
        trustConfigs:
          items:
            $ref: '#/components/schemas/TrustConfig'
          description: A list of TrustConfigs for the parent resource.
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        nextPageToken:
          type: string
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
      description: Response for the `ListTrustConfigs` method.
    SelfManagedCertificate:
      id: SelfManagedCertificate
      properties:
        pemCertificate:
          description: 'Input only. The PEM-encoded certificate chain. Leaf certificate comes first, followed by intermediate ones if any.'
          type: string
        pemPrivateKey:
          type: string
          description: Input only. The PEM-encoded private key of the leaf certificate.
      type: object
      description: Certificate data for a SelfManaged Certificate. SelfManaged Certificates are uploaded by the user. Updating such certificates before they expire remains the user's responsibility.
    ListCertificatesResponse:
      type: object
      id: ListCertificatesResponse
      description: Response for the `ListCertificates` method.
      properties:
        unreachable:
          items:
            type: string
          type: array
          description: A list of locations that could not be reached.
        nextPageToken:
          type: string
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
        certificates:
          description: A list of certificates for the parent resource.
          items:
            $ref: '#/components/schemas/Certificate'
          type: array
    CertificateMap:
      properties:
        name:
          description: A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*`.
          type: string
        updateTime:
          description: Output only. The update timestamp of a Certificate Map.
          format: google-datetime
          readOnly: true
          type: string
        createTime:
          format: google-datetime
          description: Output only. The creation timestamp of a Certificate Map.
          type: string
          readOnly: true
        gclbTargets:
          readOnly: true
          items:
            $ref: '#/components/schemas/GclbTarget'
          description: Output only. A list of GCLB targets that use this Certificate Map. A Target Proxy is only present on this list if it's attached to a Forwarding Rule.
          type: array
        description:
          description: One or more paragraphs of text description of a certificate map.
          type: string
        labels:
          description: Set of labels associated with a Certificate Map.
          additionalProperties:
            type: string
          type: object
      id: CertificateMap
      type: object
      description: Defines a collection of certificate configurations.
    ListLocationsResponse:
      id: ListLocationsResponse
      type: object
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          items:
            $ref: '#/components/schemas/Location'
          description: A list of locations that matches the specified filter in the request.
          type: array
        nextPageToken:
          type: string
          description: The standard List next-page token.
    CertificateIssuanceConfig:
      type: object
      description: CertificateIssuanceConfig specifies how to issue and manage a certificate.
      properties:
        description:
          type: string
          description: One or more paragraphs of text description of a CertificateIssuanceConfig.
        labels:
          additionalProperties:
            type: string
          type: object
          description: Set of labels associated with a CertificateIssuanceConfig.
        updateTime:
          description: Output only. The last update timestamp of a CertificateIssuanceConfig.
          readOnly: true
          type: string
          format: google-datetime
        keyAlgorithm:
          description: Required. The key algorithm to use when generating the private key.
          enum:
            - KEY_ALGORITHM_UNSPECIFIED
            - RSA_2048
            - ECDSA_P256
          enumDescriptions:
            - Unspecified key algorithm.
            - Specifies RSA with a 2048-bit modulus.
            - Specifies ECDSA with curve P256.
          type: string
        certificateAuthorityConfig:
          description: 'Required. The CA that issues the workload certificate. It includes the CA address, type, authentication to CA service, etc.'
          $ref: '#/components/schemas/CertificateAuthorityConfig'
        createTime:
          description: Output only. The creation timestamp of a CertificateIssuanceConfig.
          format: google-datetime
          readOnly: true
          type: string
        lifetime:
          description: Required. Workload certificate lifetime requested.
          type: string
          format: google-duration
        name:
          description: A user-defined name of the certificate issuance config. CertificateIssuanceConfig names must be unique globally and match pattern `projects/*/locations/*/certificateIssuanceConfigs/*`.
          type: string
        rotationWindowPercentage:
          type: integer
          description: 'Required. Specifies the percentage of elapsed time of the certificate lifetime to wait before renewing the certificate. Must be a number between 1-99, inclusive.'
          format: int32
      id: CertificateIssuanceConfig
    ListCertificateIssuanceConfigsResponse:
      description: Response for the `ListCertificateIssuanceConfigs` method.
      id: ListCertificateIssuanceConfigsResponse
      properties:
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        nextPageToken:
          description: 'If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.'
          type: string
        certificateIssuanceConfigs:
          description: A list of certificate configs for the parent resource.
          items:
            $ref: '#/components/schemas/CertificateIssuanceConfig'
          type: array
      type: object
    GclbTarget:
      type: object
      description: Describes a Target Proxy that uses this Certificate Map.
      properties:
        ipConfigs:
          description: Output only. IP configurations for this Target Proxy where the Certificate Map is serving.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/IpConfig'
        targetSslProxy:
          readOnly: true
          type: string
          description: 'Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetSslProxies/*`.'
        targetHttpsProxy:
          description: 'Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetHttpsProxies/*`.'
          readOnly: true
          type: string
      id: GclbTarget
    CertificateAuthorityServiceConfig:
      description: Contains information required to contact CA service.
      properties:
        caPool:
          description: 'Required. A CA pool resource used to issue a certificate. The CA pool string has a relative resource path following the form "projects/{project}/locations/{location}/caPools/{ca_pool}".'
          type: string
      type: object
      id: CertificateAuthorityServiceConfig
    CertificateAuthorityConfig:
      type: object
      properties:
        certificateAuthorityServiceConfig:
          $ref: '#/components/schemas/CertificateAuthorityServiceConfig'
          description: Defines a CertificateAuthorityServiceConfig.
      id: CertificateAuthorityConfig
      description: 'The CA that issues the workload certificate. It includes CA address, type, authentication to CA service, etc.'
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      type: object
      id: Empty
    IntermediateCA:
      type: object
      id: IntermediateCA
      description: Defines an intermediate CA.
      properties:
        pemCertificate:
          description: PEM intermediate certificate used for building up paths for validation. Each certificate provided in PEM format may occupy up to 5kB.
          type: string
    DnsResourceRecord:
      properties:
        type:
          description: Output only. Type of the DNS Resource Record. Currently always set to "CNAME".
          readOnly: true
          type: string
        data:
          description: Output only. Data of the DNS Resource Record.
          type: string
          readOnly: true
        name:
          description: Output only. Fully qualified name of the DNS Resource Record. e.g. `_acme-challenge.example.com`
          type: string
          readOnly: true
      id: DnsResourceRecord
      description: The structure describing the DNS Resource Record that needs to be added to DNS configuration for the authorization to be usable by certificate.
      type: object
    Location:
      type: object
      properties:
        labels:
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          additionalProperties:
            type: string
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
        metadata:
          description: Service-specific metadata. For example the available capacity at the given location.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        displayName:
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
          type: string
      description: A resource that represents a Google Cloud location.
      id: Location
  parameters:
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
  x-stackQL-resources:
    locations:
      id: google.certificatemanager.locations
      name: locations
      title: Locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
    certificates:
      id: google.certificatemanager.certificates
      name: certificates
      title: Certificates
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificates~1{certificatesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificates~1{certificatesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificates~1{certificatesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.certificates
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/delete'
    trust_configs:
      id: google.certificatemanager.trust_configs
      name: trust_configs
      title: Trust Configs
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trustConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trustConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.trustConfigs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trustConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trustConfigs~1{trustConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trustConfigs~1{trustConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trustConfigs~1{trustConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/trust_configs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/trust_configs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/trust_configs/methods/delete'
    certificate_issuance_configs:
      id: google.certificatemanager.certificate_issuance_configs
      name: certificate_issuance_configs
      title: Certificate Issuance Configs
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateIssuanceConfigs~1{certificateIssuanceConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateIssuanceConfigs~1{certificateIssuanceConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateIssuanceConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateIssuanceConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.certificateIssuanceConfigs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateIssuanceConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificate_issuance_configs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/certificate_issuance_configs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/certificate_issuance_configs/methods/delete'
    certificate_map_entries:
      id: google.certificatemanager.certificate_map_entries
      name: certificate_map_entries
      title: Certificate Map Entries
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}~1certificateMapEntries~1{certificateMapEntriesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}~1certificateMapEntries~1{certificateMapEntriesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}~1certificateMapEntries~1{certificateMapEntriesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}~1certificateMapEntries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.certificateMapEntries
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}~1certificateMapEntries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}~1certificateMapEntries/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificate_map_entries/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/certificate_map_entries/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/certificate_map_entries/methods/delete'
    certificate_maps:
      id: google.certificatemanager.certificate_maps
      name: certificate_maps
      title: Certificate Maps
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.certificateMaps
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificate_maps/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/certificate_maps/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/certificate_maps/methods/delete'
    operations:
      id: google.certificatemanager.operations
      name: operations
      title: Operations
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    dns_authorizations:
      id: google.certificatemanager.dns_authorizations
      name: dns_authorizations
      title: Dns Authorizations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dnsAuthorizations~1{dnsAuthorizationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dnsAuthorizations~1{dnsAuthorizationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dnsAuthorizations~1{dnsAuthorizationsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dnsAuthorizations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dnsAuthorizations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dnsAuthorizations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dnsAuthorizations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dns_authorizations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/dns_authorizations/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dns_authorizations/methods/delete'
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
    get:
      description: Gets information about a location.
      operationId: certificatemanager.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: certificatemanager.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v1/projects/{projectsId}/locations/{locationsId}/certificates/{certificatesId}':
    parameters: *ref_1
    patch:
      description: Updates a Certificate.
      operationId: certificatemanager.projects.locations.certificates.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificatesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: certificates
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a single Certificate.
      operationId: certificatemanager.projects.locations.certificates.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: certificates
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single Certificate.
      operationId: certificatemanager.projects.locations.certificates.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: certificates
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/certificates':
    parameters: *ref_1
    post:
      description: Creates a new Certificate in a given project and location.
      operationId: certificatemanager.projects.locations.certificates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: certificateId
          schema:
            type: string
      x-stackQL-resource: certificates
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists Certificates in a given project and location.
      operationId: certificatemanager.projects.locations.certificates.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificatesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: certificates
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.certificates
  '/v1/projects/{projectsId}/locations/{locationsId}/trustConfigs':
    parameters: *ref_1
    post:
      description: Creates a new TrustConfig in a given project and location.
      operationId: certificatemanager.projects.locations.trustConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: trustConfigId
          schema:
            type: string
      x-stackQL-resource: trust_configs
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists TrustConfigs in a given project and location.
      operationId: certificatemanager.projects.locations.trustConfigs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTrustConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: trust_configs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.trustConfigs
  '/v1/projects/{projectsId}/locations/{locationsId}/trustConfigs/{trustConfigsId}':
    parameters: *ref_1
    patch:
      description: Updates a TrustConfig.
      operationId: certificatemanager.projects.locations.trustConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trustConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: trust_configs
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a single TrustConfig.
      operationId: certificatemanager.projects.locations.trustConfigs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trustConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: trust_configs
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single TrustConfig.
      operationId: certificatemanager.projects.locations.trustConfigs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trustConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: trust_configs
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/certificateIssuanceConfigs/{certificateIssuanceConfigsId}':
    parameters: *ref_1
    delete:
      description: Deletes a single CertificateIssuanceConfig.
      operationId: certificatemanager.projects.locations.certificateIssuanceConfigs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateIssuanceConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: certificate_issuance_configs
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single CertificateIssuanceConfig.
      operationId: certificatemanager.projects.locations.certificateIssuanceConfigs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateIssuanceConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateIssuanceConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: certificate_issuance_configs
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/certificateIssuanceConfigs':
    parameters: *ref_1
    post:
      description: Creates a new CertificateIssuanceConfig in a given project and location.
      operationId: certificatemanager.projects.locations.certificateIssuanceConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateIssuanceConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: certificateIssuanceConfigId
          schema:
            type: string
      x-stackQL-resource: certificate_issuance_configs
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists CertificateIssuanceConfigs in a given project and location.
      operationId: certificatemanager.projects.locations.certificateIssuanceConfigs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificateIssuanceConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: certificate_issuance_configs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.certificateIssuanceConfigs
  '/v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries/{certificateMapEntriesId}':
    parameters: *ref_1
    delete:
      description: Deletes a single CertificateMapEntry.
      operationId: certificatemanager.projects.locations.certificateMaps.certificateMapEntries.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapEntriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: certificate_map_entries
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates a CertificateMapEntry.
      operationId: certificatemanager.projects.locations.certificateMaps.certificateMapEntries.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateMapEntry'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapEntriesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: certificate_map_entries
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets details of a single CertificateMapEntry.
      operationId: certificatemanager.projects.locations.certificateMaps.certificateMapEntries.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateMapEntry'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapEntriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: certificate_map_entries
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries':
    parameters: *ref_1
    get:
      description: Lists CertificateMapEntries in a given project and location.
      operationId: certificatemanager.projects.locations.certificateMaps.certificateMapEntries.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificateMapEntriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: certificate_map_entries
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.certificateMapEntries
    post:
      description: Creates a new CertificateMapEntry in a given project and location.
      operationId: certificatemanager.projects.locations.certificateMaps.certificateMapEntries.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateMapEntry'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
        - in: query
          name: certificateMapEntryId
          schema:
            type: string
      x-stackQL-resource: certificate_map_entries
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}':
    parameters: *ref_1
    delete:
      description: Deletes a single CertificateMap. A Certificate Map can't be deleted if it contains Certificate Map Entries. Remove all the entries from the map before calling this method.
      operationId: certificatemanager.projects.locations.certificateMaps.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
      x-stackQL-resource: certificate_maps
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates a CertificateMap.
      operationId: certificatemanager.projects.locations.certificateMaps.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateMap'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: certificate_maps
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets details of a single CertificateMap.
      operationId: certificatemanager.projects.locations.certificateMaps.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateMap'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
      x-stackQL-resource: certificate_maps
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/certificateMaps':
    parameters: *ref_1
    post:
      description: Creates a new CertificateMap in a given project and location.
      operationId: certificatemanager.projects.locations.certificateMaps.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateMap'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: certificateMapId
          schema:
            type: string
      x-stackQL-resource: certificate_maps
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists CertificateMaps in a given project and location.
      operationId: certificatemanager.projects.locations.certificateMaps.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificateMapsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: certificate_maps
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.certificateMaps
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: certificatemanager.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: certificatemanager.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: certificatemanager.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: certificatemanager.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations/{dnsAuthorizationsId}':
    parameters: *ref_1
    get:
      description: Gets details of a single DnsAuthorization.
      operationId: certificatemanager.projects.locations.dnsAuthorizations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsAuthorization'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dnsAuthorizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: dns_authorizations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes a single DnsAuthorization.
      operationId: certificatemanager.projects.locations.dnsAuthorizations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dnsAuthorizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: dns_authorizations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates a DnsAuthorization.
      operationId: certificatemanager.projects.locations.dnsAuthorizations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsAuthorization'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dnsAuthorizationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: dns_authorizations
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations':
    parameters: *ref_1
    post:
      description: Creates a new DnsAuthorization in a given project and location.
      operationId: certificatemanager.projects.locations.dnsAuthorizations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsAuthorization'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: dnsAuthorizationId
          schema:
            type: string
      x-stackQL-resource: dns_authorizations
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists DnsAuthorizations in a given project and location.
      operationId: certificatemanager.projects.locations.dnsAuthorizations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDnsAuthorizationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: dns_authorizations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.dnsAuthorizations
