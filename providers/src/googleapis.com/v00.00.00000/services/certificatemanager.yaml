openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Certificate Manager API
  description: ''
  version: v1
  x-discovery-doc-revision: '20240508'
  x-generated-date: '2024-06-02'
externalDocs:
  url: https://cloud.google.com/certificate-manager
servers:
  - url: https://certificatemanager.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    ListCertificatesResponse:
      id: ListCertificatesResponse
      description: Response for the `ListCertificates` method.
      type: object
      properties:
        certificates:
          description: A list of certificates for the parent resource.
          type: array
          items:
            $ref: '#/components/schemas/Certificate'
        nextPageToken:
          description: >-
            If there might be more results than those appearing in this
            response, then `next_page_token` is included. To get the next set of
            results, call this method again using the value of `next_page_token`
            as `page_token`.
          type: string
        unreachable:
          description: A list of locations that could not be reached.
          type: array
          items:
            type: string
    Certificate:
      id: Certificate
      description: Defines TLS certificate.
      type: object
      properties:
        name:
          description: >-
            A user-defined name of the certificate. Certificate names must be
            unique globally and match pattern
            `projects/*/locations/*/certificates/*`.
          type: string
        description:
          description: One or more paragraphs of text description of a certificate.
          type: string
        createTime:
          description: Output only. The creation timestamp of a Certificate.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The last update timestamp of a Certificate.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Set of labels associated with a Certificate.
          type: object
          additionalProperties:
            type: string
        selfManaged:
          description: If set, defines data of a self-managed certificate.
          $ref: '#/components/schemas/SelfManagedCertificate'
        managed:
          description: If set, contains configuration and state of a managed certificate.
          $ref: '#/components/schemas/ManagedCertificate'
        sanDnsnames:
          description: >-
            Output only. The list of Subject Alternative Names of dnsName type
            defined in the certificate (see RFC 5280 4.2.1.6). Managed
            certificates that haven't been provisioned yet have this field
            populated with a value of the managed.domains field.
          readOnly: true
          type: array
          items:
            type: string
        pemCertificate:
          description: Output only. The PEM-encoded certificate chain.
          readOnly: true
          type: string
        expireTime:
          description: Output only. The expiry timestamp of a Certificate.
          readOnly: true
          type: string
          format: google-datetime
        scope:
          description: Immutable. The scope of the certificate.
          type: string
          enumDescriptions:
            - >-
              Certificates with default scope are served from core Google data
              centers. If unsure, choose this option.
            - >-
              Certificates with scope EDGE_CACHE are special-purposed
              certificates, served from Edge Points of Presence. See
              https://cloud.google.com/vpc/docs/edge-locations.
            - >-
              Certificates with ALL_REGIONS scope are served from all Google
              Cloud regions. See
              https://cloud.google.com/compute/docs/regions-zones.
          enum:
            - DEFAULT
            - EDGE_CACHE
            - ALL_REGIONS
    SelfManagedCertificate:
      id: SelfManagedCertificate
      description: >-
        Certificate data for a SelfManaged Certificate. SelfManaged Certificates
        are uploaded by the user. Updating such certificates before they expire
        remains the user's responsibility.
      type: object
      properties:
        pemCertificate:
          description: >-
            Input only. The PEM-encoded certificate chain. Leaf certificate
            comes first, followed by intermediate ones if any.
          type: string
        pemPrivateKey:
          description: Input only. The PEM-encoded private key of the leaf certificate.
          type: string
    ManagedCertificate:
      id: ManagedCertificate
      description: >-
        Configuration and state of a Managed Certificate. Certificate Manager
        provisions and renews Managed Certificates automatically, for as long as
        it's authorized to do so.
      type: object
      properties:
        domains:
          description: >-
            Immutable. The domains for which a managed SSL certificate will be
            generated. Wildcard domains are only supported with DNS challenge
            resolution.
          type: array
          items:
            type: string
        dnsAuthorizations:
          description: >-
            Immutable. Authorizations that will be used for performing domain
            authorization.
          type: array
          items:
            type: string
        issuanceConfig:
          description: >-
            Immutable. The resource name for a CertificateIssuanceConfig used to
            configure private PKI certificates in the format
            `projects/*/locations/*/certificateIssuanceConfigs/*`. If this field
            is not set, the certificates will instead be publicly signed as
            documented at
            https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs#caa.
          type: string
        state:
          description: Output only. State of the managed certificate resource.
          readOnly: true
          type: string
          enumDescriptions:
            - State is unspecified.
            - >-
              Certificate Manager attempts to provision or renew the
              certificate. If the process takes longer than expected, consult
              the `provisioning_issue` field.
            - >-
              Multiple certificate provisioning attempts failed and Certificate
              Manager gave up. To try again, delete and create a new managed
              Certificate resource. For details see the `provisioning_issue`
              field.
            - >-
              The certificate management is working, and a certificate has been
              provisioned.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - FAILED
            - ACTIVE
        provisioningIssue:
          description: >-
            Output only. Information about issues with provisioning a Managed
            Certificate.
          readOnly: true
          $ref: '#/components/schemas/ProvisioningIssue'
        authorizationAttemptInfo:
          description: >-
            Output only. Detailed state of the latest authorization attempt for
            each domain specified for managed certificate resource.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationAttemptInfo'
    ProvisioningIssue:
      id: ProvisioningIssue
      description: Information about issues with provisioning a Managed Certificate.
      type: object
      properties:
        reason:
          description: Output only. Reason for provisioning failures.
          readOnly: true
          type: string
          enumDescriptions:
            - Reason is unspecified.
            - >-
              Certificate provisioning failed due to an issue with one or more
              of the domains on the certificate. For details of which domains
              failed, consult the `authorization_attempt_info` field.
            - >-
              Exceeded Certificate Authority quotas or internal rate limits of
              the system. Provisioning may take longer to complete.
          enum:
            - REASON_UNSPECIFIED
            - AUTHORIZATION_ISSUE
            - RATE_LIMITED
        details:
          description: >-
            Output only. Human readable explanation about the issue. Provided to
            help address the configuration issues. Not guaranteed to be stable.
            For programmatic access use Reason enum.
          readOnly: true
          type: string
    AuthorizationAttemptInfo:
      id: AuthorizationAttemptInfo
      description: >-
        State of the latest attempt to authorize a domain for certificate
        issuance.
      type: object
      properties:
        domain:
          description: Domain name of the authorization attempt.
          type: string
        state:
          description: Output only. State of the domain for managed certificate issuance.
          readOnly: true
          type: string
          enumDescriptions:
            - State is unspecified.
            - >-
              Certificate provisioning for this domain is under way. Google
              Cloud will attempt to authorize the domain.
            - >-
              A managed certificate can be provisioned, no issues for this
              domain.
            - >-
              Attempt to authorize the domain failed. This prevents the Managed
              Certificate from being issued. See `failure_reason` and `details`
              fields for more information.
          enum:
            - STATE_UNSPECIFIED
            - AUTHORIZING
            - AUTHORIZED
            - FAILED
        failureReason:
          description: >-
            Output only. Reason for failure of the authorization attempt for the
            domain.
          readOnly: true
          type: string
          enumDescriptions:
            - FailureReason is unspecified.
            - >-
              There was a problem with the user's DNS or load balancer
              configuration for this domain.
            - >-
              Certificate issuance forbidden by an explicit CAA record for the
              domain or a failure to check CAA records for the domain.
            - >-
              Reached a CA or internal rate-limit for the domain, e.g. for
              certificates per top-level private domain.
          enum:
            - FAILURE_REASON_UNSPECIFIED
            - CONFIG
            - CAA
            - RATE_LIMITED
        details:
          description: >-
            Output only. Human readable explanation for reaching the state.
            Provided to help address the configuration issues. Not guaranteed to
            be stable. For programmatic access use FailureReason enum.
          readOnly: true
          type: string
    ListCertificateMapsResponse:
      id: ListCertificateMapsResponse
      description: Response for the `ListCertificateMaps` method.
      type: object
      properties:
        certificateMaps:
          description: A list of certificate maps for the parent resource.
          type: array
          items:
            $ref: '#/components/schemas/CertificateMap'
        nextPageToken:
          description: >-
            If there might be more results than those appearing in this
            response, then `next_page_token` is included. To get the next set of
            results, call this method again using the value of `next_page_token`
            as `page_token`.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    CertificateMap:
      id: CertificateMap
      description: Defines a collection of certificate configurations.
      type: object
      properties:
        name:
          description: >-
            A user-defined name of the Certificate Map. Certificate Map names
            must be unique globally and match pattern
            `projects/*/locations/*/certificateMaps/*`.
          type: string
        description:
          description: One or more paragraphs of text description of a certificate map.
          type: string
        createTime:
          description: Output only. The creation timestamp of a Certificate Map.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The update timestamp of a Certificate Map.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Set of labels associated with a Certificate Map.
          type: object
          additionalProperties:
            type: string
        gclbTargets:
          description: >-
            Output only. A list of GCLB targets that use this Certificate Map. A
            Target Proxy is only present on this list if it's attached to a
            Forwarding Rule.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GclbTarget'
    GclbTarget:
      id: GclbTarget
      description: Describes a Target Proxy that uses this Certificate Map.
      type: object
      properties:
        targetHttpsProxy:
          description: >-
            Output only. This field returns the resource name in the following
            format:
            `//compute.googleapis.com/projects/*/global/targetHttpsProxies/*`.
          readOnly: true
          type: string
        targetSslProxy:
          description: >-
            Output only. This field returns the resource name in the following
            format:
            `//compute.googleapis.com/projects/*/global/targetSslProxies/*`.
          readOnly: true
          type: string
        ipConfigs:
          description: >-
            Output only. IP configurations for this Target Proxy where the
            Certificate Map is serving.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/IpConfig'
    IpConfig:
      id: IpConfig
      description: Defines IP configuration where this Certificate Map is serving.
      type: object
      properties:
        ipAddress:
          description: Output only. An external IP address.
          readOnly: true
          type: string
        ports:
          description: Output only. Ports.
          readOnly: true
          type: array
          items:
            type: integer
            format: uint32
    ListCertificateMapEntriesResponse:
      id: ListCertificateMapEntriesResponse
      description: Response for the `ListCertificateMapEntries` method.
      type: object
      properties:
        certificateMapEntries:
          description: A list of certificate map entries for the parent resource.
          type: array
          items:
            $ref: '#/components/schemas/CertificateMapEntry'
        nextPageToken:
          description: >-
            If there might be more results than those appearing in this
            response, then `next_page_token` is included. To get the next set of
            results, call this method again using the value of `next_page_token`
            as `page_token`.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    CertificateMapEntry:
      id: CertificateMapEntry
      description: Defines a certificate map entry.
      type: object
      properties:
        name:
          description: >-
            A user-defined name of the Certificate Map Entry. Certificate Map
            Entry names must be unique globally and match pattern
            `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.
          type: string
        description:
          description: >-
            One or more paragraphs of text description of a certificate map
            entry.
          type: string
        createTime:
          description: Output only. The creation timestamp of a Certificate Map Entry.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The update timestamp of a Certificate Map Entry.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Set of labels associated with a Certificate Map Entry.
          type: object
          additionalProperties:
            type: string
        hostname:
          description: >-
            A Hostname (FQDN, e.g. `example.com`) or a wildcard hostname
            expression (`*.example.com`) for a set of hostnames with common
            suffix. Used as Server Name Indication (SNI) for selecting a proper
            certificate.
          type: string
        matcher:
          description: A predefined matcher for particular cases, other than SNI selection.
          type: string
          enumDescriptions:
            - A matcher has't been recognized.
            - >-
              A primary certificate that is served when SNI wasn't specified in
              the request or SNI couldn't be found in the map.
          enum:
            - MATCHER_UNSPECIFIED
            - PRIMARY
        certificates:
          description: >-
            A set of Certificates defines for the given `hostname`. There can be
            defined up to four certificates in each Certificate Map Entry. Each
            certificate must match pattern
            `projects/*/locations/*/certificates/*`.
          type: array
          items:
            type: string
        state:
          description: Output only. A serving state of this Certificate Map Entry.
          readOnly: true
          type: string
          enumDescriptions:
            - The status is undefined.
            - The configuration is serving.
            - >-
              Update is in progress. Some frontends may serve this
              configuration.
          enum:
            - SERVING_STATE_UNSPECIFIED
            - ACTIVE
            - PENDING
    ListDnsAuthorizationsResponse:
      id: ListDnsAuthorizationsResponse
      description: Response for the `ListDnsAuthorizations` method.
      type: object
      properties:
        dnsAuthorizations:
          description: A list of dns authorizations for the parent resource.
          type: array
          items:
            $ref: '#/components/schemas/DnsAuthorization'
        nextPageToken:
          description: >-
            If there might be more results than those appearing in this
            response, then `next_page_token` is included. To get the next set of
            results, call this method again using the value of `next_page_token`
            as `page_token`.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    DnsAuthorization:
      id: DnsAuthorization
      description: >-
        A DnsAuthorization resource describes a way to perform domain
        authorization for certificate issuance.
      type: object
      properties:
        name:
          description: >-
            A user-defined name of the dns authorization. DnsAuthorization names
            must be unique globally and match pattern
            `projects/*/locations/*/dnsAuthorizations/*`.
          type: string
        createTime:
          description: Output only. The creation timestamp of a DnsAuthorization.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The last update timestamp of a DnsAuthorization.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Set of labels associated with a DnsAuthorization.
          type: object
          additionalProperties:
            type: string
        description:
          description: One or more paragraphs of text description of a DnsAuthorization.
          type: string
        domain:
          description: >-
            Required. Immutable. A domain that is being authorized. A
            DnsAuthorization resource covers a single domain and its wildcard,
            e.g. authorization for `example.com` can be used to issue
            certificates for `example.com` and `*.example.com`.
          type: string
        dnsResourceRecord:
          description: >-
            Output only. DNS Resource Record that needs to be added to DNS
            configuration.
          readOnly: true
          $ref: '#/components/schemas/DnsResourceRecord'
        type:
          description: >-
            Immutable. Type of DnsAuthorization. If unset during resource
            creation the following default will be used: - in location global:
            FIXED_RECORD.
          type: string
          enumDescriptions:
            - Type is unspecified.
            - FIXED_RECORD DNS authorization uses DNS-01 validation method.
            - >-
              PER_PROJECT_RECORD DNS authorization allows for independent
              management of Google-managed certificates with DNS authorization
              across multiple projects.
          enum:
            - TYPE_UNSPECIFIED
            - FIXED_RECORD
            - PER_PROJECT_RECORD
    DnsResourceRecord:
      id: DnsResourceRecord
      description: >-
        The structure describing the DNS Resource Record that needs to be added
        to DNS configuration for the authorization to be usable by certificate.
      type: object
      properties:
        name:
          description: >-
            Output only. Fully qualified name of the DNS Resource Record. e.g.
            `_acme-challenge.example.com`
          readOnly: true
          type: string
        type:
          description: >-
            Output only. Type of the DNS Resource Record. Currently always set
            to "CNAME".
          readOnly: true
          type: string
        data:
          description: Output only. Data of the DNS Resource Record.
          readOnly: true
          type: string
    ListCertificateIssuanceConfigsResponse:
      id: ListCertificateIssuanceConfigsResponse
      description: Response for the `ListCertificateIssuanceConfigs` method.
      type: object
      properties:
        certificateIssuanceConfigs:
          description: A list of certificate configs for the parent resource.
          type: array
          items:
            $ref: '#/components/schemas/CertificateIssuanceConfig'
        nextPageToken:
          description: >-
            If there might be more results than those appearing in this
            response, then `next_page_token` is included. To get the next set of
            results, call this method again using the value of `next_page_token`
            as `page_token`.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    CertificateIssuanceConfig:
      id: CertificateIssuanceConfig
      description: >-
        CertificateIssuanceConfig specifies how to issue and manage a
        certificate.
      type: object
      properties:
        name:
          description: >-
            A user-defined name of the certificate issuance config.
            CertificateIssuanceConfig names must be unique globally and match
            pattern `projects/*/locations/*/certificateIssuanceConfigs/*`.
          type: string
        createTime:
          description: Output only. The creation timestamp of a CertificateIssuanceConfig.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The last update timestamp of a
            CertificateIssuanceConfig.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Set of labels associated with a CertificateIssuanceConfig.
          type: object
          additionalProperties:
            type: string
        description:
          description: >-
            One or more paragraphs of text description of a
            CertificateIssuanceConfig.
          type: string
        certificateAuthorityConfig:
          description: >-
            Required. The CA that issues the workload certificate. It includes
            the CA address, type, authentication to CA service, etc.
          $ref: '#/components/schemas/CertificateAuthorityConfig'
        lifetime:
          description: Required. Workload certificate lifetime requested.
          type: string
          format: google-duration
        rotationWindowPercentage:
          description: >-
            Required. Specifies the percentage of elapsed time of the
            certificate lifetime to wait before renewing the certificate. Must
            be a number between 1-99, inclusive.
          type: integer
          format: int32
        keyAlgorithm:
          description: Required. The key algorithm to use when generating the private key.
          type: string
          enumDescriptions:
            - Unspecified key algorithm.
            - Specifies RSA with a 2048-bit modulus.
            - Specifies ECDSA with curve P256.
          enum:
            - KEY_ALGORITHM_UNSPECIFIED
            - RSA_2048
            - ECDSA_P256
    CertificateAuthorityConfig:
      id: CertificateAuthorityConfig
      description: >-
        The CA that issues the workload certificate. It includes CA address,
        type, authentication to CA service, etc.
      type: object
      properties:
        certificateAuthorityServiceConfig:
          description: Defines a CertificateAuthorityServiceConfig.
          $ref: '#/components/schemas/CertificateAuthorityServiceConfig'
    CertificateAuthorityServiceConfig:
      id: CertificateAuthorityServiceConfig
      description: Contains information required to contact CA service.
      type: object
      properties:
        caPool:
          description: >-
            Required. A CA pool resource used to issue a certificate. The CA
            pool string has a relative resource path following the form
            "projects/{project}/locations/{location}/caPools/{ca_pool}".
          type: string
    ListTrustConfigsResponse:
      id: ListTrustConfigsResponse
      description: Response for the `ListTrustConfigs` method.
      type: object
      properties:
        trustConfigs:
          description: A list of TrustConfigs for the parent resource.
          type: array
          items:
            $ref: '#/components/schemas/TrustConfig'
        nextPageToken:
          description: >-
            If there might be more results than those appearing in this
            response, then `next_page_token` is included. To get the next set of
            results, call this method again using the value of `next_page_token`
            as `page_token`.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    TrustConfig:
      id: TrustConfig
      description: Defines a trust config.
      type: object
      properties:
        name:
          description: >-
            A user-defined name of the trust config. TrustConfig names must be
            unique globally and match pattern
            `projects/*/locations/*/trustConfigs/*`.
          type: string
        createTime:
          description: Output only. The creation timestamp of a TrustConfig.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The last update timestamp of a TrustConfig.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Set of labels associated with a TrustConfig.
          type: object
          additionalProperties:
            type: string
        description:
          description: One or more paragraphs of text description of a TrustConfig.
          type: string
        etag:
          description: >-
            This checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding.
          type: string
        trustStores:
          description: >-
            Set of trust stores to perform validation against. This field is
            supported when TrustConfig is configured with Load Balancers,
            currently not supported for SPIFFE certificate validation. Only one
            TrustStore specified is currently allowed.
          type: array
          items:
            $ref: '#/components/schemas/TrustStore'
        allowlistedCertificates:
          description: >-
            Optional. A certificate matching an allowlisted certificate is
            always considered valid as long as the certificate is parseable,
            proof of private key possession is established, and constraints on
            the certificate's SAN field are met.
          type: array
          items:
            $ref: '#/components/schemas/AllowlistedCertificate'
    TrustStore:
      id: TrustStore
      description: Defines a trust store.
      type: object
      properties:
        trustAnchors:
          description: >-
            List of Trust Anchors to be used while performing validation against
            a given TrustStore.
          type: array
          items:
            $ref: '#/components/schemas/TrustAnchor'
        intermediateCas:
          description: >-
            Set of intermediate CA certificates used for the path building phase
            of chain validation. The field is currently not supported if
            TrustConfig is used for the workload certificate feature.
          type: array
          items:
            $ref: '#/components/schemas/IntermediateCA'
    TrustAnchor:
      id: TrustAnchor
      description: Defines a trust anchor.
      type: object
      properties:
        pemCertificate:
          description: >-
            PEM root certificate of the PKI used for validation. Each
            certificate provided in PEM format may occupy up to 5kB.
          type: string
    IntermediateCA:
      id: IntermediateCA
      description: Defines an intermediate CA.
      type: object
      properties:
        pemCertificate:
          description: >-
            PEM intermediate certificate used for building up paths for
            validation. Each certificate provided in PEM format may occupy up to
            5kB.
          type: string
    AllowlistedCertificate:
      id: AllowlistedCertificate
      description: Defines an allowlisted certificate.
      type: object
      properties:
        pemCertificate:
          description: >-
            Required. PEM certificate that is allowlisted. The certificate can
            be up to 5k bytes, and must be a parseable X.509 certificate.
          type: string
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation. Output only.
      type: object
      properties:
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          description: The time the operation finished running.
          type: string
          format: google-datetime
        target:
          description: Server-defined resource path for the target of the operation.
          type: string
        verb:
          description: Name of the verb executed by the operation.
          type: string
        statusMessage:
          description: Human-readable status of the operation, if any.
          type: string
        requestedCancellation:
          description: >-
            Identifies whether the user has requested cancellation of the
            operation. Operations that have successfully been cancelled have
            Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          type: boolean
        apiVersion:
          description: API version used to start the operation.
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: certificatemanager.locations
      name: locations
      title: Locations
      methods:
        _list:
          operation: &ref_1
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response: &ref_2
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        list:
          operation: *ref_1
          response: *ref_2
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
        insert: []
        update: []
        delete: []
    operations:
      id: certificatemanager.operations
      name: operations
      title: Operations
      methods:
        _list:
          operation: &ref_3
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response: &ref_4
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        list:
          operation: *ref_3
          response: *ref_4
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    certificates:
      id: certificatemanager.certificates
      name: certificates
      title: Certificates
      methods:
        _list:
          operation: &ref_5
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificates/get
          response: &ref_6
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.certificates
        list:
          operation: *ref_5
          response: *ref_6
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificates/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificates~1{certificatesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificates~1{certificatesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificates~1{certificatesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/list'
          - $ref: '#/components/x-stackQL-resources/certificates/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/delete'
    certificate_maps:
      id: certificatemanager.certificate_maps
      name: certificate_maps
      title: Certificate_maps
      methods:
        _list:
          operation: &ref_7
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps/get
          response: &ref_8
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.certificateMaps
        list:
          operation: *ref_7
          response: *ref_8
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificate_maps/methods/list'
          - $ref: '#/components/x-stackQL-resources/certificate_maps/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/certificate_maps/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/certificate_maps/methods/delete'
    certificate_map_entries:
      id: certificatemanager.certificate_map_entries
      name: certificate_map_entries
      title: Certificate_map_entries
      methods:
        _list:
          operation: &ref_9
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}~1certificateMapEntries/get
          response: &ref_10
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.certificateMapEntries
        list:
          operation: *ref_9
          response: *ref_10
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}~1certificateMapEntries/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}~1certificateMapEntries~1{certificateMapEntriesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}~1certificateMapEntries~1{certificateMapEntriesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}~1certificateMapEntries~1{certificateMapEntriesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/certificate_map_entries/methods/list
          - $ref: >-
              #/components/x-stackQL-resources/certificate_map_entries/methods/get
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/certificate_map_entries/methods/create
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/certificate_map_entries/methods/delete
    dns_authorizations:
      id: certificatemanager.dns_authorizations
      name: dns_authorizations
      title: Dns_authorizations
      methods:
        _list:
          operation: &ref_11
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dnsAuthorizations/get
          response: &ref_12
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dnsAuthorizations
        list:
          operation: *ref_11
          response: *ref_12
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dnsAuthorizations/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dnsAuthorizations~1{dnsAuthorizationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dnsAuthorizations~1{dnsAuthorizationsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dnsAuthorizations~1{dnsAuthorizationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dns_authorizations/methods/list'
          - $ref: '#/components/x-stackQL-resources/dns_authorizations/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/dns_authorizations/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dns_authorizations/methods/delete'
    certificate_issuance_configs:
      id: certificatemanager.certificate_issuance_configs
      name: certificate_issuance_configs
      title: Certificate_issuance_configs
      methods:
        _list:
          operation: &ref_13
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateIssuanceConfigs/get
          response: &ref_14
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.certificateIssuanceConfigs
        list:
          operation: *ref_13
          response: *ref_14
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateIssuanceConfigs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateIssuanceConfigs~1{certificateIssuanceConfigsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateIssuanceConfigs~1{certificateIssuanceConfigsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/certificate_issuance_configs/methods/list
          - $ref: >-
              #/components/x-stackQL-resources/certificate_issuance_configs/methods/get
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/certificate_issuance_configs/methods/create
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/certificate_issuance_configs/methods/delete
    trust_configs:
      id: certificatemanager.trust_configs
      name: trust_configs
      title: Trust_configs
      methods:
        _list:
          operation: &ref_15
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trustConfigs/get
          response: &ref_16
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.trustConfigs
        list:
          operation: *ref_15
          response: *ref_16
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trustConfigs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trustConfigs~1{trustConfigsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trustConfigs~1{trustConfigsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trustConfigs~1{trustConfigsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/trust_configs/methods/list'
          - $ref: '#/components/x-stackQL-resources/trust_configs/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/trust_configs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/trust_configs/methods/delete'
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_17
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: certificatemanager.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_17
    get:
      description: Gets information about a location.
      operationId: certificatemanager.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_17
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: certificatemanager.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_17
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: certificatemanager.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: certificatemanager.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_17
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: certificatemanager.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/certificates:
    parameters: *ref_17
    get:
      description: Lists Certificates in a given project and location.
      operationId: certificatemanager.projects.locations.certificates.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificatesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new Certificate in a given project and location.
      operationId: certificatemanager.projects.locations.certificates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: certificateId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/certificates/{certificatesId}:
    parameters: *ref_17
    get:
      description: Gets details of a single Certificate.
      operationId: certificatemanager.projects.locations.certificates.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificatesId
          required: true
          schema:
            type: string
    patch:
      description: Updates a Certificate.
      operationId: certificatemanager.projects.locations.certificates.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificatesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a single Certificate.
      operationId: certificatemanager.projects.locations.certificates.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificatesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/certificateMaps:
    parameters: *ref_17
    get:
      description: Lists CertificateMaps in a given project and location.
      operationId: certificatemanager.projects.locations.certificateMaps.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificateMapsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new CertificateMap in a given project and location.
      operationId: certificatemanager.projects.locations.certificateMaps.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateMap'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: certificateMapId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}:
    parameters: *ref_17
    get:
      description: Gets details of a single CertificateMap.
      operationId: certificatemanager.projects.locations.certificateMaps.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateMap'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a CertificateMap.
      operationId: certificatemanager.projects.locations.certificateMaps.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateMap'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes a single CertificateMap. A Certificate Map can't be deleted if
        it contains Certificate Map Entries. Remove all the entries from the map
        before calling this method.
      operationId: certificatemanager.projects.locations.certificateMaps.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries:
    parameters: *ref_17
    get:
      description: Lists CertificateMapEntries in a given project and location.
      operationId: >-
        certificatemanager.projects.locations.certificateMaps.certificateMapEntries.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificateMapEntriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new CertificateMapEntry in a given project and location.
      operationId: >-
        certificatemanager.projects.locations.certificateMaps.certificateMapEntries.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateMapEntry'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
        - in: query
          name: certificateMapEntryId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries/{certificateMapEntriesId}:
    parameters: *ref_17
    get:
      description: Gets details of a single CertificateMapEntry.
      operationId: >-
        certificatemanager.projects.locations.certificateMaps.certificateMapEntries.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateMapEntry'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapEntriesId
          required: true
          schema:
            type: string
    patch:
      description: Updates a CertificateMapEntry.
      operationId: >-
        certificatemanager.projects.locations.certificateMaps.certificateMapEntries.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateMapEntry'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapEntriesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a single CertificateMapEntry.
      operationId: >-
        certificatemanager.projects.locations.certificateMaps.certificateMapEntries.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapEntriesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations:
    parameters: *ref_17
    get:
      description: Lists DnsAuthorizations in a given project and location.
      operationId: certificatemanager.projects.locations.dnsAuthorizations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDnsAuthorizationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new DnsAuthorization in a given project and location.
      operationId: certificatemanager.projects.locations.dnsAuthorizations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsAuthorization'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: dnsAuthorizationId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations/{dnsAuthorizationsId}:
    parameters: *ref_17
    get:
      description: Gets details of a single DnsAuthorization.
      operationId: certificatemanager.projects.locations.dnsAuthorizations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsAuthorization'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dnsAuthorizationsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a DnsAuthorization.
      operationId: certificatemanager.projects.locations.dnsAuthorizations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsAuthorization'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dnsAuthorizationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a single DnsAuthorization.
      operationId: certificatemanager.projects.locations.dnsAuthorizations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dnsAuthorizationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/certificateIssuanceConfigs:
    parameters: *ref_17
    get:
      description: Lists CertificateIssuanceConfigs in a given project and location.
      operationId: certificatemanager.projects.locations.certificateIssuanceConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificateIssuanceConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new CertificateIssuanceConfig in a given project and location.
      operationId: certificatemanager.projects.locations.certificateIssuanceConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateIssuanceConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: certificateIssuanceConfigId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/certificateIssuanceConfigs/{certificateIssuanceConfigsId}:
    parameters: *ref_17
    get:
      description: Gets details of a single CertificateIssuanceConfig.
      operationId: certificatemanager.projects.locations.certificateIssuanceConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateIssuanceConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateIssuanceConfigsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a single CertificateIssuanceConfig.
      operationId: certificatemanager.projects.locations.certificateIssuanceConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateIssuanceConfigsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/trustConfigs:
    parameters: *ref_17
    get:
      description: Lists TrustConfigs in a given project and location.
      operationId: certificatemanager.projects.locations.trustConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTrustConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new TrustConfig in a given project and location.
      operationId: certificatemanager.projects.locations.trustConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: trustConfigId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/trustConfigs/{trustConfigsId}:
    parameters: *ref_17
    get:
      description: Gets details of a single TrustConfig.
      operationId: certificatemanager.projects.locations.trustConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trustConfigsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a TrustConfig.
      operationId: certificatemanager.projects.locations.trustConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trustConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a single TrustConfig.
      operationId: certificatemanager.projects.locations.trustConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trustConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
