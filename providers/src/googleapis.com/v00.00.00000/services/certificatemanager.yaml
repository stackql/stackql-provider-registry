openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Certificate Manager API
  description: ''
  version: v1
  x-discovery-doc-revision: '20221208'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://cloud.google.com/certificate-manager
servers:
  - url: https://certificatemanager.googleapis.com
components:
  schemas:
    ListCertificatesResponse:
      id: ListCertificatesResponse
      properties:
        unreachable:
          type: array
          description: A list of locations that could not be reached.
          items:
            type: string
        nextPageToken:
          description: If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.
          type: string
        certificates:
          items:
            $ref: '#/components/schemas/Certificate'
          type: array
          description: A list of certificates for the parent resource.
      description: Response for the `ListCertificates` method.
      type: object
    ListCertificateIssuanceConfigsResponse:
      id: ListCertificateIssuanceConfigsResponse
      properties:
        certificateIssuanceConfigs:
          type: array
          description: A list of certificate configs for the parent resource.
          items:
            $ref: '#/components/schemas/CertificateIssuanceConfig'
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        nextPageToken:
          description: If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.
          type: string
      description: Response for the `ListCertificateIssuanceConfigs` method.
      type: object
    Empty:
      id: Empty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      type: object
    Certificate:
      properties:
        labels:
          type: object
          additionalProperties:
            type: string
          description: Set of labels associated with a Certificate.
        createTime:
          description: Output only. The creation timestamp of a Certificate.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: One or more paragraphs of text description of a certificate.
          type: string
        name:
          description: A user-defined name of the certificate. Certificate names must be unique globally and match pattern `projects/*/locations/*/certificates/*`.
          type: string
        expireTime:
          format: google-datetime
          readOnly: true
          description: Output only. The expiry timestamp of a Certificate.
          type: string
        sanDnsnames:
          items:
            type: string
          description: Output only. The list of Subject Alternative Names of dnsName type defined in the certificate (see RFC 5280 4.2.1.6). Managed certificates that haven't been provisioned yet have this field populated with a value of the managed.domains field.
          type: array
          readOnly: true
        updateTime:
          type: string
          description: Output only. The last update timestamp of a Certificate.
          format: google-datetime
          readOnly: true
        selfManaged:
          $ref: '#/components/schemas/SelfManagedCertificate'
          description: If set, defines data of a self-managed certificate.
        scope:
          enum:
            - DEFAULT
            - EDGE_CACHE
          description: Immutable. The scope of the certificate.
          enumDescriptions:
            - Certificates with default scope are served from core Google data centers. If unsure, choose this option.
            - Certificates with scope EDGE_CACHE are special-purposed certificates, served from non-core Google data centers.
          type: string
        pemCertificate:
          readOnly: true
          type: string
          description: Output only. The PEM-encoded certificate chain.
        managed:
          $ref: '#/components/schemas/ManagedCertificate'
          description: If set, contains configuration and state of a managed certificate.
      id: Certificate
      type: object
      description: Defines TLS certificate.
    Status:
      id: Status
      properties:
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
        code:
          type: integer
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    CertificateIssuanceConfig:
      type: object
      description: CertificateIssuanceConfig specifies how to issue and manage a certificate.
      id: CertificateIssuanceConfig
      properties:
        description:
          description: One or more paragraphs of text description of a CertificateIssuanceConfig.
          type: string
        name:
          description: A user-defined name of the certificate issuance config. CertificateIssuanceConfig names must be unique globally and match pattern `projects/*/locations/*/certificateIssuanceConfigs/*`.
          type: string
        keyAlgorithm:
          description: Required. The key algorithm to use when generating the private key.
          enumDescriptions:
            - Unspecified key algorithm.
            - Specifies RSA with a 2048-bit modulus.
            - Specifies ECDSA with curve P256.
          enum:
            - KEY_ALGORITHM_UNSPECIFIED
            - RSA_2048
            - ECDSA_P256
          type: string
        updateTime:
          description: Output only. The last update timestamp of a CertificateIssuanceConfig.
          type: string
          readOnly: true
          format: google-datetime
        rotationWindowPercentage:
          format: int32
          description: Required. Specifies the percentage of elapsed time of the certificate lifetime to wait before renewing the certificate. Must be a number between 1-99, inclusive.
          type: integer
        certificateAuthorityConfig:
          $ref: '#/components/schemas/CertificateAuthorityConfig'
          description: Required. The CA that issues the workload certificate. It includes the CA address, type, authentication to CA service, etc.
        lifetime:
          type: string
          format: google-duration
          description: Required. Workload certificate lifetime requested.
        labels:
          type: object
          description: Set of labels associated with a CertificateIssuanceConfig.
          additionalProperties:
            type: string
        createTime:
          format: google-datetime
          description: Output only. The creation timestamp of a CertificateIssuanceConfig.
          readOnly: true
          type: string
    DnsAuthorization:
      type: object
      id: DnsAuthorization
      properties:
        name:
          description: A user-defined name of the dns authorization. DnsAuthorization names must be unique globally and match pattern `projects/*/locations/*/dnsAuthorizations/*`.
          type: string
        createTime:
          readOnly: true
          description: Output only. The creation timestamp of a DnsAuthorization.
          format: google-datetime
          type: string
        domain:
          type: string
          description: Required. Immutable. A domain that is being authorized. A DnsAuthorization resource covers a single domain and its wildcard, e.g. authorization for `example.com` can be used to issue certificates for `example.com` and `*.example.com`.
        updateTime:
          readOnly: true
          type: string
          description: Output only. The last update timestamp of a DnsAuthorization.
          format: google-datetime
        dnsResourceRecord:
          $ref: '#/components/schemas/DnsResourceRecord'
          description: Output only. DNS Resource Record that needs to be added to DNS configuration.
          readOnly: true
        labels:
          description: Set of labels associated with a DnsAuthorization.
          additionalProperties:
            type: string
          type: object
        description:
          description: One or more paragraphs of text description of a DnsAuthorization.
          type: string
      description: A DnsAuthorization resource describes a way to perform domain authorization for certificate issuance.
    ListCertificateMapsResponse:
      type: object
      id: ListCertificateMapsResponse
      properties:
        certificateMaps:
          description: A list of certificate maps for the parent resource.
          items:
            $ref: '#/components/schemas/CertificateMap'
          type: array
        nextPageToken:
          type: string
          description: If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
      description: Response for the `ListCertificateMaps` method.
    ListDnsAuthorizationsResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        dnsAuthorizations:
          type: array
          description: A list of dns authorizations for the parent resource.
          items:
            $ref: '#/components/schemas/DnsAuthorization'
      description: Response for the `ListDnsAuthorizations` method.
      id: ListDnsAuthorizationsResponse
    OperationMetadata:
      properties:
        apiVersion:
          description: API version used to start the operation.
          type: string
        statusMessage:
          type: string
          description: Human-readable status of the operation, if any.
        requestedCancellation:
          description: Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          type: boolean
        verb:
          type: string
          description: Name of the verb executed by the operation.
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        target:
          type: string
          description: Server-defined resource path for the target of the operation.
        endTime:
          format: google-datetime
          type: string
          description: The time the operation finished running.
      type: object
      description: Represents the metadata of the long-running operation. Output only.
      id: OperationMetadata
    ListCertificateMapEntriesResponse:
      description: Response for the `ListCertificateMapEntries` method.
      id: ListCertificateMapEntriesResponse
      type: object
      properties:
        certificateMapEntries:
          description: A list of certificate map entries for the parent resource.
          type: array
          items:
            $ref: '#/components/schemas/CertificateMapEntry'
        nextPageToken:
          type: string
          description: If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
    CertificateAuthorityConfig:
      properties:
        certificateAuthorityServiceConfig:
          $ref: '#/components/schemas/CertificateAuthorityServiceConfig'
          description: Defines a CertificateAuthorityServiceConfig.
      description: The CA that issues the workload certificate. It includes CA address, type, authentication to CA service, etc.
      type: object
      id: CertificateAuthorityConfig
    Operation:
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          type: boolean
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
        response:
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
      type: object
    ProvisioningIssue:
      type: object
      properties:
        reason:
          enum:
            - REASON_UNSPECIFIED
            - AUTHORIZATION_ISSUE
            - RATE_LIMITED
          enumDescriptions:
            - ''
            - Certificate provisioning failed due to an issue with one or more of the domains on the certificate. For details of which domains failed, consult the `authorization_attempt_info` field.
            - Exceeded Certificate Authority quotas or internal rate limits of the system. Provisioning may take longer to complete.
          description: Output only. Reason for provisioning failures.
          readOnly: true
          type: string
        details:
          description: Output only. Human readable explanation about the issue. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use Reason enum.
          type: string
          readOnly: true
      id: ProvisioningIssue
      description: Information about issues with provisioning a Managed Certificate.
    DnsResourceRecord:
      id: DnsResourceRecord
      properties:
        type:
          type: string
          readOnly: true
          description: Output only. Type of the DNS Resource Record. Currently always set to "CNAME".
        data:
          description: Output only. Data of the DNS Resource Record.
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
          description: Output only. Fully qualified name of the DNS Resource Record. e.g. `_acme-challenge.example.com`
      description: The structure describing the DNS Resource Record that needs to be added to DNS configuration for the authorization to be usable by certificate.
      type: object
    CertificateMap:
      type: object
      description: Defines a collection of certificate configurations.
      properties:
        name:
          description: A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*`.
          type: string
        updateTime:
          type: string
          description: Output only. The update timestamp of a Certificate Map.
          readOnly: true
          format: google-datetime
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The creation timestamp of a Certificate Map.
        labels:
          type: object
          description: Set of labels associated with a Certificate Map.
          additionalProperties:
            type: string
        description:
          type: string
          description: One or more paragraphs of text description of a certificate map.
        gclbTargets:
          description: Output only. A list of GCLB targets that use this Certificate Map. A Target Proxy is only present on this list if it's attached to a Forwarding Rule.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GclbTarget'
      id: CertificateMap
    GclbTarget:
      id: GclbTarget
      properties:
        ipConfigs:
          readOnly: true
          description: Output only. IP configurations for this Target Proxy where the Certificate Map is serving.
          type: array
          items:
            $ref: '#/components/schemas/IpConfig'
        targetSslProxy:
          type: string
          readOnly: true
          description: 'Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetSslProxies/*`.'
        targetHttpsProxy:
          type: string
          readOnly: true
          description: 'Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetHttpsProxies/*`.'
      type: object
      description: Describes a Target Proxy that uses this Certificate Map.
    SelfManagedCertificate:
      id: SelfManagedCertificate
      type: object
      properties:
        pemPrivateKey:
          type: string
          description: Input only. The PEM-encoded private key of the leaf certificate.
        pemCertificate:
          type: string
          description: Input only. The PEM-encoded certificate chain. Leaf certificate comes first, followed by intermediate ones if any.
      description: Certificate data for a SelfManaged Certificate. SelfManaged Certificates are uploaded by the user. Updating such certificates before they expire remains the user's responsibility.
    Location:
      description: A resource that represents Google Cloud Platform location.
      type: object
      properties:
        labels:
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          additionalProperties:
            type: string
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        name:
          type: string
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        metadata:
          description: Service-specific metadata. For example the available capacity at the given location.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
      id: Location
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      id: CancelOperationRequest
      properties: {}
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      id: ListOperationsResponse
      type: object
      properties:
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          type: array
          description: A list of operations that matches the specified filter in the request.
        nextPageToken:
          description: The standard List next-page token.
          type: string
    CertificateAuthorityServiceConfig:
      type: object
      properties:
        caPool:
          type: string
          description: Required. A CA pool resource used to issue a certificate. The CA pool string has a relative resource path following the form "projects/{project}/locations/{location}/caPools/{ca_pool}".
      id: CertificateAuthorityServiceConfig
      description: Contains information required to contact CA service.
    ManagedCertificate:
      properties:
        domains:
          description: Immutable. The domains for which a managed SSL certificate will be generated. Wildcard domains are only supported with DNS challenge resolution.
          type: array
          items:
            type: string
        authorizationAttemptInfo:
          items:
            $ref: '#/components/schemas/AuthorizationAttemptInfo'
          type: array
          readOnly: true
          description: Output only. Detailed state of the latest authorization attempt for each domain specified for managed certificate resource.
        dnsAuthorizations:
          description: Immutable. Authorizations that will be used for performing domain authorization.
          items:
            type: string
          type: array
        provisioningIssue:
          readOnly: true
          description: Output only. Information about issues with provisioning a Managed Certificate.
          $ref: '#/components/schemas/ProvisioningIssue'
        state:
          enumDescriptions:
            - ''
            - Certificate Manager attempts to provision or renew the certificate. If the process takes longer than expected, consult the `provisioning_issue` field.
            - Multiple certificate provisioning attempts failed and Certificate Manager gave up. To try again, delete and create a new managed Certificate resource. For details see the `provisioning_issue` field.
            - The certificate management is working, and a certificate has been provisioned.
          description: Output only. State of the managed certificate resource.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - FAILED
            - ACTIVE
          readOnly: true
        issuanceConfig:
          description: Immutable. The resource name for a CertificateIssuanceConfig used to configure private PKI certificates in the format `projects/*/locations/*/certificateIssuanceConfigs/*`. If this field is not set, the certificates will instead be publicly signed as documented at https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs#caa.
          type: string
      description: Configuration and state of a Managed Certificate. Certificate Manager provisions and renews Managed Certificates automatically, for as long as it's authorized to do so.
      id: ManagedCertificate
      type: object
    IpConfig:
      properties:
        ipAddress:
          type: string
          description: Output only. An external IP address.
          readOnly: true
        ports:
          items:
            type: integer
            format: uint32
          readOnly: true
          description: Output only. Ports.
          type: array
      description: Defines IP configuration where this Certificate Map is serving.
      id: IpConfig
      type: object
    CertificateMapEntry:
      id: CertificateMapEntry
      description: Defines a certificate map entry.
      type: object
      properties:
        certificates:
          items:
            type: string
          description: A set of Certificates defines for the given `hostname`. There can be defined up to fifteen certificates in each Certificate Map Entry. Each certificate must match pattern `projects/*/locations/*/certificates/*`.
          type: array
        createTime:
          description: Output only. The creation timestamp of a Certificate Map Entry.
          format: google-datetime
          readOnly: true
          type: string
        matcher:
          enumDescriptions:
            - A matcher has't been recognized.
            - A primary certificate that is served when SNI wasn't specified in the request or SNI couldn't be found in the map.
          description: A predefined matcher for particular cases, other than SNI selection.
          enum:
            - MATCHER_UNSPECIFIED
            - PRIMARY
          type: string
        updateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The update timestamp of a Certificate Map Entry.
        description:
          type: string
          description: One or more paragraphs of text description of a certificate map entry.
        state:
          enumDescriptions:
            - The status is undefined.
            - The configuration is serving.
            - Update is in progress. Some frontends may serve this configuration.
          description: Output only. A serving state of this Certificate Map Entry.
          readOnly: true
          enum:
            - SERVING_STATE_UNSPECIFIED
            - ACTIVE
            - PENDING
          type: string
        hostname:
          description: A Hostname (FQDN, e.g. `example.com`) or a wildcard hostname expression (`*.example.com`) for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for selecting a proper certificate.
          type: string
        labels:
          type: object
          description: Set of labels associated with a Certificate Map Entry.
          additionalProperties:
            type: string
        name:
          description: A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.
          type: string
    AuthorizationAttemptInfo:
      properties:
        details:
          readOnly: true
          description: Output only. Human readable explanation for reaching the state. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use FailureReason enum.
          type: string
        state:
          type: string
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - AUTHORIZING
            - AUTHORIZED
            - FAILED
          enumDescriptions:
            - ''
            - Certificate provisioning for this domain is under way. GCP will attempt to authorize the domain.
            - A managed certificate can be provisioned, no issues for this domain.
            - Attempt to authorize the domain failed. This prevents the Managed Certificate from being issued. See `failure_reason` and `details` fields for more information.
          description: Output only. State of the domain for managed certificate issuance.
        failureReason:
          enum:
            - FAILURE_REASON_UNSPECIFIED
            - CONFIG
            - CAA
            - RATE_LIMITED
          enumDescriptions:
            - ''
            - There was a problem with the user's DNS or load balancer configuration for this domain.
            - Certificate issuance forbidden by an explicit CAA record for the domain or a failure to check CAA records for the domain.
            - Reached a CA or internal rate-limit for the domain, e.g. for certificates per top-level private domain.
          type: string
          readOnly: true
          description: Output only. Reason for failure of the authorization attempt for the domain.
        domain:
          type: string
          description: Domain name of the authorization attempt.
      description: State of the latest attempt to authorize a domain for certificate issuance.
      type: object
      id: AuthorizationAttemptInfo
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      id: ListLocationsResponse
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        locations:
          type: array
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Location'
      type: object
  parameters:
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    dns_authorizations:
      id: google.certificatemanager.dns_authorizations
      name: dns_authorizations
      title: Dns_authorizations
      methods:
        projects_locations_dnsAuthorizations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dnsAuthorizations~1{dnsAuthorizationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dnsAuthorizations_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dnsAuthorizations~1{dnsAuthorizationsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dnsAuthorizations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dnsAuthorizations~1{dnsAuthorizationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dnsAuthorizations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dnsAuthorizations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dnsAuthorizations_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dnsAuthorizations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dns_authorizations/methods/projects_locations_dnsAuthorizations_get'
          - $ref: '#/components/x-stackQL-resources/dns_authorizations/methods/projects_locations_dnsAuthorizations_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/dns_authorizations/methods/projects_locations_dnsAuthorizations_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dns_authorizations/methods/projects_locations_dnsAuthorizations_delete'
    certificates:
      id: google.certificatemanager.certificates
      name: certificates
      title: Certificates
      methods:
        projects_locations_certificates_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_certificates_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_certificates_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificates~1{certificatesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_certificates_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificates~1{certificatesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_certificates_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificates~1{certificatesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/projects_locations_certificates_get'
          - $ref: '#/components/x-stackQL-resources/certificates/methods/projects_locations_certificates_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/projects_locations_certificates_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/projects_locations_certificates_delete'
    certificate_map_entries:
      id: google.certificatemanager.certificate_map_entries
      name: certificate_map_entries
      title: Certificate_map_entries
      methods:
        projects_locations_certificateMaps_certificateMapEntries_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}~1certificateMapEntries/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_certificateMaps_certificateMapEntries_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}~1certificateMapEntries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_certificateMaps_certificateMapEntries_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}~1certificateMapEntries~1{certificateMapEntriesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_certificateMaps_certificateMapEntries_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}~1certificateMapEntries~1{certificateMapEntriesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_certificateMaps_certificateMapEntries_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}~1certificateMapEntries~1{certificateMapEntriesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificate_map_entries/methods/projects_locations_certificateMaps_certificateMapEntries_get'
          - $ref: '#/components/x-stackQL-resources/certificate_map_entries/methods/projects_locations_certificateMaps_certificateMapEntries_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/certificate_map_entries/methods/projects_locations_certificateMaps_certificateMapEntries_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/certificate_map_entries/methods/projects_locations_certificateMaps_certificateMapEntries_delete'
    certificate_maps:
      id: google.certificatemanager.certificate_maps
      name: certificate_maps
      title: Certificate_maps
      methods:
        projects_locations_certificateMaps_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_certificateMaps_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_certificateMaps_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps~1{certificateMapsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_certificateMaps_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_certificateMaps_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateMaps/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificate_maps/methods/projects_locations_certificateMaps_get'
          - $ref: '#/components/x-stackQL-resources/certificate_maps/methods/projects_locations_certificateMaps_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/certificate_maps/methods/projects_locations_certificateMaps_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/certificate_maps/methods/projects_locations_certificateMaps_delete'
    certificate_issuance_configs:
      id: google.certificatemanager.certificate_issuance_configs
      name: certificate_issuance_configs
      title: Certificate_issuance_configs
      methods:
        projects_locations_certificateIssuanceConfigs_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateIssuanceConfigs~1{certificateIssuanceConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_certificateIssuanceConfigs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateIssuanceConfigs~1{certificateIssuanceConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_certificateIssuanceConfigs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateIssuanceConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_certificateIssuanceConfigs_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateIssuanceConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificate_issuance_configs/methods/projects_locations_certificateIssuanceConfigs_get'
          - $ref: '#/components/x-stackQL-resources/certificate_issuance_configs/methods/projects_locations_certificateIssuanceConfigs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/certificate_issuance_configs/methods/projects_locations_certificateIssuanceConfigs_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/certificate_issuance_configs/methods/projects_locations_certificateIssuanceConfigs_delete'
    operations:
      id: google.certificatemanager.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: operations
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
    locations:
      id: google.certificatemanager.locations
      name: locations
      title: Locations
      methods:
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: locations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations/{dnsAuthorizationsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/alt'
    delete:
      description: Deletes a single DnsAuthorization.
      operationId: certificatemanager.projects.locations.dnsAuthorizations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dnsAuthorizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: dns_authorizations
      x-stackQL-verb: delete
    patch:
      description: Updates a DnsAuthorization.
      operationId: certificatemanager.projects.locations.dnsAuthorizations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsAuthorization'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dnsAuthorizationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: dns_authorizations
      x-stackQL-verb: exec
    get:
      description: Gets details of a single DnsAuthorization.
      operationId: certificatemanager.projects.locations.dnsAuthorizations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsAuthorization'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dnsAuthorizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: dns_authorizations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations:
    parameters: *ref_1
    get:
      description: Lists DnsAuthorizations in a given project and location.
      operationId: certificatemanager.projects.locations.dnsAuthorizations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDnsAuthorizationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: dns_authorizations
      x-stackQL-verb: select
    post:
      description: Creates a new DnsAuthorization in a given project and location.
      operationId: certificatemanager.projects.locations.dnsAuthorizations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsAuthorization'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: dnsAuthorizationId
          schema:
            type: string
      x-stackQL-resource: dns_authorizations
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/certificates:
    parameters: *ref_1
    get:
      description: Lists Certificates in a given project and location.
      operationId: certificatemanager.projects.locations.certificates.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificatesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: certificates
      x-stackQL-verb: select
    post:
      description: Creates a new Certificate in a given project and location.
      operationId: certificatemanager.projects.locations.certificates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: certificateId
          schema:
            type: string
      x-stackQL-resource: certificates
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/certificates/{certificatesId}:
    parameters: *ref_1
    delete:
      description: Deletes a single Certificate.
      operationId: certificatemanager.projects.locations.certificates.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: certificates
      x-stackQL-verb: delete
    patch:
      description: Updates a Certificate.
      operationId: certificatemanager.projects.locations.certificates.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificatesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: certificates
      x-stackQL-verb: exec
    get:
      description: Gets details of a single Certificate.
      operationId: certificatemanager.projects.locations.certificates.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: certificates
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries:
    parameters: *ref_1
    post:
      description: Creates a new CertificateMapEntry in a given project and location.
      operationId: certificatemanager.projects.locations.certificateMaps.certificateMapEntries.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateMapEntry'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
        - in: query
          name: certificateMapEntryId
          schema:
            type: string
      x-stackQL-resource: certificate_map_entries
      x-stackQL-verb: insert
    get:
      description: Lists CertificateMapEntries in a given project and location.
      operationId: certificatemanager.projects.locations.certificateMaps.certificateMapEntries.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificateMapEntriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: certificate_map_entries
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries/{certificateMapEntriesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single CertificateMapEntry.
      operationId: certificatemanager.projects.locations.certificateMaps.certificateMapEntries.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateMapEntry'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapEntriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: certificate_map_entries
      x-stackQL-verb: select
    patch:
      description: Updates a CertificateMapEntry.
      operationId: certificatemanager.projects.locations.certificateMaps.certificateMapEntries.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateMapEntry'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapEntriesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: certificate_map_entries
      x-stackQL-verb: exec
    delete:
      description: Deletes a single CertificateMapEntry.
      operationId: certificatemanager.projects.locations.certificateMaps.certificateMapEntries.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapEntriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: certificate_map_entries
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single CertificateMap.
      operationId: certificatemanager.projects.locations.certificateMaps.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateMap'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
      x-stackQL-resource: certificate_maps
      x-stackQL-verb: select
    patch:
      description: Updates a CertificateMap.
      operationId: certificatemanager.projects.locations.certificateMaps.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateMap'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: certificate_maps
      x-stackQL-verb: exec
    delete:
      description: Deletes a single CertificateMap. A Certificate Map can't be deleted if it contains Certificate Map Entries. Remove all the entries from the map before calling this method.
      operationId: certificatemanager.projects.locations.certificateMaps.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateMapsId
          required: true
          schema:
            type: string
      x-stackQL-resource: certificate_maps
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/certificateMaps:
    parameters: *ref_1
    get:
      description: Lists CertificateMaps in a given project and location.
      operationId: certificatemanager.projects.locations.certificateMaps.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificateMapsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: certificate_maps
      x-stackQL-verb: select
    post:
      description: Creates a new CertificateMap in a given project and location.
      operationId: certificatemanager.projects.locations.certificateMaps.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateMap'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: certificateMapId
          schema:
            type: string
      x-stackQL-resource: certificate_maps
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/certificateIssuanceConfigs/{certificateIssuanceConfigsId}:
    parameters: *ref_1
    delete:
      description: Deletes a single CertificateIssuanceConfig.
      operationId: certificatemanager.projects.locations.certificateIssuanceConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateIssuanceConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: certificate_issuance_configs
      x-stackQL-verb: delete
    get:
      description: Gets details of a single CertificateIssuanceConfig.
      operationId: certificatemanager.projects.locations.certificateIssuanceConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateIssuanceConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateIssuanceConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: certificate_issuance_configs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/certificateIssuanceConfigs:
    parameters: *ref_1
    get:
      description: Lists CertificateIssuanceConfigs in a given project and location.
      operationId: certificatemanager.projects.locations.certificateIssuanceConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificateIssuanceConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: certificate_issuance_configs
      x-stackQL-verb: select
    post:
      description: Creates a new CertificateIssuanceConfig in a given project and location.
      operationId: certificatemanager.projects.locations.certificateIssuanceConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateIssuanceConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: certificateIssuanceConfigId
          schema:
            type: string
      x-stackQL-resource: certificate_issuance_configs
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: certificatemanager.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.'
      operationId: certificatemanager.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: certificatemanager.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: certificatemanager.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: certificatemanager.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: certificatemanager.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
