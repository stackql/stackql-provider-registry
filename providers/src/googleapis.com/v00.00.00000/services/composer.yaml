openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Composer API
  description: Manages Apache Airflow environments on Google Cloud Platform.
  version: v1
  x-discovery-doc-revision: '20230107'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://cloud.google.com/composer/
servers:
  - url: https://composer.googleapis.com
components:
  schemas:
    DatabaseConfig:
      description: The configuration of Cloud SQL instance that is used by the Apache Airflow software.
      id: DatabaseConfig
      properties:
        machineType:
          type: string
          description: 'Optional. Cloud SQL machine type used by Airflow database. It has to be one of: db-n1-standard-2, db-n1-standard-4, db-n1-standard-8 or db-n1-standard-16. If not specified, db-n1-standard-2 will be used. Supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.'
      type: object
    CheckUpgradeResponse:
      type: object
      id: CheckUpgradeResponse
      description: Message containing information about the result of an upgrade check operation.
      properties:
        buildLogUri:
          readOnly: true
          description: Output only. Url for a docker build log of an upgraded image.
          type: string
        containsPypiModulesConflict:
          enumDescriptions:
            - It is unknown whether build had conflicts or not.
            - There were python packages conflicts.
            - There were no python packages conflicts.
          readOnly: true
          enum:
            - CONFLICT_RESULT_UNSPECIFIED
            - CONFLICT
            - NO_CONFLICT
          description: Output only. Whether build has succeeded or failed on modules conflicts.
          type: string
        pypiDependencies:
          description: Pypi dependencies specified in the environment configuration, at the time when the build was triggered.
          type: object
          additionalProperties:
            type: string
        imageVersion:
          type: string
          description: Composer image for which the build was happening.
        pypiConflictBuildLogExtract:
          description: Output only. Extract from a docker image build log containing information about pypi modules conflicts.
          type: string
          readOnly: true
    Status:
      properties:
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
        code:
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
        details:
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
      id: Status
    PrivateClusterConfig:
      description: Configuration options for the private GKE cluster in a Cloud Composer environment.
      properties:
        enablePrivateEndpoint:
          description: Optional. If `true`, access to the public endpoint of the GKE cluster is denied.
          type: boolean
        masterIpv4ReservedRange:
          description: Output only. The IP range in CIDR notation to use for the hosted master network. This range is used for assigning internal IP addresses to the GKE cluster master or set of masters and to the internal load balancer virtual IP. This range must not overlap with any other ranges in use within the cluster's network.
          readOnly: true
          type: string
        masterIpv4CidrBlock:
          type: string
          description: Optional. The CIDR block from which IPv4 range for GKE master will be reserved. If left blank, the default value of '172.16.0.0/23' is used.
      type: object
      id: PrivateClusterConfig
    SoftwareConfig:
      type: object
      description: Specifies the selection and configuration of software inside the environment.
      id: SoftwareConfig
      properties:
        pythonVersion:
          description: Optional. The major version of Python used to run the Apache Airflow scheduler, worker, and webserver processes. Can be set to '2' or '3'. If not specified, the default is '3'. Cannot be updated. This field is only supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*. Environments in newer versions always use Python major version 3.
          type: string
        airflowConfigOverrides:
          description: Optional. Apache Airflow configuration properties to override. Property keys contain the section and property names, separated by a hyphen, for example "core-dags_are_paused_at_creation". Section names must not contain hyphens ("-"), opening square brackets ("["), or closing square brackets ("]"). The property name must not be empty and must not contain an equals sign ("=") or semicolon (";"). Section and property names must not contain a period ("."). Apache Airflow configuration property names must be written in [snake_case](https://en.wikipedia.org/wiki/Snake_case). Property values can contain any character, and can be written in any lower/upper case format. Certain Apache Airflow configuration property values are [blocked](/composer/docs/concepts/airflow-configurations), and cannot be overridden.
          additionalProperties:
            type: string
          type: object
        envVariables:
          description: 'Optional. Additional environment variables to provide to the Apache Airflow scheduler, worker, and webserver processes. Environment variable names must match the regular expression `a-zA-Z_*`. They cannot specify Apache Airflow software configuration overrides (they cannot match the regular expression `AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+`), and they cannot match any of the following reserved names: * `AIRFLOW_HOME` * `C_FORCE_ROOT` * `CONTAINER_NAME` * `DAGS_FOLDER` * `GCP_PROJECT` * `GCS_BUCKET` * `GKE_CLUSTER_NAME` * `SQL_DATABASE` * `SQL_INSTANCE` * `SQL_PASSWORD` * `SQL_PROJECT` * `SQL_REGION` * `SQL_USER`'
          additionalProperties:
            type: string
          type: object
        schedulerCount:
          description: Optional. The number of schedulers for Airflow. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-2.*.*.
          format: int32
          type: integer
        pypiPackages:
          type: object
          additionalProperties:
            type: string
          description: Optional. Custom Python Package Index (PyPI) packages to be installed in the environment. Keys refer to the lowercase package name such as "numpy" and values are the lowercase extras and version specifier such as "==1.12.0", "[devel,gcp_api]", or "[devel]>=1.8.2, <1.9.2". To specify a package without pinning it to a version specifier, use the empty string as the value.
        imageVersion:
          type: string
          description: The version of the software running in the environment. This encapsulates both the version of Cloud Composer functionality and the version of Apache Airflow. It must match the regular expression `composer-([0-9]+(\.[0-9]+\.[0-9]+(-preview\.[0-9]+)?)?|latest)-airflow-([0-9]+(\.[0-9]+(\.[0-9]+)?)?)`. When used as input, the server also checks if the provided version is supported and denies the request for an unsupported version. The Cloud Composer portion of the image version is a full [semantic version](https://semver.org), or an alias in the form of major version number or `latest`. When an alias is provided, the server replaces it with the current Cloud Composer version that satisfies the alias. The Apache Airflow portion of the image version is a full semantic version that points to one of the supported Apache Airflow versions, or an alias in the form of only major or major.minor versions specified. When an alias is provided, the server replaces it with the latest Apache Airflow version that satisfies the alias and is supported in the given Cloud Composer version. In all cases, the resolved image version is stored in the same field. See also [version list](/composer/docs/concepts/versioning/composer-versions) and [versioning overview](/composer/docs/concepts/versioning/composer-versioning-overview).
    WorkerResource:
      description: Configuration for resources used by Airflow workers.
      properties:
        storageGb:
          description: Optional. Storage (GB) request and limit for a single Airflow worker replica.
          format: float
          type: number
        minCount:
          format: int32
          type: integer
          description: Optional. Minimum number of workers for autoscaling.
        cpu:
          type: number
          description: Optional. CPU request and limit for a single Airflow worker replica.
          format: float
        maxCount:
          type: integer
          description: Optional. Maximum number of workers for autoscaling.
          format: int32
        memoryGb:
          description: Optional. Memory (GB) request and limit for a single Airflow worker replica.
          format: float
          type: number
      type: object
      id: WorkerResource
    OperationMetadata:
      properties:
        resource:
          description: Output only. The resource being operated on, as a [relative resource name]( /apis/design/resource_names#relative_resource_name).
          type: string
        state:
          type: string
          description: Output only. The current operation state.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - SUCCESSFUL
            - FAILED
          enumDescriptions:
            - Unused.
            - The operation has been created but is not yet started.
            - The operation is underway.
            - The operation completed successfully.
            - ''
            - The operation is no longer running but did not succeed.
        endTime:
          type: string
          format: google-datetime
          description: Output only. The time when the operation terminated, regardless of its success. This field is unset if the operation is still ongoing.
        createTime:
          description: Output only. The time the operation was submitted to the server.
          type: string
          format: google-datetime
        operationType:
          enum:
            - TYPE_UNSPECIFIED
            - CREATE
            - DELETE
            - UPDATE
            - CHECK
            - SAVE_SNAPSHOT
            - LOAD_SNAPSHOT
          description: Output only. The type of operation being performed.
          type: string
          enumDescriptions:
            - Unused.
            - A resource creation operation.
            - A resource deletion operation.
            - A resource update operation.
            - A resource check operation.
            - Saves snapshot of the resource operation.
            - Loads snapshot of the resource operation.
        resourceUuid:
          description: Output only. The UUID of the resource being operated on.
          type: string
      type: object
      id: OperationMetadata
      description: Metadata describing an operation.
    NodeConfig:
      description: The configuration information for the Kubernetes Engine nodes running the Apache Airflow software.
      id: NodeConfig
      type: object
      properties:
        subnetwork:
          type: string
          description: 'Optional. The Compute Engine subnetwork to be used for machine communications, specified as a [relative resource name](/apis/design/resource_names#relative_resource_name). For example: "projects/{projectId}/regions/{regionId}/subnetworks/{subnetworkId}" If a subnetwork is provided, `nodeConfig.network` must also be provided, and the subnetwork must belong to the enclosing environment''s project and location.'
        machineType:
          description: 'Optional. The Compute Engine [machine type](/compute/docs/machine-types) used for cluster instances, specified as a [relative resource name](/apis/design/resource_names#relative_resource_name). For example: "projects/{projectId}/zones/{zoneId}/machineTypes/{machineTypeId}". The `machineType` must belong to the enclosing environment''s project and location. If both this field and `nodeConfig.location` are specified, this `machineType` must belong to the `nodeConfig.location`; if both are unspecified, the service will pick a zone in the Compute Engine region corresponding to the Cloud Composer location, and propagate that choice to both fields. If exactly one of this field and `nodeConfig.location` is specified, the location information from the specified field will be propagated to the unspecified field. The `machineTypeId` must not be a [shared-core machine type](/compute/docs/machine-types#sharedcore). If this field is unspecified, the `machineTypeId` defaults to "n1-standard-1". This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.'
          type: string
        oauthScopes:
          type: array
          description: Optional. The set of Google API scopes to be made available on all node VMs. If `oauth_scopes` is empty, defaults to ["https://www.googleapis.com/auth/cloud-platform"]. Cannot be updated. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
          items:
            type: string
        tags:
          items:
            type: string
          description: Optional. The list of instance tags applied to all node VMs. Tags are used to identify valid sources or targets for network firewalls. Each tag within the list must comply with [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Cannot be updated. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
          type: array
        serviceAccount:
          type: string
          description: Optional. The Google Cloud Platform Service Account to be used by the node VMs. If a service account is not specified, the "default" Compute Engine service account is used. Cannot be updated.
        diskSizeGb:
          description: Optional. The disk size in GB used for node VMs. Minimum size is 30GB. If unspecified, defaults to 100GB. Cannot be updated. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
          format: int32
          type: integer
        enableIpMasqAgent:
          type: boolean
          description: 'Optional. Deploys ''ip-masq-agent'' daemon set in the GKE cluster and defines nonMasqueradeCIDRs equals to pod IP range so IP masquerading is used for all destination addresses, except between pods traffic. See: https://cloud.google.com/kubernetes-engine/docs/how-to/ip-masquerade-agent'
        network:
          type: string
          description: 'Optional. The Compute Engine network to be used for machine communications, specified as a [relative resource name](/apis/design/resource_names#relative_resource_name). For example: "projects/{projectId}/global/networks/{networkId}". If unspecified, the "default" network ID in the environment''s project is used. If a [Custom Subnet Network](/vpc/docs/vpc#vpc_networks_and_subnets) is provided, `nodeConfig.subnetwork` must also be provided. For [Shared VPC](/vpc/docs/shared-vpc) subnetwork requirements, see `nodeConfig.subnetwork`.'
        location:
          description: 'Optional. The Compute Engine [zone](/compute/docs/regions-zones) in which to deploy the VMs used to run the Apache Airflow software, specified as a [relative resource name](/apis/design/resource_names#relative_resource_name). For example: "projects/{projectId}/zones/{zoneId}". This `location` must belong to the enclosing environment''s project and location. If both this field and `nodeConfig.machineType` are specified, `nodeConfig.machineType` must belong to this `location`; if both are unspecified, the service will pick a zone in the Compute Engine region corresponding to the Cloud Composer location, and propagate that choice to both fields. If only one field (`location` or `nodeConfig.machineType`) is specified, the location information from the specified field will be propagated to the unspecified field. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.'
          type: string
        ipAllocationPolicy:
          description: Optional. The configuration for controlling how IPs are allocated in the GKE cluster.
          $ref: '#/components/schemas/IPAllocationPolicy'
    ScheduledSnapshotsConfig:
      type: object
      properties:
        enabled:
          description: Optional. Whether scheduled snapshots creation is enabled.
          type: boolean
        snapshotCreationSchedule:
          type: string
          description: Optional. The cron expression representing the time when snapshots creation mechanism runs. This field is subject to additional validation around frequency of execution.
        timeZone:
          description: Optional. Time zone that sets the context to interpret snapshot_creation_schedule.
          type: string
        snapshotLocation:
          type: string
          description: Optional. The Cloud Storage location for storing automatically created snapshots.
      description: The configuration for scheduled snapshot creation mechanism.
      id: ScheduledSnapshotsConfig
    SchedulerResource:
      id: SchedulerResource
      type: object
      properties:
        storageGb:
          description: Optional. Storage (GB) request and limit for a single Airflow scheduler replica.
          format: float
          type: number
        memoryGb:
          format: float
          type: number
          description: Optional. Memory (GB) request and limit for a single Airflow scheduler replica.
        count:
          format: int32
          type: integer
          description: Optional. The number of schedulers.
        cpu:
          description: Optional. CPU request and limit for a single Airflow scheduler replica.
          format: float
          type: number
      description: Configuration for resources used by Airflow schedulers.
    LoadSnapshotResponse:
      properties: {}
      id: LoadSnapshotResponse
      description: Response to LoadSnapshotRequest.
      type: object
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      type: object
      id: Empty
    RecoveryConfig:
      type: object
      properties:
        scheduledSnapshotsConfig:
          description: Optional. The configuration for scheduled snapshot creation mechanism.
          $ref: '#/components/schemas/ScheduledSnapshotsConfig'
      id: RecoveryConfig
      description: The Recovery settings of an environment.
    SaveSnapshotRequest:
      properties:
        snapshotLocation:
          description: 'Location in a Cloud Storage where the snapshot is going to be stored, e.g.: "gs://my-bucket/snapshots".'
          type: string
      type: object
      id: SaveSnapshotRequest
      description: Request to create a snapshot of a Cloud Composer environment.
    ImageVersion:
      type: object
      properties:
        creationDisabled:
          type: boolean
          description: Whether it is impossible to create an environment with the image version.
        upgradeDisabled:
          description: Whether it is impossible to upgrade an environment running with the image version.
          type: boolean
        releaseDate:
          description: The date of the version release.
          $ref: '#/components/schemas/Date'
        supportedPythonVersions:
          description: supported python versions
          type: array
          items:
            type: string
        imageVersionId:
          description: 'The string identifier of the ImageVersion, in the form: "composer-x.y.z-airflow-a.b.c"'
          type: string
        isDefault:
          description: Whether this is the default ImageVersion used by Composer during environment creation if no input ImageVersion is specified.
          type: boolean
      description: ImageVersion information
      id: ImageVersion
    ListImageVersionsResponse:
      properties:
        imageVersions:
          description: The list of supported ImageVersions in a location.
          items:
            $ref: '#/components/schemas/ImageVersion'
          type: array
        nextPageToken:
          type: string
          description: The page token used to query for the next page if one exists.
      type: object
      description: The ImageVersions in a project and location.
      id: ListImageVersionsResponse
    CidrBlock:
      type: object
      id: CidrBlock
      properties:
        cidrBlock:
          description: CIDR block that must be specified in CIDR notation.
          type: string
        displayName:
          description: User-defined name that identifies the CIDR block.
          type: string
      description: CIDR block with an optional name.
    ListOperationsResponse:
      type: object
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          description: A list of operations that matches the specified filter in the request.
          type: array
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
    AllowedIpRange:
      properties:
        description:
          type: string
          description: Optional. User-provided description. It must contain at most 300 characters.
        value:
          type: string
          description: 'IP address or range, defined using CIDR notation, of requests that this rule applies to. Examples: `192.168.1.1` or `192.168.0.0/16` or `2001:db8::/32` or `2001:0db8:0000:0042:0000:8a2e:0370:7334`. IP range prefixes should be properly truncated. For example, `1.2.3.4/24` should be truncated to `1.2.3.0/24`. Similarly, for IPv6, `2001:db8::1/32` should be truncated to `2001:db8::/32`.'
      type: object
      description: Allowed IP range with user-provided description.
      id: AllowedIpRange
    WebServerConfig:
      type: object
      description: The configuration settings for the Airflow web server App Engine instance. Supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*
      properties:
        machineType:
          description: 'Optional. Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2, composer-n1-webserver-4 or composer-n1-webserver-8. If not specified, composer-n1-webserver-2 will be used. Value custom is returned only in response, if Airflow web server parameters were manually changed to a non-standard values.'
          type: string
      id: WebServerConfig
    WebServerNetworkAccessControl:
      id: WebServerNetworkAccessControl
      type: object
      properties:
        allowedIpRanges:
          items:
            $ref: '#/components/schemas/AllowedIpRange'
          description: A collection of allowed IP ranges with descriptions.
          type: array
      description: Network-level access control policy for the Airflow web server.
    WorkloadsConfig:
      id: WorkloadsConfig
      type: object
      properties:
        webServer:
          $ref: '#/components/schemas/WebServerResource'
          description: Optional. Resources used by Airflow web server.
        worker:
          description: Optional. Resources used by Airflow workers.
          $ref: '#/components/schemas/WorkerResource'
        scheduler:
          $ref: '#/components/schemas/SchedulerResource'
          description: Optional. Resources used by Airflow schedulers.
      description: The Kubernetes workloads configuration for GKE cluster associated with the Cloud Composer environment. Supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
    IPAllocationPolicy:
      properties:
        servicesSecondaryRangeName:
          description: Optional. The name of the services' secondary range used to allocate IP addresses to the GKE cluster. For Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*, this field is applicable only when `use_ip_aliases` is true.
          type: string
        clusterIpv4CidrBlock:
          type: string
          description: Optional. The IP address range used to allocate IP addresses to pods in the GKE cluster. For Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*, this field is applicable only when `use_ip_aliases` is true. Set to blank to have GKE choose a range with the default size. Set to /netmask (e.g. `/14`) to have GKE choose a range with a specific netmask. Set to a [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.
        clusterSecondaryRangeName:
          type: string
          description: Optional. The name of the GKE cluster's secondary range used to allocate IP addresses to pods. For Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*, this field is applicable only when `use_ip_aliases` is true.
        useIpAliases:
          type: boolean
          description: Optional. Whether or not to enable Alias IPs in the GKE cluster. If `true`, a VPC-native cluster is created. This field is only supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*. Environments in newer versions always use VPC-native GKE clusters.
        servicesIpv4CidrBlock:
          type: string
          description: Optional. The IP address range of the services IP addresses in this GKE cluster. For Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*, this field is applicable only when `use_ip_aliases` is true. Set to blank to have GKE choose a range with the default size. Set to /netmask (e.g. `/14`) to have GKE choose a range with a specific netmask. Set to a [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.
      id: IPAllocationPolicy
      type: object
      description: Configuration for controlling how IPs are allocated in the GKE cluster running the Apache Airflow software.
    Operation:
      properties:
        metadata:
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
        name:
          type: string
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
        done:
          type: boolean
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
      type: object
      description: This resource represents a long-running operation that is the result of a network API call.
      id: Operation
    Date:
      properties:
        day:
          type: integer
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
          format: int32
        year:
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
          type: integer
          format: int32
        month:
          type: integer
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
          format: int32
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      type: object
      id: Date
    Environment:
      id: Environment
      properties:
        labels:
          additionalProperties:
            type: string
          description: 'Optional. User-defined labels for this environment. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \p{Ll}\p{Lo}{0,62} * Values must conform to regexp: [\p{Ll}\p{Lo}\p{N}_-]{0,63} * Both keys and values are additionally constrained to be <= 128 bytes in size.'
          type: object
        createTime:
          format: google-datetime
          type: string
          description: Output only. The time at which this environment was created.
        config:
          $ref: '#/components/schemas/EnvironmentConfig'
          description: Configuration parameters for this environment.
        state:
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - RUNNING
            - UPDATING
            - DELETING
            - ERROR
          enumDescriptions:
            - The state of the environment is unknown.
            - The environment is in the process of being created.
            - The environment is currently running and healthy. It is ready for use.
            - The environment is being updated. It remains usable but cannot receive additional update requests or be deleted at this time.
            - The environment is undergoing deletion. It cannot be used.
            - The environment has encountered an error and cannot be used.
          description: The current state of the environment.
          type: string
        name:
          description: 'The resource name of the environment, in the form: "projects/{projectId}/locations/{locationId}/environments/{environmentId}" EnvironmentId must start with a lowercase letter followed by up to 63 lowercase letters, numbers, or hyphens, and cannot end with a hyphen.'
          type: string
        uuid:
          type: string
          description: Output only. The UUID (Universally Unique IDentifier) associated with this environment. This value is generated when the environment is created.
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The time at which this environment was last modified.
      description: An environment for running orchestration tasks.
      type: object
    LoadSnapshotRequest:
      type: object
      description: Request to load a snapshot into a Cloud Composer environment.
      id: LoadSnapshotRequest
      properties:
        skipPypiPackagesInstallation:
          type: boolean
          description: Whether or not to skip installing Pypi packages when loading the environment's state.
        skipGcsDataCopying:
          description: Whether or not to skip copying Cloud Storage data when loading the environment's state.
          type: boolean
        skipEnvironmentVariablesSetting:
          type: boolean
          description: Whether or not to skip setting environment variables when loading the environment's state.
        snapshotPath:
          description: 'A Cloud Storage path to a snapshot to load, e.g.: "gs://my-bucket/snapshots/project_location_environment_timestamp".'
          type: string
        skipAirflowOverridesSetting:
          description: Whether or not to skip setting Airflow overrides when loading the environment's state.
          type: boolean
    SaveSnapshotResponse:
      type: object
      description: Response to SaveSnapshotRequest.
      id: SaveSnapshotResponse
      properties:
        snapshotPath:
          type: string
          description: 'The fully-resolved Cloud Storage path of the created snapshot, e.g.: "gs://my-bucket/snapshots/project_location_environment_timestamp". This field is populated only if the snapshot creation was successful.'
    NetworkingConfig:
      properties:
        connectionType:
          description: Optional. Indicates the user requested specifc connection type between Tenant and Customer projects. You cannot set networking connection type in public IP environment.
          enumDescriptions:
            - No specific connection type was requested, so the environment uses the default value corresponding to the rest of its configuration.
            - Requests the use of VPC peerings for connecting the Customer and Tenant projects.
            - Requests the use of Private Service Connect for connecting the Customer and Tenant projects.
          enum:
            - CONNECTION_TYPE_UNSPECIFIED
            - VPC_PEERING
            - PRIVATE_SERVICE_CONNECT
          type: string
      description: Configuration options for networking connections in the Composer 2 environment.
      id: NetworkingConfig
      type: object
    PrivateEnvironmentConfig:
      properties:
        cloudSqlIpv4CidrBlock:
          description: Optional. The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from `web_server_ipv4_cidr_block`.
          type: string
        cloudComposerNetworkIpv4ReservedRange:
          type: string
          readOnly: true
          description: Output only. The IP range reserved for the tenant project's Cloud Composer network. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
        enablePrivateEnvironment:
          description: Optional. If `true`, a Private IP Cloud Composer environment is created. If this field is set to true, `IPAllocationPolicy.use_ip_aliases` must be set to true for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
          type: boolean
        webServerIpv4ReservedRange:
          readOnly: true
          description: Output only. The IP range reserved for the tenant project's App Engine VMs. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
          type: string
        cloudComposerNetworkIpv4CidrBlock:
          description: Optional. The CIDR block from which IP range for Cloud Composer Network in tenant project will be reserved. Needs to be disjoint from private_cluster_config.master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
          type: string
        privateClusterConfig:
          description: Optional. Configuration for the private GKE cluster for a Private IP Cloud Composer environment.
          $ref: '#/components/schemas/PrivateClusterConfig'
        networkingConfig:
          $ref: '#/components/schemas/NetworkingConfig'
          description: Optional. Configuration for the network connections configuration in the environment.
        enablePrivatelyUsedPublicIps:
          description: Optional. When enabled, IPs from public (non-RFC1918) ranges can be used for `IPAllocationPolicy.cluster_ipv4_cidr_block` and `IPAllocationPolicy.service_ipv4_cidr_block`.
          type: boolean
        cloudComposerConnectionSubnetwork:
          type: string
          description: Optional. When specified, the environment will use Private Service Connect instead of VPC peerings to connect to Cloud SQL in the Tenant Project, and the PSC endpoint in the Customer Project will use an IP address from this subnetwork.
        webServerIpv4CidrBlock:
          type: string
          description: Optional. The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from `private_cluster_config.master_ipv4_cidr_block` and `cloud_sql_ipv4_cidr_block`. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
      type: object
      id: PrivateEnvironmentConfig
      description: The configuration information for configuring a Private IP Cloud Composer environment.
    EnvironmentConfig:
      type: object
      description: Configuration information for an environment.
      properties:
        masterAuthorizedNetworksConfig:
          $ref: '#/components/schemas/MasterAuthorizedNetworksConfig'
          description: 'Optional. The configuration options for GKE cluster master authorized networks. By default master authorized networks feature is: - in case of private environment: enabled with no external networks allowlisted. - in case of public environment: disabled.'
        nodeCount:
          type: integer
          format: int32
          description: The number of nodes in the Kubernetes Engine cluster that will be used to run this environment. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
        environmentSize:
          type: string
          description: Optional. The size of the Cloud Composer environment. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
          enum:
            - ENVIRONMENT_SIZE_UNSPECIFIED
            - ENVIRONMENT_SIZE_SMALL
            - ENVIRONMENT_SIZE_MEDIUM
            - ENVIRONMENT_SIZE_LARGE
          enumDescriptions:
            - The size of the environment is unspecified.
            - The environment size is small.
            - The environment size is medium.
            - The environment size is large.
        dagGcsPrefix:
          type: string
          description: Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud Storage objects reside in a flat namespace, a hierarchical file tree can be simulated using "/"-delimited object name prefixes. DAG objects for this environment reside in a simulated directory with the given prefix.
        encryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
          description: Optional. The encryption options for the Cloud Composer environment and its dependencies. Cannot be updated.
        nodeConfig:
          description: The configuration used for the Kubernetes Engine cluster.
          $ref: '#/components/schemas/NodeConfig'
        workloadsConfig:
          $ref: '#/components/schemas/WorkloadsConfig'
          description: Optional. The workloads configuration settings for the GKE cluster associated with the Cloud Composer environment. The GKE cluster runs Airflow scheduler, web server and workers workloads. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
        webServerNetworkAccessControl:
          description: Optional. The network-level access control policy for the Airflow web server. If unspecified, no network-level access restrictions will be applied.
          $ref: '#/components/schemas/WebServerNetworkAccessControl'
        gkeCluster:
          type: string
          description: Output only. The Kubernetes Engine cluster used to run this environment.
        privateEnvironmentConfig:
          description: The configuration used for the Private IP Cloud Composer environment.
          $ref: '#/components/schemas/PrivateEnvironmentConfig'
        softwareConfig:
          description: The configuration settings for software inside the environment.
          $ref: '#/components/schemas/SoftwareConfig'
        maintenanceWindow:
          description: Optional. The maintenance window is the period when Cloud Composer components may undergo maintenance. It is defined so that maintenance is not executed during peak hours or critical time periods. The system will not be under maintenance for every occurrence of this window, but when maintenance is planned, it will be scheduled during the window. The maintenance window period must encompass at least 12 hours per week. This may be split into multiple chunks, each with a size of at least 4 hours. If this value is omitted, the default value for maintenance window will be applied. The default value is Saturday and Sunday 00-06 GMT.
          $ref: '#/components/schemas/MaintenanceWindow'
        databaseConfig:
          description: Optional. The configuration settings for Cloud SQL instance used internally by Apache Airflow software.
          $ref: '#/components/schemas/DatabaseConfig'
        airflowUri:
          description: Output only. The URI of the Apache Airflow Web UI hosted within this environment (see [Airflow web interface](/composer/docs/how-to/accessing/airflow-web-interface)).
          type: string
        webServerConfig:
          $ref: '#/components/schemas/WebServerConfig'
          description: Optional. The configuration settings for the Airflow web server App Engine instance.
        recoveryConfig:
          $ref: '#/components/schemas/RecoveryConfig'
          description: Optional. The Recovery settings configuration of an environment. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
      id: EnvironmentConfig
    EncryptionConfig:
      id: EncryptionConfig
      properties:
        kmsKeyName:
          description: Optional. Customer-managed Encryption Key available through Google's Key Management Service. Cannot be updated. If not specified, Google-managed key will be used.
          type: string
      description: The encryption options for the Cloud Composer environment and its dependencies.Supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
      type: object
    WebServerResource:
      description: Configuration for resources used by Airflow web server.
      id: WebServerResource
      properties:
        cpu:
          description: Optional. CPU request and limit for Airflow web server.
          type: number
          format: float
        memoryGb:
          description: Optional. Memory (GB) request and limit for Airflow web server.
          format: float
          type: number
        storageGb:
          description: Optional. Storage (GB) request and limit for Airflow web server.
          type: number
          format: float
      type: object
    ListEnvironmentsResponse:
      properties:
        environments:
          type: array
          items:
            $ref: '#/components/schemas/Environment'
          description: The list of environments returned by a ListEnvironmentsRequest.
        nextPageToken:
          description: The page token used to query for the next page if one exists.
          type: string
      description: The environments in a project and location.
      id: ListEnvironmentsResponse
      type: object
    MaintenanceWindow:
      type: object
      properties:
        recurrence:
          type: string
          description: 'Required. Maintenance window recurrence. Format is a subset of [RFC-5545](https://tools.ietf.org/html/rfc5545) `RRULE`. The only allowed values for `FREQ` field are `FREQ=DAILY` and `FREQ=WEEKLY;BYDAY=...` Example values: `FREQ=WEEKLY;BYDAY=TU,WE`, `FREQ=DAILY`.'
        startTime:
          type: string
          description: Required. Start time of the first recurrence of the maintenance window.
          format: google-datetime
        endTime:
          description: Required. Maintenance window end time. It is used only to calculate the duration of the maintenance window. The value for end-time must be in the future, relative to `start_time`.
          format: google-datetime
          type: string
      description: 'The configuration settings for Cloud Composer maintenance window. The following example: ``` { "startTime":"2019-08-01T01:00:00Z" "endTime":"2019-08-01T07:00:00Z" "recurrence":"FREQ=WEEKLY;BYDAY=TU,WE" } ``` would define a maintenance window between 01 and 07 hours UTC during each Tuesday and Wednesday.'
      id: MaintenanceWindow
    MasterAuthorizedNetworksConfig:
      description: Configuration options for the master authorized networks feature. Enabled master authorized networks will disallow all external traffic to access Kubernetes master through HTTPS except traffic from the given CIDR blocks, Google Compute Engine Public IPs and Google Prod IPs.
      properties:
        enabled:
          type: boolean
          description: Whether or not master authorized networks feature is enabled.
        cidrBlocks:
          description: Up to 50 external networks that could access Kubernetes master through HTTPS.
          items:
            $ref: '#/components/schemas/CidrBlock'
          type: array
      type: object
      id: MasterAuthorizedNetworksConfig
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    environments:
      id: google.composer.environments
      name: environments
      title: Environments
      methods:
        projects_locations_environments_saveSnapshot:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments~1{environmentsId}:saveSnapshot/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_environments_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_environments_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: environments
        projects_locations_environments_loadSnapshot:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments~1{environmentsId}:loadSnapshot/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_environments_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments~1{environmentsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_environments_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments~1{environmentsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_environments_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments~1{environmentsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_locations_environments_get'
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_locations_environments_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_locations_environments_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_locations_environments_delete'
    image_versions:
      id: google.composer.image_versions
      name: image_versions
      title: Image_versions
      methods:
        projects_locations_imageVersions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1imageVersions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: imageVersions
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/image_versions/methods/projects_locations_imageVersions_list'
        insert: []
        update: []
        delete: []
    operations:
      id: google.composer.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: operations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:saveSnapshot:
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
    post:
      description: Creates a snapshots of a Cloud Composer environment. As a result of this operation, snapshot of environment's state is stored in a location specified in the SaveSnapshotRequest.
      operationId: composer.projects.locations.environments.saveSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveSnapshotRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/environments:
    parameters: *ref_1
    post:
      description: Create a new environment.
      operationId: composer.projects.locations.environments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: insert
    get:
      description: List environments.
      operationId: composer.projects.locations.environments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:loadSnapshot:
    parameters: *ref_1
    post:
      description: Loads a snapshot of a Cloud Composer environment. As a result of this operation, a snapshot of environment's specified in LoadSnapshotRequest is loaded into the environment.
      operationId: composer.projects.locations.environments.loadSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadSnapshotRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:
    parameters: *ref_1
    get:
      description: Get an existing environment.
      operationId: composer.projects.locations.environments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: select
    delete:
      description: Delete an environment.
      operationId: composer.projects.locations.environments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: delete
    patch:
      description: Update an environment.
      operationId: composer.projects.locations.environments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/imageVersions:
    parameters: *ref_1
    get:
      description: List ImageVersions for provided location.
      operationId: composer.projects.locations.imageVersions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImageVersionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: includePastReleases
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: image_versions
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: composer.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: composer.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.'
      operationId: composer.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-verb: select
