openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Composer API
  description: Manages Apache Airflow environments on Google Cloud Platform.
  version: v1
  x-discovery-doc-revision: '20230814'
  x-generated-date: '2023-08-23'
externalDocs:
  url: 'https://cloud.google.com/composer/'
servers:
  - url: 'https://composer.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    Line:
      id: Line
      type: object
      properties:
        content:
          description: Text content of the log line.
          type: string
        lineNumber:
          type: integer
          format: int32
          description: Number of the line.
      description: Contains information about a single line from logs.
    ExecuteAirflowCommandResponse:
      id: ExecuteAirflowCommandResponse
      properties:
        executionId:
          type: string
          description: The unique ID of the command execution for polling.
        podNamespace:
          description: The namespace of the pod where the command is executed.
          type: string
        error:
          type: string
          description: Error message. Empty if there was no error.
        pod:
          description: The name of the pod where the command is executed.
          type: string
      description: Response to ExecuteAirflowCommandRequest.
      type: object
    WebServerNetworkAccessControl:
      properties:
        allowedIpRanges:
          description: A collection of allowed IP ranges with descriptions.
          type: array
          items:
            $ref: '#/components/schemas/AllowedIpRange'
      type: object
      id: WebServerNetworkAccessControl
      description: Network-level access control policy for the Airflow web server.
    LoadSnapshotRequest:
      id: LoadSnapshotRequest
      type: object
      properties:
        skipEnvironmentVariablesSetting:
          type: boolean
          description: Whether or not to skip setting environment variables when loading the environment's state.
        skipAirflowOverridesSetting:
          type: boolean
          description: Whether or not to skip setting Airflow overrides when loading the environment's state.
        skipGcsDataCopying:
          type: boolean
          description: Whether or not to skip copying Cloud Storage data when loading the environment's state.
        skipPypiPackagesInstallation:
          type: boolean
          description: Whether or not to skip installing Pypi packages when loading the environment's state.
        snapshotPath:
          type: string
          description: 'A Cloud Storage path to a snapshot to load, e.g.: "gs://my-bucket/snapshots/project_location_environment_timestamp".'
      description: Request to load a snapshot into a Cloud Composer environment.
    NodeConfig:
      properties:
        subnetwork:
          description: 'Optional. The Compute Engine subnetwork to be used for machine communications, specified as a [relative resource name](/apis/design/resource_names#relative_resource_name). For example: "projects/{projectId}/regions/{regionId}/subnetworks/{subnetworkId}" If a subnetwork is provided, `nodeConfig.network` must also be provided, and the subnetwork must belong to the enclosing environment''s project and location.'
          type: string
        ipAllocationPolicy:
          $ref: '#/components/schemas/IPAllocationPolicy'
          description: Optional. The configuration for controlling how IPs are allocated in the GKE cluster.
        network:
          type: string
          description: 'Optional. The Compute Engine network to be used for machine communications, specified as a [relative resource name](/apis/design/resource_names#relative_resource_name). For example: "projects/{projectId}/global/networks/{networkId}". If unspecified, the "default" network ID in the environment''s project is used. If a [Custom Subnet Network](/vpc/docs/vpc#vpc_networks_and_subnets) is provided, `nodeConfig.subnetwork` must also be provided. For [Shared VPC](/vpc/docs/shared-vpc) subnetwork requirements, see `nodeConfig.subnetwork`.'
        diskSizeGb:
          description: 'Optional. The disk size in GB used for node VMs. Minimum size is 30GB. If unspecified, defaults to 100GB. Cannot be updated. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.'
          format: int32
          type: integer
        serviceAccount:
          type: string
          description: 'Optional. The Google Cloud Platform Service Account to be used by the node VMs. If a service account is not specified, the "default" Compute Engine service account is used. Cannot be updated.'
        tags:
          items:
            type: string
          type: array
          description: 'Optional. The list of instance tags applied to all node VMs. Tags are used to identify valid sources or targets for network firewalls. Each tag within the list must comply with [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Cannot be updated.'
        enableIpMasqAgent:
          description: 'Optional. Deploys ''ip-masq-agent'' daemon set in the GKE cluster and defines nonMasqueradeCIDRs equals to pod IP range so IP masquerading is used for all destination addresses, except between pods traffic. See: https://cloud.google.com/kubernetes-engine/docs/how-to/ip-masquerade-agent'
          type: boolean
        location:
          description: 'Optional. The Compute Engine [zone](/compute/docs/regions-zones) in which to deploy the VMs used to run the Apache Airflow software, specified as a [relative resource name](/apis/design/resource_names#relative_resource_name). For example: "projects/{projectId}/zones/{zoneId}". This `location` must belong to the enclosing environment''s project and location. If both this field and `nodeConfig.machineType` are specified, `nodeConfig.machineType` must belong to this `location`; if both are unspecified, the service will pick a zone in the Compute Engine region corresponding to the Cloud Composer location, and propagate that choice to both fields. If only one field (`location` or `nodeConfig.machineType`) is specified, the location information from the specified field will be propagated to the unspecified field. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.'
          type: string
        machineType:
          description: 'Optional. The Compute Engine [machine type](/compute/docs/machine-types) used for cluster instances, specified as a [relative resource name](/apis/design/resource_names#relative_resource_name). For example: "projects/{projectId}/zones/{zoneId}/machineTypes/{machineTypeId}". The `machineType` must belong to the enclosing environment''s project and location. If both this field and `nodeConfig.location` are specified, this `machineType` must belong to the `nodeConfig.location`; if both are unspecified, the service will pick a zone in the Compute Engine region corresponding to the Cloud Composer location, and propagate that choice to both fields. If exactly one of this field and `nodeConfig.location` is specified, the location information from the specified field will be propagated to the unspecified field. The `machineTypeId` must not be a [shared-core machine type](/compute/docs/machine-types#sharedcore). If this field is unspecified, the `machineTypeId` defaults to "n1-standard-1". This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.'
          type: string
        oauthScopes:
          items:
            type: string
          type: array
          description: 'Optional. The set of Google API scopes to be made available on all node VMs. If `oauth_scopes` is empty, defaults to ["https://www.googleapis.com/auth/cloud-platform"]. Cannot be updated. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.'
      type: object
      id: NodeConfig
      description: The configuration information for the Kubernetes Engine nodes running the Apache Airflow software.
    DatabaseFailoverRequest:
      type: object
      description: Request to trigger database failover (only for highly resilient environments).
      properties: {}
      id: DatabaseFailoverRequest
    LoadSnapshotResponse:
      type: object
      properties: {}
      id: LoadSnapshotResponse
      description: Response to LoadSnapshotRequest.
    ScheduledSnapshotsConfig:
      id: ScheduledSnapshotsConfig
      type: object
      properties:
        timeZone:
          description: Optional. Time zone that sets the context to interpret snapshot_creation_schedule.
          type: string
        snapshotLocation:
          description: Optional. The Cloud Storage location for storing automatically created snapshots.
          type: string
        snapshotCreationSchedule:
          description: Optional. The cron expression representing the time when snapshots creation mechanism runs. This field is subject to additional validation around frequency of execution.
          type: string
        enabled:
          type: boolean
          description: Optional. Whether scheduled snapshots creation is enabled.
      description: The configuration for scheduled snapshot creation mechanism.
    WorkloadsConfig:
      properties:
        scheduler:
          description: Optional. Resources used by Airflow schedulers.
          $ref: '#/components/schemas/SchedulerResource'
        worker:
          description: Optional. Resources used by Airflow workers.
          $ref: '#/components/schemas/WorkerResource'
        webServer:
          $ref: '#/components/schemas/WebServerResource'
          description: Optional. Resources used by Airflow web server.
      description: The Kubernetes workloads configuration for GKE cluster associated with the Cloud Composer environment. Supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
      type: object
      id: WorkloadsConfig
    SaveSnapshotResponse:
      type: object
      id: SaveSnapshotResponse
      description: Response to SaveSnapshotRequest.
      properties:
        snapshotPath:
          description: 'The fully-resolved Cloud Storage path of the created snapshot, e.g.: "gs://my-bucket/snapshots/project_location_environment_timestamp". This field is populated only if the snapshot creation was successful.'
          type: string
    ExitInfo:
      id: ExitInfo
      type: object
      properties:
        exitCode:
          description: The exit code from the command execution.
          type: integer
          format: int32
        error:
          type: string
          description: Error message. Empty if there was no error.
      description: Information about how a command ended.
    WebServerConfig:
      type: object
      id: WebServerConfig
      properties:
        machineType:
          type: string
          description: 'Optional. Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2, composer-n1-webserver-4 or composer-n1-webserver-8. If not specified, composer-n1-webserver-2 will be used. Value custom is returned only in response, if Airflow web server parameters were manually changed to a non-standard values.'
      description: The configuration settings for the Airflow web server App Engine instance. Supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*
    PollAirflowCommandResponse:
      properties:
        exitInfo:
          description: The result exit status of the command.
          $ref: '#/components/schemas/ExitInfo'
        outputEnd:
          type: boolean
          description: Whether the command execution has finished and there is no more output.
        output:
          items:
            $ref: '#/components/schemas/Line'
          description: Output from the command execution. It may not contain the full output and the caller may need to poll for more lines.
          type: array
      type: object
      id: PollAirflowCommandResponse
      description: Response to PollAirflowCommandRequest.
    ExecuteAirflowCommandRequest:
      properties:
        command:
          type: string
          description: Airflow command.
        parameters:
          description: 'Parameters for the Airflow command/subcommand as an array of arguments. It may contain positional arguments like `["my-dag-id"]`, key-value parameters like `["--foo=bar"]` or `["--foo","bar"]`, or other flags like `["-f"]`.'
          type: array
          items:
            type: string
        subcommand:
          description: Airflow subcommand.
          type: string
      id: ExecuteAirflowCommandRequest
      description: Execute Airflow Command request.
      type: object
    ImageVersion:
      properties:
        creationDisabled:
          type: boolean
          description: Whether it is impossible to create an environment with the image version.
        supportedPythonVersions:
          description: supported python versions
          items:
            type: string
          type: array
        releaseDate:
          $ref: '#/components/schemas/Date'
          description: The date of the version release.
        isDefault:
          type: boolean
          description: Whether this is the default ImageVersion used by Composer during environment creation if no input ImageVersion is specified.
        imageVersionId:
          description: 'The string identifier of the ImageVersion, in the form: "composer-x.y.z-airflow-a.b.c"'
          type: string
        upgradeDisabled:
          type: boolean
          description: Whether it is impossible to upgrade an environment running with the image version.
      id: ImageVersion
      type: object
      description: ImageVersion information
    CheckUpgradeResponse:
      properties:
        pypiConflictBuildLogExtract:
          description: Output only. Extract from a docker image build log containing information about pypi modules conflicts.
          readOnly: true
          type: string
        imageVersion:
          type: string
          description: Composer image for which the build was happening.
        pypiDependencies:
          type: object
          description: 'Pypi dependencies specified in the environment configuration, at the time when the build was triggered.'
          additionalProperties:
            type: string
        buildLogUri:
          readOnly: true
          type: string
          description: Output only. Url for a docker build log of an upgraded image.
        containsPypiModulesConflict:
          enum:
            - CONFLICT_RESULT_UNSPECIFIED
            - CONFLICT
            - NO_CONFLICT
          type: string
          readOnly: true
          enumDescriptions:
            - It is unknown whether build had conflicts or not.
            - There were python packages conflicts.
            - There were no python packages conflicts.
          description: Output only. Whether build has succeeded or failed on modules conflicts.
      id: CheckUpgradeResponse
      description: Message containing information about the result of an upgrade check operation.
      type: object
    Status:
      type: object
      id: Status
      properties:
        code:
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    DatabaseConfig:
      id: DatabaseConfig
      type: object
      properties:
        machineType:
          type: string
          description: 'Optional. Cloud SQL machine type used by Airflow database. It has to be one of: db-n1-standard-2, db-n1-standard-4, db-n1-standard-8 or db-n1-standard-16. If not specified, db-n1-standard-2 will be used. Supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.'
      description: The configuration of Cloud SQL instance that is used by the Apache Airflow software.
    WorkerResource:
      id: WorkerResource
      properties:
        cpu:
          type: number
          format: float
          description: Optional. CPU request and limit for a single Airflow worker replica.
        memoryGb:
          description: Optional. Memory (GB) request and limit for a single Airflow worker replica.
          format: float
          type: number
        storageGb:
          type: number
          description: Optional. Storage (GB) request and limit for a single Airflow worker replica.
          format: float
        minCount:
          format: int32
          description: Optional. Minimum number of workers for autoscaling.
          type: integer
        maxCount:
          description: Optional. Maximum number of workers for autoscaling.
          type: integer
          format: int32
      type: object
      description: Configuration for resources used by Airflow workers.
    Environment:
      description: An environment for running orchestration tasks.
      type: object
      id: Environment
      properties:
        name:
          type: string
          description: 'The resource name of the environment, in the form: "projects/{projectId}/locations/{locationId}/environments/{environmentId}" EnvironmentId must start with a lowercase letter followed by up to 63 lowercase letters, numbers, or hyphens, and cannot end with a hyphen.'
        config:
          $ref: '#/components/schemas/EnvironmentConfig'
          description: Configuration parameters for this environment.
        createTime:
          description: Output only. The time at which this environment was created.
          format: google-datetime
          type: string
        uuid:
          type: string
          description: Output only. The UUID (Universally Unique IDentifier) associated with this environment. This value is generated when the environment is created.
        state:
          type: string
          description: The current state of the environment.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - RUNNING
            - UPDATING
            - DELETING
            - ERROR
          enumDescriptions:
            - The state of the environment is unknown.
            - The environment is in the process of being created.
            - The environment is currently running and healthy. It is ready for use.
            - The environment is being updated. It remains usable but cannot receive additional update requests or be deleted at this time.
            - The environment is undergoing deletion. It cannot be used.
            - The environment has encountered an error and cannot be used.
        updateTime:
          type: string
          format: google-datetime
          description: Output only. The time at which this environment was last modified.
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Optional. User-defined labels for this environment. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \p{Ll}\p{Lo}{0,62} * Values must conform to regexp: [\p{Ll}\p{Lo}\p{N}_-]{0,63} * Both keys and values are additionally constrained to be <= 128 bytes in size.'
    Date:
      id: Date
      type: object
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      properties:
        year:
          format: int32
          type: integer
          description: 'Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.'
        month:
          description: 'Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.'
          format: int32
          type: integer
        day:
          description: 'Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn''t significant.'
          type: integer
          format: int32
    SaveSnapshotRequest:
      description: Request to create a snapshot of a Cloud Composer environment.
      properties:
        snapshotLocation:
          type: string
          description: 'Location in a Cloud Storage where the snapshot is going to be stored, e.g.: "gs://my-bucket/snapshots".'
      id: SaveSnapshotRequest
      type: object
    StopAirflowCommandRequest:
      id: StopAirflowCommandRequest
      type: object
      properties:
        executionId:
          description: The unique ID of the command execution.
          type: string
        force:
          description: 'If true, the execution is terminated forcefully (SIGKILL). If false, the execution is stopped gracefully, giving it time for cleanup.'
          type: boolean
        pod:
          description: The name of the pod where the command is executed.
          type: string
        podNamespace:
          type: string
          description: The namespace of the pod where the command is executed.
      description: Stop Airflow Command request.
    DatabaseFailoverResponse:
      description: Response for DatabaseFailoverRequest.
      properties: {}
      type: object
      id: DatabaseFailoverResponse
    MaintenanceWindow:
      type: object
      id: MaintenanceWindow
      properties:
        recurrence:
          description: 'Required. Maintenance window recurrence. Format is a subset of [RFC-5545](https://tools.ietf.org/html/rfc5545) `RRULE`. The only allowed values for `FREQ` field are `FREQ=DAILY` and `FREQ=WEEKLY;BYDAY=...` Example values: `FREQ=WEEKLY;BYDAY=TU,WE`, `FREQ=DAILY`.'
          type: string
        startTime:
          description: Required. Start time of the first recurrence of the maintenance window.
          format: google-datetime
          type: string
        endTime:
          description: 'Required. Maintenance window end time. It is used only to calculate the duration of the maintenance window. The value for end-time must be in the future, relative to `start_time`.'
          format: google-datetime
          type: string
      description: 'The configuration settings for Cloud Composer maintenance window. The following example: ``` { "startTime":"2019-08-01T01:00:00Z" "endTime":"2019-08-01T07:00:00Z" "recurrence":"FREQ=WEEKLY;BYDAY=TU,WE" } ``` would define a maintenance window between 01 and 07 hours UTC during each Tuesday and Wednesday.'
    PrivateEnvironmentConfig:
      properties:
        cloudComposerConnectionSubnetwork:
          description: 'Optional. When specified, the environment will use Private Service Connect instead of VPC peerings to connect to Cloud SQL in the Tenant Project, and the PSC endpoint in the Customer Project will use an IP address from this subnetwork.'
          type: string
        privateClusterConfig:
          $ref: '#/components/schemas/PrivateClusterConfig'
          description: Optional. Configuration for the private GKE cluster for a Private IP Cloud Composer environment.
        enablePrivatelyUsedPublicIps:
          description: 'Optional. When enabled, IPs from public (non-RFC1918) ranges can be used for `IPAllocationPolicy.cluster_ipv4_cidr_block` and `IPAllocationPolicy.service_ipv4_cidr_block`.'
          type: boolean
        cloudComposerNetworkIpv4CidrBlock:
          description: Optional. The CIDR block from which IP range for Cloud Composer Network in tenant project will be reserved. Needs to be disjoint from private_cluster_config.master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
          type: string
        enablePrivateEnvironment:
          description: 'Optional. If `true`, a Private IP Cloud Composer environment is created. If this field is set to true, `IPAllocationPolicy.use_ip_aliases` must be set to true for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.'
          type: boolean
        cloudComposerNetworkIpv4ReservedRange:
          type: string
          description: Output only. The IP range reserved for the tenant project's Cloud Composer network. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
          readOnly: true
        networkingConfig:
          description: Optional. Configuration for the network connections configuration in the environment.
          $ref: '#/components/schemas/NetworkingConfig'
        webServerIpv4CidrBlock:
          description: Optional. The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from `private_cluster_config.master_ipv4_cidr_block` and `cloud_sql_ipv4_cidr_block`. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
          type: string
        cloudSqlIpv4CidrBlock:
          description: Optional. The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from `web_server_ipv4_cidr_block`.
          type: string
        webServerIpv4ReservedRange:
          description: Output only. The IP range reserved for the tenant project's App Engine VMs. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
          readOnly: true
          type: string
      id: PrivateEnvironmentConfig
      type: object
      description: The configuration information for configuring a Private IP Cloud Composer environment.
    RecoveryConfig:
      type: object
      description: The Recovery settings of an environment.
      properties:
        scheduledSnapshotsConfig:
          description: Optional. The configuration for scheduled snapshot creation mechanism.
          $ref: '#/components/schemas/ScheduledSnapshotsConfig'
      id: RecoveryConfig
    OperationMetadata:
      description: Metadata describing an operation.
      type: object
      id: OperationMetadata
      properties:
        resource:
          description: 'Output only. The resource being operated on, as a [relative resource name]( /apis/design/resource_names#relative_resource_name).'
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - SUCCESSFUL
            - FAILED
          description: Output only. The current operation state.
          enumDescriptions:
            - Unused.
            - The operation has been created but is not yet started.
            - The operation is underway.
            - The operation completed successfully.
            - ''
            - The operation is no longer running but did not succeed.
          type: string
        endTime:
          description: 'Output only. The time when the operation terminated, regardless of its success. This field is unset if the operation is still ongoing.'
          type: string
          format: google-datetime
        operationType:
          description: Output only. The type of operation being performed.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - CREATE
            - DELETE
            - UPDATE
            - CHECK
            - SAVE_SNAPSHOT
            - LOAD_SNAPSHOT
            - DATABASE_FAILOVER
          enumDescriptions:
            - Unused.
            - A resource creation operation.
            - A resource deletion operation.
            - A resource update operation.
            - A resource check operation.
            - Saves snapshot of the resource operation.
            - Loads snapshot of the resource operation.
            - Triggers failover of environment's Cloud SQL instance (only for highly resilient environments).
        resourceUuid:
          type: string
          description: Output only. The UUID of the resource being operated on.
        createTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation was submitted to the server.
    CidrBlock:
      id: CidrBlock
      properties:
        displayName:
          description: User-defined name that identifies the CIDR block.
          type: string
        cidrBlock:
          type: string
          description: CIDR block that must be specified in CIDR notation.
      type: object
      description: CIDR block with an optional name.
    AllowedIpRange:
      description: Allowed IP range with user-provided description.
      id: AllowedIpRange
      properties:
        description:
          type: string
          description: Optional. User-provided description. It must contain at most 300 characters.
        value:
          description: 'IP address or range, defined using CIDR notation, of requests that this rule applies to. Examples: `192.168.1.1` or `192.168.0.0/16` or `2001:db8::/32` or `2001:0db8:0000:0042:0000:8a2e:0370:7334`. IP range prefixes should be properly truncated. For example, `1.2.3.4/24` should be truncated to `1.2.3.0/24`. Similarly, for IPv6, `2001:db8::1/32` should be truncated to `2001:db8::/32`.'
          type: string
      type: object
    WebServerResource:
      id: WebServerResource
      properties:
        cpu:
          format: float
          type: number
          description: Optional. CPU request and limit for Airflow web server.
        memoryGb:
          format: float
          type: number
          description: Optional. Memory (GB) request and limit for Airflow web server.
        storageGb:
          format: float
          description: Optional. Storage (GB) request and limit for Airflow web server.
          type: number
      description: Configuration for resources used by Airflow web server.
      type: object
    IPAllocationPolicy:
      properties:
        clusterIpv4CidrBlock:
          type: string
          description: 'Optional. The IP address range used to allocate IP addresses to pods in the GKE cluster. For Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*, this field is applicable only when `use_ip_aliases` is true. Set to blank to have GKE choose a range with the default size. Set to /netmask (e.g. `/14`) to have GKE choose a range with a specific netmask. Set to a [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.'
        servicesSecondaryRangeName:
          description: 'Optional. The name of the services'' secondary range used to allocate IP addresses to the GKE cluster. For Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*, this field is applicable only when `use_ip_aliases` is true.'
          type: string
        servicesIpv4CidrBlock:
          type: string
          description: 'Optional. The IP address range of the services IP addresses in this GKE cluster. For Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*, this field is applicable only when `use_ip_aliases` is true. Set to blank to have GKE choose a range with the default size. Set to /netmask (e.g. `/14`) to have GKE choose a range with a specific netmask. Set to a [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.'
        useIpAliases:
          type: boolean
          description: 'Optional. Whether or not to enable Alias IPs in the GKE cluster. If `true`, a VPC-native cluster is created. This field is only supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*. Environments in newer versions always use VPC-native GKE clusters.'
        clusterSecondaryRangeName:
          description: 'Optional. The name of the GKE cluster''s secondary range used to allocate IP addresses to pods. For Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*, this field is applicable only when `use_ip_aliases` is true.'
          type: string
      id: IPAllocationPolicy
      type: object
      description: Configuration for controlling how IPs are allocated in the GKE cluster running the Apache Airflow software.
    PollAirflowCommandRequest:
      id: PollAirflowCommandRequest
      properties:
        podNamespace:
          description: The namespace of the pod where the command is executed.
          type: string
        nextLineNumber:
          type: integer
          format: int32
          description: Line number from which new logs should be fetched.
        executionId:
          description: The unique ID of the command execution.
          type: string
        pod:
          description: The name of the pod where the command is executed.
          type: string
      type: object
      description: Poll Airflow Command request.
    PrivateClusterConfig:
      id: PrivateClusterConfig
      properties:
        enablePrivateEndpoint:
          type: boolean
          description: 'Optional. If `true`, access to the public endpoint of the GKE cluster is denied.'
        masterIpv4ReservedRange:
          description: Output only. The IP range in CIDR notation to use for the hosted master network. This range is used for assigning internal IP addresses to the GKE cluster master or set of masters and to the internal load balancer virtual IP. This range must not overlap with any other ranges in use within the cluster's network.
          type: string
          readOnly: true
        masterIpv4CidrBlock:
          type: string
          description: 'Optional. The CIDR block from which IPv4 range for GKE master will be reserved. If left blank, the default value of ''172.16.0.0/23'' is used.'
      description: Configuration options for the private GKE cluster in a Cloud Composer environment.
      type: object
    ListImageVersionsResponse:
      description: The ImageVersions in a project and location.
      type: object
      properties:
        imageVersions:
          description: The list of supported ImageVersions in a location.
          type: array
          items:
            $ref: '#/components/schemas/ImageVersion'
        nextPageToken:
          type: string
          description: The page token used to query for the next page if one exists.
      id: ListImageVersionsResponse
    Empty:
      id: Empty
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
    NetworkingConfig:
      properties:
        connectionType:
          enum:
            - CONNECTION_TYPE_UNSPECIFIED
            - VPC_PEERING
            - PRIVATE_SERVICE_CONNECT
          description: Optional. Indicates the user requested specifc connection type between Tenant and Customer projects. You cannot set networking connection type in public IP environment.
          type: string
          enumDescriptions:
            - 'No specific connection type was requested, so the environment uses the default value corresponding to the rest of its configuration.'
            - Requests the use of VPC peerings for connecting the Customer and Tenant projects.
            - Requests the use of Private Service Connect for connecting the Customer and Tenant projects.
      id: NetworkingConfig
      description: Configuration options for networking connections in the Composer 2 environment.
      type: object
    ListEnvironmentsResponse:
      properties:
        nextPageToken:
          description: The page token used to query for the next page if one exists.
          type: string
        environments:
          items:
            $ref: '#/components/schemas/Environment'
          description: The list of environments returned by a ListEnvironmentsRequest.
          type: array
      description: The environments in a project and location.
      id: ListEnvironmentsResponse
      type: object
    MasterAuthorizedNetworksConfig:
      id: MasterAuthorizedNetworksConfig
      properties:
        enabled:
          description: Whether or not master authorized networks feature is enabled.
          type: boolean
        cidrBlocks:
          type: array
          items:
            $ref: '#/components/schemas/CidrBlock'
          description: Up to 50 external networks that could access Kubernetes master through HTTPS.
      type: object
      description: 'Configuration options for the master authorized networks feature. Enabled master authorized networks will disallow all external traffic to access Kubernetes master through HTTPS except traffic from the given CIDR blocks, Google Compute Engine Public IPs and Google Prod IPs.'
    EncryptionConfig:
      id: EncryptionConfig
      type: object
      description: The encryption options for the Cloud Composer environment and its dependencies.Supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
      properties:
        kmsKeyName:
          type: string
          description: 'Optional. Customer-managed Encryption Key available through Google''s Key Management Service. Cannot be updated. If not specified, Google-managed key will be used.'
    SchedulerResource:
      properties:
        cpu:
          description: Optional. CPU request and limit for a single Airflow scheduler replica.
          type: number
          format: float
        memoryGb:
          format: float
          description: Optional. Memory (GB) request and limit for a single Airflow scheduler replica.
          type: number
        count:
          type: integer
          format: int32
          description: Optional. The number of schedulers.
        storageGb:
          format: float
          description: Optional. Storage (GB) request and limit for a single Airflow scheduler replica.
          type: number
      description: Configuration for resources used by Airflow schedulers.
      id: SchedulerResource
      type: object
    StopAirflowCommandResponse:
      id: StopAirflowCommandResponse
      type: object
      description: Response to StopAirflowCommandRequest.
      properties:
        isDone:
          description: Whether the execution is still running.
          type: boolean
        output:
          type: array
          items:
            type: string
          description: Output message from stopping execution request.
    Operation:
      type: object
      properties:
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        metadata:
          type: object
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        response:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
      description: This resource represents a long-running operation that is the result of a network API call.
      id: Operation
    SoftwareConfig:
      id: SoftwareConfig
      description: Specifies the selection and configuration of software inside the environment.
      type: object
      properties:
        envVariables:
          additionalProperties:
            type: string
          description: 'Optional. Additional environment variables to provide to the Apache Airflow scheduler, worker, and webserver processes. Environment variable names must match the regular expression `a-zA-Z_*`. They cannot specify Apache Airflow software configuration overrides (they cannot match the regular expression `AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+`), and they cannot match any of the following reserved names: * `AIRFLOW_HOME` * `C_FORCE_ROOT` * `CONTAINER_NAME` * `DAGS_FOLDER` * `GCP_PROJECT` * `GCS_BUCKET` * `GKE_CLUSTER_NAME` * `SQL_DATABASE` * `SQL_INSTANCE` * `SQL_PASSWORD` * `SQL_PROJECT` * `SQL_REGION` * `SQL_USER`'
          type: object
        schedulerCount:
          description: Optional. The number of schedulers for Airflow. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-2.*.*.
          format: int32
          type: integer
        pythonVersion:
          type: string
          description: 'Optional. The major version of Python used to run the Apache Airflow scheduler, worker, and webserver processes. Can be set to ''2'' or ''3''. If not specified, the default is ''3''. Cannot be updated. This field is only supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*. Environments in newer versions always use Python major version 3.'
        pypiPackages:
          type: object
          additionalProperties:
            type: string
          description: 'Optional. Custom Python Package Index (PyPI) packages to be installed in the environment. Keys refer to the lowercase package name such as "numpy" and values are the lowercase extras and version specifier such as "==1.12.0", "[devel,gcp_api]", or "[devel]>=1.8.2, <1.9.2". To specify a package without pinning it to a version specifier, use the empty string as the value.'
        imageVersion:
          type: string
          description: 'The version of the software running in the environment. This encapsulates both the version of Cloud Composer functionality and the version of Apache Airflow. It must match the regular expression `composer-([0-9]+(\.[0-9]+\.[0-9]+(-preview\.[0-9]+)?)?|latest)-airflow-([0-9]+(\.[0-9]+(\.[0-9]+)?)?)`. When used as input, the server also checks if the provided version is supported and denies the request for an unsupported version. The Cloud Composer portion of the image version is a full [semantic version](https://semver.org), or an alias in the form of major version number or `latest`. When an alias is provided, the server replaces it with the current Cloud Composer version that satisfies the alias. The Apache Airflow portion of the image version is a full semantic version that points to one of the supported Apache Airflow versions, or an alias in the form of only major or major.minor versions specified. When an alias is provided, the server replaces it with the latest Apache Airflow version that satisfies the alias and is supported in the given Cloud Composer version. In all cases, the resolved image version is stored in the same field. See also [version list](/composer/docs/concepts/versioning/composer-versions) and [versioning overview](/composer/docs/concepts/versioning/composer-versioning-overview).'
        airflowConfigOverrides:
          description: 'Optional. Apache Airflow configuration properties to override. Property keys contain the section and property names, separated by a hyphen, for example "core-dags_are_paused_at_creation". Section names must not contain hyphens ("-"), opening square brackets ("["), or closing square brackets ("]"). The property name must not be empty and must not contain an equals sign ("=") or semicolon (";"). Section and property names must not contain a period ("."). Apache Airflow configuration property names must be written in [snake_case](https://en.wikipedia.org/wiki/Snake_case). Property values can contain any character, and can be written in any lower/upper case format. Certain Apache Airflow configuration property values are [blocked](/composer/docs/concepts/airflow-configurations), and cannot be overridden.'
          additionalProperties:
            type: string
          type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
      id: ListOperationsResponse
    EnvironmentConfig:
      description: Configuration information for an environment.
      type: object
      id: EnvironmentConfig
      properties:
        dagGcsPrefix:
          description: 'Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud Storage objects reside in a flat namespace, a hierarchical file tree can be simulated using "/"-delimited object name prefixes. DAG objects for this environment reside in a simulated directory with the given prefix.'
          type: string
        softwareConfig:
          description: The configuration settings for software inside the environment.
          $ref: '#/components/schemas/SoftwareConfig'
        encryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
          description: Optional. The encryption options for the Cloud Composer environment and its dependencies. Cannot be updated.
        databaseConfig:
          $ref: '#/components/schemas/DatabaseConfig'
          description: Optional. The configuration settings for Cloud SQL instance used internally by Apache Airflow software.
        privateEnvironmentConfig:
          $ref: '#/components/schemas/PrivateEnvironmentConfig'
          description: The configuration used for the Private IP Cloud Composer environment.
        airflowUri:
          type: string
          description: 'Output only. The URI of the Apache Airflow Web UI hosted within this environment (see [Airflow web interface](/composer/docs/how-to/accessing/airflow-web-interface)).'
        airflowByoidUri:
          type: string
          readOnly: true
          description: 'Output only. The ''bring your own identity'' variant of the URI of the Apache Airflow Web UI hosted within this environment, to be accessed with external identities using workforce identity federation (see [Access environments with workforce identity federation](/composer/docs/composer-2/access-environments-with-workforce-identity-federation)).'
        nodeCount:
          type: integer
          format: int32
          description: The number of nodes in the Kubernetes Engine cluster that will be used to run this environment. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
        webServerConfig:
          $ref: '#/components/schemas/WebServerConfig'
          description: Optional. The configuration settings for the Airflow web server App Engine instance.
        resilienceMode:
          enum:
            - RESILIENCE_MODE_UNSPECIFIED
            - HIGH_RESILIENCE
          description: Optional. Resilience mode of the Cloud Composer Environment. This field is supported for Cloud Composer environments in versions composer-2.2.0-airflow-*.*.* and newer.
          enumDescriptions:
            - Default mode doesn't change environment parameters.
            - 'Enabled High Resilience mode, including Cloud SQL HA.'
          type: string
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow'
          description: 'Optional. The maintenance window is the period when Cloud Composer components may undergo maintenance. It is defined so that maintenance is not executed during peak hours or critical time periods. The system will not be under maintenance for every occurrence of this window, but when maintenance is planned, it will be scheduled during the window. The maintenance window period must encompass at least 12 hours per week. This may be split into multiple chunks, each with a size of at least 4 hours. If this value is omitted, the default value for maintenance window will be applied. The default value is Saturday and Sunday 00-06 GMT.'
        masterAuthorizedNetworksConfig:
          $ref: '#/components/schemas/MasterAuthorizedNetworksConfig'
          description: 'Optional. The configuration options for GKE cluster master authorized networks. By default master authorized networks feature is: - in case of private environment: enabled with no external networks allowlisted. - in case of public environment: disabled.'
        recoveryConfig:
          description: Optional. The Recovery settings configuration of an environment. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
          $ref: '#/components/schemas/RecoveryConfig'
        workloadsConfig:
          description: 'Optional. The workloads configuration settings for the GKE cluster associated with the Cloud Composer environment. The GKE cluster runs Airflow scheduler, web server and workers workloads. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.'
          $ref: '#/components/schemas/WorkloadsConfig'
        environmentSize:
          description: Optional. The size of the Cloud Composer environment. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
          enum:
            - ENVIRONMENT_SIZE_UNSPECIFIED
            - ENVIRONMENT_SIZE_SMALL
            - ENVIRONMENT_SIZE_MEDIUM
            - ENVIRONMENT_SIZE_LARGE
          enumDescriptions:
            - The size of the environment is unspecified.
            - The environment size is small.
            - The environment size is medium.
            - The environment size is large.
          type: string
        gkeCluster:
          description: Output only. The Kubernetes Engine cluster used to run this environment.
          type: string
        webServerNetworkAccessControl:
          description: 'Optional. The network-level access control policy for the Airflow web server. If unspecified, no network-level access restrictions will be applied.'
          $ref: '#/components/schemas/WebServerNetworkAccessControl'
        nodeConfig:
          description: The configuration used for the Kubernetes Engine cluster.
          $ref: '#/components/schemas/NodeConfig'
    FetchDatabasePropertiesResponse:
      properties:
        primaryGceZone:
          type: string
          description: The Compute Engine zone that the instance is currently serving from.
        isFailoverReplicaAvailable:
          description: The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The primary instance can only fail over to the failover replica when the status is true.
          type: boolean
        secondaryGceZone:
          type: string
          description: The Compute Engine zone that the failover instance is currently serving from for a regional Cloud SQL instance.
      description: Response for FetchDatabasePropertiesRequest.
      id: FetchDatabasePropertiesResponse
      type: object
  parameters:
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
  x-stackQL-resources:
    image_versions:
      id: google.composer.image_versions
      name: image_versions
      title: Image Versions
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1imageVersions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.imageVersions
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1imageVersions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/image_versions/methods/list'
        insert: []
        update: []
        delete: []
    operations:
      id: google.composer.operations
      name: operations
      title: Operations
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    environments_database_properties:
      id: google.composer.environments_database_properties
      name: environments_database_properties
      title: Environments Database Properties
      methods:
        fetch_database_properties:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments~1{environmentsId}:fetchDatabaseProperties/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    environments:
      id: google.composer.environments
      name: environments
      title: Environments
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments~1{environmentsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments~1{environmentsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments~1{environmentsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        save_snapshot:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments~1{environmentsId}:saveSnapshot/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.environments
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop_airflow_command:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments~1{environmentsId}:stopAirflowCommand/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        execute_airflow_command:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments~1{environmentsId}:executeAirflowCommand/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        load_snapshot:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments~1{environmentsId}:loadSnapshot/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        database_failover:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments~1{environmentsId}:databaseFailover/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        poll_airflow_command:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments~1{environmentsId}:pollAirflowCommand/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environments/methods/get'
          - $ref: '#/components/x-stackQL-resources/environments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/environments/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/environments/methods/delete'
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/imageVersions':
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
    get:
      description: List ImageVersions for provided location.
      operationId: composer.projects.locations.imageVersions.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImageVersionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: includePastReleases
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: image_versions
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.imageVersions
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: composer.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: composer.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: composer.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:fetchDatabaseProperties':
    parameters: *ref_1
    get:
      description: Fetches database properties.
      operationId: composer.projects.locations.environments.fetchDatabaseProperties
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchDatabasePropertiesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments_database_properties
      x-stackQL-method: fetch_database_properties
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}':
    parameters: *ref_1
    patch:
      description: Update an environment.
      operationId: composer.projects.locations.environments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Delete an environment.
      operationId: composer.projects.locations.environments.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Get an existing environment.
      operationId: composer.projects.locations.environments.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:saveSnapshot':
    parameters: *ref_1
    post:
      description: 'Creates a snapshots of a Cloud Composer environment. As a result of this operation, snapshot of environment''s state is stored in a location specified in the SaveSnapshotRequest.'
      operationId: composer.projects.locations.environments.saveSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveSnapshotRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-method: save_snapshot
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/environments':
    parameters: *ref_1
    get:
      description: List environments.
      operationId: composer.projects.locations.environments.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: environments
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.environments
    post:
      description: Create a new environment.
      operationId: composer.projects.locations.environments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:stopAirflowCommand':
    parameters: *ref_1
    post:
      description: Stops Airflow CLI command execution.
      operationId: composer.projects.locations.environments.stopAirflowCommand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopAirflowCommandRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopAirflowCommandResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-method: stop_airflow_command
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:executeAirflowCommand':
    parameters: *ref_1
    post:
      description: Executes Airflow CLI command.
      operationId: composer.projects.locations.environments.executeAirflowCommand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteAirflowCommandRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteAirflowCommandResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-method: execute_airflow_command
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:loadSnapshot':
    parameters: *ref_1
    post:
      description: 'Loads a snapshot of a Cloud Composer environment. As a result of this operation, a snapshot of environment''s specified in LoadSnapshotRequest is loaded into the environment.'
      operationId: composer.projects.locations.environments.loadSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadSnapshotRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-method: load_snapshot
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:databaseFailover':
    parameters: *ref_1
    post:
      description: Triggers database failover (only for highly resilient environments).
      operationId: composer.projects.locations.environments.databaseFailover
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseFailoverRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-method: database_failover
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:pollAirflowCommand':
    parameters: *ref_1
    post:
      description: Polls Airflow CLI command execution and fetches logs.
      operationId: composer.projects.locations.environments.pollAirflowCommand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PollAirflowCommandRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollAirflowCommandResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-method: poll_airflow_command
      x-stackQL-verb: exec
