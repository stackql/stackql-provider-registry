openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: SAS Portal API (Testing)
  description: ''
  version: v1alpha1
  x-discovery-doc-revision: '20250826'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://developers.google.com/spectrum-access-system/
servers:
  - url: https://prod-tt-sasportal.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
            https://www.googleapis.com/auth/sasportal: Read, create, update, and delete your SAS Portal data.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    SasPortalCustomer:
      id: SasPortalCustomer
      description: Entity representing a SAS customer.
      type: object
      properties:
        name:
          description: Output only. Resource name of the customer.
          type: string
        displayName:
          description: >-
            Required. Name of the organization that the customer entity
            represents.
          type: string
        sasUserIds:
          description: User IDs used by the devices belonging to this customer.
          type: array
          items:
            type: string
    SasPortalListCustomersResponse:
      id: SasPortalListCustomersResponse
      description: Response for `ListCustomers`.
      type: object
      properties:
        customers:
          description: The list of customers that match the request.
          type: array
          items:
            $ref: '#/components/schemas/SasPortalCustomer'
        nextPageToken:
          description: >-
            A pagination token returned from a previous call to ListCustomers
            that indicates from where listing should continue. If the field is
            missing or empty, it means there are no more customers.
          type: string
    SasPortalListGcpProjectDeploymentsResponse:
      id: SasPortalListGcpProjectDeploymentsResponse
      description: Response for [ListGcpProjectDeployments].
      type: object
      properties:
        deployments:
          description: Optional. Deployments associated with the GCP project
          type: array
          items:
            $ref: '#/components/schemas/SasPortalGcpProjectDeployment'
    SasPortalGcpProjectDeployment:
      id: SasPortalGcpProjectDeployment
      description: >-
        Deployment associated with the GCP project. Includes whether SAS
        analytics has been enabled or not.
      type: object
      properties:
        hasEnabledAnalytics:
          description: Whether SAS analytics has been enabled.
          type: boolean
        deployment:
          description: Deployment associated with the GCP project.
          $ref: '#/components/schemas/SasPortalDeployment'
    SasPortalDeployment:
      id: SasPortalDeployment
      description: The Deployment.
      type: object
      properties:
        name:
          description: Output only. Resource name.
          readOnly: true
          type: string
        displayName:
          description: The deployment's display name.
          type: string
        sasUserIds:
          description: >-
            User ID used by the devices belonging to this deployment. Each
            deployment should be associated with one unique user ID.
          type: array
          items:
            type: string
        frns:
          description: >-
            Output only. The FCC Registration Numbers (FRNs) copied from its
            direct parent.
          readOnly: true
          type: array
          items:
            type: string
    SasPortalProvisionDeploymentRequest:
      id: SasPortalProvisionDeploymentRequest
      description: >-
        Request for [ProvisionDeployment].
        [spectrum.sas.portal.v1alpha1.Provisioning.ProvisionDeployment]. GCP
        Project, Organization Info, and callerâ€™s GAIA ID should be retrieved
        from the RPC handler, and used as inputs to create a new SAS
        organization (if not exists) and a new SAS deployment.
      type: object
      properties:
        newOrganizationDisplayName:
          description: >-
            Optional. If this field is set, and a new SAS Portal Organization
            needs to be created, its display name will be set to the value of
            this field.
          type: string
        newDeploymentDisplayName:
          description: >-
            Optional. If this field is set, and a new SAS Portal Deployment
            needs to be created, its display name will be set to the value of
            this field.
          type: string
        organizationId:
          description: >-
            Optional. If this field is set then a new deployment will be created
            under the organization specified by this id.
          type: string
          format: int64
    SasPortalProvisionDeploymentResponse:
      id: SasPortalProvisionDeploymentResponse
      description: >-
        Response for [ProvisionDeployment].
        [spectrum.sas.portal.v1alpha1.Provisioning.ProvisionDeployment].
      type: object
      properties:
        errorMessage:
          description: >-
            Optional. Optional error message if the provisioning request is not
            successful.
          type: string
    SasPortalListLegacyOrganizationsResponse:
      id: SasPortalListLegacyOrganizationsResponse
      description: >-
        Response for [ListLegacyOrganizations].
        [spectrum.sas.portal.v1alpha1.Provisioning.ListLegacyOrganizations].
      type: object
      properties:
        organizations:
          description: Optional. Legacy SAS organizations.
          type: array
          items:
            $ref: '#/components/schemas/SasPortalOrganization'
    SasPortalOrganization:
      id: SasPortalOrganization
      description: Organization details.
      type: object
      properties:
        id:
          description: Id of organization
          type: string
          format: int64
        displayName:
          description: Name of organization
          type: string
    SasPortalMigrateOrganizationRequest:
      id: SasPortalMigrateOrganizationRequest
      description: >-
        Request for [MigrateOrganization].
        [spectrum.sas.portal.v1alpha1.Provisioning.MigrateOrganization]. GCP
        Project, Organization Info, and caller's GAIA ID should be retrieved
        from the RPC handler, and used to check authorization on SAS Portal
        organization and to create GCP Projects.
      type: object
      properties:
        organizationId:
          description: Required. Id of the SAS organization to be migrated.
          type: string
          format: int64
    SasPortalOperation:
      id: SasPortalOperation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/SasPortalStatus'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    SasPortalStatus:
      id: SasPortalStatus
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    SasPortalSetupSasAnalyticsRequest:
      id: SasPortalSetupSasAnalyticsRequest
      description: Request for the SetupSasAnalytics rpc.
      type: object
      properties:
        userId:
          description: >-
            Optional. User id to setup analytics for, if not provided the user
            id associated with the project is used. optional
          type: string
    SasPortalDevice:
      id: SasPortalDevice
      type: object
      properties:
        name:
          description: Output only. The resource path name.
          type: string
        fccId:
          description: >-
            The FCC identifier of the device. Refer to
            https://www.fcc.gov/oet/ea/fccid for FccID format. Accept
            underscores and periods because some test-SAS customers use them.
          type: string
        serialNumber:
          description: A serial number assigned to the device by the device manufacturer.
          type: string
        preloadedConfig:
          description: Configuration of the device, as specified via SAS Portal API.
          $ref: '#/components/schemas/SasPortalDeviceConfig'
        activeConfig:
          description: >-
            Output only. Current configuration of the device as registered to
            the SAS.
          $ref: '#/components/schemas/SasPortalDeviceConfig'
        state:
          description: Output only. Device state.
          type: string
          enumDescriptions:
            - Unspecified state.
            - >-
              Device created in the SAS Portal, however, not yet registered with
              SAS.
            - Device registered with SAS.
            - Device de-registered with SAS.
          enum:
            - DEVICE_STATE_UNSPECIFIED
            - RESERVED
            - REGISTERED
            - DEREGISTERED
        grants:
          description: Output only. Grants held by the device.
          type: array
          items:
            $ref: '#/components/schemas/SasPortalDeviceGrant'
        displayName:
          description: Device display name.
          type: string
        deviceMetadata:
          description: >-
            Device parameters that can be overridden by both SAS Portal and SAS
            registration requests.
          $ref: '#/components/schemas/SasPortalDeviceMetadata'
        currentChannels:
          description: Output only. Current channels with scores.
          readOnly: true
          deprecated: true
          type: array
          items:
            $ref: '#/components/schemas/SasPortalChannelWithScore'
        grantRangeAllowlists:
          description: >-
            Only ranges that are within the allowlists are available for new
            grants.
          type: array
          items:
            $ref: '#/components/schemas/SasPortalFrequencyRange'
    SasPortalDeviceConfig:
      id: SasPortalDeviceConfig
      description: Information about the device configuration.
      type: object
      properties:
        category:
          description: FCC category of the device.
          type: string
          enumDescriptions:
            - Unspecified device category.
            - Category A.
            - Category B.
          enum:
            - DEVICE_CATEGORY_UNSPECIFIED
            - DEVICE_CATEGORY_A
            - DEVICE_CATEGORY_B
        model:
          description: Information about this device model.
          $ref: '#/components/schemas/SasPortalDeviceModel'
        airInterface:
          description: Information about this device's air interface.
          $ref: '#/components/schemas/SasPortalDeviceAirInterface'
        installationParams:
          description: Installation parameters for the device.
          $ref: '#/components/schemas/SasPortalInstallationParams'
        measurementCapabilities:
          description: Measurement reporting capabilities of the device.
          type: array
          items:
            type: string
            enumDescriptions:
              - ''
              - ''
              - ''
            enum:
              - MEASUREMENT_CAPABILITY_UNSPECIFIED
              - MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITH_GRANT
              - MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITHOUT_GRANT
        userId:
          description: The identifier of a device user.
          type: string
        callSign:
          description: The call sign of the device operator.
          type: string
        state:
          description: State of the configuration.
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - DEVICE_CONFIG_STATE_UNSPECIFIED
            - DRAFT
            - FINAL
        isSigned:
          description: Output only. Whether the configuration has been signed by a CPI.
          type: boolean
        updateTime:
          description: Output only. The last time the device configuration was edited.
          type: string
          format: google-datetime
    SasPortalDeviceModel:
      id: SasPortalDeviceModel
      description: Information about the model of the device.
      type: object
      properties:
        vendor:
          description: The name of the device vendor.
          type: string
        name:
          description: The name of the device model.
          type: string
        softwareVersion:
          description: The software version of the device.
          type: string
        hardwareVersion:
          description: The hardware version of the device.
          type: string
        firmwareVersion:
          description: The firmware version of the device.
          type: string
    SasPortalDeviceAirInterface:
      id: SasPortalDeviceAirInterface
      description: Information about the device's air interface.
      type: object
      properties:
        radioTechnology:
          description: >-
            Conditional. This field specifies the radio access technology that
            is used for the CBSD.
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - RADIO_TECHNOLOGY_UNSPECIFIED
            - E_UTRA
            - CAMBIUM_NETWORKS
            - FOUR_G_BBW_SAA_1
            - NR
            - DOODLE_CBRS
            - CW
            - REDLINE
            - TARANA_WIRELESS
            - FAROS
        supportedSpec:
          description: >-
            Optional. This field is related to the `radioTechnology` and
            provides the air interface specification that the CBSD is compliant
            with at the time of registration.
          type: string
    SasPortalInstallationParams:
      id: SasPortalInstallationParams
      description: Information about the device installation parameters.
      type: object
      properties:
        latitude:
          description: >-
            Latitude of the device antenna location in degrees relative to the
            WGS 84 datum. The allowed range is from -90.000000 to +90.000000.
            Positive values represent latitudes north of the equator; negative
            values south of the equator.
          type: number
          format: double
        longitude:
          description: >-
            Longitude of the device antenna location in degrees relative to the
            WGS 84 datum. The allowed range is from -180.000000 to +180.000000.
            Positive values represent longitudes east of the prime meridian;
            negative values west of the prime meridian.
          type: number
          format: double
        height:
          description: >-
            Device antenna height in meters. When the `heightType` parameter
            value is "AGL", the antenna height should be given relative to
            ground level. When the `heightType` parameter value is "AMSL", it is
            given with respect to WGS84 datum.
          type: number
          format: double
        heightType:
          description: Specifies how the height is measured.
          type: string
          enumDescriptions:
            - Unspecified height type.
            - AGL height is measured relative to the ground level.
            - AMSL height is measured relative to the mean sea level.
          enum:
            - HEIGHT_TYPE_UNSPECIFIED
            - HEIGHT_TYPE_AGL
            - HEIGHT_TYPE_AMSL
        horizontalAccuracy:
          description: >-
            A positive number in meters to indicate accuracy of the device
            antenna horizontal location. This optional parameter should only be
            present if its value is less than the FCC requirement of 50 meters.
          type: number
          format: double
        verticalAccuracy:
          description: >-
            A positive number in meters to indicate accuracy of the device
            antenna vertical location. This optional parameter should only be
            present if its value is less than the FCC requirement of 3 meters.
          type: number
          format: double
        indoorDeployment:
          description: >-
            Whether the device antenna is indoor or not. `true`: indoor.
            `false`: outdoor.
          type: boolean
        antennaAzimuth:
          description: >-
            Boresight direction of the horizontal plane of the antenna in
            degrees with respect to true north. The value of this parameter is
            an integer with a value between 0 and 359 inclusive. A value of 0
            degrees means true north; a value of 90 degrees means east. This
            parameter is optional for Category A devices and conditional for
            Category B devices.
          type: integer
          format: int32
        antennaDowntilt:
          description: >-
            Antenna downtilt in degrees and is an integer with a value between
            -90 and +90 inclusive; a negative value means the antenna is tilted
            up (above horizontal). This parameter is optional for Category A
            devices and conditional for Category B devices.
          type: integer
          format: int32
        antennaGain:
          description: >-
            Peak antenna gain in dBi. This parameter is a double with a value
            between -127 and +128 (dBi) inclusive. Part of Release 2 to support
            floating-point value
          type: number
          format: double
        eirpCapability:
          description: >-
            This parameter is the maximum device EIRP in units of dBm/10MHz and
            is an integer with a value between -127 and +47 (dBm/10 MHz)
            inclusive. If not included, SAS interprets it as maximum allowable
            EIRP in units of dBm/10MHz for device category.
          type: integer
          format: int32
        antennaBeamwidth:
          description: >-
            3-dB antenna beamwidth of the antenna in the horizontal-plane in
            degrees. This parameter is an unsigned integer having a value
            between 0 and 360 (degrees) inclusive; it is optional for Category A
            devices and conditional for Category B devices.
          type: integer
          format: int32
        antennaModel:
          description: >-
            If an external antenna is used, the antenna model is optionally
            provided in this field. The string has a maximum length of 128
            octets.
          type: string
        cpeCbsdIndication:
          description: >-
            If present, this parameter specifies whether the CBSD is a CPE-CBSD
            or not.
          type: boolean
    SasPortalDeviceGrant:
      id: SasPortalDeviceGrant
      description: >-
        Device grant. It is an authorization provided by the Spectrum Access
        System to a device to transmit using specified operating parameters
        after a successful heartbeat by the device.
      type: object
      properties:
        maxEirp:
          description: >-
            Maximum Equivalent Isotropically Radiated Power (EIRP) permitted by
            the grant. The maximum EIRP is in units of dBm/MHz. The value of
            `maxEirp` represents the average (RMS) EIRP that would be measured
            by the procedure defined in FCC part 96.41(e)(3).
          type: number
          format: double
        frequencyRange:
          description: The transmission frequency range.
          $ref: '#/components/schemas/SasPortalFrequencyRange'
        state:
          description: State of the grant.
          type: string
          enumDescriptions:
            - ''
            - >-
              The grant has been granted but the device is not heartbeating on
              it.
            - The grant has been terminated by the SAS.
            - The grant has been suspended by the SAS.
            - The device is currently transmitting.
            - The grant has expired.
          enum:
            - GRANT_STATE_UNSPECIFIED
            - GRANT_STATE_GRANTED
            - GRANT_STATE_TERMINATED
            - GRANT_STATE_SUSPENDED
            - GRANT_STATE_AUTHORIZED
            - GRANT_STATE_EXPIRED
        channelType:
          description: Type of channel used.
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - CHANNEL_TYPE_UNSPECIFIED
            - CHANNEL_TYPE_GAA
            - CHANNEL_TYPE_PAL
        moveList:
          description: The DPA move lists on which this grant appears.
          type: array
          items:
            $ref: '#/components/schemas/SasPortalDpaMoveList'
        expireTime:
          description: The expiration time of the grant.
          type: string
          format: google-datetime
        suspensionReason:
          description: If the grant is suspended, the reason(s) for suspension.
          type: array
          items:
            type: string
        grantId:
          description: Grant Id.
          type: string
        lastHeartbeatTransmitExpireTime:
          description: The transmit expiration time of the last heartbeat.
          type: string
          format: google-datetime
    SasPortalFrequencyRange:
      id: SasPortalFrequencyRange
      description: Frequency range from `low_frequency` to `high_frequency`.
      type: object
      properties:
        lowFrequencyMhz:
          description: The lowest frequency of the frequency range in MHz.
          type: number
          format: double
        highFrequencyMhz:
          description: The highest frequency of the frequency range in MHz.
          type: number
          format: double
    SasPortalDpaMoveList:
      id: SasPortalDpaMoveList
      description: An entry in a DPA's move list.
      type: object
      properties:
        dpaId:
          description: The ID of the DPA.
          type: string
        frequencyRange:
          description: The frequency range that the move list affects.
          $ref: '#/components/schemas/SasPortalFrequencyRange'
    SasPortalDeviceMetadata:
      id: SasPortalDeviceMetadata
      description: Device data overridable by both SAS Portal and registration requests.
      type: object
      properties:
        interferenceCoordinationGroup:
          description: >-
            Interference Coordination Group (ICG). A group of CBSDs that manage
            their own interference with the group. For more details, see
            [CBRSA-TS-2001
            V3.0.0](https://ongoalliance.org/wp-content/uploads/2020/02/CBRSA-TS-2001-V3.0.0_Approved-for-publication.pdf).
          type: string
        commonChannelGroup:
          description: >-
            Common Channel Group (CCG). A group of CBSDs in the same ICG
            requesting a common primary channel assignment. For more details,
            see [CBRSA-TS-2001
            V3.0.0](https://ongoalliance.org/wp-content/uploads/2020/02/CBRSA-TS-2001-V3.0.0_Approved-for-publication.pdf).
          type: string
        antennaModel:
          description: >-
            If populated, the Antenna Model Pattern to use. Format is:
            `RecordCreatorId:PatternId`
          type: string
        nrqzValidated:
          description: >-
            Output only. Set to `true` if a CPI has validated that they have
            coordinated with the National Quiet Zone office.
          readOnly: true
          deprecated: true
          type: boolean
        nrqzValidation:
          description: Output only. National Radio Quiet Zone validation info.
          readOnly: true
          $ref: '#/components/schemas/SasPortalNrqzValidation'
    SasPortalNrqzValidation:
      id: SasPortalNrqzValidation
      description: Information about National Radio Quiet Zone validation.
      type: object
      properties:
        caseId:
          description: Validation case ID.
          type: string
        latitude:
          description: Device latitude that's associated with the validation.
          type: number
          format: double
        longitude:
          description: Device longitude that's associated with the validation.
          type: number
          format: double
        cpiId:
          description: CPI who signed the validation.
          type: string
        state:
          description: State of the NRQZ validation info.
          type: string
          enumDescriptions:
            - Unspecified state.
            - Draft state.
            - Final state.
          enum:
            - STATE_UNSPECIFIED
            - DRAFT
            - FINAL
    SasPortalChannelWithScore:
      id: SasPortalChannelWithScore
      description: The channel with score.
      type: object
      properties:
        frequencyRange:
          description: The frequency range of the channel.
          $ref: '#/components/schemas/SasPortalFrequencyRange'
        score:
          description: The channel score, normalized to be in the range [0,100].
          type: number
          format: double
    SasPortalCreateSignedDeviceRequest:
      id: SasPortalCreateSignedDeviceRequest
      description: Request for CreateSignedDevice.
      type: object
      properties:
        encodedDevice:
          description: >-
            Required. JSON Web Token signed using a CPI private key. Payload
            must be the JSON encoding of the device. The user_id field must be
            set.
          type: string
          format: byte
        installerId:
          description: >-
            Required. Unique installer id (CPI ID) from the Certified
            Professional Installers database.
          type: string
    SasPortalEmpty:
      id: SasPortalEmpty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    SasPortalListDevicesResponse:
      id: SasPortalListDevicesResponse
      description: Response for ListDevices.
      type: object
      properties:
        devices:
          description: The devices that match the request.
          type: array
          items:
            $ref: '#/components/schemas/SasPortalDevice'
        nextPageToken:
          description: >-
            A pagination token returned from a previous call to ListDevices that
            indicates from where listing should continue. If the field is
            missing or empty, it means there is no more devices.
          type: string
    SasPortalMoveDeviceRequest:
      id: SasPortalMoveDeviceRequest
      description: Request for MoveDevice.
      type: object
      properties:
        destination:
          description: >-
            Required. The name of the new parent resource node or customer to
            reparent the device under.
          type: string
    SasPortalUpdateSignedDeviceRequest:
      id: SasPortalUpdateSignedDeviceRequest
      description: Request for UpdateSignedDevice.
      type: object
      properties:
        encodedDevice:
          description: >-
            Required. The JSON Web Token signed using a CPI private key. Payload
            must be the JSON encoding of the device. The user_id field must be
            set.
          type: string
          format: byte
        installerId:
          description: >-
            Required. Unique installer ID (CPI ID) from the Certified
            Professional Installers database.
          type: string
    SasPortalSignDeviceRequest:
      id: SasPortalSignDeviceRequest
      description: Request for SignDevice.
      type: object
      properties:
        device:
          description: >-
            Required. The device to sign. The device fields name, fcc_id and
            serial_number must be set. The user_id field must be set.
          $ref: '#/components/schemas/SasPortalDevice'
    SasPortalNode:
      id: SasPortalNode
      description: The Node.
      type: object
      properties:
        name:
          description: Output only. Resource name.
          type: string
        displayName:
          description: The node's display name.
          type: string
        sasUserIds:
          description: User ids used by the devices belonging to this node.
          type: array
          items:
            type: string
    SasPortalListNodesResponse:
      id: SasPortalListNodesResponse
      description: Response for ListNodes.
      type: object
      properties:
        nodes:
          description: The nodes that match the request.
          type: array
          items:
            $ref: '#/components/schemas/SasPortalNode'
        nextPageToken:
          description: >-
            A pagination token returned from a previous call to ListNodes that
            indicates from where listing should continue. If the field is
            missing or empty, it means there is no more nodes.
          type: string
    SasPortalMoveNodeRequest:
      id: SasPortalMoveNodeRequest
      description: Request for MoveNode.
      type: object
      properties:
        destination:
          description: >-
            Required. The name of the new parent resource node or customer to
            reparent the node under.
          type: string
    SasPortalGenerateSecretRequest:
      id: SasPortalGenerateSecretRequest
      description: Request for GenerateSecret.
      type: object
      properties: {}
    SasPortalGenerateSecretResponse:
      id: SasPortalGenerateSecretResponse
      description: Response for GenerateSecret.
      type: object
      properties:
        secret:
          description: The secret generated by the string and used by ValidateInstaller.
          type: string
    SasPortalValidateInstallerRequest:
      id: SasPortalValidateInstallerRequest
      description: Request for ValidateInstaller.
      type: object
      properties:
        installerId:
          description: >-
            Required. Unique installer id (CPI ID) from the Certified
            Professional Installers database.
          type: string
        secret:
          description: Required. Secret returned by the GenerateSecret.
          type: string
        encodedSecret:
          description: >-
            Required. JSON Web Token signed using a CPI private key. Payload
            must include a "secret" claim whose value is the secret.
          type: string
    SasPortalValidateInstallerResponse:
      id: SasPortalValidateInstallerResponse
      description: Response for ValidateInstaller.
      type: object
      properties: {}
    SasPortalListDeploymentsResponse:
      id: SasPortalListDeploymentsResponse
      description: Response for ListDeployments.
      type: object
      properties:
        deployments:
          description: The deployments that match the request.
          type: array
          items:
            $ref: '#/components/schemas/SasPortalDeployment'
        nextPageToken:
          description: >-
            A pagination token returned from a previous call to ListDeployments
            that indicates from where listing should continue. If the field is
            missing or empty, it means there are no more deployments.
          type: string
    SasPortalMoveDeploymentRequest:
      id: SasPortalMoveDeploymentRequest
      description: Request for MoveDeployment.
      type: object
      properties:
        destination:
          description: >-
            Required. The name of the new parent resource node or customer to
            reparent the deployment under.
          type: string
    SasPortalSetPolicyRequest:
      id: SasPortalSetPolicyRequest
      description: Request message for `SetPolicy` method.
      type: object
      properties:
        resource:
          description: >-
            Required. The resource for which the policy is being specified. This
            policy replaces any existing policy.
          type: string
        policy:
          description: Required. The policy to be applied to the `resource`.
          $ref: '#/components/schemas/SasPortalPolicy'
        disableNotification:
          description: >-
            Optional. Set the field as `true` to disable the onboarding
            notification.
          type: boolean
    SasPortalPolicy:
      id: SasPortalPolicy
      description: Defines an access control policy to the resources.
      type: object
      properties:
        assignments:
          description: List of assignments
          type: array
          items:
            $ref: '#/components/schemas/SasPortalAssignment'
        etag:
          description: >-
            The etag is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the etag in
            the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An etag is returned in the response to
            GetPolicy, and systems are expected to put that etag in the request
            to SetPolicy to ensure that their change will be applied to the same
            version of the policy. If no etag is provided in the call to
            GetPolicy, then the existing policy is overwritten blindly.
          type: string
          format: byte
    SasPortalAssignment:
      id: SasPortalAssignment
      description: Associates `members` with a `role`.
      type: object
      properties:
        role:
          description: Required. Role that is assigned to `members`.
          type: string
        members:
          description: >-
            The identities the role is assigned to. It can have the following
            values: * `{user_email}`: An email address that represents a
            specific Google account. For example: `alice@gmail.com`. *
            `{group_email}`: An email address that represents a Google group.
            For example, `viewers@gmail.com`.
          type: array
          items:
            type: string
    SasPortalGetPolicyRequest:
      id: SasPortalGetPolicyRequest
      description: Request message for `GetPolicy` method.
      type: object
      properties:
        resource:
          description: Required. The resource for which the policy is being requested.
          type: string
    SasPortalTestPermissionsRequest:
      id: SasPortalTestPermissionsRequest
      description: Request message for `TestPermissions` method.
      type: object
      properties:
        resource:
          description: >-
            Required. The resource for which the permissions are being
            requested.
          type: string
        permissions:
          description: The set of permissions to check for the `resource`.
          type: array
          items:
            type: string
    SasPortalTestPermissionsResponse:
      id: SasPortalTestPermissionsResponse
      description: Response message for `TestPermissions` method.
      type: object
      properties:
        permissions:
          description: A set of permissions that the caller is allowed.
          type: array
          items:
            type: string
    SasPortalMigrateOrganizationMetadata:
      id: SasPortalMigrateOrganizationMetadata
      description: >-
        Long-running operation metadata message returned by the
        MigrateOrganization.
      type: object
      properties:
        operationState:
          description: Output only. Current operation state
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified.
            - Pending (Not started).
            - In-progress.
            - Done successfully.
            - Done with errors.
          enum:
            - OPERATION_STATE_UNSPECIFIED
            - OPERATION_STATE_PENDING
            - OPERATION_STATE_RUNNING
            - OPERATION_STATE_SUCCEEDED
            - OPERATION_STATE_FAILED
    SasPortalMigrateOrganizationResponse:
      id: SasPortalMigrateOrganizationResponse
      description: >-
        Response for [MigrateOrganization].
        [spectrum.sas.portal.v1alpha1.Provisioning.MigrateOrganization].
      type: object
      properties:
        deploymentAssociation:
          description: >-
            Optional. A list of deployment association that were created for the
            migration, or current associations if they already exist.
          type: array
          items:
            $ref: '#/components/schemas/SasPortalDeploymentAssociation'
    SasPortalDeploymentAssociation:
      id: SasPortalDeploymentAssociation
      description: Association between a gcp project and a SAS user id.
      type: object
      properties:
        userId:
          description: User id of the deployment.
          type: string
        gcpProjectId:
          description: GCP project id of the associated project.
          type: string
    SasPortalSetupSasAnalyticsMetadata:
      id: SasPortalSetupSasAnalyticsMetadata
      description: >-
        Metadata returned by the long running operation for the
        SetupSasAnalytics rpc.
      type: object
      properties: {}
    SasPortalSetupSasAnalyticsResponse:
      id: SasPortalSetupSasAnalyticsResponse
      description: >-
        Response returned by the long running operation for the
        SetupSasAnalytics rpc.
      type: object
      properties: {}
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    customers:
      id: google.prod_tt_sasportal.customers
      name: customers
      title: Customers
      methods:
        customers_get:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers~1{customersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_patch:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers~1{customersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_list:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.customers
        customers_provision_deployment:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers:provisionDeployment/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_migrate_organization:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers:migrateOrganization/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_setup_sas_analytics:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers:setupSasAnalytics/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/customers/methods/customers_get'
          - $ref: '#/components/x-stackQL-resources/customers/methods/customers_list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/customers/methods/customers_patch'
        replace: []
        delete: []
    customers_gcp_project_deployments:
      id: google.prod_tt_sasportal.customers_gcp_project_deployments
      name: customers_gcp_project_deployments
      title: Customers_gcp_project_deployments
      methods:
        customers_list_gcp_project_deployments:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers:listGcpProjectDeployments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/customers_gcp_project_deployments/methods/customers_list_gcp_project_deployments
        insert: []
        update: []
        replace: []
        delete: []
    customers_legacy_organizations:
      id: google.prod_tt_sasportal.customers_legacy_organizations
      name: customers_legacy_organizations
      title: Customers_legacy_organizations
      methods:
        customers_list_legacy_organizations:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers:listLegacyOrganizations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/customers_legacy_organizations/methods/customers_list_legacy_organizations
        insert: []
        update: []
        replace: []
        delete: []
    devices:
      id: google.prod_tt_sasportal.devices
      name: devices
      title: Devices
      methods:
        customers_devices_create:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers~1{customersId}~1devices/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_devices_list:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers~1{customersId}~1devices/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.devices
        customers_devices_delete:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1devices~1{devicesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_devices_get:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1devices~1{devicesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_devices_patch:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1devices~1{devicesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_devices_move:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1devices~1{devicesId}:move/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_devices_sign_device:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1devices~1{devicesId}:signDevice/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_nodes_devices_create:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}~1devices/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_nodes_devices_list:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}~1devices/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.devices
        customers_deployments_devices_create:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1deployments~1{deploymentsId}~1devices/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_deployments_devices_list:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1deployments~1{deploymentsId}~1devices/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.devices
        nodes_devices_create:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1devices/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_devices_list:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1devices/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.devices
        nodes_devices_delete:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1devices~1{devicesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_devices_get:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1devices~1{devicesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_devices_patch:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1devices~1{devicesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_devices_move:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1devices~1{devicesId}:move/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_devices_sign_device:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1devices~1{devicesId}:signDevice/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_nodes_devices_create:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}~1devices/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_nodes_devices_list:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}~1devices/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.devices
        nodes_deployments_devices_create:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1deployments~1{deploymentsId}~1devices/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_deployments_devices_list:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1deployments~1{deploymentsId}~1devices/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.devices
        deployments_devices_delete:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1deployments~1{deploymentsId}~1devices~1{devicesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deployments_devices_get:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1deployments~1{deploymentsId}~1devices~1{devicesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deployments_devices_patch:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1deployments~1{deploymentsId}~1devices~1{devicesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deployments_devices_move:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1deployments~1{deploymentsId}~1devices~1{devicesId}:move/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deployments_devices_sign_device:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1deployments~1{deploymentsId}~1devices~1{devicesId}:signDevice/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/customers_devices_get
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/customers_nodes_devices_list
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/customers_deployments_devices_list
          - $ref: '#/components/x-stackQL-resources/devices/methods/nodes_devices_get'
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/nodes_nodes_devices_list
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/nodes_deployments_devices_list
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/deployments_devices_get
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/customers_devices_list
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/nodes_devices_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/customers_nodes_devices_create
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/customers_deployments_devices_create
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/nodes_nodes_devices_create
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/nodes_deployments_devices_create
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/customers_devices_create
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/nodes_devices_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/customers_devices_patch
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/nodes_devices_patch
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/deployments_devices_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/customers_devices_delete
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/nodes_devices_delete
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/deployments_devices_delete
    devices_signed:
      id: google.prod_tt_sasportal.devices_signed
      name: devices_signed
      title: Devices_signed
      methods:
        customers_devices_create_signed:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1devices:createSigned/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_devices_update_signed:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1devices~1{devicesId}:updateSigned/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_nodes_devices_create_signed:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}~1devices:createSigned/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_deployments_devices_create_signed:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1deployments~1{deploymentsId}~1devices:createSigned/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_devices_create_signed:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1devices:createSigned/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_devices_update_signed:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1devices~1{devicesId}:updateSigned/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_nodes_devices_create_signed:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}~1devices:createSigned/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_deployments_devices_create_signed:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1deployments~1{deploymentsId}~1devices:createSigned/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deployments_devices_update_signed:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1deployments~1{deploymentsId}~1devices~1{devicesId}:updateSigned/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/devices_signed/methods/customers_nodes_devices_create_signed
          - $ref: >-
              #/components/x-stackQL-resources/devices_signed/methods/customers_deployments_devices_create_signed
          - $ref: >-
              #/components/x-stackQL-resources/devices_signed/methods/nodes_nodes_devices_create_signed
          - $ref: >-
              #/components/x-stackQL-resources/devices_signed/methods/nodes_deployments_devices_create_signed
          - $ref: >-
              #/components/x-stackQL-resources/devices_signed/methods/customers_devices_create_signed
          - $ref: >-
              #/components/x-stackQL-resources/devices_signed/methods/nodes_devices_create_signed
        update:
          - $ref: >-
              #/components/x-stackQL-resources/devices_signed/methods/customers_devices_update_signed
          - $ref: >-
              #/components/x-stackQL-resources/devices_signed/methods/nodes_devices_update_signed
          - $ref: >-
              #/components/x-stackQL-resources/devices_signed/methods/deployments_devices_update_signed
        replace: []
        delete: []
    customer_nodes:
      id: google.prod_tt_sasportal.customer_nodes
      name: customer_nodes
      title: Customer_nodes
      methods:
        customers_nodes_create:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers~1{customersId}~1nodes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_nodes_list:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers~1{customersId}~1nodes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.nodes
        customers_nodes_delete:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_nodes_nodes_create:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}~1nodes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_nodes_nodes_list:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}~1nodes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.nodes
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/customer_nodes/methods/customers_nodes_nodes_list
          - $ref: >-
              #/components/x-stackQL-resources/customer_nodes/methods/customers_nodes_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/customer_nodes/methods/customers_nodes_nodes_create
          - $ref: >-
              #/components/x-stackQL-resources/customer_nodes/methods/customers_nodes_create
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/customer_nodes/methods/customers_nodes_delete
    customer_node:
      id: google.prod_tt_sasportal.customer_node
      name: customer_node
      title: Customer_node
      methods:
        customers_nodes_get:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/customer_node/methods/customers_nodes_get
        insert: []
        update: []
        replace: []
        delete: []
    nodes:
      id: google.prod_tt_sasportal.nodes
      name: nodes
      title: Nodes
      methods:
        customers_nodes_patch:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_nodes_move:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}:move/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_nodes_create:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_nodes_list:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.nodes
        nodes_nodes_delete:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_nodes_patch:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_nodes_move:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}:move/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_nodes_nodes_create:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}~1nodes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_nodes_nodes_list:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}~1nodes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.nodes
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/nodes/methods/nodes_nodes_nodes_list
          - $ref: '#/components/x-stackQL-resources/nodes/methods/nodes_nodes_list'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/nodes/methods/nodes_nodes_nodes_create
          - $ref: '#/components/x-stackQL-resources/nodes/methods/nodes_nodes_create'
        update:
          - $ref: >-
              #/components/x-stackQL-resources/nodes/methods/customers_nodes_patch
          - $ref: '#/components/x-stackQL-resources/nodes/methods/nodes_nodes_patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/nodes/methods/nodes_nodes_delete'
    deployments:
      id: google.prod_tt_sasportal.deployments
      name: deployments
      title: Deployments
      methods:
        customers_nodes_deployments_create:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}~1deployments/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_nodes_deployments_list:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}~1deployments/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.deployments
        customers_deployments_create:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers~1{customersId}~1deployments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_deployments_list:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers~1{customersId}~1deployments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.deployments
        customers_deployments_delete:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1deployments~1{deploymentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_deployments_get:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1deployments~1{deploymentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_deployments_patch:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1deployments~1{deploymentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_deployments_move:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1deployments~1{deploymentsId}:move/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_nodes_deployments_create:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}~1deployments/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_nodes_deployments_list:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}~1deployments/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.deployments
        nodes_deployments_delete:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1deployments~1{deploymentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_deployments_get:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1deployments~1{deploymentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_deployments_patch:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1deployments~1{deploymentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_deployments_list:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1deployments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.deployments
        nodes_deployments_move:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1deployments~1{deploymentsId}:move/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deployments_get:
          operation:
            $ref: '#/paths/~1v1alpha1~1deployments~1{deploymentsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/customers_nodes_deployments_list
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/customers_deployments_get
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/nodes_nodes_deployments_list
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/nodes_deployments_get
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/customers_deployments_list
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/nodes_deployments_list
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/deployments_get
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/customers_nodes_deployments_create
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/nodes_nodes_deployments_create
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/customers_deployments_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/customers_deployments_patch
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/nodes_deployments_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/customers_deployments_delete
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/nodes_deployments_delete
    node:
      id: google.prod_tt_sasportal.node
      name: node
      title: Node
      methods:
        nodes_get:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_nodes_get:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/node/methods/nodes_nodes_get'
          - $ref: '#/components/x-stackQL-resources/node/methods/nodes_get'
        insert: []
        update: []
        replace: []
        delete: []
    installer:
      id: google.prod_tt_sasportal.installer
      name: installer
      title: Installer
      methods:
        installer_generate_secret:
          operation:
            $ref: '#/paths/~1v1alpha1~1installer:generateSecret/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        installer_validate:
          operation:
            $ref: '#/paths/~1v1alpha1~1installer:validate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    policies:
      id: google.prod_tt_sasportal.policies
      name: policies
      title: Policies
      methods:
        policies_set:
          operation:
            $ref: '#/paths/~1v1alpha1~1policies:set/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        policies_get:
          operation:
            $ref: '#/paths/~1v1alpha1~1policies:get/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        policies_test:
          operation:
            $ref: '#/paths/~1v1alpha1~1policies:test/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/policies/methods/policies_get'
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1alpha1/customers/{customersId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Returns a requested customer.
      operationId: prod_tt_sasportal.customers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalCustomer'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
    patch:
      description: Updates an existing customer.
      operationId: prod_tt_sasportal.customers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalCustomer'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalCustomer'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1alpha1/customers:
    parameters: *ref_1
    get:
      description: Returns a list of requested customers.
      operationId: prod_tt_sasportal.customers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListCustomersResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1alpha1/customers:listGcpProjectDeployments:
    parameters: *ref_1
    get:
      description: >-
        Returns a list of SAS deployments associated with current GCP project.
        Includes whether SAS analytics has been enabled or not.
      operationId: prod_tt_sasportal.customers.listGcpProjectDeployments
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SasPortalListGcpProjectDeploymentsResponse
      parameters: []
  /v1alpha1/customers:provisionDeployment:
    parameters: *ref_1
    post:
      description: >-
        Creates a new SAS deployment through the GCP workflow. Creates a SAS
        organization if an organization match is not found.
      operationId: prod_tt_sasportal.customers.provisionDeployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalProvisionDeploymentRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalProvisionDeploymentResponse'
      parameters: []
  /v1alpha1/customers:listLegacyOrganizations:
    parameters: *ref_1
    get:
      description: Returns a list of legacy organizations.
      operationId: prod_tt_sasportal.customers.listLegacyOrganizations
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListLegacyOrganizationsResponse'
      parameters: []
  /v1alpha1/customers:migrateOrganization:
    parameters: *ref_1
    post:
      description: >-
        Migrates a SAS organization to the cloud. This will create GCP projects
        for each deployment and associate them. The SAS Organization is linked
        to the gcp project that called the command.
        go/sas-legacy-customer-migration
      operationId: prod_tt_sasportal.customers.migrateOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalMigrateOrganizationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalOperation'
      parameters: []
  /v1alpha1/customers:setupSasAnalytics:
    parameters: *ref_1
    post:
      description: >-
        Setups the a GCP Project to receive SAS Analytics messages via GCP
        Pub/Sub with a subscription to BigQuery. All the Pub/Sub topics and
        BigQuery tables are created automatically as part of this service.
      operationId: prod_tt_sasportal.customers.setupSasAnalytics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalSetupSasAnalyticsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalOperation'
      parameters: []
  /v1alpha1/customers/{customersId}/devices:
    parameters: *ref_1
    post:
      description: Creates a device under a node or customer.
      operationId: prod_tt_sasportal.customers.devices.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDevice'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
    get:
      description: Lists devices under a node or customer.
      operationId: prod_tt_sasportal.customers.devices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDevicesResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1alpha1/customers/{customersId}/devices:createSigned:
    parameters: *ref_1
    post:
      description: Creates a signed device under a node or customer.
      operationId: prod_tt_sasportal.customers.devices.createSigned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalCreateSignedDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/devices/{devicesId}:
    parameters: *ref_1
    delete:
      description: Deletes a device.
      operationId: prod_tt_sasportal.customers.devices.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
    get:
      description: Gets details about a device.
      operationId: prod_tt_sasportal.customers.devices.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
    patch:
      description: Updates a device.
      operationId: prod_tt_sasportal.customers.devices.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDevice'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1alpha1/customers/{customersId}/devices/{devicesId}:move:
    parameters: *ref_1
    post:
      description: Moves a device under another node or customer.
      operationId: prod_tt_sasportal.customers.devices.move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalMoveDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalOperation'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/devices/{devicesId}:updateSigned:
    parameters: *ref_1
    patch:
      description: Updates a signed device.
      operationId: prod_tt_sasportal.customers.devices.updateSigned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalUpdateSignedDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/devices/{devicesId}:signDevice:
    parameters: *ref_1
    post:
      description: Signs a device.
      operationId: prod_tt_sasportal.customers.devices.signDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalSignDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/nodes:
    parameters: *ref_1
    post:
      description: Creates a new node.
      operationId: prod_tt_sasportal.customers.nodes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalNode'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalNode'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
    get:
      description: Lists nodes.
      operationId: prod_tt_sasportal.customers.nodes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListNodesResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1alpha1/customers/{customersId}/nodes/{nodesId}:
    parameters: *ref_1
    delete:
      description: Deletes a node.
      operationId: prod_tt_sasportal.customers.nodes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
    get:
      description: Returns a requested node.
      operationId: prod_tt_sasportal.customers.nodes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalNode'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
    patch:
      description: Updates an existing node.
      operationId: prod_tt_sasportal.customers.nodes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalNode'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalNode'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1alpha1/customers/{customersId}/nodes/{nodesId}:move:
    parameters: *ref_1
    post:
      description: Moves a node under another node or customer.
      operationId: prod_tt_sasportal.customers.nodes.move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalMoveNodeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalOperation'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/nodes/{nodesId}/devices:
    parameters: *ref_1
    post:
      description: Creates a device under a node or customer.
      operationId: prod_tt_sasportal.customers.nodes.devices.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDevice'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
    get:
      description: Lists devices under a node or customer.
      operationId: prod_tt_sasportal.customers.nodes.devices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDevicesResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1alpha1/customers/{customersId}/nodes/{nodesId}/devices:createSigned:
    parameters: *ref_1
    post:
      description: Creates a signed device under a node or customer.
      operationId: prod_tt_sasportal.customers.nodes.devices.createSigned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalCreateSignedDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes:
    parameters: *ref_1
    post:
      description: Creates a new node.
      operationId: prod_tt_sasportal.customers.nodes.nodes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalNode'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalNode'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
    get:
      description: Lists nodes.
      operationId: prod_tt_sasportal.customers.nodes.nodes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListNodesResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1alpha1/customers/{customersId}/nodes/{nodesId}/deployments:
    parameters: *ref_1
    post:
      description: Creates a new deployment.
      operationId: prod_tt_sasportal.customers.nodes.deployments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDeployment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDeployment'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
    get:
      description: Lists deployments.
      operationId: prod_tt_sasportal.customers.nodes.deployments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDeploymentsResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1alpha1/customers/{customersId}/deployments:
    parameters: *ref_1
    post:
      description: Creates a new deployment.
      operationId: prod_tt_sasportal.customers.deployments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDeployment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDeployment'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
    get:
      description: Lists deployments.
      operationId: prod_tt_sasportal.customers.deployments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDeploymentsResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1alpha1/customers/{customersId}/deployments/{deploymentsId}:
    parameters: *ref_1
    delete:
      description: Deletes a deployment.
      operationId: prod_tt_sasportal.customers.deployments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
    get:
      description: Returns a requested deployment.
      operationId: prod_tt_sasportal.customers.deployments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDeployment'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
    patch:
      description: Updates an existing deployment.
      operationId: prod_tt_sasportal.customers.deployments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDeployment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDeployment'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1alpha1/customers/{customersId}/deployments/{deploymentsId}:move:
    parameters: *ref_1
    post:
      description: Moves a deployment under another node or customer.
      operationId: prod_tt_sasportal.customers.deployments.move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalMoveDeploymentRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalOperation'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices:
    parameters: *ref_1
    post:
      description: Creates a device under a node or customer.
      operationId: prod_tt_sasportal.customers.deployments.devices.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDevice'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
    get:
      description: Lists devices under a node or customer.
      operationId: prod_tt_sasportal.customers.deployments.devices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDevicesResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices:createSigned:
    parameters: *ref_1
    post:
      description: Creates a signed device under a node or customer.
      operationId: prod_tt_sasportal.customers.deployments.devices.createSigned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalCreateSignedDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}:
    parameters: *ref_1
    get:
      description: Returns a requested node.
      operationId: prod_tt_sasportal.nodes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalNode'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/devices:
    parameters: *ref_1
    post:
      description: Creates a device under a node or customer.
      operationId: prod_tt_sasportal.nodes.devices.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDevice'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
    get:
      description: Lists devices under a node or customer.
      operationId: prod_tt_sasportal.nodes.devices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDevicesResponse'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/devices:createSigned:
    parameters: *ref_1
    post:
      description: Creates a signed device under a node or customer.
      operationId: prod_tt_sasportal.nodes.devices.createSigned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalCreateSignedDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/devices/{devicesId}:
    parameters: *ref_1
    delete:
      description: Deletes a device.
      operationId: prod_tt_sasportal.nodes.devices.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
    get:
      description: Gets details about a device.
      operationId: prod_tt_sasportal.nodes.devices.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
    patch:
      description: Updates a device.
      operationId: prod_tt_sasportal.nodes.devices.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDevice'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1alpha1/nodes/{nodesId}/devices/{devicesId}:move:
    parameters: *ref_1
    post:
      description: Moves a device under another node or customer.
      operationId: prod_tt_sasportal.nodes.devices.move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalMoveDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalOperation'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/devices/{devicesId}:updateSigned:
    parameters: *ref_1
    patch:
      description: Updates a signed device.
      operationId: prod_tt_sasportal.nodes.devices.updateSigned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalUpdateSignedDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/devices/{devicesId}:signDevice:
    parameters: *ref_1
    post:
      description: Signs a device.
      operationId: prod_tt_sasportal.nodes.devices.signDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalSignDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/nodes:
    parameters: *ref_1
    post:
      description: Creates a new node.
      operationId: prod_tt_sasportal.nodes.nodes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalNode'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalNode'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
    get:
      description: Lists nodes.
      operationId: prod_tt_sasportal.nodes.nodes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListNodesResponse'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/nodes/{nodesId1}:
    parameters: *ref_1
    delete:
      description: Deletes a node.
      operationId: prod_tt_sasportal.nodes.nodes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
    get:
      description: Returns a requested node.
      operationId: prod_tt_sasportal.nodes.nodes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalNode'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
    patch:
      description: Updates an existing node.
      operationId: prod_tt_sasportal.nodes.nodes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalNode'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalNode'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1alpha1/nodes/{nodesId}/nodes/{nodesId1}:move:
    parameters: *ref_1
    post:
      description: Moves a node under another node or customer.
      operationId: prod_tt_sasportal.nodes.nodes.move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalMoveNodeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalOperation'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:
    parameters: *ref_1
    post:
      description: Creates a device under a node or customer.
      operationId: prod_tt_sasportal.nodes.nodes.devices.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDevice'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
    get:
      description: Lists devices under a node or customer.
      operationId: prod_tt_sasportal.nodes.nodes.devices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDevicesResponse'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:createSigned:
    parameters: *ref_1
    post:
      description: Creates a signed device under a node or customer.
      operationId: prod_tt_sasportal.nodes.nodes.devices.createSigned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalCreateSignedDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes:
    parameters: *ref_1
    post:
      description: Creates a new node.
      operationId: prod_tt_sasportal.nodes.nodes.nodes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalNode'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalNode'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
    get:
      description: Lists nodes.
      operationId: prod_tt_sasportal.nodes.nodes.nodes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListNodesResponse'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/deployments:
    parameters: *ref_1
    post:
      description: Creates a new deployment.
      operationId: prod_tt_sasportal.nodes.nodes.deployments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDeployment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDeployment'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
    get:
      description: Lists deployments.
      operationId: prod_tt_sasportal.nodes.nodes.deployments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDeploymentsResponse'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}:
    parameters: *ref_1
    delete:
      description: Deletes a deployment.
      operationId: prod_tt_sasportal.nodes.deployments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
    get:
      description: Returns a requested deployment.
      operationId: prod_tt_sasportal.nodes.deployments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDeployment'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
    patch:
      description: Updates an existing deployment.
      operationId: prod_tt_sasportal.nodes.deployments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDeployment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDeployment'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1alpha1/nodes/{nodesId}/deployments:
    parameters: *ref_1
    get:
      description: Lists deployments.
      operationId: prod_tt_sasportal.nodes.deployments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDeploymentsResponse'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}:move:
    parameters: *ref_1
    post:
      description: Moves a deployment under another node or customer.
      operationId: prod_tt_sasportal.nodes.deployments.move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalMoveDeploymentRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalOperation'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices:
    parameters: *ref_1
    post:
      description: Creates a device under a node or customer.
      operationId: prod_tt_sasportal.nodes.deployments.devices.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDevice'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
    get:
      description: Lists devices under a node or customer.
      operationId: prod_tt_sasportal.nodes.deployments.devices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDevicesResponse'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices:createSigned:
    parameters: *ref_1
    post:
      description: Creates a signed device under a node or customer.
      operationId: prod_tt_sasportal.nodes.deployments.devices.createSigned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalCreateSignedDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
  /v1alpha1/installer:generateSecret:
    parameters: *ref_1
    post:
      description: Generates a secret to be used with the ValidateInstaller.
      operationId: prod_tt_sasportal.installer.generateSecret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalGenerateSecretRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalGenerateSecretResponse'
      parameters: []
  /v1alpha1/installer:validate:
    parameters: *ref_1
    post:
      description: Validates the identity of a Certified Professional Installer (CPI).
      operationId: prod_tt_sasportal.installer.validate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalValidateInstallerRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalValidateInstallerResponse'
      parameters: []
  /v1alpha1/deployments/{deploymentsId}:
    parameters: *ref_1
    get:
      description: Returns a requested deployment.
      operationId: prod_tt_sasportal.deployments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDeployment'
      parameters:
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
  /v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:
    parameters: *ref_1
    delete:
      description: Deletes a device.
      operationId: prod_tt_sasportal.deployments.devices.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
    get:
      description: Gets details about a device.
      operationId: prod_tt_sasportal.deployments.devices.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
    patch:
      description: Updates a device.
      operationId: prod_tt_sasportal.deployments.devices.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDevice'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:move:
    parameters: *ref_1
    post:
      description: Moves a device under another node or customer.
      operationId: prod_tt_sasportal.deployments.devices.move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalMoveDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalOperation'
      parameters:
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:updateSigned:
    parameters: *ref_1
    patch:
      description: Updates a signed device.
      operationId: prod_tt_sasportal.deployments.devices.updateSigned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalUpdateSignedDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:signDevice:
    parameters: *ref_1
    post:
      description: Signs a device.
      operationId: prod_tt_sasportal.deployments.devices.signDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalSignDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1alpha1/policies:set:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: prod_tt_sasportal.policies.set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalSetPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalPolicy'
      parameters: []
  /v1alpha1/policies:get:
    parameters: *ref_1
    post:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: prod_tt_sasportal.policies.get
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalGetPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalPolicy'
      parameters: []
  /v1alpha1/policies:test:
    parameters: *ref_1
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: prod_tt_sasportal.policies.test
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalTestPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalTestPermissionsResponse'
      parameters: []
